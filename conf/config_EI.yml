##########################################
# Simulation parameters
##########################################
# output different prompts for debugging purpose
VERBOSE: 0

DEVICE: cuda

FLOAT_PRECISION: 32

# 1 to save the data to REPO_ROOT/data/simul
SAVE_DATA: 1

# Time step in s
DT: 0.001
# total simulation time in s
DURATION: 3.0
# time to start saving simulation files
T_STEADY: 1.0
# Saving to files every T_WINDOW
T_WINDOW: .250

##########################################
# Parameters for the stimulus presentation
##########################################
# stimulus as a cosine shape
# time for stimulus onset in s 
T_STIM_ON: 1.0
# time for stimulus offset in s 
T_STIM_OFF: 2.0
# amplitude of the 1st stimulus
I0: [0.0, 0.0]
# amplitude of the 2nd stimulus
I1: [0.0, 0.0]
# I1: [0.05, 0.0]
# Phase of the 1st stimulus
PHI0: 180.0
# Tuning of the 1st stimulus
SIGMA0: 1.0
# Phase difference between 1st/2nd stimuli
DPHI: 0.25

##########################################
# Network parameters
##########################################
# number of populations
N_POP: 2
# number of neurons
N_NEURON: 20000
# number of average presynaptic input (set to 1 if all to all)
K: 500.0
# fraction of neuron in each population (must sum to 1)
frac: [0.80, 0.20]

##########################################
# Network Dynamic
##########################################
# Transfert Function
# set to 0 for threshold linear, 1 for sigmoid
TF_TYPE: 'relu'

# Dynamics of the rates
# set to 0 if instantaneous rates, 1 if exponentially decaying
RATE_DYN: 1
# rate time constants in s
TAU: [0.04, 0.02]

# Dynamics of the recurrent inputs
# set to 0 if instantaneous, 1 if exponentially decaying
SYN_DYN: 1
# Synaptic time constants for each population
TAU_SYN: [0.003, 0.002]

# Adding NMDA currents
IF_NMDA: 1
# NMDA time constants in s
TAU_NMDA: [0.2, 0.2]

# Feedforward inputs dynamics
# set to 0 for instantaneous, 1 to exp decay, 2 adds gaussian noise
FF_DYN: 0
# FF time constants in s
TAU_FF: [0.003, 0.003]
# Variance of the noise
VAR_FF: [0.1, 0.1]

# Threshold dynamics
# set to 0 constant thresholds, 1 to add adaptative thresholds
THRESH_DYN: 0
# threshold
THRESH: [1.00, 1.00]
# threshold time constants
TAU_THRESH: [0.1, 0.1]

# Network's gain
GAIN: 1.0

# Synaptic strengths           
Jab: [1.0, -1.5, 1, -1]
# External inputs strengths
Ja0: [2.0, 1.0]
# External rate
M0: 1.0

# To add an attentional switch
# if BUMP_SWITCH[i] == 1 it sets Iext[i] to zero before stimulus presentation
BUMP_SWITCH: [0, 0]

########################
# Plasticity
########################
# adds learning
IF_LEARNING: 0
# adds short term plasticity
IF_STP: 0

##############
# Connectivity
##############
# load connectivity matrix
# from REPO_PATH/data/matrix
IF_LOAD_MAT: 0

# save connectivity matrix
IF_SAVE_MAT: 1

# seed for connectivity None or float
SEED: 0
# connectivity type
# STRUCTURE can be 'all', 'all_cos', 'cos', 'spec_cos'

# By default the matrix is a random sparse matrix Cij
# 'cos' gives a sparse matrix with strong cosine structure,
# Pij = (1 + 2 KAPPA cos(theta_ij) / sqrt(Kb)), Cij = 1 with proba Pij
# 'spec_cos' gives a sparse matrix with weak cosine structure,
# Pij = (1 + 2 KAPPA cos(theta_ij) / sqrt(Kb)) , Cij = 1 with proba Pij
# 'all' gives an all to all matrix, Cij = 1/N
# 'all_cos' gives an all to all with cosine shape,
# Cij = (1 + 2 KAPPA cos(theta_ij)) / N
# any other string gives a sparse matrix,
# Cij = 1 with proba Ka/Na, 0 otherwise

CONNECTIVITY: 'sparse'
# sets probabilities of connections' shape
STRUCTURE: ['cos_spec', 'None', 'None', 'None']
# tuning of the recurrent connections
KAPPA: [4.5, 0.0, 0.0, 0.0]
# phase of the connectivity
PHASE: 0.0

# covariance
LR_COV: 0.0

# strength of the asymmetries if all to all
SIGMA: [0.0, 0.0, 0.0, 0.0]
