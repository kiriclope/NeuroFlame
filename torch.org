#+STARTUP: fold
#+TITLE: RNN with pytorch
#+PROPERTY: header-args:ipython :results both :exports both :async yes :session torch :kernel torch

* Notebook Settings
#+begin_src ipython
  %load_ext autoreload
  %autoreload 2
  %reload_ext autoreload

  %run ./notebooks/setup.py
  %matplotlib inline
  %config InlineBackend.figure_format = 'png'
#+end_src

#+RESULTS:
: The autoreload extension is already loaded. To reload it, use:
:   %reload_ext autoreload
: Python exe
: /home/leon/mambaforge/envs/torch/bin/python

* RNN with torch
** Imports
#+begin_src ipython
  from src.network import Network
  from src.plot_utils import plot_con
#+end_src

#+RESULTS:
** Model
#+begin_src ipython
  REPO_ROOT = "/home/leon/models/NeuroTorch"
  model = Network('config_EI.yml', 'bump', REPO_ROOT, VERBOSE=1, DURATION=2)
#+end_src

#+RESULTS:
: Loading config from /home/leon/models/NeuroTorch/conf/config_EI.yml
: Jab [1, -1.5, 1, -1]
: Ja0 [0.5, 0.25]
: Sparse random connectivity 
: with strong cosine structure
: Sparse random connectivity 
: Sparse random connectivity 
: Sparse random connectivity 
** Connectivity
#+begin_src ipython
  Cij = model.Wab[0][0].weight.data.detach().numpy()
  plot_con(Cij)
#+end_src

#+RESULTS:
:RESULTS:
: /home/leon/mambaforge/envs/torch/lib/python3.10/site-packages/IPython/core/events.py:93: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
:   func(*args, **kwargs)
: /home/leon/mambaforge/envs/torch/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
:   fig.canvas.print_figure(bytes_io, **kw)
[[file:./.ob-jupyter/5809b9251f3cf1a43fd4b1b54b121c53d0b9cd72.png]]
:END:

** Simulation
#+begin_src ipython
  rates = model.run()
#+end_src

#+RESULTS:
: times (s) -1.0 rates (Hz) [0.56, 0.28]
: times (s) -0.75 rates (Hz) [2.0, 2.28]
: times (s) -0.5 rates (Hz) [2.05, 2.32]
: times (s) -0.25 rates (Hz) [2.12, 2.4]
: times (s) 0.0 rates (Hz) [2.16, 2.44]
: times (s) 0.25 rates (Hz) [2.15, 2.43]
: times (s) 0.5 rates (Hz) [2.16, 2.44]
: times (s) 0.75 rates (Hz) [2.16, 2.44]
: Elapsed (with compilation) = 9.703241745999549s

#+RESULTS:

#+begin_src ipython
  plt.imshow(rates.T, aspect='auto', cmap='jet', vmin=0, vmax=1)
  plt.colorbar()
  plt.show()
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/a57d8495af273a40a27923fbc2f4a556a36e2753.png]]

