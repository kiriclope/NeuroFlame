(undo-tree-save-format-version . 1)
"d1e01675c2a50a212eaedd8cd692fcd3db5701b7"
[nil nil nil nil (25919 38755 910769 907000) 0 nil]
([nil nil (("torch" . 2897) (t 25913 16042 740592 156000)) nil (25919 38755 910768 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2902 . 2903) (nil fontified nil 2898 . 2903) (2898 . 2903) 2897) nil (25919 38755 910767 314000) 0 nil])
([nil nil ((#("c" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (undo-tree-id44 . -1) (#("r" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (#("o" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (#("t" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (undo-tree-id45 . -1)) nil (25919 38755 910764 813000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2897) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 2898) nil (25919 38755 910761 35000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:function.call rear-nonsticky t fontified t)) . 2897)) nil (25919 38755 910756 103000) 0 nil])
([nil nil ((2897 . 2901)) nil (25919 38755 910754 323000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2900) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 2901) nil (25919 38755 910747 622000) 0 nil])
([nil nil ((11622 . 11642) (t 25919 38755 905370 784000)) nil (25919 38849 938547 697000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11638) (undo-tree-id56 . -4) 11642) nil (25919 38849 938546 487000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11634) (undo-tree-id55 . -4) 11638) nil (25919 38849 938544 469000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11630) (undo-tree-id54 . -4) 11634) nil (25919 38849 938542 450000) 0 nil])
([nil nil ((11039 . 11048)) nil (25919 38849 938540 353000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11079 . 11080) (nil fontified nil 11078 . 11080) (nil fontified nil 11077 . 11078) (nil fontified nil 11072 . 11077) (nil fontified nil 11071 . 11072) (nil fontified nil 11067 . 11071) (nil fontified nil 11066 . 11067) (nil fontified nil 11061 . 11066) (nil fontified nil 11060 . 11061) (nil fontified nil 11058 . 11060) (nil fontified nil 11057 . 11058) (nil fontified nil 11052 . 11057) (nil fontified nil 11051 . 11052) (nil fontified nil 11048 . 11051) (nil fontified nil 11040 . 11048) (11040 . 11080)) nil (25919 38849 938538 434000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2897) (#("t" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("q" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("s" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("." 0 1 (fontified t)) . 2897) (#("p" 0 1 (fontified t)) . 2897) (#("n" 0 1 (fontified t)) . 2897)) nil (25919 38849 938533 736000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2915) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . 1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 2916) nil (25919 38849 938528 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11105 . 11106) (nil fontified nil 11105 . 11106) (nil fontified nil 11104 . 11105) (nil fontified nil 11099 . 11104) (nil fontified nil 11098 . 11099) (nil fontified nil 11092 . 11098) (nil fontified nil 11091 . 11092) (nil fontified nil 11087 . 11091) (nil fontified nil 11086 . 11087) (nil fontified nil 11082 . 11086) (nil fontified nil 11079 . 11082) (11079 . 11106) (t 25919 38849 933115 993000)) nil (25919 38865 902205 647000) 0 nil])
([nil nil ((11079 . 11083) 11071) nil (25919 38865 902202 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11109 . 11110) (nil fontified nil 11109 . 11110) (nil fontified nil 11108 . 11109) (nil fontified nil 11103 . 11108) (nil fontified nil 11102 . 11103) (nil fontified nil 11096 . 11102) (nil fontified nil 11095 . 11096) (nil fontified nil 11091 . 11095) (nil fontified nil 11090 . 11091) (nil fontified nil 11086 . 11090) (nil fontified nil 11083 . 11086) (11083 . 11110)) nil (25919 38865 902200 380000) 0 nil])
([nil nil ((11110 . 11113)) nil (25919 38865 902197 309000) 0 nil])
([nil nil ((11140 . 11153)) nil (25919 38865 902196 192000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 11083) (#("t" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("q" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("s" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("." 0 1 (fontified t)) . 11083) (#("p" 0 1 (fontified t)) . 11083) (#("n" 0 1 (fontified t)) . 11083)) nil (25919 38865 902193 672000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) rear-nonsticky t fontified t)) . -11101) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . 1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 11102) nil (25919 38865 902186 819000) 0 nil])
([nil nil ((11107 . 11112) (t 25919 38865 897072 739000)) nil (25919 38873 254757 629000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . -11104) (undo-tree-id89 . -1) (#("p" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . -11105) (undo-tree-id90 . -1) (#("." 0 1 (fontified t)) . -11106) (undo-tree-id91 . -1) 11107) nil (25919 38873 254754 668000) 0 nil])
([nil nil ((11109 . 11110)) nil (25919 38959 817194 880000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 11104) (#("h" 0 1 (fontified t)) . 11104) (#("c" 0 1 (fontified t)) . 11104) (#("r" 0 1 (fontified t)) . 11104) (#("o" 0 1 (fontified t)) . 11104) (#("t" 0 1 (fontified t)) . 11104) (t 25919 38960 528816 399000)) nil (25919 38984 209696 227000) 0 nil] [nil nil ((11133 . 11138) (t 25919 38873 249052 821000)) ((#(", def" 0 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t)) . 11133) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -5) (undo-tree-id605 . -5) (undo-tree-id606 . -5) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) (undo-tree-id611 . -5) (undo-tree-id612 . -5) (undo-tree-id613 . -5) (undo-tree-id614 . -5) (undo-tree-id615 . -5) (undo-tree-id616 . -5) (undo-tree-id617 . -5) (undo-tree-id618 . -5) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -5) (undo-tree-id632 . -5) (undo-tree-id633 . -5) (undo-tree-id634 . -5)) (25919 38959 431477 405000) 0 nil])
([nil nil ((11104 . 11107)) nil (25919 38984 209689 439000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11137) (undo-tree-id94 . -1) 11138) ((11137 . 11138)) (25919 38959 44160 257000) 0 nil])
([nil nil ((apply -2 769 867 undo--wrap-and-run-primitive-undo 769 867 ((777 . 779) 797)) (t 25919 38984 212752 242000)) nil (25919 39100 154143 672000) 0 nil])
([nil nil ((11137 . 11139)) ((#("vi" 0 2 (fontified t)) . 11137) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) (undo-tree-id552 . -2) (undo-tree-id553 . -2) (undo-tree-id554 . -2) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2)) (25919 38958 464032 562000) 0 nil])
([nil nil ((apply 2 799 865 undo--wrap-and-run-primitive-undo 799 865 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -807) 867))) nil (25919 39100 154138 352000) 0 nil])
([nil nil ((11139 . 11151)) ((#("ce=self.deci" 0 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:operator fontified t) 3 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 10 (face tree-sitter-hl-face:property fontified t) 10 11 (face tree-sitter-hl-face:property fontified t) 11 12 (face tree-sitter-hl-face:property fontified t)) . 11139) (undo-tree-id476 . -12) (undo-tree-id477 . -12) (undo-tree-id478 . -12) (undo-tree-id479 . -12) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) (undo-tree-id486 . -12) (undo-tree-id487 . -12) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -12) (undo-tree-id491 . -12) (undo-tree-id492 . -12) (undo-tree-id493 . -12) (undo-tree-id494 . -12) (undo-tree-id495 . -12) (undo-tree-id496 . -12) (undo-tree-id497 . -12) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -12) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (undo-tree-id507 . -12) (undo-tree-id508 . -12) (undo-tree-id509 . -12)) (25919 38958 33197 862000) 0 nil])
([nil nil ((5963 . 5979) (t 25919 39100 152438 153000)) nil (25919 39945 347388 606000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -11149) (undo-tree-id92 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -11150) (undo-tree-id93 . -1) 11151) ((11149 . 11151)) (25919 38957 643596 922000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5975) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) 5979) nil (25919 39945 347385 38000) 0 nil])
([nil nil ((11149 . 11153)) ((#("vice" 0 4 (face tree-sitter-hl-face:property fontified t)) . 11149)) (25919 38957 231715 623000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5971) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) 5975) nil (25919 39945 347352 426000) 0 nil])
([nil nil ((11156 . 11168) (#("            " 0 12 (fontified nil)) . 11155) (undo-tree-id96 . -12) (11167 . 11168) (t 25919 38885 849018 692000)) ((#("
" 0 1 (fontified nil)) . 11167) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . 1) (undo-tree-id473 . -1) (undo-tree-id474 . 1) (11155 . 11167) (#("            " 0 12 (fontified t)) . 11156) (undo-tree-id475 . -1)) (25919 38956 510361 560000) 0 nil])
([nil nil ((5782 . 5790) (#("        " 0 8 (fontified nil)) . 5781) (undo-tree-id736 . -8) (5789 . 5790) (t 25919 39945 346147 853000)) nil (25919 39996 745813 909000) 0 nil])
([nil nil ((11155 . 11167)) ((#("            " 0 8 (fontified t) 8 12 (fontified t)) . 11155) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -12) (undo-tree-id407 . -1) (undo-tree-id408 . -12) (undo-tree-id409 . -12) (undo-tree-id410 . -12) (undo-tree-id411 . -12) (undo-tree-id412 . -12) (undo-tree-id413 . -12) (undo-tree-id414 . -12) (undo-tree-id415 . -12) (undo-tree-id416 . -12) (undo-tree-id417 . -12) (undo-tree-id418 . -12) (undo-tree-id419 . -12) (undo-tree-id420 . -12) (undo-tree-id421 . -12) (undo-tree-id422 . -12) (undo-tree-id423 . -12) (undo-tree-id424 . -12) (undo-tree-id425 . -12) (undo-tree-id426 . -12) (undo-tree-id427 . -12) (undo-tree-id428 . -12) (undo-tree-id429 . -12) (undo-tree-id430 . -12) (undo-tree-id431 . -12) (undo-tree-id432 . -12) (undo-tree-id433 . -12) (undo-tree-id434 . -12) (undo-tree-id435 . -12) (undo-tree-id436 . -12) (undo-tree-id437 . -12) (undo-tree-id438 . -12) (undo-tree-id439 . -12) (undo-tree-id440 . -12) (undo-tree-id441 . -12) (undo-tree-id442 . -12) (undo-tree-id443 . -12) (undo-tree-id444 . -12) (undo-tree-id445 . -12) (undo-tree-id446 . -12) (undo-tree-id447 . -12) (undo-tree-id448 . -12) (undo-tree-id449 . -12) (undo-tree-id450 . -12) (undo-tree-id451 . -12) (undo-tree-id452 . -12) (undo-tree-id453 . -12) (undo-tree-id454 . -12) (undo-tree-id455 . -12) (undo-tree-id456 . -12) (undo-tree-id457 . -12) (undo-tree-id458 . -12) (undo-tree-id459 . -12) (undo-tree-id460 . -12) (undo-tree-id461 . -12) (undo-tree-id462 . -12) (undo-tree-id463 . -12) (undo-tree-id464 . -12) (undo-tree-id465 . -12) (undo-tree-id466 . -12) (undo-tree-id467 . -12) (undo-tree-id468 . -12) (undo-tree-id469 . -12)) (25919 38954 636616 414000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 5797) (5796 . 5797) (5795 . 5797) (#("(" 0 1 (fontified nil)) . -5795) (5790 . 5796)) nil (25919 39996 745811 184000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11163) (undo-tree-id95 . -4) 11167) ((11163 . 11167)) (25919 38954 213927 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5835 . 5836) (nil fontified nil 5835 . 5836) (nil fontified nil 5831 . 5835) (nil fontified nil 5830 . 5831) (nil fontified nil 5829 . 5830) (nil fontified nil 5828 . 5829) (nil fontified nil 5827 . 5828) (nil fontified nil 5818 . 5827) (nil fontified nil 5817 . 5818) (nil fontified nil 5813 . 5817) (nil fontified nil 5812 . 5813) (nil fontified nil 5811 . 5812) (nil fontified nil 5810 . 5811) (nil fontified nil 5801 . 5810) (nil fontified nil 5800 . 5801) (nil fontified nil 5796 . 5800) (5796 . 5836)) nil (25919 39996 745808 932000) 0 nil])
([nil nil ((11576 . 11596) (t 25919 38888 353011 909000)) ((#(", device=self.device" 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t) 9 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (fontified t) 14 20 (face tree-sitter-hl-face:property fontified t)) . 11576) (undo-tree-id399 . -20) (undo-tree-id400 . -20) (undo-tree-id401 . -20) (undo-tree-id402 . -2)) (25919 38953 831765 238000) 0 nil])
([nil nil ((5796 . 5798) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -5796) (5796 . 5797)) nil (25919 39996 745804 903000) 0 nil])
([nil nil ((7937 . 7951)) ((#(", device=self." 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t) 9 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (fontified t)) . 7937) (undo-tree-id369 . -14) (undo-tree-id370 . -14) (undo-tree-id371 . -14) (undo-tree-id372 . -14) (undo-tree-id373 . -14) (undo-tree-id374 . -14) (undo-tree-id375 . -14) (undo-tree-id376 . -14) (undo-tree-id377 . -14) (undo-tree-id378 . -14) (undo-tree-id379 . -14) (undo-tree-id380 . -14) (undo-tree-id381 . -14) (undo-tree-id382 . -14) (undo-tree-id383 . -14) (undo-tree-id384 . -14) (undo-tree-id385 . -14) (undo-tree-id386 . -14) (undo-tree-id387 . -14) (undo-tree-id388 . -14) (undo-tree-id389 . -14) (undo-tree-id390 . -14) (undo-tree-id391 . -14) (undo-tree-id392 . -14) (undo-tree-id393 . -14) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14)) (25919 38953 555887 232000) 0 nil])
([nil nil ((5797 . 5801)) nil (25919 39996 745803 667000) 0 nil])
([nil nil ((7951 . 7957)) ((#("device" 0 6 (face tree-sitter-hl-face:property fontified t)) . 7951) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6)) (25919 38953 207003 729000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -5800) (undo-tree-id735 . -1) 5801) nil (25919 39996 745802 819000) 0 nil])
([nil nil ((10662 . 10670) (t 25919 38910 912950 799000)) ((#(", devuce" 0 2 (fontified t) 2 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 10662) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -8) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -6) (undo-tree-id310 . -7) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -8) (undo-tree-id358 . -8) (undo-tree-id359 . -8) (undo-tree-id360 . -8) (undo-tree-id361 . -8) (undo-tree-id362 . -8) (undo-tree-id363 . -8) (undo-tree-id364 . -8) (undo-tree-id365 . -8)) (25919 38952 944103 337000) 0 nil])
([nil nil ((5800 . 5805)) nil (25919 39996 745800 966000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10667) (undo-tree-id98 . -1) (#("c" 0 1 (fontified t)) . -10668) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t)) . -10669) (undo-tree-id100 . -1) 10670) ((10667 . 10670)) (25919 38952 735889 299000) 0 nil])
([nil nil ((#("R" 0 1 (face tree-sitter-hl-face:string fontified t)) . -5804) (undo-tree-id734 . -1) 5805) nil (25919 39996 745799 869000) 0 nil])
([nil nil ((10667 . 10670)) ((#("ice" 0 3 (fontified t)) . 10667) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3)) (25919 38952 461501 898000) 0 nil])
([nil nil ((5804 . 5813)) nil (25919 39996 745797 972000) 0 nil])
([nil nil ((10670 . 10671)) ((#(" " 0 1 (fontified t)) . 10670) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1)) (25919 38952 174671 130000) 0 nil])
([nil nil ((5814 . 5815)) nil (25919 39996 745797 38000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10670) (undo-tree-id97 . -1) 10671) ((10670 . 10671)) (25919 38951 854875 112000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5814) (undo-tree-id733 . -1) 5815) nil (25919 39996 745795 841000) 0 nil])
([nil nil ((10670 . 10682)) ((#("=self.device" 0 1 (face tree-sitter-hl-face:operator fontified t) 1 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (fontified t) 6 12 (face tree-sitter-hl-face:property fontified t)) . 10670) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -1)) (25919 38951 472893 575000) 0 nil])
([nil nil ((5814 . 5815)) nil (25919 39996 745793 405000) 0 nil])
([nil nil ((10986 . 10988) (t 25919 38924 16915 301000)) ((#(", " 0 1 (fontified t) 1 2 (fontified t)) . 10986) (undo-tree-id186 . -2) (undo-tree-id187 . -1) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2)) (25919 38951 274911 90000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5814) (undo-tree-id732 . -1) 5815) nil (25919 40129 631130 339000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10986) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t)) . -10987) (undo-tree-id102 . -1) 10988) ((10986 . 10988)) (25919 38951 82037 811000) 0 nil])
([nil nil ((5814 . 5816)) ((#(", " 0 2 (fontified t)) . 5814) (t 25919 39996 742008 573000)) (25919 40130 342113 863000) 0 nil])
([nil nil ((10986 . 11006) (t 25919 38934 644886 514000)) ((#(", device=self.device" 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t) 9 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (fontified t) 14 20 (face tree-sitter-hl-face:property fontified t)) . 10986) (undo-tree-id103 . -20) (undo-tree-id104 . -20) (undo-tree-id105 . -20) (undo-tree-id106 . -20) (undo-tree-id107 . -2) (undo-tree-id108 . -8) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -20) (undo-tree-id112 . -20) (undo-tree-id113 . -20) (undo-tree-id114 . -20) (undo-tree-id115 . -20) (undo-tree-id116 . -20) (undo-tree-id117 . -20) (undo-tree-id118 . -20) (undo-tree-id119 . -20) (undo-tree-id120 . -20) (undo-tree-id121 . -20) (undo-tree-id122 . -20) (undo-tree-id123 . -20) (undo-tree-id124 . -20) (undo-tree-id125 . -20) (undo-tree-id126 . -20) (undo-tree-id127 . -20) (undo-tree-id128 . -20) (undo-tree-id129 . -20) (undo-tree-id130 . -20) (undo-tree-id131 . -20) (undo-tree-id132 . -20) (undo-tree-id133 . -20) (undo-tree-id134 . -20) (undo-tree-id135 . -20) (undo-tree-id136 . -20) (undo-tree-id137 . -20) (undo-tree-id138 . -20) (undo-tree-id139 . -20) (undo-tree-id140 . -20) (undo-tree-id141 . -20) (undo-tree-id142 . -20) (undo-tree-id143 . -20) (undo-tree-id144 . -20) (undo-tree-id145 . -20) (undo-tree-id146 . -20) (undo-tree-id147 . -20) (undo-tree-id148 . -20) (undo-tree-id149 . -20) (undo-tree-id150 . -20) (undo-tree-id151 . -20) (undo-tree-id152 . -20) (undo-tree-id153 . -20) (undo-tree-id154 . -20) (undo-tree-id155 . -20) (undo-tree-id156 . -20) (undo-tree-id157 . -20) (undo-tree-id158 . -20) (undo-tree-id159 . -20) (undo-tree-id160 . -20) (undo-tree-id161 . -20) (undo-tree-id162 . -20) (undo-tree-id163 . -20) (undo-tree-id164 . -20) (undo-tree-id165 . -20) (undo-tree-id166 . -20) (undo-tree-id167 . -20) (undo-tree-id168 . -20) (undo-tree-id169 . -20) (undo-tree-id170 . -20) (undo-tree-id171 . -20) (undo-tree-id172 . -20) (undo-tree-id173 . -20) (undo-tree-id174 . -20) (undo-tree-id175 . -20) (undo-tree-id176 . -20) (undo-tree-id177 . -20) (undo-tree-id178 . -20) (undo-tree-id179 . -20) (undo-tree-id180 . -20) (undo-tree-id181 . -20) (undo-tree-id182 . -20) (undo-tree-id183 . -20) (undo-tree-id184 . -20) (undo-tree-id185 . -20) (t 25919 38946 508854 379000)) (25919 38946 507287 114000) 0 nil])
([nil nil ((8455 . 8472) (t 25919 39996 742008 573000)) nil (25919 40157 725324 775000) 0 nil])
nil
([nil nil ((8525 . 8537)) nil (25919 40157 725319 779000) 0 nil])
([nil nil ((8526 . 8538) (#("            " 0 12 (fontified nil)) . 8525) (undo-tree-id771 . -12) (undo-tree-id772 . -12) (undo-tree-id773 . -12) (undo-tree-id774 . -12) (undo-tree-id775 . -12) (undo-tree-id776 . -12) (undo-tree-id777 . -12) (undo-tree-id778 . -12) (undo-tree-id779 . -12) (undo-tree-id780 . -12) (undo-tree-id781 . -12) (undo-tree-id782 . -12) (8537 . 8538) (t 25919 40157 721572 403000)) nil (25919 40258 734794 4000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8553) (8552 . 8553) (8551 . 8553) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8551) (8538 . 8552)) nil (25919 40258 734783 143000) 0 nil])
([nil nil ((8552 . 8553)) nil (25919 40258 734781 804000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8552) (undo-tree-id770 . -1) 8553) nil (25919 40258 734780 820000) 0 nil])
([nil nil ((8552 . 8553)) nil (25919 40258 734778 959000) 0 nil])
([nil nil ((#("_" 0 1 (face tree-sitter-hl-face:constant fontified t)) . -8552) (undo-tree-id768 . -1) (undo-tree-id769 . -1) 8553) nil (25919 40258 734777 991000) 0 nil])
([nil nil ((8552 . 8557)) nil (25919 40258 734775 239000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8560) (8559 . 8560) (8558 . 8560) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8558) (8558 . 8559)) nil (25919 40258 734773 852000) 0 nil])
([nil nil ((8559 . 8564)) nil (25919 40258 734772 390000) 0 nil])
([nil nil ((8565 . 8566)) nil (25919 40258 734771 616000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -8565) (undo-tree-id767 . -1) 8566) nil (25919 40258 734770 754000) 0 nil])
([nil nil ((8565 . 8566)) nil (25919 40258 734769 102000) 0 nil])
([nil nil ((8566 . 8583)) nil (25919 40258 734768 388000) 0 nil])
([nil nil ((8565 . 8568)) nil (25919 40258 734767 454000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -8567) (undo-tree-id766 . -1) 8568) nil (25919 40258 734766 144000) 0 nil])
([nil nil ((8565 . 8566)) nil (25919 40258 734764 492000) 0 nil])
([nil nil ((8567 . 8568)) nil (25919 40258 734763 645000) 0 nil])
([nil nil ((8569 . 8571)) nil (25919 40258 734762 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8651 . 8652) (nil fontified nil 8651 . 8652) (nil fontified nil 8650 . 8651) (nil fontified nil 8649 . 8650) (nil fontified nil 8625 . 8649) (nil fontified nil 8624 . 8625) (nil fontified nil 8623 . 8624) (nil fontified nil 8618 . 8623) (nil fontified nil 8602 . 8618) (nil fontified nil 8600 . 8602) (nil fontified nil 8593 . 8600) (nil fontified nil 8592 . 8593) (nil fontified nil 8588 . 8592) (nil fontified nil 8587 . 8588) (nil fontified nil 8585 . 8587) (nil fontified nil 8573 . 8585) (8573 . 8652)) nil (25919 40258 734761 352000) 0 nil])
([nil nil ((8573 . 8589) (#("            " 0 12 (fontified t)) . 8573)) nil (25919 40258 734757 700000) 0 nil])
([nil nil ((8622 . 8626)) nil (25919 40258 734756 333000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8636) (undo-tree-id745 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8637) (undo-tree-id746 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8638) (undo-tree-id747 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8639) (undo-tree-id748 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8640) (undo-tree-id749 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8641) (undo-tree-id750 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8642) (undo-tree-id751 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8643) (undo-tree-id752 . -1) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8644) (undo-tree-id753 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8645) (undo-tree-id754 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8646) (undo-tree-id755 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified nil)) . -8647) (undo-tree-id756 . -1) (#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8648) (undo-tree-id757 . -1) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8649) (undo-tree-id758 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8650) (undo-tree-id759 . -1) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8651) (undo-tree-id760 . -1) (#("v" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8652) (undo-tree-id761 . -1) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8653) (undo-tree-id762 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8654) (undo-tree-id763 . -1) (#("y" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8655) (undo-tree-id764 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8656) (undo-tree-id765 . -1) 8657) nil (25919 40258 734752 431000) 0 nil])
([nil nil ((#("A" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8633) (undo-tree-id742 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8634) (undo-tree-id743 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8635) (undo-tree-id744 . -1) 8636) nil (25919 40258 734729 768000) 0 nil])
([nil nil ((8633 . 8650)) nil (25919 40258 734725 605000) 0 nil])
([nil nil ((8650 . 8652)) nil (25919 40258 734724 867000) 0 nil])
([nil nil ((#(";" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8651) (undo-tree-id741 . -1) 8652) nil (25919 40258 734723 728000) 0 nil])
([nil nil ((8651 . 8653)) nil (25919 40258 734721 895000) 0 nil])
([nil nil ((#(";" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8651) (undo-tree-id739 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8652) (undo-tree-id740 . -1) 8653) nil (25919 40258 734720 534000) 0 nil])
([nil nil ((8651 . 8656)) nil (25919 40258 734716 606000) 0 nil])
([nil nil ((#("G" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8654) (undo-tree-id737 . -1) (#("I" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8655) (undo-tree-id738 . -1) 8656) nil (25919 40258 734715 84000) 0 nil])
([nil nil ((8654 . 8658)) nil (25919 40258 734699 424000) 0 nil])
([nil nil ((8659 . 8671)) nil (25919 40258 734698 528000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8673) (8672 . 8673) (8671 . 8673) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8671) (8671 . 8672)) nil (25919 40258 734697 422000) 0 nil])
([nil nil ((8672 . 8677)) nil (25919 40258 734695 725000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8680) (8679 . 8680) (8678 . 8680) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -8678) (8678 . 8679)) nil (25919 40258 734693 365000) 0 nil])
([nil nil ((8679 . 8684)) nil (25919 40258 734686 870000) 0 nil])
([nil nil ((8688 . 8708) (#("                    " 0 20 (fontified nil)) . 8687) (undo-tree-id835 . -20) (8686 . 8708) (t 25919 40258 733298 723000)) nil (25919 40295 661653 173000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8704) (undo-tree-id834 . -4) 8708) nil (25919 40295 661646 272000) 0 nil])
([nil nil ((8704 . 8708)) nil (25919 40295 661640 910000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8706) (undo-tree-id832 . -1) (#("j" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8707) (undo-tree-id833 . -1) 8708) nil (25919 40295 661637 632000) 0 nil])
([nil nil ((8706 . 8708)) nil (25919 40295 661628 69000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8706) (undo-tree-id830 . -1) (#(" " 0 1 (fontified t)) . -8707) (undo-tree-id831 . -1) 8708) nil (25919 40295 661624 461000) 0 nil])
([nil nil ((8706 . 8713)) nil (25919 40295 661616 332000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8712) (undo-tree-id829 . -1) 8713) nil (25919 40295 661613 555000) 0 nil])
([nil nil ((8712 . 8716)) nil (25919 40295 661608 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8794 . 8795) (nil fontified nil 8794 . 8795) (nil fontified nil 8793 . 8794) (nil fontified nil 8792 . 8793) (nil fontified nil 8768 . 8792) (nil fontified nil 8767 . 8768) (nil fontified nil 8766 . 8767) (nil fontified nil 8761 . 8766) (nil fontified nil 8745 . 8761) (nil fontified nil 8743 . 8745) (nil fontified nil 8736 . 8743) (nil fontified nil 8735 . 8736) (nil fontified nil 8731 . 8735) (nil fontified nil 8730 . 8731) (nil fontified nil 8728 . 8730) (nil fontified nil 8716 . 8728) (8716 . 8795)) nil (25919 40295 661603 152000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8793) (undo-tree-id825 . -1) (undo-tree-id826 . 1) (undo-tree-id827 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -8794) (undo-tree-id828 . -1) 8795) nil (25919 40295 661591 74000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8716) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#(" " 0 1 (fontified t)) . -8717) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (#(" " 0 1 (fontified t)) . -8718) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#(" " 0 1 (fontified t)) . -8719) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (#(" " 0 1 (fontified t)) . -8720) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#(" " 0 1 (fontified t)) . -8721) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#(" " 0 1 (fontified t)) . -8722) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#(" " 0 1 (fontified t)) . -8723) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#(" " 0 1 (fontified t)) . -8724) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (#(" " 0 1 (fontified t)) . -8725) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#(" " 0 1 (fontified t)) . -8726) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (#(" " 0 1 (fontified t)) . -8727) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("if self.VERBOSE:
                print('All to all connectivity '" 0 2 (fontified t) 2 3 (fontified t) 3 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 15 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15 17 (fontified t) 17 33 (fontified t) 33 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 40 (face tree-sitter-hl-face:string fontified t) 40 64 (face tree-sitter-hl-face:string fontified t) 64 65 (face tree-sitter-hl-face:string fontified t)) . -8728) (undo-tree-id822 . -65) (undo-tree-id823 . -56) (undo-tree-id824 . -65) 8793) nil (25919 40295 661568 405000) 0 nil])
([nil nil ((8687 . 8708)) nil (25919 40295 661468 260000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8704) (undo-tree-id785 . -4) 8708) nil (25919 40295 661465 318000) 0 nil])
([nil nil ((8704 . 8712)) nil (25919 40295 661459 355000) 0 nil])
([nil nil ((8712 . 8717)) nil (25919 40295 661457 0) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -8715) (undo-tree-id783 . -1) (#("n" 0 1 (fontified t)) . -8716) (undo-tree-id784 . -1) 8717) nil (25919 40295 661452 610000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8724) (8723 . 8724) (8722 . 8724) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -8722) (8715 . 8723)) nil (25919 40295 661424 668000) 0 nil])
([nil nil ((8723 . 8729)) nil (25919 40295 661410 281000) 0 nil])
([nil nil ((8729 . 8731) (t 25919 40295 665198 662000)) nil (25919 40350 256656 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9050 . 9051) (nil fontified nil 9050 . 9051) (nil fontified nil 9049 . 9050) (nil fontified nil 9043 . 9049) (nil fontified nil 9042 . 9043) (nil fontified nil 9038 . 9042) (nil fontified nil 9037 . 9038) (nil fontified nil 9031 . 9037) (nil fontified nil 8943 . 9031) (nil fontified nil 8938 . 8943) (nil fontified nil 8937 . 8938) (nil fontified nil 8933 . 8937) (nil fontified nil 8932 . 8933) (nil fontified nil 8927 . 8932) (nil fontified nil 8839 . 8927) (nil fontified nil 8838 . 8839) (nil fontified nil 8837 . 8838) (nil fontified nil 8836 . 8837) (nil fontified nil 8831 . 8836) (nil fontified nil 8830 . 8831) (nil fontified nil 8828 . 8830) (nil fontified nil 8827 . 8828) (nil fontified nil 8823 . 8827) (nil fontified nil 8822 . 8823) (nil fontified nil 8821 . 8822) (nil fontified nil 8817 . 8821) (nil fontified nil 8731 . 8817) (8731 . 9051)) nil (25919 40350 256653 993000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8796) (undo-tree-id948 . -1) (#(" " 0 1 (fontified t)) . -8797) (undo-tree-id949 . -1) (#(" " 0 1 (fontified t)) . -8798) (undo-tree-id950 . -1) (#(" " 0 1 (fontified t)) . -8799) (undo-tree-id951 . -1) (#(" " 0 1 (fontified t)) . -8800) (undo-tree-id952 . -1) (#(" " 0 1 (fontified nil)) . -8801) (undo-tree-id953 . -1) (#(" " 0 1 (fontified nil)) . -8802) (undo-tree-id954 . -1) (#(" " 0 1 (fontified t)) . -8803) (undo-tree-id955 . -1) (#(" " 0 1 (fontified t)) . -8804) (undo-tree-id956 . -1) (#(" " 0 1 (fontified t)) . -8805) (undo-tree-id957 . -1) (#(" " 0 1 (fontified t)) . -8806) (undo-tree-id958 . -1) (#(" " 0 1 (fontified t)) . -8807) (undo-tree-id959 . -1) (#(" " 0 1 (fontified t)) . -8808) (undo-tree-id960 . -1) (#(" " 0 1 (fontified t)) . -8809) (undo-tree-id961 . -1) (#(" " 0 1 (fontified t)) . -8810) (undo-tree-id962 . -1) (#(" " 0 1 (fontified t)) . -8811) (undo-tree-id963 . -1) (#(" " 0 1 (fontified t)) . -8812) (undo-tree-id964 . -1) (#(" " 0 1 (fontified t)) . -8813) (undo-tree-id965 . -1) (#(" " 0 1 (fontified t)) . -8814) (undo-tree-id966 . -1) (#(" " 0 1 (fontified t)) . -8815) (undo-tree-id967 . -1) (#(" " 0 1 (fontified t)) . -8816) (undo-tree-id968 . -1) 8817) nil (25919 40350 256645 417000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8777) (undo-tree-id929 . -1) (#(" " 0 1 (fontified t)) . -8778) (undo-tree-id930 . -1) (#(" " 0 1 (fontified t)) . -8779) (undo-tree-id931 . -1) (#(" " 0 1 (fontified t)) . -8780) (undo-tree-id932 . -1) (#(" " 0 1 (fontified t)) . -8781) (undo-tree-id933 . -1) (#(" " 0 1 (fontified t)) . -8782) (undo-tree-id934 . -1) (#(" " 0 1 (fontified t)) . -8783) (undo-tree-id935 . -1) (#(" " 0 1 (fontified t)) . -8784) (undo-tree-id936 . -1) (#(" " 0 1 (fontified t)) . -8785) (undo-tree-id937 . -1) (#(" " 0 1 (fontified t)) . -8786) (undo-tree-id938 . -1) (#(" " 0 1 (fontified t)) . -8787) (undo-tree-id939 . -1) (#(" " 0 1 (fontified nil)) . -8788) (undo-tree-id940 . -1) (#(" " 0 1 (fontified t)) . -8789) (undo-tree-id941 . -1) (#(" " 0 1 (fontified t)) . -8790) (undo-tree-id942 . -1) (#(" " 0 1 (fontified t)) . -8791) (undo-tree-id943 . -1) (#(" " 0 1 (fontified t)) . -8792) (undo-tree-id944 . -1) (#(" " 0 1 (fontified t)) . -8793) (undo-tree-id945 . -1) (#(" " 0 1 (fontified t)) . -8794) (undo-tree-id946 . -1) (#(" " 0 1 (fontified t)) . -8795) (undo-tree-id947 . -1) 8796) nil (25919 40350 256621 516000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8756) (undo-tree-id908 . -1) (#(" " 0 1 (fontified t)) . -8757) (undo-tree-id909 . -1) (#(" " 0 1 (fontified t)) . -8758) (undo-tree-id910 . -1) (#(" " 0 1 (fontified nil)) . -8759) (undo-tree-id911 . -1) (#(" " 0 1 (fontified t)) . -8760) (undo-tree-id912 . -1) (#(" " 0 1 (fontified t)) . -8761) (undo-tree-id913 . -1) (#(" " 0 1 (fontified t)) . -8762) (undo-tree-id914 . -1) (#(" " 0 1 (fontified t)) . -8763) (undo-tree-id915 . -1) (#(" " 0 1 (fontified t)) . -8764) (undo-tree-id916 . -1) (#(" " 0 1 (fontified t)) . -8765) (undo-tree-id917 . -1) (#(" " 0 1 (fontified t)) . -8766) (undo-tree-id918 . -1) (#(" " 0 1 (fontified t)) . -8767) (undo-tree-id919 . -1) (#(" " 0 1 (fontified t)) . -8768) (undo-tree-id920 . -1) (#(" " 0 1 (fontified t)) . -8769) (undo-tree-id921 . -1) (#(" " 0 1 (fontified t)) . -8770) (undo-tree-id922 . -1) (#(" " 0 1 (fontified t)) . -8771) (undo-tree-id923 . -1) (#(" " 0 1 (fontified t)) . -8772) (undo-tree-id924 . -1) (#(" " 0 1 (fontified t)) . -8773) (undo-tree-id925 . -1) (#(" " 0 1 (fontified t)) . -8774) (undo-tree-id926 . -1) (#(" " 0 1 (fontified nil)) . -8775) (undo-tree-id927 . -1) (#(" " 0 1 (fontified t)) . -8776) (undo-tree-id928 . -1) 8777) nil (25919 40350 256600 649000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8735) (undo-tree-id887 . -1) (#(" " 0 1 (fontified t)) . -8736) (undo-tree-id888 . -1) (#(" " 0 1 (fontified t)) . -8737) (undo-tree-id889 . -1) (#(" " 0 1 (fontified t)) . -8738) (undo-tree-id890 . -1) (#(" " 0 1 (fontified t)) . -8739) (undo-tree-id891 . -1) (#(" " 0 1 (fontified t)) . -8740) (undo-tree-id892 . -1) (#(" " 0 1 (fontified t)) . -8741) (undo-tree-id893 . -1) (#(" " 0 1 (fontified t)) . -8742) (undo-tree-id894 . -1) (#(" " 0 1 (fontified t)) . -8743) (undo-tree-id895 . -1) (#(" " 0 1 (fontified nil)) . -8744) (undo-tree-id896 . -1) (#(" " 0 1 (fontified t)) . -8745) (undo-tree-id897 . -1) (#(" " 0 1 (fontified t)) . -8746) (undo-tree-id898 . -1) (#(" " 0 1 (fontified t)) . -8747) (undo-tree-id899 . -1) (#(" " 0 1 (fontified t)) . -8748) (undo-tree-id900 . -1) (#(" " 0 1 (fontified t)) . -8749) (undo-tree-id901 . -1) (#(" " 0 1 (fontified t)) . -8750) (undo-tree-id902 . -1) (#(" " 0 1 (fontified t)) . -8751) (undo-tree-id903 . -1) (#(" " 0 1 (fontified t)) . -8752) (undo-tree-id904 . -1) (#(" " 0 1 (fontified t)) . -8753) (undo-tree-id905 . -1) (#(" " 0 1 (fontified t)) . -8754) (undo-tree-id906 . -1) (#(" " 0 1 (fontified t)) . -8755) (undo-tree-id907 . -1) 8756) nil (25919 40350 256577 545000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8730) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#(" " 0 1 (fontified t)) . -8731) (undo-tree-id883 . -1) (#(" " 0 1 (fontified t)) . -8732) (undo-tree-id884 . -1) (#(" " 0 1 (fontified t)) . -8733) (undo-tree-id885 . -1) (#(" " 0 1 (fontified t)) . -8734) (undo-tree-id886 . -1) 8735) nil (25919 40350 256453 388000) 0 nil])
([nil nil ((8730 . 8731)) nil (25919 40350 256446 538000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -8736) (undo-tree-id843 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8737) (#("s" 0 1 (fontified t)) . -8737) (undo-tree-id844 . -1) (#("e" 0 1 (fontified t)) . -8738) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("l" 0 1 (fontified t)) . -8739) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -8740) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#("." 0 1 (fontified t)) . -8741) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8742) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8743) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -8744) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . 1) (undo-tree-id866 . -1) (#("i" 0 1 (fontified t)) . -8745) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (#("_" 0 1 (fontified t)) . -8746) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (#("p" 0 1 (fontified t)) . -8747) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (#("o" 0 1 (fontified t)) . -8748) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#("p" 0 1 (fontified t)) . -8749) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -8750) (undo-tree-id877 . -1) (undo-tree-id878 . 1) (undo-tree-id879 . -1) (#("," 0 1 (fontified t)) . -8751) (undo-tree-id880 . -1) 8752) nil (25919 40350 256441 995000) 0 nil])
([nil nil ((8737 . 8743) (8736 . 8738) (#("(" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -8736) (8736 . 8737)) nil (25919 40350 256402 913000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8744) (undo-tree-id842 . -1) 8745) nil (25919 40350 256401 88000) 0 nil])
([nil nil ((8744 . 8745)) nil (25919 40350 256398 920000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#("
" 0 1 (fontified t)) . 8745)) nil (25919 40350 256395 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256388 879000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256381 969000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256374 934000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256369 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#("
" 0 1 (fontified t)) . 8762)) nil (25919 40350 256365 325000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256358 843000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256351 911000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256344 953000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256340 107000) 0 nil])
([nil nil ((8745 . 8746)) nil (25919 40350 256338 936000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -8783) (undo-tree-id841 . -1) 8784) nil (25919 40350 256337 941000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8783) (undo-tree-id840 . -1)) nil (25919 40350 256335 127000) 0 nil])
([nil nil ((8812 . 8815)) nil (25919 40350 256333 244000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8813) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8814) (undo-tree-id839 . -1) 8815) nil (25919 40350 256330 602000) 0 nil])
([nil nil ((8813 . 8815)) nil (25919 40350 256312 52000) 0 nil])
([nil nil ((8812 . 8821) (t 25919 40350 257050 721000)) nil (25919 40384 838392 381000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -8812) (undo-tree-id969 . -1) (#("e" 0 1 (fontified t)) . -8813) (undo-tree-id970 . -1) (#("l" 0 1 (fontified t)) . -8814) (undo-tree-id971 . -1) (#("f" 0 1 (fontified t)) . -8815) (undo-tree-id972 . -1) (#("." 0 1 (fontified t)) . -8816) (undo-tree-id973 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8817) (undo-tree-id974 . -1) (#("I" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8818) (undo-tree-id975 . -1) (#("G" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8819) (undo-tree-id976 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8820) (undo-tree-id977 . -1) 8821) nil (25919 40415 611036 531000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8726) (undo-tree-id987 . -1) (#("." 0 1 (face tree-sitter-hl-face:number fontified t)) . -8727) (undo-tree-id988 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8728) (undo-tree-id989 . -1) 8729 (t 25919 40384 844957 1000)) nil (25919 40491 379830 63000) 0 nil] [nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8726) (undo-tree-id978 . -1) (#("." 0 1 (face tree-sitter-hl-face:number fontified t)) . -8727) (undo-tree-id979 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8728) (undo-tree-id980 . -1) 8729 (t 25919 40384 844957 1000)) ((8726 . 8729)) (25919 40415 609980 947000) 0 nil])
([nil nil ((8726 . 8731)) nil (25919 40491 379826 461000) 0 nil])
nil
([nil nil ((#(";" 0 1 (fontified t)) . -8730) (undo-tree-id986 . -1) 8731) nil (25919 40491 379825 554000) 0 nil])
([nil nil ((8730 . 8736)) nil (25919 40491 379823 651000) 0 nil])
([nil nil ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8734) (undo-tree-id984 . -1) (#("M" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8735) (undo-tree-id985 . -1) 8736) nil (25919 40491 379822 60000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8738) (8737 . 8738) (8736 . 8738) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8736) (8734 . 8737)) nil (25919 40491 379818 563000) 0 nil])
([nil nil ((8737 . 8739)) nil (25919 40491 379816 704000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8737) (undo-tree-id982 . -1) (#("_" 0 1 (fontified t)) . -8738) (undo-tree-id983 . -1) 8739) nil (25919 40491 379815 520000) 0 nil])
([nil nil ((8737 . 8738)) nil (25919 40491 379811 566000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8737) (undo-tree-id981 . -1) 8738) nil (25919 40491 379810 468000) 0 nil])
([nil nil ((8737 . 8742)) nil (25919 40491 379801 433000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8745) (8744 . 8745) (8743 . 8745) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -8743) (8743 . 8744)) nil (25919 40491 379799 75000) 0 nil])
([nil nil ((8744 . 8749)) nil (25919 40538 511040 534000) 0 nil])
([nil nil ((8687 . 8707) (t 25919 40539 788537 315000)) nil (25919 40545 144339 457000) 0 nil] [nil nil ((#("ormal" 0 5 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 8717) (undo-tree-id991 . -2) (undo-tree-id993 . -2) (undo-tree-id995 . -2) (undo-tree-id997 . -2) (undo-tree-id999 . -2) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -5) (t 25919 40491 384668 441000)) ((8717 . 8722) (t 25919 40522 884583 106000)) (25919 40522 874456 520000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8703) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) 8707) nil (25919 40545 144333 560000) 0 nil])
nil
([nil nil ((8852 . 8853) (t 25919 40545 148522 794000)) nil (25919 40594 849192 195000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8852) (undo-tree-id1056 . -1) 8853) nil (25919 40594 849190 689000) 0 nil])
([nil nil ((8820 . 8821)) nil (25919 40594 849187 416000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8820) (undo-tree-id1055 . -1) 8821) nil (25919 40594 849185 146000) 0 nil])
([nil nil ((8852 . 8857)) nil (25919 40594 849169 178000) 0 nil])
([nil nil ((7338 . 7340) (#("(" 0 1 (fontified nil)) . -7338) (7333 . 7339) (t 25919 40594 852388 118000)) nil (25919 40632 115908 68000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7338) (undo-tree-id1058 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7339)) nil (25919 40632 115905 740000) 0 nil])
([nil nil ((7338 . 7339)) nil (25919 40632 115902 466000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 7338)) nil (25919 40632 115901 681000) 0 nil])
([nil nil ((7339 . 7341) (#("(" 0 1 (fontified nil)) . -7339) (7339 . 7340)) nil (25919 40632 115900 548000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7339) (undo-tree-id1057 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7340)) nil (25919 40632 115898 765000) 0 nil])
([nil nil ((7338 . 7340) (#("(" 0 1 (fontified nil)) . -7338) (7338 . 7339)) nil (25919 40632 115888 168000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7339)) nil (25919 40632 115886 338000) 0 nil])
([nil nil ((7353 . 7354)) nil (25919 40632 115885 234000) 0 nil])
([nil nil ((7310 . 7312) (#("(" 0 1 (fontified nil)) . -7310) (7305 . 7311)) nil (25919 40632 115883 418000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7311)) nil (25919 40632 115880 448000) 0 nil])
([nil nil ((7325 . 7326)) nil (25919 40660 788136 874000) 0 nil])
([nil nil ((7390 . 7398)) ((#("        " 0 8 (fontified t)) . 7390) (undo-tree-id1059 . -1) (t 25919 40634 20282 5000)) (25919 40661 489746 87000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7325) (undo-tree-id1112 . -1) (undo-tree-id1113 . 1) (undo-tree-id1114 . -1) 7326 (t 25919 40634 20282 5000)) nil (25919 40673 32390 880000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 7305) (#("a" 0 1 (fontified t)) . 7305) (#("o" 0 1 (fontified t)) . 7305) (#("l" 0 1 (fontified t)) . 7305) (#("f" 0 1 (fontified t)) . 7305)) nil (25919 40673 32386 821000) 0 nil])
([nil nil ((#("float" 0 5 (fontified t)) . 7334) (undo-tree-id1111 . -5)) nil (25919 40673 32385 110000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 7334) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . -1)) nil (25919 40673 32383 49000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7305) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . 1) (undo-tree-id1107 . -1)) nil (25919 40673 32378 117000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -7347) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . 1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) 7348) nil (25919 40673 32368 463000) 0 nil])
([nil nil ((8336 . 8338) (#("(" 0 1 (fontified nil)) . -8336) (8331 . 8337) (t 25919 40673 36176 309000)) nil (25919 40691 480692 60000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -8337) (undo-tree-id1118 . -1) (undo-tree-id1119 . 1) (undo-tree-id1120 . -1) 8338) nil (25919 40691 480690 95000) 0 nil])
([nil nil ((8339 . 8340)) nil (25919 40691 480686 119000) 0 nil])
([nil nil ((8875 . 8877) (#("(" 0 1 (fontified nil)) . -8875) (8870 . 8876)) nil (25919 40691 480685 172000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8876)) nil (25919 40691 480683 931000) 0 nil])
([nil nil ((8878 . 8879)) nil (25919 40691 480683 162000) 0 nil])
([nil nil ((8542 . 8544) (#("(" 0 1 (fontified nil)) . -8542) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (8537 . 8543)) nil (25919 40691 480681 703000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8543) (undo-tree-id1115 . -1)) nil (25919 40691 480675 882000) 0 nil])
([nil nil ((8545 . 8546)) nil (25919 40691 480662 63000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -131) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) 132 (t 25919 40691 484126 335000)) nil (25919 40792 187262 701000) 0 nil])
([nil nil ((131 . 132) (t 25919 40792 187853 477000)) nil (25919 40793 613804 27000) 0 nil])
([nil nil ((nil rear-nonsticky nil 180 . 181) (nil fontified nil 131 . 181) (131 . 181) (t 25919 40793 615849 608000)) nil (25919 40902 916058 297000) 0 nil])
([nil nil ((147 . 148)) nil (25919 40902 916056 115000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -181) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) 182) nil (25919 40902 916050 599000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -181) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) 182 (t 25919 40902 919553 427000)) nil (25919 40903 720065 81000) 0 nil])
([nil nil ((5730 . 5754) (#("            " 0 12 (fontified t)) . 5730) (undo-tree-id1297 . -12) (t 25919 40903 723551 249000)) nil (25919 40954 595924 646000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5750) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) 5754) nil (25919 40954 595920 164000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5746) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) 5750) nil (25919 40954 595885 703000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -219) (undo-tree-id25 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -220) (undo-tree-id26 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:constant.builtin)) . -221) (undo-tree-id27 . -1) 222 (t 25919 40954 599413 403000)) nil (25921 2845 16245 942000) 0 nil])
([nil nil ((219 . 224)) nil (25921 2845 16241 245000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -223) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 224) nil (25921 2845 16236 339000) 0 nil])
([nil nil ((apply -4 182 289 undo--wrap-and-run-primitive-undo 182 289 ((227 . 229) (182 . 184) 264)) (t 25921 2845 19490 129000)) nil (25921 2857 889052 666000) 0 nil])
([nil nil ((apply -2 268 292 undo--wrap-and-run-primitive-undo 268 292 ((268 . 270) 289)) (t 25921 2857 891455 261000)) nil (25921 2883 875739 202000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 182) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 182) (t 25921 2883 879384 825000)) nil (25933 1222 57204 946000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 225) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 225)) nil (25933 1222 57202 994000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 219) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (#("l" 0 1 (fontified t)) . 219) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (#("a" 0 1 (fontified t)) . 219) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (#("F" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . 219) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (25933 1222 57199 636000) 0 nil])
([nil nil ((221 . 221) (221 . 222) (220 . 220) (220 . 221) (219 . 219) (219 . 220)) nil (25933 1222 57159 702000) 0 nil])
([nil nil ((apply -4 182 290 undo--wrap-and-run-primitive-undo 182 290 ((226 . 228) (182 . 184) 263))) nil (25933 1344 409908 325000) 0 nil])
([nil nil ((nil rear-nonsticky nil 396 . 397) (nil fontified nil 290 . 397) (290 . 397)) nil (25933 1344 409907 290000) 0 nil])
([nil nil ((289 . 290)) nil (25933 1344 409905 885000) 0 nil])
([nil nil ((#("torch.manual_seed(seed)
if torch.cuda.is_available():
    torch.cuda.manual_seed_all(seed)  # For all GPUs
" 0 6 (fontified t) 6 17 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t) 24 26 (face tree-sitter-hl-face:keyword fontified t) 26 33 (fontified t) 33 37 (face tree-sitter-hl-face:property fontified t) 37 38 (fontified t) 38 50 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 64 (fontified t) 64 68 (face tree-sitter-hl-face:property fontified t) 68 69 (fontified t) 69 84 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 84 85 (face (rainbow-delimiters-depth-1-face) fontified t) 85 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 92 (fontified t) 92 106 (face tree-sitter-hl-face:comment fontified t) 106 107 (fontified t rear-nonsticky t)) . 291) (undo-tree-id22 . -107) 398) nil (25933 1344 409904 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -290) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 291) nil (25933 1344 409898 893000) 0 nil])
([nil nil ((1911 . 1923) (t 25933 1344 412949 243000)) nil (25933 1503 232599 291000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1919) (undo-tree-id26 . -4) 1923) nil (25933 1503 232598 8000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1915) (undo-tree-id25 . -4) 1919) nil (25933 1503 232595 656000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1911) (undo-tree-id24 . -4) 1915) nil (25933 1503 232593 413000) 0 nil])
([nil nil ((1911 . 1923)) nil (25933 1503 232591 43000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1919) (undo-tree-id23 . -4) 1923) nil (25933 1503 232589 770000) 0 nil])
([nil nil ((1232 . 1233)) nil (25933 1503 232580 62000) 0 nil])
([nil nil ((nil fontified nil 1339 . 1340) (nil fontified nil 1325 . 1339) (nil fontified nil 1323 . 1325) (nil fontified nil 1322 . 1323) (nil fontified nil 1318 . 1322) (nil fontified nil 1317 . 1318) (nil fontified nil 1302 . 1317) (nil fontified nil 1301 . 1302) (nil fontified nil 1297 . 1301) (nil fontified nil 1285 . 1297) (nil fontified nil 1284 . 1285) (nil fontified nil 1283 . 1284) (nil fontified nil 1271 . 1283) (nil fontified nil 1270 . 1271) (nil fontified nil 1266 . 1270) (nil fontified nil 1259 . 1266) (nil fontified nil 1257 . 1259) (nil fontified nil 1256 . 1257) (nil fontified nil 1255 . 1256) (nil fontified nil 1251 . 1255) (nil fontified nil 1250 . 1251) (nil fontified nil 1239 . 1250) (nil fontified nil 1233 . 1239) (1233 . 1340)) nil (25933 1503 232578 153000) 0 nil])
([nil nil ((1233 . 1241)) nil (25933 1503 232570 713000) 0 nil])
([nil nil ((1265 . 1273)) nil (25933 1503 232568 912000) 0 nil])
([nil nil ((1303 . 1315) (#("    " 0 4 (fontified t)) . 1303)) nil (25933 1503 232563 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1334 . 1335) (nil fontified nil 1334 . 1335) (nil fontified nil 1333 . 1334) (nil fontified nil 1329 . 1333) (nil fontified nil 1328 . 1329) (nil fontified nil 1317 . 1328) (nil fontified nil 1311 . 1317) (nil fontified nil 1303 . 1311) (1303 . 1335) (t 25933 1503 236954 298000)) nil (25933 1511 959058 937000) 0 nil])
([nil nil ((1311 . 1315) 1303) nil (25933 1511 959055 746000) 0 nil])
([nil nil ((1321 . 1321) (1321 . 1322)) nil (25933 1511 959054 462000) 0 nil])
([nil nil ((1324 . 1324) (1324 . 1325) (1323 . 1323) (1323 . 1324) (1322 . 1322) (1322 . 1323)) nil (25933 1511 959052 916000) 0 nil])
([nil nil ((#("i" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1322) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("d" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1323) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1324) (undo-tree-id54 . -1) 1325) nil (25933 1511 959048 262000) 0 nil])
([nil nil ((1325 . 1325) (1325 . 1326) (1323 . 1323) (1323 . 1325) (1322 . 1322) (1322 . 1323)) nil (25933 1511 959003 188000) 0 nil])
([nil nil ((nil fontified nil 1413 . 1417) (#("seed" 0 4 (fontified nil)) . -1408) (1412 . 1421) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1394) (1398 . 1407) (nil fontified nil 1358 . 1362) (#("seed" 0 4 (fontified nil)) . -1353) (1357 . 1366) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1343) (1347 . 1356) (nil fontified nil 1269 . 1273) (#("seed" 0 4 (fontified nil)) . -1264) (1268 . 1277) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1254) (t 25933 1511 964954 575000) (1258 . 1267) (t 25933 1511 964954 575000)) nil (25933 1543 173866 455000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1348) (undo-tree-id70 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1349) (undo-tree-id71 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1350) (undo-tree-id72 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1351) (undo-tree-id73 . -1) 1352) nil (25933 1543 173861 848000) 0 nil])
([nil nil ((1351 . 1351) (1351 . 1352) (1350 . 1350) (1350 . 1351) (1348 . 1348) (1348 . 1350)) nil (25933 1543 173855 968000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1399) (undo-tree-id66 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1400) (undo-tree-id67 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1401) (undo-tree-id68 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1402) (undo-tree-id69 . -1) 1403) nil (25933 1543 173852 944000) 0 nil])
([nil nil ((1402 . 1402) (1402 . 1403) (1401 . 1401) (1401 . 1402) (1399 . 1399) (1399 . 1401)) nil (25933 1543 173847 97000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1259) (undo-tree-id62 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1260) (undo-tree-id63 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1261) (undo-tree-id64 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1262) (undo-tree-id65 . -1) 1263) nil (25933 1543 173844 426000) 0 nil])
([nil nil ((1262 . 1262) (1262 . 1263) (1261 . 1261) (1261 . 1262) (1260 . 1260) (1260 . 1261) (1259 . 1259) (1259 . 1260)) nil (25933 1543 173838 610000) 0 nil])
([nil nil ((#("s" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1254) (undo-tree-id57 . -1) (#("e" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1255) (undo-tree-id58 . -1) (#("l" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1256) (undo-tree-id59 . -1) (#("f" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1257) (undo-tree-id60 . -1) (#("." 0 1 (fontified t)) . -1258) (undo-tree-id61 . -1) 1259) nil (25933 1543 173835 573000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:property fontified t)) . 1338)) nil (25933 1543 173827 958000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1338)) nil (25933 1543 173826 830000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:property fontified t)) . 1384) (undo-tree-id56 . -4)) nil (25933 1543 173824 753000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1384) (undo-tree-id55 . 1)) nil (25933 1543 173819 64000) 0 nil])
([nil nil ((1269 . 1278) (t 25933 1543 176955 569000)) nil (25933 1546 782890 986000) 0 nil])
([nil nil ((1437 . 1441) 1429 (t 25933 1546 784955 683000)) nil (25933 1550 411886 471000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1437) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) 1441) nil (25933 1550 411881 161000) 0 nil])
([nil nil ((nil fontified nil 2303 . 2304) (nil fontified nil 2289 . 2303) (nil fontified nil 2287 . 2289) (nil fontified nil 2286 . 2287) (nil fontified nil 2282 . 2286) (nil fontified nil 2281 . 2282) (nil fontified nil 2277 . 2281) (nil fontified nil 2276 . 2277) (nil fontified nil 2272 . 2276) (nil fontified nil 2268 . 2272) (nil fontified nil 2261 . 2268) (nil fontified nil 2260 . 2261) (nil fontified nil 2256 . 2260) (nil fontified nil 2250 . 2256) (nil fontified nil 2238 . 2250) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2232 . 2236) (nil fontified nil 2231 . 2232) (nil fontified nil 2227 . 2231) (nil fontified nil 2226 . 2227) (nil fontified nil 2222 . 2226) (nil fontified nil 2215 . 2222) (nil fontified nil 2214 . 2215) (nil fontified nil 2210 . 2214) (nil fontified nil 2204 . 2210) (nil fontified nil 2192 . 2204) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2176 . 2188) (nil fontified nil 2175 . 2176) (nil fontified nil 2171 . 2175) (nil fontified nil 2164 . 2171) (nil fontified nil 2162 . 2164) (nil fontified nil 2154 . 2162) (nil fontified nil 2153 . 2154) (nil fontified nil 2144 . 2153) (nil fontified nil 2143 . 2144) (nil fontified nil 2139 . 2143) (nil fontified nil 2138 . 2139) (nil fontified nil 2134 . 2138) (nil fontified nil 2133 . 2134) (nil fontified nil 2129 . 2133) (nil fontified nil 2122 . 2129) (nil fontified nil 2116 . 2122) (nil fontified nil 2108 . 2116) (2108 . 2304) (t 25933 1550 416955 799000)) nil (25933 1566 740831 157000) 0 nil])
([nil nil ((nil fontified t 2267 . 2271) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 2267 . 2271) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2267) (2276 . 2280) (nil fontified t 2222 . 2226) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 2222 . 2226) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2222) (2231 . 2235) (nil fontified t 2134 . 2138) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 2134 . 2138) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2134) (2143 . 2147)) nil (25933 1566 740811 916000) 0 nil])
([nil nil ((2107 . 2120) (t 25933 1566 744956 318000)) nil (25933 1654 445243 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2163 . 2164) (nil fontified nil 2108 . 2164) (2108 . 2164)) nil (25933 1654 445242 254000) 0 nil])
([nil nil ((2108 . 2120)) nil (25933 1654 445240 325000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2116) (undo-tree-id137 . -4) 2120) nil (25933 1654 445238 892000) 0 nil])
([nil nil ((2144 . 2152) 2152) nil (25933 1654 445236 399000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2219) (undo-tree-id133 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2220) (undo-tree-id134 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2221) (undo-tree-id135 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -2222) (undo-tree-id136 . -1) 2223) nil (25933 1654 445234 200000) 0 nil])
([nil nil ((2221 . 2221) (2221 . 2221) (2221 . 2221) (2221 . 2222) (2220 . 2220) (2220 . 2221) (2219 . 2219) (2219 . 2220)) nil (25933 1654 445228 102000) 0 nil])
([nil nil ((2225 . 2225) (2225 . 2227) (2224 . 2224) (2224 . 2225) (2223 . 2223) (2223 . 2224) (2222 . 2222) (2222 . 2223)) nil (25933 1654 445224 646000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2192) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("        torch.manual_seed(new_seed)
" 0 8 (fontified t) 8 14 (fontified t) 14 21 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 21 25 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (fontified t)) . -2193) (undo-tree-id123 . -29) (undo-tree-id124 . -29) (undo-tree-id125 . -29) (undo-tree-id126 . -29) (undo-tree-id127 . -29) (undo-tree-id128 . -29) (undo-tree-id129 . -29) (undo-tree-id130 . -29) (undo-tree-id131 . -29) (undo-tree-id132 . -36) 2229) nil (25933 1654 445220 747000) 0 nil])
([nil nil ((#("            " 0 4 (fontified t) 4 12 (fontified t)) . -2188) (undo-tree-id90 . -4) (undo-tree-id91 . -12) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) 2192) nil (25933 1654 445192 511000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2262) (#("n" 0 1 (fontified t)) . 2262) (#("o" 0 1 (fontified t)) . 2262) (#("N" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . 2262)) nil (25933 1654 445173 54000) 0 nil])
([nil nil ((2266 . 2266) (2266 . 2267) (2265 . 2265) (2265 . 2266) (2264 . 2264) (2264 . 2265) (2263 . 2263) (2263 . 2264) (2262 . 2262) (2262 . 2263)) nil (25933 1654 445171 252000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2266) (undo-tree-id89 . -1) 2267) nil (25933 1654 445167 733000) 0 nil])
([nil nil ((2268 . 2268) (2268 . 2270) (2267 . 2267) (2267 . 2268) (2266 . 2266) (2266 . 2267)) nil (25933 1654 445165 263000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2311) (undo-tree-id85 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2312) (undo-tree-id86 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2313) (undo-tree-id87 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -2314) (undo-tree-id88 . -1) 2315) nil (25933 1654 445162 311000) 0 nil])
([nil nil ((2314 . 2315) (2313 . 2313) (2313 . 2314) (2312 . 2312) (2312 . 2313) (2311 . 2311) (2311 . 2312)) nil (25933 1654 445155 410000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -2314) 2315) nil (25933 1654 445152 703000) 0 nil])
([nil nil ((2314 . 2314) (2314 . 2316)) nil (25933 1654 445151 228000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -2314) (undo-tree-id83 . -1) (#("_" 0 1 (fontified t)) . -2315) (undo-tree-id84 . -1) 2316) nil (25933 1654 445148 782000) 0 nil])
([nil nil ((2314 . 2317)) nil (25933 1654 445134 575000) 0 nil])
([nil nil ((2318 . 2318) (2318 . 2319) (2317 . 2317) (2317 . 2318)) nil (25933 1654 445128 993000) 0 nil])
([nil nil ((2107 . 2119) (t 25933 1654 448959 109000)) nil (25933 1657 509710 711000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2115) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) 2119) nil (25933 1657 509708 59000) 0 nil])
([nil nil ((2108 . 2120) (#("        " 0 8 (fontified nil)) . 2107) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -8) (undo-tree-id142 . -8) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (2115 . 2116)) nil (25933 1657 509688 926000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2116) (undo-tree-id215 . -4) 2120 (t 25933 1657 512959 207000)) nil (25933 1660 489848 174000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2112) (undo-tree-id214 . -4) 2116) nil (25933 1660 489845 695000) 0 nil])
([nil nil ((2112 . 2113)) nil (25933 1660 489843 647000) 0 nil])
([nil nil ((#("<" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2112) (undo-tree-id213 . -1) 2113) nil (25933 1660 489841 613000) 0 nil])
([nil nil ((2108 . 2120) (#("    " 0 4 (fontified t)) . 2108) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) 2112) nil (25933 1660 489837 818000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2116) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) 2120) nil (25933 1660 489816 600000) 0 nil])
([nil nil ((20 . 21) (t 25933 1660 496959 302000)) nil (25933 1665 833139 58000) 0 nil])
([nil nil ((30 . 30) (30 . 32) (29 . 29) (29 . 30) (27 . 27) (27 . 29) (26 . 26) (26 . 27) (24 . 24) (24 . 26) (23 . 23) (23 . 24) (22 . 22) (22 . 23) (21 . 21) (21 . 22)) nil (25933 1679 224641 839000) 0 nil])
([nil nil ((10773 . 10781) (t 25933 1679 780959 916000)) nil (25933 5933 225757 110000) 0 nil] [nil nil ((#("import time
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 11 (fontified t) 11 12 (fontified t)) . -21) (undo-tree-id216 . -7) (undo-tree-id217 . -12) 33 (t 25933 1665 836959 472000)) ((21 . 33) (t 25933 1678 636959 879000)) (25933 1678 632266 130000) 0 nil])
([nil nil ((11101 . 11109)) nil (25933 5933 225752 464000) 0 nil])
nil
([nil nil ((10671 . 10683) (t 25933 5933 229095 270000)) nil (25933 5951 479468 458000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10679) (undo-tree-id218 . -4) 10683) nil (25933 5951 479464 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 209 . 210) (nil fontified nil 159 . 210) (159 . 210) (t 25933 5951 485095 851000)) nil (25933 6007 855570 937000) 0 nil])
([nil nil ((159 . 160)) nil (25933 6007 855565 13000) 0 nil])
([nil nil ((7969 . 7977) (t 25933 6007 861097 645000)) nil (25933 6123 777632 128000) 0 nil])
([nil nil ((8262 . 8274)) nil (25933 6123 777630 975000) 0 nil])
([nil nil ((7977 . 7977) (7977 . 7979)) nil (25933 6123 777630 200000) 0 nil])
([nil nil ((7968 . 7977)) nil (25933 6123 777629 187000) 0 nil])
([nil nil ((7988 . 7997)) nil (25933 6123 777628 267000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 7991) (7990 . 7991) (7989 . 7991) (#("'" 0 1 (fontified nil)) . -7989) (7988 . 7990)) nil (25933 6123 777627 55000) 0 nil])
([nil nil ((7992 . 7992) (7992 . 7993) (7991 . 7991) (7991 . 7992) (7990 . 7990) (7990 . 7991)) nil (25933 6123 777625 49000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7992) (undo-tree-id219 . -1) 7993) nil (25933 6123 777622 567000) 0 nil])
([nil nil ((7997 . 7997) (7997 . 7998) (7995 . 7995) (7995 . 7997) (7994 . 7994) (7994 . 7995) (7993 . 7993) (7993 . 7994) (7992 . 7992) (7992 . 7993)) nil (25933 6123 777610 930000) 0 nil])
([nil nil ((7999 . 8000)) nil (25933 6123 777607 320000) 0 nil])
([nil nil ((8000 . 8013)) nil (25933 6123 777602 836000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 8015) (8014 . 8015) (#("
" 0 1 (fontified t)) . 8013) (8014 . 8015) (t 25933 6123 781101 333000)) nil (25933 6140 131006 394000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8158 . 8159) (nil fontified nil 8015 . 8159) (8015 . 8159)) nil (25933 6140 131004 486000) 0 nil])
([nil nil ((8015 . 8027)) nil (25933 6140 131003 205000) 0 nil])
([nil nil ((8060 . 8072)) nil (25933 6140 131002 412000) 0 nil])
([nil nil ((8103 . 8115)) nil (25933 6140 131001 109000) 0 nil])
([nil nil ((8155 . 8194) (#("                           " 0 27 (fontified t)) . 8155) (undo-tree-id241 . -12) 8167) nil (25933 6140 130999 397000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8153) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 8154) nil (25933 6140 130992 718000) 0 nil])
([nil nil ((8206 . 8218) (#("       " 0 7 (fontified t)) . 8206) (undo-tree-id251 . -7) 8213 (t 25933 6140 137101 854000)) nil (25933 6174 352993 676000) 0 nil])
([nil nil ((8159 . 8159) (8159 . 8160) (8156 . 8156) (8156 . 8159) (8155 . 8155) (8155 . 8156) (8154 . 8154) (8154 . 8155) (8151 . 8151) (8151 . 8154)) nil (25933 6174 352990 639000) 0 nil])
([nil nil ((8160 . 8160) (8160 . 8161)) nil (25933 6174 352987 864000) 0 nil])
([nil nil ((8212 . 8212) (8212 . 8215)) nil (25933 6174 352986 556000) 0 nil])
([nil nil ((#("ç" 0 1 (fontified t)) . -8214) (undo-tree-id250 . -1) 8215) nil (25933 6174 352985 276000) 0 nil])
([nil nil ((8221 . 8221) (8221 . 8222) (8217 . 8217) (8217 . 8221) (8216 . 8216) (8216 . 8217) (8215 . 8215) (8215 . 8216) (8214 . 8214) (8214 . 8215)) nil (25933 6174 352982 844000) 0 nil])
([nil nil ((8223 . 8225)) nil (25933 6174 352980 117000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8224) (undo-tree-id249 . -1) 8225) nil (25933 6174 352979 200000) 0 nil])
([nil nil ((8224 . 8264)) nil (25933 6174 352977 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8283 . 8284) (nil fontified nil 8283 . 8284) (nil fontified nil 8280 . 8283) (nil fontified nil 8278 . 8280) (nil fontified nil 8275 . 8278) (nil fontified nil 8273 . 8275) (nil fontified nil 8270 . 8273) (nil fontified nil 8268 . 8270) (nil fontified nil 8265 . 8268) (nil fontified nil 8264 . 8265) (8264 . 8284)) nil (25933 6174 352976 215000) 0 nil])
([nil nil ((8284 . 8285)) nil (25933 6174 352972 908000) 0 nil])
([nil nil ((8285 . 8325)) nil (25933 6174 352971 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8344 . 8345) (nil fontified nil 8344 . 8345) (nil fontified nil 8341 . 8344) (nil fontified nil 8339 . 8341) (nil fontified nil 8336 . 8339) (nil fontified nil 8334 . 8336) (nil fontified nil 8331 . 8334) (nil fontified nil 8329 . 8331) (nil fontified nil 8326 . 8329) (nil fontified nil 8325 . 8326) (8325 . 8345)) nil (25933 6174 352970 175000) 0 nil])
([nil nil ((8345 . 8346)) nil (25933 6174 352966 963000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8341) (undo-tree-id248 . -1) 8342) nil (25933 6174 352965 790000) 0 nil])
([nil nil ((8341 . 8341) (8341 . 8342)) nil (25933 6174 352963 765000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8275) (undo-tree-id247 . -1) 8276) nil (25933 6174 352962 588000) 0 nil])
([nil nil ((8275 . 8275) (8275 . 8276)) nil (25933 6174 352960 418000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8270) (undo-tree-id246 . -1) 8271) nil (25933 6174 352959 206000) 0 nil])
([nil nil ((8270 . 8270) (8270 . 8271)) nil (25933 6174 352956 863000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8331) (undo-tree-id245 . -1) 8332) nil (25933 6174 352955 618000) 0 nil])
([nil nil ((8331 . 8331) (8331 . 8332)) nil (25933 6174 352953 325000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8267) (undo-tree-id244 . -1) 8268) nil (25933 6174 352952 109000) 0 nil])
([nil nil ((8267 . 8267) (8267 . 8268)) nil (25933 6174 352949 807000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8328) (undo-tree-id243 . -1) 8329) nil (25933 6174 352948 298000) 0 nil])
([nil nil ((8328 . 8328) (8328 . 8329)) nil (25933 6174 352945 8000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8206) (undo-tree-id242 . -1) 8207) nil (25933 6174 352943 543000) 0 nil])
([nil nil ((8206 . 8206) (8206 . 8207)) nil (25933 6174 352932 848000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8150)) nil (25933 6174 352930 401000) 0 nil])
([nil nil ((8150 . 8150) (8150 . 8151)) nil (25933 6174 352925 733000) 0 nil])
([nil nil ((8059 . 8071) (t 25933 6174 357102 943000)) nil (25933 6192 199034 119000) 0 nil])
([nil nil ((8061 . 8061) (8061 . 8066) (8060 . 8060) (8060 . 8061) (8059 . 8059) (8059 . 8060) (8056 . 8056) (8056 . 8059)) nil (25933 6192 199029 130000) 0 nil])
([nil nil ((8071 . 8071) (8071 . 8072) (8067 . 8067) (8067 . 8071) (t 25933 6192 205103 511000)) nil (25933 6209 323116 383000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -8071) (undo-tree-id256 . -1) 8072) nil (25933 6209 323114 540000) 0 nil])
([nil nil ((8073 . 8073) (8073 . 8074) (8072 . 8072) (8072 . 8073) (8071 . 8071) (8071 . 8072)) nil (25933 6209 323112 161000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -8073) (undo-tree-id255 . -1) 8074) nil (25933 6209 323110 197000) 0 nil])
([nil nil ((8085 . 8085) (8085 . 8087) (8084 . 8084) (8084 . 8085) (8082 . 8082) (8082 . 8084) (8081 . 8081) (8081 . 8082) (8080 . 8080) (8080 . 8081) (8079 . 8079) (8079 . 8080) (8075 . 8075) (8075 . 8079) (8073 . 8073) (8073 . 8075)) nil (25933 6209 323107 475000) 0 nil])
([nil nil ((8393 . 8393) (8393 . 8394) (8389 . 8389) (8389 . 8393)) nil (25933 6209 323103 444000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -8393) (undo-tree-id254 . -1) 8394) nil (25933 6209 323101 665000) 0 nil])
([nil nil ((8395 . 8397) (8394 . 8394) (8394 . 8395) (8393 . 8393) (8393 . 8394)) nil (25933 6209 323098 563000) 0 nil])
([nil nil ((8402 . 8402) (8402 . 8404) (8401 . 8401) (8401 . 8402) (8400 . 8400) (8400 . 8401) (8399 . 8399) (8399 . 8400) (8397 . 8397) (8397 . 8399)) nil (25933 6209 323096 291000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -8402) (undo-tree-id252 . -1) (#("." 0 1 (fontified t)) . -8403) (undo-tree-id253 . -1) 8404) nil (25933 6209 323092 136000) 0 nil])
([nil nil ((8407 . 8407) (8407 . 8409) (8406 . 8406) (8406 . 8407) (8405 . 8405) (8405 . 8406) (8403 . 8403) (8403 . 8405) (8402 . 8402) (8402 . 8403)) nil (25933 6209 323076 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8481 . 8482) (nil fontified nil 8423 . 8482) (8423 . 8482) (t 25933 6209 329104 56000)) nil (25933 6222 77024 639000) 0 nil])
([nil nil ((8410 . 8423)) nil (25933 6222 77019 459000) 0 nil])
([nil nil ((8495 . 8507) (t 25933 6222 81104 462000)) nil (25933 6259 236979 180000) 0 nil])
([nil nil ((8496 . 8508) (#("            " 0 12 (fontified nil)) . 8495) (undo-tree-id258 . -12) (8507 . 8508) (t 25933 6259 249105 644000)) nil (25933 6337 276306 434000) 0 nil])
([nil nil ((8514 . 8516) (8513 . 8513) (8513 . 8514) (8512 . 8512) (8512 . 8513) (8511 . 8511) (8511 . 8512) (8510 . 8510) (8510 . 8511) (8508 . 8508) (8508 . 8510)) nil (25933 6337 276302 569000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8515) (undo-tree-id257 . -1) 8516) nil (25933 6337 276298 344000) 0 nil])
([nil nil ((8515 . 8518)) nil (25933 6337 276284 787000) 0 nil])
([nil nil ((8518 . 8530) (#(" " 0 1 (fontified nil)) . 8517) (undo-tree-id260 . -1) (8518 . 8519) (t 25933 6337 281108 127000)) nil (25933 6378 279825 746000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8546 . 8547) (nil fontified nil 8496 . 8547) (8496 . 8547)) nil (25933 6378 279822 379000) 0 nil])
([nil nil ((8496 . 8508)) nil (25933 6378 279820 428000) 0 nil])
([nil nil ((#("            samples =
" 0 12 (fontified t) 12 19 (face tree-sitter-hl-face:variable fontified t) 19 20 (fontified t) 20 21 (face tree-sitter-hl-face:operator fontified t) 21 22 (fontified t)) . -8559) (undo-tree-id259 . -22) 8581) nil (25933 6378 279816 507000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -8546) (undo-tree-id373 . -1) (#("_" 0 1 (fontified t)) . -8547) (undo-tree-id374 . -1) (#("s" 0 1 (fontified t)) . -8548) (undo-tree-id375 . -1) (#("a" 0 1 (fontified t)) . -8549) (undo-tree-id376 . -1) (#("m" 0 1 (fontified t)) . -8550) (undo-tree-id377 . -1) (#("p" 0 1 (fontified t)) . -8551) (undo-tree-id378 . -1) (#("l" 0 1 (fontified t)) . -8552) (undo-tree-id379 . -1) (#("e" 0 1 (fontified t)) . -8553) (undo-tree-id380 . -1) (#("s" 0 1 (fontified t)) . -8554) (undo-tree-id381 . -1) 8555 (t 25933 6378 285109 432000)) nil (25933 6667 979950 619000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8547) (8547 . 8547) (8547 . 8548) (8546 . 8546) (8546 . 8547)) nil (25933 6667 979931 123000) 0 nil])
([nil nil ((#("a" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8547) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 8548) nil (25933 6667 979923 670000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8548)) nil (25933 6667 979664 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8643 . 8644) (nil fontified nil 8643 . 8644) (nil fontified nil 8642 . 8643) (nil fontified nil 8637 . 8642) (nil fontified nil 8636 . 8637) (nil fontified nil 8632 . 8636) (nil fontified nil 8631 . 8632) (nil fontified nil 8630 . 8631) (nil fontified nil 8619 . 8630) (nil fontified nil 8618 . 8619) (nil fontified nil 8615 . 8618) (nil fontified nil 8608 . 8615) (nil fontified nil 8607 . 8608) (nil fontified nil 8606 . 8607) (nil fontified nil 8605 . 8606) (nil fontified nil 8600 . 8605) (nil fontified nil 8599 . 8600) (nil fontified nil 8598 . 8599) (nil fontified nil 8593 . 8598) (nil fontified nil 8592 . 8593) (nil fontified nil 8587 . 8592) (nil fontified nil 8586 . 8587) (nil fontified nil 8582 . 8586) (nil fontified nil 8581 . 8582) (nil fontified nil 8580 . 8581) (nil fontified nil 8579 . 8580) (nil fontified nil 8576 . 8579) (nil fontified nil 8575 . 8576) (nil fontified nil 8574 . 8575) (nil fontified nil 8573 . 8574) (nil fontified nil 8570 . 8573) (nil fontified nil 8569 . 8570) (nil fontified nil 8568 . 8569) (nil fontified nil 8567 . 8568) (nil fontified nil 8564 . 8567) (nil fontified nil 8552 . 8564) (8552 . 8644) (t 25933 6667 985118 651000)) nil (25933 6682 34451 60000) 0 nil])
([nil nil ((8552 . 8553)) nil (25933 6682 34442 253000) 0 nil])
([nil nil ((#("samples" 0 7 (face tree-sitter-hl-face:variable fontified t)) . 8508)) nil (25933 6682 34440 121000) 0 nil])
([nil nil ((8510 . 8510) (8510 . 8511) (8508 . 8508) (8508 . 8510)) nil (25933 6682 34435 593000) 0 nil])
([nil nil ((8548 . 8560) (t 25933 6682 41119 98000)) nil (25933 6683 801755 73000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8631) (undo-tree-id410 . -1) (#("a" 0 1 (fontified t)) . -8632) (undo-tree-id411 . -1) (#("_" 0 1 (fontified t)) . -8633) (undo-tree-id412 . -1) (#("d" 0 1 (fontified t)) . -8634) (undo-tree-id413 . -1) (#("i" 0 1 (fontified t)) . -8635) (undo-tree-id414 . -1) (#("f" 0 1 (fontified t)) . -8636) (undo-tree-id415 . -1) (#("f" 0 1 (fontified t)) . -8637) (undo-tree-id416 . -1) (#(" " 0 1 (fontified t)) . -8638) (undo-tree-id417 . -1) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8639) (undo-tree-id418 . -1) (#(" " 0 1 (fontified t)) . -8640) (undo-tree-id419 . -1) (#("s" 0 1 (fontified t)) . -8641) (undo-tree-id420 . -1) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -8642) (undo-tree-id421 . -1) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -8643) (undo-tree-id422 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -8644) (undo-tree-id423 . -1) (#("." 0 1 (fontified t)) . -8645) (undo-tree-id424 . -1) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8646) (undo-tree-id425 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8647) (undo-tree-id426 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8648) (undo-tree-id427 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8649) (undo-tree-id428 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8650) (undo-tree-id429 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8651) (undo-tree-id430 . -1) 8652 (t 25933 6683 809119 155000)) nil (25933 6699 444276 521000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -8622) (undo-tree-id401 . -1) (#("." 0 1 (fontified t)) . -8623) (undo-tree-id402 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -8624) (undo-tree-id403 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -8625) (undo-tree-id404 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -8626) (undo-tree-id405 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8627) (undo-tree-id406 . -1) (#("t" 0 1 (fontified t)) . -8628) (undo-tree-id407 . -1) (#("h" 0 1 (fontified t)) . -8629) (undo-tree-id408 . -1) (#("e" 0 1 (fontified t)) . -8630) (undo-tree-id409 . -1) 8631) nil (25933 6699 444248 810000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8618) (undo-tree-id397 . -1) (#("o" 0 1 (fontified t)) . -8619) (undo-tree-id398 . -1) (#("r" 0 1 (fontified t)) . -8620) (undo-tree-id399 . -1) (#("c" 0 1 (fontified t)) . -8621) (undo-tree-id400 . -1) 8622) nil (25933 6699 444236 959000) 0 nil])
([nil nil ((8620 . 8620) (8620 . 8621) (8618 . 8618) (8618 . 8620)) nil (25933 6699 444231 268000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8549)) nil (25933 6699 444229 707000) 0 nil])
([nil nil ((#("/" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8547) (undo-tree-id395 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8548) (undo-tree-id396 . -1) 8549) nil (25933 6699 444228 164000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8549)) nil (25933 6699 444224 605000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8547) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("." 0 1 (fontified t)) . -8548) (undo-tree-id394 . -1) 8549) nil (25933 6699 444220 760000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8549)) nil (25933 6699 444192 427000) 0 nil])
([nil nil ((8623 . 8625) (#("(" 0 1 (fontified nil)) . -8623) (8623 . 8624) (t 25933 6699 449119 652000)) nil (25933 6732 695874 141000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8623) (undo-tree-id435 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8624) (undo-tree-id436 . -1) 8625) nil (25933 6732 695872 397000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8625) (8624 . 8625) (8623 . 8625) (#("[" 0 1 (fontified nil)) . -8623) (8623 . 8624)) nil (25933 6732 695868 737000) 0 nil])
([nil nil ((8624 . 8624) (8624 . 8625)) nil (25933 6732 695867 192000) 0 nil])
([nil nil ((8626 . 8627)) nil (25933 6732 695866 262000) 0 nil])
([nil nil ((8631 . 8631) (8631 . 8632) (8627 . 8627) (8627 . 8631)) nil (25933 6732 695865 341000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8631) (undo-tree-id434 . -1) 8632) nil (25933 6732 695863 826000) 0 nil])
([nil nil ((8633 . 8635) (#("[" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -8633) (8632 . 8634) (8631 . 8631) (8631 . 8632)) nil (25933 6732 695861 336000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -8632) (undo-tree-id432 . -1) (#("[" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -8633) (undo-tree-id433 . -1) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8634)) nil (25933 6732 695859 170000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8634) (8633 . 8634) (8632 . 8634) (#("[" 0 1 (fontified nil)) . -8632) (8632 . 8633)) nil (25933 6732 695854 599000) 0 nil])
([nil nil ((8633 . 8633) (8633 . 8634)) nil (25933 6732 695852 845000) 0 nil])
([nil nil ((8637 . 8639) (8635 . 8635) (8635 . 8637)) nil (25933 6732 695851 728000) 0 nil])
([nil nil ((8620 . 8622) (#("(" 0 1 (fontified nil)) . -8620) (8620 . 8621)) nil (25933 6732 695850 71000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8621)) nil (25933 6732 695848 376000) 0 nil])
([nil nil ((8640 . 8641)) nil (25933 6732 695847 472000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8646) (8645 . 8646) (8644 . 8646) (#("[" 0 1 (fontified nil)) . -8644) (8644 . 8645) (8643 . 8643) (8643 . 8644) (8640 . 8640) (8640 . 8643)) nil (25933 6732 695846 69000) 0 nil])
([nil nil ((8645 . 8645) (8645 . 8646)) nil (25933 6732 695843 232000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . 8655) (8654 . 8655) (8653 . 8655) (#("[" 0 1 (fontified nil)) . -8653) (8653 . 8654) (8652 . 8652) (8652 . 8653) (8651 . 8651) (8651 . 8652) (8647 . 8647) (8647 . 8651)) nil (25933 6732 695841 164000) 0 nil])
([nil nil ((8654 . 8654) (8654 . 8655)) nil (25933 6732 695837 967000) 0 nil])
([nil nil ((8656 . 8656) (8656 . 8657)) nil (25933 6732 695836 647000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8656) (undo-tree-id431 . -1) 8657) nil (25933 6732 695834 306000) 0 nil])
([nil nil ((8656 . 8656) (8656 . 8658)) nil (25933 6732 695820 502000) 0 nil])
([nil nil ((8659 . 8662) (t 25933 6732 701120 711000)) nil (25933 6737 607263 595000) 0 nil])
([nil nil ((#("§" 0 1 (fontified t)) . -8660) (undo-tree-id437 . -1) (#(" " 0 1 (fontified t)) . -8661) (undo-tree-id438 . -1) 8662) nil (25933 6737 607258 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8687 . 8688) (nil fontified nil 8687 . 8688) (nil fontified nil 8686 . 8687) (nil fontified nil 8681 . 8686) (nil fontified nil 8680 . 8681) (nil fontified nil 8678 . 8680) (nil fontified nil 8677 . 8678) (nil fontified nil 8673 . 8677) (nil fontified nil 8672 . 8673) (nil fontified nil 8668 . 8672) (nil fontified nil 8661 . 8668) (nil fontified nil 8660 . 8661) (8660 . 8688) (t 25933 6737 613120 867000)) nil (25933 6749 431066 818000) 0 nil])
([nil nil ((8014 . 8014) (8014 . 8015) (8013 . 8013) (8013 . 8014) (8011 . 8011) (8011 . 8013) (8010 . 8010) (8010 . 8011) (8009 . 8009) (8009 . 8010) (8008 . 8008) (8008 . 8009) (8007 . 8007) (8007 . 8008) (8006 . 8006) (8006 . 8007) (8005 . 8005) (8005 . 8006) (8004 . 8004) (8004 . 8005) (7999 . 7999) (7999 . 8004) (t 25933 6749 437121 243000)) nil (25933 6765 340031 939000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8019) (8018 . 8019) (8017 . 8019) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8017) (8017 . 8018) (8015 . 8015) (8015 . 8017)) nil (25933 6765 340026 361000) 0 nil])
([nil nil ((8022 . 8022) (8022 . 8023) (8021 . 8021) (8021 . 8022) (8020 . 8020) (8020 . 8021) (8019 . 8019) (8019 . 8020) (8018 . 8018) (8018 . 8019)) nil (25933 6765 340023 960000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8026) (undo-tree-id439 . 1) (8025 . 8026) (8024 . 8026) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8024) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (8024 . 8025)) nil (25933 6765 340019 733000) 0 nil])
([nil nil ((8029 . 8029) (8029 . 8030) (8028 . 8028) (8028 . 8029) (8027 . 8027) (8027 . 8028) (8026 . 8026) (8026 . 8027) (8025 . 8025) (8025 . 8026)) nil (25933 6765 339998 610000) 0 nil])
([nil nil ((#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8619) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("." 0 1 (face tree-sitter-hl-face:number fontified t)) . -8620) (undo-tree-id446 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8621) (undo-tree-id447 . -1) (#(" " 0 1 (fontified t)) . -8622) (undo-tree-id448 . -1) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8623) (undo-tree-id449 . -1) (#(" " 0 1 (fontified t)) . -8624) (undo-tree-id450 . -1) 8625 (t 25933 6765 345121 749000)) nil (25933 6813 966745 877000) 0 nil])
([nil nil ((10609 . 10629) (t 25933 6813 973123 297000)) nil (25933 6854 80979 230000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10625) (undo-tree-id482 . -4) 10629) nil (25933 6854 80978 114000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10621) (undo-tree-id481 . -4) 10625) nil (25933 6854 80975 879000) 0 nil])
([nil nil ((10621 . 10621) (10621 . 10623)) nil (25933 6854 80973 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10676 . 10677) (nil fontified nil 10675 . 10677) (nil fontified nil 10674 . 10675) (nil fontified nil 10669 . 10674) (nil fontified nil 10668 . 10669) (nil fontified nil 10667 . 10668) (nil fontified nil 10662 . 10667) (nil fontified nil 10661 . 10662) (nil fontified nil 10652 . 10661) (nil fontified nil 10651 . 10652) (nil fontified nil 10647 . 10651) (nil fontified nil 10646 . 10647) (nil fontified nil 10644 . 10646) (nil fontified nil 10643 . 10644) (nil fontified nil 10642 . 10643) (nil fontified nil 10639 . 10642) (nil fontified nil 10638 . 10639) (nil fontified nil 10637 . 10638) (nil fontified nil 10635 . 10637) (nil fontified nil 10623 . 10635) (10623 . 10677)) nil (25933 6854 80972 52000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10623) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t)) . -10624) (undo-tree-id470 . -1) (#(" " 0 1 (fontified t)) . -10625) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -10626) (undo-tree-id472 . -1) (#(" " 0 1 (fontified t)) . -10627) (undo-tree-id473 . -1) (#(" " 0 1 (fontified t)) . -10628) (undo-tree-id474 . -1) (#(" " 0 1 (fontified t)) . -10629) (undo-tree-id475 . -1) (#(" " 0 1 (fontified t)) . -10630) (undo-tree-id476 . -1) (#(" " 0 1 (fontified t)) . -10631) (undo-tree-id477 . -1) (#(" " 0 1 (fontified t)) . -10632) (undo-tree-id478 . -1) (#(" " 0 1 (fontified t)) . -10633) (undo-tree-id479 . -1) (#(" " 0 1 (fontified t)) . -10634) (undo-tree-id480 . -1) 10635) nil (25933 6854 80964 669000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10628) (undo-tree-id467 . -1) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10629) (undo-tree-id468 . -1) 10630) nil (25933 6854 80949 770000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10627) (undo-tree-id466 . -1) 10628) nil (25933 6854 80945 916000) 0 nil])
([nil nil ((10633 . 10633) (10633 . 10635) (10631 . 10631) (10631 . 10633) (10630 . 10630) (10630 . 10631) (10628 . 10628) (10628 . 10630) (10627 . 10627) (10627 . 10628)) nil (25933 6854 80943 387000) 0 nil])
([nil nil ((#("g" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10634) (undo-tree-id465 . -1) 10635) nil (25933 6854 80940 60000) 0 nil])
([nil nil ((10634 . 10634) (10634 . 10635)) nil (25933 6854 80937 825000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10628) (undo-tree-id458 . -1) (#("w" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10629) (undo-tree-id459 . -1) (#("_" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10630) (undo-tree-id460 . -1) (#("r" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10631) (undo-tree-id461 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10632) (undo-tree-id462 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10633) (undo-tree-id463 . -1) (#("k" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10634) (undo-tree-id464 . -1) 10635) nil (25933 6854 80935 255000) 0 nil])
([nil nil ((10628 . 10628) (10628 . 10629)) nil (25933 6854 80926 190000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7991) (undo-tree-id451 . -1) (#("w" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7992) (undo-tree-id452 . -1) (#("_" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7993) (undo-tree-id453 . -1) (#("r" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7994) (undo-tree-id454 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7995) (undo-tree-id455 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7996) (undo-tree-id456 . -1) (#("k" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7997) (undo-tree-id457 . -1) 7998) nil (25933 6854 80922 851000) 0 nil])
([nil nil ((7991 . 7991) (7991 . 7992)) nil (25933 6854 80900 695000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8039) (undo-tree-id528 . -1) 8040 (t 25933 6854 89124 573000)) nil (25933 6860 185088 161000) 0 nil])
([nil nil ((8182 . 8183)) nil (25933 6860 185084 969000) 0 nil])
([nil nil ((#("x" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -8182) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 8183) nil (25933 6860 185079 335000) 0 nil])
([nil nil ((8520 . 8532) (t 25933 6860 193124 768000)) nil (25933 6864 950130 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8671 . 8672) (nil fontified nil 8651 . 8672) (8651 . 8672) (t 25933 6864 957124 919000)) nil (25933 6954 959916 718000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8664) (undo-tree-id539 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil)) . -8665) (undo-tree-id540 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8666) (undo-tree-id541 . -1) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8667) (undo-tree-id542 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8668) (undo-tree-id543 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8669) (undo-tree-id544 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8670) (undo-tree-id545 . -1) 8671) nil (25933 6954 959914 17000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8660) (undo-tree-id535 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 8661) (#("x" 0 1 (fontified t)) . -8661) (undo-tree-id536 . -1) (#(" " 0 1 (fontified t)) . -8662) (undo-tree-id537 . -1) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8663) (undo-tree-id538 . -1) 8664) nil (25933 6954 959903 990000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8660)) nil (25933 6954 959897 418000) 0 nil])
([nil nil ((8660 . 8660) (8660 . 8661)) nil (25933 6954 959896 260000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -8660) (undo-tree-id534 . -1) 8661) nil (25933 6954 959894 605000) 0 nil])
([nil nil ((8660 . 8661)) nil (25933 6954 959891 298000) 0 nil])
([nil nil ((#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8660) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) 8661) nil (25933 6954 959889 792000) 0 nil])
([nil nil ((8660 . 8662) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8660) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (8660 . 8661)) nil (25933 6954 959884 148000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8661)) nil (25933 6954 959865 178000) 0 nil])
([nil nil ((10678 . 10694) (t 25933 6954 969127 784000)) nil (25933 7014 647872 176000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10795 . 10796) (nil fontified nil 10795 . 10796) (nil fontified nil 10794 . 10795) (nil fontified nil 10793 . 10794) (nil fontified nil 10792 . 10793) (nil fontified nil 10787 . 10792) (nil fontified nil 10786 . 10787) (nil fontified nil 10785 . 10786) (nil fontified nil 10784 . 10785) (nil fontified nil 10778 . 10784) (nil fontified nil 10777 . 10778) (nil fontified nil 10776 . 10777) (nil fontified nil 10775 . 10776) (nil fontified nil 10772 . 10775) (nil fontified nil 10771 . 10772) (nil fontified nil 10770 . 10771) (nil fontified nil 10765 . 10770) (nil fontified nil 10764 . 10765) (nil fontified nil 10763 . 10764) (nil fontified nil 10758 . 10763) (nil fontified nil 10757 . 10758) (nil fontified nil 10752 . 10757) (nil fontified nil 10751 . 10752) (nil fontified nil 10747 . 10751) (nil fontified nil 10746 . 10747) (nil fontified nil 10745 . 10746) (nil fontified nil 10744 . 10745) (nil fontified nil 10743 . 10744) (nil fontified nil 10705 . 10743) (nil fontified nil 10704 . 10705) (nil fontified nil 10703 . 10704) (nil fontified nil 10698 . 10703) (nil fontified nil 10678 . 10698) (10678 . 10796)) nil (25933 7014 647869 810000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10694) 10678) nil (25933 7014 647861 46000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711)) nil (25933 7014 647858 337000) 0 nil])
([nil nil ((10714 . 10714) (10714 . 10718) (10713 . 10713) (10713 . 10714) (10712 . 10712) (10712 . 10713) (10711 . 10711) (10711 . 10712)) nil (25933 7014 647855 517000) 0 nil])
([nil nil ((10718 . 10718) (10718 . 10719)) nil (25933 7014 647848 664000) 0 nil])
([nil nil ((apply 2 888 916 undo--wrap-and-run-primitive-undo 888 916 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -896) 918))) nil (25933 7090 761852 331000) 0 nil])
([nil nil ((apply -2 916 985 undo--wrap-and-run-primitive-undo 916 985 ((924 . 926) 982))) nil (25933 7090 761847 898000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8548) (8546 . 8546) (8546 . 8547) (8545 . 8545) (8545 . 8546) (t 25933 7090 769132 105000)) nil (25933 7119 804780 511000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -8546) (undo-tree-id546 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -8547) (undo-tree-id547 . -1) 8548) nil (25933 7119 804776 511000) 0 nil])
([nil nil ((8549 . 8549) (8549 . 8550) (8548 . 8548) (8548 . 8549) (8547 . 8547) (8547 . 8548) (8546 . 8546) (8546 . 8547)) nil (25933 7119 804758 943000) 0 nil])
([nil nil ((8670 . 8671) (8669 . 8669) (8669 . 8670) (8667 . 8667) (8667 . 8669) (8666 . 8666) (8666 . 8667) (t 25933 7119 813133 29000)) nil (25933 7133 73556 533000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -8670) (undo-tree-id549 . -1) 8671) nil (25933 7133 73553 612000) 0 nil])
([nil nil ((8670 . 8670) (8670 . 8671)) nil (25933 7133 73550 213000) 0 nil])
([nil nil ((8684 . 8684) (8684 . 8685) (8683 . 8683) (8683 . 8684) (8682 . 8682) (8682 . 8683) (8680 . 8680) (8680 . 8682)) nil (25933 7133 73548 482000) 0 nil])
([nil nil ((8700 . 8700) (8700 . 8701) (8699 . 8699) (8699 . 8700) (8696 . 8696) (8696 . 8699)) nil (25933 7133 73545 206000) 0 nil])
([nil nil ((8714 . 8714) (8714 . 8715) (8713 . 8713) (8713 . 8714) (8710 . 8710) (8710 . 8713)) nil (25933 7133 73542 98000) 0 nil])
([nil nil ((8694 . 8755) (#(" " 0 1 (fontified nil)) . 8693) (undo-tree-id548 . -1) (8694 . 8695)) nil (25933 7133 73536 368000) 0 nil])
([nil nil ((1998 . 2014) (t 25933 7133 81133 452000)) nil (25933 7140 450723 853000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2010) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) 2014) nil (25933 7140 450721 141000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2006) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) 2010) nil (25933 7140 450702 595000) 0 nil])
([nil nil ((211 . 212) (t 25933 7140 457133 686000)) nil (25933 17751 62628 116000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -211) (undo-tree-id29 . -1) 212) nil (25933 17751 62626 877000) 0 nil])
([nil nil ((211 . 211) (211 . 212)) nil (25933 17751 62624 929000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -211) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 212) nil (25933 17751 62623 31000) 0 nil])
([nil nil ((211 . 211) (211 . 212)) nil (25933 17751 62613 142000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -211) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 212) nil (25933 17751 62607 454000) 0 nil])
([nil nil ((13084 . 13092) (t 25933 17751 73471 339000)) nil (25933 18983 523880 753000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8619) (8618 . 8619) (8617 . 8619) (#("(" 0 1 (fontified nil)) . -8617) (8612 . 8618) (t 25933 18983 533510 559000)) nil (25933 19399 389334 360000) 0 nil])
([nil nil ((8618 . 8632)) nil (25933 19399 389332 338000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 8620) (8619 . 8620) (8618 . 8620) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8618) (8618 . 8619)) nil (25933 19399 389331 212000) 0 nil])
([nil nil ((8619 . 8621)) nil (25933 19399 389329 392000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8619) (undo-tree-id31 . -1) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8620) (undo-tree-id32 . -1) 8621) nil (25933 19399 389328 130000) 0 nil])
([nil nil ((8619 . 8620)) nil (25933 19399 389323 498000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8619) (undo-tree-id30 . -1) 8620) nil (25933 19399 389321 163000) 0 nil])
([nil nil ((8619 . 8622)) nil (25933 19399 389309 498000) 0 nil])
([nil nil ((8623 . 8625)) nil (25933 19399 389305 184000) 0 nil])
([nil nil ((8640 . 8653) (t 25933 19399 397523 793000)) nil (25933 19403 575467 428000) 0 nil])
([nil nil ((8601 . 8613) (#("            " 0 12 (fontified nil)) . 8600) (undo-tree-id33 . -12) (undo-tree-id34 . -12) (undo-tree-id35 . -12) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (8612 . 8613)) nil (25933 19403 575462 164000) 0 nil])
([nil nil ((8600 . 8612) (t 25933 19403 585523 926000)) nil (25933 19420 566757 898000) 0 nil])
([nil nil ((8601 . 8613) (#("            " 0 12 (fontified nil)) . 8600) (undo-tree-id60 . -12) (8612 . 8613)) nil (25933 19420 566756 90000) 0 nil])
([nil nil ((8620 . 8620) (8620 . 8621) (8619 . 8619) (8619 . 8620) (8618 . 8618) (8618 . 8619) (8617 . 8617) (8617 . 8618) (8613 . 8613) (8613 . 8617)) nil (25933 19420 566752 814000) 0 nil])
([nil nil ((8621 . 8621) (8621 . 8622)) nil (25933 19420 566749 429000) 0 nil])
([nil nil ((8628 . 8629) (8627 . 8627) (8627 . 8628) (8626 . 8626) (8626 . 8627) (8625 . 8625) (8625 . 8626) (8624 . 8624) (8624 . 8625) (8623 . 8623) (8623 . 8624) (8622 . 8622) (8622 . 8623)) nil (25933 19420 566747 176000) 0 nil])
([nil nil ((8630 . 8646) (#("            " 0 12 (fontified t)) . 8630) (undo-tree-id38 . -12) (undo-tree-id39 . -12) (undo-tree-id40 . -12) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -12) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (undo-tree-id47 . -12) (undo-tree-id48 . -12) (undo-tree-id49 . -12) (undo-tree-id50 . -12) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (undo-tree-id55 . -12) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (undo-tree-id59 . -12)) nil (25933 19420 566738 834000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8737) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8737) (#("U" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8737) (#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8737) (#("e" 0 1 (fontified t)) . 8737) (#("R" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil)) . 8737) (#("." 0 1 (fontified t)) . 8737) (#("n" 0 1 (fontified t)) . 8737) (#("n" 0 1 (fontified t)) . 8737) (#(" " 0 1 (fontified t)) . 8737) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 8737) (t 25933 19420 577524 467000)) nil (25933 19597 17342 160000) 0 nil])
([nil nil ((8737 . 8738)) nil (25933 19597 17339 130000) 0 nil])
([nil nil ((8738 . 8739)) nil (25933 19597 17338 242000) 0 nil])
([nil nil ((#("         " 0 9 (fontified t)) . -8820) 8819) nil (25933 19597 17337 104000) 0 nil])
([nil nil ((8688 . 8704) (#("            " 0 12 (fontified t)) . 8688)) nil (25933 19597 17335 962000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8700) (undo-tree-id65 . -4) 8704) nil (25933 19597 17334 693000) 0 nil])
([nil nil ((8881 . 8893) (#("            " 0 12 (fontified nil)) . 8880) (undo-tree-id64 . -12) (8892 . 8893)) nil (25933 19597 17332 475000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8898) (8897 . 8898) (8896 . 8898) (#("[" 0 1 (face tree-sitter-hl-face:constructor fontified nil)) . -8896) (8896 . 8897) (8895 . 8895) (8895 . 8896) (8894 . 8894) (8894 . 8895) (8893 . 8893) (8893 . 8894)) nil (25933 19597 17329 431000) 0 nil])
([nil nil ((8900 . 8900) (8900 . 8902) (8898 . 8898) (8898 . 8900) (8897 . 8897) (8897 . 8898)) nil (25933 19597 17325 695000) 0 nil])
([nil nil ((8903 . 8903) (8903 . 8907)) nil (25933 19597 17323 778000) 0 nil])
([nil nil ((8907 . 8920)) nil (25933 19597 17322 725000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8934 . 8935) (nil fontified nil 8934 . 8935) (nil fontified nil 8933 . 8934) (nil fontified nil 8932 . 8933) (nil fontified nil 8931 . 8932) (nil fontified nil 8930 . 8931) (nil fontified nil 8929 . 8930) (nil fontified nil 8928 . 8929) (nil fontified nil 8927 . 8928) (nil fontified nil 8924 . 8927) (nil fontified nil 8923 . 8924) (nil fontified nil 8920 . 8923) (nil fontified nil 8908 . 8920) (8908 . 8935)) nil (25933 19597 17321 272000) 0 nil])
([nil nil ((#(">" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8927) (undo-tree-id62 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8928) (undo-tree-id63 . -1) 8929) nil (25933 19597 17316 960000) 0 nil])
([nil nil ((8927 . 8927) (8927 . 8929)) nil (25933 19597 17312 611000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8933) (undo-tree-id61 . -1) 8934) nil (25933 19597 17310 269000) 0 nil])
([nil nil ((8933 . 8933) (8933 . 8934)) nil (25933 19597 17295 327000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14302 . 14303) (nil fontified nil 14302 . 14303) (nil fontified nil 14301 . 14302) (nil fontified nil 14300 . 14301) (nil fontified nil 14299 . 14300) (nil fontified nil 14291 . 14299) (nil fontified nil 14290 . 14291) (nil fontified nil 14286 . 14290) (nil fontified nil 14285 . 14286) (nil fontified nil 14284 . 14285) (nil fontified nil 14283 . 14284) (nil fontified nil 14282 . 14283) (nil fontified nil 14281 . 14282) (nil fontified nil 14280 . 14281) (nil fontified nil 14277 . 14280) (nil fontified nil 14276 . 14277) (nil fontified nil 14272 . 14276) (nil fontified nil 14271 . 14272) (nil fontified nil 14270 . 14271) (nil fontified nil 14269 . 14270) (nil fontified nil 14265 . 14269) (nil fontified nil 14264 . 14265) (nil fontified nil 14260 . 14264) (nil fontified nil 14259 . 14260) (nil fontified nil 14258 . 14259) (nil fontified nil 14257 . 14258) (nil fontified nil 14256 . 14257) (nil fontified nil 14255 . 14256) (nil fontified nil 14254 . 14255) (nil fontified nil 14253 . 14254) (nil fontified nil 14250 . 14253) (nil fontified nil 14249 . 14250) (nil fontified nil 14245 . 14249) (nil fontified nil 14229 . 14245) (14229 . 14303) (t 25933 19597 25530 82000)) nil (25933 19720 613643 682000) 0 nil])
([nil nil ((apply -2 14155 14305 undo--wrap-and-run-primitive-undo 14155 14305 ((14171 . 14173) 14229))) nil (25933 19720 613634 871000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14293) (undo-tree-id80 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14294) (undo-tree-id81 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14295) (undo-tree-id82 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14296) (undo-tree-id83 . -1) (#("F" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14297) (undo-tree-id84 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14298) (undo-tree-id85 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14299) (undo-tree-id86 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14300) (undo-tree-id87 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14301) (undo-tree-id88 . -1) (#("i" 0 1 (fontified t)) . -14302) (undo-tree-id89 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14303) (undo-tree-id90 . -1) 14304) nil (25933 19720 613631 946000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14298) (14297 . 14298) (14296 . 14298) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -14296) (14296 . 14297) (14294 . 14294) (14294 . 14296) (14293 . 14293) (14293 . 14294)) nil (25933 19720 613617 651000) 0 nil])
([nil nil ((14297 . 14297) (14297 . 14298)) nil (25933 19720 613614 821000) 0 nil])
([nil nil ((14301 . 14302) (14299 . 14299) (14299 . 14301)) nil (25933 19720 613613 323000) 0 nil])
([nil nil ((#("ù" 0 1 (fontified t)) . -14300) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -14301) (undo-tree-id79 . -1) 14302) nil (25933 19720 613611 453000) 0 nil])
([nil nil ((14305 . 14305) (14305 . 14306) (14304 . 14304) (14304 . 14305) (14303 . 14303) (14303 . 14304) (14300 . 14300) (14300 . 14303)) nil (25933 19720 613607 524000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -14300) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -14301) (undo-tree-id73 . -1) (#("s" 0 1 (fontified t)) . -14302) (undo-tree-id74 . -1) (#("q" 0 1 (fontified t)) . -14303) (undo-tree-id75 . -1) (#("r" 0 1 (fontified t)) . -14304) (undo-tree-id76 . -1) (#("t" 0 1 (fontified t)) . -14305) (undo-tree-id77 . -1) 14306) nil (25933 19720 613603 771000) 0 nil])
([nil nil ((14300 . 14301)) nil (25933 19720 613595 377000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14300) (undo-tree-id71 . -1) 14301) nil (25933 19720 613594 260000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14314) (14313 . 14314) (14312 . 14314) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -14312) (14312 . 14313) (14311 . 14311) (14311 . 14312) (14310 . 14310) (14310 . 14311) (14309 . 14309) (14309 . 14310) (14308 . 14308) (14308 . 14309) (14307 . 14307) (14307 . 14308) (14306 . 14306) (14306 . 14307) (14305 . 14305) (14305 . 14306) (14304 . 14304) (14304 . 14305) (14303 . 14303) (14303 . 14304) (14300 . 14300) (14300 . 14303)) nil (25933 19720 613591 1000) 0 nil])
([nil nil ((14316 . 14316) (14316 . 14317) (14315 . 14315) (14315 . 14316) (14314 . 14314) (14314 . 14315) (14313 . 14313) (14313 . 14314)) nil (25933 19720 613584 286000) 0 nil])
([nil nil ((14319 . 14319) (14319 . 14320) (14318 . 14318) (14318 . 14319) (14317 . 14317) (14317 . 14318)) nil (25933 19720 613580 982000) 0 nil])
([nil nil ((#("J" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -14318) (undo-tree-id69 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -14319) (undo-tree-id70 . -1) 14320) nil (25933 19720 613577 877000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 14322) (undo-tree-id66 . 1) (14321 . 14322) (14320 . 14322) (#("[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -14320) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (14320 . 14321) (14319 . 14319) (14319 . 14320) (14318 . 14318) (14318 . 14319)) nil (25933 19720 613572 126000) 0 nil])
([nil nil ((14321 . 14321) (14321 . 14322)) nil (25933 19720 613551 737000) 0 nil])
([nil nil ((14324 . 14325) (t 25933 19720 621534 15000)) nil (25933 19734 341415 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14333 . 14334) (nil fontified nil 14332 . 14334) (nil fontified nil 14331 . 14332) (nil fontified nil 14327 . 14331) (nil fontified nil 14326 . 14327) (nil fontified nil 14325 . 14326) (14325 . 14334)) nil (25933 19734 341409 605000) 0 nil])
([nil nil ((14230 . 14247) (t 25933 19734 353534 452000)) nil (25933 19918 9887 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14311 . 14312) (nil fontified nil 14311 . 14312) (nil fontified nil 14310 . 14311) (nil fontified nil 14304 . 14310) (nil fontified nil 14303 . 14304) (nil fontified nil 14299 . 14303) (nil fontified nil 14298 . 14299) (nil fontified nil 14292 . 14298) (nil fontified nil 14290 . 14292) (nil fontified nil 14289 . 14290) (nil fontified nil 14281 . 14289) (nil fontified nil 14280 . 14281) (nil fontified nil 14276 . 14280) (nil fontified nil 14274 . 14276) (nil fontified nil 14269 . 14274) (nil fontified nil 14268 . 14269) (nil fontified nil 14264 . 14268) (nil fontified nil 14263 . 14264) (nil fontified nil 14262 . 14263) (nil fontified nil 14257 . 14262) (nil fontified nil 14250 . 14257) (nil fontified nil 14249 . 14250) (nil fontified nil 14248 . 14249) (nil fontified nil 14239 . 14248) (nil fontified nil 14231 . 14239) (14231 . 14312)) nil (25933 19918 9884 722000) 0 nil])
([nil nil ((14231 . 14247) (#("        " 0 8 (fontified t)) . 14231)) nil (25933 19918 9878 87000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("_" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247)) nil (25933 19918 9875 517000) 0 nil])
([nil nil ((14250 . 14250) (14250 . 14251) (14249 . 14249) (14249 . 14250) (14247 . 14247) (14247 . 14249)) nil (25933 19918 9872 327000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 14267) (#("," 0 1 (fontified t)) . 14267) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("_" 0 1 (face tree-sitter-hl-face:constant fontified t)) . 14267) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("." 0 1 (fontified t)) . 14267) (#("f" 0 1 (fontified t)) . 14267) (#("l" 0 1 (fontified t)) . 14267) (#("e" 0 1 (fontified t)) . 14267) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 14267)) nil (25933 19918 9868 225000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -14266) (undo-tree-id97 . -1) 14267) nil (25933 19918 9864 471000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14279) (undo-tree-id96 . -1) 14280) nil (25933 19918 9861 734000) 0 nil])
([nil nil ((#("                stim = torch.zeros(self.N_NEURON, device=self.device)
" 0 16 (fontified t) 16 20 (face tree-sitter-hl-face:variable fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t) 22 29 (fontified t) 29 34 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face tree-sitter-hl-face:keyword fontified t) 39 40 (fontified t) 40 48 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 48 50 (fontified t) 50 56 (face tree-sitter-hl-face:label fontified t) 56 57 (face tree-sitter-hl-face:operator fontified t) 57 61 (face tree-sitter-hl-face:keyword fontified t) 61 62 (fontified t) 62 68 (face tree-sitter-hl-face:property fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t) 69 70 (rear-nonsticky t fontified t)) . 14231) (undo-tree-id95 . -70)) nil (25933 19918 9859 351000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14230) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 14231) nil (25933 19918 9857 258000) 0 nil])
([nil nil ((14230 . 14231)) nil (25933 19918 9851 192000) 0 nil])
([nil nil ((14251 . 14251) (14251 . 14254) (14249 . 14249) (14249 . 14251) (14247 . 14247) (14247 . 14249)) nil (25933 19918 9849 689000) 0 nil])
([nil nil ((#("9" 0 1 (face tree-sitter-hl-face:number fontified t)) . -14253) (undo-tree-id91 . -1) 14254) nil (25933 19918 9847 60000) 0 nil])
([nil nil ((14254 . 14255) (14253 . 14253) (14253 . 14254)) nil (25933 19918 9835 428000) 0 nil])
([nil nil ((14272 . 14276) 14256) nil (25933 19918 9833 756000) 0 nil])
([nil nil ((14364 . 14380) (#("            " 0 12 (fontified nil)) . 14364) (14380 . 14381) (14378 . 14378) (14378 . 14380) (14377 . 14377) (14377 . 14378) (14376 . 14376) (14376 . 14377)) nil (25933 19918 9831 502000) 0 nil])
([nil nil ((14385 . 14406)) nil (25933 19918 9828 103000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14443 . 14444) (nil fontified nil 14443 . 14444) (nil fontified nil 14442 . 14443) (nil fontified nil 14441 . 14442) (nil fontified nil 14438 . 14441) (nil fontified nil 14437 . 14438) (nil fontified nil 14433 . 14437) (nil fontified nil 14432 . 14433) (nil fontified nil 14431 . 14432) (nil fontified nil 14430 . 14431) (nil fontified nil 14426 . 14430) (nil fontified nil 14425 . 14426) (nil fontified nil 14421 . 14425) (nil fontified nil 14420 . 14421) (nil fontified nil 14419 . 14420) (nil fontified nil 14418 . 14419) (nil fontified nil 14417 . 14418) (nil fontified nil 14416 . 14417) (nil fontified nil 14415 . 14416) (nil fontified nil 14414 . 14415) (nil fontified nil 14411 . 14414) (nil fontified nil 14410 . 14411) (nil fontified nil 14406 . 14410) (14406 . 14444)) nil (25933 19918 9825 326000) 0 nil])
([nil nil ((14444 . 14465)) nil (25933 19918 9815 54000) 0 nil])
([nil nil ((12635 . 12647) (t 25933 19918 21540 297000)) nil (25933 20199 818890 738000) 0 nil])
([nil nil ((apply -4 8881 8952 undo--wrap-and-run-primitive-undo 8881 8952 ((8922 . 8924) (8893 . 8895) 8935))) nil (25933 20199 818885 345000) 0 nil])
([nil nil ((apply 4 8881 8935 undo--wrap-and-run-primitive-undo 8881 8935 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8920) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8893) 8939))) nil (25933 20578 306002 534000) 0 nil])
([nil nil ((9798 . 9814) (#("                " 0 16 (fontified nil)) . 9797) (undo-tree-id111 . -16) (9796 . 9814) (t 25933 20578 317561 309000)) nil (25933 20595 75935 786000) 0 nil])
([nil nil ((nil fontified nil 9851 . 9852) (nil fontified nil 9850 . 9851) (nil fontified nil 9849 . 9850) (nil fontified nil 9848 . 9849) (nil fontified nil 9847 . 9848) (nil fontified nil 9846 . 9847) (nil fontified nil 9845 . 9846) (nil fontified nil 9844 . 9845) (nil fontified nil 9841 . 9844) (nil fontified nil 9840 . 9841) (nil fontified nil 9837 . 9840) (nil fontified nil 9825 . 9837) (nil fontified nil 9824 . 9825) (nil fontified nil 9823 . 9824) (nil fontified nil 9822 . 9823) (nil fontified nil 9821 . 9822) (nil fontified nil 9820 . 9821) (nil fontified nil 9819 . 9820) (nil fontified nil 9818 . 9819) (nil fontified nil 9817 . 9818) (nil fontified nil 9814 . 9817) (nil fontified nil 9813 . 9814) (nil fontified nil 9810 . 9813) (nil fontified nil 9798 . 9810) (9798 . 9852)) nil (25933 20595 75932 163000) 0 nil])
([nil nil ((#("            Pij[Pij>1] = 1
            Pij[Pij<0] = 0
" 0 12 (fontified t) 12 15 (face tree-sitter-hl-face:constructor fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 19 (face tree-sitter-hl-face:constructor fontified t) 19 20 (face tree-sitter-hl-face:operator fontified t) 20 21 (face tree-sitter-hl-face:number fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (fontified t) 23 24 (face tree-sitter-hl-face:operator fontified t) 24 25 (fontified t) 25 26 (face tree-sitter-hl-face:number fontified t) 26 27 (fontified t) 27 39 (fontified t) 39 42 (face tree-sitter-hl-face:constructor fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 46 (face tree-sitter-hl-face:constructor fontified t) 46 47 (face tree-sitter-hl-face:operator fontified t) 47 48 (face tree-sitter-hl-face:number fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 50 (fontified t) 50 51 (face tree-sitter-hl-face:operator fontified t) 51 52 (fontified t) 52 53 (face tree-sitter-hl-face:number fontified t) 53 54 (rear-nonsticky t fontified t)) . -8881) (undo-tree-id109 . -53) (undo-tree-id110 . -54) 8935) nil (25933 20595 75925 446000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8880) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 8881) nil (25933 20595 75915 798000) 0 nil])
([nil nil ((apply -4 9743 9818 undo--wrap-and-run-primitive-undo 9743 9818 ((9784 . 9786) (9755 . 9757) 9797))) nil (25933 20626 16561 132000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9813) (undo-tree-id112 . -4) 9801) nil (25933 20626 16556 988000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 9755) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 9755) (t 25933 20626 25562 827000)) nil (25933 20642 338032 188000) 0 nil])
([nil nil ((8881 . 8893) (#("            " 0 12 (fontified nil)) . 8880) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -12) (8892 . 8893) (t 25933 20642 345563 346000)) nil (25933 20677 43046 949000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8900) (8899 . 8900) (8898 . 8900) (#("(" 0 1 (fontified nil)) . -8898) (8898 . 8899) (8896 . 8896) (8896 . 8898) (8894 . 8894) (8894 . 8896) (8893 . 8893) (8893 . 8894)) nil (25933 20677 42980 837000) 0 nil])
([nil nil ((8899 . 8899) (8899 . 8900)) nil (25933 20677 42978 98000) 0 nil])
([nil nil ((8900 . 8900) (8900 . 8901)) nil (25933 20677 42977 127000) 0 nil])
([nil nil ((8907 . 8907) (8907 . 8908) (8905 . 8905) (8905 . 8907) (8904 . 8904) (8904 . 8905) (8903 . 8903) (8903 . 8904) (8902 . 8902) (8902 . 8903) (8901 . 8901) (8901 . 8902)) nil (25933 20677 42975 767000) 0 nil])
([nil nil ((8909 . 8922)) nil (25933 20677 42972 891000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 8901) (8900 . 8901) (8899 . 8901) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8899) (8899 . 8900)) nil (25933 20677 42971 757000) 0 nil])
([nil nil ((8901 . 8901) (8901 . 8902) (8900 . 8900) (8900 . 8901)) nil (25933 20677 42970 108000) 0 nil])
([nil nil ((#("P" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8900) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8901) (undo-tree-id118 . -1) 8902) nil (25933 20677 42968 301000) 0 nil])
([nil nil ((8901 . 8901) (8901 . 8902) (8900 . 8900) (8900 . 8901)) nil (25933 20677 42962 864000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8900) (undo-tree-id113 . -1) (#("j" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8901) (undo-tree-id114 . -1) 8902) nil (25933 20677 42960 469000) 0 nil])
([nil nil ((8902 . 8902) (8902 . 8903) (8901 . 8901) (8901 . 8902) (8900 . 8900) (8900 . 8901)) nil (25933 20677 42946 255000) 0 nil])
([nil nil ((8904 . 8906)) nil (25933 20677 42940 104000) 0 nil])
([nil nil ((apply -2 9780 9838 undo--wrap-and-run-primitive-undo 9780 9838 ((9792 . 9794) 9807))) nil (25933 20684 519093 770000) 0 nil])
([nil nil ((#("            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:comment fontified t) 14 17 (face tree-sitter-hl-face:comment fontified t) 17 18 (face tree-sitter-hl-face:comment fontified t) 18 21 (face tree-sitter-hl-face:comment fontified t) 21 22 (face tree-sitter-hl-face:comment fontified t) 22 23 (face tree-sitter-hl-face:comment fontified t) 23 24 (face tree-sitter-hl-face:comment fontified t) 24 25 (face tree-sitter-hl-face:comment fontified t) 25 26 (face tree-sitter-hl-face:comment fontified t) 26 27 (face tree-sitter-hl-face:comment fontified t) 27 28 (face tree-sitter-hl-face:comment fontified t) 28 29 (fontified t) 29 41 (fontified t) 41 43 (face tree-sitter-hl-face:comment fontified t) 43 46 (face tree-sitter-hl-face:comment fontified t) 46 47 (face tree-sitter-hl-face:comment fontified t) 47 50 (face tree-sitter-hl-face:comment fontified t) 50 51 (face tree-sitter-hl-face:comment fontified t) 51 52 (face tree-sitter-hl-face:comment fontified t) 52 53 (face tree-sitter-hl-face:comment fontified t) 53 54 (face tree-sitter-hl-face:comment fontified t) 54 55 (face tree-sitter-hl-face:comment fontified t) 55 56 (face tree-sitter-hl-face:comment fontified t) 56 57 (face tree-sitter-hl-face:comment fontified t) 57 58 (fontified t rear-nonsticky t)) . 9780) (undo-tree-id163 . -12) (undo-tree-id164 . -12) (undo-tree-id165 . -12) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (undo-tree-id168 . -12) (undo-tree-id169 . -12) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (undo-tree-id172 . -41) (undo-tree-id173 . -41) (undo-tree-id174 . -41) (undo-tree-id175 . -41) (undo-tree-id176 . -57) (undo-tree-id177 . -57) (undo-tree-id178 . -57) (undo-tree-id179 . -57) (undo-tree-id180 . -58) (undo-tree-id181 . -58) (undo-tree-id182 . -58) 9838 (t 25933 20684 529564 689000)) nil (25933 20946 568862 101000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9779) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 9780) nil (25933 20946 568840 268000) 0 nil])
([nil nil ((nil fontified nil 8937 . 8938) (nil fontified nil 8936 . 8937) (nil fontified nil 8935 . 8936) (nil fontified nil 8934 . 8935) (nil fontified nil 8933 . 8934) (nil fontified nil 8932 . 8933) (nil fontified nil 8931 . 8932) (nil fontified nil 8930 . 8931) (nil fontified nil 8927 . 8930) (nil fontified nil 8926 . 8927) (nil fontified nil 8923 . 8926) (nil fontified nil 8921 . 8923) (nil fontified nil 8909 . 8921) (nil fontified nil 8908 . 8909) (nil fontified nil 8907 . 8908) (nil fontified nil 8906 . 8907) (nil fontified nil 8905 . 8906) (nil fontified nil 8904 . 8905) (nil fontified nil 8903 . 8904) (nil fontified nil 8902 . 8903) (nil fontified nil 8901 . 8902) (nil fontified nil 8898 . 8901) (nil fontified nil 8897 . 8898) (nil fontified nil 8894 . 8897) (nil fontified nil 8892 . 8894) (nil fontified nil 8880 . 8892) (8880 . 8938)) nil (25933 20946 568716 766000) 0 nil])
([nil nil ((apply 4 8880 8934 undo--wrap-and-run-primitive-undo 8880 8934 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8919) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8892) 8938))) nil (25933 20948 401102 535000) 0 nil])
([nil nil ((8934 . 8946)) nil (25933 20948 401097 702000) 0 nil])
([nil nil ((1296 . 1304) (t 25933 20948 409573 86000)) nil (25933 21104 481578 588000) 0 nil])
([nil nil ((1297 . 1305) (#("        " 0 8 (fontified nil)) . 1296) (undo-tree-id204 . -8) (1304 . 1305)) nil (25933 21104 481577 299000) 0 nil])
([nil nil ((1309 . 1309) (1309 . 1310) (1307 . 1307) (1307 . 1309) (1305 . 1305) (1305 . 1307)) nil (25933 21104 481574 965000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1308) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1309) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 1310) nil (25933 21104 481572 470000) 0 nil])
([nil nil ((1308 . 1308) (1308 . 1310)) nil (25933 21104 481559 791000) 0 nil])
([nil nil ((1310 . 1310) (1310 . 1311)) nil (25933 21104 481558 648000) 0 nil])
([nil nil ((1315 . 1315) (1315 . 1316) (1314 . 1314) (1314 . 1315) (1313 . 1313) (1313 . 1314) (1312 . 1312) (1312 . 1313) (1311 . 1311) (1311 . 1312)) nil (25933 21104 481557 253000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1313) (undo-tree-id189 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1314) (undo-tree-id190 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1315) (undo-tree-id191 . -1) 1316) nil (25933 21104 481553 966000) 0 nil])
([nil nil ((1315 . 1315) (1315 . 1316) (1314 . 1314) (1314 . 1315) (1313 . 1313) (1313 . 1314)) nil (25933 21104 481549 29000) 0 nil])
([nil nil ((#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1315) (undo-tree-id188 . -1) 1316) nil (25933 21104 481546 504000) 0 nil])
([nil nil ((1323 . 1323) (1323 . 1325) (1322 . 1322) (1322 . 1323) (1319 . 1319) (1319 . 1322) (1317 . 1317) (1317 . 1319) (1316 . 1316) (1316 . 1317) (1315 . 1315) (1315 . 1316)) nil (25933 21104 481544 244000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1323) (undo-tree-id186 . -1) (#("t" 0 1 (fontified t)) . -1324) (undo-tree-id187 . -1) 1325) nil (25933 21104 481540 917000) 0 nil])
([nil nil ((1329 . 1330) (1328 . 1328) (1328 . 1329) (1327 . 1327) (1327 . 1328) (1326 . 1326) (1326 . 1327) (1323 . 1323) (1323 . 1326)) nil (25933 21104 481537 281000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1329) (undo-tree-id185 . -1) 1330) nil (25933 21104 481534 433000) 0 nil])
([nil nil ((1329 . 1330)) nil (25933 21104 481531 981000) 0 nil])
([nil nil ((1339 . 1343) 1331) nil (25933 21104 481531 28000) 0 nil])
([nil nil ((1389 . 1393) 1381) nil (25933 21104 481529 611000) 0 nil])
([nil nil ((1423 . 1439) (#("            " 0 12 (fontified t)) . 1423) (undo-tree-id184 . -12) 1435) nil (25933 21104 481527 392000) 0 nil])
([nil nil ((1473 . 1489) (#("            " 0 12 (fontified t)) . 1473) (undo-tree-id183 . -12) 1489) nil (25933 21104 481520 235000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1317) (undo-tree-id205 . -1) (#("i" 0 1 (fontified t)) . -1318) (undo-tree-id206 . -1) (#("s" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1319) (undo-tree-id207 . -1) (#(" " 0 1 (fontified t)) . -1320) (undo-tree-id208 . -1) (#("n" 0 1 (fontified t)) . -1321) (undo-tree-id209 . -1) (#("o" 0 1 (fontified t)) . -1322) (undo-tree-id210 . -1) (#("t" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -1323) (undo-tree-id211 . -1) (#(" " 0 1 (fontified nil)) . -1324) (undo-tree-id212 . -1) (#("N" 0 1 (face tree-sitter-hl-face:constructor fontified nil)) . -1325) (undo-tree-id213 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1326) (undo-tree-id214 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1327) (undo-tree-id215 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -1328) (undo-tree-id216 . -1) 1329 (t 25933 21104 493578 53000)) nil (25933 21138 138992 786000) 0 nil])
([nil nil ((1317 . 1318)) nil (25933 21138 138863 122000) 0 nil])
([nil nil ((1321 . 1322) (1318 . 1318) (1318 . 1321)) nil (25933 21138 138858 372000) 0 nil])
([nil nil ((8639 . 8641) (t 25933 61968 656469 833000)) nil (25933 63665 321344 379000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8744 . 8745) (nil fontified nil 8737 . 8745) (nil fontified nil 8733 . 8737) (nil fontified nil 8732 . 8733) (nil fontified nil 8641 . 8732) (8641 . 8745)) nil (25933 63665 321341 863000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8716) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -8717) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t)) . -8718) (undo-tree-id280 . -1) (#(" " 0 1 (fontified nil)) . -8719) (undo-tree-id281 . -1) (#(" " 0 1 (fontified t)) . -8720) (undo-tree-id282 . -1) (#(" " 0 1 (fontified nil)) . -8721) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -8722) (undo-tree-id284 . -1) (#(" " 0 1 (fontified nil)) . -8723) (undo-tree-id285 . -1) (#(" " 0 1 (fontified t)) . -8724) (undo-tree-id286 . -1) (#(" " 0 1 (fontified t)) . -8725) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t)) . -8726) (undo-tree-id288 . -1) (#("d" 0 1 (fontified t)) . -8727) (undo-tree-id289 . -1) 8728) nil (25933 63665 321333 189000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8695) (undo-tree-id257 . -1) (#(" " 0 1 (fontified nil)) . -8696) (undo-tree-id258 . -1) (#(" " 0 1 (fontified nil)) . -8697) (undo-tree-id259 . -1) (#(" " 0 1 (fontified nil)) . -8698) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -8699) (undo-tree-id261 . -1) (#(" " 0 1 (fontified nil)) . -8700) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t)) . -8701) (undo-tree-id263 . -1) (#(" " 0 1 (fontified nil)) . -8702) (undo-tree-id264 . -1) (#(" " 0 1 (fontified nil)) . -8703) (undo-tree-id265 . -1) (#(" " 0 1 (fontified t)) . -8704) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -8705) (undo-tree-id267 . -1) (#(" " 0 1 (fontified nil)) . -8706) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -8707) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -8708) (undo-tree-id270 . -1) (#(" " 0 1 (fontified nil)) . -8709) (undo-tree-id271 . -1) (#(" " 0 1 (fontified nil)) . -8710) (undo-tree-id272 . -1) (#(" " 0 1 (fontified t)) . -8711) (undo-tree-id273 . -1) (#(" " 0 1 (fontified nil)) . -8712) (undo-tree-id274 . -1) (#(" " 0 1 (fontified t)) . -8713) (undo-tree-id275 . -1) (#(" " 0 1 (fontified nil)) . -8714) (undo-tree-id276 . -1) (#(" " 0 1 (fontified t)) . -8715) (undo-tree-id277 . -1) 8716) nil (25933 63665 321294 280000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8674) (undo-tree-id236 . -1) (#(" " 0 1 (fontified nil)) . -8675) (undo-tree-id237 . -1) (#(" " 0 1 (fontified t)) . -8676) (undo-tree-id238 . -1) (#(" " 0 1 (fontified nil)) . -8677) (undo-tree-id239 . -1) (#(" " 0 1 (fontified t)) . -8678) (undo-tree-id240 . -1) (#(" " 0 1 (fontified nil)) . -8679) (undo-tree-id241 . -1) (#(" " 0 1 (fontified nil)) . -8680) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -8681) (undo-tree-id243 . -1) (#(" " 0 1 (fontified nil)) . -8682) (undo-tree-id244 . -1) (#(" " 0 1 (fontified t)) . -8683) (undo-tree-id245 . -1) (#(" " 0 1 (fontified nil)) . -8684) (undo-tree-id246 . -1) (#(" " 0 1 (fontified nil)) . -8685) (undo-tree-id247 . -1) (#(" " 0 1 (fontified nil)) . -8686) (undo-tree-id248 . -1) (#(" " 0 1 (fontified nil)) . -8687) (undo-tree-id249 . -1) (#(" " 0 1 (fontified nil)) . -8688) (undo-tree-id250 . -1) (#(" " 0 1 (fontified nil)) . -8689) (undo-tree-id251 . -1) (#(" " 0 1 (fontified nil)) . -8690) (undo-tree-id252 . -1) (#(" " 0 1 (fontified nil)) . -8691) (undo-tree-id253 . -1) (#(" " 0 1 (fontified nil)) . -8692) (undo-tree-id254 . -1) (#(" " 0 1 (fontified nil)) . -8693) (undo-tree-id255 . -1) (#(" " 0 1 (fontified nil)) . -8694) (undo-tree-id256 . -1) 8695) nil (25933 63665 321238 369000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8653) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -8654) (undo-tree-id216 . -1) (#(" " 0 1 (fontified nil)) . -8655) (undo-tree-id217 . -1) (#(" " 0 1 (fontified t)) . -8656) (undo-tree-id218 . -1) (#(" " 0 1 (fontified nil)) . -8657) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -8658) (undo-tree-id220 . -1) (#(" " 0 1 (fontified nil)) . -8659) (undo-tree-id221 . -1) (#(" " 0 1 (fontified t)) . -8660) (undo-tree-id222 . -1) (#(" " 0 1 (fontified nil)) . -8661) (undo-tree-id223 . -1) (#(" " 0 1 (fontified t)) . -8662) (undo-tree-id224 . -1) (#(" " 0 1 (fontified nil)) . -8663) (undo-tree-id225 . -1) (#(" " 0 1 (fontified t)) . -8664) (undo-tree-id226 . -1) (#(" " 0 1 (fontified nil)) . -8665) (undo-tree-id227 . -1) (#(" " 0 1 (fontified t)) . -8666) (undo-tree-id228 . -1) (#(" " 0 1 (fontified nil)) . -8667) (undo-tree-id229 . -1) (#(" " 0 1 (fontified t)) . -8668) (undo-tree-id230 . -1) (#(" " 0 1 (fontified nil)) . -8669) (undo-tree-id231 . -1) (#(" " 0 1 (fontified t)) . -8670) (undo-tree-id232 . -1) (#(" " 0 1 (fontified t)) . -8671) (undo-tree-id233 . -1) (#(" " 0 1 (fontified nil)) . -8672) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -8673) (undo-tree-id235 . -1) 8674) nil (25933 63665 321178 174000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8640) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#(" " 0 1 (fontified nil)) . -8641) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#(" " 0 1 (fontified nil)) . -8642) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#(" " 0 1 (fontified t)) . -8643) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t)) . -8644) (undo-tree-id206 . -1) (#(" " 0 1 (fontified nil)) . -8645) (undo-tree-id207 . -1) (#(" " 0 1 (fontified t)) . -8646) (undo-tree-id208 . -1) (#(" " 0 1 (fontified nil)) . -8647) (undo-tree-id209 . -1) (#(" " 0 1 (fontified nil)) . -8648) (undo-tree-id210 . -1) (#(" " 0 1 (fontified t)) . -8649) (undo-tree-id211 . -1) (#(" " 0 1 (fontified nil)) . -8650) (undo-tree-id212 . -1) (#(" " 0 1 (fontified nil)) . -8651) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -8652) (undo-tree-id214 . -1) 8653) nil (25933 63665 321089 77000) 0 nil])
([nil nil ((8640 . 8642)) nil (25933 63665 320779 247000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8658) (#("
" 0 1 (rear-nonsticky t fontified t)) . 8658)) nil (25933 63665 320777 62000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8657) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 8658) nil (25933 63665 320766 47000) 0 nil])
([nil nil ((8657 . 8658)) nil (25933 63665 320344 125000) 0 nil])
([nil nil ((#("dtype=self.FLOAT" 0 1 (fontified t) 1 5 (fontified t) 5 6 (face font-lock-operator-face fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 16 (fontified t)) . 8641) (undo-tree-id765 . -16) (undo-tree-id766 . -8) (undo-tree-id767 . -9) (undo-tree-id768 . -8) (undo-tree-id769 . -8) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (undo-tree-id775 . -8) (undo-tree-id776 . -8) (undo-tree-id777 . -8) (undo-tree-id778 . -8) (undo-tree-id779 . -8) (undo-tree-id780 . -8) (undo-tree-id781 . -8) (undo-tree-id782 . -8) (undo-tree-id783 . -8) (undo-tree-id784 . -8) (undo-tree-id785 . -8) (undo-tree-id786 . -7) (undo-tree-id787 . -8) (undo-tree-id788 . -6) (undo-tree-id789 . -8) (undo-tree-id790 . -6) (undo-tree-id791 . -6) (undo-tree-id792 . -6) (undo-tree-id793 . -6) (undo-tree-id794 . -6) (undo-tree-id795 . -6) (undo-tree-id796 . -6) (undo-tree-id797 . -6) (undo-tree-id798 . -6) (undo-tree-id799 . -6) (undo-tree-id800 . -6) (undo-tree-id801 . -6) (undo-tree-id802 . -6) (undo-tree-id803 . -6) (undo-tree-id804 . -6) (undo-tree-id805 . -5) (undo-tree-id806 . -6) (undo-tree-id807 . -5) (undo-tree-id808 . -5) (undo-tree-id809 . -5) (undo-tree-id810 . -5) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (undo-tree-id813 . -5) (undo-tree-id814 . -5) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -5) (undo-tree-id818 . -5) (undo-tree-id819 . -5) (undo-tree-id820 . -5) (undo-tree-id821 . -5) (undo-tree-id822 . -5) (undo-tree-id823 . -5) (undo-tree-id824 . -5) (undo-tree-id825 . -5) (undo-tree-id826 . -5) (undo-tree-id827 . -5) (undo-tree-id828 . -5) (undo-tree-id829 . -4) (undo-tree-id830 . -5) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -3) (undo-tree-id854 . -4) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -3) (undo-tree-id859 . -3) (undo-tree-id860 . -3) (undo-tree-id861 . -3) (undo-tree-id862 . -3) (undo-tree-id863 . -3) (undo-tree-id864 . -3) (undo-tree-id865 . -3) (undo-tree-id866 . -3) (undo-tree-id867 . -3) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -2) (undo-tree-id871 . -3) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -2) (undo-tree-id878 . -2) (undo-tree-id879 . -2) (undo-tree-id880 . -2) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (undo-tree-id885 . -2) (undo-tree-id886 . -2) (undo-tree-id887 . -2) (undo-tree-id888 . -2) (undo-tree-id889 . -2) (undo-tree-id890 . -2) (undo-tree-id891 . -2) (undo-tree-id892 . -2) (undo-tree-id893 . -2) (undo-tree-id894 . -1) (undo-tree-id895 . -2) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (t 25933 63665 363981 778000)) nil (25933 63838 647771 987000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8639) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#(" " 0 1 (fontified t)) . -8640) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) 8641) nil (25933 63838 647448 132000) 0 nil])
([nil nil ((8569 . 8571) (t 25933 63838 674170 128000)) nil (25933 63842 441862 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8586 . 8587) (nil fontified nil 8581 . 8587) (nil fontified nil 8577 . 8581) (nil fontified nil 8576 . 8577) (nil fontified nil 8572 . 8576) (nil fontified nil 8571 . 8572) (8571 . 8587)) nil (25933 63842 441846 963000) 0 nil])
([nil nil ((#("," 0 1 (fontified nil)) . -8569) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (#(" " 0 1 (fontified nil)) . -8570) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (#("d" 0 1 (fontified nil)) . -8571) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#("t" 0 1 (fontified nil)) . -8572) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (#("y" 0 1 (fontified nil)) . -8573) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (#("p" 0 1 (fontified nil)) . -8574) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("e" 0 1 (fontified nil)) . -8575) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -8576) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("s" 0 1 (fontified t)) . -8577) (undo-tree-id1058 . -1) (#("e" 0 1 (fontified t)) . -8578) (undo-tree-id1059 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -8579) (undo-tree-id1060 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -8580) (undo-tree-id1061 . -1) (#("." 0 1 (fontified t)) . -8581) (undo-tree-id1062 . -1) (#("F" 0 1 (fontified t)) . -8582) (undo-tree-id1063 . -1) (#("L" 0 1 (fontified t)) . -8583) (undo-tree-id1064 . -1) (#("O" 0 1 (fontified t)) . -8584) (undo-tree-id1065 . -1) (#("A" 0 1 (fontified t)) . -8585) (undo-tree-id1066 . -1) (#("T" 0 1 (rear-nonsticky t fontified t)) . -8586) (undo-tree-id1067 . -1) 8587 (t 25933 63842 475128 991000)) nil (25933 63857 365332 673000) 0 nil])
([nil nil ((8163 . 8165) (t 25933 63857 397275 330000)) nil (25933 64119 185227 391000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8161 . 8162) (nil fontified nil 8155 . 8162) (nil fontified nil 8151 . 8155) (nil fontified nil 8150 . 8151) (nil fontified nil 8145 . 8150) (8145 . 8162)) nil (25933 64119 185225 531000) 0 nil])
([nil nil ((8162 . 8164)) nil (25933 64119 185223 332000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8162) (undo-tree-id1142 . -1) (#(" " 0 1 (fontified t)) . -8163) (undo-tree-id1143 . -1) 8164) nil (25933 64119 185220 524000) 0 nil])
([nil nil ((8162 . 8163)) nil (25933 64119 185213 876000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8181) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (#(" " 0 1 (fontified t)) . -8182) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) 8183) nil (25933 64119 185201 606000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8501 . 8502) (nil fontified nil 8495 . 8502) (nil fontified nil 8491 . 8495) (nil fontified nil 8490 . 8491) (nil fontified nil 8485 . 8490) (8485 . 8502) (t 25933 64119 218886 12000)) nil (25933 64124 107169 95000) 0 nil])
([nil nil ((8502 . 8503)) nil (25933 64124 107159 427000) 0 nil])
([nil nil ((3010 . 3026) (t 25933 64124 139253 243000)) nil (25933 64352 477268 406000) 0 nil])
([nil nil ((2759 . 2760)) nil (25933 64352 477264 748000) 0 nil])
([nil nil ((3005 . 3006)) nil (25933 64352 477254 570000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3010) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) 3011 (t 25933 64352 512019 589000)) nil (25933 64367 268994 836000) 0 nil])
([nil nil ((2842 . 2844)) nil (25933 64367 268739 390000) 0 nil])
([nil nil ((3012 . 3014)) nil (25933 64367 268724 221000) 0 nil])
([nil nil ((2824 . 2841) (t 25933 64367 315161 966000)) nil (25933 64424 645541 247000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2848) (2847 . 2848) (2846 . 2848) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2846) (2841 . 2847)) nil (25933 64424 645536 867000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 2849) (2848 . 2849) (2847 . 2849) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2847) (2847 . 2848)) nil (25933 64424 645531 945000) 0 nil])
([nil nil ((2848 . 2849)) nil (25933 64424 645527 857000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-string-face fontified t)) . -2848) (undo-tree-id1183 . -1) 2849) nil (25933 64424 645525 373000) 0 nil])
([nil nil ((2848 . 2854)) nil (25933 64424 645520 713000) 0 nil])
([nil nil ((2855 . 2869)) nil (25933 64424 645519 160000) 0 nil])
([nil nil ((2870 . 2887)) nil (25933 64424 645517 577000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2894) (2893 . 2894) (2892 . 2894) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2892) (2887 . 2893)) nil (25933 64424 645515 84000) 0 nil])
([nil nil ((2893 . 2894)) nil (25933 64424 645511 536000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -2893) (undo-tree-id1182 . -1) 2894) nil (25933 64424 645509 58000) 0 nil])
([nil nil ((2893 . 2901)) nil (25933 64424 645498 941000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2903) (2902 . 2903) (2901 . 2903) (#("[" 0 1 (fontified nil)) . -2901) (2901 . 2902)) nil (25933 64424 645493 385000) 0 nil])
([nil nil ((2902 . 2907)) nil (25933 64424 645484 416000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2910) (2909 . 2910) (2908 . 2910) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2908) (2908 . 2909)) nil (25933 64424 645476 876000) 0 nil])
([nil nil ((2909 . 2914)) nil (25933 64424 645466 459000) 0 nil])
([nil nil ((2915 . 2921)) nil (25933 64424 645460 301000) 0 nil])
([nil nil ((2922 . 2939)) nil (25933 64424 645454 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2974 . 2975) (nil fontified nil 2974 . 2975) (nil fontified nil 2973 . 2974) (nil fontified nil 2967 . 2973) (nil fontified nil 2966 . 2967) (nil fontified nil 2961 . 2966) (nil fontified nil 2960 . 2961) (nil fontified nil 2959 . 2960) (nil fontified nil 2954 . 2959) (nil fontified nil 2953 . 2954) (nil fontified nil 2949 . 2953) (nil fontified nil 2945 . 2949) (nil fontified nil 2944 . 2945) (nil fontified nil 2939 . 2944) (nil fontified nil 2923 . 2939) (2923 . 2975)) nil (25933 64424 645449 716000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2952) (undo-tree-id1161 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2953) (undo-tree-id1162 . -1) (#("i" 0 1 (fontified t)) . -2954) (undo-tree-id1163 . -1) (#("_" 0 1 (fontified t)) . -2955) (undo-tree-id1164 . -1) (#("p" 0 1 (fontified t)) . -2956) (undo-tree-id1165 . -1) (#("o" 0 1 (fontified t)) . -2957) (undo-tree-id1166 . -1) (#("p" 0 1 (fontified t)) . -2958) (undo-tree-id1167 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2959) (undo-tree-id1168 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2960) (undo-tree-id1169 . -1) (#("j" 0 1 (fontified nil)) . -2961) (undo-tree-id1170 . -1) (#("_" 0 1 (fontified t)) . -2962) (undo-tree-id1171 . -1) (#("p" 0 1 (fontified t)) . -2963) (undo-tree-id1172 . -1) (#("o" 0 1 (fontified nil)) . -2964) (undo-tree-id1173 . -1) (#("p" 0 1 (fontified t)) . -2965) (undo-tree-id1174 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2966) (undo-tree-id1175 . -1) (#("." 0 1 (fontified nil)) . -2967) (undo-tree-id1176 . -1) (#("s" 0 1 (fontified t)) . -2968) (undo-tree-id1177 . -1) (#("h" 0 1 (fontified t)) . -2969) (undo-tree-id1178 . -1) (#("a" 0 1 (fontified t)) . -2970) (undo-tree-id1179 . -1) (#("p" 0 1 (fontified t)) . -2971) (undo-tree-id1180 . -1) (#("e" 0 1 (fontified t)) . -2972) (undo-tree-id1181 . -1) 2973) nil (25933 64424 645422 955000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2945) (undo-tree-id1154 . -1) (#("e" 0 1 (fontified t)) . -2946) (undo-tree-id1155 . -1) (#("l" 0 1 (fontified t)) . -2947) (undo-tree-id1156 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -2948) (undo-tree-id1157 . -1) (#("." 0 1 (fontified t)) . -2949) (undo-tree-id1158 . -1) (#("W" 0 1 (fontified t)) . -2950) (undo-tree-id1159 . -1) (#("a" 0 1 (fontified t)) . -2951) (undo-tree-id1160 . -1) 2952) nil (25933 64424 645273 338000) 0 nil])
([nil nil ((2945 . 2951)) nil (25933 64424 645234 14000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2950) (undo-tree-id1153 . -1) 2951) nil (25933 64424 645227 751000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2952) (2951 . 2952) (2950 . 2952) (#("[" 0 1 (fontified nil)) . -2950) (2950 . 2951)) nil (25933 64424 645210 925000) 0 nil])
([nil nil ((2824 . 2841)) nil (25933 64424 645201 461000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2874 . 2875) (nil fontified nil 2874 . 2875) (nil fontified nil 2873 . 2874) (nil fontified nil 2871 . 2873) (nil fontified nil 2870 . 2871) (nil fontified nil 2864 . 2870) (nil fontified nil 2863 . 2864) (nil fontified nil 2856 . 2863) (nil fontified nil 2852 . 2856) (nil fontified nil 2849 . 2852) (nil fontified nil 2848 . 2849) (nil fontified nil 2843 . 2848) (nil fontified nil 2842 . 2843) (nil fontified nil 2835 . 2842) (nil fontified nil 2831 . 2835) (nil fontified nil 2830 . 2831) (nil fontified nil 2825 . 2830) (2825 . 2875)) nil (25933 64424 645194 61000) 0 nil])
([nil nil ((2825 . 2841)) nil (25933 64424 645184 633000) 0 nil])
([nil nil ((2841 . 2850)) nil (25933 64424 645182 127000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2844) (undo-tree-id1150 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2845) (undo-tree-id1151 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2846) (undo-tree-id1152 . -1) 2847) nil (25933 64424 645175 991000) 0 nil])
([nil nil ((2844 . 2847)) nil (25933 64424 645135 315000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2900) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#(" " 0 1 (fontified t)) . -2901) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (#(" " 0 1 (fontified t)) . -2902) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (#(" " 0 1 (fontified t)) . -2903) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (#(" " 0 1 (fontified t)) . -2904) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (#(" " 0 1 (fontified nil)) . -2905) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (#(" " 0 1 (fontified t)) . -2906) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (#(" " 0 1 (fontified t)) . -2907) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (#(" " 0 1 (fontified t)) . -2908) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (#(" " 0 1 (fontified nil)) . -2909) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (#(" " 0 1 (fontified t)) . -2910) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (#(" " 0 1 (fontified t)) . -2911) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (#(" " 0 1 (fontified t)) . -2912) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (#(" " 0 1 (fontified t)) . -2913) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (#(" " 0 1 (fontified t)) . -2914) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (#(" " 0 1 (fontified t)) . -2915) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) 2916 (t 25933 64424 688784 38000)) nil (25933 64426 860058 369000) 0 nil])
([nil nil ((2901 . 2902) (t 25933 64426 908716 856000)) nil (25933 64434 661696 905000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3122) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -3123) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (#("." 0 1 (fontified t)) . -3124) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (#("c" 0 1 (fontified t)) . -3125) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (#("s" 0 1 (fontified nil)) . -3126) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (#("u" 0 1 (fontified t)) . -3127) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (#("m" 0 1 (fontified nil)) . -3128) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (#("N" 0 1 (fontified t)) . -3129) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (#("a" 0 1 (fontified t)) . -3130) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -3131) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (#("j" 0 1 (fontified t)) . -3132) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (#("_" 0 1 (fontified t)) . -3133) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (#("p" 0 1 (fontified t)) . -3134) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (#("o" 0 1 (fontified t)) . -3135) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (#("p" 0 1 (fontified nil)) . -3136) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (#(" " 0 1 (fontified t)) . -3137) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3138) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (#(" " 0 1 (fontified t)) . -3139) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (#("1" 0 1 (fontified t)) . -3140) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3141) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face))) . -3142) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) 3143) nil (25933 64434 661684 862000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -3101) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -3102) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (#("." 0 1 (fontified nil)) . -3103) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (#("c" 0 1 (fontified nil)) . -3104) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (#("s" 0 1 (fontified nil)) . -3105) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (#("u" 0 1 (fontified nil)) . -3106) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (#("m" 0 1 (fontified nil)) . -3107) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (#("N" 0 1 (fontified nil)) . -3108) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (#("a" 0 1 (fontified nil)) . -3109) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -3110) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (#("j" 0 1 (fontified t)) . -3111) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (#("_" 0 1 (fontified nil)) . -3112) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (#("p" 0 1 (fontified t)) . -3113) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (#("o" 0 1 (fontified nil)) . -3114) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (#("p" 0 1 (fontified t)) . -3115) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3116) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (#(" " 0 1 (fontified nil)) . -3117) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (#(":" 0 1 (fontified t)) . -3118) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (#(" " 0 1 (fontified t)) . -3119) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (#("s" 0 1 (fontified nil)) . -3120) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (#("e" 0 1 (fontified nil)) . -3121) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) 3122) nil (25933 64434 661586 990000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3093) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (#("a" 0 1 (fontified t)) . -3094) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (#("t" 0 1 (fontified nil)) . -3095) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (#("e" 0 1 (fontified nil)) . -3096) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (#("s" 0 1 (fontified nil)) . -3097) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -3098) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -3099) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -3100) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) 3101) nil (25933 64434 661492 758000) 0 nil])
([nil nil ((3093 . 3095)) nil (25933 64434 661426 233000) 0 nil])
([nil nil ((3095 . 3099)) nil (25933 64434 661415 327000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3021) (undo-tree-id3408 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3022) (#("r" 0 1 (fontified t)) . -3022) (undo-tree-id3409 . -1) (#("a" 0 1 (fontified nil)) . -3023) (undo-tree-id3410 . -1) (#("t" 0 1 (fontified t)) . -3024) (undo-tree-id3411 . -1) (#("e" 0 1 (fontified t)) . -3025) (undo-tree-id3412 . -1) (#("s" 0 1 (fontified t)) . -3026) (undo-tree-id3413 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3027) (undo-tree-id3414 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3028) (undo-tree-id3415 . -1) 3029 (t 25933 64434 704493 248000)) nil (25933 64442 114610 654000) 0 nil])
([nil nil ((3022 . 3034) (3021 . 3023) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3021) (3021 . 3022)) nil (25933 64442 114563 107000) 0 nil])
([nil nil ((#("                Wij = self.Wab[i_pop][j_pop](r_pres)
" 0 16 (fontified t) 16 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 22 (fontified t) 22 26 (face font-lock-keyword-face fontified t) 26 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (fontified t)) . 3053) (undo-tree-id3419 . -53) (undo-tree-id3420 . -45) (undo-tree-id3421 . -53) 3106 (t 25933 64442 164296 271000)) nil (25933 64456 81295 69000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3105 . 3106) (nil fontified nil 3105 . 3106) (nil fontified nil 3104 . 3105) (nil fontified nil 3098 . 3104) (nil fontified nil 3097 . 3098) (nil fontified nil 3096 . 3097) (nil fontified nil 3091 . 3096) (nil fontified nil 3090 . 3091) (nil fontified nil 3089 . 3090) (nil fontified nil 3084 . 3089) (nil fontified nil 3083 . 3084) (nil fontified nil 3079 . 3083) (nil fontified nil 3075 . 3079) (nil fontified nil 3074 . 3075) (nil fontified nil 3073 . 3074) (nil fontified nil 3072 . 3073) (nil fontified nil 3069 . 3072) (nil fontified nil 3053 . 3069) (3053 . 3106)) nil (25933 64456 81263 503000) 0 nil])
([nil nil ((3107 . 3123) (#("                " 0 16 (fontified nil)) . 3106) (undo-tree-id3418 . -16) (3105 . 3123)) nil (25933 64456 81241 247000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 3130) (3129 . 3130) (3128 . 3130) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3128) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (3123 . 3129)) nil (25933 64456 81223 484000) 0 nil])
([nil nil ((3129 . 3132)) nil (25933 64456 81179 517000) 0 nil])
([nil nil ((3132 . 3138) (t 25933 64456 123969 125000)) nil (25933 64457 626750 369000) 0 nil])
([nil nil ((#("." 0 1 (fontified nil)) . -2992) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (#("s" 0 1 (fontified t)) . -2993) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (#("h" 0 1 (fontified t)) . -2994) (undo-tree-id3456 . -1) (#("a" 0 1 (fontified t)) . -2995) (undo-tree-id3457 . -1) (#("p" 0 1 (fontified t)) . -2996) (undo-tree-id3458 . -1) (#("e" 0 1 (fontified t)) . -2997) (undo-tree-id3459 . -1) 2998 (t 25933 64457 663936 164000)) nil (25933 64469 612911 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2928 . 2929) (nil fontified nil 2927 . 2929) (nil fontified nil 2909 . 2927) (nil fontified nil 2902 . 2909) (nil fontified nil 2901 . 2902) (2901 . 2929) (t 25933 64469 659699 23000)) nil (25933 65018 171953 137000) 0 nil])
([nil nil ((2901 . 2917)) nil (25933 65018 171935 303000) 0 nil])
([nil nil ((2945 . 2962) (t 25933 65018 215021 588000)) nil (25933 65019 251384 538000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3006 . 3007) (nil fontified nil 3000 . 3007) (nil fontified nil 2999 . 3000) (nil fontified nil 2992 . 2999) (nil fontified nil 2979 . 2992) (nil fontified nil 2972 . 2979) (nil fontified nil 2970 . 2972) (nil fontified nil 2968 . 2970) (nil fontified nil 2967 . 2968) (nil fontified nil 2955 . 2967) (nil fontified nil 2954 . 2955) (nil fontified nil 2949 . 2954) (nil fontified nil 2946 . 2949) (2946 . 3007) (t 25933 65019 287022 869000)) nil (25933 65107 350810 541000) 0 nil])
([nil nil ((2946 . 2962) (#("   " 0 3 (fontified t src-block t font-lock-fontified t gptel response)) . 2946)) nil (25933 65107 350804 173000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -2998) (undo-tree-id3872 . -1) (#("a" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2999) (undo-tree-id3873 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3000) (undo-tree-id3874 . -1) (#("e" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3001) (undo-tree-id3875 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3002) (undo-tree-id3876 . -1) (#("i" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3003) (undo-tree-id3877 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3004) (undo-tree-id3878 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3005) (undo-tree-id3879 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3006) (undo-tree-id3880 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3007) (undo-tree-id3881 . -1) (#("w" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3008) (undo-tree-id3882 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3009) (undo-tree-id3883 . -1) (#("[" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3010) (undo-tree-id3884 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3011) (undo-tree-id3885 . -1) (#("," 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3012) (undo-tree-id3886 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3013) (undo-tree-id3887 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3014) (undo-tree-id3888 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3015) (undo-tree-id3889 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3016) (undo-tree-id3890 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3017) (undo-tree-id3891 . -1) (#("]" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3018) (undo-tree-id3892 . -1) 3019) nil (25933 65107 350793 561000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t src-block t font-lock-fontified t gptel response)) . -2983) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t src-block t font-lock-fontified t gptel response)) . -2984) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (#("C" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2985) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (#("o" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2986) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (#("n" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2987) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (#("f" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2988) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (#("i" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2989) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (#("r" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2990) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (#("m" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2991) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2992) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (#("t" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2993) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (#("h" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2994) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -2995) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -2996) (undo-tree-id3870 . -1) (#("s" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2997) (undo-tree-id3871 . -1) 2998) nil (25933 65107 350717 394000) 0 nil])
([nil nil ((#("                print(r_pres.shape)  
" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t src-block t font-lock-fontified t gptel response) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t gptel response) 22 34 (fontified t src-block t font-lock-fontified t gptel response) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t gptel response) 35 37 (fontified t src-block t font-lock-fontified t gptel response) 37 38 (rear-nonsticky t fontified t src-block t font-lock-fontified t gptel response)) . -2946) (undo-tree-id3460 . -37) (undo-tree-id3461 . -37) (undo-tree-id3462 . -37) (undo-tree-id3463 . -37) (undo-tree-id3464 . -37) (undo-tree-id3465 . -37) (undo-tree-id3466 . -37) (undo-tree-id3467 . -37) (undo-tree-id3468 . -37) (undo-tree-id3469 . -37) (undo-tree-id3470 . -37) (undo-tree-id3471 . -37) (undo-tree-id3472 . -37) (undo-tree-id3473 . -37) (undo-tree-id3474 . -37) (undo-tree-id3475 . -37) (undo-tree-id3476 . -37) (undo-tree-id3477 . -37) (undo-tree-id3478 . -37) (undo-tree-id3479 . -37) (undo-tree-id3480 . -37) (undo-tree-id3481 . -37) (undo-tree-id3482 . -37) (undo-tree-id3483 . -37) (undo-tree-id3484 . -37) (undo-tree-id3485 . -37) (undo-tree-id3486 . -37) (undo-tree-id3487 . -37) (undo-tree-id3488 . -37) (undo-tree-id3489 . -37) (undo-tree-id3490 . -37) (undo-tree-id3491 . -37) (undo-tree-id3492 . -37) (undo-tree-id3493 . -37) (undo-tree-id3494 . -37) (undo-tree-id3495 . -37) (undo-tree-id3496 . -37) (undo-tree-id3497 . -37) (undo-tree-id3498 . -37) (undo-tree-id3499 . -37) (undo-tree-id3500 . -37) (undo-tree-id3501 . -37) (undo-tree-id3502 . -37) (undo-tree-id3503 . -37) (undo-tree-id3504 . -37) (undo-tree-id3505 . -37) (undo-tree-id3506 . -37) (undo-tree-id3507 . -37) (undo-tree-id3508 . -37) (undo-tree-id3509 . -37) (undo-tree-id3510 . -37) (undo-tree-id3511 . -37) (undo-tree-id3512 . -37) (undo-tree-id3513 . -37) (undo-tree-id3514 . -37) (undo-tree-id3515 . -37) (undo-tree-id3516 . -37) (undo-tree-id3517 . -37) (undo-tree-id3518 . -37) (undo-tree-id3519 . -37) (undo-tree-id3520 . -37) (undo-tree-id3521 . -37) (undo-tree-id3522 . -37) (undo-tree-id3523 . -37) (undo-tree-id3524 . -37) (undo-tree-id3525 . -37) (undo-tree-id3526 . -37) (undo-tree-id3527 . -37) (undo-tree-id3528 . -37) (undo-tree-id3529 . -37) (undo-tree-id3530 . -37) (undo-tree-id3531 . -37) (undo-tree-id3532 . -37) (undo-tree-id3533 . -37) (undo-tree-id3534 . -37) (undo-tree-id3535 . -37) (undo-tree-id3536 . -37) (undo-tree-id3537 . -37) (undo-tree-id3538 . -37) (undo-tree-id3539 . -37) (undo-tree-id3540 . -37) (undo-tree-id3541 . -37) (undo-tree-id3542 . -37) (undo-tree-id3543 . -37) (undo-tree-id3544 . -37) (undo-tree-id3545 . -37) (undo-tree-id3546 . -37) (undo-tree-id3547 . -37) (undo-tree-id3548 . -37) (undo-tree-id3549 . -37) (undo-tree-id3550 . -37) (undo-tree-id3551 . -37) (undo-tree-id3552 . -37) (undo-tree-id3553 . -37) (undo-tree-id3554 . -37) (undo-tree-id3555 . -37) (undo-tree-id3556 . -38) (undo-tree-id3557 . -38) (undo-tree-id3558 . -38) (undo-tree-id3559 . -38) (undo-tree-id3560 . -38) (undo-tree-id3561 . -38) (undo-tree-id3562 . -38) (undo-tree-id3563 . -38) (undo-tree-id3564 . -38) (undo-tree-id3565 . -38) (undo-tree-id3566 . -38) (undo-tree-id3567 . -38) (undo-tree-id3568 . -38) (undo-tree-id3569 . -38) (undo-tree-id3570 . -38) (undo-tree-id3571 . -38) (undo-tree-id3572 . -38) (undo-tree-id3573 . -38) (undo-tree-id3574 . -38) (undo-tree-id3575 . -38) 2984) nil (25934 5541 894088 156000) 0 nil])
([nil nil ((apply -6 2963 3114 undo--wrap-and-run-primitive-undo 2963 3114 ((3075 . 3077) (3027 . 3029) (2979 . 2981) 3091))) nil (25934 5612 866412 767000) 0 nil] [nil nil ((#("                r_pres = r_pres.unsqueeze(0)
" 0 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t gptel response) 17 22 (face font-lock-variable-name-face fontified t gptel response) 22 23 (fontified t gptel response) 23 24 (face font-lock-operator-face fontified t gptel response) 24 41 (fontified t gptel response) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t gptel response) 42 43 (fontified t gptel response) 43 44 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t gptel response) 44 45 (fontified t)) . -2901) (undo-tree-id3893 . -45) (undo-tree-id3895 . -45) (undo-tree-id3896 . -45) (undo-tree-id3897 . -45) (undo-tree-id3898 . -45) (undo-tree-id3900 . -45) (undo-tree-id3901 . -45) (undo-tree-id3903 . -45) (undo-tree-id3904 . -45) (undo-tree-id3905 . -45) (undo-tree-id3906 . -45) (undo-tree-id3907 . -45) (undo-tree-id3908 . -45) 2946 (t 25933 65107 387227 340000)) ((2901 . 2946)) (25934 5540 441060 358000) 0 nil])
([nil nil ((3200 . 3217) (t 25934 5612 886729 786000)) nil (25934 5624 479143 327000) 0 nil])
([nil nil ((3116 . 3132) (t 25933 65126 999296 61000)) ((#("                " 0 16 (fontified t)) . 3116)) (25934 5539 971191 91000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3166) (undo-tree-id5154 . -1) 3167) nil (25934 5624 479140 379000) 0 nil])
([nil nil ((#("                self.Wab[i_pop][j_pop] = self.Wab[i_pop][j_pop]
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 41 (fontified t) 41 45 (face font-lock-keyword-face fontified t) 45 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 64 (fontified t)) . -1977) (undo-tree-id3911 . -64) (undo-tree-id3913 . -64) (undo-tree-id3915 . -64) (undo-tree-id3917 . -64) (undo-tree-id3919 . -64) (undo-tree-id3921 . -64) (undo-tree-id3923 . -64) (undo-tree-id3925 . -64) (undo-tree-id3927 . -64) (undo-tree-id3929 . -64) (undo-tree-id3931 . -64) (undo-tree-id3933 . -64) (undo-tree-id3935 . -64) (undo-tree-id3937 . -64) (undo-tree-id3939 . -64) (undo-tree-id3941 . -64) (undo-tree-id3943 . -64) (undo-tree-id3945 . -64) (undo-tree-id3947 . -64) (undo-tree-id3949 . -64) (undo-tree-id3951 . -64) (undo-tree-id3953 . -64) (undo-tree-id3955 . -64) (undo-tree-id3957 . -64) (undo-tree-id3959 . -64) (undo-tree-id3961 . -64) (undo-tree-id3963 . -64) (undo-tree-id3965 . -64) (undo-tree-id3967 . -64) (undo-tree-id3969 . -64) (undo-tree-id3971 . -64) (undo-tree-id3973 . -64) (undo-tree-id3975 . -64) (undo-tree-id3977 . -64) (undo-tree-id3979 . -64) (undo-tree-id3981 . -64) (undo-tree-id3983 . -64) (undo-tree-id3984 . -64) (undo-tree-id3986 . -64) (undo-tree-id3988 . -64) 2041 (t 25933 65144 771364 510000)) ((1977 . 2041)) (25934 5539 624518 0) 0 nil])
([nil nil ((apply -2 3167 3219 undo--wrap-and-run-primitive-undo 3167 3219 ((3183 . 3185) 3200))) nil (25934 5624 479124 163000) 0 nil])
([nil nil ((1977 . 1993) (#("        " 0 8 (fontified t)) . 1977)) ((1977 . 1985) (#("                " 0 16 (fontified t)) . 1977) (undo-tree-id5142 . -16) (undo-tree-id5143 . -16) (undo-tree-id5144 . -16) (undo-tree-id5145 . -16) (undo-tree-id5146 . -16) (undo-tree-id5147 . -16) (undo-tree-id5148 . -16) (undo-tree-id5149 . -16) (undo-tree-id5150 . -16) (undo-tree-id5151 . -16) (undo-tree-id5152 . -16) (undo-tree-id5153 . -16)) (25934 5539 240203 437000) 0 nil])
([nil nil ((apply -2 3219 3331 undo--wrap-and-run-primitive-undo 3219 3331 ((3235 . 3237) 3312))) nil (25934 5738 557093 593000) 0 nil])
([nil nil ((1659 . 1667) (t 25933 65170 251472 79000)) ((#("        " 0 8 (fontified t)) . 1659) (undo-tree-id5071 . -8) (undo-tree-id5072 . -8) (undo-tree-id5073 . -8) (undo-tree-id5074 . -8) (undo-tree-id5075 . -8) (undo-tree-id5076 . -8) (undo-tree-id5077 . -8) (undo-tree-id5078 . -8) (undo-tree-id5079 . -8) (undo-tree-id5080 . -8) (undo-tree-id5081 . -8) (undo-tree-id5082 . -8) (undo-tree-id5083 . -8) (undo-tree-id5084 . -8) (undo-tree-id5085 . -8) (undo-tree-id5086 . -8) (undo-tree-id5087 . -8) (undo-tree-id5088 . -8) (undo-tree-id5089 . -8) (undo-tree-id5090 . -8) (undo-tree-id5091 . -8) (undo-tree-id5092 . -8) (undo-tree-id5093 . -8) (undo-tree-id5094 . -8) (undo-tree-id5095 . -8) (undo-tree-id5096 . -8) (undo-tree-id5097 . -8) (undo-tree-id5098 . -8) (undo-tree-id5099 . -8) (undo-tree-id5100 . -8) (undo-tree-id5101 . -8) (undo-tree-id5102 . -8) (undo-tree-id5103 . -8) (undo-tree-id5104 . -8) (undo-tree-id5105 . -8) (undo-tree-id5106 . -8) (undo-tree-id5107 . -8) (undo-tree-id5108 . -8) (undo-tree-id5109 . -8) (undo-tree-id5110 . -8) (undo-tree-id5111 . -8) (undo-tree-id5112 . -8) (undo-tree-id5113 . -8) (undo-tree-id5114 . -8) (undo-tree-id5115 . -8) (undo-tree-id5116 . -8) (undo-tree-id5117 . -8) (undo-tree-id5118 . -8) (undo-tree-id5119 . -8) (undo-tree-id5120 . -8) (undo-tree-id5121 . -8) (undo-tree-id5122 . -8) (undo-tree-id5123 . -8) (undo-tree-id5124 . -8) (undo-tree-id5125 . -8) (undo-tree-id5126 . -8) (undo-tree-id5127 . -8) (undo-tree-id5128 . -8) (undo-tree-id5129 . -8) (undo-tree-id5130 . -8) (undo-tree-id5131 . -8) (undo-tree-id5132 . -8) (undo-tree-id5133 . -8) (undo-tree-id5134 . -8) (undo-tree-id5135 . -8) (undo-tree-id5136 . -8) (undo-tree-id5137 . -8) (undo-tree-id5138 . -8) (undo-tree-id5139 . -8) (undo-tree-id5140 . -8) (undo-tree-id5141 . -8)) (25934 5539 19639 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3235) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3235) (t 25934 5738 575786 770000)) nil (25934 5761 737506 29000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1674) (1673 . 1674) (1672 . 1674) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1672) (1667 . 1673)) ((#("print(" 0 5 (face font-lock-builtin-face fontified nil) 5 6 (face font-lock-builtin-face fontified nil)) . 1667) (undo-tree-id4973 . -5) (undo-tree-id4974 . -5) (undo-tree-id4975 . -5) (undo-tree-id4976 . -5) (undo-tree-id4977 . -5) (undo-tree-id4978 . -5) (undo-tree-id4979 . -5) (undo-tree-id4980 . -5) (undo-tree-id4981 . -5) (undo-tree-id4982 . -5) (undo-tree-id4983 . -5) (undo-tree-id4984 . -5) (undo-tree-id4985 . -5) (undo-tree-id4986 . -5) (undo-tree-id4987 . -5) (undo-tree-id4988 . -5) (undo-tree-id4989 . -5) (undo-tree-id4990 . -5) (undo-tree-id4991 . -5) (undo-tree-id4992 . -5) (undo-tree-id4993 . -5) (undo-tree-id4994 . -5) (undo-tree-id4995 . -5) (undo-tree-id4996 . -5) (undo-tree-id4997 . -5) (undo-tree-id4998 . -5) (undo-tree-id4999 . -5) (undo-tree-id5000 . -5) (undo-tree-id5001 . -5) (undo-tree-id5002 . -5) (undo-tree-id5003 . -5) (undo-tree-id5004 . -5) (undo-tree-id5005 . -5) (undo-tree-id5006 . -5) (undo-tree-id5007 . -5) (undo-tree-id5008 . -5) (undo-tree-id5009 . -5) (undo-tree-id5010 . -5) (undo-tree-id5011 . -5) (undo-tree-id5012 . -5) (undo-tree-id5013 . -5) (undo-tree-id5014 . -5) (undo-tree-id5015 . -5) (undo-tree-id5016 . -5) (undo-tree-id5017 . -5) (undo-tree-id5018 . -5) (undo-tree-id5019 . -5) (1672 . 1673) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1672) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1673) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (1674 . 1675)) (25934 5538 849510 146000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3145) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) 3146 (t 25934 5761 759981 828000)) nil (25934 5775 396223 556000) 0 nil])
([nil nil ((1673 . 1682)) ((#("self.WWab" 0 4 (face font-lock-keyword-face fontified nil) 4 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1673) (undo-tree-id4954 . -6) (undo-tree-id4955 . -6) (undo-tree-id4956 . -6) (undo-tree-id4957 . -6) (undo-tree-id4958 . -6) (undo-tree-id4959 . -6) (undo-tree-id4960 . -6) (undo-tree-id4961 . -6) (undo-tree-id4962 . -6) (undo-tree-id4963 . -6) (undo-tree-id4964 . -6) (undo-tree-id4965 . -9) (undo-tree-id4966 . -6) (undo-tree-id4967 . -6) (undo-tree-id4968 . -6) (undo-tree-id4969 . -6) (undo-tree-id4970 . -9) (undo-tree-id4971 . -9) (undo-tree-id4972 . -9)) (25934 5538 848647 809000) 0 nil])
([nil nil ((3145 . 3146)) nil (25934 5775 396012 413000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -1679) (undo-tree-id4005 . -1) (#("a" 0 1 (fontified t)) . -1680) (undo-tree-id4006 . -1) (#("b" 0 1 (fontified t)) . -1681) (undo-tree-id4007 . -1) 1682) ((1679 . 1682)) (25934 5538 448749 487000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3152)) nil (25934 5775 396010 808000) 0 nil])
([nil nil ((1679 . 1682)) ((#("ab?" 0 2 (fontified t) 2 3 (fontified t)) . 1679) (undo-tree-id4868 . -2) (undo-tree-id4869 . -2) (undo-tree-id4870 . -2) (undo-tree-id4871 . -2) (undo-tree-id4872 . -2) (undo-tree-id4873 . -2) (undo-tree-id4874 . -2) (undo-tree-id4875 . -2) (undo-tree-id4876 . -2) (undo-tree-id4877 . -2) (undo-tree-id4878 . -2) (undo-tree-id4879 . -2) (undo-tree-id4880 . -2) (undo-tree-id4881 . -2) (undo-tree-id4882 . -2) (undo-tree-id4883 . -2) (undo-tree-id4884 . -2) (undo-tree-id4885 . -2) (undo-tree-id4886 . -2) (undo-tree-id4887 . -2) (undo-tree-id4888 . -2) (undo-tree-id4889 . -2) (undo-tree-id4890 . -2) (undo-tree-id4891 . -2) (undo-tree-id4892 . -2) (undo-tree-id4893 . -2) (undo-tree-id4894 . -2) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) (undo-tree-id4897 . -2) (undo-tree-id4898 . -2) (undo-tree-id4899 . -2) (undo-tree-id4900 . -2) (undo-tree-id4901 . -2) (undo-tree-id4902 . -2) (undo-tree-id4903 . -2) (undo-tree-id4904 . -2) (undo-tree-id4905 . -2) (undo-tree-id4906 . -2) (undo-tree-id4907 . -2) (undo-tree-id4908 . -2) (undo-tree-id4909 . -2) (undo-tree-id4910 . -2) (undo-tree-id4911 . -2) (undo-tree-id4912 . -2) (undo-tree-id4913 . -2) (undo-tree-id4914 . -2) (undo-tree-id4915 . -2) (undo-tree-id4916 . -2) (undo-tree-id4917 . -2) (undo-tree-id4918 . -2) (undo-tree-id4919 . -2) (undo-tree-id4920 . -2) (undo-tree-id4921 . -2) (undo-tree-id4922 . -2) (undo-tree-id4923 . -2) (undo-tree-id4924 . -2) (undo-tree-id4925 . -2) (undo-tree-id4926 . -2) (undo-tree-id4927 . -2) (undo-tree-id4928 . -3) (undo-tree-id4929 . -3) (undo-tree-id4930 . -3) (undo-tree-id4931 . -3) (undo-tree-id4932 . -3) (undo-tree-id4933 . -3) (undo-tree-id4934 . -3) (undo-tree-id4935 . -3) (undo-tree-id4936 . -3) (undo-tree-id4937 . -3) (undo-tree-id4938 . -3) (undo-tree-id4939 . -3) (undo-tree-id4940 . -3) (undo-tree-id4941 . -3) (undo-tree-id4942 . -3) (undo-tree-id4943 . -3) (undo-tree-id4944 . -3) (undo-tree-id4945 . -3) (undo-tree-id4946 . -3) (undo-tree-id4947 . -3) (undo-tree-id4948 . -3) (undo-tree-id4949 . -3) (undo-tree-id4950 . -3) (undo-tree-id4951 . -3) (undo-tree-id4952 . -3) (undo-tree-id4953 . -3)) (25934 5538 244231 101000) 0 nil])
([nil nil ((3152 . 3153)) nil (25934 5775 396005 408000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1681) (undo-tree-id4004 . -1) 1682) ((1681 . 1682)) (25934 5537 909433 548000) 0 nil])
([nil nil ((4867 . 4883) (#("                " 0 16 (fontified nil)) . 4866) (undo-tree-id5610 . -16) (4865 . 4883) (t 25934 5775 420096 765000)) nil (25934 5856 599488 341000) 0 nil])
([nil nil ((1681 . 1682)) ((#("?" 0 1 (fontified t)) . 1681) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1)) (25934 5537 503546 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5078 . 5079) (nil fontified nil 5078 . 5079) (nil fontified nil 5077 . 5078) (nil fontified nil 5076 . 5077) (nil fontified nil 5075 . 5076) (nil fontified nil 5073 . 5075) (nil fontified nil 5072 . 5073) (nil fontified nil 5066 . 5072) (nil fontified nil 5065 . 5066) (nil fontified nil 5059 . 5065) (nil fontified nil 5058 . 5059) (nil fontified nil 5054 . 5058) (nil fontified nil 5051 . 5054) (nil fontified nil 5050 . 5051) (nil fontified nil 5045 . 5050) (nil fontified nil 5044 . 5045) (nil fontified nil 5042 . 5044) (nil fontified nil 5037 . 5042) (nil fontified nil 5033 . 5037) (nil fontified nil 5032 . 5033) (nil fontified nil 5025 . 5032) (nil fontified nil 5023 . 5025) (nil fontified nil 5022 . 5023) (nil fontified nil 5021 . 5022) (nil fontified nil 5020 . 5021) (nil fontified nil 5009 . 5020) (nil fontified nil 5008 . 5009) (nil fontified nil 5007 . 5008) (nil fontified nil 5006 . 5007) (nil fontified nil 5001 . 5006) (nil fontified nil 5000 . 5001) (nil fontified nil 4993 . 5000) (nil fontified nil 4989 . 4993) (nil fontified nil 4988 . 4989) (nil fontified nil 4987 . 4988) (nil fontified nil 4986 . 4987) (nil fontified nil 4985 . 4986) (nil fontified nil 4984 . 4985) (nil fontified nil 4982 . 4984) (nil fontified nil 4981 . 4982) (nil fontified nil 4975 . 4981) (nil fontified nil 4974 . 4975) (nil fontified nil 4967 . 4974) (nil fontified nil 4963 . 4967) (nil fontified nil 4960 . 4963) (nil fontified nil 4959 . 4960) (nil fontified nil 4954 . 4959) (nil fontified nil 4953 . 4954) (nil fontified nil 4946 . 4953) (nil fontified nil 4942 . 4946) (nil fontified nil 4941 . 4942) (nil fontified nil 4935 . 4941) (nil fontified nil 4934 . 4935) (nil fontified nil 4933 . 4934) (nil fontified nil 4932 . 4933) (nil fontified nil 4931 . 4932) (nil fontified nil 4929 . 4931) (nil fontified nil 4928 . 4929) (nil fontified nil 4922 . 4928) (nil fontified nil 4921 . 4922) (nil fontified nil 4914 . 4921) (nil fontified nil 4910 . 4914) (nil fontified nil 4907 . 4910) (nil fontified nil 4906 . 4907) (nil fontified nil 4901 . 4906) (nil fontified nil 4900 . 4901) (nil fontified nil 4899 . 4900) (nil fontified nil 4898 . 4899) (nil fontified nil 4893 . 4898) (nil fontified nil 4889 . 4893) (nil fontified nil 4888 . 4889) (nil fontified nil 4883 . 4888) (nil fontified nil 4882 . 4883) (nil fontified nil 4880 . 4882) (nil fontified nil 4867 . 4880) (4867 . 5079)) nil (25934 5856 599477 638000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1681) (undo-tree-id3991 . -1) (undo-tree-id3993 . -1) (undo-tree-id3995 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id4000 . -1) (undo-tree-id4002 . -1) 1682) ((1681 . 1682)) (25934 5536 923366 204000) 0 nil])
([nil nil ((#("                rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] + self.DT_TAU[i_pop] * Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])
" 0 13 (fontified t) 13 15 (fontified t) 15 16 (fontified t) 16 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (face font-lock-keyword-face fontified t) 26 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 43 (fontified t) 43 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-2-face) fontified t) 55 61 (fontified t) 61 62 (face font-lock-operator-face fontified t) 62 64 (fontified t) 64 65 (face (rainbow-delimiters-depth-2-face) fontified t) 65 66 (face (rainbow-delimiters-depth-1-face) fontified t) 66 67 (fontified t) 67 68 (face font-lock-operator-face fontified t) 68 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 79 (face font-lock-keyword-face fontified t) 79 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t) 87 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-2-face) fontified t) 93 96 (fontified t) 96 100 (face font-lock-keyword-face fontified t) 100 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-2-face) fontified t) 108 114 (fontified t) 114 115 (face font-lock-operator-face fontified t) 115 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-2-face) fontified t) 118 119 (face (rainbow-delimiters-depth-1-face) fontified t) 119 120 (fontified t) 120 121 (face font-lock-operator-face fontified t) 121 122 (fontified t) 122 126 (face font-lock-keyword-face fontified t) 126 133 (fontified t) 133 134 (face (rainbow-delimiters-depth-1-face) fontified t) 134 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-1-face) fontified t) 140 141 (fontified t) 141 142 (face font-lock-operator-face fontified t) 142 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-1-face) fontified t) 154 155 (face (rainbow-delimiters-depth-1-face) fontified t) 155 156 (face (rainbow-delimiters-depth-1-face) fontified t) 156 158 (fontified t) 158 165 (fontified t) 165 166 (face (rainbow-delimiters-depth-2-face) fontified t) 166 170 (face font-lock-keyword-face fontified t) 170 175 (fontified t) 175 177 (fontified t) 177 178 (face (rainbow-delimiters-depth-3-face) fontified t) 178 183 (fontified t) 183 184 (face (rainbow-delimiters-depth-3-face) fontified t) 184 187 (fontified t) 187 191 (face font-lock-keyword-face fontified t) 191 192 (fontified t) 192 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 205 (fontified t) 205 206 (face font-lock-operator-face fontified t) 206 208 (fontified t) 208 209 (face (rainbow-delimiters-depth-3-face) fontified t) 209 210 (face (rainbow-delimiters-depth-2-face) fontified t) 210 211 (face (rainbow-delimiters-depth-1-face) fontified t) 211 212 (rear-nonsticky t fontified t)) . 4867) (undo-tree-id5489 . -212) (undo-tree-id5490 . -212) (undo-tree-id5491 . -212) (undo-tree-id5492 . -212) (undo-tree-id5493 . -212) (undo-tree-id5494 . -212) (undo-tree-id5495 . -212) (undo-tree-id5496 . -212) (undo-tree-id5497 . -212) (undo-tree-id5498 . -212) (undo-tree-id5499 . -212) (undo-tree-id5500 . -212) (undo-tree-id5501 . -212) (undo-tree-id5502 . -212) (undo-tree-id5503 . -212) (undo-tree-id5504 . -212) (undo-tree-id5505 . -212) (undo-tree-id5506 . -212) (undo-tree-id5507 . -212) (undo-tree-id5508 . -212) (undo-tree-id5509 . -212) (undo-tree-id5510 . -212) (undo-tree-id5511 . -212) (undo-tree-id5512 . -212) (undo-tree-id5513 . -212) (undo-tree-id5514 . -212) (undo-tree-id5515 . -212) (undo-tree-id5516 . -212) (undo-tree-id5517 . -212) (undo-tree-id5518 . -212) (undo-tree-id5519 . -212) (undo-tree-id5520 . -212) (undo-tree-id5521 . -212) (undo-tree-id5522 . -212) (undo-tree-id5523 . -212) (undo-tree-id5524 . -212) (undo-tree-id5525 . -212) (undo-tree-id5526 . -212) (undo-tree-id5527 . -212) (undo-tree-id5528 . -212) (undo-tree-id5529 . -212) (undo-tree-id5530 . -212) (undo-tree-id5531 . -212) (undo-tree-id5532 . -212) (undo-tree-id5533 . -212) (undo-tree-id5534 . -212) (undo-tree-id5535 . -212) (undo-tree-id5536 . -212) (undo-tree-id5537 . -212) (undo-tree-id5538 . -212) (undo-tree-id5539 . -212) (undo-tree-id5540 . -212) (undo-tree-id5541 . -212) (undo-tree-id5542 . -212) (undo-tree-id5543 . -212) (undo-tree-id5544 . -212) (undo-tree-id5545 . -212) (undo-tree-id5546 . -212) (undo-tree-id5547 . -212) (undo-tree-id5548 . -212) (undo-tree-id5549 . -212) (undo-tree-id5550 . -212) (undo-tree-id5551 . -212) (undo-tree-id5552 . -212) (undo-tree-id5553 . -212) (undo-tree-id5554 . -212) (undo-tree-id5555 . -212) (undo-tree-id5556 . -212) (undo-tree-id5557 . -212) (undo-tree-id5558 . -212) (undo-tree-id5559 . -212) (undo-tree-id5560 . -212) (undo-tree-id5561 . -144) (undo-tree-id5562 . -212) (undo-tree-id5563 . -144) (undo-tree-id5564 . -144) (undo-tree-id5565 . -144) (undo-tree-id5566 . -144) (undo-tree-id5567 . -144) (undo-tree-id5568 . -144) (undo-tree-id5569 . -144) (undo-tree-id5570 . -144) (undo-tree-id5571 . -144) (undo-tree-id5572 . -144) (undo-tree-id5573 . -144) (undo-tree-id5574 . -144) (undo-tree-id5575 . -144) (undo-tree-id5576 . -144) (undo-tree-id5577 . -144) (undo-tree-id5578 . -144) (undo-tree-id5579 . -144) (undo-tree-id5580 . -144) (undo-tree-id5581 . -144) (undo-tree-id5582 . -144) (undo-tree-id5583 . -144) (undo-tree-id5584 . -144) (undo-tree-id5585 . -144) (undo-tree-id5586 . -144) (undo-tree-id5587 . -144) (undo-tree-id5588 . -144) (undo-tree-id5589 . -144) (undo-tree-id5590 . -144) (undo-tree-id5591 . -144) (undo-tree-id5592 . -144) (undo-tree-id5593 . -144) (undo-tree-id5594 . -144) (undo-tree-id5595 . -144) (undo-tree-id5596 . -144) (undo-tree-id5597 . -144) (undo-tree-id5598 . -144) (undo-tree-id5599 . -144) (undo-tree-id5600 . -144) (undo-tree-id5601 . -144) (undo-tree-id5602 . -144) (undo-tree-id5603 . -144) (undo-tree-id5604 . -144) (undo-tree-id5605 . -144) (undo-tree-id5606 . -144) (undo-tree-id5607 . -144) (undo-tree-id5608 . -144) (undo-tree-id5609 . -144)) nil (25934 5856 599438 298000) 0 nil])
([nil nil ((1682 . 1691) (t 25933 65188 115553 614000)) ((#("
        " 0 9 (fontified t)) . 1682) (undo-tree-id4833 . -9) (undo-tree-id4834 . -9) (undo-tree-id4835 . -9) (undo-tree-id4836 . -9)) (25934 5536 725687 161000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4866) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) 4867) nil (25934 5856 599069 43000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2214) (2213 . 2214) (2212 . 2214) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2212) (2207 . 2213) (t 25933 65188 815556 907000)) ((#("print(" 0 5 (face font-lock-builtin-face fontified nil) 5 6 (face font-lock-builtin-face fontified nil)) . 2207) (undo-tree-id4030 . -5) (undo-tree-id4031 . -5) (undo-tree-id4032 . -5) (undo-tree-id4033 . -5) (undo-tree-id4034 . -5) (undo-tree-id4035 . -5) (undo-tree-id4036 . -5) (undo-tree-id4037 . -5) (undo-tree-id4038 . -5) (undo-tree-id4039 . -5) (undo-tree-id4040 . -5) (undo-tree-id4041 . -5) (undo-tree-id4042 . -5) (undo-tree-id4043 . -5) (undo-tree-id4044 . -5) (undo-tree-id4045 . -5) (undo-tree-id4046 . -5) (undo-tree-id4047 . -5) (undo-tree-id4048 . -5) (undo-tree-id4049 . -5) (undo-tree-id4050 . -5) (undo-tree-id4051 . -5) (undo-tree-id4052 . -5) (undo-tree-id4053 . -5) (undo-tree-id4054 . -5) (undo-tree-id4055 . -5) (undo-tree-id4056 . -5) (undo-tree-id4057 . -5) (undo-tree-id4058 . -5) (undo-tree-id4059 . -5) (undo-tree-id4060 . -5) (undo-tree-id4061 . -5) (undo-tree-id4062 . -5) (undo-tree-id4063 . -5) (undo-tree-id4064 . -5) (undo-tree-id4065 . -5) (undo-tree-id4066 . -5) (undo-tree-id4067 . -5) (undo-tree-id4068 . -5) (undo-tree-id4069 . -5) (undo-tree-id4070 . -5) (undo-tree-id4071 . -5) (undo-tree-id4072 . -5) (undo-tree-id4073 . -5) (undo-tree-id4074 . -5) (undo-tree-id4075 . -5) (undo-tree-id4076 . -5) (undo-tree-id4077 . -5) (undo-tree-id4078 . -5) (undo-tree-id4079 . -5) (undo-tree-id4080 . -5) (undo-tree-id4081 . -5) (undo-tree-id4082 . -5) (undo-tree-id4083 . -5) (undo-tree-id4084 . -5) (undo-tree-id4085 . -5) (undo-tree-id4086 . -5) (undo-tree-id4087 . -5) (undo-tree-id4088 . -5) (undo-tree-id4089 . -5) (undo-tree-id4090 . -5) (undo-tree-id4091 . -5) (undo-tree-id4092 . -5) (undo-tree-id4093 . -5) (undo-tree-id4094 . -5) (undo-tree-id4095 . -5) (undo-tree-id4096 . -5) (undo-tree-id4097 . -5) (undo-tree-id4098 . -5) (undo-tree-id4099 . -5) (undo-tree-id4100 . -5) (undo-tree-id4101 . -5) (undo-tree-id4102 . -5) (undo-tree-id4103 . -5) (undo-tree-id4104 . -5) (undo-tree-id4105 . -5) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) (undo-tree-id4109 . -5) (undo-tree-id4110 . -5) (undo-tree-id4111 . -5) (undo-tree-id4112 . -5) (undo-tree-id4113 . -5) (undo-tree-id4114 . -5) (undo-tree-id4115 . -5) (undo-tree-id4116 . -5) (undo-tree-id4117 . -5) (undo-tree-id4118 . -5) (undo-tree-id4119 . -5) (undo-tree-id4120 . -5) (undo-tree-id4121 . -5) (undo-tree-id4122 . -5) (undo-tree-id4123 . -5) (undo-tree-id4124 . -5) (undo-tree-id4125 . -5) (undo-tree-id4126 . -5) (undo-tree-id4127 . -5) (undo-tree-id4128 . -5) (undo-tree-id4129 . -5) (undo-tree-id4130 . -5) (undo-tree-id4131 . -5) (undo-tree-id4132 . -5) (undo-tree-id4133 . -5) (undo-tree-id4134 . -5) (undo-tree-id4135 . -5) (undo-tree-id4136 . -5) (undo-tree-id4137 . -5) (undo-tree-id4138 . -5) (undo-tree-id4139 . -5) (undo-tree-id4140 . -5) (undo-tree-id4141 . -5) (undo-tree-id4142 . -5) (undo-tree-id4143 . -5) (undo-tree-id4144 . -5) (undo-tree-id4145 . -5) (undo-tree-id4146 . -5) (undo-tree-id4147 . -5) (undo-tree-id4148 . -5) (undo-tree-id4149 . -5) (undo-tree-id4150 . -5) (undo-tree-id4151 . -5) (undo-tree-id4152 . -5) (undo-tree-id4153 . -5) (undo-tree-id4154 . -5) (undo-tree-id4155 . -5) (undo-tree-id4156 . -5) (undo-tree-id4157 . -5) (undo-tree-id4158 . -5) (undo-tree-id4159 . -5) (undo-tree-id4160 . -5) (undo-tree-id4161 . -5) (undo-tree-id4162 . -5) (undo-tree-id4163 . -5) (undo-tree-id4164 . -5) (undo-tree-id4165 . -5) (undo-tree-id4166 . -5) (undo-tree-id4167 . -5) (undo-tree-id4168 . -5) (undo-tree-id4169 . -5) (undo-tree-id4170 . -5) (undo-tree-id4171 . -5) (undo-tree-id4172 . -5) (undo-tree-id4173 . -5) (undo-tree-id4174 . -5) (undo-tree-id4175 . -5) (undo-tree-id4176 . -5) (undo-tree-id4177 . -5) (undo-tree-id4178 . -5) (undo-tree-id4179 . -5) (undo-tree-id4180 . -5) (undo-tree-id4181 . -5) (undo-tree-id4182 . -5) (undo-tree-id4183 . -5) (undo-tree-id4184 . -5) (undo-tree-id4185 . -5) (undo-tree-id4186 . -5) (undo-tree-id4187 . -5) (undo-tree-id4188 . -5) (undo-tree-id4189 . -5) (undo-tree-id4190 . -5) (undo-tree-id4191 . -5) (undo-tree-id4192 . -5) (undo-tree-id4193 . -5) (undo-tree-id4194 . -5) (undo-tree-id4195 . -5) (undo-tree-id4196 . -5) (undo-tree-id4197 . -5) (undo-tree-id4198 . -5) (undo-tree-id4199 . -5) (undo-tree-id4200 . -5) (undo-tree-id4201 . -5) (undo-tree-id4202 . -5) (undo-tree-id4203 . -5) (undo-tree-id4204 . -5) (undo-tree-id4205 . -5) (undo-tree-id4206 . -5) (undo-tree-id4207 . -5) (undo-tree-id4208 . -5) (undo-tree-id4209 . -5) (undo-tree-id4210 . -5) (undo-tree-id4211 . -5) (undo-tree-id4212 . -5) (undo-tree-id4213 . -5) (undo-tree-id4214 . -5) (undo-tree-id4215 . -5) (undo-tree-id4216 . -5) (undo-tree-id4217 . -5) (undo-tree-id4218 . -5) (undo-tree-id4219 . -5) (undo-tree-id4220 . -5) (undo-tree-id4221 . -5) (undo-tree-id4222 . -5) (undo-tree-id4223 . -5) (undo-tree-id4224 . -5) (undo-tree-id4225 . -5) (undo-tree-id4226 . -5) (undo-tree-id4227 . -5) (undo-tree-id4228 . -5) (undo-tree-id4229 . -5) (undo-tree-id4230 . -5) (undo-tree-id4231 . -5) (undo-tree-id4232 . -5) (undo-tree-id4233 . -5) (undo-tree-id4234 . -5) (undo-tree-id4235 . -5) (undo-tree-id4236 . -5) (undo-tree-id4237 . -5) (undo-tree-id4238 . -5) (undo-tree-id4239 . -5) (undo-tree-id4240 . -5) (undo-tree-id4241 . -5) (undo-tree-id4242 . -5) (undo-tree-id4243 . -5) (undo-tree-id4244 . -5) (undo-tree-id4245 . -5) (undo-tree-id4246 . -5) (undo-tree-id4247 . -5) (undo-tree-id4248 . -5) (undo-tree-id4249 . -5) (undo-tree-id4250 . -5) (undo-tree-id4251 . -5) (undo-tree-id4252 . -5) (undo-tree-id4253 . -5) (undo-tree-id4254 . -5) (undo-tree-id4255 . -5) (undo-tree-id4256 . -5) (undo-tree-id4257 . -5) (undo-tree-id4258 . -5) (undo-tree-id4259 . -5) (undo-tree-id4260 . -5) (undo-tree-id4261 . -5) (undo-tree-id4262 . -5) (undo-tree-id4263 . -5) (undo-tree-id4264 . -5) (undo-tree-id4265 . -5) (undo-tree-id4266 . -5) (undo-tree-id4267 . -5) (undo-tree-id4268 . -5) (undo-tree-id4269 . -5) (undo-tree-id4270 . -5) (undo-tree-id4271 . -5) (undo-tree-id4272 . -5) (undo-tree-id4273 . -5) (undo-tree-id4274 . -5) (undo-tree-id4275 . -5) (undo-tree-id4276 . -5) (undo-tree-id4277 . -5) (undo-tree-id4278 . -5) (undo-tree-id4279 . -5) (undo-tree-id4280 . -5) (undo-tree-id4281 . -5) (undo-tree-id4282 . -5) (undo-tree-id4283 . -5) (undo-tree-id4284 . -5) (undo-tree-id4285 . -5) (undo-tree-id4286 . -5) (undo-tree-id4287 . -5) (undo-tree-id4288 . -5) (undo-tree-id4289 . -5) (undo-tree-id4290 . -5) (undo-tree-id4291 . -5) (undo-tree-id4292 . -5) (undo-tree-id4293 . -5) (undo-tree-id4294 . -5) (undo-tree-id4295 . -5) (undo-tree-id4296 . -5) (undo-tree-id4297 . -5) (undo-tree-id4298 . -5) (undo-tree-id4299 . -5) (undo-tree-id4300 . -5) (undo-tree-id4301 . -5) (undo-tree-id4302 . -5) (undo-tree-id4303 . -5) (undo-tree-id4304 . -5) (undo-tree-id4305 . -5) (undo-tree-id4306 . -5) (undo-tree-id4307 . -5) (undo-tree-id4308 . -5) (undo-tree-id4309 . -5) (undo-tree-id4310 . -5) (undo-tree-id4311 . -5) (undo-tree-id4312 . -5) (undo-tree-id4313 . -5) (undo-tree-id4314 . -5) (undo-tree-id4315 . -5) (undo-tree-id4316 . -5) (undo-tree-id4317 . -5) (undo-tree-id4318 . -5) (undo-tree-id4319 . -5) (undo-tree-id4320 . -5) (undo-tree-id4321 . -5) (undo-tree-id4322 . -5) (undo-tree-id4323 . -5) (undo-tree-id4324 . -5) (undo-tree-id4325 . -5) (undo-tree-id4326 . -5) (undo-tree-id4327 . -5) (undo-tree-id4328 . -5) (undo-tree-id4329 . -5) (undo-tree-id4330 . -5) (undo-tree-id4331 . -5) (undo-tree-id4332 . -5) (undo-tree-id4333 . -5) (undo-tree-id4334 . -5) (undo-tree-id4335 . -5) (undo-tree-id4336 . -5) (undo-tree-id4337 . -5) (undo-tree-id4338 . -5) (undo-tree-id4339 . -5) (undo-tree-id4340 . -5) (undo-tree-id4341 . -5) (undo-tree-id4342 . -5) (undo-tree-id4343 . -5) (undo-tree-id4344 . -5) (undo-tree-id4345 . -5) (undo-tree-id4346 . -5) (undo-tree-id4347 . -5) (2212 . 2213) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2212) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2213) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (2214 . 2215)) (25934 5536 533797 963000) 0 nil])
([nil nil ((apply -2 5108 5215 undo--wrap-and-run-primitive-undo 5108 5215 ((5116 . 5118) 5161))) nil (25934 5872 922551 765000) 0 nil])
([nil nil ((2213 . 2221)) ((#("self.Wab" 0 4 (face font-lock-keyword-face fontified t) 4 8 (fontified t)) . 2213)) (25934 5536 320854 660000) 0 nil])
([nil nil ((apply -2 5163 5218 undo--wrap-and-run-primitive-undo 5163 5218 ((5171 . 5173) 5215))) nil (25934 5872 922549 422000) 0 nil])
([nil nil ((2222 . 2231)) ((#("
        " 0 9 (fontified t)) . 2222) (undo-tree-id4019 . -9) (undo-tree-id4020 . -9) (undo-tree-id4021 . -9) (undo-tree-id4022 . -9) (undo-tree-id4023 . -9) (undo-tree-id4024 . -9) (undo-tree-id4025 . -9) (undo-tree-id4026 . -9) (undo-tree-id4027 . -9) (undo-tree-id4028 . -9) (undo-tree-id4029 . -9) (t 25933 65244 959842 566000)) (25934 5535 117448 922000) 0 nil])
([nil nil ((5217 . 5225)) nil (25934 5872 922540 867000) 0 nil])
nil
([nil nil ((#("                self.Wab[i_pop][j_pop] = self.Wab[i_pop][j_pop]
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 41 (fontified t) 41 45 (face font-lock-keyword-face fontified t) 45 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 64 (fontified t)) . -1977) (undo-tree-id5683 . -63) (undo-tree-id5684 . -63) (undo-tree-id5685 . -63) (undo-tree-id5686 . -63) (undo-tree-id5687 . -63) (undo-tree-id5688 . -63) (undo-tree-id5689 . -63) (undo-tree-id5690 . -63) (undo-tree-id5691 . -63) (undo-tree-id5692 . -63) (undo-tree-id5693 . -63) (undo-tree-id5694 . -63) (undo-tree-id5695 . -63) (undo-tree-id5696 . -63) (undo-tree-id5697 . -63) (undo-tree-id5698 . -63) (undo-tree-id5699 . -63) (undo-tree-id5700 . -63) (undo-tree-id5701 . -63) (undo-tree-id5702 . -63) (undo-tree-id5703 . -63) (undo-tree-id5704 . -63) (undo-tree-id5705 . -63) (undo-tree-id5706 . -63) (undo-tree-id5707 . -63) (undo-tree-id5708 . -63) (undo-tree-id5709 . -63) (undo-tree-id5710 . -63) (undo-tree-id5711 . -63) (undo-tree-id5712 . -63) (undo-tree-id5713 . -63) (undo-tree-id5714 . -63) (undo-tree-id5715 . -63) (undo-tree-id5716 . -63) (undo-tree-id5717 . -63) (undo-tree-id5718 . -63) (undo-tree-id5719 . -63) (undo-tree-id5720 . -63) (undo-tree-id5721 . -63) (undo-tree-id5722 . -63) (undo-tree-id5723 . -63) (undo-tree-id5724 . -63) (undo-tree-id5725 . -63) (undo-tree-id5726 . -63) (undo-tree-id5727 . -63) (undo-tree-id5728 . -63) (undo-tree-id5729 . -63) (undo-tree-id5730 . -63) (undo-tree-id5731 . -63) (undo-tree-id5732 . -63) (undo-tree-id5733 . -63) (undo-tree-id5734 . -63) (undo-tree-id5735 . -63) (undo-tree-id5736 . -63) (undo-tree-id5737 . -63) (undo-tree-id5738 . -63) (undo-tree-id5739 . -63) (undo-tree-id5740 . -63) (undo-tree-id5741 . -63) (undo-tree-id5742 . -63) (undo-tree-id5743 . -63) (undo-tree-id5744 . -63) (undo-tree-id5745 . -63) (undo-tree-id5746 . -63) (undo-tree-id5747 . -63) (undo-tree-id5748 . -63) (undo-tree-id5749 . -63) (undo-tree-id5750 . -63) (undo-tree-id5751 . -63) (undo-tree-id5752 . -63) (undo-tree-id5753 . -63) (undo-tree-id5754 . -63) (undo-tree-id5755 . -63) (undo-tree-id5756 . -63) (undo-tree-id5757 . -63) (undo-tree-id5758 . -63) (undo-tree-id5759 . -63) (undo-tree-id5760 . -63) (undo-tree-id5761 . -63) (undo-tree-id5762 . -63) (undo-tree-id5763 . -63) (undo-tree-id5764 . -63) (undo-tree-id5765 . -63) (undo-tree-id5766 . -63) (undo-tree-id5767 . -63) (undo-tree-id5768 . -63) (undo-tree-id5769 . -63) (undo-tree-id5770 . -63) (undo-tree-id5771 . -63) (undo-tree-id5772 . -63) (undo-tree-id5773 . -63) (undo-tree-id5774 . -63) (undo-tree-id5775 . -63) (undo-tree-id5776 . -63) (undo-tree-id5777 . -63) (undo-tree-id5778 . -63) (undo-tree-id5779 . -63) (undo-tree-id5780 . -63) (undo-tree-id5781 . -63) (undo-tree-id5782 . -63) (undo-tree-id5783 . -63) (undo-tree-id5784 . -63) (undo-tree-id5785 . -63) (undo-tree-id5786 . -63) (undo-tree-id5787 . -63) (undo-tree-id5788 . -63) (undo-tree-id5789 . -63) (undo-tree-id5790 . -64) (undo-tree-id5791 . -64) (undo-tree-id5792 . -64) (undo-tree-id5793 . -64) (undo-tree-id5794 . -64) (undo-tree-id5795 . -64) (undo-tree-id5796 . -64) (undo-tree-id5797 . -64) (undo-tree-id5798 . -64) (undo-tree-id5799 . -64) (undo-tree-id5800 . -64) (undo-tree-id5801 . -64) (undo-tree-id5802 . -64) (undo-tree-id5803 . -64) (undo-tree-id5804 . -64) (undo-tree-id5805 . -64) (undo-tree-id5806 . -64) (undo-tree-id5807 . -64) (undo-tree-id5808 . -64) (undo-tree-id5809 . -64) (undo-tree-id5810 . -64) (undo-tree-id5811 . -64) (undo-tree-id5812 . -64) (undo-tree-id5813 . -64) (undo-tree-id5814 . -64) (undo-tree-id5815 . -64) (undo-tree-id5816 . -64) (undo-tree-id5817 . -64) (undo-tree-id5818 . -64) (undo-tree-id5819 . -64) (undo-tree-id5820 . -64) (undo-tree-id5821 . -64) (undo-tree-id5822 . -64) (undo-tree-id5823 . -64) (undo-tree-id5824 . -64) (undo-tree-id5825 . -64) (undo-tree-id5826 . -64) (undo-tree-id5827 . -64) (undo-tree-id5828 . -64) (undo-tree-id5829 . -64) (undo-tree-id5830 . -64) (undo-tree-id5831 . -64) (undo-tree-id5832 . -64) (undo-tree-id5833 . -64) (undo-tree-id5834 . -64) (undo-tree-id5835 . -64) (undo-tree-id5836 . -64) (undo-tree-id5837 . -64) (undo-tree-id5838 . -64) (undo-tree-id5839 . -64) (undo-tree-id5840 . -64) (undo-tree-id5841 . -64) (undo-tree-id5842 . -64) (undo-tree-id5843 . -64) (undo-tree-id5844 . -64) (undo-tree-id5845 . -64) (undo-tree-id5846 . -64) (undo-tree-id5847 . -64) (undo-tree-id5848 . -64) (undo-tree-id5849 . -64) (undo-tree-id5850 . -64) (undo-tree-id5851 . -64) (undo-tree-id5852 . -64) (undo-tree-id5853 . -64) (undo-tree-id5854 . -64) (undo-tree-id5855 . -64) (undo-tree-id5856 . -64) (undo-tree-id5857 . -64) (undo-tree-id5858 . -64) (undo-tree-id5859 . -64) (undo-tree-id5860 . -64) (undo-tree-id5861 . -64) (undo-tree-id5862 . -64) (undo-tree-id5863 . -64) (undo-tree-id5864 . -64) (undo-tree-id5865 . -64) (undo-tree-id5866 . -64) (undo-tree-id5867 . -64) (undo-tree-id5868 . -64) (undo-tree-id5869 . -64) (undo-tree-id5870 . -64) (undo-tree-id5871 . -64) (undo-tree-id5872 . -64) (undo-tree-id5873 . -64) (undo-tree-id5874 . -64) (undo-tree-id5875 . -64) (undo-tree-id5876 . -64) (undo-tree-id5877 . -64) (undo-tree-id5878 . -64) (undo-tree-id5879 . -64) (undo-tree-id5880 . -64) (undo-tree-id5881 . -64) 2041 (t 25934 5872 952336 848000)) nil (25934 5913 114241 816000) 0 nil])
([nil nil ((1977 . 1993) (#("        " 0 8 (fontified t)) . 1977) (undo-tree-id5682 . -8)) nil (25934 5913 114050 207000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -1989) (undo-tree-id5677 . -4) (undo-tree-id5678 . -4) (undo-tree-id5679 . -4) (undo-tree-id5680 . -4) (undo-tree-id5681 . -4) 1993) nil (25934 5913 114047 597000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1985) (undo-tree-id5611 . -4) (undo-tree-id5612 . -4) (undo-tree-id5613 . -4) (undo-tree-id5614 . -4) (undo-tree-id5615 . -4) (undo-tree-id5616 . -4) (undo-tree-id5617 . -4) (undo-tree-id5618 . -4) (undo-tree-id5619 . -4) (undo-tree-id5620 . -4) (undo-tree-id5621 . -4) (undo-tree-id5622 . -4) (undo-tree-id5623 . -4) (undo-tree-id5624 . -4) (undo-tree-id5625 . -4) (undo-tree-id5626 . -4) (undo-tree-id5627 . -4) (undo-tree-id5628 . -4) (undo-tree-id5629 . -4) (undo-tree-id5630 . -4) (undo-tree-id5631 . -4) (undo-tree-id5632 . -4) (undo-tree-id5633 . -4) (undo-tree-id5634 . -4) (undo-tree-id5635 . -4) (undo-tree-id5636 . -4) (undo-tree-id5637 . -4) (undo-tree-id5638 . -4) (undo-tree-id5639 . -4) (undo-tree-id5640 . -4) (undo-tree-id5641 . -4) (undo-tree-id5642 . -4) (undo-tree-id5643 . -4) (undo-tree-id5644 . -4) (undo-tree-id5645 . -4) (undo-tree-id5646 . -4) (undo-tree-id5647 . -4) (undo-tree-id5648 . -4) (undo-tree-id5649 . -4) (undo-tree-id5650 . -4) (undo-tree-id5651 . -4) (undo-tree-id5652 . -4) (undo-tree-id5653 . -4) (undo-tree-id5654 . -4) (undo-tree-id5655 . -4) (undo-tree-id5656 . -4) (undo-tree-id5657 . -4) (undo-tree-id5658 . -4) (undo-tree-id5659 . -4) (undo-tree-id5660 . -4) (undo-tree-id5661 . -4) (undo-tree-id5662 . -4) (undo-tree-id5663 . -4) (undo-tree-id5664 . -4) (undo-tree-id5665 . -4) (undo-tree-id5666 . -4) (undo-tree-id5667 . -4) (undo-tree-id5668 . -4) (undo-tree-id5669 . -4) (undo-tree-id5670 . -4) (undo-tree-id5671 . -4) (undo-tree-id5672 . -4) (undo-tree-id5673 . -4) (undo-tree-id5674 . -4) (undo-tree-id5675 . -4) (undo-tree-id5676 . -4) 1989) nil (25934 5913 114036 604000) 0 nil])
([nil nil ((apply -2 1593 1662 undo--wrap-and-run-primitive-undo 1593 1662 ((1601 . 1603) 1659))) nil (25934 5964 380334 602000) 0 nil])
([nil nil ((1661 . 1670)) nil (25934 5964 380333 339000) 0 nil])
([nil nil ((1661 . 1669)) nil (25934 5964 380332 261000) 0 nil])
([nil nil ((1662 . 1670) (#("        " 0 8 (fontified nil)) . 1661) (undo-tree-id5886 . -8) (1669 . 1670)) nil (25934 5964 380330 627000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1661) (undo-tree-id5885 . -1) 1662) nil (25934 5964 380327 213000) 0 nil])
([nil nil ((1669 . 1675)) nil (25934 5964 380325 124000) 0 nil])
([nil nil ((#(">" 0 1 (face font-lock-operator-face fontified t)) . -1674) (undo-tree-id5884 . -1) 1675) nil (25934 5964 380323 355000) 0 nil])
([nil nil ((1674 . 1677)) nil (25934 5964 380320 977000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1676) (undo-tree-id5883 . -1) 1677) nil (25934 5964 380319 319000) 0 nil])
([nil nil ((1676 . 1680)) nil (25934 5964 380316 547000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1682) (1681 . 1682) (1680 . 1682) (#("[" 0 1 (fontified nil)) . -1680) (1680 . 1681)) nil (25934 5964 380314 896000) 0 nil])
([nil nil ((#("        self.Wab = []
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 22 (fontified t)) . -1661) (undo-tree-id5882 . -22) 1683) nil (25934 5964 380312 379000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1601) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1601)) nil (25934 5964 380302 326000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1614) (#("n" 0 1 (fontified t)) . 1614) (#("o" 0 1 (fontified t)) . 1614) (#("N" 0 1 (face font-lock-constant-face fontified t)) . 1614)) nil (25934 5964 380299 653000) 0 nil])
([nil nil ((1614 . 1615)) nil (25934 5964 380293 210000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1614) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) 1615 (t 25934 5964 402332 788000)) nil (25934 5977 625699 11000) 0 nil])
([nil nil ((1614 . 1618)) nil (25934 5992 462750 70000) 0 nil])
([nil nil ((2845 . 2846) (t 25934 5977 650064 591000)) nil (25934 5994 814862 163000) 0 nil] [nil nil ((#("                r_pres = r_pres.unsqueeze(0)
" 0 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t gptel response) 17 22 (face font-lock-variable-name-face fontified t gptel response) 22 23 (fontified t gptel response) 23 24 (face font-lock-operator-face fontified t gptel response) 24 41 (fontified t gptel response) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t gptel response) 42 43 (fontified t gptel response) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t gptel response) 44 45 (fontified t)) . -2845) (undo-tree-id5975 . -45) (undo-tree-id5976 . -45) (undo-tree-id5977 . -45) (undo-tree-id5978 . -45) (undo-tree-id5979 . -45) (undo-tree-id5980 . -16) (undo-tree-id5981 . -16) (undo-tree-id5982 . -16) (undo-tree-id5983 . -16) (undo-tree-id5984 . -16) (undo-tree-id5985 . -16) (undo-tree-id5986 . -16) (undo-tree-id5987 . -16) (undo-tree-id5988 . -16) (undo-tree-id5989 . -16) (undo-tree-id5990 . -16) (undo-tree-id5991 . -16) (undo-tree-id5992 . -16) (undo-tree-id5993 . -16) (undo-tree-id5994 . -16) (undo-tree-id5995 . -16) (undo-tree-id5996 . -16) (undo-tree-id5997 . -16) (undo-tree-id5998 . -16) (undo-tree-id5999 . -16) (undo-tree-id6000 . -16) (undo-tree-id6001 . -16) (undo-tree-id6002 . -16) (undo-tree-id6003 . -16) (undo-tree-id6004 . -16) (undo-tree-id6005 . -16) (undo-tree-id6006 . -16) (undo-tree-id6007 . -16) (undo-tree-id6008 . -16) (undo-tree-id6009 . -16) (undo-tree-id6010 . -16) (undo-tree-id6011 . -16) (undo-tree-id6012 . -16) (undo-tree-id6013 . -16) (undo-tree-id6014 . -16) (undo-tree-id6015 . -16) (undo-tree-id6016 . -16) (undo-tree-id6017 . -16) (undo-tree-id6018 . -16) (undo-tree-id6019 . -16) (undo-tree-id6020 . -16) (undo-tree-id6021 . -16) (undo-tree-id6022 . -16) (undo-tree-id6023 . -16) (undo-tree-id6024 . -16) (undo-tree-id6025 . -16) (undo-tree-id6026 . -16) (undo-tree-id6027 . -16) (undo-tree-id6028 . -16) (undo-tree-id6029 . -16) (undo-tree-id6030 . -16) (undo-tree-id6031 . -16) (undo-tree-id6032 . -16) (undo-tree-id6033 . -16) (undo-tree-id6034 . -16) (undo-tree-id6035 . -16) (undo-tree-id6036 . -16) (undo-tree-id6037 . -16) (undo-tree-id6038 . -16) (undo-tree-id6039 . -16) (undo-tree-id6040 . -16) (undo-tree-id6041 . -16) (undo-tree-id6042 . -16) (undo-tree-id6043 . -16) (undo-tree-id6044 . -16) (undo-tree-id6045 . -16) (undo-tree-id6046 . -16) (undo-tree-id6047 . -16) (undo-tree-id6048 . -16) (undo-tree-id6049 . -16) (undo-tree-id6050 . -16) (undo-tree-id6051 . -16) (undo-tree-id6052 . -16) (undo-tree-id6053 . -16) (undo-tree-id6054 . -16) (undo-tree-id6055 . -16) (undo-tree-id6056 . -16) (undo-tree-id6057 . -16) (undo-tree-id6058 . -16) (undo-tree-id6059 . -16) (undo-tree-id6060 . -16) (undo-tree-id6061 . -16) (undo-tree-id6062 . -16) (undo-tree-id6063 . -16) (undo-tree-id6064 . -16) (undo-tree-id6065 . -16) (undo-tree-id6066 . -16) (undo-tree-id6067 . -16) (undo-tree-id6068 . -16) (undo-tree-id6069 . -16) (undo-tree-id6070 . -16) (undo-tree-id6071 . -45) (undo-tree-id6072 . -45) (undo-tree-id6073 . -45) (undo-tree-id6074 . -45) (undo-tree-id6075 . -45) (undo-tree-id6076 . -45) (undo-tree-id6077 . -45) (undo-tree-id6078 . -45) (undo-tree-id6079 . -45) (undo-tree-id6080 . -45) (undo-tree-id6081 . -45) (undo-tree-id6082 . -45) (undo-tree-id6083 . -45) (undo-tree-id6084 . -45) (undo-tree-id6085 . -45) (undo-tree-id6086 . -45) (undo-tree-id6087 . -45) (undo-tree-id6088 . -45) (undo-tree-id6089 . -45) (undo-tree-id6090 . -45) (undo-tree-id6091 . -45) (undo-tree-id6092 . -45) (undo-tree-id6093 . -45) (undo-tree-id6094 . -45) (undo-tree-id6095 . -45) (undo-tree-id6096 . -45) (undo-tree-id6097 . -45) (undo-tree-id6098 . -45) (undo-tree-id6099 . -45) (undo-tree-id6100 . -45) (undo-tree-id6101 . -45) (undo-tree-id6102 . -45) (undo-tree-id6103 . -45) (undo-tree-id6104 . -45) 2890 (t 25934 5977 650064 591000)) ((2845 . 2890)) (25934 5992 461575 175000) 0 nil])
([nil nil ((2862 . 2864)) nil (25934 6066 322820 315000) 0 nil])
nil
([nil nil ((2845 . 2861) (t 25934 5994 847618 982000)) nil (25934 6094 604439 547000) 0 nil] [nil nil ((3130 . 3131) (t 25934 5994 847618 982000)) ((#("
" 0 1 (fontified t)) . 3130)) (25934 6066 321927 74000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2878) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2878) (t 25934 6094 629967 752000)) nil (25934 6147 721890 94000) 0 nil])
nil
([nil nil ((apply 4 5069 5174 undo--wrap-and-run-primitive-undo 5069 5174 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5130) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5077) 5178))) nil (25934 6181 895881 180000) 0 nil])
([nil nil ((15457 . 15458) (t 25934 6181 943087 447000)) nil (25934 6290 690220 393000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -15457) (undo-tree-id6162 . -1) 15458) nil (25934 6290 690218 313000) 0 nil])
([nil nil ((8320 . 8331)) nil (25934 6290 690215 620000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8330) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) 8331) nil (25934 6290 690212 381000) 0 nil])
([nil nil ((8331 . 8333) (#("(" 0 1 (fontified nil)) . -8331) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (8330 . 8332)) nil (25934 6290 690171 919000) 0 nil])
([nil nil ((8336 . 8337)) nil (25934 6290 690167 130000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8332) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) 8333) nil (25934 6290 690159 946000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -8326) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) 8327 (t 25934 6290 736408 5000)) nil (25934 6301 137248 79000) 0 nil])
([nil nil ((8326 . 8327)) nil (25934 6301 137181 893000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-builtin-face fontified t)) . -8329) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) 8330 (t 25934 6301 162629 544000)) nil (25934 6312 531702 940000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -8326) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (#("l" 0 1 (fontified t)) . -8327) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (#("o" 0 1 (fontified t)) . -8328) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) 8329) nil (25934 6312 531572 825000) 0 nil])
([nil nil ((8327 . 8332)) nil (25934 6312 530678 564000) 0 nil])
([nil nil ((8336 . 8345) (t 25934 6312 557073 753000)) nil (25934 6348 898063 793000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8343) (undo-tree-id6617 . -1) 8344) nil (25934 6348 898060 659000) 0 nil])
([nil nil ((8344 . 8351)) nil (25934 6348 898055 123000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -8350) (undo-tree-id6616 . -1) 8351) nil (25934 6348 898052 74000) 0 nil])
([nil nil ((8350 . 8361)) nil (25934 6348 898046 369000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -8360) (undo-tree-id6615 . -1) 8361) nil (25934 6348 898043 305000) 0 nil])
([nil nil ((8360 . 8363)) nil (25934 6348 898035 482000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8362) (undo-tree-id6614 . -1) 8363) nil (25934 6348 898031 236000) 0 nil])
([nil nil ((8362 . 8363)) nil (25934 6348 897973 510000) 0 nil])
([nil nil ((8363 . 8374)) nil (25934 6348 897960 199000) 0 nil])
([nil nil ((12804 . 12809) (t 25934 6348 936962 641000)) nil (25934 6575 891435 297000) 0 nil])
([nil nil ((12816 . 12818) (#("(" 0 1 (fontified nil)) . -12816) (12809 . 12817)) nil (25934 6575 891434 52000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 12817)) nil (25934 6575 891432 868000) 0 nil])
([nil nil ((12846 . 12847)) nil (25934 6575 891432 248000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12846) (undo-tree-id6649 . -1) 12847) nil (25934 6575 891431 123000) 0 nil])
([nil nil ((12846 . 12847)) nil (25934 6575 891428 981000) 0 nil])
([nil nil ((12659 . 12672)) nil (25934 6575 891428 322000) 0 nil])
([nil nil ((12672 . 12679)) nil (25934 6575 891427 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12791 . 12792) (nil fontified nil 12785 . 12792) (nil fontified nil 12781 . 12785) (nil fontified nil 12780 . 12781) (nil fontified nil 12772 . 12780) (12772 . 12792)) nil (25934 6575 891426 171000) 0 nil])
([nil nil ((12887 . 12888)) nil (25934 6575 891424 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12907 . 12908) (nil fontified nil 12901 . 12908) (nil fontified nil 12897 . 12901) (nil fontified nil 12896 . 12897) (nil fontified nil 12888 . 12896) (12888 . 12908)) nil (25934 6575 891423 95000) 0 nil])
([nil nil ((12908 . 12909)) nil (25934 6575 891421 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12904 . 12905) (nil fontified nil 12904 . 12905) (nil fontified nil 12898 . 12904) (nil fontified nil 12894 . 12898) (nil fontified nil 12893 . 12894) (nil fontified nil 12888 . 12893) (12888 . 12905)) nil (25934 6575 891419 740000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 12905) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1)) nil (25934 6575 891413 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12709 . 12710) (nil fontified nil 12709 . 12710) (nil fontified nil 12708 . 12709) (nil fontified nil 12702 . 12708) (nil fontified nil 12698 . 12702) (nil fontified nil 12690 . 12698) (nil fontified nil 12686 . 12690) (nil fontified nil 12685 . 12686) (nil fontified nil 12680 . 12685) (nil fontified nil 12679 . 12680) (nil fontified nil 12672 . 12679) (nil fontified nil 12668 . 12672) (nil fontified nil 12667 . 12668) (nil fontified nil 12653 . 12667) (nil fontified nil 12649 . 12653) (nil fontified nil 12648 . 12649) (nil fontified nil 12635 . 12648) (nil fontified nil 12631 . 12635) (nil fontified nil 12630 . 12631) (nil fontified nil 12617 . 12630) (nil fontified nil 12616 . 12617) (nil fontified nil 12615 . 12616) (nil fontified nil 12610 . 12615) (nil fontified nil 12609 . 12610) (nil fontified nil 12605 . 12609) (nil fontified nil 12597 . 12605) (12597 . 12710) (t 25934 6575 915872 264000)) nil (25934 6617 106957 125000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -12637) (undo-tree-id6661 . -1) (#("G" 0 1 (fontified t)) . -12638) (undo-tree-id6662 . -1) (#("M" 0 1 (fontified t)) . -12639) (undo-tree-id6663 . -1) (#("A" 0 1 (fontified t)) . -12640) (undo-tree-id6664 . -1) 12641) nil (25934 6617 106951 543000) 0 nil])
([nil nil ((12637 . 12645)) nil (25934 6617 106946 462000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . 12611) (#("M" 0 1 (face font-lock-variable-name-face fontified t)) . 12611) (#("G" 0 1 (face font-lock-variable-name-face fontified t)) . 12611) (#("I" 0 1 (face font-lock-variable-name-face fontified t)) . 12611)) nil (25934 6617 106945 88000) 0 nil])
([nil nil ((12611 . 12616)) nil (25934 6617 106944 127000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-variable-name-face fontified t)) . -12615) (undo-tree-id6660 . -1) 12616) nil (25934 6617 106943 310000) 0 nil])
([nil nil ((12615 . 12619)) nil (25934 6617 106941 437000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -12657) (undo-tree-id6650 . -1) (#("e" 0 1 (fontified t)) . -12658) (undo-tree-id6651 . -1) (#("l" 0 1 (fontified t)) . -12659) (undo-tree-id6652 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12660) (undo-tree-id6653 . -1) (#("." 0 1 (fontified t)) . -12661) (undo-tree-id6654 . -1) (#("F" 0 1 (fontified t)) . -12662) (undo-tree-id6655 . -1) (#("L" 0 1 (fontified nil)) . -12663) (undo-tree-id6656 . -1) (#("O" 0 1 (fontified t)) . -12664) (undo-tree-id6657 . -1) (#("A" 0 1 (fontified t)) . -12665) (undo-tree-id6658 . -1) (#("T" 0 1 (fontified t)) . -12666) (undo-tree-id6659 . -1) 12667) nil (25934 6617 106937 897000) 0 nil])
([nil nil ((12657 . 12666)) nil (25934 6617 106917 970000) 0 nil])
([nil nil ((apply -2 12515 12719 undo--wrap-and-run-primitive-undo 12515 12719 ((12523 . 12525) 12515))) nil (25934 6617 106912 581000) 0 nil])
([nil nil ((12658 . 12659) (t 25934 6617 129004 884000)) nil (25934 6652 449051 560000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12658) (undo-tree-id6778 . -1) 12659) nil (25934 6652 449050 169000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -12665) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -12666) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) 12667) nil (25934 6652 449045 302000) 0 nil])
([nil nil ((12665 . 12667)) nil (25934 6652 448684 680000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -12666) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) 12667) nil (25934 6652 448682 453000) 0 nil])
([nil nil ((12667 . 12668)) nil (25934 6652 448646 311000) 0 nil])
([nil nil ((12668 . 12671) (t 25934 6652 477138 510000)) nil (25934 6661 488267 264000) 0 nil])
([nil nil ((apply 2 12515 12597 undo--wrap-and-run-primitive-undo 12515 12597 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -12523) 12515))) nil (25934 6672 218459 733000) 0 nil])
([nil nil ((apply -2 12597 12835 undo--wrap-and-run-primitive-undo 12597 12835 ((12605 . 12607) 12720))) nil (25934 6672 218454 393000) 0 nil])
([nil nil ((#("        # self.STRUCTURE = torch.tensor(self.STRUCTURE, dtype=torch.string, device=self.device).view(self.N_POP, self.N_POP)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t) 15 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t) 26 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 44 (face font-lock-comment-face fontified t) 44 61 (face font-lock-comment-face fontified t) 61 62 (face font-lock-comment-face fontified t) 62 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 74 (face font-lock-comment-face fontified t) 74 82 (face font-lock-comment-face fontified t) 82 83 (face font-lock-comment-face fontified t) 83 87 (face font-lock-comment-face fontified t) 87 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 100 (face font-lock-comment-face fontified t) 100 101 (face font-lock-comment-face fontified t) 101 105 (face font-lock-comment-face fontified t) 105 113 (face font-lock-comment-face fontified t) 113 117 (face font-lock-comment-face fontified t) 117 123 (face font-lock-comment-face fontified t) 123 124 (face font-lock-comment-face fontified t) 124 125 (face font-lock-comment-face rear-nonsticky t fontified t)) . -12597) (undo-tree-id6779 . -124) (undo-tree-id6780 . -71) (undo-tree-id6781 . -71) (undo-tree-id6782 . -71) (undo-tree-id6783 . -71) (undo-tree-id6784 . -71) (undo-tree-id6785 . -74) (undo-tree-id6786 . -74) (undo-tree-id6787 . -74) (undo-tree-id6788 . -74) (undo-tree-id6789 . -74) (undo-tree-id6790 . -124) (undo-tree-id6791 . -124) (undo-tree-id6792 . -124) (undo-tree-id6793 . -124) (undo-tree-id6794 . -124) (undo-tree-id6795 . -124) (undo-tree-id6796 . -124) (undo-tree-id6797 . -124) (undo-tree-id6798 . -124) (undo-tree-id6799 . -124) (undo-tree-id6800 . -124) (undo-tree-id6801 . -124) (undo-tree-id6802 . -124) (undo-tree-id6803 . -124) (undo-tree-id6804 . -124) (undo-tree-id6805 . -125) (undo-tree-id6806 . -125) (undo-tree-id6807 . -125) (undo-tree-id6808 . -125) (undo-tree-id6809 . -125) (undo-tree-id6810 . -125) (undo-tree-id6811 . -125) (undo-tree-id6812 . -125) (undo-tree-id6813 . -125) (undo-tree-id6814 . -125) (undo-tree-id6815 . -125) (undo-tree-id6816 . -125) (undo-tree-id6817 . -125) (undo-tree-id6818 . -125) (undo-tree-id6819 . -125) (undo-tree-id6820 . -125) (undo-tree-id6821 . -125) (undo-tree-id6822 . -125) (undo-tree-id6823 . -125) (undo-tree-id6824 . -125) (undo-tree-id6825 . -125) (undo-tree-id6826 . -125) (undo-tree-id6827 . -125) (undo-tree-id6828 . -125) (undo-tree-id6829 . -125) (undo-tree-id6830 . -125) (undo-tree-id6831 . -125) (undo-tree-id6832 . -125) (undo-tree-id6833 . -125) (undo-tree-id6834 . -125) (undo-tree-id6835 . -125) (undo-tree-id6836 . -125) (undo-tree-id6837 . -125) (undo-tree-id6838 . -125) (undo-tree-id6839 . -125) (undo-tree-id6840 . -125) (undo-tree-id6841 . -125) (undo-tree-id6842 . -125) (undo-tree-id6843 . -125) (undo-tree-id6844 . -125) (undo-tree-id6845 . -125) (undo-tree-id6846 . -125) (undo-tree-id6847 . -125) (undo-tree-id6848 . -125) (undo-tree-id6849 . -125) (undo-tree-id6850 . -125) (undo-tree-id6851 . -125) (undo-tree-id6852 . -125) (undo-tree-id6853 . -125) (undo-tree-id6854 . -125) (undo-tree-id6855 . -125) (undo-tree-id6856 . -125) (undo-tree-id6857 . -125) (undo-tree-id6858 . -125) (undo-tree-id6859 . -125) (undo-tree-id6860 . -125) (undo-tree-id6861 . -124) (undo-tree-id6862 . -125) (undo-tree-id6863 . -125) (undo-tree-id6864 . -125) (undo-tree-id6865 . -125) (undo-tree-id6866 . -125) (undo-tree-id6867 . -125) 12722 (t 25934 6672 245584 632000)) nil (25934 6686 16897 926000) 0 nil])
([nil nil ((2561 . 2579) (t 25934 6686 39561 737000)) nil (25934 6715 862846 269000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -10099) (undo-tree-id6869 . -1) (#("." 0 1 (fontified t)) . -10100) (undo-tree-id6870 . -1) (#("0" 0 1 (fontified t)) . -10101) (undo-tree-id6871 . -1) (#(" " 0 1 (fontified t)) . -10102) (undo-tree-id6872 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -10103) (undo-tree-id6873 . -1) (#(" " 0 1 (fontified t)) . -10104) (undo-tree-id6874 . -1) 10105 (t 25934 6715 887550 804000)) nil (25934 6922 559117 216000) 0 nil])
([nil nil ((10097 . 10098)) nil (25934 6922 559094 979000) 0 nil])
([nil nil ((9157 . 9158)) nil (25934 6922 559093 187000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 9160) (undo-tree-id6868 . -1)) nil (25934 6922 559088 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 9160) (#("+" 0 1 (face font-lock-operator-face fontified t)) . 9160) (#(" " 0 1 (fontified t)) . 9160) (#("0" 0 1 (fontified t)) . 9160) (#("." 0 1 (fontified t)) . 9160)) nil (25934 6922 559066 496000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -9263) 9235) nil (25934 6922 559053 352000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1906) (undo-tree-id6928 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1907) (undo-tree-id6929 . -1) (#(" " 0 1 (fontified t)) . -1908) (undo-tree-id6930 . -1) 1909 (t 25934 6922 602005 301000)) nil (25934 6985 572660 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1911 . 1912) (nil fontified nil 1911 . 1912) (nil fontified nil 1906 . 1911) (1906 . 1912)) nil (25934 6985 572656 244000) 0 nil])
([nil nil ((1942 . 1943)) nil (25934 6985 572655 64000) 0 nil])
([nil nil ((1906 . 1907)) nil (25934 6985 572654 346000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1906) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) 1907) nil (25934 6985 572650 867000) 0 nil])
([nil nil ((1906 . 1907)) nil (25934 6985 572590 465000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1943) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) 1944 (t 25934 6985 597675 814000)) nil (25934 7003 856088 620000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1906) (#("l" 0 1 (fontified t)) . 1906) (#("l" 0 1 (fontified t)) . 1906) (#("i" 0 1 (fontified t)) . 1906) (#("f" 0 1 (fontified t)) . 1906) (#("." 0 1 (fontified t)) . 1906) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1)) nil (25934 7003 856020 444000) 0 nil])
([nil nil ((1906 . 1909)) nil (25934 7003 855990 221000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 1909)) nil (25934 7003 855984 216000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . 9157) (t 25934 7003 880452 421000)) nil (25934 7019 358841 316000) 0 nil])
([nil nil ((9159 . 9160)) nil (25934 7019 358839 242000) 0 nil])
([nil nil ((9160 . 9165)) nil (25934 7019 358835 341000) 0 nil])
([nil nil ((9221 . 9273) (#("                                               " 0 47 (fontified t)) . 9221) (undo-tree-id6989 . -24) (undo-tree-id6990 . -24) (undo-tree-id6991 . -24) (undo-tree-id6992 . -24) (undo-tree-id6993 . -24) (undo-tree-id6994 . -24) (undo-tree-id6995 . -24) (undo-tree-id6996 . -24) (undo-tree-id6997 . -24) (undo-tree-id6998 . -24) (undo-tree-id6999 . -24) (undo-tree-id7000 . -24) (undo-tree-id7001 . -24) (undo-tree-id7002 . -24) (undo-tree-id7003 . -24) (undo-tree-id7004 . -24) (undo-tree-id7005 . -24) (undo-tree-id7006 . -24) (undo-tree-id7007 . -24) (undo-tree-id7008 . -24) (undo-tree-id7009 . -24) (undo-tree-id7010 . -24) (undo-tree-id7011 . -24) (undo-tree-id7012 . -24) (undo-tree-id7013 . -24) (undo-tree-id7014 . -24) (undo-tree-id7015 . -24) (undo-tree-id7016 . -24) (undo-tree-id7017 . -24) (undo-tree-id7018 . -24) (undo-tree-id7019 . -24) (undo-tree-id7020 . -24) 9245) nil (25934 7019 358822 677000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . 10097) (t 25934 7019 393743 604000)) nil (25934 7047 292118 209000) 0 nil])
([nil nil ((10099 . 10105)) nil (25934 7047 292115 209000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 9159) (#("." 0 1 (fontified t)) . 9159) (#("1" 0 1 (fontified t)) . 9159)) nil (25934 7047 292111 68000) 0 nil])
([nil nil ((9159 . 9162)) nil (25934 7047 292103 731000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -9159) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (#("i" 0 1 (fontified t)) . -9160) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (#("j" 0 1 (fontified t)) . -9161) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) 9162 (t 25934 7047 307552 278000)) nil (25934 7097 360202 261000) 0 nil])
([nil nil ((9159 . 9162)) nil (25934 7097 360163 922000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -10099) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (#("i" 0 1 (fontified t)) . -10100) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (#("j" 0 1 (fontified t)) . -10101) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) 10102) nil (25934 7097 360140 744000) 0 nil])
([nil nil ((10099 . 10102)) nil (25934 7097 359662 787000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -10100) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (#("0" 0 1 (fontified t)) . -10101) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) 10102) nil (25934 7097 359657 149000) 0 nil])
([nil nil ((10100 . 10102)) nil (25934 7097 359461 762000) 0 nil])
([nil nil ((8332 . 8333) (t 25934 7097 385027 782000)) nil (25934 7104 821364 22000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -8332) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) 8333) nil (25934 7104 821358 64000) 0 nil])
([nil nil ((10311 . 10327) (#("            " 0 12 (fontified t)) . 10311) (undo-tree-id7487 . -8) 10319 (t 25934 7104 861624 336000)) nil (25934 7158 234106 350000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10323) (undo-tree-id7486 . -4) 10327) nil (25934 7158 234102 675000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10064) (undo-tree-id7472 . -1) (#("e" 0 1 (fontified t)) . -10065) (undo-tree-id7473 . -1) (#("l" 0 1 (fontified t)) . -10066) (undo-tree-id7474 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -10067) (undo-tree-id7475 . -1) (#("." 0 1 (fontified t)) . -10068) (undo-tree-id7476 . -1) (#("K" 0 1 (fontified t)) . -10069) (undo-tree-id7477 . -1) (#("a" 0 1 (fontified t)) . -10070) (undo-tree-id7478 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10071) (undo-tree-id7479 . -1) (#("j" 0 1 (fontified t)) . -10072) (undo-tree-id7480 . -1) (#("_" 0 1 (fontified nil)) . -10073) (undo-tree-id7481 . -1) (#("p" 0 1 (fontified t)) . -10074) (undo-tree-id7482 . -1) (#("o" 0 1 (fontified nil)) . -10075) (undo-tree-id7483 . -1) (#("p" 0 1 (fontified t)) . -10076) (undo-tree-id7484 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10077) (undo-tree-id7485 . -1) 10078) nil (25934 7158 234094 727000) 0 nil])
([nil nil ((10064 . 10066)) nil (25934 7158 234058 620000) 0 nil])
([nil nil ((10068 . 10084) (t 25934 7158 267475 504000)) nil (25934 7161 619404 936000) 0 nil])
([nil nil ((10621 . 10633) (t 25934 7161 647912 823000)) nil (25934 7171 58791 258000) 0 nil])
([nil nil ((11874 . 11876) (t 25934 7171 97164 457000)) nil (25934 7238 105787 537000) 0 nil])
([nil nil ((11874 . 11879)) nil (25934 7238 105786 397000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11874) (undo-tree-id7528 . -1) (#("e" 0 1 (fontified t)) . -11875) (undo-tree-id7529 . -1) (#("l" 0 1 (fontified t)) . -11876) (undo-tree-id7530 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -11877) (undo-tree-id7531 . -1) (#("." 0 1 (fontified t)) . -11878) (undo-tree-id7532 . -1) 11879) nil (25934 7238 105784 238000) 0 nil])
([nil nil ((11874 . 11880)) nil (25934 7238 105778 90000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11879) (undo-tree-id7527 . -1) 11880) nil (25934 7238 105777 133000) 0 nil])
([nil nil ((11879 . 11881)) nil (25934 7238 105775 223000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11880) (undo-tree-id7526 . -1) 11881) nil (25934 7238 105774 143000) 0 nil])
([nil nil ((11880 . 11884)) nil (25934 7238 105772 202000) 0 nil])
([nil nil ((11884 . 11885)) nil (25934 7238 105771 391000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11880) (undo-tree-id7521 . -1) (#("e" 0 1 (fontified t)) . -11881) (undo-tree-id7522 . -1) (#("l" 0 1 (fontified t)) . -11882) (undo-tree-id7523 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -11883) (undo-tree-id7524 . -1) (#("." 0 1 (fontified t)) . -11884) (undo-tree-id7525 . -1) 11885) nil (25934 7238 105769 548000) 0 nil])
([nil nil ((11880 . 11889)) nil (25934 7238 105762 933000) 0 nil])
([nil nil ((11948 . 11949)) nil (25934 7238 105762 291000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11948) (undo-tree-id7520 . -1) 11949) nil (25934 7238 105761 134000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11873) (undo-tree-id7502 . -1) (#("d" 0 1 (fontified t)) . -11874) (undo-tree-id7503 . -1) (#("t" 0 1 (fontified t)) . -11875) (undo-tree-id7504 . -1) (#("y" 0 1 (fontified t)) . -11876) (undo-tree-id7505 . -1) (#("p" 0 1 (fontified t)) . -11877) (undo-tree-id7506 . -1) (#("e" 0 1 (fontified t)) . -11878) (undo-tree-id7507 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -11879) (undo-tree-id7508 . -1) (#("t" 0 1 (fontified t)) . -11880) (undo-tree-id7509 . -1) (#("o" 0 1 (fontified t)) . -11881) (undo-tree-id7510 . -1) (#("r" 0 1 (fontified t)) . -11882) (undo-tree-id7511 . -1) (#("c" 0 1 (fontified t)) . -11883) (undo-tree-id7512 . -1) (#("h" 0 1 (fontified t)) . -11884) (undo-tree-id7513 . -1) (#("." 0 1 (fontified t)) . -11885) (undo-tree-id7514 . -1) (#("i" 0 1 (fontified t)) . -11886) (undo-tree-id7515 . -1) (#("n" 0 1 (fontified t)) . -11887) (undo-tree-id7516 . -1) (#("t" 0 1 (fontified t)) . -11888) (undo-tree-id7517 . -1) (#("," 0 1 (fontified t)) . -11889) (undo-tree-id7518 . -1) (#(" " 0 1 (fontified t)) . -11890) (undo-tree-id7519 . -1) 11891) nil (25934 7238 105754 342000) 0 nil])
([nil nil ((11873 . 11874)) nil (25934 7238 105734 742000) 0 nil])
([nil nil ((11889 . 11897)) nil (25934 7238 105733 838000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11894) (undo-tree-id7499 . -1) (#("c" 0 1 (fontified t)) . -11895) (undo-tree-id7500 . -1) (#("e" 0 1 (fontified t)) . -11896) (undo-tree-id7501 . -1) 11897) nil (25934 7238 105731 844000) 0 nil])
([nil nil ((11894 . 11900)) nil (25934 7238 105727 640000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11897) (undo-tree-id7498 . -1) 11898) nil (25934 7238 105726 278000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11898) (undo-tree-id7497 . -1) 11899) nil (25934 7238 105723 650000) 0 nil])
([nil nil ((11898 . 11900)) nil (25934 7238 105721 492000) 0 nil])
([nil nil ((11900 . 11909)) nil (25934 7238 105720 666000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11906) (undo-tree-id7494 . -1) (#("c" 0 1 (fontified t)) . -11907) (undo-tree-id7495 . -1) (#("e" 0 1 (fontified t)) . -11908) (undo-tree-id7496 . -1) 11909) nil (25934 7238 105719 360000) 0 nil])
([nil nil ((11906 . 11909)) nil (25934 7238 105715 186000) 0 nil])
([nil nil ((11967 . 11975)) nil (25934 7238 105714 312000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11972) (undo-tree-id7491 . -1) (#("c" 0 1 (fontified t)) . -11973) (undo-tree-id7492 . -1) (#("e" 0 1 (fontified t)) . -11974) (undo-tree-id7493 . -1) 11975) nil (25934 7238 105712 115000) 0 nil])
([nil nil ((11972 . 11985)) nil (25934 7238 105707 310000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -11983) (undo-tree-id7489 . -1) (#("u" 0 1 (fontified t)) . -11984) (undo-tree-id7490 . -1) 11985) nil (25934 7238 105705 336000) 0 nil])
([nil nil ((11983 . 11985)) nil (25934 7238 105701 60000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11984) (undo-tree-id7488 . -1) 11985) nil (25934 7238 105699 98000) 0 nil])
([nil nil ((11984 . 11987)) nil (25934 7238 105681 899000) 0 nil])
([nil nil ((11833 . 11845) (t 25934 7238 138885 940000)) nil (25934 7243 541011 70000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11841) (undo-tree-id7533 . -4) (undo-tree-id7534 . -4) (undo-tree-id7535 . -4) (undo-tree-id7536 . -4) (undo-tree-id7537 . -4) (undo-tree-id7538 . -4) (undo-tree-id7539 . -4) (undo-tree-id7540 . -4) (undo-tree-id7541 . -4) (undo-tree-id7542 . -4) (undo-tree-id7543 . -4) (undo-tree-id7544 . -4) (undo-tree-id7545 . -4) (undo-tree-id7546 . -4) (undo-tree-id7547 . -4) (undo-tree-id7548 . -4) (undo-tree-id7549 . -4) (undo-tree-id7550 . -4) (undo-tree-id7551 . -4) (undo-tree-id7552 . -4) (undo-tree-id7553 . -4) (undo-tree-id7554 . -4) (undo-tree-id7555 . -4) (undo-tree-id7556 . -4) (undo-tree-id7557 . -4) (undo-tree-id7558 . -4) (undo-tree-id7559 . -4) (undo-tree-id7560 . -4) (undo-tree-id7561 . -4) (undo-tree-id7562 . -4) (undo-tree-id7563 . -4) (undo-tree-id7564 . -4) (undo-tree-id7565 . -4) (undo-tree-id7566 . -4) (undo-tree-id7567 . -4) (undo-tree-id7568 . -4) (undo-tree-id7569 . -4) 11845) nil (25934 7243 541006 266000) 0 nil])
([nil nil ((12080 . 12088) (t 25934 7243 567715 175000)) nil (25934 7257 132638 822000) 0 nil])
([nil nil ((12046 . 12048) (t 25934 7257 162941 898000)) nil (25934 7284 930330 51000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12046) (undo-tree-id7577 . -1) (#(" " 0 1 (fontified t)) . -12047) (undo-tree-id7578 . -1) 12048) nil (25934 7284 930327 311000) 0 nil])
([nil nil ((12078 . 12084)) nil (25934 7284 930321 862000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -12080) (undo-tree-id7573 . -1) (#("t" 0 1 (fontified t)) . -12081) (undo-tree-id7574 . -1) (#("t" 0 1 (fontified t)) . -12082) (undo-tree-id7575 . -1) (#("o" 0 1 (fontified t)) . -12083) (undo-tree-id7576 . -1) 12084) nil (25934 7284 930319 76000) 0 nil])
([nil nil ((12080 . 12086)) nil (25934 7284 930308 80000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -12083) (undo-tree-id7570 . -1) (#("c" 0 1 (fontified t)) . -12084) (undo-tree-id7571 . -1) (#("e" 0 1 (fontified t)) . -12085) (undo-tree-id7572 . -1) 12086) nil (25934 7284 930304 90000) 0 nil])
([nil nil ((12083 . 12098)) nil (25934 7284 930279 476000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12078) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (#(" " 0 1 (fontified t)) . -12079) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (#("d" 0 1 (fontified t)) . -12080) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (#("e" 0 1 (fontified nil)) . -12081) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (#("v" 0 1 (fontified nil)) . -12082) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (#("i" 0 1 (fontified nil)) . -12083) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (#("c" 0 1 (fontified nil)) . -12084) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (#("e" 0 1 (fontified nil)) . -12085) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (#("=" 0 1 (face font-lock-operator-face fontified nil)) . -12086) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12087) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12088) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12089) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12090) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (#("." 0 1 (fontified t)) . -12091) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (#("d" 0 1 (fontified nil)) . -12092) (undo-tree-id7949 . -1) (#("e" 0 1 (fontified t)) . -12093) (undo-tree-id7950 . -1) (#("v" 0 1 (fontified t)) . -12094) (undo-tree-id7951 . -1) (#("i" 0 1 (fontified t)) . -12095) (undo-tree-id7952 . -1) (#("c" 0 1 (fontified t)) . -12096) (undo-tree-id7953 . -1) (#("e" 0 1 (fontified t)) . -12097) (undo-tree-id7954 . -1) 12098 (t 25934 7284 965458 4000)) nil (25934 7307 498464 708000) 0 nil])
([nil nil ((apply 6 2942 3070 undo--wrap-and-run-primitive-undo 2942 3070 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3050) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3004) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2958) 2942))) nil (25934 7418 419596 939000) 0 nil])
([nil nil ((apply 2 3140 3173 undo--wrap-and-run-primitive-undo 3140 3173 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3156) 3140))) nil (25934 7418 419591 91000) 0 nil])
([nil nil ((3086 . 3087) (t 25934 7418 445745 396000)) nil (25934 7486 366541 50000) 0 nil])
([nil nil ((3087 . 3090)) nil (25934 7486 366539 151000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3089) (undo-tree-id8011 . -1) 3090) nil (25934 7486 366536 782000) 0 nil])
([nil nil ((3089 . 3098)) nil (25934 7486 366531 622000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3097) (undo-tree-id8010 . -1) 3098) nil (25934 7486 366529 120000) 0 nil])
([nil nil ((3097 . 3099) (#("(" 0 1 (fontified nil)) . -3097) (3097 . 3098)) nil (25934 7486 366522 985000) 0 nil])
([nil nil ((3098 . 3102)) nil (25934 7486 366519 931000) 0 nil])
([nil nil ((3102 . 3103)) nil (25934 7486 366517 483000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3098) (undo-tree-id8005 . -1) (#("e" 0 1 (fontified t)) . -3099) (undo-tree-id8006 . -1) (#("f" 0 1 (fontified t)) . -3100) (undo-tree-id8007 . -1) (#("l" 0 1 (fontified t)) . -3101) (undo-tree-id8008 . -1) (#("?" 0 1 (fontified t)) . -3102) (undo-tree-id8009 . -1) 3103) nil (25934 7486 366511 948000) 0 nil])
([nil nil ((3099 . 3106) (3098 . 3100) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3098) (3098 . 3099)) nil (25934 7486 366492 564000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -3105) (undo-tree-id8004 . -1) 3106) nil (25934 7486 366490 272000) 0 nil])
([nil nil ((3111 . 3112) (3110 . 3112) (#("[" 0 1 (fontified nil)) . -3110) (3105 . 3111)) nil (25934 7486 366486 941000) 0 nil])
([nil nil ((3112 . 3115)) nil (25934 7486 366484 812000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3113) (undo-tree-id8002 . -1) (#("p" 0 1 (fontified t)) . -3114) (undo-tree-id8003 . -1) 3115) nil (25934 7486 366483 87000) 0 nil])
([nil nil ((3113 . 3116)) nil (25934 7486 366478 656000) 0 nil])
([nil nil ((3086 . 3088)) nil (25934 7486 366477 551000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3087) (undo-tree-id8001 . -1) 3088) nil (25934 7486 366475 966000) 0 nil])
([nil nil ((3087 . 3095)) nil (25934 7486 366472 537000) 0 nil])
([nil nil ((3128 . 3145)) nil (25934 7486 366471 285000) 0 nil])
([nil nil ((3071 . 3087) (#("                " 0 16 (fontified nil)) . 3070) (undo-tree-id7955 . -16) (undo-tree-id7956 . -16) (undo-tree-id7957 . -16) (undo-tree-id7958 . -16) (undo-tree-id7959 . -16) (undo-tree-id7960 . -16) (undo-tree-id7961 . -16) (undo-tree-id7962 . -16) (undo-tree-id7963 . -16) (undo-tree-id7964 . -16) (undo-tree-id7965 . -16) (undo-tree-id7966 . -16) (undo-tree-id7967 . -16) (undo-tree-id7968 . -16) (undo-tree-id7969 . -16) (undo-tree-id7970 . -16) (undo-tree-id7971 . -16) (undo-tree-id7972 . -16) (undo-tree-id7973 . -16) (undo-tree-id7974 . -16) (undo-tree-id7975 . -16) (undo-tree-id7976 . -16) (undo-tree-id7977 . -16) (undo-tree-id7978 . -16) (undo-tree-id7979 . -16) (undo-tree-id7980 . -16) (undo-tree-id7981 . -16) (undo-tree-id7982 . -16) (undo-tree-id7983 . -16) (undo-tree-id7984 . -16) (undo-tree-id7985 . -16) (undo-tree-id7986 . -16) (undo-tree-id7987 . -16) (undo-tree-id7988 . -16) (undo-tree-id7989 . -16) (undo-tree-id7990 . -16) (undo-tree-id7991 . -16) (undo-tree-id7992 . -16) (undo-tree-id7993 . -16) (undo-tree-id7994 . -16) (undo-tree-id7995 . -16) (undo-tree-id7996 . -16) (undo-tree-id7997 . -16) (undo-tree-id7998 . -16) (undo-tree-id7999 . -16) (undo-tree-id8000 . -16) (3086 . 3087)) nil (25934 7486 366463 929000) 0 nil])
([nil nil ((3128 . 3149) (t 25934 7486 392442 226000)) nil (25934 7511 19070 870000) 0 nil])
([nil nil ((3149 . 3160)) nil (25934 7511 19069 775000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3159) (undo-tree-id8012 . -1) 3160) nil (25934 7511 19068 7000) 0 nil])
([nil nil ((3159 . 3160)) nil (25934 7511 19058 978000) 0 nil])
([nil nil ((3160 . 3166)) nil (25934 7511 19053 996000) 0 nil])
([nil nil ((3109 . 3112) (t 25934 7511 46006 470000)) nil (25934 7538 284732 552000) 0 nil])
([nil nil ((3129 . 3131) (t 25934 7538 307999 457000)) nil (25934 7544 899841 317000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3109) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (#("," 0 1 (fontified t)) . -3110) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (#(" " 0 1 (fontified t)) . -3111) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) 3112) nil (25934 7544 899817 578000) 0 nil])
([nil nil ((3169 . 3178) (t 25934 7544 932519 470000)) nil (25934 7574 107089 560000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3177) (undo-tree-id8394 . -1) 3178) nil (25934 7574 107087 322000) 0 nil])
([nil nil ((3177 . 3179)) nil (25934 7574 107083 43000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3178) (undo-tree-id8393 . -1) 3179) nil (25934 7574 107080 597000) 0 nil])
([nil nil ((3178 . 3179)) nil (25934 7574 107077 267000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3178) (undo-tree-id8392 . -1) 3179) nil (25934 7574 107075 195000) 0 nil])
([nil nil ((3178 . 3181)) nil (25934 7574 107071 162000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3179) (undo-tree-id8390 . -1) (#(")" 0 1 (face font-lock-string-face fontified t)) . -3180) (undo-tree-id8391 . -1) 3181) nil (25934 7574 107068 747000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3181) (3180 . 3181) (3179 . 3181) (#("(" 0 1 (fontified nil)) . -3179) (3179 . 3180)) nil (25934 7574 107048 243000) 0 nil])
([nil nil ((3180 . 3181)) nil (25934 7574 107037 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1874 . 1875) (nil fontified nil 1874 . 1875) (nil fontified nil 1873 . 1874) (nil fontified nil 1866 . 1873) (nil fontified nil 1862 . 1866) (nil fontified nil 1861 . 1862) (nil fontified nil 1847 . 1861) (nil fontified nil 1843 . 1847) (nil fontified nil 1842 . 1843) (nil fontified nil 1835 . 1842) (nil fontified nil 1834 . 1835) (nil fontified nil 1829 . 1834) (nil fontified nil 1827 . 1829) (nil fontified nil 1822 . 1827) (nil fontified nil 1821 . 1822) (nil fontified nil 1820 . 1821) (nil fontified nil 1814 . 1820) (nil fontified nil 1813 . 1814) (nil fontified nil 1808 . 1813) (nil fontified nil 1807 . 1808) (nil fontified nil 1804 . 1807) (nil fontified nil 1800 . 1804) (nil fontified nil 1798 . 1800) (nil fontified nil 1797 . 1798) (nil fontified nil 1792 . 1797) (nil fontified nil 1791 . 1792) (nil fontified nil 1788 . 1791) (nil fontified nil 1784 . 1788) (nil fontified nil 1783 . 1784) (nil fontified nil 1773 . 1783) (nil fontified nil 1772 . 1773) (nil fontified nil 1771 . 1772) (nil fontified nil 1768 . 1771) (nil fontified nil 1752 . 1768) (1752 . 1875) (t 25934 7574 154954 978000)) nil (25934 7600 36789 28000) 0 nil])
([nil nil ((apply -2 1875 2065 undo--wrap-and-run-primitive-undo 1875 2065 ((1891 . 1893) 1998))) nil (25934 7600 36782 333000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1821) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (#("i" 0 1 (fontified t)) . -1822) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (#("_" 0 1 (fontified t)) . -1823) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (#("p" 0 1 (fontified t)) . -1824) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (#("o" 0 1 (fontified t)) . -1825) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (#("p" 0 1 (fontified t)) . -1826) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1827) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1828) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (#("j" 0 1 (fontified t)) . -1829) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (#("_" 0 1 (fontified t)) . -1830) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (#("p" 0 1 (fontified t)) . -1831) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (#("o" 0 1 (fontified t)) . -1832) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (#("p" 0 1 (fontified t)) . -1833) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1834) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) 1835) nil (25934 7600 36652 5000) 0 nil])
([nil nil ((1821 . 1826)) nil (25934 7600 32454 994000) 0 nil])
([nil nil ((apply -4 2174 2287 undo--wrap-and-run-primitive-undo 2174 2287 ((2224 . 2226) (2182 . 2184) 2282))) nil (25934 7613 94530 218000) 0 nil])
([nil nil ((2286 . 2294)) nil (25934 7613 94524 421000) 0 nil])
([nil nil ((apply -12 14414 14729 undo--wrap-and-run-primitive-undo 14414 14729 ((14645 . 14647) (14588 . 14590) (14530 . 14532) (14488 . 14490) (14446 . 14448) (14422 . 14424) 14716))) nil (25934 7638 59526 258000) 0 nil])
([nil nil ((14728 . 14736) (t 25934 7638 88909 141000)) nil (25934 7665 970792 986000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 3405) (3404 . 3405) (3403 . 3405) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3403) (3403 . 3404) (t 25934 7665 999704 740000)) nil (25934 7744 757960 77000) 0 nil])
([nil nil ((3404 . 3407)) nil (25934 7744 757958 134000) 0 nil])
([nil nil ((3408 . 3410)) nil (25934 7744 757956 896000) 0 nil])
([nil nil ((apply -2 3199 3330 undo--wrap-and-run-primitive-undo 3199 3330 ((3215 . 3217) 3199))) nil (25934 7744 757951 919000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 3186) (3185 . 3186) (3184 . 3186) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3184) (3184 . 3185) (t 25934 7744 784009 429000)) nil (25934 7752 542777 759000) 0 nil])
([nil nil ((3185 . 3190)) nil (25934 7752 542776 260000) 0 nil])
([nil nil ((3191 . 3193)) nil (25934 7752 542771 165000) 0 nil])
([nil nil ((apply -2 3008 3118 undo--wrap-and-run-primitive-undo 3008 3118 ((3024 . 3026) 3008))) nil (25934 7782 99657 263000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3372) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) 3373 (t 25934 7782 152128 258000)) nil (25934 7826 906936 423000) 0 nil])
([nil nil ((3372 . 3373)) nil (25934 7826 906852 915000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3379) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) 3380) nil (25934 7826 906848 949000) 0 nil])
([nil nil ((3379 . 3380)) nil (25934 7826 906728 682000) 0 nil])
([nil nil ((apply 12 14434 14736 undo--wrap-and-run-primitive-undo 14434 14736 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14655) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14600) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14544) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14504) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14464) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14442) 14748))) nil (25934 7892 380692 839000) 0 nil])
([nil nil ((14736 . 14756) (#("        " 0 8 (fontified t)) . 14736) (undo-tree-id11953 . -8) (undo-tree-id11954 . -8) (undo-tree-id11955 . -8) (undo-tree-id11956 . -8) (undo-tree-id11957 . -8) (undo-tree-id11958 . -8) (undo-tree-id11959 . -8) (undo-tree-id11960 . -8) (undo-tree-id11961 . -8) (undo-tree-id11962 . -8) (undo-tree-id11963 . -8) (undo-tree-id11964 . -8) (undo-tree-id11965 . -8) (undo-tree-id11966 . -8) (undo-tree-id11967 . -8) (undo-tree-id11968 . -8) (undo-tree-id11969 . -8) (undo-tree-id11970 . -8) (t 25934 7892 421990 135000)) nil (25934 7893 669897 367000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14752) (undo-tree-id11932 . -4) (undo-tree-id11933 . -4) (undo-tree-id11934 . -4) (undo-tree-id11935 . -4) (undo-tree-id11936 . -4) (undo-tree-id11937 . -4) (undo-tree-id11938 . -4) (undo-tree-id11939 . -4) (undo-tree-id11940 . -4) (undo-tree-id11941 . -4) (undo-tree-id11942 . -4) (undo-tree-id11943 . -4) (undo-tree-id11944 . -4) (undo-tree-id11945 . -4) (undo-tree-id11946 . -4) (undo-tree-id11947 . -4) (undo-tree-id11948 . -4) (undo-tree-id11949 . -4) (undo-tree-id11950 . -4) (undo-tree-id11951 . -4) (undo-tree-id11952 . -4) 14756) nil (25934 7893 669842 328000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14748) (undo-tree-id11855 . -4) (undo-tree-id11856 . -4) (undo-tree-id11857 . -4) (undo-tree-id11858 . -4) (undo-tree-id11859 . -4) (undo-tree-id11860 . -4) (undo-tree-id11861 . -4) (undo-tree-id11862 . -4) (undo-tree-id11863 . -4) (undo-tree-id11864 . -4) (undo-tree-id11865 . -4) (undo-tree-id11866 . -4) (undo-tree-id11867 . -4) (undo-tree-id11868 . -4) (undo-tree-id11869 . -4) (undo-tree-id11870 . -4) (undo-tree-id11871 . -4) (undo-tree-id11872 . -4) (undo-tree-id11873 . -4) (undo-tree-id11874 . -4) (undo-tree-id11875 . -4) (undo-tree-id11876 . -4) (undo-tree-id11877 . -4) (undo-tree-id11878 . -4) (undo-tree-id11879 . -4) (undo-tree-id11880 . -4) (undo-tree-id11881 . -4) (undo-tree-id11882 . -4) (undo-tree-id11883 . -4) (undo-tree-id11884 . -4) (undo-tree-id11885 . -4) (undo-tree-id11886 . -4) (undo-tree-id11887 . -4) (undo-tree-id11888 . -4) (undo-tree-id11889 . -4) (undo-tree-id11890 . -4) (undo-tree-id11891 . -4) (undo-tree-id11892 . -4) (undo-tree-id11893 . -4) (undo-tree-id11894 . -4) (undo-tree-id11895 . -4) (undo-tree-id11896 . -4) (undo-tree-id11897 . -4) (undo-tree-id11898 . -4) (undo-tree-id11899 . -4) (undo-tree-id11900 . -4) (undo-tree-id11901 . -4) (undo-tree-id11902 . -4) (undo-tree-id11903 . -4) (undo-tree-id11904 . -4) (undo-tree-id11905 . -4) (undo-tree-id11906 . -4) (undo-tree-id11907 . -4) (undo-tree-id11908 . -4) (undo-tree-id11909 . -4) (undo-tree-id11910 . -4) (undo-tree-id11911 . -4) (undo-tree-id11912 . -4) (undo-tree-id11913 . -4) (undo-tree-id11914 . -4) (undo-tree-id11915 . -4) (undo-tree-id11916 . -4) (undo-tree-id11917 . -4) (undo-tree-id11918 . -4) (undo-tree-id11919 . -4) (undo-tree-id11920 . -4) (undo-tree-id11921 . -4) (undo-tree-id11922 . -4) (undo-tree-id11923 . -4) (undo-tree-id11924 . -4) (undo-tree-id11925 . -4) (undo-tree-id11926 . -4) (undo-tree-id11927 . -4) (undo-tree-id11928 . -4) (undo-tree-id11929 . -4) (undo-tree-id11930 . -4) (undo-tree-id11931 . -4) 14752) nil (25934 7893 669770 855000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14744) (undo-tree-id11752 . -4) (undo-tree-id11753 . -4) (undo-tree-id11754 . -4) (undo-tree-id11755 . -4) (undo-tree-id11756 . -4) (undo-tree-id11757 . -4) (undo-tree-id11758 . -4) (undo-tree-id11759 . -4) (undo-tree-id11760 . -4) (undo-tree-id11761 . -4) (undo-tree-id11762 . -4) (undo-tree-id11763 . -4) (undo-tree-id11764 . -4) (undo-tree-id11765 . -4) (undo-tree-id11766 . -4) (undo-tree-id11767 . -4) (undo-tree-id11768 . -4) (undo-tree-id11769 . -4) (undo-tree-id11770 . -4) (undo-tree-id11771 . -4) (undo-tree-id11772 . -4) (undo-tree-id11773 . -4) (undo-tree-id11774 . -4) (undo-tree-id11775 . -4) (undo-tree-id11776 . -4) (undo-tree-id11777 . -4) (undo-tree-id11778 . -4) (undo-tree-id11779 . -4) (undo-tree-id11780 . -4) (undo-tree-id11781 . -4) (undo-tree-id11782 . -4) (undo-tree-id11783 . -4) (undo-tree-id11784 . -4) (undo-tree-id11785 . -4) (undo-tree-id11786 . -4) (undo-tree-id11787 . -4) (undo-tree-id11788 . -4) (undo-tree-id11789 . -4) (undo-tree-id11790 . -4) (undo-tree-id11791 . -4) (undo-tree-id11792 . -4) (undo-tree-id11793 . -4) (undo-tree-id11794 . -4) (undo-tree-id11795 . -4) (undo-tree-id11796 . -4) (undo-tree-id11797 . -4) (undo-tree-id11798 . -4) (undo-tree-id11799 . -4) (undo-tree-id11800 . -4) (undo-tree-id11801 . -4) (undo-tree-id11802 . -4) (undo-tree-id11803 . -4) (undo-tree-id11804 . -4) (undo-tree-id11805 . -4) (undo-tree-id11806 . -4) (undo-tree-id11807 . -4) (undo-tree-id11808 . -4) (undo-tree-id11809 . -4) (undo-tree-id11810 . -4) (undo-tree-id11811 . -4) (undo-tree-id11812 . -4) (undo-tree-id11813 . -4) (undo-tree-id11814 . -4) (undo-tree-id11815 . -4) (undo-tree-id11816 . -4) (undo-tree-id11817 . -4) (undo-tree-id11818 . -4) (undo-tree-id11819 . -4) (undo-tree-id11820 . -4) (undo-tree-id11821 . -4) (undo-tree-id11822 . -4) (undo-tree-id11823 . -4) (undo-tree-id11824 . -4) (undo-tree-id11825 . -4) (undo-tree-id11826 . -4) (undo-tree-id11827 . -4) (undo-tree-id11828 . -4) (undo-tree-id11829 . -4) (undo-tree-id11830 . -4) (undo-tree-id11831 . -4) (undo-tree-id11832 . -4) (undo-tree-id11833 . -4) (undo-tree-id11834 . -4) (undo-tree-id11835 . -4) (undo-tree-id11836 . -4) (undo-tree-id11837 . -4) (undo-tree-id11838 . -4) (undo-tree-id11839 . -4) (undo-tree-id11840 . -4) (undo-tree-id11841 . -4) (undo-tree-id11842 . -4) (undo-tree-id11843 . -4) (undo-tree-id11844 . -4) (undo-tree-id11845 . -4) (undo-tree-id11846 . -4) (undo-tree-id11847 . -4) (undo-tree-id11848 . -4) (undo-tree-id11849 . -4) (undo-tree-id11850 . -4) (undo-tree-id11851 . -4) (undo-tree-id11852 . -4) (undo-tree-id11853 . -4) (undo-tree-id11854 . -4) 14748) nil (25934 7893 669648 339000) 0 nil])
([nil nil ((#("                Wij = nn.Linear(self.Na[i_pop], self.Na[j_pop], bias=False, dtype=self.FLOAT, device=self.device)
" 0 16 (fontified t) 16 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 36 (face font-lock-keyword-face fontified t) 36 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-2-face) fontified t) 46 48 (fontified t) 48 52 (face font-lock-keyword-face fontified t) 52 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-2-face) fontified t) 56 61 (fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 68 (fontified t) 68 69 (face font-lock-operator-face fontified t) 69 74 (face font-lock-constant-face fontified t) 74 81 (fontified t) 81 82 (face font-lock-operator-face fontified t) 82 86 (face font-lock-keyword-face fontified t) 86 100 (fontified t) 100 101 (face font-lock-operator-face fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 112 (fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 114 (rear-nonsticky t fontified t)) . -1752) (undo-tree-id11971 . -74) (undo-tree-id11972 . -74) (undo-tree-id11973 . -74) (undo-tree-id11974 . -64) (undo-tree-id11975 . -64) (undo-tree-id11976 . -64) (undo-tree-id11977 . -64) (undo-tree-id11978 . -64) (undo-tree-id11979 . -64) (undo-tree-id11980 . -64) (undo-tree-id11981 . -64) (undo-tree-id11982 . -64) (undo-tree-id11983 . -64) (undo-tree-id11984 . -64) (undo-tree-id11985 . -64) (undo-tree-id11986 . -64) (undo-tree-id11987 . -64) (undo-tree-id11988 . -64) (undo-tree-id11989 . -64) (undo-tree-id11990 . -64) (undo-tree-id11991 . -64) (undo-tree-id11992 . -64) (undo-tree-id11993 . -64) (undo-tree-id11994 . -64) (undo-tree-id11995 . -64) (undo-tree-id11996 . -64) (undo-tree-id11997 . -64) (undo-tree-id11998 . -64) (undo-tree-id11999 . -64) (undo-tree-id12000 . -64) (undo-tree-id12001 . -64) (undo-tree-id12002 . -64) (undo-tree-id12003 . -64) (undo-tree-id12004 . -64) (undo-tree-id12005 . -64) (undo-tree-id12006 . -64) (undo-tree-id12007 . -64) (undo-tree-id12008 . -64) (undo-tree-id12009 . -64) (undo-tree-id12010 . -64) (undo-tree-id12011 . -64) (undo-tree-id12012 . -64) (undo-tree-id12013 . -64) (undo-tree-id12014 . -64) (undo-tree-id12015 . -64) (undo-tree-id12016 . -64) (undo-tree-id12017 . -64) (undo-tree-id12018 . -64) (undo-tree-id12019 . -64) (undo-tree-id12020 . -114) (undo-tree-id12021 . -114) (undo-tree-id12022 . -114) (undo-tree-id12023 . -114) (undo-tree-id12024 . -114) (undo-tree-id12025 . -114) (undo-tree-id12026 . -114) (undo-tree-id12027 . -114) (undo-tree-id12028 . -114) (undo-tree-id12029 . -114) (undo-tree-id12030 . -114) (undo-tree-id12031 . -114) (undo-tree-id12032 . -114) (undo-tree-id12033 . -114) (undo-tree-id12034 . -114) (undo-tree-id12035 . -114) (undo-tree-id12036 . -114) (undo-tree-id12037 . -114) (undo-tree-id12038 . -114) (undo-tree-id12039 . -114) (undo-tree-id12040 . -114) (undo-tree-id12041 . -114) (undo-tree-id12042 . -114) (undo-tree-id12043 . -114) (undo-tree-id12044 . -114) (undo-tree-id12045 . -114) (undo-tree-id12046 . -114) (undo-tree-id12047 . -114) (undo-tree-id12048 . -114) (undo-tree-id12049 . -114) (undo-tree-id12050 . -114) (undo-tree-id12051 . -114) (undo-tree-id12052 . -114) (undo-tree-id12053 . -114) 1866 (t 25934 7893 713956 702000)) nil (25934 7898 557876 978000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1768) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1768)) nil (25934 7898 557675 185000) 0 nil])
([nil nil ((apply 6 1994 2164 undo--wrap-and-run-primitive-undo 1994 2164 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2104) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2064) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2002) 2170))) nil (25934 7903 943437 99000) 0 nil])
([nil nil ((2172 . 2176) 2164) nil (25934 7903 943431 301000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2172) (undo-tree-id12054 . -4) (undo-tree-id12055 . -4) (undo-tree-id12056 . -4) (undo-tree-id12057 . -4) (undo-tree-id12058 . -4) (undo-tree-id12059 . -4) (undo-tree-id12060 . -4) (undo-tree-id12061 . -4) (undo-tree-id12062 . -4) (undo-tree-id12063 . -4) (undo-tree-id12064 . -4) (undo-tree-id12065 . -4) (undo-tree-id12066 . -4) (undo-tree-id12067 . -4) (undo-tree-id12068 . -4) (undo-tree-id12069 . -4) (undo-tree-id12070 . -4) (undo-tree-id12071 . -4) (undo-tree-id12072 . -4) (undo-tree-id12073 . -4) (undo-tree-id12074 . -4) (undo-tree-id12075 . -4) (undo-tree-id12076 . -4) (undo-tree-id12077 . -4) (undo-tree-id12078 . -4) (undo-tree-id12079 . -4) (undo-tree-id12080 . -4) (undo-tree-id12081 . -4) (undo-tree-id12082 . -4) (undo-tree-id12083 . -4) (undo-tree-id12084 . -4) (undo-tree-id12085 . -4) (undo-tree-id12086 . -4) (undo-tree-id12087 . -4) (undo-tree-id12088 . -4) (undo-tree-id12089 . -4) (undo-tree-id12090 . -4) (undo-tree-id12091 . -4) (undo-tree-id12092 . -4) (undo-tree-id12093 . -4) (undo-tree-id12094 . -4) (undo-tree-id12095 . -4) (undo-tree-id12096 . -4) (undo-tree-id12097 . -4) (undo-tree-id12098 . -4) (undo-tree-id12099 . -4) (undo-tree-id12100 . -4) (undo-tree-id12101 . -4) (undo-tree-id12102 . -4) (undo-tree-id12103 . -4) (undo-tree-id12104 . -4) (undo-tree-id12105 . -4) (undo-tree-id12106 . -4) (undo-tree-id12107 . -4) (undo-tree-id12108 . -4) (undo-tree-id12109 . -4) (undo-tree-id12110 . -4) (undo-tree-id12111 . -4) (undo-tree-id12112 . -4) (undo-tree-id12113 . -4) (undo-tree-id12114 . -4) (undo-tree-id12115 . -4) (undo-tree-id12116 . -4) (undo-tree-id12117 . -4) (undo-tree-id12118 . -4) (undo-tree-id12119 . -4) (undo-tree-id12120 . -4) (undo-tree-id12121 . -4) (undo-tree-id12122 . -4) (undo-tree-id12123 . -4) (undo-tree-id12124 . -4) (undo-tree-id12125 . -4) (undo-tree-id12126 . -4) (undo-tree-id12127 . -4) (undo-tree-id12128 . -4) (undo-tree-id12129 . -4) (undo-tree-id12130 . -4) (undo-tree-id12131 . -4) (undo-tree-id12132 . -4) (undo-tree-id12133 . -4) (undo-tree-id12134 . -4) (undo-tree-id12135 . -4) (undo-tree-id12136 . -4) (undo-tree-id12137 . -4) (undo-tree-id12138 . -4) (undo-tree-id12139 . -4) (undo-tree-id12140 . -4) (undo-tree-id12141 . -4) (undo-tree-id12142 . -4) (undo-tree-id12143 . -4) (undo-tree-id12144 . -4) (undo-tree-id12145 . -4) (undo-tree-id12146 . -4) (undo-tree-id12147 . -4) (undo-tree-id12148 . -4) (undo-tree-id12149 . -4) (undo-tree-id12150 . -4) (undo-tree-id12151 . -4) (undo-tree-id12152 . -4) (undo-tree-id12153 . -4) (undo-tree-id12154 . -4) (undo-tree-id12155 . -4) (undo-tree-id12156 . -4) (undo-tree-id12157 . -4) (undo-tree-id12158 . -4) (undo-tree-id12159 . -4) (undo-tree-id12160 . -4) (undo-tree-id12161 . -4) (undo-tree-id12162 . -4) (undo-tree-id12163 . -4) (undo-tree-id12164 . -4) (undo-tree-id12165 . -4) (undo-tree-id12166 . -4) (undo-tree-id12167 . -4) (undo-tree-id12168 . -4) (undo-tree-id12169 . -4) (undo-tree-id12170 . -4) (undo-tree-id12171 . -4) (undo-tree-id12172 . -4) (undo-tree-id12173 . -4) (undo-tree-id12174 . -4) (undo-tree-id12175 . -4) (undo-tree-id12176 . -4) (undo-tree-id12177 . -4) (undo-tree-id12178 . -4) (undo-tree-id12179 . -4) (undo-tree-id12180 . -4) (undo-tree-id12181 . -4) (undo-tree-id12182 . -4) (undo-tree-id12183 . -4) (undo-tree-id12184 . -4) (undo-tree-id12185 . -4) (undo-tree-id12186 . -4) (undo-tree-id12187 . -4) (undo-tree-id12188 . -4) (undo-tree-id12189 . -4) (undo-tree-id12190 . -4) (undo-tree-id12191 . -4) (undo-tree-id12192 . -4) (undo-tree-id12193 . -4) (undo-tree-id12194 . -4) (undo-tree-id12195 . -4) (undo-tree-id12196 . -4) (undo-tree-id12197 . -4) (undo-tree-id12198 . -4) (undo-tree-id12199 . -4) (undo-tree-id12200 . -4) (undo-tree-id12201 . -4) (undo-tree-id12202 . -4) (undo-tree-id12203 . -4) 2176 (t 25934 7903 973718 92000)) nil (25934 7905 461448 462000) 0 nil])
([nil nil ((2172 . 2174) (t 25934 7905 489686 866000)) nil (25934 7920 159232 500000) 0 nil])
([nil nil ((#("q" 0 1 (fontified nil)) . -2172) (undo-tree-id12204 . -1) (#("q" 0 1 (fontified t)) . -2173) (undo-tree-id12205 . -1) 2174) nil (25934 7920 159227 891000) 0 nil])
([nil nil ((2002 . 2004)) nil (25934 7920 159198 937000) 0 nil])
([nil nil ((apply 2 2888 2933 undo--wrap-and-run-primitive-undo 2888 2933 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2904) 2935))) nil (25934 7938 815501 647000) 0 nil])
([nil nil ((apply -2 2888 2952 undo--wrap-and-run-primitive-undo 2888 2952 ((2904 . 2906) 2888))) nil (25934 7981 975291 885000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2870) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) 2871 (t 25934 7982 13296 673000)) nil (25934 7984 453519 907000) 0 nil])
([nil nil ((3088 . 3104) (t 25934 7984 493319 176000)) nil (25934 7987 130246 793000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3438) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) 3439 (t 25934 7987 157345 488000)) nil (25934 7999 60214 171000) 0 nil])
([nil nil ((5759 . 5771) (t 25934 7999 113491 129000)) nil (25934 8043 414398 263000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5767) (undo-tree-id12279 . -4) 5771) nil (25934 8043 414390 439000) 0 nil])
([nil nil ((6771 . 6795) (#("                " 0 16 (fontified t)) . 6771) (t 25934 8043 454394 842000)) nil (25934 8385 727699 294000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6791) (undo-tree-id12280 . -4) (undo-tree-id12281 . -4) (undo-tree-id12282 . -4) (undo-tree-id12283 . -4) (undo-tree-id12284 . -4) (undo-tree-id12285 . -4) (undo-tree-id12286 . -4) (undo-tree-id12287 . -4) (undo-tree-id12288 . -4) (undo-tree-id12289 . -4) (undo-tree-id12290 . -4) (undo-tree-id12291 . -4) (undo-tree-id12292 . -4) (undo-tree-id12293 . -4) (undo-tree-id12294 . -4) (undo-tree-id12295 . -4) (undo-tree-id12296 . -4) (undo-tree-id12297 . -4) (undo-tree-id12298 . -4) (undo-tree-id12299 . -4) (undo-tree-id12300 . -4) (undo-tree-id12301 . -4) (undo-tree-id12302 . -4) (undo-tree-id12303 . -4) (undo-tree-id12304 . -4) (undo-tree-id12305 . -4) (undo-tree-id12306 . -4) (undo-tree-id12307 . -4) (undo-tree-id12308 . -4) (undo-tree-id12309 . -4) (undo-tree-id12310 . -4) (undo-tree-id12311 . -4) (undo-tree-id12312 . -4) (undo-tree-id12313 . -4) (undo-tree-id12314 . -4) (undo-tree-id12315 . -4) (undo-tree-id12316 . -4) (undo-tree-id12317 . -4) (undo-tree-id12318 . -4) (undo-tree-id12319 . -4) (undo-tree-id12320 . -4) (undo-tree-id12321 . -4) (undo-tree-id12322 . -4) (undo-tree-id12323 . -4) (undo-tree-id12324 . -4) (undo-tree-id12325 . -4) (undo-tree-id12326 . -4) (undo-tree-id12327 . -4) (undo-tree-id12328 . -4) (undo-tree-id12329 . -4) (undo-tree-id12330 . -4) (undo-tree-id12331 . -4) (undo-tree-id12332 . -4) (undo-tree-id12333 . -4) (undo-tree-id12334 . -4) (undo-tree-id12335 . -4) (undo-tree-id12336 . -4) (undo-tree-id12337 . -4) (undo-tree-id12338 . -4) (undo-tree-id12339 . -4) (undo-tree-id12340 . -4) (undo-tree-id12341 . -4) (undo-tree-id12342 . -4) (undo-tree-id12343 . -4) (undo-tree-id12344 . -4) (undo-tree-id12345 . -4) (undo-tree-id12346 . -4) (undo-tree-id12347 . -4) (undo-tree-id12348 . -4) (undo-tree-id12349 . -4) (undo-tree-id12350 . -4) (undo-tree-id12351 . -4) (undo-tree-id12352 . -4) (undo-tree-id12353 . -4) (undo-tree-id12354 . -4) (undo-tree-id12355 . -4) (undo-tree-id12356 . -4) (undo-tree-id12357 . -4) (undo-tree-id12358 . -4) 6795) nil (25934 8385 727690 808000) 0 nil])
([nil nil ((5520 . 5528) (t 25934 8385 773446 477000)) nil (25934 8551 899312 855000) 0 nil])
([nil nil ((5497 . 5505)) nil (25934 8551 899310 614000) 0 nil])
([nil nil ((apply -4 4303 4409 undo--wrap-and-run-primitive-undo 4303 4409 ((4353 . 4355) (4311 . 4313) 4303))) nil (25934 8551 899308 390000) 0 nil])
([nil nil ((apply -2 5189 5293 undo--wrap-and-run-primitive-undo 5189 5293 ((5197 . 5199) 5238))) nil (25934 8551 899305 207000) 0 nil])
([nil nil ((apply -2 5293 5356 undo--wrap-and-run-primitive-undo 5293 5356 ((5301 . 5303) 5345))) nil (25934 8551 899302 751000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5301) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5301)) nil (25934 8551 899298 825000) 0 nil])
([nil nil ((apply -2 5293 5356 undo--wrap-and-run-primitive-undo 5293 5356 ((5301 . 5303) 5345))) nil (25934 8551 899273 977000) 0 nil])
([nil nil ((apply -2 5356 5380 undo--wrap-and-run-primitive-undo 5356 5380 ((5364 . 5366) 5377))) nil (25934 8551 899270 977000) 0 nil])
([nil nil ((5348 . 5356) (#("        " 0 8 (fontified nil)) . 5347) (undo-tree-id12617 . -8) (5355 . 5356)) nil (25934 8551 899268 360000) 0 nil])
([nil nil ((5356 . 5373)) nil (25934 8551 899259 605000) 0 nil])
([nil nil ((#("        return net_inputs
" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 25 (fontified t) 25 26 (fontified t)) . 5348) (undo-tree-id12359 . -26) (undo-tree-id12360 . -26) (undo-tree-id12361 . -15) (undo-tree-id12362 . -14) (undo-tree-id12363 . -15) (undo-tree-id12364 . -15) (undo-tree-id12365 . -15) (undo-tree-id12366 . -15) (undo-tree-id12367 . -15) (undo-tree-id12368 . -15) (undo-tree-id12369 . -15) (undo-tree-id12370 . -15) (undo-tree-id12371 . -15) (undo-tree-id12372 . -15) (undo-tree-id12373 . -15) (undo-tree-id12374 . -15) (undo-tree-id12375 . -15) (undo-tree-id12376 . -15) (undo-tree-id12377 . -16) (undo-tree-id12378 . -15) (undo-tree-id12379 . -17) (undo-tree-id12380 . -15) (undo-tree-id12381 . -18) (undo-tree-id12382 . -15) (undo-tree-id12383 . -18) (undo-tree-id12384 . -18) (undo-tree-id12385 . -18) (undo-tree-id12386 . -18) (undo-tree-id12387 . -18) (undo-tree-id12388 . -18) (undo-tree-id12389 . -18) (undo-tree-id12390 . -18) (undo-tree-id12391 . -18) (undo-tree-id12392 . -18) (undo-tree-id12393 . -18) (undo-tree-id12394 . -18) (undo-tree-id12395 . -18) (undo-tree-id12396 . -18) (undo-tree-id12397 . -18) (undo-tree-id12398 . -18) (undo-tree-id12399 . -18) (undo-tree-id12400 . -18) (undo-tree-id12401 . -18) (undo-tree-id12402 . -18) (undo-tree-id12403 . -18) (undo-tree-id12404 . -18) (undo-tree-id12405 . -19) (undo-tree-id12406 . -18) (undo-tree-id12407 . -19) (undo-tree-id12408 . -19) (undo-tree-id12409 . -19) (undo-tree-id12410 . -19) (undo-tree-id12411 . -19) (undo-tree-id12412 . -19) (undo-tree-id12413 . -19) (undo-tree-id12414 . -19) (undo-tree-id12415 . -19) (undo-tree-id12416 . -19) (undo-tree-id12417 . -19) (undo-tree-id12418 . -19) (undo-tree-id12419 . -19) (undo-tree-id12420 . -19) (undo-tree-id12421 . -19) (undo-tree-id12422 . -19) (undo-tree-id12423 . -19) (undo-tree-id12424 . -19) (undo-tree-id12425 . -19) (undo-tree-id12426 . -19) (undo-tree-id12427 . -19) (undo-tree-id12428 . -19) (undo-tree-id12429 . -19) (undo-tree-id12430 . -19) (undo-tree-id12431 . -19) (undo-tree-id12432 . -19) (undo-tree-id12433 . -19) (undo-tree-id12434 . -19) (undo-tree-id12435 . -19) (undo-tree-id12436 . -19) (undo-tree-id12437 . -19) (undo-tree-id12438 . -19) (undo-tree-id12439 . -19) (undo-tree-id12440 . -19) (undo-tree-id12441 . -19) (undo-tree-id12442 . -19) (undo-tree-id12443 . -19) (undo-tree-id12444 . -19) (undo-tree-id12445 . -19) (undo-tree-id12446 . -19) (undo-tree-id12447 . -19) (undo-tree-id12448 . -19) (undo-tree-id12449 . -19) (undo-tree-id12450 . -20) (undo-tree-id12451 . -19) (undo-tree-id12452 . -20) (undo-tree-id12453 . -20) (undo-tree-id12454 . -20) (undo-tree-id12455 . -20) (undo-tree-id12456 . -20) (undo-tree-id12457 . -20) (undo-tree-id12458 . -20) (undo-tree-id12459 . -20) (undo-tree-id12460 . -20) (undo-tree-id12461 . -20) (undo-tree-id12462 . -20) (undo-tree-id12463 . -20) (undo-tree-id12464 . -20) (undo-tree-id12465 . -20) (undo-tree-id12466 . -20) (undo-tree-id12467 . -21) (undo-tree-id12468 . -20) (undo-tree-id12469 . -21) (undo-tree-id12470 . -21) (undo-tree-id12471 . -21) (undo-tree-id12472 . -21) (undo-tree-id12473 . -21) (undo-tree-id12474 . -21) (undo-tree-id12475 . -21) (undo-tree-id12476 . -21) (undo-tree-id12477 . -21) (undo-tree-id12478 . -21) (undo-tree-id12479 . -21) (undo-tree-id12480 . -21) (undo-tree-id12481 . -21) (undo-tree-id12482 . -21) (undo-tree-id12483 . -21) (undo-tree-id12484 . -21) (undo-tree-id12485 . -21) (undo-tree-id12486 . -21) (undo-tree-id12487 . -21) (undo-tree-id12488 . -21) (undo-tree-id12489 . -21) (undo-tree-id12490 . -21) (undo-tree-id12491 . -22) (undo-tree-id12492 . -21) (undo-tree-id12493 . -22) (undo-tree-id12494 . -22) (undo-tree-id12495 . -22) (undo-tree-id12496 . -22) (undo-tree-id12497 . -22) (undo-tree-id12498 . -22) (undo-tree-id12499 . -22) (undo-tree-id12500 . -22) (undo-tree-id12501 . -22) (undo-tree-id12502 . -22) (undo-tree-id12503 . -22) (undo-tree-id12504 . -22) (undo-tree-id12505 . -22) (undo-tree-id12506 . -22) (undo-tree-id12507 . -22) (undo-tree-id12508 . -22) (undo-tree-id12509 . -22) (undo-tree-id12510 . -22) (undo-tree-id12511 . -22) (undo-tree-id12512 . -22) (undo-tree-id12513 . -22) (undo-tree-id12514 . -22) (undo-tree-id12515 . -23) (undo-tree-id12516 . -22) (undo-tree-id12517 . -23) (undo-tree-id12518 . -23) (undo-tree-id12519 . -23) (undo-tree-id12520 . -23) (undo-tree-id12521 . -23) (undo-tree-id12522 . -23) (undo-tree-id12523 . -23) (undo-tree-id12524 . -23) (undo-tree-id12525 . -23) (undo-tree-id12526 . -23) (undo-tree-id12527 . -23) (undo-tree-id12528 . -23) (undo-tree-id12529 . -23) (undo-tree-id12530 . -23) (undo-tree-id12531 . -23) (undo-tree-id12532 . -23) (undo-tree-id12533 . -23) (undo-tree-id12534 . -23) (undo-tree-id12535 . -23) (undo-tree-id12536 . -23) (undo-tree-id12537 . -23) (undo-tree-id12538 . -23) (undo-tree-id12539 . -24) (undo-tree-id12540 . -23) (undo-tree-id12541 . -24) (undo-tree-id12542 . -24) (undo-tree-id12543 . -24) (undo-tree-id12544 . -24) (undo-tree-id12545 . -24) (undo-tree-id12546 . -24) (undo-tree-id12547 . -24) (undo-tree-id12548 . -24) (undo-tree-id12549 . -24) (undo-tree-id12550 . -24) (undo-tree-id12551 . -24) (undo-tree-id12552 . -24) (undo-tree-id12553 . -24) (undo-tree-id12554 . -24) (undo-tree-id12555 . -24) (undo-tree-id12556 . -24) (undo-tree-id12557 . -24) (undo-tree-id12558 . -24) (undo-tree-id12559 . -24) (undo-tree-id12560 . -24) (undo-tree-id12561 . -24) (undo-tree-id12562 . -24) (undo-tree-id12563 . -25) (undo-tree-id12564 . -24) (undo-tree-id12565 . -25) (undo-tree-id12566 . -25) (undo-tree-id12567 . -25) (undo-tree-id12568 . -25) (undo-tree-id12569 . -25) (undo-tree-id12570 . -25) (undo-tree-id12571 . -25) (undo-tree-id12572 . -25) (undo-tree-id12573 . -25) (undo-tree-id12574 . -25) (undo-tree-id12575 . -25) (undo-tree-id12576 . -25) (undo-tree-id12577 . -25) (undo-tree-id12578 . -25) (undo-tree-id12579 . -25) (undo-tree-id12580 . -25) (undo-tree-id12581 . -25) (undo-tree-id12582 . -25) (undo-tree-id12583 . -25) (undo-tree-id12584 . -25) (undo-tree-id12585 . -25) (undo-tree-id12586 . -25) (undo-tree-id12587 . -25) (undo-tree-id12588 . -26) (undo-tree-id12589 . -26) (undo-tree-id12590 . -26) (undo-tree-id12591 . -26) (undo-tree-id12592 . -26) (undo-tree-id12593 . -26) (undo-tree-id12594 . -26) (undo-tree-id12595 . -26) (undo-tree-id12596 . -26) (undo-tree-id12597 . -26) (undo-tree-id12598 . -26) (undo-tree-id12599 . -26) (undo-tree-id12600 . -26) (undo-tree-id12601 . -26) (undo-tree-id12602 . -26) (undo-tree-id12603 . -26) (undo-tree-id12604 . -26) (undo-tree-id12605 . -26) (undo-tree-id12606 . -26) (undo-tree-id12607 . -26) (undo-tree-id12608 . -26) (undo-tree-id12609 . -26) (undo-tree-id12610 . -26) (undo-tree-id12611 . -26) (undo-tree-id12612 . -26) (undo-tree-id12613 . -26) (undo-tree-id12614 . -26) (undo-tree-id12615 . -26) (undo-tree-id12616 . -26) 5374) nil (25934 8551 899217 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5396 . 5397) (nil fontified nil 5396 . 5397) (nil fontified nil 5385 . 5396) (nil fontified nil 5379 . 5385) (nil fontified nil 5371 . 5379) (5371 . 5397)) nil (25934 8551 897929 63000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5395) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (undo-tree-id12661 . -1) (undo-tree-id12662 . -1) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (undo-tree-id12682 . -1) (undo-tree-id12683 . -1) (undo-tree-id12684 . -1) (undo-tree-id12685 . -1) (undo-tree-id12686 . -1) (undo-tree-id12687 . -1) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) 5396 (t 25934 8551 958577 558000)) nil (25934 8554 274818 356000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5197) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5197) (t 25934 8554 310772 82000)) nil (25934 8584 581593 645000) 0 nil])
([nil nil ((apply -2 3289 3348 undo--wrap-and-run-primitive-undo 3289 3348 ((3305 . 3307) 3329))) nil (25934 8675 539975 546000) 0 nil])
([nil nil ((apply -6 2951 3111 undo--wrap-and-run-primitive-undo 2951 3111 ((3063 . 3065) (3015 . 3017) (2967 . 2969) 3088))) nil (25934 8679 178674 227000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3446) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (#(" " 0 1 (fontified t)) . -3447) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) (undo-tree-id13234 . -1) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) (undo-tree-id13278 . -1) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) (undo-tree-id13281 . -1) (undo-tree-id13282 . -1) (undo-tree-id13283 . -1) (undo-tree-id13284 . -1) (undo-tree-id13285 . -1) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -1) (undo-tree-id13291 . -1) (undo-tree-id13292 . -1) (undo-tree-id13293 . -1) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (undo-tree-id13324 . -1) (#(" " 0 1 (fontified t)) . -3448) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) (undo-tree-id13352 . -1) (undo-tree-id13353 . -1) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (#(" " 0 1 (fontified t)) . -3449) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (#(" " 0 1 (fontified t)) . -3450) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) (undo-tree-id13850 . -1) (undo-tree-id13851 . -1) (undo-tree-id13852 . -1) (undo-tree-id13853 . -1) (undo-tree-id13854 . -1) (undo-tree-id13855 . -1) (undo-tree-id13856 . -1) (undo-tree-id13857 . -1) (undo-tree-id13858 . -1) (undo-tree-id13859 . -1) (undo-tree-id13860 . -1) (undo-tree-id13861 . -1) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (undo-tree-id13864 . -1) (undo-tree-id13865 . -1) (undo-tree-id13866 . -1) (undo-tree-id13867 . -1) (undo-tree-id13868 . -1) (undo-tree-id13869 . -1) (undo-tree-id13870 . -1) (undo-tree-id13871 . -1) (undo-tree-id13872 . -1) (undo-tree-id13873 . -1) (undo-tree-id13874 . -1) (undo-tree-id13875 . -1) (undo-tree-id13876 . -1) (undo-tree-id13877 . -1) (undo-tree-id13878 . -1) (undo-tree-id13879 . -1) (undo-tree-id13880 . -1) (undo-tree-id13881 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13885 . -1) (undo-tree-id13886 . -1) (undo-tree-id13887 . -1) (undo-tree-id13888 . -1) (undo-tree-id13889 . -1) (undo-tree-id13890 . -1) (undo-tree-id13891 . -1) (undo-tree-id13892 . -1) (undo-tree-id13893 . -1) (undo-tree-id13894 . -1) (undo-tree-id13895 . -1) (undo-tree-id13896 . -1) (undo-tree-id13897 . -1) (undo-tree-id13898 . -1) (undo-tree-id13899 . -1) (undo-tree-id13900 . -1) (undo-tree-id13901 . -1) (undo-tree-id13902 . -1) (undo-tree-id13903 . -1) (undo-tree-id13904 . -1) (undo-tree-id13905 . -1) (undo-tree-id13906 . -1) (undo-tree-id13907 . -1) (undo-tree-id13908 . -1) (undo-tree-id13909 . -1) (undo-tree-id13910 . -1) (undo-tree-id13911 . -1) (undo-tree-id13912 . -1) (undo-tree-id13913 . -1) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (undo-tree-id13916 . -1) (undo-tree-id13917 . -1) (undo-tree-id13918 . -1) (undo-tree-id13919 . -1) (undo-tree-id13920 . -1) (undo-tree-id13921 . -1) (undo-tree-id13922 . -1) (undo-tree-id13923 . -1) (undo-tree-id13924 . -1) (undo-tree-id13925 . -1) (undo-tree-id13926 . -1) (undo-tree-id13927 . -1) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) (undo-tree-id13951 . -1) (undo-tree-id13952 . -1) (undo-tree-id13953 . -1) (undo-tree-id13954 . -1) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1) (undo-tree-id13959 . -1) (undo-tree-id13960 . -1) (undo-tree-id13961 . -1) (undo-tree-id13962 . -1) (undo-tree-id13963 . -1) (undo-tree-id13964 . -1) (undo-tree-id13965 . -1) (undo-tree-id13966 . -1) (undo-tree-id13967 . -1) (undo-tree-id13968 . -1) (undo-tree-id13969 . -1) (undo-tree-id13970 . -1) (undo-tree-id13971 . -1) (undo-tree-id13972 . -1) (undo-tree-id13973 . -1) (undo-tree-id13974 . -1) (undo-tree-id13975 . -1) (undo-tree-id13976 . -1) (undo-tree-id13977 . -1) (undo-tree-id13978 . -1) (undo-tree-id13979 . -1) (undo-tree-id13980 . -1) (undo-tree-id13981 . -1) (undo-tree-id13982 . -1) (undo-tree-id13983 . -1) (undo-tree-id13984 . -1) (undo-tree-id13985 . -1) (undo-tree-id13986 . -1) (undo-tree-id13987 . -1) (undo-tree-id13988 . -1) (undo-tree-id13989 . -1) (undo-tree-id13990 . -1) (undo-tree-id13991 . -1) (undo-tree-id13992 . -1) (undo-tree-id13993 . -1) (undo-tree-id13994 . -1) (undo-tree-id13995 . -1) (undo-tree-id13996 . -1) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) (undo-tree-id14013 . -1) (undo-tree-id14014 . -1) (undo-tree-id14015 . -1) (undo-tree-id14016 . -1) (undo-tree-id14017 . -1) (undo-tree-id14018 . -1) (undo-tree-id14019 . -1) (undo-tree-id14020 . -1) (undo-tree-id14021 . -1) (undo-tree-id14022 . -1) (undo-tree-id14023 . -1) (undo-tree-id14024 . -1) (undo-tree-id14025 . -1) (undo-tree-id14026 . -1) (undo-tree-id14027 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14031 . -1) (undo-tree-id14032 . -1) (undo-tree-id14033 . -1) (undo-tree-id14034 . -1) (undo-tree-id14035 . -1) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) (undo-tree-id14042 . -1) (undo-tree-id14043 . -1) (undo-tree-id14044 . -1) (undo-tree-id14045 . -1) (undo-tree-id14046 . -1) (undo-tree-id14047 . -1) (undo-tree-id14048 . -1) (undo-tree-id14049 . -1) (undo-tree-id14050 . -1) (undo-tree-id14051 . -1) (undo-tree-id14052 . -1) (undo-tree-id14053 . -1) (undo-tree-id14054 . -1) (undo-tree-id14055 . -1) (undo-tree-id14056 . -1) (undo-tree-id14057 . -1) (undo-tree-id14058 . -1) (undo-tree-id14059 . -1) (undo-tree-id14060 . -1) (undo-tree-id14061 . -1) (undo-tree-id14062 . -1) (undo-tree-id14063 . -1) (undo-tree-id14064 . -1) (undo-tree-id14065 . -1) (undo-tree-id14066 . -1) (undo-tree-id14067 . -1) (undo-tree-id14068 . -1) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) (undo-tree-id14071 . -1) (undo-tree-id14072 . -1) (undo-tree-id14073 . -1) (undo-tree-id14074 . -1) (undo-tree-id14075 . -1) (undo-tree-id14076 . -1) (undo-tree-id14077 . -1) (undo-tree-id14078 . -1) (undo-tree-id14079 . -1) (undo-tree-id14080 . -1) (undo-tree-id14081 . -1) (undo-tree-id14082 . -1) (undo-tree-id14083 . -1) (#(" " 0 1 (fontified t)) . -3451) (undo-tree-id14084 . -1) (undo-tree-id14085 . -1) (undo-tree-id14086 . -1) (undo-tree-id14087 . -1) (undo-tree-id14088 . -1) (undo-tree-id14089 . -1) (undo-tree-id14090 . -1) (undo-tree-id14091 . -1) (undo-tree-id14092 . -1) (undo-tree-id14093 . -1) (undo-tree-id14094 . -1) (undo-tree-id14095 . -1) (undo-tree-id14096 . -1) (undo-tree-id14097 . -1) (undo-tree-id14098 . -1) (undo-tree-id14099 . -1) (undo-tree-id14100 . -1) (undo-tree-id14101 . -1) (undo-tree-id14102 . -1) (undo-tree-id14103 . -1) (undo-tree-id14104 . -1) (undo-tree-id14105 . -1) (undo-tree-id14106 . -1) (undo-tree-id14107 . -1) (undo-tree-id14108 . -1) (undo-tree-id14109 . -1) (undo-tree-id14110 . -1) (undo-tree-id14111 . -1) (undo-tree-id14112 . -1) (undo-tree-id14113 . -1) (undo-tree-id14114 . -1) (undo-tree-id14115 . -1) (undo-tree-id14116 . -1) (undo-tree-id14117 . -1) (undo-tree-id14118 . -1) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (undo-tree-id14133 . -1) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (undo-tree-id14153 . -1) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -1) (undo-tree-id14157 . -1) (undo-tree-id14158 . -1) (undo-tree-id14159 . -1) (undo-tree-id14160 . -1) (undo-tree-id14161 . -1) (undo-tree-id14162 . -1) (undo-tree-id14163 . -1) (undo-tree-id14164 . -1) (undo-tree-id14165 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14169 . -1) (undo-tree-id14170 . -1) (undo-tree-id14171 . -1) (undo-tree-id14172 . -1) (undo-tree-id14173 . -1) (undo-tree-id14174 . -1) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (undo-tree-id14177 . -1) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) (undo-tree-id14182 . -1) (undo-tree-id14183 . -1) (undo-tree-id14184 . -1) (undo-tree-id14185 . -1) (undo-tree-id14186 . -1) (undo-tree-id14187 . -1) (undo-tree-id14188 . -1) (undo-tree-id14189 . -1) (undo-tree-id14190 . -1) (undo-tree-id14191 . -1) (undo-tree-id14192 . -1) (undo-tree-id14193 . -1) (undo-tree-id14194 . -1) (undo-tree-id14195 . -1) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . -1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (#(" " 0 1 (fontified t)) . -3452) (undo-tree-id14303 . -1) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . -1) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) (undo-tree-id14325 . -1) (undo-tree-id14326 . -1) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . -1) (undo-tree-id14330 . -1) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) (undo-tree-id14337 . -1) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) (undo-tree-id14340 . -1) (undo-tree-id14341 . -1) (undo-tree-id14342 . -1) (undo-tree-id14343 . -1) (undo-tree-id14344 . -1) (undo-tree-id14345 . -1) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) (undo-tree-id14361 . -1) (undo-tree-id14362 . -1) (undo-tree-id14363 . -1) (undo-tree-id14364 . -1) (undo-tree-id14365 . -1) (undo-tree-id14366 . -1) (undo-tree-id14367 . -1) (undo-tree-id14368 . -1) (undo-tree-id14369 . -1) (undo-tree-id14370 . -1) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) (undo-tree-id14373 . -1) (undo-tree-id14374 . -1) (undo-tree-id14375 . -1) (undo-tree-id14376 . -1) (undo-tree-id14377 . -1) (undo-tree-id14378 . -1) (undo-tree-id14379 . -1) (undo-tree-id14380 . -1) (undo-tree-id14381 . -1) (undo-tree-id14382 . -1) (undo-tree-id14383 . -1) (undo-tree-id14384 . -1) (undo-tree-id14385 . -1) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) (undo-tree-id14391 . -1) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) (undo-tree-id14405 . -1) (undo-tree-id14406 . -1) (undo-tree-id14407 . -1) (undo-tree-id14408 . -1) (undo-tree-id14409 . -1) (undo-tree-id14410 . -1) (undo-tree-id14411 . -1) (undo-tree-id14412 . -1) (undo-tree-id14413 . -1) (undo-tree-id14414 . -1) (undo-tree-id14415 . -1) (undo-tree-id14416 . -1) (undo-tree-id14417 . -1) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) (undo-tree-id14420 . -1) (undo-tree-id14421 . -1) (undo-tree-id14422 . -1) (undo-tree-id14423 . -1) (undo-tree-id14424 . -1) (undo-tree-id14425 . -1) (undo-tree-id14426 . -1) (undo-tree-id14427 . -1) (undo-tree-id14428 . -1) (undo-tree-id14429 . -1) (undo-tree-id14430 . -1) (undo-tree-id14431 . -1) (undo-tree-id14432 . -1) (undo-tree-id14433 . -1) (undo-tree-id14434 . -1) (undo-tree-id14435 . -1) (undo-tree-id14436 . -1) (undo-tree-id14437 . -1) (undo-tree-id14438 . -1) (undo-tree-id14439 . -1) (undo-tree-id14440 . -1) (undo-tree-id14441 . -1) (undo-tree-id14442 . -1) (undo-tree-id14443 . -1) (undo-tree-id14444 . -1) (undo-tree-id14445 . -1) (undo-tree-id14446 . -1) (undo-tree-id14447 . -1) (undo-tree-id14448 . -1) (undo-tree-id14449 . -1) (undo-tree-id14450 . -1) (undo-tree-id14451 . -1) (undo-tree-id14452 . -1) (undo-tree-id14453 . -1) (undo-tree-id14454 . -1) (undo-tree-id14455 . -1) (undo-tree-id14456 . -1) (undo-tree-id14457 . -1) (undo-tree-id14458 . -1) (undo-tree-id14459 . -1) (undo-tree-id14460 . -1) (undo-tree-id14461 . -1) (undo-tree-id14462 . -1) (undo-tree-id14463 . -1) (undo-tree-id14464 . -1) (undo-tree-id14465 . -1) (undo-tree-id14466 . -1) (undo-tree-id14467 . -1) (undo-tree-id14468 . -1) (undo-tree-id14469 . -1) (undo-tree-id14470 . -1) (undo-tree-id14471 . -1) (undo-tree-id14472 . -1) (undo-tree-id14473 . -1) (undo-tree-id14474 . -1) (undo-tree-id14475 . -1) (undo-tree-id14476 . -1) (undo-tree-id14477 . -1) (undo-tree-id14478 . -1) (undo-tree-id14479 . -1) (undo-tree-id14480 . -1) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (undo-tree-id14483 . -1) (undo-tree-id14484 . -1) (undo-tree-id14485 . -1) (undo-tree-id14486 . -1) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (undo-tree-id14497 . -1) (undo-tree-id14498 . -1) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (#(" " 0 1 (fontified t)) . -3453) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) (undo-tree-id14529 . -1) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) (undo-tree-id14540 . -1) (undo-tree-id14541 . -1) (undo-tree-id14542 . -1) (undo-tree-id14543 . -1) (undo-tree-id14544 . -1) (undo-tree-id14545 . -1) (undo-tree-id14546 . -1) (undo-tree-id14547 . -1) (undo-tree-id14548 . -1) (undo-tree-id14549 . -1) (undo-tree-id14550 . -1) (undo-tree-id14551 . -1) (undo-tree-id14552 . -1) (undo-tree-id14553 . -1) (undo-tree-id14554 . -1) (undo-tree-id14555 . -1) (undo-tree-id14556 . -1) (undo-tree-id14557 . -1) (undo-tree-id14558 . -1) (undo-tree-id14559 . -1) (undo-tree-id14560 . -1) (undo-tree-id14561 . -1) (undo-tree-id14562 . -1) (undo-tree-id14563 . -1) (undo-tree-id14564 . -1) (undo-tree-id14565 . -1) (undo-tree-id14566 . -1) (undo-tree-id14567 . -1) (undo-tree-id14568 . -1) (undo-tree-id14569 . -1) (undo-tree-id14570 . -1) (undo-tree-id14571 . -1) (undo-tree-id14572 . -1) (undo-tree-id14573 . -1) (undo-tree-id14574 . -1) (undo-tree-id14575 . -1) (undo-tree-id14576 . -1) (undo-tree-id14577 . -1) (undo-tree-id14578 . -1) (undo-tree-id14579 . -1) (undo-tree-id14580 . -1) (undo-tree-id14581 . -1) (undo-tree-id14582 . -1) (undo-tree-id14583 . -1) (undo-tree-id14584 . -1) (undo-tree-id14585 . -1) (undo-tree-id14586 . -1) (undo-tree-id14587 . -1) (undo-tree-id14588 . -1) (undo-tree-id14589 . -1) (undo-tree-id14590 . -1) (undo-tree-id14591 . -1) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1) (undo-tree-id14603 . -1) (undo-tree-id14604 . -1) (undo-tree-id14605 . -1) (undo-tree-id14606 . -1) (undo-tree-id14607 . -1) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1) (undo-tree-id14612 . -1) (undo-tree-id14613 . -1) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1) (undo-tree-id14616 . -1) (undo-tree-id14617 . -1) (undo-tree-id14618 . -1) (undo-tree-id14619 . -1) (undo-tree-id14620 . -1) (undo-tree-id14621 . -1) (undo-tree-id14622 . -1) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1) (undo-tree-id14625 . -1) (undo-tree-id14626 . -1) (undo-tree-id14627 . -1) (undo-tree-id14628 . -1) (undo-tree-id14629 . -1) (undo-tree-id14630 . -1) (undo-tree-id14631 . -1) (undo-tree-id14632 . -1) (undo-tree-id14633 . -1) (undo-tree-id14634 . -1) (undo-tree-id14635 . -1) (undo-tree-id14636 . -1) (undo-tree-id14637 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) (undo-tree-id14645 . -1) (undo-tree-id14646 . -1) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1) (undo-tree-id14649 . -1) (undo-tree-id14650 . -1) (undo-tree-id14651 . -1) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) (undo-tree-id14671 . -1) (undo-tree-id14672 . -1) (undo-tree-id14673 . -1) (undo-tree-id14674 . -1) (undo-tree-id14675 . -1) (undo-tree-id14676 . -1) (undo-tree-id14677 . -1) (undo-tree-id14678 . -1) (undo-tree-id14679 . -1) (undo-tree-id14680 . -1) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) (undo-tree-id14687 . -1) (undo-tree-id14688 . -1) (undo-tree-id14689 . -1) (#(" " 0 1 (fontified t)) . -3454) (undo-tree-id14690 . -1) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) (undo-tree-id14709 . -1) (undo-tree-id14710 . -1) (undo-tree-id14711 . -1) (undo-tree-id14712 . -1) (undo-tree-id14713 . -1) (undo-tree-id14714 . -1) (undo-tree-id14715 . -1) (undo-tree-id14716 . -1) (undo-tree-id14717 . -1) (undo-tree-id14718 . -1) (undo-tree-id14719 . -1) (undo-tree-id14720 . -1) (undo-tree-id14721 . -1) (undo-tree-id14722 . -1) (undo-tree-id14723 . -1) (undo-tree-id14724 . -1) (undo-tree-id14725 . -1) (undo-tree-id14726 . -1) (undo-tree-id14727 . -1) (undo-tree-id14728 . -1) (undo-tree-id14729 . -1) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) (undo-tree-id14745 . -1) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (#(" " 0 1 (fontified t)) . -3455) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (#(" " 0 1 (fontified t)) . -3456) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1) (undo-tree-id15031 . -1) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) (undo-tree-id15037 . -1) (undo-tree-id15038 . -1) (undo-tree-id15039 . -1) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (undo-tree-id15044 . -1) (undo-tree-id15045 . -1) (undo-tree-id15046 . -1) (undo-tree-id15047 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15051 . -1) (undo-tree-id15052 . -1) (undo-tree-id15053 . -1) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) (undo-tree-id15056 . -1) (undo-tree-id15057 . -1) (undo-tree-id15058 . -1) (undo-tree-id15059 . -1) (undo-tree-id15060 . -1) (undo-tree-id15061 . -1) (undo-tree-id15062 . -1) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (undo-tree-id15065 . -1) (undo-tree-id15066 . -1) (undo-tree-id15067 . -1) (undo-tree-id15068 . -1) (undo-tree-id15069 . -1) (undo-tree-id15070 . -1) (undo-tree-id15071 . -1) (undo-tree-id15072 . -1) (undo-tree-id15073 . -1) (undo-tree-id15074 . -1) (undo-tree-id15075 . -1) (undo-tree-id15076 . -1) (undo-tree-id15077 . -1) (undo-tree-id15078 . -1) (undo-tree-id15079 . -1) (undo-tree-id15080 . -1) (undo-tree-id15081 . -1) (undo-tree-id15082 . -1) (undo-tree-id15083 . -1) (undo-tree-id15084 . -1) (undo-tree-id15085 . -1) (undo-tree-id15086 . -1) (undo-tree-id15087 . -1) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -1) (undo-tree-id15095 . -1) (undo-tree-id15096 . -1) (undo-tree-id15097 . -1) (undo-tree-id15098 . -1) (undo-tree-id15099 . -1) (undo-tree-id15100 . -1) (undo-tree-id15101 . -1) (undo-tree-id15102 . -1) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (undo-tree-id15138 . -1) (undo-tree-id15139 . -1) (undo-tree-id15140 . -1) (undo-tree-id15141 . -1) (undo-tree-id15142 . -1) (#(" " 0 1 (fontified t)) . -3457) (undo-tree-id15143 . -1) (undo-tree-id15144 . -1) (undo-tree-id15145 . -1) (undo-tree-id15146 . -1) (undo-tree-id15147 . -1) (undo-tree-id15148 . -1) (undo-tree-id15149 . -1) (undo-tree-id15150 . -1) (undo-tree-id15151 . -1) (undo-tree-id15152 . -1) (undo-tree-id15153 . -1) (undo-tree-id15154 . -1) (undo-tree-id15155 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (undo-tree-id15159 . -1) (undo-tree-id15160 . -1) (undo-tree-id15161 . -1) (undo-tree-id15162 . -1) (undo-tree-id15163 . -1) (undo-tree-id15164 . -1) (undo-tree-id15165 . -1) (undo-tree-id15166 . -1) (undo-tree-id15167 . -1) (undo-tree-id15168 . -1) (undo-tree-id15169 . -1) (undo-tree-id15170 . -1) (undo-tree-id15171 . -1) (undo-tree-id15172 . -1) (undo-tree-id15173 . -1) (undo-tree-id15174 . -1) (undo-tree-id15175 . -1) (undo-tree-id15176 . -1) (undo-tree-id15177 . -1) (undo-tree-id15178 . -1) (undo-tree-id15179 . -1) (undo-tree-id15180 . -1) (undo-tree-id15181 . -1) (undo-tree-id15182 . -1) (undo-tree-id15183 . -1) (undo-tree-id15184 . -1) (undo-tree-id15185 . -1) (undo-tree-id15186 . -1) (undo-tree-id15187 . -1) (undo-tree-id15188 . -1) (undo-tree-id15189 . -1) (undo-tree-id15190 . -1) (undo-tree-id15191 . -1) (undo-tree-id15192 . -1) (undo-tree-id15193 . -1) (undo-tree-id15194 . -1) (undo-tree-id15195 . -1) (undo-tree-id15196 . -1) (undo-tree-id15197 . -1) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15201 . -1) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) (undo-tree-id15204 . -1) (undo-tree-id15205 . -1) (undo-tree-id15206 . -1) (undo-tree-id15207 . -1) (undo-tree-id15208 . -1) (undo-tree-id15209 . -1) (undo-tree-id15210 . -1) (undo-tree-id15211 . -1) (undo-tree-id15212 . -1) (undo-tree-id15213 . -1) (undo-tree-id15214 . -1) (undo-tree-id15215 . -1) (undo-tree-id15216 . -1) (undo-tree-id15217 . -1) (undo-tree-id15218 . -1) (undo-tree-id15219 . -1) (undo-tree-id15220 . -1) (undo-tree-id15221 . -1) (undo-tree-id15222 . -1) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) (undo-tree-id15227 . -1) (undo-tree-id15228 . -1) (undo-tree-id15229 . -1) (undo-tree-id15230 . -1) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (undo-tree-id15236 . -1) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) (undo-tree-id15240 . -1) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (#(" " 0 1 (fontified t)) . -3458) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -1) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (undo-tree-id15311 . -1) (undo-tree-id15312 . -1) (undo-tree-id15313 . -1) (undo-tree-id15314 . -1) (undo-tree-id15315 . -1) (undo-tree-id15316 . -1) (undo-tree-id15317 . -1) (undo-tree-id15318 . -1) (undo-tree-id15319 . -1) (undo-tree-id15320 . -1) (undo-tree-id15321 . -1) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (#(" " 0 1 (fontified t)) . -3459) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (#(" " 0 1 (fontified t)) . -3460) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -1) (undo-tree-id15455 . -1) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (undo-tree-id15462 . -1) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (undo-tree-id15465 . -1) (undo-tree-id15466 . -1) (undo-tree-id15467 . -1) (undo-tree-id15468 . -1) (undo-tree-id15469 . -1) (undo-tree-id15470 . -1) (undo-tree-id15471 . -1) (undo-tree-id15472 . -1) (undo-tree-id15473 . -1) (undo-tree-id15474 . -1) (undo-tree-id15475 . -1) (undo-tree-id15476 . -1) (undo-tree-id15477 . -1) (undo-tree-id15478 . -1) (undo-tree-id15479 . -1) (undo-tree-id15480 . -1) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (undo-tree-id15489 . -1) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (#(" " 0 1 (fontified t)) . -3461) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) 3462 (t 25934 8679 233338 481000)) nil (25934 8747 541318 720000) 0 nil])
([nil nil ((3587 . 3595) (t 25934 8747 583272 314000)) nil (25934 8989 110197 255000) 0 nil])
([nil nil ((3862 . 3864) (t 25934 8989 152744 379000)) nil (25934 9085 843881 867000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3862) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (undo-tree-id15540 . -1) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) (undo-tree-id15545 . -1) (undo-tree-id15546 . -1) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (undo-tree-id15549 . -1) (undo-tree-id15550 . -1) (undo-tree-id15551 . -1) (undo-tree-id15552 . -1) (undo-tree-id15553 . -1) (undo-tree-id15554 . -1) (undo-tree-id15555 . -1) (undo-tree-id15556 . -1) (undo-tree-id15557 . -1) (undo-tree-id15558 . -1) (undo-tree-id15559 . -1) (undo-tree-id15560 . -1) (undo-tree-id15561 . -1) (undo-tree-id15562 . -1) (undo-tree-id15563 . -1) (undo-tree-id15564 . -1) (undo-tree-id15565 . -1) (undo-tree-id15566 . -1) (undo-tree-id15567 . -1) (undo-tree-id15568 . -1) (undo-tree-id15569 . -1) (undo-tree-id15570 . -1) (undo-tree-id15571 . -1) (undo-tree-id15572 . -1) (undo-tree-id15573 . -1) (undo-tree-id15574 . -1) (undo-tree-id15575 . -1) (undo-tree-id15576 . -1) (undo-tree-id15577 . -1) (undo-tree-id15578 . -1) (undo-tree-id15579 . -1) (undo-tree-id15580 . -1) (undo-tree-id15581 . -1) (undo-tree-id15582 . -1) (undo-tree-id15583 . -1) (undo-tree-id15584 . -1) (undo-tree-id15585 . -1) (undo-tree-id15586 . -1) (undo-tree-id15587 . -1) (undo-tree-id15588 . -1) (undo-tree-id15589 . -1) (undo-tree-id15590 . -1) (undo-tree-id15591 . -1) (undo-tree-id15592 . -1) (undo-tree-id15593 . -1) (undo-tree-id15594 . -1) (undo-tree-id15595 . -1) (undo-tree-id15596 . -1) (undo-tree-id15597 . -1) (undo-tree-id15598 . -1) (undo-tree-id15599 . -1) (undo-tree-id15600 . -1) (undo-tree-id15601 . -1) (undo-tree-id15602 . -1) (undo-tree-id15603 . -1) (undo-tree-id15604 . -1) (undo-tree-id15605 . -1) (undo-tree-id15606 . -1) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) (undo-tree-id15612 . -1) (undo-tree-id15613 . -1) (undo-tree-id15614 . -1) (undo-tree-id15615 . -1) (undo-tree-id15616 . -1) (undo-tree-id15617 . -1) (undo-tree-id15618 . -1) (undo-tree-id15619 . -1) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) (undo-tree-id15632 . -1) (undo-tree-id15633 . -1) (undo-tree-id15634 . -1) (undo-tree-id15635 . -1) (undo-tree-id15636 . -1) (undo-tree-id15637 . -1) (undo-tree-id15638 . -1) (undo-tree-id15639 . -1) (#("0" 0 1 (fontified t)) . -3863) (undo-tree-id15640 . -1) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1) (undo-tree-id15643 . -1) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) (undo-tree-id15649 . -1) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (undo-tree-id15652 . -1) (undo-tree-id15653 . -1) (undo-tree-id15654 . -1) (undo-tree-id15655 . -1) (undo-tree-id15656 . -1) (undo-tree-id15657 . -1) (undo-tree-id15658 . -1) (undo-tree-id15659 . -1) (undo-tree-id15660 . -1) (undo-tree-id15661 . -1) (undo-tree-id15662 . -1) (undo-tree-id15663 . -1) (undo-tree-id15664 . -1) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1) (undo-tree-id15667 . -1) (undo-tree-id15668 . -1) (undo-tree-id15669 . -1) (undo-tree-id15670 . -1) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (undo-tree-id15689 . -1) (undo-tree-id15690 . -1) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) (undo-tree-id15693 . -1) (undo-tree-id15694 . -1) (undo-tree-id15695 . -1) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) 3864) nil (25934 9085 843872 655000) 0 nil])
([nil nil ((3862 . 3864)) nil (25934 9085 843612 672000) 0 nil])
([nil nil ((apply 4 4305 4398 undo--wrap-and-run-primitive-undo 4305 4398 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4353) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4313) 4402))) nil (25934 9197 167737 236000) 0 nil])
([nil nil ((4406 . 4410) 4398) nil (25934 9197 167732 349000) 0 nil])
([nil nil ((3441 . 3443) (t 25934 9197 199565 142000)) nil (25934 9386 31723 959000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-comment-face fontified t)) . 3443) (t 25934 9268 746071 814000)) nil (25934 9413 700640 392000) 0 nil] [nil nil ((4572 . 4573) (4572 . 4573) (t 25934 9268 746071 814000)) ((#("
" 0 1 (fontified nil)) . 4572) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 4572)) (25934 9386 30052 117000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3441) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3442) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (undo-tree-id15846 . -1) 3443) nil (25934 9413 700637 973000) 0 nil])
nil
([nil nil ((3441 . 3442)) nil (25934 9413 700608 64000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3433) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) (#("i" 0 1 (fontified t)) . -3434) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3435) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (#("p" 0 1 (fontified t)) . -3436) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (#("u" 0 1 (fontified t)) . -3437) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3438) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (#("s" 0 1 (fontified t)) . -3439) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (#(" " 0 1 (fontified t)) . -3440) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3441) (undo-tree-id15820 . -1) 3442) nil (25934 9413 700601 235000) 0 nil])
([nil nil ((3433 . 3434)) nil (25934 9413 700483 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3433) (undo-tree-id15702 . -1) (undo-tree-id15703 . -1) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) (undo-tree-id15706 . -1) (undo-tree-id15707 . -1) (undo-tree-id15708 . -1) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) 3434) nil (25934 9413 700478 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3521 . 3522) (nil fontified nil 3521 . 3522) (nil fontified nil 3518 . 3521) (nil fontified nil 3517 . 3518) (nil fontified nil 3516 . 3517) (nil fontified nil 3515 . 3516) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3511 . 3513) (nil fontified nil 3510 . 3511) (nil fontified nil 3504 . 3510) (nil fontified nil 3503 . 3504) (nil fontified nil 3496 . 3503) (nil fontified nil 3492 . 3496) (nil fontified nil 3489 . 3492) (nil fontified nil 3488 . 3489) (nil fontified nil 3483 . 3488) (nil fontified nil 3482 . 3483) (nil fontified nil 3478 . 3482) (nil fontified nil 3475 . 3478) (nil fontified nil 3471 . 3475) (nil fontified nil 3470 . 3471) (nil fontified nil 3469 . 3470) (nil fontified nil 3464 . 3469) (nil fontified nil 3463 . 3464) (nil fontified nil 3454 . 3463) (nil fontified nil 3443 . 3454) (nil fontified nil 3438 . 3443) (3438 . 3522) (t 25934 9413 727287 395000)) nil (25934 9423 411645 735000) 0 nil])
([nil nil ((3434 . 3439)) nil (25934 9423 411640 340000) 0 nil])
([nil nil ((3439 . 3443)) nil (25934 9423 411639 447000) 0 nil])
([nil nil ((apply -2 3354 3533 undo--wrap-and-run-primitive-undo 3354 3533 ((3370 . 3372) 3447))) nil (25934 9423 411633 791000) 0 nil])
([nil nil ((apply -10 4657 5169 undo--wrap-and-run-primitive-undo 4657 5169 ((5117 . 5119) (4886 . 4888) (4739 . 4741) (4693 . 4695) (4665 . 4667) 5115))) nil (25934 9462 252859 475000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5133) (undo-tree-id15847 . -4) 5125) nil (25934 9462 252852 650000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5393) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5393) (t 25934 9462 303721 782000)) nil (25934 9465 259109 206000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5446) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5446) (t 25934 9465 299995 383000)) nil (25934 9469 54643 726000) 0 nil])
([nil nil ((apply -2 5459 5487 undo--wrap-and-run-primitive-undo 5459 5487 ((5467 . 5469) 5484))) nil (25934 9469 54640 758000) 0 nil])
([nil nil ((5486 . 5494)) nil (25934 9469 54638 786000) 0 nil])
([nil nil ((#("        # return net_input
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 16 (face font-lock-comment-face fontified t) 16 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face fontified t rear-nonsticky t)) . 5459) (undo-tree-id15848 . -27) (undo-tree-id15849 . -26) (undo-tree-id15850 . -26) (undo-tree-id15851 . -26) (undo-tree-id15852 . -27) (undo-tree-id15853 . -27) (undo-tree-id15854 . -27) (undo-tree-id15855 . -27) (undo-tree-id15856 . -27) (undo-tree-id15857 . -27) (undo-tree-id15858 . -27) (undo-tree-id15859 . -27) (undo-tree-id15860 . -27) (undo-tree-id15861 . -27) (undo-tree-id15862 . -27) (undo-tree-id15863 . -27) (undo-tree-id15864 . -27) (undo-tree-id15865 . -27) (undo-tree-id15866 . -27) (undo-tree-id15867 . -27) (undo-tree-id15868 . -27) (undo-tree-id15869 . -27) (undo-tree-id15870 . -27) (undo-tree-id15871 . -27) (undo-tree-id15872 . -27) (undo-tree-id15873 . -27) (undo-tree-id15874 . -27) (undo-tree-id15875 . -27) (undo-tree-id15876 . -27) (undo-tree-id15877 . -27) (undo-tree-id15878 . -27) (undo-tree-id15879 . -27) (undo-tree-id15880 . -27) (undo-tree-id15881 . -27) (undo-tree-id15882 . -27) (undo-tree-id15883 . -27) (undo-tree-id15884 . -27) (undo-tree-id15885 . -27) (undo-tree-id15886 . -27) (undo-tree-id15887 . -27) (undo-tree-id15888 . -27) (undo-tree-id15889 . -27) (undo-tree-id15890 . -27) (undo-tree-id15891 . -27) (undo-tree-id15892 . -27) (undo-tree-id15893 . -27) (undo-tree-id15894 . -27) (undo-tree-id15895 . -27) (undo-tree-id15896 . -27) (undo-tree-id15897 . -27) (undo-tree-id15898 . -27) (undo-tree-id15899 . -27) (undo-tree-id15900 . -27) (undo-tree-id15901 . -27) (undo-tree-id15902 . -27) (undo-tree-id15903 . -27) (undo-tree-id15904 . -27) (undo-tree-id15905 . -27) (undo-tree-id15906 . -27) (undo-tree-id15907 . -27) (undo-tree-id15908 . -27) (undo-tree-id15909 . -27) (undo-tree-id15910 . -27) (undo-tree-id15911 . -27) (undo-tree-id15912 . -27) (undo-tree-id15913 . -27) (undo-tree-id15914 . -27) (undo-tree-id15915 . -27) (undo-tree-id15916 . -8) (undo-tree-id15917 . -27) (undo-tree-id15918 . -27) (undo-tree-id15919 . -27) (undo-tree-id15920 . -27) (undo-tree-id15921 . -27) (undo-tree-id15922 . -27) (undo-tree-id15923 . -27) (undo-tree-id15924 . -27) (undo-tree-id15925 . -27) (undo-tree-id15926 . -27) (undo-tree-id15927 . -27) (undo-tree-id15928 . -27) (undo-tree-id15929 . -27) (undo-tree-id15930 . -27) (undo-tree-id15931 . -27) (undo-tree-id15932 . -27) (undo-tree-id15933 . -27) (undo-tree-id15934 . -27) (undo-tree-id15935 . -27) (undo-tree-id15936 . -27) (undo-tree-id15937 . -27) (undo-tree-id15938 . -27) (undo-tree-id15939 . -27) (undo-tree-id15940 . -27) (undo-tree-id15941 . -27) (undo-tree-id15942 . -27) (undo-tree-id15943 . -27) (undo-tree-id15944 . -27) (undo-tree-id15945 . -27) (undo-tree-id15946 . -27) (undo-tree-id15947 . -27) (undo-tree-id15948 . -27) (undo-tree-id15949 . -27) (undo-tree-id15950 . -27) (undo-tree-id15951 . -27) (undo-tree-id15952 . -27) (undo-tree-id15953 . -27) (undo-tree-id15954 . -27) (undo-tree-id15955 . -27)) nil (25934 9469 54627 99000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5463) 5459 (t 25934 9469 108343 150000)) nil (25934 11951 615583 969000) 0 nil])
([nil nil ((apply -2 3449 3552 undo--wrap-and-run-primitive-undo 3449 3552 ((3465 . 3467) 3533))) nil (25934 12093 563171 758000) 0 nil])
([nil nil ((apply 2 3354 3447 undo--wrap-and-run-primitive-undo 3354 3447 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3370) 3449))) nil (25934 12164 160257 587000) 0 nil])
([nil nil ((#("                # rec_input[j_pop][self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = Wij" 0 5 (fontified t) 5 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-face fontified t) 33 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 39 (face font-lock-comment-face fontified t) 39 42 (face font-lock-comment-face fontified t) 42 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face fontified t) 53 56 (face font-lock-comment-face fontified t) 56 60 (face font-lock-comment-face fontified t) 60 67 (face font-lock-comment-face fontified t) 67 68 (face font-lock-comment-face fontified t) 68 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t) 75 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 80 (face font-lock-comment-face fontified t) 80 81 (face font-lock-comment-face fontified t) 81 82 (face font-lock-comment-face fontified t) 82 85 (face font-lock-comment-face fontified t)) . -3447) (undo-tree-id18940 . -85) (undo-tree-id18941 . -85) (undo-tree-id18942 . -85) (undo-tree-id18943 . -85) (undo-tree-id18944 . -41) (undo-tree-id18945 . -41) (undo-tree-id18946 . -41) (undo-tree-id18947 . -41) (undo-tree-id18948 . -41) (undo-tree-id18949 . -41) (undo-tree-id18950 . -41) (undo-tree-id18951 . -41) (undo-tree-id18952 . -41) (undo-tree-id18953 . -41) (undo-tree-id18954 . -41) (undo-tree-id18955 . -41) (undo-tree-id18956 . -41) (undo-tree-id18957 . -41) (undo-tree-id18958 . -41) (undo-tree-id18959 . -41) (undo-tree-id18960 . -41) (undo-tree-id18961 . -41) (undo-tree-id18962 . -41) (undo-tree-id18963 . -41) (undo-tree-id18964 . -41) (undo-tree-id18965 . -41) (undo-tree-id18966 . -41) (undo-tree-id18967 . -85) (undo-tree-id18968 . -85) (undo-tree-id18969 . -85) (undo-tree-id18970 . -85) (undo-tree-id18971 . -85) (undo-tree-id18972 . -85) (undo-tree-id18973 . -85) (undo-tree-id18974 . -85) (undo-tree-id18975 . -85) (undo-tree-id18976 . -85) (undo-tree-id18977 . -85) (undo-tree-id18978 . -85) (undo-tree-id18979 . -85) (undo-tree-id18980 . -85) (undo-tree-id18981 . -85) (undo-tree-id18982 . -85) (undo-tree-id18983 . -85) (undo-tree-id18984 . -85) (undo-tree-id18985 . -85) (undo-tree-id18986 . -85) (undo-tree-id18987 . -85) (undo-tree-id18988 . -85) (undo-tree-id18989 . -85) (undo-tree-id18990 . -85) (undo-tree-id18991 . -85) (undo-tree-id18992 . -85) (undo-tree-id18993 . -85) (undo-tree-id18994 . -85) (undo-tree-id18995 . -85) (undo-tree-id18996 . -85) (undo-tree-id18997 . -85) (undo-tree-id18998 . -85) (undo-tree-id18999 . -85) (undo-tree-id19000 . -85) (undo-tree-id19001 . -85) (undo-tree-id19002 . -85) (undo-tree-id19003 . -85) (undo-tree-id19004 . -85) (undo-tree-id19005 . -85) (undo-tree-id19006 . -85) (undo-tree-id19007 . -85) (undo-tree-id19008 . -85) (undo-tree-id19009 . -85) (undo-tree-id19010 . -85) (undo-tree-id19011 . -85) (undo-tree-id19012 . -85) (undo-tree-id19013 . -85) (undo-tree-id19014 . -85) (undo-tree-id19015 . -85) (undo-tree-id19016 . -85) (undo-tree-id19017 . -85) (undo-tree-id19018 . -85) (undo-tree-id19019 . -85) 3532 (t 25934 12167 376789 879000)) nil (25934 12199 66741 548000) 0 nil] [nil nil ((#("                inputs = rec_input[j_pop][self.csumNa[i_pop] : self.csumNa[i_pop + 1]]
" 0 16 (fontified t) 16 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 46 (face font-lock-keyword-face fontified t) 46 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 81 (fontified t) 81 82 (face font-lock-operator-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t)) . -2708) (undo-tree-id16085 . -16) (undo-tree-id16086 . -87) 2795 (t 25934 12093 614042 767000)) ((2708 . 2795)) (25934 12163 622634 58000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3446) (undo-tree-id18738 . -1) (undo-tree-id18739 . -1) (undo-tree-id18740 . -1) (undo-tree-id18741 . -1) (undo-tree-id18742 . -1) (undo-tree-id18743 . -1) (undo-tree-id18744 . -1) (undo-tree-id18745 . -1) (undo-tree-id18746 . -1) (undo-tree-id18747 . -1) (undo-tree-id18748 . -1) (undo-tree-id18749 . -1) (undo-tree-id18750 . -1) (undo-tree-id18751 . -1) (undo-tree-id18752 . -1) (undo-tree-id18753 . -1) (undo-tree-id18754 . -1) (undo-tree-id18755 . -1) (undo-tree-id18756 . -1) (undo-tree-id18757 . -1) (undo-tree-id18758 . -1) (undo-tree-id18759 . -1) (undo-tree-id18760 . -1) (undo-tree-id18761 . -1) (undo-tree-id18762 . -1) (undo-tree-id18763 . -1) (undo-tree-id18764 . -1) (undo-tree-id18765 . -1) (undo-tree-id18766 . -1) (undo-tree-id18767 . -1) (undo-tree-id18768 . -1) (undo-tree-id18769 . -1) (undo-tree-id18770 . -1) (undo-tree-id18771 . -1) (undo-tree-id18772 . -1) (undo-tree-id18773 . -1) (undo-tree-id18774 . -1) (undo-tree-id18775 . -1) (undo-tree-id18776 . -1) (undo-tree-id18777 . -1) (undo-tree-id18778 . -1) (undo-tree-id18779 . -1) (undo-tree-id18780 . -1) (undo-tree-id18781 . -1) (undo-tree-id18782 . -1) (undo-tree-id18783 . -1) (undo-tree-id18784 . -1) (undo-tree-id18785 . -1) (undo-tree-id18786 . -1) (undo-tree-id18787 . -1) (undo-tree-id18788 . -1) (undo-tree-id18789 . -1) (undo-tree-id18790 . -1) (undo-tree-id18791 . -1) (undo-tree-id18792 . -1) (undo-tree-id18793 . -1) (undo-tree-id18794 . -1) (undo-tree-id18795 . -1) (undo-tree-id18796 . -1) (undo-tree-id18797 . -1) (undo-tree-id18798 . -1) (undo-tree-id18799 . -1) (undo-tree-id18800 . -1) (undo-tree-id18801 . -1) (undo-tree-id18802 . -1) (undo-tree-id18803 . -1) (undo-tree-id18804 . -1) (undo-tree-id18805 . -1) (undo-tree-id18806 . -1) (undo-tree-id18807 . -1) (undo-tree-id18808 . -1) (undo-tree-id18809 . -1) (undo-tree-id18810 . -1) (undo-tree-id18811 . -1) (undo-tree-id18812 . -1) (undo-tree-id18813 . -1) (undo-tree-id18814 . -1) (undo-tree-id18815 . -1) (undo-tree-id18816 . -1) (undo-tree-id18817 . -1) (undo-tree-id18818 . -1) (undo-tree-id18819 . -1) (undo-tree-id18820 . -1) (undo-tree-id18821 . -1) (undo-tree-id18822 . -1) (undo-tree-id18823 . -1) (undo-tree-id18824 . -1) (undo-tree-id18825 . -1) (undo-tree-id18826 . -1) (undo-tree-id18827 . -1) (undo-tree-id18828 . -1) (undo-tree-id18829 . -1) (undo-tree-id18830 . -1) (undo-tree-id18831 . -1) (undo-tree-id18832 . -1) (undo-tree-id18833 . -1) (undo-tree-id18834 . -1) (undo-tree-id18835 . -1) (undo-tree-id18836 . -1) (undo-tree-id18837 . -1) (undo-tree-id18838 . -1) (undo-tree-id18839 . -1) (undo-tree-id18840 . -1) (undo-tree-id18841 . -1) (undo-tree-id18842 . -1) (undo-tree-id18843 . -1) (undo-tree-id18844 . -1) (undo-tree-id18845 . -1) (undo-tree-id18846 . -1) (undo-tree-id18847 . -1) (undo-tree-id18848 . -1) (undo-tree-id18849 . -1) (undo-tree-id18850 . -1) (undo-tree-id18851 . -1) (undo-tree-id18852 . -1) (undo-tree-id18853 . -1) (undo-tree-id18854 . -1) (undo-tree-id18855 . -1) (undo-tree-id18856 . -1) (undo-tree-id18857 . -1) (undo-tree-id18858 . -1) (undo-tree-id18859 . -1) (undo-tree-id18860 . -1) (undo-tree-id18861 . -1) (undo-tree-id18862 . -1) (undo-tree-id18863 . -1) (undo-tree-id18864 . -1) (undo-tree-id18865 . -1) (undo-tree-id18866 . -1) (undo-tree-id18867 . -1) (undo-tree-id18868 . -1) (undo-tree-id18869 . -1) (undo-tree-id18870 . -1) (undo-tree-id18871 . -1) (undo-tree-id18872 . -1) (undo-tree-id18873 . -1) (undo-tree-id18874 . -1) (undo-tree-id18875 . -1) (undo-tree-id18876 . -1) (undo-tree-id18877 . -1) (undo-tree-id18878 . -1) (undo-tree-id18879 . -1) (undo-tree-id18880 . -1) (undo-tree-id18881 . -1) (undo-tree-id18882 . -1) (undo-tree-id18883 . -1) (undo-tree-id18884 . -1) (undo-tree-id18885 . -1) (undo-tree-id18886 . -1) (undo-tree-id18887 . -1) (undo-tree-id18888 . -1) (undo-tree-id18889 . -1) (undo-tree-id18890 . -1) (undo-tree-id18891 . -1) (undo-tree-id18892 . -1) (undo-tree-id18893 . -1) (undo-tree-id18894 . -1) (undo-tree-id18895 . -1) (undo-tree-id18896 . -1) (undo-tree-id18897 . -1) (undo-tree-id18898 . -1) (undo-tree-id18899 . -1) (undo-tree-id18900 . -1) (undo-tree-id18901 . -1) (undo-tree-id18902 . -1) (undo-tree-id18903 . -1) (undo-tree-id18904 . -1) (undo-tree-id18905 . -1) (undo-tree-id18906 . -1) (undo-tree-id18907 . -1) (undo-tree-id18908 . -1) (undo-tree-id18909 . -1) (undo-tree-id18910 . -1) (undo-tree-id18911 . -1) (undo-tree-id18912 . -1) (undo-tree-id18913 . -1) (undo-tree-id18914 . -1) (undo-tree-id18915 . -1) (undo-tree-id18916 . -1) (undo-tree-id18917 . -1) (undo-tree-id18918 . -1) (undo-tree-id18919 . -1) (undo-tree-id18920 . -1) (undo-tree-id18921 . -1) (undo-tree-id18922 . -1) (undo-tree-id18923 . -1) (undo-tree-id18924 . -1) (undo-tree-id18925 . -1) (undo-tree-id18926 . -1) (undo-tree-id18927 . -1) (undo-tree-id18928 . -1) (undo-tree-id18929 . -1) (undo-tree-id18930 . -1) (undo-tree-id18931 . -1) (undo-tree-id18932 . -1) (undo-tree-id18933 . -1) (undo-tree-id18934 . -1) (undo-tree-id18935 . -1) (undo-tree-id18936 . -1) (undo-tree-id18937 . -1) (undo-tree-id18938 . -1) (undo-tree-id18939 . -1) 3447) nil (25934 12199 66649 809000) 0 nil])
([nil nil ((#("                # print('inputs', inputs.shape)
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t)) . -2864) (undo-tree-id16084 . -48) 2912) ((2864 . 2912)) (25934 12163 402840 301000) 0 nil])
([nil nil ((#("                # print('inputs', inputs.shape)
                # print(self.Wab[i_pop][j_pop])
                # print('rates', r_pres.shape)
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 64 (fontified t) 64 66 (face font-lock-comment-delimiter-face fontified t) 66 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 76 (face font-lock-comment-face fontified t) 76 80 (face font-lock-comment-face fontified t) 80 81 (face font-lock-comment-face fontified t) 81 86 (face font-lock-comment-face fontified t) 86 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 96 (face font-lock-comment-face fontified t) 96 112 (fontified t) 112 114 (face font-lock-comment-delimiter-face fontified t) 114 119 (face font-lock-comment-face fontified t) 119 120 (face font-lock-comment-face fontified t) 120 127 (face font-lock-comment-face fontified t) 127 129 (face font-lock-comment-face fontified t) 129 141 (face font-lock-comment-face fontified t) 141 142 (face font-lock-comment-face fontified t) 142 143 (face font-lock-comment-face fontified t rear-nonsticky t)) . -2951) (undo-tree-id19521 . -94) (undo-tree-id19522 . -143) (undo-tree-id19523 . -143) (undo-tree-id19524 . -129) (undo-tree-id19525 . -129) (undo-tree-id19526 . -87) (undo-tree-id19527 . -87) (undo-tree-id19528 . -87) (undo-tree-id19529 . -87) (undo-tree-id19530 . -87) (undo-tree-id19531 . -87) (undo-tree-id19532 . -87) (undo-tree-id19533 . -16) (undo-tree-id19534 . -16) (undo-tree-id19535 . -16) (undo-tree-id19536 . -16) (undo-tree-id19537 . -16) (undo-tree-id19538 . -16) (undo-tree-id19539 . -16) (undo-tree-id19540 . -16) (undo-tree-id19541 . -16) (undo-tree-id19542 . -16) (undo-tree-id19543 . -16) (undo-tree-id19544 . -16) (undo-tree-id19545 . -16) (undo-tree-id19546 . -16) (undo-tree-id19547 . -16) (undo-tree-id19548 . -16) (undo-tree-id19549 . -16) (undo-tree-id19550 . -16) (undo-tree-id19551 . -16) (undo-tree-id19552 . -16) (undo-tree-id19553 . -16) (undo-tree-id19554 . -16) (undo-tree-id19555 . -16) (undo-tree-id19556 . -16) (undo-tree-id19557 . -16) (undo-tree-id19558 . -16) (undo-tree-id19559 . -16) (undo-tree-id19560 . -16) (undo-tree-id19561 . -16) (undo-tree-id19562 . -16) (undo-tree-id19563 . -48) (undo-tree-id19564 . -48) (undo-tree-id19565 . -48) (undo-tree-id19566 . -48) (undo-tree-id19567 . -48) (undo-tree-id19568 . -48) (undo-tree-id19569 . -48) (undo-tree-id19570 . -48) (undo-tree-id19571 . -48) (undo-tree-id19572 . -48) (undo-tree-id19573 . -48) (undo-tree-id19574 . -48) (undo-tree-id19575 . -48) (undo-tree-id19576 . -48) (undo-tree-id19577 . -48) (undo-tree-id19578 . -48) (undo-tree-id19579 . -48) (undo-tree-id19580 . -48) (undo-tree-id19581 . -48) (undo-tree-id19582 . -48) (undo-tree-id19583 . -48) (undo-tree-id19584 . -48) (undo-tree-id19585 . -48) (undo-tree-id19586 . -48) (undo-tree-id19587 . -96) (undo-tree-id19588 . -48) (undo-tree-id19589 . -96) (undo-tree-id19590 . -96) (undo-tree-id19591 . -96) (undo-tree-id19592 . -96) (undo-tree-id19593 . -96) (undo-tree-id19594 . -96) (undo-tree-id19595 . -96) (undo-tree-id19596 . -96) (undo-tree-id19597 . -96) (undo-tree-id19598 . -96) (undo-tree-id19599 . -96) (undo-tree-id19600 . -96) (undo-tree-id19601 . -96) (undo-tree-id19602 . -96) (undo-tree-id19603 . -96) (undo-tree-id19604 . -96) (undo-tree-id19605 . -96) (undo-tree-id19606 . -96) (undo-tree-id19607 . -96) (undo-tree-id19608 . -96) (undo-tree-id19609 . -96) (undo-tree-id19610 . -96) (undo-tree-id19611 . -96) (undo-tree-id19612 . -96) (undo-tree-id19613 . -96) (undo-tree-id19614 . -96) (undo-tree-id19615 . -96) (undo-tree-id19616 . -96) (undo-tree-id19617 . -96) (undo-tree-id19618 . -96) (undo-tree-id19619 . -96) (undo-tree-id19620 . -96) (undo-tree-id19621 . -96) (undo-tree-id19622 . -96) (undo-tree-id19623 . -96) (undo-tree-id19624 . -143) (undo-tree-id19625 . -143) (undo-tree-id19626 . -96) (undo-tree-id19627 . -143) (undo-tree-id19628 . -143) (undo-tree-id19629 . -143) (undo-tree-id19630 . -143) (undo-tree-id19631 . -143) (undo-tree-id19632 . -143) (undo-tree-id19633 . -143) (undo-tree-id19634 . -143) (undo-tree-id19635 . -143) (undo-tree-id19636 . -143) (undo-tree-id19637 . -143) (undo-tree-id19638 . -143) (undo-tree-id19639 . -143) (undo-tree-id19640 . -143) (undo-tree-id19641 . -143) (undo-tree-id19642 . -143) (undo-tree-id19643 . -143) (undo-tree-id19644 . -143) (undo-tree-id19645 . -143) (undo-tree-id19646 . -143) (undo-tree-id19647 . -143) (undo-tree-id19648 . -143) (undo-tree-id19649 . -143) (undo-tree-id19650 . -143) (undo-tree-id19651 . -143) (undo-tree-id19652 . -143) (undo-tree-id19653 . -143) (undo-tree-id19654 . -143) (undo-tree-id19655 . -143) (undo-tree-id19656 . -143) 3094 (t 25934 12199 99692 155000)) nil (25934 12210 103785 549000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3299) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) (undo-tree-id16112 . -1) (undo-tree-id16113 . -1) (undo-tree-id16114 . -1) (undo-tree-id16115 . -1) (undo-tree-id16116 . -1) (undo-tree-id16117 . -1) (undo-tree-id16118 . -1) (undo-tree-id16119 . -1) (undo-tree-id16120 . -1) (undo-tree-id16121 . -1) (undo-tree-id16122 . -1) (undo-tree-id16123 . -1) (undo-tree-id16124 . -1) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (undo-tree-id16430 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3300) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (undo-tree-id16478 . -1) (undo-tree-id16479 . -1) (undo-tree-id16480 . -1) (undo-tree-id16481 . -1) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) (undo-tree-id16573 . -1) (undo-tree-id16574 . -1) (undo-tree-id16575 . -1) (undo-tree-id16576 . -1) (undo-tree-id16577 . -1) (undo-tree-id16578 . -1) (undo-tree-id16579 . -1) (undo-tree-id16580 . -1) (undo-tree-id16581 . -1) (undo-tree-id16582 . -1) (undo-tree-id16583 . -1) (undo-tree-id16584 . -1) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (undo-tree-id16634 . -1) (undo-tree-id16635 . -1) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (undo-tree-id16638 . -1) (undo-tree-id16639 . -1) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) (undo-tree-id16704 . -1) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (undo-tree-id16711 . -1) (undo-tree-id16712 . -1) (undo-tree-id16713 . -1) (undo-tree-id16714 . -1) (undo-tree-id16715 . -1) (undo-tree-id16716 . -1) (undo-tree-id16717 . -1) (undo-tree-id16718 . -1) (undo-tree-id16719 . -1) (undo-tree-id16720 . -1) (undo-tree-id16721 . -1) (undo-tree-id16722 . -1) (undo-tree-id16723 . -1) (undo-tree-id16724 . -1) (undo-tree-id16725 . -1) (undo-tree-id16726 . -1) (undo-tree-id16727 . -1) (undo-tree-id16728 . -1) (undo-tree-id16729 . -1) (undo-tree-id16730 . -1) (undo-tree-id16731 . -1) (undo-tree-id16732 . -1) (undo-tree-id16733 . -1) (undo-tree-id16734 . -1) (undo-tree-id16735 . -1) (undo-tree-id16736 . -1) (#("p" 0 1 (fontified t)) . -3301) (undo-tree-id16737 . -1) (undo-tree-id16738 . -1) (undo-tree-id16739 . -1) (undo-tree-id16740 . -1) (undo-tree-id16741 . -1) (undo-tree-id16742 . -1) (undo-tree-id16743 . -1) (undo-tree-id16744 . -1) (undo-tree-id16745 . -1) (undo-tree-id16746 . -1) (undo-tree-id16747 . -1) (undo-tree-id16748 . -1) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . -1) (undo-tree-id16774 . -1) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) (undo-tree-id16930 . -1) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) (undo-tree-id16939 . -1) (undo-tree-id16940 . -1) (undo-tree-id16941 . -1) (undo-tree-id16942 . -1) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (undo-tree-id16975 . -1) (undo-tree-id16976 . -1) (undo-tree-id16977 . -1) (undo-tree-id16978 . -1) (undo-tree-id16979 . -1) (undo-tree-id16980 . -1) (undo-tree-id16981 . -1) (undo-tree-id16982 . -1) (undo-tree-id16983 . -1) (undo-tree-id16984 . -1) (undo-tree-id16985 . -1) (undo-tree-id16986 . -1) (undo-tree-id16987 . -1) (undo-tree-id16988 . -1) (undo-tree-id16989 . -1) (undo-tree-id16990 . -1) (undo-tree-id16991 . -1) (undo-tree-id16992 . -1) (undo-tree-id16993 . -1) (undo-tree-id16994 . -1) (undo-tree-id16995 . -1) (undo-tree-id16996 . -1) (undo-tree-id16997 . -1) (undo-tree-id16998 . -1) (undo-tree-id16999 . -1) (undo-tree-id17000 . -1) (undo-tree-id17001 . -1) (undo-tree-id17002 . -1) (undo-tree-id17003 . -1) (undo-tree-id17004 . -1) (#("u" 0 1 (fontified t)) . -3302) (undo-tree-id17005 . -1) (undo-tree-id17006 . -1) (undo-tree-id17007 . -1) (undo-tree-id17008 . -1) (undo-tree-id17009 . -1) (undo-tree-id17010 . -1) (undo-tree-id17011 . -1) (undo-tree-id17012 . -1) (undo-tree-id17013 . -1) (undo-tree-id17014 . -1) (undo-tree-id17015 . -1) (undo-tree-id17016 . -1) (undo-tree-id17017 . -1) (undo-tree-id17018 . -1) (undo-tree-id17019 . -1) (undo-tree-id17020 . -1) (undo-tree-id17021 . -1) (undo-tree-id17022 . -1) (undo-tree-id17023 . -1) (undo-tree-id17024 . -1) (undo-tree-id17025 . -1) (undo-tree-id17026 . -1) (undo-tree-id17027 . -1) (undo-tree-id17028 . -1) (undo-tree-id17029 . -1) (undo-tree-id17030 . -1) (undo-tree-id17031 . -1) (undo-tree-id17032 . -1) (undo-tree-id17033 . -1) (undo-tree-id17034 . -1) (undo-tree-id17035 . -1) (undo-tree-id17036 . -1) (undo-tree-id17037 . -1) (undo-tree-id17038 . -1) (undo-tree-id17039 . -1) (undo-tree-id17040 . -1) (undo-tree-id17041 . -1) (undo-tree-id17042 . -1) (undo-tree-id17043 . -1) (undo-tree-id17044 . -1) (undo-tree-id17045 . -1) (undo-tree-id17046 . -1) (undo-tree-id17047 . -1) (undo-tree-id17048 . -1) (undo-tree-id17049 . -1) (undo-tree-id17050 . -1) (undo-tree-id17051 . -1) (undo-tree-id17052 . -1) (undo-tree-id17053 . -1) (undo-tree-id17054 . -1) (undo-tree-id17055 . -1) (undo-tree-id17056 . -1) (undo-tree-id17057 . -1) (undo-tree-id17058 . -1) (undo-tree-id17059 . -1) (undo-tree-id17060 . -1) (undo-tree-id17061 . -1) (undo-tree-id17062 . -1) (undo-tree-id17063 . -1) (undo-tree-id17064 . -1) (undo-tree-id17065 . -1) (undo-tree-id17066 . -1) (undo-tree-id17067 . -1) (undo-tree-id17068 . -1) (undo-tree-id17069 . -1) (undo-tree-id17070 . -1) (undo-tree-id17071 . -1) (undo-tree-id17072 . -1) (undo-tree-id17073 . -1) (undo-tree-id17074 . -1) (undo-tree-id17075 . -1) (undo-tree-id17076 . -1) (undo-tree-id17077 . -1) (undo-tree-id17078 . -1) (undo-tree-id17079 . -1) (undo-tree-id17080 . -1) (undo-tree-id17081 . -1) (undo-tree-id17082 . -1) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1) (undo-tree-id17087 . -1) (undo-tree-id17088 . -1) (undo-tree-id17089 . -1) (undo-tree-id17090 . -1) (undo-tree-id17091 . -1) (undo-tree-id17092 . -1) (undo-tree-id17093 . -1) (undo-tree-id17094 . -1) (undo-tree-id17095 . -1) (undo-tree-id17096 . -1) (undo-tree-id17097 . -1) (undo-tree-id17098 . -1) (undo-tree-id17099 . -1) (undo-tree-id17100 . -1) (undo-tree-id17101 . -1) (undo-tree-id17102 . -1) (undo-tree-id17103 . -1) (undo-tree-id17104 . -1) (undo-tree-id17105 . -1) (undo-tree-id17106 . -1) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) (undo-tree-id17109 . -1) (undo-tree-id17110 . -1) (undo-tree-id17111 . -1) (undo-tree-id17112 . -1) (undo-tree-id17113 . -1) (undo-tree-id17114 . -1) (undo-tree-id17115 . -1) (undo-tree-id17116 . -1) (undo-tree-id17117 . -1) (undo-tree-id17118 . -1) (undo-tree-id17119 . -1) (undo-tree-id17120 . -1) (undo-tree-id17121 . -1) (undo-tree-id17122 . -1) (undo-tree-id17123 . -1) (undo-tree-id17124 . -1) (undo-tree-id17125 . -1) (undo-tree-id17126 . -1) (undo-tree-id17127 . -1) (undo-tree-id17128 . -1) (undo-tree-id17129 . -1) (undo-tree-id17130 . -1) (undo-tree-id17131 . -1) (undo-tree-id17132 . -1) (undo-tree-id17133 . -1) (undo-tree-id17134 . -1) (undo-tree-id17135 . -1) (undo-tree-id17136 . -1) (undo-tree-id17137 . -1) (undo-tree-id17138 . -1) (undo-tree-id17139 . -1) (undo-tree-id17140 . -1) (undo-tree-id17141 . -1) (undo-tree-id17142 . -1) (undo-tree-id17143 . -1) (undo-tree-id17144 . -1) (undo-tree-id17145 . -1) (undo-tree-id17146 . -1) (undo-tree-id17147 . -1) (undo-tree-id17148 . -1) (undo-tree-id17149 . -1) (undo-tree-id17150 . -1) (undo-tree-id17151 . -1) (undo-tree-id17152 . -1) (undo-tree-id17153 . -1) (undo-tree-id17154 . -1) (undo-tree-id17155 . -1) (undo-tree-id17156 . -1) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) (undo-tree-id17167 . -1) (undo-tree-id17168 . -1) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) (undo-tree-id17173 . -1) (undo-tree-id17174 . -1) (undo-tree-id17175 . -1) (undo-tree-id17176 . -1) (undo-tree-id17177 . -1) (undo-tree-id17178 . -1) (undo-tree-id17179 . -1) (undo-tree-id17180 . -1) (undo-tree-id17181 . -1) (undo-tree-id17182 . -1) (undo-tree-id17183 . -1) (undo-tree-id17184 . -1) (undo-tree-id17185 . -1) (undo-tree-id17186 . -1) (undo-tree-id17187 . -1) (undo-tree-id17188 . -1) (undo-tree-id17189 . -1) (undo-tree-id17190 . -1) (undo-tree-id17191 . -1) (undo-tree-id17192 . -1) (undo-tree-id17193 . -1) (undo-tree-id17194 . -1) (undo-tree-id17195 . -1) (undo-tree-id17196 . -1) (undo-tree-id17197 . -1) (undo-tree-id17198 . -1) (undo-tree-id17199 . -1) (undo-tree-id17200 . -1) (undo-tree-id17201 . -1) (undo-tree-id17202 . -1) (undo-tree-id17203 . -1) (undo-tree-id17204 . -1) (undo-tree-id17205 . -1) (undo-tree-id17206 . -1) (undo-tree-id17207 . -1) (undo-tree-id17208 . -1) (undo-tree-id17209 . -1) (undo-tree-id17210 . -1) (undo-tree-id17211 . -1) (undo-tree-id17212 . -1) (undo-tree-id17213 . -1) (undo-tree-id17214 . -1) (undo-tree-id17215 . -1) (undo-tree-id17216 . -1) (undo-tree-id17217 . -1) (undo-tree-id17218 . -1) (undo-tree-id17219 . -1) (undo-tree-id17220 . -1) (undo-tree-id17221 . -1) (undo-tree-id17222 . -1) (undo-tree-id17223 . -1) (undo-tree-id17224 . -1) (undo-tree-id17225 . -1) (undo-tree-id17226 . -1) (undo-tree-id17227 . -1) (undo-tree-id17228 . -1) (undo-tree-id17229 . -1) (undo-tree-id17230 . -1) (undo-tree-id17231 . -1) (undo-tree-id17232 . -1) (undo-tree-id17233 . -1) (undo-tree-id17234 . -1) (undo-tree-id17235 . -1) (undo-tree-id17236 . -1) (undo-tree-id17237 . -1) (undo-tree-id17238 . -1) (undo-tree-id17239 . -1) (undo-tree-id17240 . -1) (undo-tree-id17241 . -1) (undo-tree-id17242 . -1) (undo-tree-id17243 . -1) (undo-tree-id17244 . -1) (undo-tree-id17245 . -1) (undo-tree-id17246 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3303) (undo-tree-id17247 . -1) (undo-tree-id17248 . -1) (undo-tree-id17249 . -1) (undo-tree-id17250 . -1) (undo-tree-id17251 . -1) (undo-tree-id17252 . -1) (undo-tree-id17253 . -1) (undo-tree-id17254 . -1) (undo-tree-id17255 . -1) (undo-tree-id17256 . -1) (undo-tree-id17257 . -1) (undo-tree-id17258 . -1) (undo-tree-id17259 . -1) (undo-tree-id17260 . -1) (undo-tree-id17261 . -1) (undo-tree-id17262 . -1) (undo-tree-id17263 . -1) (undo-tree-id17264 . -1) (undo-tree-id17265 . -1) (undo-tree-id17266 . -1) (undo-tree-id17267 . -1) (undo-tree-id17268 . -1) (undo-tree-id17269 . -1) (undo-tree-id17270 . -1) (undo-tree-id17271 . -1) (undo-tree-id17272 . -1) (undo-tree-id17273 . -1) (undo-tree-id17274 . -1) (undo-tree-id17275 . -1) (undo-tree-id17276 . -1) (undo-tree-id17277 . -1) (undo-tree-id17278 . -1) (undo-tree-id17279 . -1) (undo-tree-id17280 . -1) (undo-tree-id17281 . -1) (undo-tree-id17282 . -1) (undo-tree-id17283 . -1) (undo-tree-id17284 . -1) (undo-tree-id17285 . -1) (undo-tree-id17286 . -1) (undo-tree-id17287 . -1) (undo-tree-id17288 . -1) (undo-tree-id17289 . -1) (undo-tree-id17290 . -1) (undo-tree-id17291 . -1) (undo-tree-id17292 . -1) (undo-tree-id17293 . -1) (undo-tree-id17294 . -1) (undo-tree-id17295 . -1) (undo-tree-id17296 . -1) (undo-tree-id17297 . -1) (undo-tree-id17298 . -1) (undo-tree-id17299 . -1) (undo-tree-id17300 . -1) (undo-tree-id17301 . -1) (undo-tree-id17302 . -1) (undo-tree-id17303 . -1) (undo-tree-id17304 . -1) (undo-tree-id17305 . -1) (undo-tree-id17306 . -1) (undo-tree-id17307 . -1) (undo-tree-id17308 . -1) (undo-tree-id17309 . -1) (undo-tree-id17310 . -1) (undo-tree-id17311 . -1) (undo-tree-id17312 . -1) (undo-tree-id17313 . -1) (undo-tree-id17314 . -1) (undo-tree-id17315 . -1) (undo-tree-id17316 . -1) (undo-tree-id17317 . -1) (undo-tree-id17318 . -1) (undo-tree-id17319 . -1) (undo-tree-id17320 . -1) (undo-tree-id17321 . -1) (undo-tree-id17322 . -1) (undo-tree-id17323 . -1) (undo-tree-id17324 . -1) (undo-tree-id17325 . -1) (undo-tree-id17326 . -1) (undo-tree-id17327 . -1) (undo-tree-id17328 . -1) (undo-tree-id17329 . -1) (undo-tree-id17330 . -1) (undo-tree-id17331 . -1) (undo-tree-id17332 . -1) (undo-tree-id17333 . -1) (undo-tree-id17334 . -1) (undo-tree-id17335 . -1) (undo-tree-id17336 . -1) (undo-tree-id17337 . -1) (undo-tree-id17338 . -1) (undo-tree-id17339 . -1) (undo-tree-id17340 . -1) (undo-tree-id17341 . -1) (undo-tree-id17342 . -1) (undo-tree-id17343 . -1) (undo-tree-id17344 . -1) (undo-tree-id17345 . -1) (undo-tree-id17346 . -1) (undo-tree-id17347 . -1) (undo-tree-id17348 . -1) (undo-tree-id17349 . -1) (undo-tree-id17350 . -1) (undo-tree-id17351 . -1) (undo-tree-id17352 . -1) (undo-tree-id17353 . -1) (undo-tree-id17354 . -1) (undo-tree-id17355 . -1) (undo-tree-id17356 . -1) (undo-tree-id17357 . -1) (undo-tree-id17358 . -1) (undo-tree-id17359 . -1) (undo-tree-id17360 . -1) (undo-tree-id17361 . -1) (undo-tree-id17362 . -1) (undo-tree-id17363 . -1) (undo-tree-id17364 . -1) (undo-tree-id17365 . -1) (undo-tree-id17366 . -1) (undo-tree-id17367 . -1) (undo-tree-id17368 . -1) (undo-tree-id17369 . -1) (undo-tree-id17370 . -1) (undo-tree-id17371 . -1) (undo-tree-id17372 . -1) (undo-tree-id17373 . -1) (undo-tree-id17374 . -1) (undo-tree-id17375 . -1) (undo-tree-id17376 . -1) (undo-tree-id17377 . -1) (undo-tree-id17378 . -1) (undo-tree-id17379 . -1) (undo-tree-id17380 . -1) (undo-tree-id17381 . -1) (undo-tree-id17382 . -1) (undo-tree-id17383 . -1) (undo-tree-id17384 . -1) (undo-tree-id17385 . -1) (undo-tree-id17386 . -1) (undo-tree-id17387 . -1) (undo-tree-id17388 . -1) (undo-tree-id17389 . -1) (undo-tree-id17390 . -1) (undo-tree-id17391 . -1) (undo-tree-id17392 . -1) (undo-tree-id17393 . -1) (undo-tree-id17394 . -1) (undo-tree-id17395 . -1) (undo-tree-id17396 . -1) (undo-tree-id17397 . -1) (undo-tree-id17398 . -1) (undo-tree-id17399 . -1) (undo-tree-id17400 . -1) (undo-tree-id17401 . -1) (undo-tree-id17402 . -1) (undo-tree-id17403 . -1) (undo-tree-id17404 . -1) (undo-tree-id17405 . -1) (undo-tree-id17406 . -1) (undo-tree-id17407 . -1) (undo-tree-id17408 . -1) (undo-tree-id17409 . -1) (undo-tree-id17410 . -1) (undo-tree-id17411 . -1) (undo-tree-id17412 . -1) (undo-tree-id17413 . -1) (undo-tree-id17414 . -1) (undo-tree-id17415 . -1) (undo-tree-id17416 . -1) (undo-tree-id17417 . -1) (undo-tree-id17418 . -1) (undo-tree-id17419 . -1) (undo-tree-id17420 . -1) (undo-tree-id17421 . -1) (undo-tree-id17422 . -1) (undo-tree-id17423 . -1) (undo-tree-id17424 . -1) (undo-tree-id17425 . -1) (undo-tree-id17426 . -1) (undo-tree-id17427 . -1) (undo-tree-id17428 . -1) (undo-tree-id17429 . -1) (undo-tree-id17430 . -1) (undo-tree-id17431 . -1) (undo-tree-id17432 . -1) (undo-tree-id17433 . -1) (undo-tree-id17434 . -1) (undo-tree-id17435 . -1) (undo-tree-id17436 . -1) (undo-tree-id17437 . -1) (undo-tree-id17438 . -1) (undo-tree-id17439 . -1) (undo-tree-id17440 . -1) (undo-tree-id17441 . -1) (undo-tree-id17442 . -1) (undo-tree-id17443 . -1) (undo-tree-id17444 . -1) (undo-tree-id17445 . -1) (undo-tree-id17446 . -1) (undo-tree-id17447 . -1) (undo-tree-id17448 . -1) (undo-tree-id17449 . -1) (undo-tree-id17450 . -1) (undo-tree-id17451 . -1) (undo-tree-id17452 . -1) (undo-tree-id17453 . -1) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (undo-tree-id17460 . -1) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (undo-tree-id17470 . -1) (undo-tree-id17471 . -1) (undo-tree-id17472 . -1) (undo-tree-id17473 . -1) (undo-tree-id17474 . -1) (undo-tree-id17475 . -1) (undo-tree-id17476 . -1) (undo-tree-id17477 . -1) (undo-tree-id17478 . -1) (#("s" 0 1 (fontified t)) . -3304) (undo-tree-id17479 . -1) (undo-tree-id17480 . -1) (undo-tree-id17481 . -1) (undo-tree-id17482 . -1) (undo-tree-id17483 . -1) (undo-tree-id17484 . -1) (undo-tree-id17485 . -1) (undo-tree-id17486 . -1) (undo-tree-id17487 . -1) (undo-tree-id17488 . -1) (undo-tree-id17489 . -1) (undo-tree-id17490 . -1) (undo-tree-id17491 . -1) (undo-tree-id17492 . -1) (undo-tree-id17493 . -1) (undo-tree-id17494 . -1) (undo-tree-id17495 . -1) (undo-tree-id17496 . -1) (undo-tree-id17497 . -1) (undo-tree-id17498 . -1) (undo-tree-id17499 . -1) (undo-tree-id17500 . -1) (undo-tree-id17501 . -1) (undo-tree-id17502 . -1) (undo-tree-id17503 . -1) (undo-tree-id17504 . -1) (undo-tree-id17505 . -1) (undo-tree-id17506 . -1) (undo-tree-id17507 . -1) (undo-tree-id17508 . -1) (undo-tree-id17509 . -1) (undo-tree-id17510 . -1) (undo-tree-id17511 . -1) (undo-tree-id17512 . -1) (undo-tree-id17513 . -1) (undo-tree-id17514 . -1) (undo-tree-id17515 . -1) (undo-tree-id17516 . -1) (undo-tree-id17517 . -1) (undo-tree-id17518 . -1) (undo-tree-id17519 . -1) (undo-tree-id17520 . -1) (undo-tree-id17521 . -1) (undo-tree-id17522 . -1) (undo-tree-id17523 . -1) (undo-tree-id17524 . -1) (undo-tree-id17525 . -1) (undo-tree-id17526 . -1) (undo-tree-id17527 . -1) (undo-tree-id17528 . -1) (undo-tree-id17529 . -1) (undo-tree-id17530 . -1) (undo-tree-id17531 . -1) (undo-tree-id17532 . -1) (undo-tree-id17533 . -1) (undo-tree-id17534 . -1) (undo-tree-id17535 . -1) (undo-tree-id17536 . -1) (undo-tree-id17537 . -1) (undo-tree-id17538 . -1) (undo-tree-id17539 . -1) (undo-tree-id17540 . -1) (undo-tree-id17541 . -1) (undo-tree-id17542 . -1) (undo-tree-id17543 . -1) (undo-tree-id17544 . -1) (undo-tree-id17545 . -1) (undo-tree-id17546 . -1) (undo-tree-id17547 . -1) (undo-tree-id17548 . -1) (undo-tree-id17549 . -1) (undo-tree-id17550 . -1) (undo-tree-id17551 . -1) (undo-tree-id17552 . -1) (undo-tree-id17553 . -1) (undo-tree-id17554 . -1) (undo-tree-id17555 . -1) (undo-tree-id17556 . -1) (undo-tree-id17557 . -1) (undo-tree-id17558 . -1) (undo-tree-id17559 . -1) (undo-tree-id17560 . -1) (undo-tree-id17561 . -1) (undo-tree-id17562 . -1) (undo-tree-id17563 . -1) (undo-tree-id17564 . -1) (undo-tree-id17565 . -1) (undo-tree-id17566 . -1) (undo-tree-id17567 . -1) (undo-tree-id17568 . -1) (undo-tree-id17569 . -1) (undo-tree-id17570 . -1) (undo-tree-id17571 . -1) (undo-tree-id17572 . -1) (undo-tree-id17573 . -1) (undo-tree-id17574 . -1) (undo-tree-id17575 . -1) (undo-tree-id17576 . -1) (undo-tree-id17577 . -1) (undo-tree-id17578 . -1) (undo-tree-id17579 . -1) (undo-tree-id17580 . -1) (undo-tree-id17581 . -1) (undo-tree-id17582 . -1) (undo-tree-id17583 . -1) (undo-tree-id17584 . -1) (undo-tree-id17585 . -1) (undo-tree-id17586 . -1) (undo-tree-id17587 . -1) (undo-tree-id17588 . -1) (undo-tree-id17589 . -1) (undo-tree-id17590 . -1) (undo-tree-id17591 . -1) (undo-tree-id17592 . -1) (undo-tree-id17593 . -1) (undo-tree-id17594 . -1) (undo-tree-id17595 . -1) (undo-tree-id17596 . -1) (undo-tree-id17597 . -1) (undo-tree-id17598 . -1) (undo-tree-id17599 . -1) (undo-tree-id17600 . -1) (undo-tree-id17601 . -1) (undo-tree-id17602 . -1) (undo-tree-id17603 . -1) (undo-tree-id17604 . -1) (undo-tree-id17605 . -1) (undo-tree-id17606 . -1) (undo-tree-id17607 . -1) (undo-tree-id17608 . -1) (undo-tree-id17609 . -1) (undo-tree-id17610 . -1) (undo-tree-id17611 . -1) (undo-tree-id17612 . -1) (undo-tree-id17613 . -1) (undo-tree-id17614 . -1) (undo-tree-id17615 . -1) (undo-tree-id17616 . -1) (undo-tree-id17617 . -1) (undo-tree-id17618 . -1) (undo-tree-id17619 . -1) (undo-tree-id17620 . -1) (undo-tree-id17621 . -1) (undo-tree-id17622 . -1) (undo-tree-id17623 . -1) (undo-tree-id17624 . -1) (undo-tree-id17625 . -1) (undo-tree-id17626 . -1) (undo-tree-id17627 . -1) (undo-tree-id17628 . -1) (undo-tree-id17629 . -1) (undo-tree-id17630 . -1) (undo-tree-id17631 . -1) (undo-tree-id17632 . -1) (undo-tree-id17633 . -1) (undo-tree-id17634 . -1) (undo-tree-id17635 . -1) (undo-tree-id17636 . -1) (undo-tree-id17637 . -1) (undo-tree-id17638 . -1) (undo-tree-id17639 . -1) (undo-tree-id17640 . -1) (undo-tree-id17641 . -1) (undo-tree-id17642 . -1) (undo-tree-id17643 . -1) (undo-tree-id17644 . -1) (undo-tree-id17645 . -1) (undo-tree-id17646 . -1) (undo-tree-id17647 . -1) (undo-tree-id17648 . -1) (undo-tree-id17649 . -1) (undo-tree-id17650 . -1) (undo-tree-id17651 . -1) (undo-tree-id17652 . -1) (undo-tree-id17653 . -1) (undo-tree-id17654 . -1) (undo-tree-id17655 . -1) (undo-tree-id17656 . -1) (undo-tree-id17657 . -1) (undo-tree-id17658 . -1) (undo-tree-id17659 . -1) (undo-tree-id17660 . -1) (undo-tree-id17661 . -1) (undo-tree-id17662 . -1) (undo-tree-id17663 . -1) (undo-tree-id17664 . -1) (undo-tree-id17665 . -1) (undo-tree-id17666 . -1) (undo-tree-id17667 . -1) (undo-tree-id17668 . -1) (undo-tree-id17669 . -1) (undo-tree-id17670 . -1) (undo-tree-id17671 . -1) (undo-tree-id17672 . -1) (undo-tree-id17673 . -1) (undo-tree-id17674 . -1) (undo-tree-id17675 . -1) (undo-tree-id17676 . -1) (undo-tree-id17677 . -1) (undo-tree-id17678 . -1) (undo-tree-id17679 . -1) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (undo-tree-id17694 . -1) (undo-tree-id17695 . -1) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (undo-tree-id17698 . -1) (undo-tree-id17699 . -1) (undo-tree-id17700 . -1) (#(" " 0 1 (fontified t)) . -3305) (undo-tree-id17701 . -1) (undo-tree-id17702 . -1) (undo-tree-id17703 . -1) (undo-tree-id17704 . -1) (undo-tree-id17705 . -1) (undo-tree-id17706 . -1) (undo-tree-id17707 . -1) (undo-tree-id17708 . -1) (undo-tree-id17709 . -1) (undo-tree-id17710 . -1) (undo-tree-id17711 . -1) (undo-tree-id17712 . -1) (undo-tree-id17713 . -1) (undo-tree-id17714 . -1) (undo-tree-id17715 . -1) (undo-tree-id17716 . -1) (undo-tree-id17717 . -1) (undo-tree-id17718 . -1) (undo-tree-id17719 . -1) (undo-tree-id17720 . -1) (undo-tree-id17721 . -1) (undo-tree-id17722 . -1) (undo-tree-id17723 . -1) (undo-tree-id17724 . -1) (undo-tree-id17725 . -1) (undo-tree-id17726 . -1) (undo-tree-id17727 . -1) (undo-tree-id17728 . -1) (undo-tree-id17729 . -1) (undo-tree-id17730 . -1) (undo-tree-id17731 . -1) (undo-tree-id17732 . -1) (undo-tree-id17733 . -1) (undo-tree-id17734 . -1) (undo-tree-id17735 . -1) (undo-tree-id17736 . -1) (undo-tree-id17737 . -1) (undo-tree-id17738 . -1) (undo-tree-id17739 . -1) (undo-tree-id17740 . -1) (undo-tree-id17741 . -1) (undo-tree-id17742 . -1) (undo-tree-id17743 . -1) (undo-tree-id17744 . -1) (undo-tree-id17745 . -1) (undo-tree-id17746 . -1) (undo-tree-id17747 . -1) (undo-tree-id17748 . -1) (undo-tree-id17749 . -1) (undo-tree-id17750 . -1) (undo-tree-id17751 . -1) (undo-tree-id17752 . -1) (undo-tree-id17753 . -1) (undo-tree-id17754 . -1) (undo-tree-id17755 . -1) (undo-tree-id17756 . -1) (undo-tree-id17757 . -1) (undo-tree-id17758 . -1) (undo-tree-id17759 . -1) (undo-tree-id17760 . -1) (undo-tree-id17761 . -1) (undo-tree-id17762 . -1) (undo-tree-id17763 . -1) (undo-tree-id17764 . -1) (undo-tree-id17765 . -1) (undo-tree-id17766 . -1) (undo-tree-id17767 . -1) (undo-tree-id17768 . -1) (undo-tree-id17769 . -1) (undo-tree-id17770 . -1) (undo-tree-id17771 . -1) (undo-tree-id17772 . -1) (undo-tree-id17773 . -1) (undo-tree-id17774 . -1) (undo-tree-id17775 . -1) (undo-tree-id17776 . -1) (undo-tree-id17777 . -1) (undo-tree-id17778 . -1) (undo-tree-id17779 . -1) (undo-tree-id17780 . -1) (undo-tree-id17781 . -1) (undo-tree-id17782 . -1) (undo-tree-id17783 . -1) (undo-tree-id17784 . -1) (undo-tree-id17785 . -1) (undo-tree-id17786 . -1) (undo-tree-id17787 . -1) (undo-tree-id17788 . -1) (undo-tree-id17789 . -1) (undo-tree-id17790 . -1) (undo-tree-id17791 . -1) (undo-tree-id17792 . -1) (undo-tree-id17793 . -1) (undo-tree-id17794 . -1) (undo-tree-id17795 . -1) (undo-tree-id17796 . -1) (undo-tree-id17797 . -1) (undo-tree-id17798 . -1) (undo-tree-id17799 . -1) (undo-tree-id17800 . -1) (undo-tree-id17801 . -1) (undo-tree-id17802 . -1) (undo-tree-id17803 . -1) (undo-tree-id17804 . -1) (undo-tree-id17805 . -1) (undo-tree-id17806 . -1) (undo-tree-id17807 . -1) (undo-tree-id17808 . -1) (undo-tree-id17809 . -1) (undo-tree-id17810 . -1) (undo-tree-id17811 . -1) (undo-tree-id17812 . -1) (undo-tree-id17813 . -1) (undo-tree-id17814 . -1) (undo-tree-id17815 . -1) (undo-tree-id17816 . -1) (undo-tree-id17817 . -1) (undo-tree-id17818 . -1) (undo-tree-id17819 . -1) (undo-tree-id17820 . -1) (undo-tree-id17821 . -1) (undo-tree-id17822 . -1) (undo-tree-id17823 . -1) (undo-tree-id17824 . -1) (undo-tree-id17825 . -1) (undo-tree-id17826 . -1) (undo-tree-id17827 . -1) (undo-tree-id17828 . -1) (undo-tree-id17829 . -1) (undo-tree-id17830 . -1) (undo-tree-id17831 . -1) (undo-tree-id17832 . -1) (undo-tree-id17833 . -1) (undo-tree-id17834 . -1) (undo-tree-id17835 . -1) (undo-tree-id17836 . -1) (undo-tree-id17837 . -1) (undo-tree-id17838 . -1) (undo-tree-id17839 . -1) (undo-tree-id17840 . -1) (undo-tree-id17841 . -1) (undo-tree-id17842 . -1) (undo-tree-id17843 . -1) (undo-tree-id17844 . -1) (undo-tree-id17845 . -1) (undo-tree-id17846 . -1) (undo-tree-id17847 . -1) (undo-tree-id17848 . -1) (undo-tree-id17849 . -1) (undo-tree-id17850 . -1) (undo-tree-id17851 . -1) (undo-tree-id17852 . -1) (undo-tree-id17853 . -1) (undo-tree-id17854 . -1) (undo-tree-id17855 . -1) (undo-tree-id17856 . -1) (undo-tree-id17857 . -1) (undo-tree-id17858 . -1) (undo-tree-id17859 . -1) (undo-tree-id17860 . -1) (undo-tree-id17861 . -1) (undo-tree-id17862 . -1) (undo-tree-id17863 . -1) (undo-tree-id17864 . -1) (undo-tree-id17865 . -1) (undo-tree-id17866 . -1) (undo-tree-id17867 . -1) (undo-tree-id17868 . -1) (undo-tree-id17869 . -1) (undo-tree-id17870 . -1) (undo-tree-id17871 . -1) (undo-tree-id17872 . -1) (undo-tree-id17873 . -1) (undo-tree-id17874 . -1) (undo-tree-id17875 . -1) (undo-tree-id17876 . -1) (undo-tree-id17877 . -1) (undo-tree-id17878 . -1) (undo-tree-id17879 . -1) (undo-tree-id17880 . -1) (undo-tree-id17881 . -1) (undo-tree-id17882 . -1) (undo-tree-id17883 . -1) (undo-tree-id17884 . -1) (undo-tree-id17885 . -1) (undo-tree-id17886 . -1) (undo-tree-id17887 . -1) (undo-tree-id17888 . -1) (undo-tree-id17889 . -1) (undo-tree-id17890 . -1) (undo-tree-id17891 . -1) (undo-tree-id17892 . -1) (undo-tree-id17893 . -1) (undo-tree-id17894 . -1) (undo-tree-id17895 . -1) (undo-tree-id17896 . -1) (undo-tree-id17897 . -1) (undo-tree-id17898 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3306) (undo-tree-id17899 . -1) (undo-tree-id17900 . -1) (undo-tree-id17901 . -1) (undo-tree-id17902 . -1) (undo-tree-id17903 . -1) (undo-tree-id17904 . -1) (undo-tree-id17905 . -1) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) (undo-tree-id17918 . -1) (undo-tree-id17919 . -1) (undo-tree-id17920 . -1) (undo-tree-id17921 . -1) (undo-tree-id17922 . -1) (undo-tree-id17923 . -1) (undo-tree-id17924 . -1) (undo-tree-id17925 . -1) (undo-tree-id17926 . -1) (undo-tree-id17927 . -1) (undo-tree-id17928 . -1) (undo-tree-id17929 . -1) (undo-tree-id17930 . -1) (undo-tree-id17931 . -1) (undo-tree-id17932 . -1) (undo-tree-id17933 . -1) (undo-tree-id17934 . -1) (undo-tree-id17935 . -1) (undo-tree-id17936 . -1) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) (undo-tree-id17939 . -1) (undo-tree-id17940 . -1) (undo-tree-id17941 . -1) (undo-tree-id17942 . -1) (undo-tree-id17943 . -1) (undo-tree-id17944 . -1) (undo-tree-id17945 . -1) (undo-tree-id17946 . -1) (undo-tree-id17947 . -1) (undo-tree-id17948 . -1) (undo-tree-id17949 . -1) (undo-tree-id17950 . -1) (undo-tree-id17951 . -1) (undo-tree-id17952 . -1) (undo-tree-id17953 . -1) (undo-tree-id17954 . -1) (undo-tree-id17955 . -1) (undo-tree-id17956 . -1) (undo-tree-id17957 . -1) (undo-tree-id17958 . -1) (undo-tree-id17959 . -1) (undo-tree-id17960 . -1) (undo-tree-id17961 . -1) (undo-tree-id17962 . -1) (undo-tree-id17963 . -1) (undo-tree-id17964 . -1) (undo-tree-id17965 . -1) (undo-tree-id17966 . -1) (undo-tree-id17967 . -1) (undo-tree-id17968 . -1) (undo-tree-id17969 . -1) (undo-tree-id17970 . -1) (undo-tree-id17971 . -1) (undo-tree-id17972 . -1) (undo-tree-id17973 . -1) (undo-tree-id17974 . -1) (undo-tree-id17975 . -1) (undo-tree-id17976 . -1) (undo-tree-id17977 . -1) (undo-tree-id17978 . -1) (undo-tree-id17979 . -1) (undo-tree-id17980 . -1) (undo-tree-id17981 . -1) (undo-tree-id17982 . -1) (undo-tree-id17983 . -1) (undo-tree-id17984 . -1) (undo-tree-id17985 . -1) (undo-tree-id17986 . -1) (undo-tree-id17987 . -1) (undo-tree-id17988 . -1) (undo-tree-id17989 . -1) (undo-tree-id17990 . -1) (undo-tree-id17991 . -1) (undo-tree-id17992 . -1) (undo-tree-id17993 . -1) (undo-tree-id17994 . -1) (undo-tree-id17995 . -1) (undo-tree-id17996 . -1) (undo-tree-id17997 . -1) (undo-tree-id17998 . -1) (undo-tree-id17999 . -1) (undo-tree-id18000 . -1) (undo-tree-id18001 . -1) (undo-tree-id18002 . -1) (undo-tree-id18003 . -1) (undo-tree-id18004 . -1) (undo-tree-id18005 . -1) (undo-tree-id18006 . -1) (undo-tree-id18007 . -1) (undo-tree-id18008 . -1) (undo-tree-id18009 . -1) (undo-tree-id18010 . -1) (undo-tree-id18011 . -1) (undo-tree-id18012 . -1) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (undo-tree-id18023 . -1) (undo-tree-id18024 . -1) (undo-tree-id18025 . -1) (undo-tree-id18026 . -1) (undo-tree-id18027 . -1) (undo-tree-id18028 . -1) (undo-tree-id18029 . -1) (undo-tree-id18030 . -1) (undo-tree-id18031 . -1) (undo-tree-id18032 . -1) (undo-tree-id18033 . -1) (undo-tree-id18034 . -1) (undo-tree-id18035 . -1) (undo-tree-id18036 . -1) (undo-tree-id18037 . -1) (undo-tree-id18038 . -1) (undo-tree-id18039 . -1) (undo-tree-id18040 . -1) (undo-tree-id18041 . -1) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) (undo-tree-id18046 . -1) (undo-tree-id18047 . -1) (undo-tree-id18048 . -1) (undo-tree-id18049 . -1) (undo-tree-id18050 . -1) (undo-tree-id18051 . -1) (undo-tree-id18052 . -1) (undo-tree-id18053 . -1) (undo-tree-id18054 . -1) (undo-tree-id18055 . -1) (undo-tree-id18056 . -1) (undo-tree-id18057 . -1) (undo-tree-id18058 . -1) (undo-tree-id18059 . -1) (undo-tree-id18060 . -1) (undo-tree-id18061 . -1) (undo-tree-id18062 . -1) (undo-tree-id18063 . -1) (undo-tree-id18064 . -1) (undo-tree-id18065 . -1) (undo-tree-id18066 . -1) (undo-tree-id18067 . -1) (undo-tree-id18068 . -1) (undo-tree-id18069 . -1) (undo-tree-id18070 . -1) (undo-tree-id18071 . -1) (undo-tree-id18072 . -1) (undo-tree-id18073 . -1) (undo-tree-id18074 . -1) (undo-tree-id18075 . -1) (undo-tree-id18076 . -1) (undo-tree-id18077 . -1) (undo-tree-id18078 . -1) (undo-tree-id18079 . -1) (#(" " 0 1 (fontified t)) . -3307) (undo-tree-id18080 . -1) (undo-tree-id18081 . -1) (undo-tree-id18082 . -1) (undo-tree-id18083 . -1) (undo-tree-id18084 . -1) (undo-tree-id18085 . -1) (undo-tree-id18086 . -1) (undo-tree-id18087 . -1) (undo-tree-id18088 . -1) (undo-tree-id18089 . -1) (undo-tree-id18090 . -1) (undo-tree-id18091 . -1) (undo-tree-id18092 . -1) (undo-tree-id18093 . -1) (undo-tree-id18094 . -1) (undo-tree-id18095 . -1) (undo-tree-id18096 . -1) (undo-tree-id18097 . -1) (undo-tree-id18098 . -1) (undo-tree-id18099 . -1) (undo-tree-id18100 . -1) (undo-tree-id18101 . -1) (undo-tree-id18102 . -1) (undo-tree-id18103 . -1) (undo-tree-id18104 . -1) (undo-tree-id18105 . -1) (undo-tree-id18106 . -1) (undo-tree-id18107 . -1) (undo-tree-id18108 . -1) (undo-tree-id18109 . -1) (undo-tree-id18110 . -1) (undo-tree-id18111 . -1) (undo-tree-id18112 . -1) (undo-tree-id18113 . -1) (undo-tree-id18114 . -1) (undo-tree-id18115 . -1) (undo-tree-id18116 . -1) (undo-tree-id18117 . -1) (undo-tree-id18118 . -1) (undo-tree-id18119 . -1) (undo-tree-id18120 . -1) (undo-tree-id18121 . -1) (undo-tree-id18122 . -1) (undo-tree-id18123 . -1) (undo-tree-id18124 . -1) (undo-tree-id18125 . -1) (undo-tree-id18126 . -1) (undo-tree-id18127 . -1) (undo-tree-id18128 . -1) (undo-tree-id18129 . -1) (undo-tree-id18130 . -1) (undo-tree-id18131 . -1) (undo-tree-id18132 . -1) (undo-tree-id18133 . -1) (undo-tree-id18134 . -1) (undo-tree-id18135 . -1) (undo-tree-id18136 . -1) (undo-tree-id18137 . -1) (undo-tree-id18138 . -1) (undo-tree-id18139 . -1) (undo-tree-id18140 . -1) (undo-tree-id18141 . -1) (undo-tree-id18142 . -1) (undo-tree-id18143 . -1) (undo-tree-id18144 . -1) (undo-tree-id18145 . -1) (undo-tree-id18146 . -1) (undo-tree-id18147 . -1) (undo-tree-id18148 . -1) (undo-tree-id18149 . -1) (undo-tree-id18150 . -1) (undo-tree-id18151 . -1) (undo-tree-id18152 . -1) (undo-tree-id18153 . -1) (undo-tree-id18154 . -1) (undo-tree-id18155 . -1) (undo-tree-id18156 . -1) (undo-tree-id18157 . -1) (undo-tree-id18158 . -1) (undo-tree-id18159 . -1) (undo-tree-id18160 . -1) (undo-tree-id18161 . -1) (undo-tree-id18162 . -1) (undo-tree-id18163 . -1) (undo-tree-id18164 . -1) (undo-tree-id18165 . -1) (undo-tree-id18166 . -1) (undo-tree-id18167 . -1) (undo-tree-id18168 . -1) (undo-tree-id18169 . -1) (undo-tree-id18170 . -1) (undo-tree-id18171 . -1) (undo-tree-id18172 . -1) (undo-tree-id18173 . -1) (undo-tree-id18174 . -1) (undo-tree-id18175 . -1) (undo-tree-id18176 . -1) (undo-tree-id18177 . -1) (undo-tree-id18178 . -1) (undo-tree-id18179 . -1) (undo-tree-id18180 . -1) (undo-tree-id18181 . -1) (undo-tree-id18182 . -1) (undo-tree-id18183 . -1) (undo-tree-id18184 . -1) (undo-tree-id18185 . -1) (undo-tree-id18186 . -1) (undo-tree-id18187 . -1) (undo-tree-id18188 . -1) (undo-tree-id18189 . -1) (undo-tree-id18190 . -1) (undo-tree-id18191 . -1) (undo-tree-id18192 . -1) (undo-tree-id18193 . -1) (undo-tree-id18194 . -1) (undo-tree-id18195 . -1) (undo-tree-id18196 . -1) (undo-tree-id18197 . -1) (undo-tree-id18198 . -1) (undo-tree-id18199 . -1) (undo-tree-id18200 . -1) (undo-tree-id18201 . -1) (undo-tree-id18202 . -1) (undo-tree-id18203 . -1) (undo-tree-id18204 . -1) (undo-tree-id18205 . -1) (undo-tree-id18206 . -1) (undo-tree-id18207 . -1) (undo-tree-id18208 . -1) (undo-tree-id18209 . -1) (undo-tree-id18210 . -1) (undo-tree-id18211 . -1) (undo-tree-id18212 . -1) (undo-tree-id18213 . -1) (undo-tree-id18214 . -1) (undo-tree-id18215 . -1) (undo-tree-id18216 . -1) (undo-tree-id18217 . -1) (undo-tree-id18218 . -1) (undo-tree-id18219 . -1) (undo-tree-id18220 . -1) (undo-tree-id18221 . -1) (undo-tree-id18222 . -1) (undo-tree-id18223 . -1) (undo-tree-id18224 . -1) (undo-tree-id18225 . -1) (undo-tree-id18226 . -1) (undo-tree-id18227 . -1) (undo-tree-id18228 . -1) (undo-tree-id18229 . -1) (undo-tree-id18230 . -1) (undo-tree-id18231 . -1) (undo-tree-id18232 . -1) (undo-tree-id18233 . -1) (undo-tree-id18234 . -1) (undo-tree-id18235 . -1) (undo-tree-id18236 . -1) (undo-tree-id18237 . -1) (undo-tree-id18238 . -1) (undo-tree-id18239 . -1) (undo-tree-id18240 . -1) (undo-tree-id18241 . -1) (undo-tree-id18242 . -1) (undo-tree-id18243 . -1) (#("W" 0 1 (fontified t)) . -3308) (undo-tree-id18244 . -1) (undo-tree-id18245 . -1) (undo-tree-id18246 . -1) (undo-tree-id18247 . -1) (undo-tree-id18248 . -1) (undo-tree-id18249 . -1) (undo-tree-id18250 . -1) (undo-tree-id18251 . -1) (undo-tree-id18252 . -1) (undo-tree-id18253 . -1) (undo-tree-id18254 . -1) (undo-tree-id18255 . -1) (undo-tree-id18256 . -1) (undo-tree-id18257 . -1) (undo-tree-id18258 . -1) (undo-tree-id18259 . -1) (undo-tree-id18260 . -1) (undo-tree-id18261 . -1) (undo-tree-id18262 . -1) (undo-tree-id18263 . -1) (undo-tree-id18264 . -1) (undo-tree-id18265 . -1) (undo-tree-id18266 . -1) (undo-tree-id18267 . -1) (undo-tree-id18268 . -1) (undo-tree-id18269 . -1) (undo-tree-id18270 . -1) (undo-tree-id18271 . -1) (undo-tree-id18272 . -1) (undo-tree-id18273 . -1) (undo-tree-id18274 . -1) (undo-tree-id18275 . -1) (undo-tree-id18276 . -1) (undo-tree-id18277 . -1) (undo-tree-id18278 . -1) (undo-tree-id18279 . -1) (undo-tree-id18280 . -1) (undo-tree-id18281 . -1) (undo-tree-id18282 . -1) (undo-tree-id18283 . -1) (undo-tree-id18284 . -1) (undo-tree-id18285 . -1) (undo-tree-id18286 . -1) (undo-tree-id18287 . -1) (undo-tree-id18288 . -1) (undo-tree-id18289 . -1) (undo-tree-id18290 . -1) (undo-tree-id18291 . -1) (undo-tree-id18292 . -1) (undo-tree-id18293 . -1) (undo-tree-id18294 . -1) (undo-tree-id18295 . -1) (undo-tree-id18296 . -1) (undo-tree-id18297 . -1) (undo-tree-id18298 . -1) (undo-tree-id18299 . -1) (undo-tree-id18300 . -1) (undo-tree-id18301 . -1) (undo-tree-id18302 . -1) (undo-tree-id18303 . -1) (undo-tree-id18304 . -1) (undo-tree-id18305 . -1) (undo-tree-id18306 . -1) (undo-tree-id18307 . -1) (undo-tree-id18308 . -1) (undo-tree-id18309 . -1) (undo-tree-id18310 . -1) (undo-tree-id18311 . -1) (undo-tree-id18312 . -1) (undo-tree-id18313 . -1) (undo-tree-id18314 . -1) (undo-tree-id18315 . -1) (undo-tree-id18316 . -1) (undo-tree-id18317 . -1) (undo-tree-id18318 . -1) (undo-tree-id18319 . -1) (undo-tree-id18320 . -1) (undo-tree-id18321 . -1) (undo-tree-id18322 . -1) (undo-tree-id18323 . -1) (undo-tree-id18324 . -1) (undo-tree-id18325 . -1) (undo-tree-id18326 . -1) (undo-tree-id18327 . -1) (undo-tree-id18328 . -1) (undo-tree-id18329 . -1) (undo-tree-id18330 . -1) (undo-tree-id18331 . -1) (undo-tree-id18332 . -1) (undo-tree-id18333 . -1) (undo-tree-id18334 . -1) (undo-tree-id18335 . -1) (undo-tree-id18336 . -1) (undo-tree-id18337 . -1) (undo-tree-id18338 . -1) (undo-tree-id18339 . -1) (undo-tree-id18340 . -1) (undo-tree-id18341 . -1) (undo-tree-id18342 . -1) (undo-tree-id18343 . -1) (undo-tree-id18344 . -1) (undo-tree-id18345 . -1) (undo-tree-id18346 . -1) (undo-tree-id18347 . -1) (undo-tree-id18348 . -1) (undo-tree-id18349 . -1) (undo-tree-id18350 . -1) (undo-tree-id18351 . -1) (undo-tree-id18352 . -1) (undo-tree-id18353 . -1) (undo-tree-id18354 . -1) (undo-tree-id18355 . -1) (undo-tree-id18356 . -1) (undo-tree-id18357 . -1) (undo-tree-id18358 . -1) (undo-tree-id18359 . -1) (undo-tree-id18360 . -1) (undo-tree-id18361 . -1) (undo-tree-id18362 . -1) (undo-tree-id18363 . -1) (undo-tree-id18364 . -1) (undo-tree-id18365 . -1) (undo-tree-id18366 . -1) (undo-tree-id18367 . -1) (undo-tree-id18368 . -1) (undo-tree-id18369 . -1) (undo-tree-id18370 . -1) (undo-tree-id18371 . -1) (undo-tree-id18372 . -1) (undo-tree-id18373 . -1) (undo-tree-id18374 . -1) (undo-tree-id18375 . -1) (undo-tree-id18376 . -1) (undo-tree-id18377 . -1) (undo-tree-id18378 . -1) (undo-tree-id18379 . -1) (undo-tree-id18380 . -1) (undo-tree-id18381 . -1) (undo-tree-id18382 . -1) (undo-tree-id18383 . -1) (undo-tree-id18384 . -1) (undo-tree-id18385 . -1) (undo-tree-id18386 . -1) (undo-tree-id18387 . -1) (undo-tree-id18388 . -1) (undo-tree-id18389 . -1) (undo-tree-id18390 . -1) (#("i" 0 1 (fontified t)) . -3309) (undo-tree-id18391 . -1) (undo-tree-id18392 . -1) (undo-tree-id18393 . -1) (undo-tree-id18394 . -1) (undo-tree-id18395 . -1) (undo-tree-id18396 . -1) (undo-tree-id18397 . -1) (undo-tree-id18398 . -1) (undo-tree-id18399 . -1) (undo-tree-id18400 . -1) (undo-tree-id18401 . -1) (undo-tree-id18402 . -1) (undo-tree-id18403 . -1) (undo-tree-id18404 . -1) (undo-tree-id18405 . -1) (undo-tree-id18406 . -1) (undo-tree-id18407 . -1) (undo-tree-id18408 . -1) (undo-tree-id18409 . -1) (undo-tree-id18410 . -1) (undo-tree-id18411 . -1) (undo-tree-id18412 . -1) (undo-tree-id18413 . -1) (undo-tree-id18414 . -1) (undo-tree-id18415 . -1) (undo-tree-id18416 . -1) (undo-tree-id18417 . -1) (undo-tree-id18418 . -1) (undo-tree-id18419 . -1) (undo-tree-id18420 . -1) (undo-tree-id18421 . -1) (undo-tree-id18422 . -1) (undo-tree-id18423 . -1) (undo-tree-id18424 . -1) (undo-tree-id18425 . -1) (undo-tree-id18426 . -1) (undo-tree-id18427 . -1) (undo-tree-id18428 . -1) (undo-tree-id18429 . -1) (undo-tree-id18430 . -1) (undo-tree-id18431 . -1) (undo-tree-id18432 . -1) (undo-tree-id18433 . -1) (undo-tree-id18434 . -1) (undo-tree-id18435 . -1) (undo-tree-id18436 . -1) (undo-tree-id18437 . -1) (undo-tree-id18438 . -1) (undo-tree-id18439 . -1) (undo-tree-id18440 . -1) (undo-tree-id18441 . -1) (undo-tree-id18442 . -1) (undo-tree-id18443 . -1) (undo-tree-id18444 . -1) (undo-tree-id18445 . -1) (undo-tree-id18446 . -1) (undo-tree-id18447 . -1) (undo-tree-id18448 . -1) (undo-tree-id18449 . -1) (undo-tree-id18450 . -1) (undo-tree-id18451 . -1) (undo-tree-id18452 . -1) (undo-tree-id18453 . -1) (undo-tree-id18454 . -1) (undo-tree-id18455 . -1) (undo-tree-id18456 . -1) (undo-tree-id18457 . -1) (undo-tree-id18458 . -1) (undo-tree-id18459 . -1) (undo-tree-id18460 . -1) (undo-tree-id18461 . -1) (undo-tree-id18462 . -1) (undo-tree-id18463 . -1) (undo-tree-id18464 . -1) (undo-tree-id18465 . -1) (undo-tree-id18466 . -1) (undo-tree-id18467 . -1) (undo-tree-id18468 . -1) (undo-tree-id18469 . -1) (undo-tree-id18470 . -1) (undo-tree-id18471 . -1) (undo-tree-id18472 . -1) (undo-tree-id18473 . -1) (undo-tree-id18474 . -1) (undo-tree-id18475 . -1) (undo-tree-id18476 . -1) (undo-tree-id18477 . -1) (undo-tree-id18478 . -1) (undo-tree-id18479 . -1) (undo-tree-id18480 . -1) (undo-tree-id18481 . -1) (undo-tree-id18482 . -1) (undo-tree-id18483 . -1) (undo-tree-id18484 . -1) (undo-tree-id18485 . -1) (undo-tree-id18486 . -1) (undo-tree-id18487 . -1) (undo-tree-id18488 . -1) (undo-tree-id18489 . -1) (undo-tree-id18490 . -1) (undo-tree-id18491 . -1) (undo-tree-id18492 . -1) (undo-tree-id18493 . -1) (undo-tree-id18494 . -1) (undo-tree-id18495 . -1) (undo-tree-id18496 . -1) (undo-tree-id18497 . -1) (undo-tree-id18498 . -1) (undo-tree-id18499 . -1) (undo-tree-id18500 . -1) (undo-tree-id18501 . -1) (undo-tree-id18502 . -1) (undo-tree-id18503 . -1) (undo-tree-id18504 . -1) (undo-tree-id18505 . -1) (undo-tree-id18506 . -1) (undo-tree-id18507 . -1) (undo-tree-id18508 . -1) (undo-tree-id18509 . -1) (undo-tree-id18510 . -1) (undo-tree-id18511 . -1) (undo-tree-id18512 . -1) (undo-tree-id18513 . -1) (undo-tree-id18514 . -1) (undo-tree-id18515 . -1) (undo-tree-id18516 . -1) (undo-tree-id18517 . -1) (undo-tree-id18518 . -1) (undo-tree-id18519 . -1) (#("j" 0 1 (fontified t)) . -3310) (undo-tree-id18520 . -1) (undo-tree-id18521 . -1) (undo-tree-id18522 . -1) (undo-tree-id18523 . -1) (undo-tree-id18524 . -1) (undo-tree-id18525 . -1) (undo-tree-id18526 . -1) (undo-tree-id18527 . -1) (undo-tree-id18528 . -1) (undo-tree-id18529 . -1) (undo-tree-id18530 . -1) (undo-tree-id18531 . -1) (undo-tree-id18532 . -1) (undo-tree-id18533 . -1) (undo-tree-id18534 . -1) (undo-tree-id18535 . -1) (undo-tree-id18536 . -1) (undo-tree-id18537 . -1) (undo-tree-id18538 . -1) (undo-tree-id18539 . -1) (undo-tree-id18540 . -1) (undo-tree-id18541 . -1) (undo-tree-id18542 . -1) (undo-tree-id18543 . -1) (undo-tree-id18544 . -1) (undo-tree-id18545 . -1) (undo-tree-id18546 . -1) (undo-tree-id18547 . -1) (undo-tree-id18548 . -1) (undo-tree-id18549 . -1) (undo-tree-id18550 . -1) (undo-tree-id18551 . -1) (undo-tree-id18552 . -1) (undo-tree-id18553 . -1) (undo-tree-id18554 . -1) (undo-tree-id18555 . -1) (undo-tree-id18556 . -1) (undo-tree-id18557 . -1) (undo-tree-id18558 . -1) (undo-tree-id18559 . -1) (undo-tree-id18560 . -1) (undo-tree-id18561 . -1) (undo-tree-id18562 . -1) (undo-tree-id18563 . -1) (undo-tree-id18564 . -1) (undo-tree-id18565 . -1) (undo-tree-id18566 . -1) (undo-tree-id18567 . -1) (undo-tree-id18568 . -1) (undo-tree-id18569 . -1) (undo-tree-id18570 . -1) (undo-tree-id18571 . -1) (undo-tree-id18572 . -1) (undo-tree-id18573 . -1) (undo-tree-id18574 . -1) (undo-tree-id18575 . -1) (undo-tree-id18576 . -1) (undo-tree-id18577 . -1) (undo-tree-id18578 . -1) (undo-tree-id18579 . -1) (undo-tree-id18580 . -1) (undo-tree-id18581 . -1) (undo-tree-id18582 . -1) (undo-tree-id18583 . -1) (undo-tree-id18584 . -1) (undo-tree-id18585 . -1) (undo-tree-id18586 . -1) (undo-tree-id18587 . -1) (undo-tree-id18588 . -1) (undo-tree-id18589 . -1) (undo-tree-id18590 . -1) (undo-tree-id18591 . -1) (undo-tree-id18592 . -1) (undo-tree-id18593 . -1) (undo-tree-id18594 . -1) (undo-tree-id18595 . -1) (undo-tree-id18596 . -1) (undo-tree-id18597 . -1) (undo-tree-id18598 . -1) (undo-tree-id18599 . -1) (undo-tree-id18600 . -1) (undo-tree-id18601 . -1) (undo-tree-id18602 . -1) (undo-tree-id18603 . -1) (undo-tree-id18604 . -1) (undo-tree-id18605 . -1) (undo-tree-id18606 . -1) (undo-tree-id18607 . -1) (undo-tree-id18608 . -1) (undo-tree-id18609 . -1) (undo-tree-id18610 . -1) (undo-tree-id18611 . -1) (undo-tree-id18612 . -1) (undo-tree-id18613 . -1) (undo-tree-id18614 . -1) (undo-tree-id18615 . -1) (undo-tree-id18616 . -1) (undo-tree-id18617 . -1) 3311) ((3299 . 3311)) (25934 12163 189278 856000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -3298) (undo-tree-id15956 . -1) (undo-tree-id15957 . -1) (undo-tree-id15958 . -1) (undo-tree-id15959 . -1) (undo-tree-id15960 . -1) (undo-tree-id15961 . -1) (undo-tree-id15962 . -1) (undo-tree-id15963 . -1) (undo-tree-id15964 . -1) (undo-tree-id15965 . -1) (#("i" 0 1 (fontified t)) . -3299) (undo-tree-id15966 . -1) (undo-tree-id15967 . -1) (undo-tree-id15968 . -1) (undo-tree-id15969 . -1) (undo-tree-id15970 . -1) (undo-tree-id15971 . -1) (undo-tree-id15972 . -1) (undo-tree-id15973 . -1) (undo-tree-id15974 . -1) (undo-tree-id15975 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3300) (undo-tree-id15976 . -1) (undo-tree-id15977 . -1) (undo-tree-id15978 . -1) (undo-tree-id15979 . -1) (undo-tree-id15980 . -1) (undo-tree-id15981 . -1) (undo-tree-id15982 . -1) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (#("p" 0 1 (fontified t)) . -3301) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (undo-tree-id15990 . -1) (undo-tree-id15991 . -1) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (#("u" 0 1 (fontified t)) . -3302) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3303) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (undo-tree-id16015 . -1) (#("s" 0 1 (fontified t)) . -3304) (undo-tree-id16016 . -1) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) (undo-tree-id16019 . -1) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -1) (undo-tree-id16023 . -1) (undo-tree-id16024 . -1) (undo-tree-id16025 . -1) (#(" " 0 1 (fontified t)) . -3305) (undo-tree-id16026 . -1) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -1) (undo-tree-id16031 . -1) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3306) (undo-tree-id16036 . -1) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) (#(" " 0 1 (fontified t)) . -3307) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (#("W" 0 1 (fontified t)) . -3308) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (undo-tree-id16065 . -1) (#("i" 0 1 (fontified t)) . -3309) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (#("j" 0 1 (fontified t)) . -3310) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (undo-tree-id16083 . -1) 3311) ((3298 . 3311)) (25934 12153 82434 964000) 0 nil])
([nil nil ((#("                
                # r_pres = torch.zeros((self.csumNa[i_pop+1]), dtype=self.FLOAT, device=self.device).unsqueeze(0)
" 0 16 (fontified t) 16 17 (fontified t) 17 33 (fontified t) 33 35 (face font-lock-comment-delimiter-face fontified t) 35 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 55 (face font-lock-comment-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 61 (face font-lock-comment-face fontified t) 61 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t) 75 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 85 (face font-lock-comment-face fontified t) 85 86 (face font-lock-comment-face fontified t) 86 90 (face font-lock-comment-face fontified t) 90 104 (face font-lock-comment-face fontified t) 104 105 (face font-lock-comment-face fontified t) 105 109 (face font-lock-comment-face fontified t) 109 116 (face font-lock-comment-face fontified t) 116 117 (face font-lock-comment-face fontified t) 117 127 (face font-lock-comment-face fontified t) 127 128 (face font-lock-comment-face fontified t) 128 129 (face font-lock-comment-face fontified t) 129 130 (face font-lock-comment-face fontified t) 130 131 (face font-lock-comment-face fontified t)) . -2951) (undo-tree-id19433 . -33) (undo-tree-id19434 . -33) (undo-tree-id19435 . -116) (undo-tree-id19436 . -116) (undo-tree-id19437 . -57) (undo-tree-id19438 . -57) (undo-tree-id19439 . -33) (undo-tree-id19440 . -16) (undo-tree-id19441 . -16) (undo-tree-id19442 . -16) (undo-tree-id19443 . -16) (undo-tree-id19444 . -16) (undo-tree-id19445 . -16) (undo-tree-id19446 . -16) (undo-tree-id19447 . -16) (undo-tree-id19448 . -16) (undo-tree-id19449 . -131) (undo-tree-id19450 . -17) (undo-tree-id19451 . -17) (undo-tree-id19452 . -17) (undo-tree-id19453 . -17) (undo-tree-id19454 . -17) (undo-tree-id19455 . -17) (undo-tree-id19456 . -17) (undo-tree-id19457 . -17) (undo-tree-id19458 . -17) (undo-tree-id19459 . -17) (undo-tree-id19460 . -17) (undo-tree-id19461 . -17) (undo-tree-id19462 . -17) (undo-tree-id19463 . -17) (undo-tree-id19464 . -17) (undo-tree-id19465 . -17) (undo-tree-id19466 . -17) (undo-tree-id19467 . -17) (undo-tree-id19468 . -17) (undo-tree-id19469 . -17) (undo-tree-id19470 . -17) (undo-tree-id19471 . -17) (undo-tree-id19472 . -17) (undo-tree-id19473 . -17) (undo-tree-id19474 . -17) (undo-tree-id19475 . -17) (undo-tree-id19476 . -17) (undo-tree-id19477 . -17) (undo-tree-id19478 . -17) (undo-tree-id19479 . -17) (undo-tree-id19480 . -17) (undo-tree-id19481 . -17) (undo-tree-id19482 . -17) (undo-tree-id19483 . -17) (undo-tree-id19484 . -17) (undo-tree-id19485 . -17) (undo-tree-id19486 . -17) (undo-tree-id19487 . -17) (undo-tree-id19488 . -131) (undo-tree-id19489 . -131) (undo-tree-id19490 . -17) (undo-tree-id19491 . -131) (undo-tree-id19492 . -131) (undo-tree-id19493 . -131) (undo-tree-id19494 . -131) (undo-tree-id19495 . -131) (undo-tree-id19496 . -131) (undo-tree-id19497 . -131) (undo-tree-id19498 . -131) (undo-tree-id19499 . -131) (undo-tree-id19500 . -131) (undo-tree-id19501 . -131) (undo-tree-id19502 . -131) (undo-tree-id19503 . -131) (undo-tree-id19504 . -131) (undo-tree-id19505 . -131) (undo-tree-id19506 . -131) (undo-tree-id19507 . -131) (undo-tree-id19508 . -131) (undo-tree-id19509 . -131) (undo-tree-id19510 . -131) (undo-tree-id19511 . -131) (undo-tree-id19512 . -131) (undo-tree-id19513 . -131) (undo-tree-id19514 . -131) (undo-tree-id19515 . -131) (undo-tree-id19516 . -131) (undo-tree-id19517 . -131) (undo-tree-id19518 . -131) (undo-tree-id19519 . -131) (undo-tree-id19520 . -131) 3082) nil (25934 12210 103617 796000) 0 nil])
([nil nil ((3299 . 3302)) ((#("Wij" 0 3 (fontified t)) . 3299) (undo-tree-id18618 . -3) (undo-tree-id18619 . -3) (undo-tree-id18620 . -3) (undo-tree-id18621 . -3) (undo-tree-id18622 . -3) (undo-tree-id18623 . -3) (undo-tree-id18624 . -3) (undo-tree-id18625 . -3) (undo-tree-id18626 . -3) (undo-tree-id18627 . -3) (undo-tree-id18628 . -3) (undo-tree-id18629 . -3) (undo-tree-id18630 . -3) (undo-tree-id18631 . -3) (undo-tree-id18632 . -3) (undo-tree-id18633 . -3) (undo-tree-id18634 . -3) (undo-tree-id18635 . -3) (undo-tree-id18636 . -3) (undo-tree-id18637 . -3) (undo-tree-id18638 . -3) (undo-tree-id18639 . -3) (undo-tree-id18640 . -3) (undo-tree-id18641 . -3) (undo-tree-id18642 . -3) (undo-tree-id18643 . -3) (undo-tree-id18644 . -3) (undo-tree-id18645 . -3) (undo-tree-id18646 . -3) (undo-tree-id18647 . -3) (undo-tree-id18648 . -3) (undo-tree-id18649 . -3) (undo-tree-id18650 . -3) (undo-tree-id18651 . -3) (undo-tree-id18652 . -3) (undo-tree-id18653 . -3) (undo-tree-id18654 . -3) (undo-tree-id18655 . -3) (undo-tree-id18656 . -3) (undo-tree-id18657 . -3) (undo-tree-id18658 . -3) (undo-tree-id18659 . -3) (undo-tree-id18660 . -3) (undo-tree-id18661 . -3) (undo-tree-id18662 . -3) (undo-tree-id18663 . -3) (undo-tree-id18664 . -3) (undo-tree-id18665 . -3) (undo-tree-id18666 . -3) (undo-tree-id18667 . -3) (undo-tree-id18668 . -3) (undo-tree-id18669 . -3) (undo-tree-id18670 . -3) (undo-tree-id18671 . -3) (undo-tree-id18672 . -3) (undo-tree-id18673 . -3) (undo-tree-id18674 . -3) (undo-tree-id18675 . -3) (undo-tree-id18676 . -3) (undo-tree-id18677 . -3) (undo-tree-id18678 . -3) (undo-tree-id18679 . -3) (undo-tree-id18680 . -3) (undo-tree-id18681 . -3) (undo-tree-id18682 . -3) (undo-tree-id18683 . -3) (undo-tree-id18684 . -3) (undo-tree-id18685 . -3) (undo-tree-id18686 . -3) (undo-tree-id18687 . -3) (undo-tree-id18688 . -3) (undo-tree-id18689 . -2) (undo-tree-id18690 . -3) (undo-tree-id18691 . -2) (undo-tree-id18692 . -2) (undo-tree-id18693 . -2) (undo-tree-id18694 . -2) (undo-tree-id18695 . -2) (undo-tree-id18696 . -2) (undo-tree-id18697 . -2) (undo-tree-id18698 . -2) (undo-tree-id18699 . -2) (undo-tree-id18700 . -2) (undo-tree-id18701 . -2) (undo-tree-id18702 . -2) (undo-tree-id18703 . -2) (undo-tree-id18704 . -2) (undo-tree-id18705 . -2) (undo-tree-id18706 . -2) (undo-tree-id18707 . -2) (undo-tree-id18708 . -2) (undo-tree-id18709 . -2) (undo-tree-id18710 . -2) (undo-tree-id18711 . -2) (undo-tree-id18712 . -2) (undo-tree-id18713 . -2) (undo-tree-id18714 . -2) (undo-tree-id18715 . -2) (undo-tree-id18716 . -2) (undo-tree-id18717 . -2) (undo-tree-id18718 . -2) (undo-tree-id18719 . -2) (undo-tree-id18720 . -1) (undo-tree-id18721 . -2) (undo-tree-id18722 . -1) (undo-tree-id18723 . -1) (undo-tree-id18724 . -1) (undo-tree-id18725 . -1) (undo-tree-id18726 . -1) (undo-tree-id18727 . -1) (undo-tree-id18728 . -1) (undo-tree-id18729 . -1) (undo-tree-id18730 . -1) (undo-tree-id18731 . -1) (undo-tree-id18732 . -1) (undo-tree-id18733 . -1) (undo-tree-id18734 . -1) (undo-tree-id18735 . -1) (undo-tree-id18736 . -1) (undo-tree-id18737 . -1) (t 25934 12158 988022 458000)) (25934 12158 938859 692000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2950) (undo-tree-id19020 . -1) (undo-tree-id19021 . -1) (undo-tree-id19022 . -1) (undo-tree-id19023 . -1) (undo-tree-id19024 . -1) (undo-tree-id19025 . -1) (undo-tree-id19026 . -1) (undo-tree-id19027 . -1) (undo-tree-id19028 . -1) (undo-tree-id19029 . -1) (undo-tree-id19030 . -1) (undo-tree-id19031 . -1) (undo-tree-id19032 . -1) (undo-tree-id19033 . -1) (undo-tree-id19034 . -1) (undo-tree-id19035 . -1) (undo-tree-id19036 . -1) (undo-tree-id19037 . -1) (undo-tree-id19038 . -1) (undo-tree-id19039 . -1) (undo-tree-id19040 . -1) (undo-tree-id19041 . -1) (undo-tree-id19042 . -1) (undo-tree-id19043 . -1) (undo-tree-id19044 . -1) (undo-tree-id19045 . -1) (undo-tree-id19046 . -1) (undo-tree-id19047 . -1) (undo-tree-id19048 . -1) (undo-tree-id19049 . -1) (undo-tree-id19050 . -1) (undo-tree-id19051 . -1) (undo-tree-id19052 . -1) (undo-tree-id19053 . -1) (undo-tree-id19054 . -1) (undo-tree-id19055 . -1) (undo-tree-id19056 . -1) (undo-tree-id19057 . -1) (undo-tree-id19058 . -1) (undo-tree-id19059 . -1) (undo-tree-id19060 . -1) (undo-tree-id19061 . -1) (undo-tree-id19062 . -1) (undo-tree-id19063 . -1) (undo-tree-id19064 . -1) (undo-tree-id19065 . -1) (undo-tree-id19066 . -1) (undo-tree-id19067 . -1) (undo-tree-id19068 . -1) (undo-tree-id19069 . -1) (undo-tree-id19070 . -1) (undo-tree-id19071 . -1) (undo-tree-id19072 . -1) (undo-tree-id19073 . -1) (undo-tree-id19074 . -1) (undo-tree-id19075 . -1) (undo-tree-id19076 . -1) (undo-tree-id19077 . -1) (undo-tree-id19078 . -1) (undo-tree-id19079 . -1) (undo-tree-id19080 . -1) (undo-tree-id19081 . -1) (undo-tree-id19082 . -1) (undo-tree-id19083 . -1) (undo-tree-id19084 . -1) (undo-tree-id19085 . -1) (undo-tree-id19086 . -1) (undo-tree-id19087 . -1) (undo-tree-id19088 . -1) (undo-tree-id19089 . -1) (undo-tree-id19090 . -1) (undo-tree-id19091 . -1) (undo-tree-id19092 . -1) (undo-tree-id19093 . -1) (undo-tree-id19094 . -1) (undo-tree-id19095 . -1) (undo-tree-id19096 . -1) (undo-tree-id19097 . -1) (undo-tree-id19098 . -1) (undo-tree-id19099 . -1) (undo-tree-id19100 . -1) (undo-tree-id19101 . -1) (undo-tree-id19102 . -1) (undo-tree-id19103 . -1) (undo-tree-id19104 . -1) (undo-tree-id19105 . -1) (undo-tree-id19106 . -1) (undo-tree-id19107 . -1) (undo-tree-id19108 . -1) (undo-tree-id19109 . -1) (undo-tree-id19110 . -1) (undo-tree-id19111 . -1) (undo-tree-id19112 . -1) (undo-tree-id19113 . -1) (undo-tree-id19114 . -1) (undo-tree-id19115 . -1) (undo-tree-id19116 . -1) (undo-tree-id19117 . -1) (undo-tree-id19118 . -1) (undo-tree-id19119 . -1) (undo-tree-id19120 . -1) (undo-tree-id19121 . -1) (undo-tree-id19122 . -1) (undo-tree-id19123 . -1) (undo-tree-id19124 . -1) (undo-tree-id19125 . -1) (undo-tree-id19126 . -1) (undo-tree-id19127 . -1) (undo-tree-id19128 . -1) (undo-tree-id19129 . -1) (undo-tree-id19130 . -1) (undo-tree-id19131 . -1) (undo-tree-id19132 . -1) (undo-tree-id19133 . -1) (undo-tree-id19134 . -1) (undo-tree-id19135 . -1) (undo-tree-id19136 . -1) (undo-tree-id19137 . -1) (undo-tree-id19138 . -1) (undo-tree-id19139 . -1) (undo-tree-id19140 . -1) (undo-tree-id19141 . -1) (undo-tree-id19142 . -1) (undo-tree-id19143 . -1) (undo-tree-id19144 . -1) (undo-tree-id19145 . -1) (undo-tree-id19146 . -1) (undo-tree-id19147 . -1) (undo-tree-id19148 . -1) (undo-tree-id19149 . -1) (undo-tree-id19150 . -1) (undo-tree-id19151 . -1) (undo-tree-id19152 . -1) (undo-tree-id19153 . -1) (undo-tree-id19154 . -1) (undo-tree-id19155 . -1) (undo-tree-id19156 . -1) (undo-tree-id19157 . -1) (undo-tree-id19158 . -1) (undo-tree-id19159 . -1) (undo-tree-id19160 . -1) (undo-tree-id19161 . -1) (undo-tree-id19162 . -1) (undo-tree-id19163 . -1) (undo-tree-id19164 . -1) (undo-tree-id19165 . -1) (undo-tree-id19166 . -1) (undo-tree-id19167 . -1) (undo-tree-id19168 . -1) (undo-tree-id19169 . -1) (undo-tree-id19170 . -1) (undo-tree-id19171 . -1) (undo-tree-id19172 . -1) (undo-tree-id19173 . -1) (undo-tree-id19174 . -1) (undo-tree-id19175 . -1) (undo-tree-id19176 . -1) (undo-tree-id19177 . -1) (undo-tree-id19178 . -1) (undo-tree-id19179 . -1) (undo-tree-id19180 . -1) (undo-tree-id19181 . -1) (undo-tree-id19182 . -1) (undo-tree-id19183 . -1) (undo-tree-id19184 . -1) (undo-tree-id19185 . -1) (undo-tree-id19186 . -1) (undo-tree-id19187 . -1) (undo-tree-id19188 . -1) (undo-tree-id19189 . -1) (undo-tree-id19190 . -1) (undo-tree-id19191 . -1) (undo-tree-id19192 . -1) (undo-tree-id19193 . -1) (undo-tree-id19194 . -1) (undo-tree-id19195 . -1) (undo-tree-id19196 . -1) (undo-tree-id19197 . -1) (undo-tree-id19198 . -1) (undo-tree-id19199 . -1) (undo-tree-id19200 . -1) (undo-tree-id19201 . -1) (undo-tree-id19202 . -1) (undo-tree-id19203 . -1) (undo-tree-id19204 . -1) (undo-tree-id19205 . -1) (undo-tree-id19206 . -1) (undo-tree-id19207 . -1) (undo-tree-id19208 . -1) (undo-tree-id19209 . -1) (undo-tree-id19210 . -1) (undo-tree-id19211 . -1) (undo-tree-id19212 . -1) (undo-tree-id19213 . -1) (undo-tree-id19214 . -1) (undo-tree-id19215 . -1) (undo-tree-id19216 . -1) (undo-tree-id19217 . -1) (undo-tree-id19218 . -1) (undo-tree-id19219 . -1) (undo-tree-id19220 . -1) (undo-tree-id19221 . -1) (undo-tree-id19222 . -1) (undo-tree-id19223 . -1) (undo-tree-id19224 . -1) (undo-tree-id19225 . -1) (undo-tree-id19226 . -1) (undo-tree-id19227 . -1) (undo-tree-id19228 . -1) (undo-tree-id19229 . -1) (undo-tree-id19230 . -1) (undo-tree-id19231 . -1) (undo-tree-id19232 . -1) (undo-tree-id19233 . -1) (undo-tree-id19234 . -1) (undo-tree-id19235 . -1) (undo-tree-id19236 . -1) (undo-tree-id19237 . -1) (undo-tree-id19238 . -1) (undo-tree-id19239 . -1) (undo-tree-id19240 . -1) (undo-tree-id19241 . -1) (undo-tree-id19242 . -1) (undo-tree-id19243 . -1) (undo-tree-id19244 . -1) (undo-tree-id19245 . -1) (undo-tree-id19246 . -1) (undo-tree-id19247 . -1) (undo-tree-id19248 . -1) (undo-tree-id19249 . -1) (undo-tree-id19250 . -1) (undo-tree-id19251 . -1) (undo-tree-id19252 . -1) (undo-tree-id19253 . -1) (undo-tree-id19254 . -1) (undo-tree-id19255 . -1) (undo-tree-id19256 . -1) (undo-tree-id19257 . -1) (undo-tree-id19258 . -1) (undo-tree-id19259 . -1) (undo-tree-id19260 . -1) (undo-tree-id19261 . -1) (undo-tree-id19262 . -1) (undo-tree-id19263 . -1) (undo-tree-id19264 . -1) (undo-tree-id19265 . -1) (undo-tree-id19266 . -1) (undo-tree-id19267 . -1) (undo-tree-id19268 . -1) (undo-tree-id19269 . -1) (undo-tree-id19270 . -1) (undo-tree-id19271 . -1) (undo-tree-id19272 . -1) (undo-tree-id19273 . -1) (undo-tree-id19274 . -1) (undo-tree-id19275 . -1) (undo-tree-id19276 . -1) (undo-tree-id19277 . -1) (undo-tree-id19278 . -1) (undo-tree-id19279 . -1) (undo-tree-id19280 . -1) (undo-tree-id19281 . -1) (undo-tree-id19282 . -1) (undo-tree-id19283 . -1) (undo-tree-id19284 . -1) (undo-tree-id19285 . -1) (undo-tree-id19286 . -1) (undo-tree-id19287 . -1) (undo-tree-id19288 . -1) (undo-tree-id19289 . -1) (undo-tree-id19290 . -1) (undo-tree-id19291 . -1) (undo-tree-id19292 . -1) (undo-tree-id19293 . -1) (undo-tree-id19294 . -1) (undo-tree-id19295 . -1) (undo-tree-id19296 . -1) (undo-tree-id19297 . -1) (undo-tree-id19298 . -1) (undo-tree-id19299 . -1) (undo-tree-id19300 . -1) (undo-tree-id19301 . -1) (undo-tree-id19302 . -1) (undo-tree-id19303 . -1) (undo-tree-id19304 . -1) (undo-tree-id19305 . -1) (undo-tree-id19306 . -1) (undo-tree-id19307 . -1) (undo-tree-id19308 . -1) (undo-tree-id19309 . -1) (undo-tree-id19310 . -1) (undo-tree-id19311 . -1) (undo-tree-id19312 . -1) (undo-tree-id19313 . -1) (undo-tree-id19314 . -1) (undo-tree-id19315 . -1) (undo-tree-id19316 . -1) (undo-tree-id19317 . -1) (undo-tree-id19318 . -1) (undo-tree-id19319 . -1) (undo-tree-id19320 . -1) (undo-tree-id19321 . -1) (undo-tree-id19322 . -1) (undo-tree-id19323 . -1) (undo-tree-id19324 . -1) (undo-tree-id19325 . -1) (undo-tree-id19326 . -1) (undo-tree-id19327 . -1) (undo-tree-id19328 . -1) (undo-tree-id19329 . -1) (undo-tree-id19330 . -1) (undo-tree-id19331 . -1) (undo-tree-id19332 . -1) (undo-tree-id19333 . -1) (undo-tree-id19334 . -1) (undo-tree-id19335 . -1) (undo-tree-id19336 . -1) (undo-tree-id19337 . -1) (undo-tree-id19338 . -1) (undo-tree-id19339 . -1) (undo-tree-id19340 . -1) (undo-tree-id19341 . -1) (undo-tree-id19342 . -1) (undo-tree-id19343 . -1) (undo-tree-id19344 . -1) (undo-tree-id19345 . -1) (undo-tree-id19346 . -1) (undo-tree-id19347 . -1) (undo-tree-id19348 . -1) (undo-tree-id19349 . -1) (undo-tree-id19350 . -1) (undo-tree-id19351 . -1) (undo-tree-id19352 . -1) (undo-tree-id19353 . -1) (undo-tree-id19354 . -1) (undo-tree-id19355 . -1) (undo-tree-id19356 . -1) (undo-tree-id19357 . -1) (undo-tree-id19358 . -1) (undo-tree-id19359 . -1) (undo-tree-id19360 . -1) (undo-tree-id19361 . -1) (undo-tree-id19362 . -1) (undo-tree-id19363 . -1) (undo-tree-id19364 . -1) (undo-tree-id19365 . -1) (undo-tree-id19366 . -1) (undo-tree-id19367 . -1) (undo-tree-id19368 . -1) (undo-tree-id19369 . -1) (undo-tree-id19370 . -1) (undo-tree-id19371 . -1) (undo-tree-id19372 . -1) (undo-tree-id19373 . -1) (undo-tree-id19374 . -1) (undo-tree-id19375 . -1) (undo-tree-id19376 . -1) (undo-tree-id19377 . -1) (undo-tree-id19378 . -1) (undo-tree-id19379 . -1) (undo-tree-id19380 . -1) (undo-tree-id19381 . -1) (undo-tree-id19382 . -1) (undo-tree-id19383 . -1) (undo-tree-id19384 . -1) (undo-tree-id19385 . -1) (undo-tree-id19386 . -1) (undo-tree-id19387 . -1) (undo-tree-id19388 . -1) (undo-tree-id19389 . -1) (undo-tree-id19390 . -1) (undo-tree-id19391 . -1) (undo-tree-id19392 . -1) (undo-tree-id19393 . -1) (undo-tree-id19394 . -1) (undo-tree-id19395 . -1) (undo-tree-id19396 . -1) (undo-tree-id19397 . -1) (undo-tree-id19398 . -1) (undo-tree-id19399 . -1) (undo-tree-id19400 . -1) (undo-tree-id19401 . -1) (undo-tree-id19402 . -1) (undo-tree-id19403 . -1) (undo-tree-id19404 . -1) (undo-tree-id19405 . -1) (undo-tree-id19406 . -1) (undo-tree-id19407 . -1) (undo-tree-id19408 . -1) (undo-tree-id19409 . -1) (undo-tree-id19410 . -1) (undo-tree-id19411 . -1) (undo-tree-id19412 . -1) (undo-tree-id19413 . -1) (undo-tree-id19414 . -1) (undo-tree-id19415 . -1) (undo-tree-id19416 . -1) (undo-tree-id19417 . -1) (undo-tree-id19418 . -1) (undo-tree-id19419 . -1) (undo-tree-id19420 . -1) (undo-tree-id19421 . -1) (undo-tree-id19422 . -1) (undo-tree-id19423 . -1) (undo-tree-id19424 . -1) (undo-tree-id19425 . -1) (undo-tree-id19426 . -1) (undo-tree-id19427 . -1) (undo-tree-id19428 . -1) (undo-tree-id19429 . -1) (undo-tree-id19430 . -1) (undo-tree-id19431 . -1) (undo-tree-id19432 . -1) 2951) nil (25934 12210 103484 592000) 0 nil])
nil
([nil nil ((#("                " 0 16 (fontified t)) . -2950) (undo-tree-id19657 . -16) 2934 (t 25934 12210 152703 445000)) nil (25934 12212 173574 338000) 0 nil])
([nil nil ((apply 10 4228 4705 undo--wrap-and-run-primitive-undo 4228 4705 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4501) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4356) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4312) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4286) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4236) 4715))) nil (25934 12344 947386 367000) 0 nil])
([nil nil ((4722 . 4738) (#("        " 0 5 (fontified t) 5 8 (fontified t)) . 4722)) nil (25934 12344 947385 126000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4734) (undo-tree-id19723 . -4) 4738) nil (25934 12344 947383 734000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19722 . -4) 4734) nil (25934 12344 947381 411000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 4730)) nil (25934 12344 947379 196000) 0 nil])
([nil nil ((4731 . 4734) 4730) nil (25934 12344 947378 101000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19721 . -4) 4734) nil (25934 12344 947376 651000) 0 nil])
([nil nil ((4730 . 4734)) nil (25934 12344 947374 481000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19720 . -4) 4734) nil (25934 12344 947372 676000) 0 nil])
([nil nil ((4730 . 4734)) nil (25934 12344 947370 459000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19719 . -4) 4734) nil (25934 12344 947368 948000) 0 nil])
([nil nil ((4744 . 4748)) nil (25934 12344 947366 977000) 0 nil])
([nil nil ((4347 . 4364)) nil (25934 12344 947365 733000) 0 nil])
([nil nil ((4364 . 4374)) nil (25934 12344 947364 812000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -4373) (undo-tree-id19718 . -1) 4374) nil (25934 12344 947363 662000) 0 nil])
([nil nil ((4373 . 4376)) nil (25934 12344 947361 329000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4426 . 4427) (nil fontified nil 4426 . 4427) (nil fontified nil 4425 . 4426) (nil fontified nil 4424 . 4425) (nil fontified nil 4422 . 4424) (nil fontified nil 4421 . 4422) (nil fontified nil 4415 . 4421) (nil fontified nil 4414 . 4415) (nil fontified nil 4407 . 4414) (nil fontified nil 4403 . 4407) (nil fontified nil 4400 . 4403) (nil fontified nil 4399 . 4400) (nil fontified nil 4394 . 4399) (nil fontified nil 4393 . 4394) (nil fontified nil 4386 . 4393) (nil fontified nil 4382 . 4386) (nil fontified nil 4381 . 4382) (nil fontified nil 4376 . 4381) (4376 . 4427)) nil (25934 12344 947359 893000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4497) (#("_" 0 1 (fontified t)) . 4497) (#("i" 0 1 (fontified t)) . 4497) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4497) (#("a" 0 1 (fontified t)) . 4497) (#("N" 0 1 (fontified t)) . 4497) (#("m" 0 1 (fontified t)) . 4497) (#("u" 0 1 (fontified t)) . 4497) (#("s" 0 1 (fontified t)) . 4497) (#("c" 0 1 (fontified t)) . 4497) (#("." 0 1 (fontified t)) . 4497) (#("f" 0 1 (fontified t)) . 4497) (#("l" 0 1 (fontified t)) . 4497) (#("e" 0 1 (fontified t)) . 4497) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . 4497) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4497) (#("s" 0 1 (fontified t)) . 4497) (#("e" 0 1 (fontified t)) . 4497) (#("t" 0 1 (fontified t)) . 4497) (#("a" 0 1 (fontified t)) . 4497) (#("r" 0 1 (fontified t)) . 4497)) nil (25934 12344 947351 797000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4497) (#("_" 0 1 (fontified t)) . 4497) (#("i" 0 1 (fontified t)) . 4497) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4497) (#("a" 0 1 (fontified t)) . 4497) (#("N" 0 1 (fontified t)) . 4497) (#("m" 0 1 (fontified t)) . 4497) (#("u" 0 1 (fontified t)) . 4497) (#("s" 0 1 (fontified t)) . 4497) (#("c" 0 1 (fontified t)) . 4497) (#("." 0 1 (fontified t)) . 4497) (#("f" 0 1 (fontified t)) . 4497) (#("l" 0 1 (fontified t)) . 4497) (#("e" 0 1 (fontified t)) . 4497) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#(":" 0 1 (fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4497) (#("p" 0 1 (fontified t)) . 4497) (#("o" 0 1 (fontified t)) . 4497)) nil (25934 12344 947342 769000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4497) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4497) (#("1" 0 1 (fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#("+" 0 1 (face font-lock-operator-face fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#("p" 0 1 (fontified t)) . 4497) (#("o" 0 1 (fontified t)) . 4497)) nil (25934 12344 947337 644000) 0 nil])
([nil nil ((4497 . 4503)) nil (25934 12344 947335 271000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -4502) (undo-tree-id19717 . -1) 4503) nil (25934 12344 947334 144000) 0 nil])
([nil nil ((4502 . 4506)) nil (25934 12344 947331 912000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4473) (undo-tree-id19696 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4474) (undo-tree-id19697 . -1) (#("." 0 1 (fontified t)) . -4475) (undo-tree-id19698 . -1) (#("c" 0 1 (fontified t)) . -4476) (undo-tree-id19699 . -1) (#("s" 0 1 (fontified t)) . -4477) (undo-tree-id19700 . -1) (#("u" 0 1 (fontified t)) . -4478) (undo-tree-id19701 . -1) (#("m" 0 1 (fontified t)) . -4479) (undo-tree-id19702 . -1) (#("N" 0 1 (fontified t)) . -4480) (undo-tree-id19703 . -1) (#("a" 0 1 (fontified t)) . -4481) (undo-tree-id19704 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4482) (undo-tree-id19705 . -1) (#("i" 0 1 (fontified t)) . -4483) (undo-tree-id19706 . -1) (#("_" 0 1 (fontified t)) . -4484) (undo-tree-id19707 . -1) (#("p" 0 1 (fontified t)) . -4485) (undo-tree-id19708 . -1) (#("o" 0 1 (fontified t)) . -4486) (undo-tree-id19709 . -1) (#("p" 0 1 (fontified t)) . -4487) (undo-tree-id19710 . -1) (#(" " 0 1 (fontified nil)) . -4488) (undo-tree-id19711 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -4489) (undo-tree-id19712 . -1) (#(" " 0 1 (fontified t)) . -4490) (undo-tree-id19713 . -1) (#("1" 0 1 (fontified nil)) . -4491) (undo-tree-id19714 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4492) (undo-tree-id19715 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -4493) (undo-tree-id19716 . -1) 4494) nil (25934 12344 947325 453000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4452) (undo-tree-id19675 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4453) (undo-tree-id19676 . -1) (#("." 0 1 (fontified t)) . -4454) (undo-tree-id19677 . -1) (#("c" 0 1 (fontified t)) . -4455) (undo-tree-id19678 . -1) (#("s" 0 1 (fontified t)) . -4456) (undo-tree-id19679 . -1) (#("u" 0 1 (fontified t)) . -4457) (undo-tree-id19680 . -1) (#("m" 0 1 (fontified t)) . -4458) (undo-tree-id19681 . -1) (#("N" 0 1 (fontified t)) . -4459) (undo-tree-id19682 . -1) (#("a" 0 1 (fontified t)) . -4460) (undo-tree-id19683 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4461) (undo-tree-id19684 . -1) (#("i" 0 1 (fontified t)) . -4462) (undo-tree-id19685 . -1) (#("_" 0 1 (fontified t)) . -4463) (undo-tree-id19686 . -1) (#("p" 0 1 (fontified t)) . -4464) (undo-tree-id19687 . -1) (#("o" 0 1 (fontified t)) . -4465) (undo-tree-id19688 . -1) (#("p" 0 1 (fontified t)) . -4466) (undo-tree-id19689 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4467) (undo-tree-id19690 . -1) (#(" " 0 1 (fontified t)) . -4468) (undo-tree-id19691 . -1) (#(":" 0 1 (fontified t)) . -4469) (undo-tree-id19692 . -1) (#(" " 0 1 (fontified t)) . -4470) (undo-tree-id19693 . -1) (#("s" 0 1 (fontified t)) . -4471) (undo-tree-id19694 . -1) (#("e" 0 1 (fontified t)) . -4472) (undo-tree-id19695 . -1) 4473) nil (25934 12344 947293 598000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -4444) (undo-tree-id19667 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -4445) (undo-tree-id19668 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -4446) (undo-tree-id19669 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -4447) (undo-tree-id19670 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -4448) (undo-tree-id19671 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -4449) (undo-tree-id19672 . -1) (#("s" 0 1 (fontified t)) . -4450) (undo-tree-id19673 . -1) (#("e" 0 1 (fontified t)) . -4451) (undo-tree-id19674 . -1) 4452) nil (25934 12344 947265 510000) 0 nil])
([nil nil ((4444 . 4453)) nil (25934 12344 947254 8000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4560) (#("_" 0 1 (fontified nil)) . 4560) (#("i" 0 1 (fontified t)) . 4560) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 4560) (#("a" 0 1 (fontified nil)) . 4560) (#("N" 0 1 (fontified nil)) . 4560) (#("m" 0 1 (fontified nil)) . 4560) (#("u" 0 1 (fontified nil)) . 4560) (#("s" 0 1 (fontified nil)) . 4560) (#("c" 0 1 (fontified nil)) . 4560) (#("." 0 1 (fontified nil)) . 4560) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4560) (#("s" 0 1 (fontified nil)) . 4560) (#("e" 0 1 (fontified nil)) . 4560) (#("t" 0 1 (fontified t)) . 4560) (#("a" 0 1 (fontified t)) . 4560) (#("r" 0 1 (fontified t)) . 4560)) nil (25934 12344 947249 329000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4560) (#("_" 0 1 (fontified t)) . 4560) (#("i" 0 1 (fontified t)) . 4560) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4560) (#("a" 0 1 (fontified t)) . 4560) (#("N" 0 1 (fontified t)) . 4560) (#("m" 0 1 (fontified t)) . 4560) (#("u" 0 1 (fontified t)) . 4560) (#("s" 0 1 (fontified t)) . 4560) (#("c" 0 1 (fontified t)) . 4560) (#("." 0 1 (fontified t)) . 4560) (#("f" 0 1 (fontified t)) . 4560) (#("l" 0 1 (fontified t)) . 4560) (#("e" 0 1 (fontified t)) . 4560) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#(":" 0 1 (fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4560) (undo-tree-id19666 . -1) (#("p" 0 1 (fontified t)) . 4560) (#("o" 0 1 (fontified t)) . 4560)) nil (25934 12344 947240 588000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4560) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4560) (#("1" 0 1 (fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#("+" 0 1 (face font-lock-operator-face fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#("p" 0 1 (fontified t)) . 4560) (#("o" 0 1 (fontified t)) . 4560)) nil (25934 12344 947233 618000) 0 nil])
([nil nil ((4560 . 4566)) nil (25934 12344 947231 773000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4565) (undo-tree-id19665 . -1) 4566) nil (25934 12344 947230 696000) 0 nil])
([nil nil ((4565 . 4569)) nil (25934 12344 947228 322000) 0 nil])
([nil nil ((4490 . 4507)) nil (25934 12344 947227 403000) 0 nil])
([nil nil ((4507 . 4509)) nil (25934 12344 947226 512000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4507) (undo-tree-id19663 . -1) (#("e" 0 1 (fontified t)) . -4508) (undo-tree-id19664 . -1) 4509) nil (25934 12344 947225 52000) 0 nil])
([nil nil ((4507 . 4512)) nil (25934 12344 947221 455000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4510) (undo-tree-id19661 . -1) (#("t" 0 1 (fontified t)) . -4511) (undo-tree-id19662 . -1) 4512) nil (25934 12344 947220 2000) 0 nil])
([nil nil ((4510 . 4516)) nil (25934 12344 947215 565000) 0 nil])
([nil nil ((#("Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])" 0 9 (fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 15 (fontified t) 15 18 (fontified t) 18 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-2-face) fontified t) 23 27 (face font-lock-keyword-face fontified t) 27 28 (fontified t) 28 32 (fontified t) 32 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-3-face) fontified t) 41 44 (fontified t) 44 48 (face font-lock-keyword-face fontified t) 48 49 (fontified t) 49 52 (fontified t) 52 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) fontified t) 56 62 (fontified t) 62 63 (face font-lock-operator-face fontified t) 63 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-3-face) fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t) 67 68 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4619) (undo-tree-id19659 . -68) (undo-tree-id19660 . -68)) nil (25934 12344 947213 791000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4583 . 4584) (nil fontified nil 4583 . 4584) (nil fontified nil 4582 . 4583) (nil fontified nil 4581 . 4582) (nil fontified nil 4579 . 4581) (nil fontified nil 4578 . 4579) (nil fontified nil 4572 . 4578) (nil fontified nil 4571 . 4572) (nil fontified nil 4568 . 4571) (nil fontified nil 4565 . 4568) (nil fontified nil 4564 . 4565) (nil fontified nil 4560 . 4564) (nil fontified nil 4557 . 4560) (nil fontified nil 4556 . 4557) (nil fontified nil 4551 . 4556) (nil fontified nil 4550 . 4551) (nil fontified nil 4548 . 4550) (nil fontified nil 4544 . 4548) (nil fontified nil 4543 . 4544) (nil fontified nil 4539 . 4543) (nil fontified nil 4538 . 4539) (nil fontified nil 4534 . 4538) (nil fontified nil 4531 . 4534) (nil fontified nil 4529 . 4531) (nil fontified nil 4528 . 4529) (nil fontified nil 4527 . 4528) (nil fontified nil 4526 . 4527) (nil fontified nil 4525 . 4526) (nil fontified nil 4516 . 4525) (4516 . 4584)) nil (25934 12344 947208 225000) 0 nil])
([nil nil ((4687 . 4693)) nil (25934 12344 947201 89000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4690) (undo-tree-id19658 . -1) 4691) nil (25934 12344 947198 525000) 0 nil])
([nil nil ((4690 . 4691)) nil (25934 12344 947182 216000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4693) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . -1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1) (undo-tree-id19741 . -1) (undo-tree-id19742 . -1) (undo-tree-id19743 . -1) (undo-tree-id19744 . -1) (undo-tree-id19745 . -1) (undo-tree-id19746 . -1) (undo-tree-id19747 . -1) (undo-tree-id19748 . -1) (undo-tree-id19749 . -1) (undo-tree-id19750 . -1) (undo-tree-id19751 . -1) (undo-tree-id19752 . -1) (undo-tree-id19753 . -1) 4694 (t 25934 12344 993042 869000)) nil (25934 12354 571228 283000) 0 nil])
([nil nil ((4236 . 4238) (t 25934 12354 625924 523000)) nil (25934 12373 223808 302000) 0 nil])
([nil nil ((12284 . 12297) (t 25934 12373 275631 478000)) nil (25934 12503 17807 897000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12293) (undo-tree-id20822 . -4) 12297) nil (25934 12503 17805 324000) 0 nil])
([nil nil ((12293 . 12300)) nil (25934 12503 17801 333000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-operator-face fontified t)) . -12297) (undo-tree-id20819 . -1) (#("D" 0 1 (fontified t)) . -12298) (undo-tree-id20820 . -1) (#("T" 0 1 (fontified t)) . -12299) (undo-tree-id20821 . -1) 12300) nil (25934 12503 17798 491000) 0 nil])
([nil nil ((12297 . 12298)) nil (25934 12503 17789 947000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -12293) (undo-tree-id20814 . -1) (#("e" 0 1 (fontified t)) . -12294) (undo-tree-id20815 . -1) (#("l" 0 1 (fontified t)) . -12295) (undo-tree-id20816 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12296) (undo-tree-id20817 . -1) (#("." 0 1 (fontified t)) . -12297) (undo-tree-id20818 . -1) 12298) nil (25934 12503 17786 576000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12397 . 12398) (nil fontified nil 12397 . 12398) (nil fontified nil 12396 . 12397) (nil fontified nil 12390 . 12396) (nil fontified nil 12386 . 12390) (nil fontified nil 12378 . 12386) (nil fontified nil 12374 . 12378) (nil fontified nil 12373 . 12374) (nil fontified nil 12368 . 12373) (nil fontified nil 12367 . 12368) (nil fontified nil 12360 . 12367) (nil fontified nil 12356 . 12360) (nil fontified nil 12355 . 12356) (nil fontified nil 12341 . 12355) (nil fontified nil 12337 . 12341) (nil fontified nil 12336 . 12337) (nil fontified nil 12323 . 12336) (nil fontified nil 12319 . 12323) (nil fontified nil 12318 . 12319) (nil fontified nil 12305 . 12318) (nil fontified nil 12304 . 12305) (nil fontified nil 12303 . 12304) (nil fontified nil 12298 . 12303) (nil fontified nil 12297 . 12298) (nil fontified nil 12293 . 12297) (nil fontified nil 12285 . 12293) (12285 . 12398)) nil (25934 12503 17769 417000) 0 nil])
([nil nil ((12293 . 12297) 12285) nil (25934 12503 17758 546000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12293) (undo-tree-id20813 . -4) 12297) nil (25934 12503 17755 444000) 0 nil])
([nil nil ((#("SIGMA" 0 5 (fontified nil)) . -12325) (12330 . 12336) (nil fontified t 12299 . 12304) (nil face font-lock-variable-name-face 12299 . 12304) (#("SIGMA" 0 5 (face font-lock-variable-name-face fontified t)) . -12298) (12303 . 12309)) nil (25934 12503 17749 808000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12377) (undo-tree-id20792 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12378) (undo-tree-id20793 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12379) (undo-tree-id20794 . -1) (#("." 0 1 (fontified nil)) . -12380) (undo-tree-id20795 . -1) (#("N" 0 1 (fontified nil)) . -12381) (undo-tree-id20796 . -1) (#("_" 0 1 (fontified nil)) . -12382) (undo-tree-id20797 . -1) (#("P" 0 1 (fontified nil)) . -12383) (undo-tree-id20798 . -1) (#("O" 0 1 (fontified nil)) . -12384) (undo-tree-id20799 . -1) (#("P" 0 1 (fontified nil)) . -12385) (undo-tree-id20800 . -1) (#("," 0 1 (fontified nil)) . -12386) (undo-tree-id20801 . -1) (#(" " 0 1 (fontified nil)) . -12387) (undo-tree-id20802 . -1) (#("s" 0 1 (fontified nil)) . -12388) (undo-tree-id20803 . -1) (#("e" 0 1 (fontified t)) . -12389) (undo-tree-id20804 . -1) (#("l" 0 1 (fontified t)) . -12390) (undo-tree-id20805 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12391) (undo-tree-id20806 . -1) (#("." 0 1 (fontified t)) . -12392) (undo-tree-id20807 . -1) (#("N" 0 1 (fontified t)) . -12393) (undo-tree-id20808 . -1) (#("_" 0 1 (fontified t)) . -12394) (undo-tree-id20809 . -1) (#("P" 0 1 (fontified t)) . -12395) (undo-tree-id20810 . -1) (#("O" 0 1 (fontified t)) . -12396) (undo-tree-id20811 . -1) (#("P" 0 1 (fontified t)) . -12397) (undo-tree-id20812 . -1) 12398) nil (25934 12503 17734 189000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -12372) (undo-tree-id20787 . -1) (#("e" 0 1 (fontified nil)) . -12373) (undo-tree-id20788 . -1) (#("w" 0 1 (fontified nil)) . -12374) (undo-tree-id20789 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -12375) (undo-tree-id20790 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 12376) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12376) (undo-tree-id20791 . -1) 12377) nil (25934 12503 17674 438000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12370) (undo-tree-id20785 . -1) (#("v" 0 1 (fontified t)) . -12371) (undo-tree-id20786 . -1) 12372) nil (25934 12503 17666 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12483 . 12484) (nil fontified nil 12483 . 12484) (nil fontified nil 12482 . 12483) (nil fontified nil 12476 . 12482) (nil fontified nil 12472 . 12476) (nil fontified nil 12464 . 12472) (nil fontified nil 12460 . 12464) (nil fontified nil 12459 . 12460) (nil fontified nil 12454 . 12459) (nil fontified nil 12453 . 12454) (nil fontified nil 12446 . 12453) (nil fontified nil 12442 . 12446) (nil fontified nil 12441 . 12442) (nil fontified nil 12427 . 12441) (nil fontified nil 12423 . 12427) (nil fontified nil 12422 . 12423) (nil fontified nil 12409 . 12422) (nil fontified nil 12405 . 12409) (nil fontified nil 12404 . 12405) (nil fontified nil 12391 . 12404) (nil fontified nil 12390 . 12391) (nil fontified nil 12389 . 12390) (nil fontified nil 12384 . 12389) (nil fontified nil 12383 . 12384) (nil fontified nil 12379 . 12383) (nil fontified nil 12371 . 12379) (12371 . 12484)) nil (25934 12503 17656 316000) 0 nil])
([nil nil ((#("SIGMA" 0 5 (fontified nil)) . -12415) (12420 . 12430) (nil fontified t 12389 . 12394) (nil face font-lock-variable-name-face 12389 . 12394) (#("SIGMA" 0 5 (face font-lock-variable-name-face fontified t)) . -12384) (12389 . 12399)) nil (25934 12503 17649 547000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12472) (undo-tree-id20270 . -1) (undo-tree-id20271 . -1) (undo-tree-id20272 . -1) (undo-tree-id20273 . -1) (undo-tree-id20274 . -1) (undo-tree-id20275 . -1) (undo-tree-id20276 . -1) (undo-tree-id20277 . -1) (undo-tree-id20278 . -1) (undo-tree-id20279 . -1) (undo-tree-id20280 . -1) (undo-tree-id20281 . -1) (undo-tree-id20282 . -1) (undo-tree-id20283 . -1) (undo-tree-id20284 . -1) (undo-tree-id20285 . -1) (undo-tree-id20286 . -1) (undo-tree-id20287 . -1) (undo-tree-id20288 . -1) (undo-tree-id20289 . -1) (undo-tree-id20290 . -1) (undo-tree-id20291 . -1) (undo-tree-id20292 . -1) (undo-tree-id20293 . -1) (undo-tree-id20294 . -1) (undo-tree-id20295 . -1) (undo-tree-id20296 . -1) (undo-tree-id20297 . -1) (undo-tree-id20298 . -1) (undo-tree-id20299 . -1) (undo-tree-id20300 . -1) (undo-tree-id20301 . -1) (undo-tree-id20302 . -1) (undo-tree-id20303 . -1) (undo-tree-id20304 . -1) (undo-tree-id20305 . -1) (undo-tree-id20306 . -1) (undo-tree-id20307 . -1) (undo-tree-id20308 . -1) (undo-tree-id20309 . -1) (undo-tree-id20310 . -1) (undo-tree-id20311 . -1) (undo-tree-id20312 . -1) (undo-tree-id20313 . -1) (undo-tree-id20314 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12473) (undo-tree-id20315 . -1) (undo-tree-id20316 . -1) (undo-tree-id20317 . -1) (undo-tree-id20318 . -1) (undo-tree-id20319 . -1) (undo-tree-id20320 . -1) (undo-tree-id20321 . -1) (undo-tree-id20322 . -1) (undo-tree-id20323 . -1) (undo-tree-id20324 . -1) (undo-tree-id20325 . -1) (undo-tree-id20326 . -1) (undo-tree-id20327 . -1) (undo-tree-id20328 . -1) (undo-tree-id20329 . -1) (undo-tree-id20330 . -1) (undo-tree-id20331 . -1) (undo-tree-id20332 . -1) (undo-tree-id20333 . -1) (undo-tree-id20334 . -1) (undo-tree-id20335 . -1) (undo-tree-id20336 . -1) (undo-tree-id20337 . -1) (undo-tree-id20338 . -1) (undo-tree-id20339 . -1) (undo-tree-id20340 . -1) (undo-tree-id20341 . -1) (undo-tree-id20342 . -1) (undo-tree-id20343 . -1) (undo-tree-id20344 . -1) (undo-tree-id20345 . -1) (undo-tree-id20346 . -1) (undo-tree-id20347 . -1) (undo-tree-id20348 . -1) (undo-tree-id20349 . -1) (undo-tree-id20350 . -1) (undo-tree-id20351 . -1) (undo-tree-id20352 . -1) (undo-tree-id20353 . -1) (undo-tree-id20354 . -1) (undo-tree-id20355 . -1) (undo-tree-id20356 . -1) (undo-tree-id20357 . -1) (#("." 0 1 (fontified nil)) . -12474) (undo-tree-id20358 . -1) (undo-tree-id20359 . -1) (undo-tree-id20360 . -1) (undo-tree-id20361 . -1) (undo-tree-id20362 . -1) (undo-tree-id20363 . -1) (undo-tree-id20364 . -1) (undo-tree-id20365 . -1) (undo-tree-id20366 . -1) (undo-tree-id20367 . -1) (undo-tree-id20368 . -1) (undo-tree-id20369 . -1) (undo-tree-id20370 . -1) (undo-tree-id20371 . -1) (undo-tree-id20372 . -1) (undo-tree-id20373 . -1) (undo-tree-id20374 . -1) (undo-tree-id20375 . -1) (undo-tree-id20376 . -1) (undo-tree-id20377 . -1) (undo-tree-id20378 . -1) (undo-tree-id20379 . -1) (undo-tree-id20380 . -1) (undo-tree-id20381 . -1) (undo-tree-id20382 . -1) (undo-tree-id20383 . -1) (undo-tree-id20384 . -1) (undo-tree-id20385 . -1) (undo-tree-id20386 . -1) (undo-tree-id20387 . -1) (undo-tree-id20388 . -1) (undo-tree-id20389 . -1) (undo-tree-id20390 . -1) (undo-tree-id20391 . -1) (undo-tree-id20392 . -1) (undo-tree-id20393 . -1) (undo-tree-id20394 . -1) (undo-tree-id20395 . -1) (undo-tree-id20396 . -1) (undo-tree-id20397 . -1) (undo-tree-id20398 . -1) (#("N" 0 1 (fontified nil)) . -12475) (undo-tree-id20399 . -1) (undo-tree-id20400 . -1) (undo-tree-id20401 . -1) (undo-tree-id20402 . -1) (undo-tree-id20403 . -1) (undo-tree-id20404 . -1) (undo-tree-id20405 . -1) (undo-tree-id20406 . -1) (undo-tree-id20407 . -1) (undo-tree-id20408 . -1) (undo-tree-id20409 . -1) (undo-tree-id20410 . -1) (undo-tree-id20411 . -1) (undo-tree-id20412 . -1) (undo-tree-id20413 . -1) (undo-tree-id20414 . -1) (undo-tree-id20415 . -1) (undo-tree-id20416 . -1) (undo-tree-id20417 . -1) (undo-tree-id20418 . -1) (undo-tree-id20419 . -1) (undo-tree-id20420 . -1) (undo-tree-id20421 . -1) (undo-tree-id20422 . -1) (undo-tree-id20423 . -1) (undo-tree-id20424 . -1) (undo-tree-id20425 . -1) (undo-tree-id20426 . -1) (undo-tree-id20427 . -1) (undo-tree-id20428 . -1) (undo-tree-id20429 . -1) (undo-tree-id20430 . -1) (undo-tree-id20431 . -1) (undo-tree-id20432 . -1) (undo-tree-id20433 . -1) (undo-tree-id20434 . -1) (undo-tree-id20435 . -1) (undo-tree-id20436 . -1) (undo-tree-id20437 . -1) (#("_" 0 1 (fontified nil)) . -12476) (undo-tree-id20438 . -1) (undo-tree-id20439 . -1) (undo-tree-id20440 . -1) (undo-tree-id20441 . -1) (undo-tree-id20442 . -1) (undo-tree-id20443 . -1) (undo-tree-id20444 . -1) (undo-tree-id20445 . -1) (undo-tree-id20446 . -1) (undo-tree-id20447 . -1) (undo-tree-id20448 . -1) (undo-tree-id20449 . -1) (undo-tree-id20450 . -1) (undo-tree-id20451 . -1) (undo-tree-id20452 . -1) (undo-tree-id20453 . -1) (undo-tree-id20454 . -1) (undo-tree-id20455 . -1) (undo-tree-id20456 . -1) (undo-tree-id20457 . -1) (undo-tree-id20458 . -1) (undo-tree-id20459 . -1) (undo-tree-id20460 . -1) (undo-tree-id20461 . -1) (undo-tree-id20462 . -1) (undo-tree-id20463 . -1) (undo-tree-id20464 . -1) (undo-tree-id20465 . -1) (undo-tree-id20466 . -1) (undo-tree-id20467 . -1) (undo-tree-id20468 . -1) (undo-tree-id20469 . -1) (undo-tree-id20470 . -1) (undo-tree-id20471 . -1) (undo-tree-id20472 . -1) (undo-tree-id20473 . -1) (undo-tree-id20474 . -1) (#("P" 0 1 (fontified nil)) . -12477) (undo-tree-id20475 . -1) (undo-tree-id20476 . -1) (undo-tree-id20477 . -1) (undo-tree-id20478 . -1) (undo-tree-id20479 . -1) (undo-tree-id20480 . -1) (undo-tree-id20481 . -1) (undo-tree-id20482 . -1) (undo-tree-id20483 . -1) (undo-tree-id20484 . -1) (undo-tree-id20485 . -1) (undo-tree-id20486 . -1) (undo-tree-id20487 . -1) (undo-tree-id20488 . -1) (undo-tree-id20489 . -1) (undo-tree-id20490 . -1) (undo-tree-id20491 . -1) (undo-tree-id20492 . -1) (undo-tree-id20493 . -1) (undo-tree-id20494 . -1) (undo-tree-id20495 . -1) (undo-tree-id20496 . -1) (undo-tree-id20497 . -1) (undo-tree-id20498 . -1) (undo-tree-id20499 . -1) (undo-tree-id20500 . -1) (undo-tree-id20501 . -1) (undo-tree-id20502 . -1) (undo-tree-id20503 . -1) (undo-tree-id20504 . -1) (undo-tree-id20505 . -1) (undo-tree-id20506 . -1) (undo-tree-id20507 . -1) (undo-tree-id20508 . -1) (undo-tree-id20509 . -1) (#("O" 0 1 (fontified nil)) . -12478) (undo-tree-id20510 . -1) (undo-tree-id20511 . -1) (undo-tree-id20512 . -1) (undo-tree-id20513 . -1) (undo-tree-id20514 . -1) (undo-tree-id20515 . -1) (undo-tree-id20516 . -1) (undo-tree-id20517 . -1) (undo-tree-id20518 . -1) (undo-tree-id20519 . -1) (undo-tree-id20520 . -1) (undo-tree-id20521 . -1) (undo-tree-id20522 . -1) (undo-tree-id20523 . -1) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1) (undo-tree-id20533 . -1) (undo-tree-id20534 . -1) (undo-tree-id20535 . -1) (undo-tree-id20536 . -1) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1) (undo-tree-id20540 . -1) (undo-tree-id20541 . -1) (undo-tree-id20542 . -1) (#("P" 0 1 (fontified nil)) . -12479) (undo-tree-id20543 . -1) (undo-tree-id20544 . -1) (undo-tree-id20545 . -1) (undo-tree-id20546 . -1) (undo-tree-id20547 . -1) (undo-tree-id20548 . -1) (undo-tree-id20549 . -1) (undo-tree-id20550 . -1) (undo-tree-id20551 . -1) (undo-tree-id20552 . -1) (undo-tree-id20553 . -1) (undo-tree-id20554 . -1) (undo-tree-id20555 . -1) (undo-tree-id20556 . -1) (undo-tree-id20557 . -1) (undo-tree-id20558 . -1) (undo-tree-id20559 . -1) (undo-tree-id20560 . -1) (undo-tree-id20561 . -1) (undo-tree-id20562 . -1) (undo-tree-id20563 . -1) (undo-tree-id20564 . -1) (undo-tree-id20565 . -1) (undo-tree-id20566 . -1) (undo-tree-id20567 . -1) (undo-tree-id20568 . -1) (undo-tree-id20569 . -1) (undo-tree-id20570 . -1) (undo-tree-id20571 . -1) (undo-tree-id20572 . -1) (undo-tree-id20573 . -1) (#("," 0 1 (fontified nil)) . -12480) (undo-tree-id20574 . -1) (undo-tree-id20575 . -1) (undo-tree-id20576 . -1) (undo-tree-id20577 . -1) (undo-tree-id20578 . -1) (undo-tree-id20579 . -1) (undo-tree-id20580 . -1) (undo-tree-id20581 . -1) (undo-tree-id20582 . -1) (undo-tree-id20583 . -1) (undo-tree-id20584 . -1) (undo-tree-id20585 . -1) (undo-tree-id20586 . -1) (undo-tree-id20587 . -1) (undo-tree-id20588 . -1) (undo-tree-id20589 . -1) (undo-tree-id20590 . -1) (undo-tree-id20591 . -1) (undo-tree-id20592 . -1) (undo-tree-id20593 . -1) (undo-tree-id20594 . -1) (undo-tree-id20595 . -1) (undo-tree-id20596 . -1) (undo-tree-id20597 . -1) (undo-tree-id20598 . -1) (undo-tree-id20599 . -1) (undo-tree-id20600 . -1) (undo-tree-id20601 . -1) (undo-tree-id20602 . -1) (#(" " 0 1 (fontified nil)) . -12481) (undo-tree-id20603 . -1) (undo-tree-id20604 . -1) (undo-tree-id20605 . -1) (undo-tree-id20606 . -1) (undo-tree-id20607 . -1) (undo-tree-id20608 . -1) (undo-tree-id20609 . -1) (undo-tree-id20610 . -1) (undo-tree-id20611 . -1) (undo-tree-id20612 . -1) (undo-tree-id20613 . -1) (undo-tree-id20614 . -1) (undo-tree-id20615 . -1) (undo-tree-id20616 . -1) (undo-tree-id20617 . -1) (undo-tree-id20618 . -1) (undo-tree-id20619 . -1) (undo-tree-id20620 . -1) (undo-tree-id20621 . -1) (undo-tree-id20622 . -1) (undo-tree-id20623 . -1) (undo-tree-id20624 . -1) (undo-tree-id20625 . -1) (undo-tree-id20626 . -1) (undo-tree-id20627 . -1) (undo-tree-id20628 . -1) (undo-tree-id20629 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12482) (undo-tree-id20630 . -1) (undo-tree-id20631 . -1) (undo-tree-id20632 . -1) (undo-tree-id20633 . -1) (undo-tree-id20634 . -1) (undo-tree-id20635 . -1) (undo-tree-id20636 . -1) (undo-tree-id20637 . -1) (undo-tree-id20638 . -1) (undo-tree-id20639 . -1) (undo-tree-id20640 . -1) (undo-tree-id20641 . -1) (undo-tree-id20642 . -1) (undo-tree-id20643 . -1) (undo-tree-id20644 . -1) (undo-tree-id20645 . -1) (undo-tree-id20646 . -1) (undo-tree-id20647 . -1) (undo-tree-id20648 . -1) (undo-tree-id20649 . -1) (undo-tree-id20650 . -1) (undo-tree-id20651 . -1) (undo-tree-id20652 . -1) (undo-tree-id20653 . -1) (undo-tree-id20654 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12483) (undo-tree-id20655 . -1) (undo-tree-id20656 . -1) (undo-tree-id20657 . -1) (undo-tree-id20658 . -1) (undo-tree-id20659 . -1) (undo-tree-id20660 . -1) (undo-tree-id20661 . -1) (undo-tree-id20662 . -1) (undo-tree-id20663 . -1) (undo-tree-id20664 . -1) (undo-tree-id20665 . -1) (undo-tree-id20666 . -1) (undo-tree-id20667 . -1) (undo-tree-id20668 . -1) (undo-tree-id20669 . -1) (undo-tree-id20670 . -1) (undo-tree-id20671 . -1) (undo-tree-id20672 . -1) (undo-tree-id20673 . -1) (undo-tree-id20674 . -1) (undo-tree-id20675 . -1) (undo-tree-id20676 . -1) (undo-tree-id20677 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12484) (undo-tree-id20678 . -1) (undo-tree-id20679 . -1) (undo-tree-id20680 . -1) (undo-tree-id20681 . -1) (undo-tree-id20682 . -1) (undo-tree-id20683 . -1) (undo-tree-id20684 . -1) (undo-tree-id20685 . -1) (undo-tree-id20686 . -1) (undo-tree-id20687 . -1) (undo-tree-id20688 . -1) (undo-tree-id20689 . -1) (undo-tree-id20690 . -1) (undo-tree-id20691 . -1) (undo-tree-id20692 . -1) (undo-tree-id20693 . -1) (undo-tree-id20694 . -1) (undo-tree-id20695 . -1) (undo-tree-id20696 . -1) (undo-tree-id20697 . -1) (undo-tree-id20698 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12485) (undo-tree-id20699 . -1) (undo-tree-id20700 . -1) (undo-tree-id20701 . -1) (undo-tree-id20702 . -1) (undo-tree-id20703 . -1) (undo-tree-id20704 . -1) (undo-tree-id20705 . -1) (undo-tree-id20706 . -1) (undo-tree-id20707 . -1) (undo-tree-id20708 . -1) (undo-tree-id20709 . -1) (undo-tree-id20710 . -1) (undo-tree-id20711 . -1) (undo-tree-id20712 . -1) (undo-tree-id20713 . -1) (undo-tree-id20714 . -1) (undo-tree-id20715 . -1) (undo-tree-id20716 . -1) (undo-tree-id20717 . -1) (#("." 0 1 (fontified nil)) . -12486) (undo-tree-id20718 . -1) (undo-tree-id20719 . -1) (undo-tree-id20720 . -1) (undo-tree-id20721 . -1) (undo-tree-id20722 . -1) (undo-tree-id20723 . -1) (undo-tree-id20724 . -1) (undo-tree-id20725 . -1) (undo-tree-id20726 . -1) (undo-tree-id20727 . -1) (undo-tree-id20728 . -1) (undo-tree-id20729 . -1) (undo-tree-id20730 . -1) (undo-tree-id20731 . -1) (undo-tree-id20732 . -1) (undo-tree-id20733 . -1) (undo-tree-id20734 . -1) (#("N" 0 1 (fontified nil)) . -12487) (undo-tree-id20735 . -1) (undo-tree-id20736 . -1) (undo-tree-id20737 . -1) (undo-tree-id20738 . -1) (undo-tree-id20739 . -1) (undo-tree-id20740 . -1) (undo-tree-id20741 . -1) (undo-tree-id20742 . -1) (undo-tree-id20743 . -1) (undo-tree-id20744 . -1) (undo-tree-id20745 . -1) (undo-tree-id20746 . -1) (undo-tree-id20747 . -1) (undo-tree-id20748 . -1) (undo-tree-id20749 . -1) (#("_" 0 1 (fontified nil)) . -12488) (undo-tree-id20750 . -1) (undo-tree-id20751 . -1) (undo-tree-id20752 . -1) (undo-tree-id20753 . -1) (undo-tree-id20754 . -1) (undo-tree-id20755 . -1) (undo-tree-id20756 . -1) (undo-tree-id20757 . -1) (undo-tree-id20758 . -1) (undo-tree-id20759 . -1) (undo-tree-id20760 . -1) (undo-tree-id20761 . -1) (undo-tree-id20762 . -1) (#("P" 0 1 (fontified nil)) . -12489) (undo-tree-id20763 . -1) (undo-tree-id20764 . -1) (undo-tree-id20765 . -1) (undo-tree-id20766 . -1) (undo-tree-id20767 . -1) (undo-tree-id20768 . -1) (undo-tree-id20769 . -1) (undo-tree-id20770 . -1) (undo-tree-id20771 . -1) (undo-tree-id20772 . -1) (undo-tree-id20773 . -1) (#("O" 0 1 (fontified t)) . -12490) (undo-tree-id20774 . -1) (undo-tree-id20775 . -1) (undo-tree-id20776 . -1) (undo-tree-id20777 . -1) (undo-tree-id20778 . -1) (undo-tree-id20779 . -1) (undo-tree-id20780 . -1) (undo-tree-id20781 . -1) (undo-tree-id20782 . -1) (#("P" 0 1 (fontified t)) . -12491) (undo-tree-id20783 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -12492) (undo-tree-id20784 . -1) 12493) nil (25934 12503 17622 756000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12464) (undo-tree-id19754 . -1) (undo-tree-id19755 . -1) (undo-tree-id19756 . -1) (undo-tree-id19757 . -1) (undo-tree-id19758 . -1) (undo-tree-id19759 . -1) (undo-tree-id19760 . -1) (undo-tree-id19761 . -1) (undo-tree-id19762 . -1) (undo-tree-id19763 . -1) (undo-tree-id19764 . -1) (undo-tree-id19765 . -1) (undo-tree-id19766 . -1) (undo-tree-id19767 . -1) (undo-tree-id19768 . -1) (undo-tree-id19769 . -1) (undo-tree-id19770 . -1) (undo-tree-id19771 . -1) (undo-tree-id19772 . -1) (undo-tree-id19773 . -1) (undo-tree-id19774 . -1) (undo-tree-id19775 . -1) (undo-tree-id19776 . -1) (undo-tree-id19777 . -1) (undo-tree-id19778 . -1) (undo-tree-id19779 . -1) (undo-tree-id19780 . -1) (undo-tree-id19781 . -1) (undo-tree-id19782 . -1) (undo-tree-id19783 . -1) (undo-tree-id19784 . -1) (undo-tree-id19785 . -1) (undo-tree-id19786 . -1) (undo-tree-id19787 . -1) (undo-tree-id19788 . -1) (undo-tree-id19789 . -1) (undo-tree-id19790 . -1) (undo-tree-id19791 . -1) (undo-tree-id19792 . -1) (undo-tree-id19793 . -1) (undo-tree-id19794 . -1) (undo-tree-id19795 . -1) (undo-tree-id19796 . -1) (undo-tree-id19797 . -1) (undo-tree-id19798 . -1) (undo-tree-id19799 . -1) (undo-tree-id19800 . -1) (undo-tree-id19801 . -1) (undo-tree-id19802 . -1) (undo-tree-id19803 . -1) (undo-tree-id19804 . -1) (undo-tree-id19805 . -1) (undo-tree-id19806 . -1) (undo-tree-id19807 . -1) (undo-tree-id19808 . -1) (undo-tree-id19809 . -1) (undo-tree-id19810 . -1) (undo-tree-id19811 . -1) (undo-tree-id19812 . -1) (undo-tree-id19813 . -1) (undo-tree-id19814 . -1) (undo-tree-id19815 . -1) (undo-tree-id19816 . -1) (undo-tree-id19817 . -1) (undo-tree-id19818 . -1) (undo-tree-id19819 . -1) (undo-tree-id19820 . -1) (undo-tree-id19821 . -1) (undo-tree-id19822 . -1) (undo-tree-id19823 . -1) (undo-tree-id19824 . -1) (undo-tree-id19825 . -1) (undo-tree-id19826 . -1) (undo-tree-id19827 . -1) (undo-tree-id19828 . -1) (undo-tree-id19829 . -1) (undo-tree-id19830 . -1) (undo-tree-id19831 . -1) (undo-tree-id19832 . -1) (undo-tree-id19833 . -1) (undo-tree-id19834 . -1) (undo-tree-id19835 . -1) (undo-tree-id19836 . -1) (undo-tree-id19837 . -1) (undo-tree-id19838 . -1) (undo-tree-id19839 . -1) (undo-tree-id19840 . -1) (undo-tree-id19841 . -1) (undo-tree-id19842 . -1) (undo-tree-id19843 . -1) (undo-tree-id19844 . -1) (undo-tree-id19845 . -1) (undo-tree-id19846 . -1) (undo-tree-id19847 . -1) (undo-tree-id19848 . -1) (undo-tree-id19849 . -1) (#("v" 0 1 (fontified t)) . -12465) (undo-tree-id19850 . -1) (undo-tree-id19851 . -1) (undo-tree-id19852 . -1) (undo-tree-id19853 . -1) (undo-tree-id19854 . -1) (undo-tree-id19855 . -1) (undo-tree-id19856 . -1) (undo-tree-id19857 . -1) (undo-tree-id19858 . -1) (undo-tree-id19859 . -1) (undo-tree-id19860 . -1) (undo-tree-id19861 . -1) (undo-tree-id19862 . -1) (undo-tree-id19863 . -1) (undo-tree-id19864 . -1) (undo-tree-id19865 . -1) (undo-tree-id19866 . -1) (undo-tree-id19867 . -1) (undo-tree-id19868 . -1) (undo-tree-id19869 . -1) (undo-tree-id19870 . -1) (undo-tree-id19871 . -1) (undo-tree-id19872 . -1) (undo-tree-id19873 . -1) (undo-tree-id19874 . -1) (undo-tree-id19875 . -1) (undo-tree-id19876 . -1) (undo-tree-id19877 . -1) (undo-tree-id19878 . -1) (undo-tree-id19879 . -1) (undo-tree-id19880 . -1) (undo-tree-id19881 . -1) (undo-tree-id19882 . -1) (undo-tree-id19883 . -1) (undo-tree-id19884 . -1) (undo-tree-id19885 . -1) (undo-tree-id19886 . -1) (undo-tree-id19887 . -1) (undo-tree-id19888 . -1) (undo-tree-id19889 . -1) (undo-tree-id19890 . -1) (undo-tree-id19891 . -1) (undo-tree-id19892 . -1) (undo-tree-id19893 . -1) (undo-tree-id19894 . -1) (undo-tree-id19895 . -1) (undo-tree-id19896 . -1) (undo-tree-id19897 . -1) (undo-tree-id19898 . -1) (undo-tree-id19899 . -1) (undo-tree-id19900 . -1) (undo-tree-id19901 . -1) (undo-tree-id19902 . -1) (undo-tree-id19903 . -1) (undo-tree-id19904 . -1) (undo-tree-id19905 . -1) (undo-tree-id19906 . -1) (undo-tree-id19907 . -1) (undo-tree-id19908 . -1) (undo-tree-id19909 . -1) (undo-tree-id19910 . -1) (undo-tree-id19911 . -1) (undo-tree-id19912 . -1) (undo-tree-id19913 . -1) (undo-tree-id19914 . -1) (undo-tree-id19915 . -1) (undo-tree-id19916 . -1) (undo-tree-id19917 . -1) (undo-tree-id19918 . -1) (undo-tree-id19919 . -1) (undo-tree-id19920 . -1) (undo-tree-id19921 . -1) (undo-tree-id19922 . -1) (undo-tree-id19923 . -1) (undo-tree-id19924 . -1) (undo-tree-id19925 . -1) (undo-tree-id19926 . -1) (undo-tree-id19927 . -1) (undo-tree-id19928 . -1) (undo-tree-id19929 . -1) (undo-tree-id19930 . -1) (undo-tree-id19931 . -1) (undo-tree-id19932 . -1) (undo-tree-id19933 . -1) (undo-tree-id19934 . -1) (undo-tree-id19935 . -1) (#("i" 0 1 (fontified t)) . -12466) (undo-tree-id19936 . -1) (undo-tree-id19937 . -1) (undo-tree-id19938 . -1) (undo-tree-id19939 . -1) (undo-tree-id19940 . -1) (undo-tree-id19941 . -1) (undo-tree-id19942 . -1) (undo-tree-id19943 . -1) (undo-tree-id19944 . -1) (undo-tree-id19945 . -1) (undo-tree-id19946 . -1) (undo-tree-id19947 . -1) (undo-tree-id19948 . -1) (undo-tree-id19949 . -1) (undo-tree-id19950 . -1) (undo-tree-id19951 . -1) (undo-tree-id19952 . -1) (undo-tree-id19953 . -1) (undo-tree-id19954 . -1) (undo-tree-id19955 . -1) (undo-tree-id19956 . -1) (undo-tree-id19957 . -1) (undo-tree-id19958 . -1) (undo-tree-id19959 . -1) (undo-tree-id19960 . -1) (undo-tree-id19961 . -1) (undo-tree-id19962 . -1) (undo-tree-id19963 . -1) (undo-tree-id19964 . -1) (undo-tree-id19965 . -1) (undo-tree-id19966 . -1) (undo-tree-id19967 . -1) (undo-tree-id19968 . -1) (undo-tree-id19969 . -1) (undo-tree-id19970 . -1) (undo-tree-id19971 . -1) (undo-tree-id19972 . -1) (undo-tree-id19973 . -1) (undo-tree-id19974 . -1) (undo-tree-id19975 . -1) (undo-tree-id19976 . -1) (undo-tree-id19977 . -1) (undo-tree-id19978 . -1) (undo-tree-id19979 . -1) (undo-tree-id19980 . -1) (undo-tree-id19981 . -1) (undo-tree-id19982 . -1) (undo-tree-id19983 . -1) (undo-tree-id19984 . -1) (undo-tree-id19985 . -1) (undo-tree-id19986 . -1) (undo-tree-id19987 . -1) (undo-tree-id19988 . -1) (undo-tree-id19989 . -1) (undo-tree-id19990 . -1) (undo-tree-id19991 . -1) (undo-tree-id19992 . -1) (undo-tree-id19993 . -1) (undo-tree-id19994 . -1) (undo-tree-id19995 . -1) (undo-tree-id19996 . -1) (undo-tree-id19997 . -1) (undo-tree-id19998 . -1) (undo-tree-id19999 . -1) (undo-tree-id20000 . -1) (undo-tree-id20001 . -1) (undo-tree-id20002 . -1) (undo-tree-id20003 . -1) (undo-tree-id20004 . -1) (#("e" 0 1 (fontified nil)) . -12467) (undo-tree-id20005 . -1) (undo-tree-id20006 . -1) (undo-tree-id20007 . -1) (undo-tree-id20008 . -1) (undo-tree-id20009 . -1) (undo-tree-id20010 . -1) (undo-tree-id20011 . -1) (undo-tree-id20012 . -1) (undo-tree-id20013 . -1) (undo-tree-id20014 . -1) (undo-tree-id20015 . -1) (undo-tree-id20016 . -1) (undo-tree-id20017 . -1) (undo-tree-id20018 . -1) (undo-tree-id20019 . -1) (undo-tree-id20020 . -1) (undo-tree-id20021 . -1) (undo-tree-id20022 . -1) (undo-tree-id20023 . -1) (undo-tree-id20024 . -1) (undo-tree-id20025 . -1) (undo-tree-id20026 . -1) (undo-tree-id20027 . -1) (undo-tree-id20028 . -1) (undo-tree-id20029 . -1) (undo-tree-id20030 . -1) (undo-tree-id20031 . -1) (undo-tree-id20032 . -1) (undo-tree-id20033 . -1) (undo-tree-id20034 . -1) (undo-tree-id20035 . -1) (undo-tree-id20036 . -1) (undo-tree-id20037 . -1) (undo-tree-id20038 . -1) (undo-tree-id20039 . -1) (undo-tree-id20040 . -1) (undo-tree-id20041 . -1) (undo-tree-id20042 . -1) (undo-tree-id20043 . -1) (undo-tree-id20044 . -1) (undo-tree-id20045 . -1) (undo-tree-id20046 . -1) (undo-tree-id20047 . -1) (undo-tree-id20048 . -1) (undo-tree-id20049 . -1) (undo-tree-id20050 . -1) (undo-tree-id20051 . -1) (undo-tree-id20052 . -1) (undo-tree-id20053 . -1) (undo-tree-id20054 . -1) (undo-tree-id20055 . -1) (undo-tree-id20056 . -1) (undo-tree-id20057 . -1) (undo-tree-id20058 . -1) (undo-tree-id20059 . -1) (undo-tree-id20060 . -1) (undo-tree-id20061 . -1) (undo-tree-id20062 . -1) (undo-tree-id20063 . -1) (#("w" 0 1 (fontified nil)) . -12468) (undo-tree-id20064 . -1) (undo-tree-id20065 . -1) (undo-tree-id20066 . -1) (undo-tree-id20067 . -1) (undo-tree-id20068 . -1) (undo-tree-id20069 . -1) (undo-tree-id20070 . -1) (undo-tree-id20071 . -1) (undo-tree-id20072 . -1) (undo-tree-id20073 . -1) (undo-tree-id20074 . -1) (undo-tree-id20075 . -1) (undo-tree-id20076 . -1) (undo-tree-id20077 . -1) (undo-tree-id20078 . -1) (undo-tree-id20079 . -1) (undo-tree-id20080 . -1) (undo-tree-id20081 . -1) (undo-tree-id20082 . -1) (undo-tree-id20083 . -1) (undo-tree-id20084 . -1) (undo-tree-id20085 . -1) (undo-tree-id20086 . -1) (undo-tree-id20087 . -1) (undo-tree-id20088 . -1) (undo-tree-id20089 . -1) (undo-tree-id20090 . -1) (undo-tree-id20091 . -1) (undo-tree-id20092 . -1) (undo-tree-id20093 . -1) (undo-tree-id20094 . -1) (undo-tree-id20095 . -1) (undo-tree-id20096 . -1) (undo-tree-id20097 . -1) (undo-tree-id20098 . -1) (undo-tree-id20099 . -1) (undo-tree-id20100 . -1) (undo-tree-id20101 . -1) (undo-tree-id20102 . -1) (undo-tree-id20103 . -1) (undo-tree-id20104 . -1) (undo-tree-id20105 . -1) (undo-tree-id20106 . -1) (undo-tree-id20107 . -1) (undo-tree-id20108 . -1) (undo-tree-id20109 . -1) (undo-tree-id20110 . -1) (undo-tree-id20111 . -1) (undo-tree-id20112 . -1) (undo-tree-id20113 . -1) (undo-tree-id20114 . -1) (undo-tree-id20115 . -1) (undo-tree-id20116 . -1) (undo-tree-id20117 . -1) (undo-tree-id20118 . -1) (undo-tree-id20119 . -1) (undo-tree-id20120 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -12469) (undo-tree-id20121 . -1) (undo-tree-id20122 . -1) (undo-tree-id20123 . -1) (undo-tree-id20124 . -1) (undo-tree-id20125 . -1) (undo-tree-id20126 . -1) (undo-tree-id20127 . -1) (undo-tree-id20128 . -1) (undo-tree-id20129 . -1) (undo-tree-id20130 . -1) (undo-tree-id20131 . -1) (undo-tree-id20132 . -1) (undo-tree-id20133 . -1) (undo-tree-id20134 . -1) (undo-tree-id20135 . -1) (undo-tree-id20136 . -1) (undo-tree-id20137 . -1) (undo-tree-id20138 . -1) (undo-tree-id20139 . -1) (undo-tree-id20140 . -1) (undo-tree-id20141 . -1) (undo-tree-id20142 . -1) (undo-tree-id20143 . -1) (undo-tree-id20144 . -1) (undo-tree-id20145 . -1) (undo-tree-id20146 . -1) (undo-tree-id20147 . -1) (undo-tree-id20148 . -1) (undo-tree-id20149 . -1) (undo-tree-id20150 . -1) (undo-tree-id20151 . -1) (undo-tree-id20152 . -1) (undo-tree-id20153 . -1) (undo-tree-id20154 . -1) (undo-tree-id20155 . -1) (undo-tree-id20156 . -1) (undo-tree-id20157 . -1) (undo-tree-id20158 . -1) (undo-tree-id20159 . -1) (undo-tree-id20160 . -1) (undo-tree-id20161 . -1) (undo-tree-id20162 . -1) (undo-tree-id20163 . -1) (undo-tree-id20164 . -1) (undo-tree-id20165 . -1) (undo-tree-id20166 . -1) (undo-tree-id20167 . -1) (undo-tree-id20168 . -1) (undo-tree-id20169 . -1) (undo-tree-id20170 . -1) (undo-tree-id20171 . -1) (undo-tree-id20172 . -1) (undo-tree-id20173 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12470) (undo-tree-id20174 . -1) (undo-tree-id20175 . -1) (undo-tree-id20176 . -1) (undo-tree-id20177 . -1) (undo-tree-id20178 . -1) (undo-tree-id20179 . -1) (undo-tree-id20180 . -1) (undo-tree-id20181 . -1) (undo-tree-id20182 . -1) (undo-tree-id20183 . -1) (undo-tree-id20184 . -1) (undo-tree-id20185 . -1) (undo-tree-id20186 . -1) (undo-tree-id20187 . -1) (undo-tree-id20188 . -1) (undo-tree-id20189 . -1) (undo-tree-id20190 . -1) (undo-tree-id20191 . -1) (undo-tree-id20192 . -1) (undo-tree-id20193 . -1) (undo-tree-id20194 . -1) (undo-tree-id20195 . -1) (undo-tree-id20196 . -1) (undo-tree-id20197 . -1) (undo-tree-id20198 . -1) (undo-tree-id20199 . -1) (undo-tree-id20200 . -1) (undo-tree-id20201 . -1) (undo-tree-id20202 . -1) (undo-tree-id20203 . -1) (undo-tree-id20204 . -1) (undo-tree-id20205 . -1) (undo-tree-id20206 . -1) (undo-tree-id20207 . -1) (undo-tree-id20208 . -1) (undo-tree-id20209 . -1) (undo-tree-id20210 . -1) (undo-tree-id20211 . -1) (undo-tree-id20212 . -1) (undo-tree-id20213 . -1) (undo-tree-id20214 . -1) (undo-tree-id20215 . -1) (undo-tree-id20216 . -1) (undo-tree-id20217 . -1) (undo-tree-id20218 . -1) (undo-tree-id20219 . -1) (undo-tree-id20220 . -1) (undo-tree-id20221 . -1) (undo-tree-id20222 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12471) (undo-tree-id20223 . -1) (undo-tree-id20224 . -1) (undo-tree-id20225 . -1) (undo-tree-id20226 . -1) (undo-tree-id20227 . -1) (undo-tree-id20228 . -1) (undo-tree-id20229 . -1) (undo-tree-id20230 . -1) (undo-tree-id20231 . -1) (undo-tree-id20232 . -1) (undo-tree-id20233 . -1) (undo-tree-id20234 . -1) (undo-tree-id20235 . -1) (undo-tree-id20236 . -1) (undo-tree-id20237 . -1) (undo-tree-id20238 . -1) (undo-tree-id20239 . -1) (undo-tree-id20240 . -1) (undo-tree-id20241 . -1) (undo-tree-id20242 . -1) (undo-tree-id20243 . -1) (undo-tree-id20244 . -1) (undo-tree-id20245 . -1) (undo-tree-id20246 . -1) (undo-tree-id20247 . -1) (undo-tree-id20248 . -1) (undo-tree-id20249 . -1) (undo-tree-id20250 . -1) (undo-tree-id20251 . -1) (undo-tree-id20252 . -1) (undo-tree-id20253 . -1) (undo-tree-id20254 . -1) (undo-tree-id20255 . -1) (undo-tree-id20256 . -1) (undo-tree-id20257 . -1) (undo-tree-id20258 . -1) (undo-tree-id20259 . -1) (undo-tree-id20260 . -1) (undo-tree-id20261 . -1) (undo-tree-id20262 . -1) (undo-tree-id20263 . -1) (undo-tree-id20264 . -1) (undo-tree-id20265 . -1) (undo-tree-id20266 . -1) (undo-tree-id20267 . -1) (undo-tree-id20268 . -1) (undo-tree-id20269 . -1) 12472) nil (25934 12503 16995 246000) 0 nil])
([nil nil ((12284 . 12296) (t 25934 12503 75512 890000)) nil (25934 12561 523314 243000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12292) (undo-tree-id20823 . -4) (undo-tree-id20824 . -4) (undo-tree-id20825 . -4) (undo-tree-id20826 . -4) (undo-tree-id20827 . -4) (undo-tree-id20828 . -4) (undo-tree-id20829 . -4) (undo-tree-id20830 . -4) (undo-tree-id20831 . -4) (undo-tree-id20832 . -4) (undo-tree-id20833 . -4) (undo-tree-id20834 . -4) (undo-tree-id20835 . -4) (undo-tree-id20836 . -4) (undo-tree-id20837 . -4) (undo-tree-id20838 . -4) (undo-tree-id20839 . -4) (undo-tree-id20840 . -4) (undo-tree-id20841 . -4) (undo-tree-id20842 . -4) (undo-tree-id20843 . -4) (undo-tree-id20844 . -4) (undo-tree-id20845 . -4) (undo-tree-id20846 . -4) (undo-tree-id20847 . -4) (undo-tree-id20848 . -4) (undo-tree-id20849 . -4) (undo-tree-id20850 . -4) (undo-tree-id20851 . -4) (undo-tree-id20852 . -4) (undo-tree-id20853 . -4) (undo-tree-id20854 . -4) (undo-tree-id20855 . -4) (undo-tree-id20856 . -4) (undo-tree-id20857 . -4) (undo-tree-id20858 . -4) (undo-tree-id20859 . -4) (undo-tree-id20860 . -4) (undo-tree-id20861 . -4) (undo-tree-id20862 . -4) (undo-tree-id20863 . -4) (undo-tree-id20864 . -4) 12296) nil (25934 12561 523308 404000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4710) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) (undo-tree-id20965 . -1) (undo-tree-id20966 . -1) 4711 (t 25934 12561 564867 316000)) nil (25934 12614 65378 613000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4695) (undo-tree-id20974 . -1) (undo-tree-id20975 . -1) (undo-tree-id20976 . -1) (undo-tree-id20977 . -1) (undo-tree-id20978 . -1) (undo-tree-id20979 . -1) (undo-tree-id20980 . -1) (undo-tree-id20981 . -1) (undo-tree-id20982 . -1) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) (undo-tree-id21012 . -1) (undo-tree-id21013 . -1) (undo-tree-id21014 . -1) (undo-tree-id21015 . -1) (undo-tree-id21016 . -1) (undo-tree-id21017 . -1) (undo-tree-id21018 . -1) (undo-tree-id21019 . -1) (undo-tree-id21020 . -1) (undo-tree-id21021 . -1) (undo-tree-id21022 . -1) (undo-tree-id21023 . -1) (undo-tree-id21024 . -1) (undo-tree-id21025 . -1) (undo-tree-id21026 . -1) (undo-tree-id21027 . -1) (undo-tree-id21028 . -1) (undo-tree-id21029 . -1) (undo-tree-id21030 . -1) (undo-tree-id21031 . -1) (undo-tree-id21032 . -1) (undo-tree-id21033 . -1) (undo-tree-id21034 . -1) (undo-tree-id21035 . -1) (undo-tree-id21036 . -1) (undo-tree-id21037 . -1) (undo-tree-id21038 . -1) (undo-tree-id21039 . -1) (undo-tree-id21040 . -1) (undo-tree-id21041 . -1) (undo-tree-id21042 . -1) (undo-tree-id21043 . -1) (undo-tree-id21044 . -1) (undo-tree-id21045 . -1) (undo-tree-id21046 . -1) (undo-tree-id21047 . -1) (undo-tree-id21048 . -1) (undo-tree-id21049 . -1) (undo-tree-id21050 . -1) (undo-tree-id21051 . -1) (undo-tree-id21052 . -1) (undo-tree-id21053 . -1) (undo-tree-id21054 . -1) (undo-tree-id21055 . -1) (undo-tree-id21056 . -1) (undo-tree-id21057 . -1) (undo-tree-id21058 . -1) (undo-tree-id21059 . -1) (undo-tree-id21060 . -1) (undo-tree-id21061 . -1) (undo-tree-id21062 . -1) (undo-tree-id21063 . -1) (undo-tree-id21064 . -1) (undo-tree-id21065 . -1) (undo-tree-id21066 . -1) (undo-tree-id21067 . -1) (undo-tree-id21068 . -1) (undo-tree-id21069 . -1) (undo-tree-id21070 . -1) (undo-tree-id21071 . -1) (undo-tree-id21072 . -1) (undo-tree-id21073 . -1) (undo-tree-id21074 . -1) (undo-tree-id21075 . -1) (undo-tree-id21076 . -1) (undo-tree-id21077 . -1) (undo-tree-id21078 . -1) (undo-tree-id21079 . -1) (undo-tree-id21080 . -1) (undo-tree-id21081 . -1) (undo-tree-id21082 . -1) (undo-tree-id21083 . -1) (undo-tree-id21084 . -1) (undo-tree-id21085 . -1) (undo-tree-id21086 . -1) (undo-tree-id21087 . -1) (undo-tree-id21088 . -1) (undo-tree-id21089 . -1) (undo-tree-id21090 . -1) (undo-tree-id21091 . -1) (undo-tree-id21092 . -1) (undo-tree-id21093 . -1) (undo-tree-id21094 . -1) (undo-tree-id21095 . -1) (undo-tree-id21096 . -1) (undo-tree-id21097 . -1) (undo-tree-id21098 . -1) (undo-tree-id21099 . -1) (undo-tree-id21100 . -1) (undo-tree-id21101 . -1) (undo-tree-id21102 . -1) (undo-tree-id21103 . -1) (undo-tree-id21104 . -1) (undo-tree-id21105 . -1) (undo-tree-id21106 . -1) (undo-tree-id21107 . -1) (undo-tree-id21108 . -1) (undo-tree-id21109 . -1) (undo-tree-id21110 . -1) (undo-tree-id21111 . -1) (undo-tree-id21112 . -1) (undo-tree-id21113 . -1) (undo-tree-id21114 . -1) (undo-tree-id21115 . -1) (undo-tree-id21116 . -1) (undo-tree-id21117 . -1) (undo-tree-id21118 . -1) (undo-tree-id21119 . -1) (undo-tree-id21120 . -1) (undo-tree-id21121 . -1) (undo-tree-id21122 . -1) (undo-tree-id21123 . -1) (undo-tree-id21124 . -1) (undo-tree-id21125 . -1) (undo-tree-id21126 . -1) (undo-tree-id21127 . -1) (undo-tree-id21128 . -1) (undo-tree-id21129 . -1) (undo-tree-id21130 . -1) (undo-tree-id21131 . -1) (undo-tree-id21132 . -1) (undo-tree-id21133 . -1) (undo-tree-id21134 . -1) (undo-tree-id21135 . -1) (undo-tree-id21136 . -1) (undo-tree-id21137 . -1) (undo-tree-id21138 . -1) (undo-tree-id21139 . -1) (undo-tree-id21140 . -1) (undo-tree-id21141 . -1) (undo-tree-id21142 . -1) (undo-tree-id21143 . -1) (undo-tree-id21144 . -1) (undo-tree-id21145 . -1) (undo-tree-id21146 . -1) (undo-tree-id21147 . -1) (undo-tree-id21148 . -1) (undo-tree-id21149 . -1) (undo-tree-id21150 . -1) (undo-tree-id21151 . -1) (undo-tree-id21152 . -1) (undo-tree-id21153 . -1) (undo-tree-id21154 . -1) (undo-tree-id21155 . -1) (undo-tree-id21156 . -1) (undo-tree-id21157 . -1) (undo-tree-id21158 . -1) (undo-tree-id21159 . -1) (undo-tree-id21160 . -1) (undo-tree-id21161 . -1) (undo-tree-id21162 . -1) (undo-tree-id21163 . -1) (undo-tree-id21164 . -1) (undo-tree-id21165 . -1) (undo-tree-id21166 . -1) (undo-tree-id21167 . -1) (undo-tree-id21168 . -1) (undo-tree-id21169 . -1) (undo-tree-id21170 . -1) (undo-tree-id21171 . -1) (undo-tree-id21172 . -1) (undo-tree-id21173 . -1) (undo-tree-id21174 . -1) (undo-tree-id21175 . -1) (undo-tree-id21176 . -1) (undo-tree-id21177 . -1) (undo-tree-id21178 . -1) (undo-tree-id21179 . -1) (undo-tree-id21180 . -1) (undo-tree-id21181 . -1) (undo-tree-id21182 . -1) (undo-tree-id21183 . -1) (undo-tree-id21184 . -1) (undo-tree-id21185 . -1) (undo-tree-id21186 . -1) (undo-tree-id21187 . -1) (undo-tree-id21188 . -1) (undo-tree-id21189 . -1) (undo-tree-id21190 . -1) (undo-tree-id21191 . -1) (undo-tree-id21192 . -1) (undo-tree-id21193 . -1) (undo-tree-id21194 . -1) (undo-tree-id21195 . -1) (undo-tree-id21196 . -1) (undo-tree-id21197 . -1) (undo-tree-id21198 . -1) (undo-tree-id21199 . -1) (undo-tree-id21200 . -1) (undo-tree-id21201 . -1) (undo-tree-id21202 . -1) (undo-tree-id21203 . -1) (undo-tree-id21204 . -1) (undo-tree-id21205 . -1) (undo-tree-id21206 . -1) (undo-tree-id21207 . -1) (undo-tree-id21208 . -1) (undo-tree-id21209 . -1) (undo-tree-id21210 . -1) (undo-tree-id21211 . -1) (undo-tree-id21212 . -1) (undo-tree-id21213 . -1) (undo-tree-id21214 . -1) (undo-tree-id21215 . -1) (undo-tree-id21216 . -1) (undo-tree-id21217 . -1) (undo-tree-id21218 . -1) (undo-tree-id21219 . -1) (undo-tree-id21220 . -1) (undo-tree-id21221 . -1) (undo-tree-id21222 . -1) (undo-tree-id21223 . -1) (undo-tree-id21224 . -1) (undo-tree-id21225 . -1) (undo-tree-id21226 . -1) (undo-tree-id21227 . -1) (undo-tree-id21228 . -1) (undo-tree-id21229 . -1) (undo-tree-id21230 . -1) (undo-tree-id21231 . -1) (undo-tree-id21232 . -1) (undo-tree-id21233 . -1) (undo-tree-id21234 . -1) (undo-tree-id21235 . -1) (undo-tree-id21236 . -1) (undo-tree-id21237 . -1) (undo-tree-id21238 . -1) (undo-tree-id21239 . -1) (undo-tree-id21240 . -1) (undo-tree-id21241 . -1) (undo-tree-id21242 . -1) (undo-tree-id21243 . -1) (undo-tree-id21244 . -1) (undo-tree-id21245 . -1) (undo-tree-id21246 . -1) (undo-tree-id21247 . -1) (undo-tree-id21248 . -1) (undo-tree-id21249 . -1) (undo-tree-id21250 . -1) (undo-tree-id21251 . -1) (undo-tree-id21252 . -1) (undo-tree-id21253 . -1) (undo-tree-id21254 . -1) (undo-tree-id21255 . -1) (undo-tree-id21256 . -1) (undo-tree-id21257 . -1) (undo-tree-id21258 . -1) (undo-tree-id21259 . -1) (undo-tree-id21260 . -1) (undo-tree-id21261 . -1) (undo-tree-id21262 . -1) (undo-tree-id21263 . -1) (undo-tree-id21264 . -1) (undo-tree-id21265 . -1) (undo-tree-id21266 . -1) (undo-tree-id21267 . -1) (undo-tree-id21268 . -1) (undo-tree-id21269 . -1) (undo-tree-id21270 . -1) (undo-tree-id21271 . -1) (undo-tree-id21272 . -1) (undo-tree-id21273 . -1) (undo-tree-id21274 . -1) (undo-tree-id21275 . -1) (undo-tree-id21276 . -1) (undo-tree-id21277 . -1) (undo-tree-id21278 . -1) (undo-tree-id21279 . -1) (undo-tree-id21280 . -1) (undo-tree-id21281 . -1) (undo-tree-id21282 . -1) (undo-tree-id21283 . -1) (undo-tree-id21284 . -1) (undo-tree-id21285 . -1) (undo-tree-id21286 . -1) (undo-tree-id21287 . -1) (undo-tree-id21288 . -1) (undo-tree-id21289 . -1) (undo-tree-id21290 . -1) (undo-tree-id21291 . -1) (undo-tree-id21292 . -1) (undo-tree-id21293 . -1) (undo-tree-id21294 . -1) (undo-tree-id21295 . -1) (undo-tree-id21296 . -1) (undo-tree-id21297 . -1) (undo-tree-id21298 . -1) (undo-tree-id21299 . -1) (undo-tree-id21300 . -1) (undo-tree-id21301 . -1) (undo-tree-id21302 . -1) (undo-tree-id21303 . -1) (undo-tree-id21304 . -1) (undo-tree-id21305 . -1) (undo-tree-id21306 . -1) (undo-tree-id21307 . -1) (undo-tree-id21308 . -1) (undo-tree-id21309 . -1) (undo-tree-id21310 . -1) (undo-tree-id21311 . -1) (undo-tree-id21312 . -1) (undo-tree-id21313 . -1) (undo-tree-id21314 . -1) (undo-tree-id21315 . -1) (undo-tree-id21316 . -1) (undo-tree-id21317 . -1) (undo-tree-id21318 . -1) (undo-tree-id21319 . -1) (undo-tree-id21320 . -1) (undo-tree-id21321 . -1) (undo-tree-id21322 . -1) (undo-tree-id21323 . -1) (undo-tree-id21324 . -1) (undo-tree-id21325 . -1) (undo-tree-id21326 . -1) (undo-tree-id21327 . -1) (undo-tree-id21328 . -1) (undo-tree-id21329 . -1) (undo-tree-id21330 . -1) (undo-tree-id21331 . -1) (undo-tree-id21332 . -1) (undo-tree-id21333 . -1) (undo-tree-id21334 . -1) (undo-tree-id21335 . -1) (undo-tree-id21336 . -1) (undo-tree-id21337 . -1) (undo-tree-id21338 . -1) (undo-tree-id21339 . -1) (undo-tree-id21340 . -1) (undo-tree-id21341 . -1) (undo-tree-id21342 . -1) (undo-tree-id21343 . -1) (undo-tree-id21344 . -1) (undo-tree-id21345 . -1) (undo-tree-id21346 . -1) (undo-tree-id21347 . -1) (undo-tree-id21348 . -1) (undo-tree-id21349 . -1) (undo-tree-id21350 . -1) (undo-tree-id21351 . -1) (undo-tree-id21352 . -1) (undo-tree-id21353 . -1) (undo-tree-id21354 . -1) (undo-tree-id21355 . -1) (undo-tree-id21356 . -1) (undo-tree-id21357 . -1) (undo-tree-id21358 . -1) (undo-tree-id21359 . -1) (undo-tree-id21360 . -1) (undo-tree-id21361 . -1) (undo-tree-id21362 . -1) (undo-tree-id21363 . -1) (undo-tree-id21364 . -1) (undo-tree-id21365 . -1) (undo-tree-id21366 . -1) (undo-tree-id21367 . -1) (undo-tree-id21368 . -1) (undo-tree-id21369 . -1) (undo-tree-id21370 . -1) (undo-tree-id21371 . -1) (undo-tree-id21372 . -1) (undo-tree-id21373 . -1) (undo-tree-id21374 . -1) (undo-tree-id21375 . -1) (undo-tree-id21376 . -1) (undo-tree-id21377 . -1) (undo-tree-id21378 . -1) (undo-tree-id21379 . -1) (undo-tree-id21380 . -1) (undo-tree-id21381 . -1) (undo-tree-id21382 . -1) (undo-tree-id21383 . -1) (undo-tree-id21384 . -1) (undo-tree-id21385 . -1) (undo-tree-id21386 . -1) (undo-tree-id21387 . -1) (undo-tree-id21388 . -1) (undo-tree-id21389 . -1) (undo-tree-id21390 . -1) (undo-tree-id21391 . -1) (undo-tree-id21392 . -1) (undo-tree-id21393 . -1) (undo-tree-id21394 . -1) (undo-tree-id21395 . -1) (undo-tree-id21396 . -1) (undo-tree-id21397 . -1) (undo-tree-id21398 . -1) (undo-tree-id21399 . -1) (undo-tree-id21400 . -1) (undo-tree-id21401 . -1) (undo-tree-id21402 . -1) (undo-tree-id21403 . -1) (undo-tree-id21404 . -1) (undo-tree-id21405 . -1) (undo-tree-id21406 . -1) (undo-tree-id21407 . -1) (undo-tree-id21408 . -1) (undo-tree-id21409 . -1) (undo-tree-id21410 . -1) (undo-tree-id21411 . -1) (undo-tree-id21412 . -1) (undo-tree-id21413 . -1) (undo-tree-id21414 . -1) (undo-tree-id21415 . -1) (undo-tree-id21416 . -1) (undo-tree-id21417 . -1) (undo-tree-id21418 . -1) (undo-tree-id21419 . -1) (undo-tree-id21420 . -1) (undo-tree-id21421 . -1) (undo-tree-id21422 . -1) (undo-tree-id21423 . -1) (undo-tree-id21424 . -1) (undo-tree-id21425 . -1) (undo-tree-id21426 . -1) (undo-tree-id21427 . -1) (undo-tree-id21428 . -1) (undo-tree-id21429 . -1) (undo-tree-id21430 . -1) (undo-tree-id21431 . -1) (undo-tree-id21432 . -1) (undo-tree-id21433 . -1) (undo-tree-id21434 . -1) (undo-tree-id21435 . -1) (undo-tree-id21436 . -1) (undo-tree-id21437 . -1) (undo-tree-id21438 . -1) (undo-tree-id21439 . -1) (undo-tree-id21440 . -1) (undo-tree-id21441 . -1) (undo-tree-id21442 . -1) (undo-tree-id21443 . -1) (undo-tree-id21444 . -1) (undo-tree-id21445 . -1) (undo-tree-id21446 . -1) (undo-tree-id21447 . -1) (undo-tree-id21448 . -1) (undo-tree-id21449 . -1) (undo-tree-id21450 . -1) (undo-tree-id21451 . -1) (undo-tree-id21452 . -1) (undo-tree-id21453 . -1) (undo-tree-id21454 . -1) (undo-tree-id21455 . -1) (undo-tree-id21456 . -1) (undo-tree-id21457 . -1) (undo-tree-id21458 . -1) (undo-tree-id21459 . -1) (undo-tree-id21460 . -1) (undo-tree-id21461 . -1) (undo-tree-id21462 . -1) (undo-tree-id21463 . -1) (undo-tree-id21464 . -1) (undo-tree-id21465 . -1) (undo-tree-id21466 . -1) (undo-tree-id21467 . -1) (undo-tree-id21468 . -1) (undo-tree-id21469 . -1) (undo-tree-id21470 . -1) (undo-tree-id21471 . -1) (undo-tree-id21472 . -1) (undo-tree-id21473 . -1) (undo-tree-id21474 . -1) (undo-tree-id21475 . -1) (undo-tree-id21476 . -1) (#(" " 0 1 (fontified t)) . -4696) (undo-tree-id21477 . -1) (undo-tree-id21478 . -1) (undo-tree-id21479 . -1) (undo-tree-id21480 . -1) (undo-tree-id21481 . -1) (undo-tree-id21482 . -1) (undo-tree-id21483 . -1) (undo-tree-id21484 . -1) (undo-tree-id21485 . -1) (undo-tree-id21486 . -1) (undo-tree-id21487 . -1) (undo-tree-id21488 . -1) (undo-tree-id21489 . -1) (undo-tree-id21490 . -1) (undo-tree-id21491 . -1) (undo-tree-id21492 . -1) (undo-tree-id21493 . -1) (undo-tree-id21494 . -1) (undo-tree-id21495 . -1) (undo-tree-id21496 . -1) (undo-tree-id21497 . -1) (undo-tree-id21498 . -1) (undo-tree-id21499 . -1) (undo-tree-id21500 . -1) (undo-tree-id21501 . -1) (undo-tree-id21502 . -1) (undo-tree-id21503 . -1) (undo-tree-id21504 . -1) (undo-tree-id21505 . -1) (undo-tree-id21506 . -1) (undo-tree-id21507 . -1) (undo-tree-id21508 . -1) (undo-tree-id21509 . -1) (undo-tree-id21510 . -1) (undo-tree-id21511 . -1) (undo-tree-id21512 . -1) (undo-tree-id21513 . -1) (undo-tree-id21514 . -1) (undo-tree-id21515 . -1) (undo-tree-id21516 . -1) (undo-tree-id21517 . -1) (undo-tree-id21518 . -1) (undo-tree-id21519 . -1) (undo-tree-id21520 . -1) (undo-tree-id21521 . -1) (undo-tree-id21522 . -1) (undo-tree-id21523 . -1) (undo-tree-id21524 . -1) (undo-tree-id21525 . -1) (undo-tree-id21526 . -1) (undo-tree-id21527 . -1) (undo-tree-id21528 . -1) (undo-tree-id21529 . -1) (undo-tree-id21530 . -1) (undo-tree-id21531 . -1) (undo-tree-id21532 . -1) (undo-tree-id21533 . -1) (undo-tree-id21534 . -1) (undo-tree-id21535 . -1) (undo-tree-id21536 . -1) (undo-tree-id21537 . -1) (undo-tree-id21538 . -1) (undo-tree-id21539 . -1) (undo-tree-id21540 . -1) (undo-tree-id21541 . -1) (undo-tree-id21542 . -1) (undo-tree-id21543 . -1) (undo-tree-id21544 . -1) (undo-tree-id21545 . -1) (undo-tree-id21546 . -1) (undo-tree-id21547 . -1) (undo-tree-id21548 . -1) (undo-tree-id21549 . -1) (undo-tree-id21550 . -1) (undo-tree-id21551 . -1) (undo-tree-id21552 . -1) (undo-tree-id21553 . -1) (undo-tree-id21554 . -1) (undo-tree-id21555 . -1) (undo-tree-id21556 . -1) (undo-tree-id21557 . -1) (undo-tree-id21558 . -1) (undo-tree-id21559 . -1) (undo-tree-id21560 . -1) (undo-tree-id21561 . -1) (undo-tree-id21562 . -1) (undo-tree-id21563 . -1) (undo-tree-id21564 . -1) (undo-tree-id21565 . -1) (undo-tree-id21566 . -1) (undo-tree-id21567 . -1) (undo-tree-id21568 . -1) (undo-tree-id21569 . -1) (undo-tree-id21570 . -1) (undo-tree-id21571 . -1) (undo-tree-id21572 . -1) (undo-tree-id21573 . -1) (undo-tree-id21574 . -1) (undo-tree-id21575 . -1) (undo-tree-id21576 . -1) (undo-tree-id21577 . -1) (undo-tree-id21578 . -1) (undo-tree-id21579 . -1) (undo-tree-id21580 . -1) (undo-tree-id21581 . -1) (undo-tree-id21582 . -1) (undo-tree-id21583 . -1) (undo-tree-id21584 . -1) (undo-tree-id21585 . -1) (undo-tree-id21586 . -1) (undo-tree-id21587 . -1) (undo-tree-id21588 . -1) (undo-tree-id21589 . -1) (undo-tree-id21590 . -1) (undo-tree-id21591 . -1) (undo-tree-id21592 . -1) (undo-tree-id21593 . -1) (undo-tree-id21594 . -1) (undo-tree-id21595 . -1) (undo-tree-id21596 . -1) (undo-tree-id21597 . -1) (undo-tree-id21598 . -1) (undo-tree-id21599 . -1) (undo-tree-id21600 . -1) (undo-tree-id21601 . -1) (undo-tree-id21602 . -1) (undo-tree-id21603 . -1) (undo-tree-id21604 . -1) (undo-tree-id21605 . -1) (undo-tree-id21606 . -1) (undo-tree-id21607 . -1) (undo-tree-id21608 . -1) (undo-tree-id21609 . -1) (undo-tree-id21610 . -1) (undo-tree-id21611 . -1) (undo-tree-id21612 . -1) (undo-tree-id21613 . -1) (undo-tree-id21614 . -1) (undo-tree-id21615 . -1) (undo-tree-id21616 . -1) (undo-tree-id21617 . -1) (undo-tree-id21618 . -1) (undo-tree-id21619 . -1) (undo-tree-id21620 . -1) (undo-tree-id21621 . -1) (undo-tree-id21622 . -1) (undo-tree-id21623 . -1) (undo-tree-id21624 . -1) (undo-tree-id21625 . -1) (undo-tree-id21626 . -1) (undo-tree-id21627 . -1) (undo-tree-id21628 . -1) (undo-tree-id21629 . -1) (undo-tree-id21630 . -1) (undo-tree-id21631 . -1) (undo-tree-id21632 . -1) (undo-tree-id21633 . -1) (undo-tree-id21634 . -1) (undo-tree-id21635 . -1) (undo-tree-id21636 . -1) (undo-tree-id21637 . -1) (undo-tree-id21638 . -1) (undo-tree-id21639 . -1) (undo-tree-id21640 . -1) (undo-tree-id21641 . -1) (undo-tree-id21642 . -1) (undo-tree-id21643 . -1) (undo-tree-id21644 . -1) (undo-tree-id21645 . -1) (undo-tree-id21646 . -1) (undo-tree-id21647 . -1) (undo-tree-id21648 . -1) (undo-tree-id21649 . -1) (undo-tree-id21650 . -1) (undo-tree-id21651 . -1) (undo-tree-id21652 . -1) (undo-tree-id21653 . -1) (undo-tree-id21654 . -1) (undo-tree-id21655 . -1) (undo-tree-id21656 . -1) (undo-tree-id21657 . -1) (undo-tree-id21658 . -1) (undo-tree-id21659 . -1) (undo-tree-id21660 . -1) (undo-tree-id21661 . -1) (undo-tree-id21662 . -1) (undo-tree-id21663 . -1) (undo-tree-id21664 . -1) (undo-tree-id21665 . -1) (undo-tree-id21666 . -1) (undo-tree-id21667 . -1) (undo-tree-id21668 . -1) (undo-tree-id21669 . -1) (undo-tree-id21670 . -1) (undo-tree-id21671 . -1) (undo-tree-id21672 . -1) (undo-tree-id21673 . -1) (undo-tree-id21674 . -1) (undo-tree-id21675 . -1) (undo-tree-id21676 . -1) (undo-tree-id21677 . -1) (undo-tree-id21678 . -1) (undo-tree-id21679 . -1) (undo-tree-id21680 . -1) (undo-tree-id21681 . -1) (undo-tree-id21682 . -1) (undo-tree-id21683 . -1) (undo-tree-id21684 . -1) (undo-tree-id21685 . -1) (undo-tree-id21686 . -1) (undo-tree-id21687 . -1) (undo-tree-id21688 . -1) (undo-tree-id21689 . -1) (undo-tree-id21690 . -1) (undo-tree-id21691 . -1) (undo-tree-id21692 . -1) (undo-tree-id21693 . -1) (undo-tree-id21694 . -1) (undo-tree-id21695 . -1) (undo-tree-id21696 . -1) (undo-tree-id21697 . -1) (undo-tree-id21698 . -1) (undo-tree-id21699 . -1) (undo-tree-id21700 . -1) (undo-tree-id21701 . -1) (undo-tree-id21702 . -1) (undo-tree-id21703 . -1) (undo-tree-id21704 . -1) (undo-tree-id21705 . -1) (undo-tree-id21706 . -1) (undo-tree-id21707 . -1) (undo-tree-id21708 . -1) (undo-tree-id21709 . -1) (undo-tree-id21710 . -1) (undo-tree-id21711 . -1) (undo-tree-id21712 . -1) (undo-tree-id21713 . -1) (undo-tree-id21714 . -1) (undo-tree-id21715 . -1) (undo-tree-id21716 . -1) (undo-tree-id21717 . -1) (undo-tree-id21718 . -1) (undo-tree-id21719 . -1) (undo-tree-id21720 . -1) (undo-tree-id21721 . -1) (undo-tree-id21722 . -1) (undo-tree-id21723 . -1) (undo-tree-id21724 . -1) (undo-tree-id21725 . -1) (undo-tree-id21726 . -1) (undo-tree-id21727 . -1) (undo-tree-id21728 . -1) (undo-tree-id21729 . -1) (undo-tree-id21730 . -1) (undo-tree-id21731 . -1) (undo-tree-id21732 . -1) (undo-tree-id21733 . -1) (undo-tree-id21734 . -1) (undo-tree-id21735 . -1) (undo-tree-id21736 . -1) (undo-tree-id21737 . -1) (undo-tree-id21738 . -1) (undo-tree-id21739 . -1) (undo-tree-id21740 . -1) (undo-tree-id21741 . -1) (undo-tree-id21742 . -1) (undo-tree-id21743 . -1) (undo-tree-id21744 . -1) (undo-tree-id21745 . -1) (undo-tree-id21746 . -1) (undo-tree-id21747 . -1) (undo-tree-id21748 . -1) (undo-tree-id21749 . -1) (undo-tree-id21750 . -1) (undo-tree-id21751 . -1) (undo-tree-id21752 . -1) (undo-tree-id21753 . -1) (undo-tree-id21754 . -1) (undo-tree-id21755 . -1) (undo-tree-id21756 . -1) (undo-tree-id21757 . -1) (undo-tree-id21758 . -1) (undo-tree-id21759 . -1) (undo-tree-id21760 . -1) (undo-tree-id21761 . -1) (undo-tree-id21762 . -1) (undo-tree-id21763 . -1) (undo-tree-id21764 . -1) (undo-tree-id21765 . -1) (undo-tree-id21766 . -1) (undo-tree-id21767 . -1) (undo-tree-id21768 . -1) (undo-tree-id21769 . -1) (undo-tree-id21770 . -1) (undo-tree-id21771 . -1) (undo-tree-id21772 . -1) (undo-tree-id21773 . -1) (undo-tree-id21774 . -1) (undo-tree-id21775 . -1) (undo-tree-id21776 . -1) (undo-tree-id21777 . -1) (undo-tree-id21778 . -1) (undo-tree-id21779 . -1) (undo-tree-id21780 . -1) (undo-tree-id21781 . -1) (undo-tree-id21782 . -1) (undo-tree-id21783 . -1) (undo-tree-id21784 . -1) (undo-tree-id21785 . -1) (undo-tree-id21786 . -1) (undo-tree-id21787 . -1) (undo-tree-id21788 . -1) (undo-tree-id21789 . -1) (undo-tree-id21790 . -1) (undo-tree-id21791 . -1) (undo-tree-id21792 . -1) (undo-tree-id21793 . -1) (undo-tree-id21794 . -1) (undo-tree-id21795 . -1) (undo-tree-id21796 . -1) (undo-tree-id21797 . -1) (undo-tree-id21798 . -1) (undo-tree-id21799 . -1) (undo-tree-id21800 . -1) (undo-tree-id21801 . -1) (undo-tree-id21802 . -1) (undo-tree-id21803 . -1) (undo-tree-id21804 . -1) (undo-tree-id21805 . -1) (undo-tree-id21806 . -1) (undo-tree-id21807 . -1) (undo-tree-id21808 . -1) (undo-tree-id21809 . -1) (undo-tree-id21810 . -1) (undo-tree-id21811 . -1) (undo-tree-id21812 . -1) (undo-tree-id21813 . -1) (undo-tree-id21814 . -1) (undo-tree-id21815 . -1) (undo-tree-id21816 . -1) (undo-tree-id21817 . -1) (undo-tree-id21818 . -1) (undo-tree-id21819 . -1) (undo-tree-id21820 . -1) (undo-tree-id21821 . -1) (undo-tree-id21822 . -1) (undo-tree-id21823 . -1) (undo-tree-id21824 . -1) (undo-tree-id21825 . -1) (undo-tree-id21826 . -1) (undo-tree-id21827 . -1) (undo-tree-id21828 . -1) (undo-tree-id21829 . -1) (undo-tree-id21830 . -1) (undo-tree-id21831 . -1) (undo-tree-id21832 . -1) (undo-tree-id21833 . -1) (undo-tree-id21834 . -1) (undo-tree-id21835 . -1) (undo-tree-id21836 . -1) (undo-tree-id21837 . -1) (undo-tree-id21838 . -1) (undo-tree-id21839 . -1) (undo-tree-id21840 . -1) (undo-tree-id21841 . -1) (#(" " 0 1 (fontified t)) . -4697) (undo-tree-id21842 . -1) (undo-tree-id21843 . -1) (undo-tree-id21844 . -1) (undo-tree-id21845 . -1) (undo-tree-id21846 . -1) (undo-tree-id21847 . -1) (undo-tree-id21848 . -1) (undo-tree-id21849 . -1) (undo-tree-id21850 . -1) (undo-tree-id21851 . -1) (undo-tree-id21852 . -1) (undo-tree-id21853 . -1) (undo-tree-id21854 . -1) (undo-tree-id21855 . -1) (undo-tree-id21856 . -1) (undo-tree-id21857 . -1) (undo-tree-id21858 . -1) (undo-tree-id21859 . -1) (undo-tree-id21860 . -1) (undo-tree-id21861 . -1) (undo-tree-id21862 . -1) (undo-tree-id21863 . -1) (undo-tree-id21864 . -1) (undo-tree-id21865 . -1) (undo-tree-id21866 . -1) (undo-tree-id21867 . -1) (undo-tree-id21868 . -1) (undo-tree-id21869 . -1) (undo-tree-id21870 . -1) (undo-tree-id21871 . -1) (undo-tree-id21872 . -1) (undo-tree-id21873 . -1) (undo-tree-id21874 . -1) (undo-tree-id21875 . -1) (undo-tree-id21876 . -1) (undo-tree-id21877 . -1) (undo-tree-id21878 . -1) (undo-tree-id21879 . -1) (undo-tree-id21880 . -1) (undo-tree-id21881 . -1) (undo-tree-id21882 . -1) (undo-tree-id21883 . -1) (undo-tree-id21884 . -1) (undo-tree-id21885 . -1) (undo-tree-id21886 . -1) (undo-tree-id21887 . -1) (undo-tree-id21888 . -1) (undo-tree-id21889 . -1) (undo-tree-id21890 . -1) (undo-tree-id21891 . -1) (undo-tree-id21892 . -1) (undo-tree-id21893 . -1) (undo-tree-id21894 . -1) (undo-tree-id21895 . -1) (undo-tree-id21896 . -1) (undo-tree-id21897 . -1) (undo-tree-id21898 . -1) (undo-tree-id21899 . -1) (undo-tree-id21900 . -1) (undo-tree-id21901 . -1) (undo-tree-id21902 . -1) (undo-tree-id21903 . -1) (undo-tree-id21904 . -1) (undo-tree-id21905 . -1) (undo-tree-id21906 . -1) (undo-tree-id21907 . -1) (undo-tree-id21908 . -1) (undo-tree-id21909 . -1) (undo-tree-id21910 . -1) (undo-tree-id21911 . -1) (undo-tree-id21912 . -1) (undo-tree-id21913 . -1) (undo-tree-id21914 . -1) (undo-tree-id21915 . -1) (undo-tree-id21916 . -1) (undo-tree-id21917 . -1) (undo-tree-id21918 . -1) (undo-tree-id21919 . -1) (undo-tree-id21920 . -1) (undo-tree-id21921 . -1) (undo-tree-id21922 . -1) (undo-tree-id21923 . -1) (undo-tree-id21924 . -1) (undo-tree-id21925 . -1) (undo-tree-id21926 . -1) (undo-tree-id21927 . -1) (undo-tree-id21928 . -1) (undo-tree-id21929 . -1) (undo-tree-id21930 . -1) (undo-tree-id21931 . -1) (undo-tree-id21932 . -1) (undo-tree-id21933 . -1) (undo-tree-id21934 . -1) (undo-tree-id21935 . -1) (undo-tree-id21936 . -1) (undo-tree-id21937 . -1) (undo-tree-id21938 . -1) (undo-tree-id21939 . -1) (undo-tree-id21940 . -1) (undo-tree-id21941 . -1) (undo-tree-id21942 . -1) (undo-tree-id21943 . -1) (undo-tree-id21944 . -1) (undo-tree-id21945 . -1) (undo-tree-id21946 . -1) (undo-tree-id21947 . -1) (undo-tree-id21948 . -1) (undo-tree-id21949 . -1) (undo-tree-id21950 . -1) (undo-tree-id21951 . -1) (undo-tree-id21952 . -1) (undo-tree-id21953 . -1) (undo-tree-id21954 . -1) (undo-tree-id21955 . -1) (undo-tree-id21956 . -1) (undo-tree-id21957 . -1) (undo-tree-id21958 . -1) (undo-tree-id21959 . -1) (undo-tree-id21960 . -1) (undo-tree-id21961 . -1) (undo-tree-id21962 . -1) (undo-tree-id21963 . -1) (undo-tree-id21964 . -1) (undo-tree-id21965 . -1) (undo-tree-id21966 . -1) (undo-tree-id21967 . -1) (undo-tree-id21968 . -1) (undo-tree-id21969 . -1) (undo-tree-id21970 . -1) (undo-tree-id21971 . -1) (undo-tree-id21972 . -1) (undo-tree-id21973 . -1) (undo-tree-id21974 . -1) (undo-tree-id21975 . -1) (undo-tree-id21976 . -1) (undo-tree-id21977 . -1) (undo-tree-id21978 . -1) (undo-tree-id21979 . -1) (undo-tree-id21980 . -1) (undo-tree-id21981 . -1) (undo-tree-id21982 . -1) (undo-tree-id21983 . -1) (undo-tree-id21984 . -1) (undo-tree-id21985 . -1) (undo-tree-id21986 . -1) (undo-tree-id21987 . -1) (undo-tree-id21988 . -1) (undo-tree-id21989 . -1) (undo-tree-id21990 . -1) (undo-tree-id21991 . -1) (undo-tree-id21992 . -1) (undo-tree-id21993 . -1) (undo-tree-id21994 . -1) (undo-tree-id21995 . -1) (undo-tree-id21996 . -1) (undo-tree-id21997 . -1) (undo-tree-id21998 . -1) (undo-tree-id21999 . -1) (undo-tree-id22000 . -1) (undo-tree-id22001 . -1) (undo-tree-id22002 . -1) (undo-tree-id22003 . -1) (undo-tree-id22004 . -1) (undo-tree-id22005 . -1) (undo-tree-id22006 . -1) (undo-tree-id22007 . -1) (undo-tree-id22008 . -1) (undo-tree-id22009 . -1) (undo-tree-id22010 . -1) (undo-tree-id22011 . -1) (undo-tree-id22012 . -1) (undo-tree-id22013 . -1) (undo-tree-id22014 . -1) (undo-tree-id22015 . -1) (undo-tree-id22016 . -1) (undo-tree-id22017 . -1) (undo-tree-id22018 . -1) (undo-tree-id22019 . -1) (undo-tree-id22020 . -1) (undo-tree-id22021 . -1) (undo-tree-id22022 . -1) (undo-tree-id22023 . -1) (undo-tree-id22024 . -1) (undo-tree-id22025 . -1) (undo-tree-id22026 . -1) (undo-tree-id22027 . -1) (undo-tree-id22028 . -1) (undo-tree-id22029 . -1) (undo-tree-id22030 . -1) (undo-tree-id22031 . -1) (undo-tree-id22032 . -1) (undo-tree-id22033 . -1) (undo-tree-id22034 . -1) (undo-tree-id22035 . -1) (undo-tree-id22036 . -1) (undo-tree-id22037 . -1) (undo-tree-id22038 . -1) (undo-tree-id22039 . -1) (undo-tree-id22040 . -1) (undo-tree-id22041 . -1) (undo-tree-id22042 . -1) (undo-tree-id22043 . -1) (undo-tree-id22044 . -1) (undo-tree-id22045 . -1) (undo-tree-id22046 . -1) (undo-tree-id22047 . -1) (undo-tree-id22048 . -1) (undo-tree-id22049 . -1) (undo-tree-id22050 . -1) (undo-tree-id22051 . -1) (undo-tree-id22052 . -1) (undo-tree-id22053 . -1) (undo-tree-id22054 . -1) (undo-tree-id22055 . -1) (undo-tree-id22056 . -1) (undo-tree-id22057 . -1) (undo-tree-id22058 . -1) (undo-tree-id22059 . -1) (undo-tree-id22060 . -1) (undo-tree-id22061 . -1) (undo-tree-id22062 . -1) (undo-tree-id22063 . -1) (undo-tree-id22064 . -1) (undo-tree-id22065 . -1) (undo-tree-id22066 . -1) (undo-tree-id22067 . -1) (undo-tree-id22068 . -1) (undo-tree-id22069 . -1) (undo-tree-id22070 . -1) (undo-tree-id22071 . -1) (undo-tree-id22072 . -1) (undo-tree-id22073 . -1) (undo-tree-id22074 . -1) (undo-tree-id22075 . -1) (undo-tree-id22076 . -1) (undo-tree-id22077 . -1) (undo-tree-id22078 . -1) (undo-tree-id22079 . -1) (undo-tree-id22080 . -1) (undo-tree-id22081 . -1) (undo-tree-id22082 . -1) (undo-tree-id22083 . -1) (undo-tree-id22084 . -1) (undo-tree-id22085 . -1) (undo-tree-id22086 . -1) (undo-tree-id22087 . -1) (undo-tree-id22088 . -1) (undo-tree-id22089 . -1) (undo-tree-id22090 . -1) (undo-tree-id22091 . -1) (undo-tree-id22092 . -1) (undo-tree-id22093 . -1) (undo-tree-id22094 . -1) (undo-tree-id22095 . -1) (undo-tree-id22096 . -1) (undo-tree-id22097 . -1) (undo-tree-id22098 . -1) (undo-tree-id22099 . -1) (undo-tree-id22100 . -1) (undo-tree-id22101 . -1) (undo-tree-id22102 . -1) (undo-tree-id22103 . -1) (undo-tree-id22104 . -1) (undo-tree-id22105 . -1) (undo-tree-id22106 . -1) (undo-tree-id22107 . -1) (undo-tree-id22108 . -1) (undo-tree-id22109 . -1) (undo-tree-id22110 . -1) (undo-tree-id22111 . -1) (undo-tree-id22112 . -1) (undo-tree-id22113 . -1) (undo-tree-id22114 . -1) (undo-tree-id22115 . -1) (undo-tree-id22116 . -1) (undo-tree-id22117 . -1) (undo-tree-id22118 . -1) (undo-tree-id22119 . -1) (undo-tree-id22120 . -1) (undo-tree-id22121 . -1) (undo-tree-id22122 . -1) (undo-tree-id22123 . -1) (undo-tree-id22124 . -1) (undo-tree-id22125 . -1) (undo-tree-id22126 . -1) (undo-tree-id22127 . -1) (undo-tree-id22128 . -1) (undo-tree-id22129 . -1) (undo-tree-id22130 . -1) (undo-tree-id22131 . -1) (undo-tree-id22132 . -1) (undo-tree-id22133 . -1) (undo-tree-id22134 . -1) (undo-tree-id22135 . -1) (undo-tree-id22136 . -1) (undo-tree-id22137 . -1) (undo-tree-id22138 . -1) (undo-tree-id22139 . -1) (undo-tree-id22140 . -1) (undo-tree-id22141 . -1) (undo-tree-id22142 . -1) (undo-tree-id22143 . -1) (undo-tree-id22144 . -1) (undo-tree-id22145 . -1) (undo-tree-id22146 . -1) (undo-tree-id22147 . -1) (undo-tree-id22148 . -1) (undo-tree-id22149 . -1) (undo-tree-id22150 . -1) (undo-tree-id22151 . -1) (undo-tree-id22152 . -1) (undo-tree-id22153 . -1) (undo-tree-id22154 . -1) (undo-tree-id22155 . -1) (undo-tree-id22156 . -1) (undo-tree-id22157 . -1) (undo-tree-id22158 . -1) (undo-tree-id22159 . -1) (undo-tree-id22160 . -1) (undo-tree-id22161 . -1) (undo-tree-id22162 . -1) (undo-tree-id22163 . -1) (undo-tree-id22164 . -1) (undo-tree-id22165 . -1) (undo-tree-id22166 . -1) (undo-tree-id22167 . -1) (undo-tree-id22168 . -1) (undo-tree-id22169 . -1) (undo-tree-id22170 . -1) (undo-tree-id22171 . -1) (undo-tree-id22172 . -1) (undo-tree-id22173 . -1) (undo-tree-id22174 . -1) (undo-tree-id22175 . -1) (undo-tree-id22176 . -1) (undo-tree-id22177 . -1) (undo-tree-id22178 . -1) (undo-tree-id22179 . -1) (undo-tree-id22180 . -1) (undo-tree-id22181 . -1) (undo-tree-id22182 . -1) (#(" " 0 1 (fontified t)) . -4698) (undo-tree-id22183 . -1) (undo-tree-id22184 . -1) (undo-tree-id22185 . -1) (undo-tree-id22186 . -1) (undo-tree-id22187 . -1) (undo-tree-id22188 . -1) (undo-tree-id22189 . -1) (undo-tree-id22190 . -1) (undo-tree-id22191 . -1) (undo-tree-id22192 . -1) (undo-tree-id22193 . -1) (undo-tree-id22194 . -1) (undo-tree-id22195 . -1) (undo-tree-id22196 . -1) (undo-tree-id22197 . -1) (undo-tree-id22198 . -1) (undo-tree-id22199 . -1) (undo-tree-id22200 . -1) (undo-tree-id22201 . -1) (undo-tree-id22202 . -1) (undo-tree-id22203 . -1) (undo-tree-id22204 . -1) (undo-tree-id22205 . -1) (undo-tree-id22206 . -1) (undo-tree-id22207 . -1) (undo-tree-id22208 . -1) (undo-tree-id22209 . -1) (undo-tree-id22210 . -1) (undo-tree-id22211 . -1) (undo-tree-id22212 . -1) (undo-tree-id22213 . -1) (undo-tree-id22214 . -1) (undo-tree-id22215 . -1) (undo-tree-id22216 . -1) (undo-tree-id22217 . -1) (undo-tree-id22218 . -1) (undo-tree-id22219 . -1) (undo-tree-id22220 . -1) (undo-tree-id22221 . -1) (undo-tree-id22222 . -1) (undo-tree-id22223 . -1) (undo-tree-id22224 . -1) (undo-tree-id22225 . -1) (undo-tree-id22226 . -1) (undo-tree-id22227 . -1) (undo-tree-id22228 . -1) (undo-tree-id22229 . -1) (undo-tree-id22230 . -1) (undo-tree-id22231 . -1) (undo-tree-id22232 . -1) (undo-tree-id22233 . -1) (undo-tree-id22234 . -1) (undo-tree-id22235 . -1) (undo-tree-id22236 . -1) (undo-tree-id22237 . -1) (undo-tree-id22238 . -1) (undo-tree-id22239 . -1) (undo-tree-id22240 . -1) (undo-tree-id22241 . -1) (undo-tree-id22242 . -1) (undo-tree-id22243 . -1) (undo-tree-id22244 . -1) (undo-tree-id22245 . -1) (undo-tree-id22246 . -1) (undo-tree-id22247 . -1) (undo-tree-id22248 . -1) (undo-tree-id22249 . -1) (undo-tree-id22250 . -1) (undo-tree-id22251 . -1) (undo-tree-id22252 . -1) (undo-tree-id22253 . -1) (undo-tree-id22254 . -1) (undo-tree-id22255 . -1) (undo-tree-id22256 . -1) (undo-tree-id22257 . -1) (undo-tree-id22258 . -1) (undo-tree-id22259 . -1) (undo-tree-id22260 . -1) (undo-tree-id22261 . -1) (undo-tree-id22262 . -1) (undo-tree-id22263 . -1) (undo-tree-id22264 . -1) (undo-tree-id22265 . -1) (undo-tree-id22266 . -1) (undo-tree-id22267 . -1) (undo-tree-id22268 . -1) (undo-tree-id22269 . -1) (undo-tree-id22270 . -1) (undo-tree-id22271 . -1) (undo-tree-id22272 . -1) (undo-tree-id22273 . -1) (undo-tree-id22274 . -1) (undo-tree-id22275 . -1) (undo-tree-id22276 . -1) (undo-tree-id22277 . -1) (undo-tree-id22278 . -1) (undo-tree-id22279 . -1) (undo-tree-id22280 . -1) (undo-tree-id22281 . -1) (undo-tree-id22282 . -1) (undo-tree-id22283 . -1) (undo-tree-id22284 . -1) (undo-tree-id22285 . -1) (undo-tree-id22286 . -1) (undo-tree-id22287 . -1) (undo-tree-id22288 . -1) (undo-tree-id22289 . -1) (undo-tree-id22290 . -1) (undo-tree-id22291 . -1) (undo-tree-id22292 . -1) (undo-tree-id22293 . -1) (undo-tree-id22294 . -1) (undo-tree-id22295 . -1) (undo-tree-id22296 . -1) (undo-tree-id22297 . -1) (undo-tree-id22298 . -1) (undo-tree-id22299 . -1) (undo-tree-id22300 . -1) (undo-tree-id22301 . -1) (undo-tree-id22302 . -1) (undo-tree-id22303 . -1) (undo-tree-id22304 . -1) (undo-tree-id22305 . -1) (undo-tree-id22306 . -1) (undo-tree-id22307 . -1) (undo-tree-id22308 . -1) (undo-tree-id22309 . -1) (undo-tree-id22310 . -1) (undo-tree-id22311 . -1) (undo-tree-id22312 . -1) (undo-tree-id22313 . -1) (undo-tree-id22314 . -1) (undo-tree-id22315 . -1) (undo-tree-id22316 . -1) (undo-tree-id22317 . -1) (undo-tree-id22318 . -1) (undo-tree-id22319 . -1) (undo-tree-id22320 . -1) (undo-tree-id22321 . -1) (undo-tree-id22322 . -1) (undo-tree-id22323 . -1) (undo-tree-id22324 . -1) (undo-tree-id22325 . -1) (undo-tree-id22326 . -1) (undo-tree-id22327 . -1) (undo-tree-id22328 . -1) (undo-tree-id22329 . -1) (undo-tree-id22330 . -1) (undo-tree-id22331 . -1) (undo-tree-id22332 . -1) (undo-tree-id22333 . -1) (undo-tree-id22334 . -1) (undo-tree-id22335 . -1) (undo-tree-id22336 . -1) (undo-tree-id22337 . -1) (undo-tree-id22338 . -1) (undo-tree-id22339 . -1) (undo-tree-id22340 . -1) (undo-tree-id22341 . -1) (undo-tree-id22342 . -1) (undo-tree-id22343 . -1) (undo-tree-id22344 . -1) (undo-tree-id22345 . -1) (undo-tree-id22346 . -1) (undo-tree-id22347 . -1) (undo-tree-id22348 . -1) (undo-tree-id22349 . -1) (undo-tree-id22350 . -1) (undo-tree-id22351 . -1) (undo-tree-id22352 . -1) (undo-tree-id22353 . -1) (undo-tree-id22354 . -1) (undo-tree-id22355 . -1) (undo-tree-id22356 . -1) (undo-tree-id22357 . -1) (undo-tree-id22358 . -1) (undo-tree-id22359 . -1) (undo-tree-id22360 . -1) (undo-tree-id22361 . -1) (undo-tree-id22362 . -1) (undo-tree-id22363 . -1) (undo-tree-id22364 . -1) (undo-tree-id22365 . -1) (undo-tree-id22366 . -1) (undo-tree-id22367 . -1) (undo-tree-id22368 . -1) (undo-tree-id22369 . -1) (undo-tree-id22370 . -1) (undo-tree-id22371 . -1) (undo-tree-id22372 . -1) (undo-tree-id22373 . -1) (undo-tree-id22374 . -1) (undo-tree-id22375 . -1) (undo-tree-id22376 . -1) (undo-tree-id22377 . -1) (undo-tree-id22378 . -1) (undo-tree-id22379 . -1) (undo-tree-id22380 . -1) (undo-tree-id22381 . -1) (undo-tree-id22382 . -1) (undo-tree-id22383 . -1) (undo-tree-id22384 . -1) (undo-tree-id22385 . -1) (undo-tree-id22386 . -1) (undo-tree-id22387 . -1) (undo-tree-id22388 . -1) (undo-tree-id22389 . -1) (undo-tree-id22390 . -1) (undo-tree-id22391 . -1) (undo-tree-id22392 . -1) (undo-tree-id22393 . -1) (undo-tree-id22394 . -1) (undo-tree-id22395 . -1) (undo-tree-id22396 . -1) (undo-tree-id22397 . -1) (undo-tree-id22398 . -1) (undo-tree-id22399 . -1) (undo-tree-id22400 . -1) (undo-tree-id22401 . -1) (undo-tree-id22402 . -1) (undo-tree-id22403 . -1) (undo-tree-id22404 . -1) (undo-tree-id22405 . -1) (undo-tree-id22406 . -1) (undo-tree-id22407 . -1) (undo-tree-id22408 . -1) (undo-tree-id22409 . -1) (undo-tree-id22410 . -1) (undo-tree-id22411 . -1) (undo-tree-id22412 . -1) (undo-tree-id22413 . -1) (undo-tree-id22414 . -1) (undo-tree-id22415 . -1) (undo-tree-id22416 . -1) (undo-tree-id22417 . -1) (undo-tree-id22418 . -1) (undo-tree-id22419 . -1) (undo-tree-id22420 . -1) (undo-tree-id22421 . -1) (undo-tree-id22422 . -1) (undo-tree-id22423 . -1) (undo-tree-id22424 . -1) (undo-tree-id22425 . -1) (undo-tree-id22426 . -1) (undo-tree-id22427 . -1) (undo-tree-id22428 . -1) (undo-tree-id22429 . -1) (undo-tree-id22430 . -1) (undo-tree-id22431 . -1) (undo-tree-id22432 . -1) (undo-tree-id22433 . -1) (undo-tree-id22434 . -1) (undo-tree-id22435 . -1) (undo-tree-id22436 . -1) (undo-tree-id22437 . -1) (undo-tree-id22438 . -1) (undo-tree-id22439 . -1) (undo-tree-id22440 . -1) (undo-tree-id22441 . -1) (undo-tree-id22442 . -1) (undo-tree-id22443 . -1) (undo-tree-id22444 . -1) (undo-tree-id22445 . -1) (undo-tree-id22446 . -1) (undo-tree-id22447 . -1) (undo-tree-id22448 . -1) (undo-tree-id22449 . -1) (undo-tree-id22450 . -1) (undo-tree-id22451 . -1) (undo-tree-id22452 . -1) (undo-tree-id22453 . -1) (undo-tree-id22454 . -1) (undo-tree-id22455 . -1) (undo-tree-id22456 . -1) (undo-tree-id22457 . -1) (undo-tree-id22458 . -1) (undo-tree-id22459 . -1) (undo-tree-id22460 . -1) (undo-tree-id22461 . -1) (undo-tree-id22462 . -1) (undo-tree-id22463 . -1) (undo-tree-id22464 . -1) (undo-tree-id22465 . -1) (undo-tree-id22466 . -1) (undo-tree-id22467 . -1) (undo-tree-id22468 . -1) (undo-tree-id22469 . -1) (undo-tree-id22470 . -1) (undo-tree-id22471 . -1) (undo-tree-id22472 . -1) (undo-tree-id22473 . -1) (undo-tree-id22474 . -1) (undo-tree-id22475 . -1) (undo-tree-id22476 . -1) (undo-tree-id22477 . -1) (undo-tree-id22478 . -1) (undo-tree-id22479 . -1) (undo-tree-id22480 . -1) (undo-tree-id22481 . -1) (undo-tree-id22482 . -1) (undo-tree-id22483 . -1) (undo-tree-id22484 . -1) (undo-tree-id22485 . -1) (undo-tree-id22486 . -1) (undo-tree-id22487 . -1) (undo-tree-id22488 . -1) (undo-tree-id22489 . -1) (undo-tree-id22490 . -1) (undo-tree-id22491 . -1) (undo-tree-id22492 . -1) (undo-tree-id22493 . -1) (undo-tree-id22494 . -1) (undo-tree-id22495 . -1) (undo-tree-id22496 . -1) (undo-tree-id22497 . -1) (undo-tree-id22498 . -1) (undo-tree-id22499 . -1) (#(" " 0 1 (fontified t)) . -4699) (undo-tree-id22500 . -1) (undo-tree-id22501 . -1) (undo-tree-id22502 . -1) (undo-tree-id22503 . -1) (undo-tree-id22504 . -1) (undo-tree-id22505 . -1) (undo-tree-id22506 . -1) (undo-tree-id22507 . -1) (undo-tree-id22508 . -1) (undo-tree-id22509 . -1) (undo-tree-id22510 . -1) (undo-tree-id22511 . -1) (undo-tree-id22512 . -1) (undo-tree-id22513 . -1) (undo-tree-id22514 . -1) (undo-tree-id22515 . -1) (undo-tree-id22516 . -1) (undo-tree-id22517 . -1) (undo-tree-id22518 . -1) (undo-tree-id22519 . -1) (undo-tree-id22520 . -1) (undo-tree-id22521 . -1) (undo-tree-id22522 . -1) (undo-tree-id22523 . -1) (undo-tree-id22524 . -1) (undo-tree-id22525 . -1) (undo-tree-id22526 . -1) (undo-tree-id22527 . -1) (undo-tree-id22528 . -1) (undo-tree-id22529 . -1) (undo-tree-id22530 . -1) (undo-tree-id22531 . -1) (undo-tree-id22532 . -1) (undo-tree-id22533 . -1) (undo-tree-id22534 . -1) (undo-tree-id22535 . -1) (undo-tree-id22536 . -1) (undo-tree-id22537 . -1) (undo-tree-id22538 . -1) (undo-tree-id22539 . -1) (undo-tree-id22540 . -1) (undo-tree-id22541 . -1) (undo-tree-id22542 . -1) (undo-tree-id22543 . -1) (undo-tree-id22544 . -1) (undo-tree-id22545 . -1) (undo-tree-id22546 . -1) (undo-tree-id22547 . -1) (undo-tree-id22548 . -1) (undo-tree-id22549 . -1) (undo-tree-id22550 . -1) (undo-tree-id22551 . -1) (undo-tree-id22552 . -1) (undo-tree-id22553 . -1) (undo-tree-id22554 . -1) (undo-tree-id22555 . -1) (undo-tree-id22556 . -1) (undo-tree-id22557 . -1) (undo-tree-id22558 . -1) (undo-tree-id22559 . -1) (undo-tree-id22560 . -1) (undo-tree-id22561 . -1) (undo-tree-id22562 . -1) (undo-tree-id22563 . -1) (undo-tree-id22564 . -1) (undo-tree-id22565 . -1) (undo-tree-id22566 . -1) (undo-tree-id22567 . -1) (undo-tree-id22568 . -1) (undo-tree-id22569 . -1) (undo-tree-id22570 . -1) (undo-tree-id22571 . -1) (undo-tree-id22572 . -1) (undo-tree-id22573 . -1) (undo-tree-id22574 . -1) (undo-tree-id22575 . -1) (undo-tree-id22576 . -1) (undo-tree-id22577 . -1) (undo-tree-id22578 . -1) (undo-tree-id22579 . -1) (undo-tree-id22580 . -1) (undo-tree-id22581 . -1) (undo-tree-id22582 . -1) (undo-tree-id22583 . -1) (undo-tree-id22584 . -1) (undo-tree-id22585 . -1) (undo-tree-id22586 . -1) (undo-tree-id22587 . -1) (undo-tree-id22588 . -1) (undo-tree-id22589 . -1) (undo-tree-id22590 . -1) (undo-tree-id22591 . -1) (undo-tree-id22592 . -1) (undo-tree-id22593 . -1) (undo-tree-id22594 . -1) (undo-tree-id22595 . -1) (undo-tree-id22596 . -1) (undo-tree-id22597 . -1) (undo-tree-id22598 . -1) (undo-tree-id22599 . -1) (undo-tree-id22600 . -1) (undo-tree-id22601 . -1) (undo-tree-id22602 . -1) (undo-tree-id22603 . -1) (undo-tree-id22604 . -1) (undo-tree-id22605 . -1) (undo-tree-id22606 . -1) (undo-tree-id22607 . -1) (undo-tree-id22608 . -1) (undo-tree-id22609 . -1) (undo-tree-id22610 . -1) (undo-tree-id22611 . -1) (undo-tree-id22612 . -1) (undo-tree-id22613 . -1) (undo-tree-id22614 . -1) (undo-tree-id22615 . -1) (undo-tree-id22616 . -1) (undo-tree-id22617 . -1) (undo-tree-id22618 . -1) (undo-tree-id22619 . -1) (undo-tree-id22620 . -1) (undo-tree-id22621 . -1) (undo-tree-id22622 . -1) (undo-tree-id22623 . -1) (undo-tree-id22624 . -1) (undo-tree-id22625 . -1) (undo-tree-id22626 . -1) (undo-tree-id22627 . -1) (undo-tree-id22628 . -1) (undo-tree-id22629 . -1) (undo-tree-id22630 . -1) (undo-tree-id22631 . -1) (undo-tree-id22632 . -1) (undo-tree-id22633 . -1) (undo-tree-id22634 . -1) (undo-tree-id22635 . -1) (undo-tree-id22636 . -1) (undo-tree-id22637 . -1) (undo-tree-id22638 . -1) (undo-tree-id22639 . -1) (undo-tree-id22640 . -1) (undo-tree-id22641 . -1) (undo-tree-id22642 . -1) (undo-tree-id22643 . -1) (undo-tree-id22644 . -1) (undo-tree-id22645 . -1) (undo-tree-id22646 . -1) (undo-tree-id22647 . -1) (undo-tree-id22648 . -1) (undo-tree-id22649 . -1) (undo-tree-id22650 . -1) (undo-tree-id22651 . -1) (undo-tree-id22652 . -1) (undo-tree-id22653 . -1) (undo-tree-id22654 . -1) (undo-tree-id22655 . -1) (undo-tree-id22656 . -1) (undo-tree-id22657 . -1) (undo-tree-id22658 . -1) (undo-tree-id22659 . -1) (undo-tree-id22660 . -1) (undo-tree-id22661 . -1) (undo-tree-id22662 . -1) (undo-tree-id22663 . -1) (undo-tree-id22664 . -1) (undo-tree-id22665 . -1) (undo-tree-id22666 . -1) (undo-tree-id22667 . -1) (undo-tree-id22668 . -1) (undo-tree-id22669 . -1) (undo-tree-id22670 . -1) (undo-tree-id22671 . -1) (undo-tree-id22672 . -1) (undo-tree-id22673 . -1) (undo-tree-id22674 . -1) (undo-tree-id22675 . -1) (undo-tree-id22676 . -1) (undo-tree-id22677 . -1) (undo-tree-id22678 . -1) (undo-tree-id22679 . -1) (undo-tree-id22680 . -1) (undo-tree-id22681 . -1) (undo-tree-id22682 . -1) (undo-tree-id22683 . -1) (undo-tree-id22684 . -1) (undo-tree-id22685 . -1) (undo-tree-id22686 . -1) (undo-tree-id22687 . -1) (undo-tree-id22688 . -1) (undo-tree-id22689 . -1) (undo-tree-id22690 . -1) (undo-tree-id22691 . -1) (undo-tree-id22692 . -1) (undo-tree-id22693 . -1) (undo-tree-id22694 . -1) (undo-tree-id22695 . -1) (undo-tree-id22696 . -1) (undo-tree-id22697 . -1) (undo-tree-id22698 . -1) (undo-tree-id22699 . -1) (undo-tree-id22700 . -1) (undo-tree-id22701 . -1) (undo-tree-id22702 . -1) (undo-tree-id22703 . -1) (undo-tree-id22704 . -1) (undo-tree-id22705 . -1) (undo-tree-id22706 . -1) (undo-tree-id22707 . -1) (undo-tree-id22708 . -1) (undo-tree-id22709 . -1) (undo-tree-id22710 . -1) (undo-tree-id22711 . -1) (undo-tree-id22712 . -1) (undo-tree-id22713 . -1) (undo-tree-id22714 . -1) (undo-tree-id22715 . -1) (undo-tree-id22716 . -1) (undo-tree-id22717 . -1) (undo-tree-id22718 . -1) (undo-tree-id22719 . -1) (undo-tree-id22720 . -1) (undo-tree-id22721 . -1) (undo-tree-id22722 . -1) (undo-tree-id22723 . -1) (undo-tree-id22724 . -1) (undo-tree-id22725 . -1) (undo-tree-id22726 . -1) (undo-tree-id22727 . -1) (undo-tree-id22728 . -1) (undo-tree-id22729 . -1) (undo-tree-id22730 . -1) (undo-tree-id22731 . -1) (undo-tree-id22732 . -1) (undo-tree-id22733 . -1) (undo-tree-id22734 . -1) (undo-tree-id22735 . -1) (undo-tree-id22736 . -1) (undo-tree-id22737 . -1) (undo-tree-id22738 . -1) (undo-tree-id22739 . -1) (undo-tree-id22740 . -1) (undo-tree-id22741 . -1) (undo-tree-id22742 . -1) (undo-tree-id22743 . -1) (undo-tree-id22744 . -1) (undo-tree-id22745 . -1) (undo-tree-id22746 . -1) (undo-tree-id22747 . -1) (undo-tree-id22748 . -1) (undo-tree-id22749 . -1) (undo-tree-id22750 . -1) (undo-tree-id22751 . -1) (undo-tree-id22752 . -1) (undo-tree-id22753 . -1) (undo-tree-id22754 . -1) (undo-tree-id22755 . -1) (undo-tree-id22756 . -1) (undo-tree-id22757 . -1) (undo-tree-id22758 . -1) (undo-tree-id22759 . -1) (undo-tree-id22760 . -1) (undo-tree-id22761 . -1) (undo-tree-id22762 . -1) (undo-tree-id22763 . -1) (undo-tree-id22764 . -1) (undo-tree-id22765 . -1) (undo-tree-id22766 . -1) (undo-tree-id22767 . -1) (undo-tree-id22768 . -1) (undo-tree-id22769 . -1) (undo-tree-id22770 . -1) (undo-tree-id22771 . -1) (undo-tree-id22772 . -1) (undo-tree-id22773 . -1) (undo-tree-id22774 . -1) (undo-tree-id22775 . -1) (undo-tree-id22776 . -1) (undo-tree-id22777 . -1) (undo-tree-id22778 . -1) (undo-tree-id22779 . -1) (undo-tree-id22780 . -1) (undo-tree-id22781 . -1) (undo-tree-id22782 . -1) (undo-tree-id22783 . -1) (undo-tree-id22784 . -1) (undo-tree-id22785 . -1) (undo-tree-id22786 . -1) (undo-tree-id22787 . -1) (undo-tree-id22788 . -1) (undo-tree-id22789 . -1) (undo-tree-id22790 . -1) (undo-tree-id22791 . -1) (undo-tree-id22792 . -1) (#(" " 0 1 (fontified t)) . -4700) (undo-tree-id22793 . -1) (undo-tree-id22794 . -1) (undo-tree-id22795 . -1) (undo-tree-id22796 . -1) (undo-tree-id22797 . -1) (undo-tree-id22798 . -1) (undo-tree-id22799 . -1) (undo-tree-id22800 . -1) (undo-tree-id22801 . -1) (undo-tree-id22802 . -1) (undo-tree-id22803 . -1) (undo-tree-id22804 . -1) (undo-tree-id22805 . -1) (undo-tree-id22806 . -1) (undo-tree-id22807 . -1) (undo-tree-id22808 . -1) (undo-tree-id22809 . -1) (undo-tree-id22810 . -1) (undo-tree-id22811 . -1) (undo-tree-id22812 . -1) (undo-tree-id22813 . -1) (undo-tree-id22814 . -1) (undo-tree-id22815 . -1) (undo-tree-id22816 . -1) (undo-tree-id22817 . -1) (undo-tree-id22818 . -1) (undo-tree-id22819 . -1) (undo-tree-id22820 . -1) (undo-tree-id22821 . -1) (undo-tree-id22822 . -1) (undo-tree-id22823 . -1) (undo-tree-id22824 . -1) (undo-tree-id22825 . -1) (undo-tree-id22826 . -1) (undo-tree-id22827 . -1) (undo-tree-id22828 . -1) (undo-tree-id22829 . -1) (undo-tree-id22830 . -1) (undo-tree-id22831 . -1) (undo-tree-id22832 . -1) (undo-tree-id22833 . -1) (undo-tree-id22834 . -1) (undo-tree-id22835 . -1) (undo-tree-id22836 . -1) (undo-tree-id22837 . -1) (undo-tree-id22838 . -1) (undo-tree-id22839 . -1) (undo-tree-id22840 . -1) (undo-tree-id22841 . -1) (undo-tree-id22842 . -1) (undo-tree-id22843 . -1) (undo-tree-id22844 . -1) (undo-tree-id22845 . -1) (undo-tree-id22846 . -1) (undo-tree-id22847 . -1) (undo-tree-id22848 . -1) (undo-tree-id22849 . -1) (undo-tree-id22850 . -1) (undo-tree-id22851 . -1) (undo-tree-id22852 . -1) (undo-tree-id22853 . -1) (undo-tree-id22854 . -1) (undo-tree-id22855 . -1) (undo-tree-id22856 . -1) (undo-tree-id22857 . -1) (undo-tree-id22858 . -1) (undo-tree-id22859 . -1) (undo-tree-id22860 . -1) (undo-tree-id22861 . -1) (undo-tree-id22862 . -1) (undo-tree-id22863 . -1) (undo-tree-id22864 . -1) (undo-tree-id22865 . -1) (undo-tree-id22866 . -1) (undo-tree-id22867 . -1) (undo-tree-id22868 . -1) (undo-tree-id22869 . -1) (undo-tree-id22870 . -1) (undo-tree-id22871 . -1) (undo-tree-id22872 . -1) (undo-tree-id22873 . -1) (undo-tree-id22874 . -1) (undo-tree-id22875 . -1) (undo-tree-id22876 . -1) (undo-tree-id22877 . -1) (undo-tree-id22878 . -1) (undo-tree-id22879 . -1) (undo-tree-id22880 . -1) (undo-tree-id22881 . -1) (undo-tree-id22882 . -1) (undo-tree-id22883 . -1) (undo-tree-id22884 . -1) (undo-tree-id22885 . -1) (undo-tree-id22886 . -1) (undo-tree-id22887 . -1) (undo-tree-id22888 . -1) (undo-tree-id22889 . -1) (undo-tree-id22890 . -1) (undo-tree-id22891 . -1) (undo-tree-id22892 . -1) (undo-tree-id22893 . -1) (undo-tree-id22894 . -1) (undo-tree-id22895 . -1) (undo-tree-id22896 . -1) (undo-tree-id22897 . -1) (undo-tree-id22898 . -1) (undo-tree-id22899 . -1) (undo-tree-id22900 . -1) (undo-tree-id22901 . -1) (undo-tree-id22902 . -1) (undo-tree-id22903 . -1) (undo-tree-id22904 . -1) (undo-tree-id22905 . -1) (undo-tree-id22906 . -1) (undo-tree-id22907 . -1) (undo-tree-id22908 . -1) (undo-tree-id22909 . -1) (undo-tree-id22910 . -1) (undo-tree-id22911 . -1) (undo-tree-id22912 . -1) (undo-tree-id22913 . -1) (undo-tree-id22914 . -1) (undo-tree-id22915 . -1) (undo-tree-id22916 . -1) (undo-tree-id22917 . -1) (undo-tree-id22918 . -1) (undo-tree-id22919 . -1) (undo-tree-id22920 . -1) (undo-tree-id22921 . -1) (undo-tree-id22922 . -1) (undo-tree-id22923 . -1) (undo-tree-id22924 . -1) (undo-tree-id22925 . -1) (undo-tree-id22926 . -1) (undo-tree-id22927 . -1) (undo-tree-id22928 . -1) (undo-tree-id22929 . -1) (undo-tree-id22930 . -1) (undo-tree-id22931 . -1) (undo-tree-id22932 . -1) (undo-tree-id22933 . -1) (undo-tree-id22934 . -1) (undo-tree-id22935 . -1) (undo-tree-id22936 . -1) (undo-tree-id22937 . -1) (undo-tree-id22938 . -1) (undo-tree-id22939 . -1) (undo-tree-id22940 . -1) (undo-tree-id22941 . -1) (undo-tree-id22942 . -1) (undo-tree-id22943 . -1) (undo-tree-id22944 . -1) (undo-tree-id22945 . -1) (undo-tree-id22946 . -1) (undo-tree-id22947 . -1) (undo-tree-id22948 . -1) (undo-tree-id22949 . -1) (undo-tree-id22950 . -1) (undo-tree-id22951 . -1) (undo-tree-id22952 . -1) (undo-tree-id22953 . -1) (undo-tree-id22954 . -1) (undo-tree-id22955 . -1) (undo-tree-id22956 . -1) (undo-tree-id22957 . -1) (undo-tree-id22958 . -1) (undo-tree-id22959 . -1) (undo-tree-id22960 . -1) (undo-tree-id22961 . -1) (undo-tree-id22962 . -1) (undo-tree-id22963 . -1) (undo-tree-id22964 . -1) (undo-tree-id22965 . -1) (undo-tree-id22966 . -1) (undo-tree-id22967 . -1) (undo-tree-id22968 . -1) (undo-tree-id22969 . -1) (undo-tree-id22970 . -1) (undo-tree-id22971 . -1) (undo-tree-id22972 . -1) (undo-tree-id22973 . -1) (undo-tree-id22974 . -1) (undo-tree-id22975 . -1) (undo-tree-id22976 . -1) (undo-tree-id22977 . -1) (undo-tree-id22978 . -1) (undo-tree-id22979 . -1) (undo-tree-id22980 . -1) (undo-tree-id22981 . -1) (undo-tree-id22982 . -1) (undo-tree-id22983 . -1) (undo-tree-id22984 . -1) (undo-tree-id22985 . -1) (undo-tree-id22986 . -1) (undo-tree-id22987 . -1) (undo-tree-id22988 . -1) (undo-tree-id22989 . -1) (undo-tree-id22990 . -1) (undo-tree-id22991 . -1) (undo-tree-id22992 . -1) (undo-tree-id22993 . -1) (undo-tree-id22994 . -1) (undo-tree-id22995 . -1) (undo-tree-id22996 . -1) (undo-tree-id22997 . -1) (undo-tree-id22998 . -1) (undo-tree-id22999 . -1) (undo-tree-id23000 . -1) (undo-tree-id23001 . -1) (undo-tree-id23002 . -1) (undo-tree-id23003 . -1) (undo-tree-id23004 . -1) (undo-tree-id23005 . -1) (undo-tree-id23006 . -1) (undo-tree-id23007 . -1) (undo-tree-id23008 . -1) (undo-tree-id23009 . -1) (undo-tree-id23010 . -1) (undo-tree-id23011 . -1) (undo-tree-id23012 . -1) (undo-tree-id23013 . -1) (undo-tree-id23014 . -1) (undo-tree-id23015 . -1) (undo-tree-id23016 . -1) (undo-tree-id23017 . -1) (undo-tree-id23018 . -1) (undo-tree-id23019 . -1) (undo-tree-id23020 . -1) (undo-tree-id23021 . -1) (undo-tree-id23022 . -1) (undo-tree-id23023 . -1) (undo-tree-id23024 . -1) (undo-tree-id23025 . -1) (undo-tree-id23026 . -1) (undo-tree-id23027 . -1) (undo-tree-id23028 . -1) (undo-tree-id23029 . -1) (undo-tree-id23030 . -1) (undo-tree-id23031 . -1) (undo-tree-id23032 . -1) (undo-tree-id23033 . -1) (undo-tree-id23034 . -1) (undo-tree-id23035 . -1) (undo-tree-id23036 . -1) (undo-tree-id23037 . -1) (undo-tree-id23038 . -1) (undo-tree-id23039 . -1) (undo-tree-id23040 . -1) (undo-tree-id23041 . -1) (undo-tree-id23042 . -1) (undo-tree-id23043 . -1) (undo-tree-id23044 . -1) (undo-tree-id23045 . -1) (undo-tree-id23046 . -1) (undo-tree-id23047 . -1) (undo-tree-id23048 . -1) (undo-tree-id23049 . -1) (undo-tree-id23050 . -1) (undo-tree-id23051 . -1) (undo-tree-id23052 . -1) (undo-tree-id23053 . -1) (undo-tree-id23054 . -1) (undo-tree-id23055 . -1) (undo-tree-id23056 . -1) (undo-tree-id23057 . -1) (undo-tree-id23058 . -1) (undo-tree-id23059 . -1) (undo-tree-id23060 . -1) (undo-tree-id23061 . -1) (undo-tree-id23062 . -1) (undo-tree-id23063 . -1) (undo-tree-id23064 . -1) (undo-tree-id23065 . -1) (undo-tree-id23066 . -1) (undo-tree-id23067 . -1) (undo-tree-id23068 . -1) (#(" " 0 1 (fontified t)) . -4701) (undo-tree-id23069 . -1) (undo-tree-id23070 . -1) (undo-tree-id23071 . -1) (undo-tree-id23072 . -1) (undo-tree-id23073 . -1) (undo-tree-id23074 . -1) (undo-tree-id23075 . -1) (undo-tree-id23076 . -1) (undo-tree-id23077 . -1) (undo-tree-id23078 . -1) (undo-tree-id23079 . -1) (undo-tree-id23080 . -1) (undo-tree-id23081 . -1) (undo-tree-id23082 . -1) (undo-tree-id23083 . -1) (undo-tree-id23084 . -1) (undo-tree-id23085 . -1) (undo-tree-id23086 . -1) (undo-tree-id23087 . -1) (undo-tree-id23088 . -1) (undo-tree-id23089 . -1) (undo-tree-id23090 . -1) (undo-tree-id23091 . -1) (undo-tree-id23092 . -1) (undo-tree-id23093 . -1) (undo-tree-id23094 . -1) (undo-tree-id23095 . -1) (undo-tree-id23096 . -1) (undo-tree-id23097 . -1) (undo-tree-id23098 . -1) (undo-tree-id23099 . -1) (undo-tree-id23100 . -1) (undo-tree-id23101 . -1) (undo-tree-id23102 . -1) (undo-tree-id23103 . -1) (undo-tree-id23104 . -1) (undo-tree-id23105 . -1) (undo-tree-id23106 . -1) (undo-tree-id23107 . -1) (undo-tree-id23108 . -1) (undo-tree-id23109 . -1) (undo-tree-id23110 . -1) (undo-tree-id23111 . -1) (undo-tree-id23112 . -1) (undo-tree-id23113 . -1) (undo-tree-id23114 . -1) (undo-tree-id23115 . -1) (undo-tree-id23116 . -1) (undo-tree-id23117 . -1) (undo-tree-id23118 . -1) (undo-tree-id23119 . -1) (undo-tree-id23120 . -1) (undo-tree-id23121 . -1) (undo-tree-id23122 . -1) (undo-tree-id23123 . -1) (undo-tree-id23124 . -1) (undo-tree-id23125 . -1) (undo-tree-id23126 . -1) (undo-tree-id23127 . -1) (undo-tree-id23128 . -1) (undo-tree-id23129 . -1) (undo-tree-id23130 . -1) (undo-tree-id23131 . -1) (undo-tree-id23132 . -1) (undo-tree-id23133 . -1) (undo-tree-id23134 . -1) (undo-tree-id23135 . -1) (undo-tree-id23136 . -1) (undo-tree-id23137 . -1) (undo-tree-id23138 . -1) (undo-tree-id23139 . -1) (undo-tree-id23140 . -1) (undo-tree-id23141 . -1) (undo-tree-id23142 . -1) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1) (undo-tree-id23145 . -1) (undo-tree-id23146 . -1) (undo-tree-id23147 . -1) (undo-tree-id23148 . -1) (undo-tree-id23149 . -1) (undo-tree-id23150 . -1) (undo-tree-id23151 . -1) (undo-tree-id23152 . -1) (undo-tree-id23153 . -1) (undo-tree-id23154 . -1) (undo-tree-id23155 . -1) (undo-tree-id23156 . -1) (undo-tree-id23157 . -1) (undo-tree-id23158 . -1) (undo-tree-id23159 . -1) (undo-tree-id23160 . -1) (undo-tree-id23161 . -1) (undo-tree-id23162 . -1) (undo-tree-id23163 . -1) (undo-tree-id23164 . -1) (undo-tree-id23165 . -1) (undo-tree-id23166 . -1) (undo-tree-id23167 . -1) (undo-tree-id23168 . -1) (undo-tree-id23169 . -1) (undo-tree-id23170 . -1) (undo-tree-id23171 . -1) (undo-tree-id23172 . -1) (undo-tree-id23173 . -1) (undo-tree-id23174 . -1) (undo-tree-id23175 . -1) (undo-tree-id23176 . -1) (undo-tree-id23177 . -1) (undo-tree-id23178 . -1) (undo-tree-id23179 . -1) (undo-tree-id23180 . -1) (undo-tree-id23181 . -1) (undo-tree-id23182 . -1) (undo-tree-id23183 . -1) (undo-tree-id23184 . -1) (undo-tree-id23185 . -1) (undo-tree-id23186 . -1) (undo-tree-id23187 . -1) (undo-tree-id23188 . -1) (undo-tree-id23189 . -1) (undo-tree-id23190 . -1) (undo-tree-id23191 . -1) (undo-tree-id23192 . -1) (undo-tree-id23193 . -1) (undo-tree-id23194 . -1) (undo-tree-id23195 . -1) (undo-tree-id23196 . -1) (undo-tree-id23197 . -1) (undo-tree-id23198 . -1) (undo-tree-id23199 . -1) (undo-tree-id23200 . -1) (undo-tree-id23201 . -1) (undo-tree-id23202 . -1) (undo-tree-id23203 . -1) (undo-tree-id23204 . -1) (undo-tree-id23205 . -1) (undo-tree-id23206 . -1) (undo-tree-id23207 . -1) (undo-tree-id23208 . -1) (undo-tree-id23209 . -1) (undo-tree-id23210 . -1) (undo-tree-id23211 . -1) (undo-tree-id23212 . -1) (undo-tree-id23213 . -1) (undo-tree-id23214 . -1) (undo-tree-id23215 . -1) (undo-tree-id23216 . -1) (undo-tree-id23217 . -1) (undo-tree-id23218 . -1) (undo-tree-id23219 . -1) (undo-tree-id23220 . -1) (undo-tree-id23221 . -1) (undo-tree-id23222 . -1) (undo-tree-id23223 . -1) (undo-tree-id23224 . -1) (undo-tree-id23225 . -1) (undo-tree-id23226 . -1) (undo-tree-id23227 . -1) (undo-tree-id23228 . -1) (undo-tree-id23229 . -1) (undo-tree-id23230 . -1) (undo-tree-id23231 . -1) (undo-tree-id23232 . -1) (undo-tree-id23233 . -1) (undo-tree-id23234 . -1) (undo-tree-id23235 . -1) (undo-tree-id23236 . -1) (undo-tree-id23237 . -1) (undo-tree-id23238 . -1) (undo-tree-id23239 . -1) (undo-tree-id23240 . -1) (undo-tree-id23241 . -1) (undo-tree-id23242 . -1) (undo-tree-id23243 . -1) (undo-tree-id23244 . -1) (undo-tree-id23245 . -1) (undo-tree-id23246 . -1) (undo-tree-id23247 . -1) (undo-tree-id23248 . -1) (undo-tree-id23249 . -1) (undo-tree-id23250 . -1) (undo-tree-id23251 . -1) (undo-tree-id23252 . -1) (undo-tree-id23253 . -1) (undo-tree-id23254 . -1) (undo-tree-id23255 . -1) (undo-tree-id23256 . -1) (undo-tree-id23257 . -1) (undo-tree-id23258 . -1) (undo-tree-id23259 . -1) (undo-tree-id23260 . -1) (undo-tree-id23261 . -1) (undo-tree-id23262 . -1) (undo-tree-id23263 . -1) (undo-tree-id23264 . -1) (undo-tree-id23265 . -1) (undo-tree-id23266 . -1) (undo-tree-id23267 . -1) (undo-tree-id23268 . -1) (undo-tree-id23269 . -1) (undo-tree-id23270 . -1) (undo-tree-id23271 . -1) (undo-tree-id23272 . -1) (undo-tree-id23273 . -1) (undo-tree-id23274 . -1) (undo-tree-id23275 . -1) (undo-tree-id23276 . -1) (undo-tree-id23277 . -1) (undo-tree-id23278 . -1) (undo-tree-id23279 . -1) (undo-tree-id23280 . -1) (undo-tree-id23281 . -1) (undo-tree-id23282 . -1) (undo-tree-id23283 . -1) (undo-tree-id23284 . -1) (undo-tree-id23285 . -1) (undo-tree-id23286 . -1) (undo-tree-id23287 . -1) (undo-tree-id23288 . -1) (undo-tree-id23289 . -1) (undo-tree-id23290 . -1) (undo-tree-id23291 . -1) (undo-tree-id23292 . -1) (undo-tree-id23293 . -1) (undo-tree-id23294 . -1) (undo-tree-id23295 . -1) (undo-tree-id23296 . -1) (undo-tree-id23297 . -1) (undo-tree-id23298 . -1) (undo-tree-id23299 . -1) (undo-tree-id23300 . -1) (undo-tree-id23301 . -1) (undo-tree-id23302 . -1) (undo-tree-id23303 . -1) (undo-tree-id23304 . -1) (undo-tree-id23305 . -1) (undo-tree-id23306 . -1) (undo-tree-id23307 . -1) (undo-tree-id23308 . -1) (undo-tree-id23309 . -1) (undo-tree-id23310 . -1) (undo-tree-id23311 . -1) (undo-tree-id23312 . -1) (undo-tree-id23313 . -1) (undo-tree-id23314 . -1) (undo-tree-id23315 . -1) (undo-tree-id23316 . -1) (undo-tree-id23317 . -1) (undo-tree-id23318 . -1) (undo-tree-id23319 . -1) (undo-tree-id23320 . -1) (undo-tree-id23321 . -1) (undo-tree-id23322 . -1) (undo-tree-id23323 . -1) (undo-tree-id23324 . -1) (undo-tree-id23325 . -1) (undo-tree-id23326 . -1) (undo-tree-id23327 . -1) (#(" " 0 1 (fontified t)) . -4702) (undo-tree-id23328 . -1) (undo-tree-id23329 . -1) (undo-tree-id23330 . -1) (undo-tree-id23331 . -1) (undo-tree-id23332 . -1) (undo-tree-id23333 . -1) (undo-tree-id23334 . -1) (undo-tree-id23335 . -1) (undo-tree-id23336 . -1) (undo-tree-id23337 . -1) (undo-tree-id23338 . -1) (undo-tree-id23339 . -1) (undo-tree-id23340 . -1) (undo-tree-id23341 . -1) (undo-tree-id23342 . -1) (undo-tree-id23343 . -1) (undo-tree-id23344 . -1) (undo-tree-id23345 . -1) (undo-tree-id23346 . -1) (undo-tree-id23347 . -1) (undo-tree-id23348 . -1) (undo-tree-id23349 . -1) (undo-tree-id23350 . -1) (undo-tree-id23351 . -1) (undo-tree-id23352 . -1) (undo-tree-id23353 . -1) (undo-tree-id23354 . -1) (undo-tree-id23355 . -1) (undo-tree-id23356 . -1) (undo-tree-id23357 . -1) (undo-tree-id23358 . -1) (undo-tree-id23359 . -1) (undo-tree-id23360 . -1) (undo-tree-id23361 . -1) (undo-tree-id23362 . -1) (undo-tree-id23363 . -1) (undo-tree-id23364 . -1) (undo-tree-id23365 . -1) (undo-tree-id23366 . -1) (undo-tree-id23367 . -1) (undo-tree-id23368 . -1) (undo-tree-id23369 . -1) (undo-tree-id23370 . -1) (undo-tree-id23371 . -1) (undo-tree-id23372 . -1) (undo-tree-id23373 . -1) (undo-tree-id23374 . -1) (undo-tree-id23375 . -1) (undo-tree-id23376 . -1) (undo-tree-id23377 . -1) (undo-tree-id23378 . -1) (undo-tree-id23379 . -1) (undo-tree-id23380 . -1) (undo-tree-id23381 . -1) (undo-tree-id23382 . -1) (undo-tree-id23383 . -1) (undo-tree-id23384 . -1) (undo-tree-id23385 . -1) (undo-tree-id23386 . -1) (undo-tree-id23387 . -1) (undo-tree-id23388 . -1) (undo-tree-id23389 . -1) (undo-tree-id23390 . -1) (undo-tree-id23391 . -1) (undo-tree-id23392 . -1) (undo-tree-id23393 . -1) (undo-tree-id23394 . -1) (undo-tree-id23395 . -1) (undo-tree-id23396 . -1) (undo-tree-id23397 . -1) (undo-tree-id23398 . -1) (undo-tree-id23399 . -1) (undo-tree-id23400 . -1) (undo-tree-id23401 . -1) (undo-tree-id23402 . -1) (undo-tree-id23403 . -1) (undo-tree-id23404 . -1) (undo-tree-id23405 . -1) (undo-tree-id23406 . -1) (undo-tree-id23407 . -1) (undo-tree-id23408 . -1) (undo-tree-id23409 . -1) (undo-tree-id23410 . -1) (undo-tree-id23411 . -1) (undo-tree-id23412 . -1) (undo-tree-id23413 . -1) (undo-tree-id23414 . -1) (undo-tree-id23415 . -1) (undo-tree-id23416 . -1) (undo-tree-id23417 . -1) (undo-tree-id23418 . -1) (undo-tree-id23419 . -1) (undo-tree-id23420 . -1) (undo-tree-id23421 . -1) (undo-tree-id23422 . -1) (undo-tree-id23423 . -1) (undo-tree-id23424 . -1) (undo-tree-id23425 . -1) (undo-tree-id23426 . -1) (undo-tree-id23427 . -1) (undo-tree-id23428 . -1) (undo-tree-id23429 . -1) (undo-tree-id23430 . -1) (undo-tree-id23431 . -1) (undo-tree-id23432 . -1) (undo-tree-id23433 . -1) (undo-tree-id23434 . -1) (undo-tree-id23435 . -1) (undo-tree-id23436 . -1) (undo-tree-id23437 . -1) (undo-tree-id23438 . -1) (undo-tree-id23439 . -1) (undo-tree-id23440 . -1) (undo-tree-id23441 . -1) (undo-tree-id23442 . -1) (undo-tree-id23443 . -1) (undo-tree-id23444 . -1) (undo-tree-id23445 . -1) (undo-tree-id23446 . -1) (undo-tree-id23447 . -1) (undo-tree-id23448 . -1) (undo-tree-id23449 . -1) (undo-tree-id23450 . -1) (undo-tree-id23451 . -1) (undo-tree-id23452 . -1) (undo-tree-id23453 . -1) (undo-tree-id23454 . -1) (undo-tree-id23455 . -1) (undo-tree-id23456 . -1) (undo-tree-id23457 . -1) (undo-tree-id23458 . -1) (undo-tree-id23459 . -1) (undo-tree-id23460 . -1) (undo-tree-id23461 . -1) (undo-tree-id23462 . -1) (undo-tree-id23463 . -1) (undo-tree-id23464 . -1) (undo-tree-id23465 . -1) (undo-tree-id23466 . -1) (undo-tree-id23467 . -1) (undo-tree-id23468 . -1) (undo-tree-id23469 . -1) (undo-tree-id23470 . -1) (undo-tree-id23471 . -1) (undo-tree-id23472 . -1) (undo-tree-id23473 . -1) (undo-tree-id23474 . -1) (undo-tree-id23475 . -1) (undo-tree-id23476 . -1) (undo-tree-id23477 . -1) (undo-tree-id23478 . -1) (undo-tree-id23479 . -1) (undo-tree-id23480 . -1) (undo-tree-id23481 . -1) (undo-tree-id23482 . -1) (undo-tree-id23483 . -1) (undo-tree-id23484 . -1) (undo-tree-id23485 . -1) (undo-tree-id23486 . -1) (undo-tree-id23487 . -1) (undo-tree-id23488 . -1) (undo-tree-id23489 . -1) (undo-tree-id23490 . -1) (undo-tree-id23491 . -1) (undo-tree-id23492 . -1) (undo-tree-id23493 . -1) (undo-tree-id23494 . -1) (undo-tree-id23495 . -1) (undo-tree-id23496 . -1) (undo-tree-id23497 . -1) (undo-tree-id23498 . -1) (undo-tree-id23499 . -1) (undo-tree-id23500 . -1) (undo-tree-id23501 . -1) (undo-tree-id23502 . -1) (undo-tree-id23503 . -1) (undo-tree-id23504 . -1) (undo-tree-id23505 . -1) (undo-tree-id23506 . -1) (undo-tree-id23507 . -1) (undo-tree-id23508 . -1) (undo-tree-id23509 . -1) (undo-tree-id23510 . -1) (undo-tree-id23511 . -1) (undo-tree-id23512 . -1) (undo-tree-id23513 . -1) (undo-tree-id23514 . -1) (undo-tree-id23515 . -1) (undo-tree-id23516 . -1) (undo-tree-id23517 . -1) (undo-tree-id23518 . -1) (undo-tree-id23519 . -1) (undo-tree-id23520 . -1) (undo-tree-id23521 . -1) (undo-tree-id23522 . -1) (undo-tree-id23523 . -1) (undo-tree-id23524 . -1) (undo-tree-id23525 . -1) (undo-tree-id23526 . -1) (undo-tree-id23527 . -1) (undo-tree-id23528 . -1) (undo-tree-id23529 . -1) (undo-tree-id23530 . -1) (undo-tree-id23531 . -1) (undo-tree-id23532 . -1) (undo-tree-id23533 . -1) (undo-tree-id23534 . -1) (undo-tree-id23535 . -1) (undo-tree-id23536 . -1) (undo-tree-id23537 . -1) (undo-tree-id23538 . -1) (undo-tree-id23539 . -1) (undo-tree-id23540 . -1) (undo-tree-id23541 . -1) (undo-tree-id23542 . -1) (undo-tree-id23543 . -1) (undo-tree-id23544 . -1) (undo-tree-id23545 . -1) (undo-tree-id23546 . -1) (undo-tree-id23547 . -1) (undo-tree-id23548 . -1) (undo-tree-id23549 . -1) (undo-tree-id23550 . -1) (undo-tree-id23551 . -1) (undo-tree-id23552 . -1) (undo-tree-id23553 . -1) (undo-tree-id23554 . -1) (undo-tree-id23555 . -1) (undo-tree-id23556 . -1) (undo-tree-id23557 . -1) (undo-tree-id23558 . -1) (undo-tree-id23559 . -1) (undo-tree-id23560 . -1) (undo-tree-id23561 . -1) (undo-tree-id23562 . -1) (undo-tree-id23563 . -1) (undo-tree-id23564 . -1) (undo-tree-id23565 . -1) (undo-tree-id23566 . -1) (undo-tree-id23567 . -1) (undo-tree-id23568 . -1) (undo-tree-id23569 . -1) (#(" " 0 1 (fontified t)) . -4703) (undo-tree-id23570 . -1) (undo-tree-id23571 . -1) (undo-tree-id23572 . -1) (undo-tree-id23573 . -1) (undo-tree-id23574 . -1) (undo-tree-id23575 . -1) (undo-tree-id23576 . -1) (undo-tree-id23577 . -1) (undo-tree-id23578 . -1) (undo-tree-id23579 . -1) (undo-tree-id23580 . -1) (undo-tree-id23581 . -1) (undo-tree-id23582 . -1) (undo-tree-id23583 . -1) (undo-tree-id23584 . -1) (undo-tree-id23585 . -1) (undo-tree-id23586 . -1) (undo-tree-id23587 . -1) (undo-tree-id23588 . -1) (undo-tree-id23589 . -1) (undo-tree-id23590 . -1) (undo-tree-id23591 . -1) (undo-tree-id23592 . -1) (undo-tree-id23593 . -1) (undo-tree-id23594 . -1) (undo-tree-id23595 . -1) (undo-tree-id23596 . -1) (undo-tree-id23597 . -1) (undo-tree-id23598 . -1) (undo-tree-id23599 . -1) (undo-tree-id23600 . -1) (undo-tree-id23601 . -1) (undo-tree-id23602 . -1) (undo-tree-id23603 . -1) (undo-tree-id23604 . -1) (undo-tree-id23605 . -1) (undo-tree-id23606 . -1) (undo-tree-id23607 . -1) (undo-tree-id23608 . -1) (undo-tree-id23609 . -1) (undo-tree-id23610 . -1) (undo-tree-id23611 . -1) (undo-tree-id23612 . -1) (undo-tree-id23613 . -1) (undo-tree-id23614 . -1) (undo-tree-id23615 . -1) (undo-tree-id23616 . -1) (undo-tree-id23617 . -1) (undo-tree-id23618 . -1) (undo-tree-id23619 . -1) (undo-tree-id23620 . -1) (undo-tree-id23621 . -1) (undo-tree-id23622 . -1) (undo-tree-id23623 . -1) (undo-tree-id23624 . -1) (undo-tree-id23625 . -1) (undo-tree-id23626 . -1) (undo-tree-id23627 . -1) (undo-tree-id23628 . -1) (undo-tree-id23629 . -1) (undo-tree-id23630 . -1) (undo-tree-id23631 . -1) (undo-tree-id23632 . -1) (undo-tree-id23633 . -1) (undo-tree-id23634 . -1) (undo-tree-id23635 . -1) (undo-tree-id23636 . -1) (undo-tree-id23637 . -1) (undo-tree-id23638 . -1) (undo-tree-id23639 . -1) (undo-tree-id23640 . -1) (undo-tree-id23641 . -1) (undo-tree-id23642 . -1) (undo-tree-id23643 . -1) (undo-tree-id23644 . -1) (undo-tree-id23645 . -1) (undo-tree-id23646 . -1) (undo-tree-id23647 . -1) (undo-tree-id23648 . -1) (undo-tree-id23649 . -1) (undo-tree-id23650 . -1) (undo-tree-id23651 . -1) (undo-tree-id23652 . -1) (undo-tree-id23653 . -1) (undo-tree-id23654 . -1) (undo-tree-id23655 . -1) (undo-tree-id23656 . -1) (undo-tree-id23657 . -1) (undo-tree-id23658 . -1) (undo-tree-id23659 . -1) (undo-tree-id23660 . -1) (undo-tree-id23661 . -1) (undo-tree-id23662 . -1) (undo-tree-id23663 . -1) (undo-tree-id23664 . -1) (undo-tree-id23665 . -1) (undo-tree-id23666 . -1) (undo-tree-id23667 . -1) (undo-tree-id23668 . -1) (undo-tree-id23669 . -1) (undo-tree-id23670 . -1) (undo-tree-id23671 . -1) (undo-tree-id23672 . -1) (undo-tree-id23673 . -1) (undo-tree-id23674 . -1) (undo-tree-id23675 . -1) (undo-tree-id23676 . -1) (undo-tree-id23677 . -1) (undo-tree-id23678 . -1) (undo-tree-id23679 . -1) (undo-tree-id23680 . -1) (undo-tree-id23681 . -1) (undo-tree-id23682 . -1) (undo-tree-id23683 . -1) (undo-tree-id23684 . -1) (undo-tree-id23685 . -1) (undo-tree-id23686 . -1) (undo-tree-id23687 . -1) (undo-tree-id23688 . -1) (undo-tree-id23689 . -1) (undo-tree-id23690 . -1) (undo-tree-id23691 . -1) (undo-tree-id23692 . -1) (undo-tree-id23693 . -1) (undo-tree-id23694 . -1) (undo-tree-id23695 . -1) (undo-tree-id23696 . -1) (undo-tree-id23697 . -1) (undo-tree-id23698 . -1) (undo-tree-id23699 . -1) (undo-tree-id23700 . -1) (undo-tree-id23701 . -1) (undo-tree-id23702 . -1) (undo-tree-id23703 . -1) (undo-tree-id23704 . -1) (undo-tree-id23705 . -1) (undo-tree-id23706 . -1) (undo-tree-id23707 . -1) (undo-tree-id23708 . -1) (undo-tree-id23709 . -1) (undo-tree-id23710 . -1) (undo-tree-id23711 . -1) (undo-tree-id23712 . -1) (undo-tree-id23713 . -1) (undo-tree-id23714 . -1) (undo-tree-id23715 . -1) (undo-tree-id23716 . -1) (undo-tree-id23717 . -1) (undo-tree-id23718 . -1) (undo-tree-id23719 . -1) (undo-tree-id23720 . -1) (undo-tree-id23721 . -1) (undo-tree-id23722 . -1) (undo-tree-id23723 . -1) (undo-tree-id23724 . -1) (undo-tree-id23725 . -1) (undo-tree-id23726 . -1) (undo-tree-id23727 . -1) (undo-tree-id23728 . -1) (undo-tree-id23729 . -1) (undo-tree-id23730 . -1) (undo-tree-id23731 . -1) (undo-tree-id23732 . -1) (undo-tree-id23733 . -1) (undo-tree-id23734 . -1) (undo-tree-id23735 . -1) (undo-tree-id23736 . -1) (undo-tree-id23737 . -1) (undo-tree-id23738 . -1) (undo-tree-id23739 . -1) (undo-tree-id23740 . -1) (undo-tree-id23741 . -1) (undo-tree-id23742 . -1) (undo-tree-id23743 . -1) (undo-tree-id23744 . -1) (undo-tree-id23745 . -1) (undo-tree-id23746 . -1) (undo-tree-id23747 . -1) (undo-tree-id23748 . -1) (undo-tree-id23749 . -1) (undo-tree-id23750 . -1) (undo-tree-id23751 . -1) (undo-tree-id23752 . -1) (undo-tree-id23753 . -1) (undo-tree-id23754 . -1) (undo-tree-id23755 . -1) (undo-tree-id23756 . -1) (undo-tree-id23757 . -1) (undo-tree-id23758 . -1) (undo-tree-id23759 . -1) (undo-tree-id23760 . -1) (undo-tree-id23761 . -1) (undo-tree-id23762 . -1) (undo-tree-id23763 . -1) (undo-tree-id23764 . -1) (undo-tree-id23765 . -1) (undo-tree-id23766 . -1) (undo-tree-id23767 . -1) (undo-tree-id23768 . -1) (undo-tree-id23769 . -1) (undo-tree-id23770 . -1) (undo-tree-id23771 . -1) (undo-tree-id23772 . -1) (undo-tree-id23773 . -1) (undo-tree-id23774 . -1) (undo-tree-id23775 . -1) (undo-tree-id23776 . -1) (undo-tree-id23777 . -1) (undo-tree-id23778 . -1) (undo-tree-id23779 . -1) (undo-tree-id23780 . -1) (undo-tree-id23781 . -1) (undo-tree-id23782 . -1) (undo-tree-id23783 . -1) (undo-tree-id23784 . -1) (undo-tree-id23785 . -1) (undo-tree-id23786 . -1) (undo-tree-id23787 . -1) (undo-tree-id23788 . -1) (undo-tree-id23789 . -1) (undo-tree-id23790 . -1) (undo-tree-id23791 . -1) (undo-tree-id23792 . -1) (undo-tree-id23793 . -1) (undo-tree-id23794 . -1) (undo-tree-id23795 . -1) (undo-tree-id23796 . -1) (undo-tree-id23797 . -1) (undo-tree-id23798 . -1) (undo-tree-id23799 . -1) (undo-tree-id23800 . -1) (undo-tree-id23801 . -1) (#(" " 0 1 (fontified t)) . -4704) (undo-tree-id23802 . -1) (undo-tree-id23803 . -1) (undo-tree-id23804 . -1) (undo-tree-id23805 . -1) (undo-tree-id23806 . -1) (undo-tree-id23807 . -1) (undo-tree-id23808 . -1) (undo-tree-id23809 . -1) (undo-tree-id23810 . -1) (undo-tree-id23811 . -1) (undo-tree-id23812 . -1) (undo-tree-id23813 . -1) (undo-tree-id23814 . -1) (undo-tree-id23815 . -1) (undo-tree-id23816 . -1) (undo-tree-id23817 . -1) (undo-tree-id23818 . -1) (undo-tree-id23819 . -1) (undo-tree-id23820 . -1) (undo-tree-id23821 . -1) (undo-tree-id23822 . -1) (undo-tree-id23823 . -1) (undo-tree-id23824 . -1) (undo-tree-id23825 . -1) (undo-tree-id23826 . -1) (undo-tree-id23827 . -1) (undo-tree-id23828 . -1) (undo-tree-id23829 . -1) (undo-tree-id23830 . -1) (undo-tree-id23831 . -1) (undo-tree-id23832 . -1) (undo-tree-id23833 . -1) (undo-tree-id23834 . -1) (undo-tree-id23835 . -1) (undo-tree-id23836 . -1) (undo-tree-id23837 . -1) (undo-tree-id23838 . -1) (undo-tree-id23839 . -1) (undo-tree-id23840 . -1) (undo-tree-id23841 . -1) (undo-tree-id23842 . -1) (undo-tree-id23843 . -1) (undo-tree-id23844 . -1) (undo-tree-id23845 . -1) (undo-tree-id23846 . -1) (undo-tree-id23847 . -1) (undo-tree-id23848 . -1) (undo-tree-id23849 . -1) (undo-tree-id23850 . -1) (undo-tree-id23851 . -1) (undo-tree-id23852 . -1) (undo-tree-id23853 . -1) (undo-tree-id23854 . -1) (undo-tree-id23855 . -1) (undo-tree-id23856 . -1) (undo-tree-id23857 . -1) (undo-tree-id23858 . -1) (undo-tree-id23859 . -1) (undo-tree-id23860 . -1) (undo-tree-id23861 . -1) (undo-tree-id23862 . -1) (undo-tree-id23863 . -1) (undo-tree-id23864 . -1) (undo-tree-id23865 . -1) (undo-tree-id23866 . -1) (undo-tree-id23867 . -1) (undo-tree-id23868 . -1) (undo-tree-id23869 . -1) (undo-tree-id23870 . -1) (undo-tree-id23871 . -1) (undo-tree-id23872 . -1) (undo-tree-id23873 . -1) (undo-tree-id23874 . -1) (undo-tree-id23875 . -1) (undo-tree-id23876 . -1) (undo-tree-id23877 . -1) (undo-tree-id23878 . -1) (undo-tree-id23879 . -1) (undo-tree-id23880 . -1) (undo-tree-id23881 . -1) (undo-tree-id23882 . -1) (undo-tree-id23883 . -1) (undo-tree-id23884 . -1) (undo-tree-id23885 . -1) (undo-tree-id23886 . -1) (undo-tree-id23887 . -1) (undo-tree-id23888 . -1) (undo-tree-id23889 . -1) (undo-tree-id23890 . -1) (undo-tree-id23891 . -1) (undo-tree-id23892 . -1) (undo-tree-id23893 . -1) (undo-tree-id23894 . -1) (undo-tree-id23895 . -1) (undo-tree-id23896 . -1) (undo-tree-id23897 . -1) (undo-tree-id23898 . -1) (undo-tree-id23899 . -1) (undo-tree-id23900 . -1) (undo-tree-id23901 . -1) (undo-tree-id23902 . -1) (undo-tree-id23903 . -1) (undo-tree-id23904 . -1) (undo-tree-id23905 . -1) (undo-tree-id23906 . -1) (undo-tree-id23907 . -1) (undo-tree-id23908 . -1) (undo-tree-id23909 . -1) (undo-tree-id23910 . -1) (undo-tree-id23911 . -1) (undo-tree-id23912 . -1) (undo-tree-id23913 . -1) (undo-tree-id23914 . -1) (undo-tree-id23915 . -1) (undo-tree-id23916 . -1) (undo-tree-id23917 . -1) (undo-tree-id23918 . -1) (undo-tree-id23919 . -1) (undo-tree-id23920 . -1) (undo-tree-id23921 . -1) (undo-tree-id23922 . -1) (undo-tree-id23923 . -1) (undo-tree-id23924 . -1) (undo-tree-id23925 . -1) (undo-tree-id23926 . -1) (undo-tree-id23927 . -1) (undo-tree-id23928 . -1) (undo-tree-id23929 . -1) (undo-tree-id23930 . -1) (undo-tree-id23931 . -1) (undo-tree-id23932 . -1) (undo-tree-id23933 . -1) (undo-tree-id23934 . -1) (undo-tree-id23935 . -1) (undo-tree-id23936 . -1) (undo-tree-id23937 . -1) (undo-tree-id23938 . -1) (undo-tree-id23939 . -1) (undo-tree-id23940 . -1) (undo-tree-id23941 . -1) (undo-tree-id23942 . -1) (undo-tree-id23943 . -1) (undo-tree-id23944 . -1) (undo-tree-id23945 . -1) (undo-tree-id23946 . -1) (undo-tree-id23947 . -1) (undo-tree-id23948 . -1) (undo-tree-id23949 . -1) (undo-tree-id23950 . -1) (undo-tree-id23951 . -1) (undo-tree-id23952 . -1) (undo-tree-id23953 . -1) (undo-tree-id23954 . -1) (undo-tree-id23955 . -1) (undo-tree-id23956 . -1) (undo-tree-id23957 . -1) (undo-tree-id23958 . -1) (undo-tree-id23959 . -1) (undo-tree-id23960 . -1) (undo-tree-id23961 . -1) (undo-tree-id23962 . -1) (undo-tree-id23963 . -1) (undo-tree-id23964 . -1) (undo-tree-id23965 . -1) (undo-tree-id23966 . -1) (undo-tree-id23967 . -1) (undo-tree-id23968 . -1) (undo-tree-id23969 . -1) (undo-tree-id23970 . -1) (undo-tree-id23971 . -1) (undo-tree-id23972 . -1) (undo-tree-id23973 . -1) (undo-tree-id23974 . -1) (undo-tree-id23975 . -1) (undo-tree-id23976 . -1) (undo-tree-id23977 . -1) (undo-tree-id23978 . -1) (undo-tree-id23979 . -1) (undo-tree-id23980 . -1) (undo-tree-id23981 . -1) (undo-tree-id23982 . -1) (undo-tree-id23983 . -1) (undo-tree-id23984 . -1) (undo-tree-id23985 . -1) (undo-tree-id23986 . -1) (undo-tree-id23987 . -1) (undo-tree-id23988 . -1) (undo-tree-id23989 . -1) (undo-tree-id23990 . -1) (undo-tree-id23991 . -1) (undo-tree-id23992 . -1) (undo-tree-id23993 . -1) (undo-tree-id23994 . -1) (undo-tree-id23995 . -1) (undo-tree-id23996 . -1) (undo-tree-id23997 . -1) (undo-tree-id23998 . -1) (undo-tree-id23999 . -1) (undo-tree-id24000 . -1) (undo-tree-id24001 . -1) (undo-tree-id24002 . -1) (undo-tree-id24003 . -1) (undo-tree-id24004 . -1) (undo-tree-id24005 . -1) (undo-tree-id24006 . -1) (undo-tree-id24007 . -1) (undo-tree-id24008 . -1) (undo-tree-id24009 . -1) (undo-tree-id24010 . -1) (undo-tree-id24011 . -1) (undo-tree-id24012 . -1) (undo-tree-id24013 . -1) (undo-tree-id24014 . -1) (undo-tree-id24015 . -1) (undo-tree-id24016 . -1) (#(" " 0 1 (fontified t)) . -4705) (undo-tree-id24017 . -1) (undo-tree-id24018 . -1) (undo-tree-id24019 . -1) (undo-tree-id24020 . -1) (undo-tree-id24021 . -1) (undo-tree-id24022 . -1) (undo-tree-id24023 . -1) (undo-tree-id24024 . -1) (undo-tree-id24025 . -1) (undo-tree-id24026 . -1) (undo-tree-id24027 . -1) (undo-tree-id24028 . -1) (undo-tree-id24029 . -1) (undo-tree-id24030 . -1) (undo-tree-id24031 . -1) (undo-tree-id24032 . -1) (undo-tree-id24033 . -1) (undo-tree-id24034 . -1) (undo-tree-id24035 . -1) (undo-tree-id24036 . -1) (undo-tree-id24037 . -1) (undo-tree-id24038 . -1) (undo-tree-id24039 . -1) (undo-tree-id24040 . -1) (undo-tree-id24041 . -1) (undo-tree-id24042 . -1) (undo-tree-id24043 . -1) (undo-tree-id24044 . -1) (undo-tree-id24045 . -1) (undo-tree-id24046 . -1) (undo-tree-id24047 . -1) (undo-tree-id24048 . -1) (undo-tree-id24049 . -1) (undo-tree-id24050 . -1) (undo-tree-id24051 . -1) (undo-tree-id24052 . -1) (undo-tree-id24053 . -1) (undo-tree-id24054 . -1) (undo-tree-id24055 . -1) (undo-tree-id24056 . -1) (undo-tree-id24057 . -1) (undo-tree-id24058 . -1) (undo-tree-id24059 . -1) (undo-tree-id24060 . -1) (undo-tree-id24061 . -1) (undo-tree-id24062 . -1) (undo-tree-id24063 . -1) (undo-tree-id24064 . -1) (undo-tree-id24065 . -1) (undo-tree-id24066 . -1) (undo-tree-id24067 . -1) (undo-tree-id24068 . -1) (undo-tree-id24069 . -1) (undo-tree-id24070 . -1) (undo-tree-id24071 . -1) (undo-tree-id24072 . -1) (undo-tree-id24073 . -1) (undo-tree-id24074 . -1) (undo-tree-id24075 . -1) (undo-tree-id24076 . -1) (undo-tree-id24077 . -1) (undo-tree-id24078 . -1) (undo-tree-id24079 . -1) (undo-tree-id24080 . -1) (undo-tree-id24081 . -1) (undo-tree-id24082 . -1) (undo-tree-id24083 . -1) (undo-tree-id24084 . -1) (undo-tree-id24085 . -1) (undo-tree-id24086 . -1) (undo-tree-id24087 . -1) (undo-tree-id24088 . -1) (undo-tree-id24089 . -1) (undo-tree-id24090 . -1) (undo-tree-id24091 . -1) (undo-tree-id24092 . -1) (undo-tree-id24093 . -1) (undo-tree-id24094 . -1) (undo-tree-id24095 . -1) (undo-tree-id24096 . -1) (undo-tree-id24097 . -1) (undo-tree-id24098 . -1) (undo-tree-id24099 . -1) (undo-tree-id24100 . -1) (undo-tree-id24101 . -1) (undo-tree-id24102 . -1) (undo-tree-id24103 . -1) (undo-tree-id24104 . -1) (undo-tree-id24105 . -1) (undo-tree-id24106 . -1) (undo-tree-id24107 . -1) (undo-tree-id24108 . -1) (undo-tree-id24109 . -1) (undo-tree-id24110 . -1) (undo-tree-id24111 . -1) (undo-tree-id24112 . -1) (undo-tree-id24113 . -1) (undo-tree-id24114 . -1) (undo-tree-id24115 . -1) (undo-tree-id24116 . -1) (undo-tree-id24117 . -1) (undo-tree-id24118 . -1) (undo-tree-id24119 . -1) (undo-tree-id24120 . -1) (undo-tree-id24121 . -1) (undo-tree-id24122 . -1) (undo-tree-id24123 . -1) (undo-tree-id24124 . -1) (undo-tree-id24125 . -1) (undo-tree-id24126 . -1) (undo-tree-id24127 . -1) (undo-tree-id24128 . -1) (undo-tree-id24129 . -1) (undo-tree-id24130 . -1) (undo-tree-id24131 . -1) (undo-tree-id24132 . -1) (undo-tree-id24133 . -1) (undo-tree-id24134 . -1) (undo-tree-id24135 . -1) (undo-tree-id24136 . -1) (undo-tree-id24137 . -1) (undo-tree-id24138 . -1) (undo-tree-id24139 . -1) (undo-tree-id24140 . -1) (undo-tree-id24141 . -1) (undo-tree-id24142 . -1) (undo-tree-id24143 . -1) (undo-tree-id24144 . -1) (undo-tree-id24145 . -1) (undo-tree-id24146 . -1) (undo-tree-id24147 . -1) (undo-tree-id24148 . -1) (undo-tree-id24149 . -1) (undo-tree-id24150 . -1) (undo-tree-id24151 . -1) (undo-tree-id24152 . -1) (undo-tree-id24153 . -1) (undo-tree-id24154 . -1) (undo-tree-id24155 . -1) (undo-tree-id24156 . -1) (undo-tree-id24157 . -1) (undo-tree-id24158 . -1) (undo-tree-id24159 . -1) (undo-tree-id24160 . -1) (undo-tree-id24161 . -1) (undo-tree-id24162 . -1) (undo-tree-id24163 . -1) (undo-tree-id24164 . -1) (undo-tree-id24165 . -1) (undo-tree-id24166 . -1) (undo-tree-id24167 . -1) (undo-tree-id24168 . -1) (undo-tree-id24169 . -1) (undo-tree-id24170 . -1) (undo-tree-id24171 . -1) (undo-tree-id24172 . -1) (undo-tree-id24173 . -1) (undo-tree-id24174 . -1) (undo-tree-id24175 . -1) (undo-tree-id24176 . -1) (undo-tree-id24177 . -1) (undo-tree-id24178 . -1) (undo-tree-id24179 . -1) (undo-tree-id24180 . -1) (undo-tree-id24181 . -1) (undo-tree-id24182 . -1) (undo-tree-id24183 . -1) (undo-tree-id24184 . -1) (undo-tree-id24185 . -1) (undo-tree-id24186 . -1) (undo-tree-id24187 . -1) (undo-tree-id24188 . -1) (undo-tree-id24189 . -1) (undo-tree-id24190 . -1) (undo-tree-id24191 . -1) (undo-tree-id24192 . -1) (undo-tree-id24193 . -1) (undo-tree-id24194 . -1) (undo-tree-id24195 . -1) (undo-tree-id24196 . -1) (undo-tree-id24197 . -1) (undo-tree-id24198 . -1) (undo-tree-id24199 . -1) (undo-tree-id24200 . -1) (undo-tree-id24201 . -1) (undo-tree-id24202 . -1) (undo-tree-id24203 . -1) (undo-tree-id24204 . -1) (undo-tree-id24205 . -1) (undo-tree-id24206 . -1) (undo-tree-id24207 . -1) (undo-tree-id24208 . -1) (undo-tree-id24209 . -1) (undo-tree-id24210 . -1) (undo-tree-id24211 . -1) (undo-tree-id24212 . -1) (undo-tree-id24213 . -1) (undo-tree-id24214 . -1) (#(" " 0 1 (fontified t)) . -4706) (undo-tree-id24215 . -1) (undo-tree-id24216 . -1) (undo-tree-id24217 . -1) (undo-tree-id24218 . -1) (undo-tree-id24219 . -1) (undo-tree-id24220 . -1) (undo-tree-id24221 . -1) (undo-tree-id24222 . -1) (undo-tree-id24223 . -1) (undo-tree-id24224 . -1) (undo-tree-id24225 . -1) (undo-tree-id24226 . -1) (undo-tree-id24227 . -1) (undo-tree-id24228 . -1) (undo-tree-id24229 . -1) (undo-tree-id24230 . -1) (undo-tree-id24231 . -1) (undo-tree-id24232 . -1) (undo-tree-id24233 . -1) (undo-tree-id24234 . -1) (undo-tree-id24235 . -1) (undo-tree-id24236 . -1) (undo-tree-id24237 . -1) (undo-tree-id24238 . -1) (undo-tree-id24239 . -1) (undo-tree-id24240 . -1) (undo-tree-id24241 . -1) (undo-tree-id24242 . -1) (undo-tree-id24243 . -1) (undo-tree-id24244 . -1) (undo-tree-id24245 . -1) (undo-tree-id24246 . -1) (undo-tree-id24247 . -1) (undo-tree-id24248 . -1) (undo-tree-id24249 . -1) (undo-tree-id24250 . -1) (undo-tree-id24251 . -1) (undo-tree-id24252 . -1) (undo-tree-id24253 . -1) (undo-tree-id24254 . -1) (undo-tree-id24255 . -1) (undo-tree-id24256 . -1) (undo-tree-id24257 . -1) (undo-tree-id24258 . -1) (undo-tree-id24259 . -1) (undo-tree-id24260 . -1) (undo-tree-id24261 . -1) (undo-tree-id24262 . -1) (undo-tree-id24263 . -1) (undo-tree-id24264 . -1) (undo-tree-id24265 . -1) (undo-tree-id24266 . -1) (undo-tree-id24267 . -1) (undo-tree-id24268 . -1) (undo-tree-id24269 . -1) (undo-tree-id24270 . -1) (undo-tree-id24271 . -1) (undo-tree-id24272 . -1) (undo-tree-id24273 . -1) (undo-tree-id24274 . -1) (undo-tree-id24275 . -1) (undo-tree-id24276 . -1) (undo-tree-id24277 . -1) (undo-tree-id24278 . -1) (undo-tree-id24279 . -1) (undo-tree-id24280 . -1) (undo-tree-id24281 . -1) (undo-tree-id24282 . -1) (undo-tree-id24283 . -1) (undo-tree-id24284 . -1) (undo-tree-id24285 . -1) (undo-tree-id24286 . -1) (undo-tree-id24287 . -1) (undo-tree-id24288 . -1) (undo-tree-id24289 . -1) (undo-tree-id24290 . -1) (undo-tree-id24291 . -1) (undo-tree-id24292 . -1) (undo-tree-id24293 . -1) (undo-tree-id24294 . -1) (undo-tree-id24295 . -1) (undo-tree-id24296 . -1) (undo-tree-id24297 . -1) (undo-tree-id24298 . -1) (undo-tree-id24299 . -1) (undo-tree-id24300 . -1) (undo-tree-id24301 . -1) (undo-tree-id24302 . -1) (undo-tree-id24303 . -1) (undo-tree-id24304 . -1) (undo-tree-id24305 . -1) (undo-tree-id24306 . -1) (undo-tree-id24307 . -1) (undo-tree-id24308 . -1) (undo-tree-id24309 . -1) (undo-tree-id24310 . -1) (undo-tree-id24311 . -1) (undo-tree-id24312 . -1) (undo-tree-id24313 . -1) (undo-tree-id24314 . -1) (undo-tree-id24315 . -1) (undo-tree-id24316 . -1) (undo-tree-id24317 . -1) (undo-tree-id24318 . -1) (undo-tree-id24319 . -1) (undo-tree-id24320 . -1) (undo-tree-id24321 . -1) (undo-tree-id24322 . -1) (undo-tree-id24323 . -1) (undo-tree-id24324 . -1) (undo-tree-id24325 . -1) (undo-tree-id24326 . -1) (undo-tree-id24327 . -1) (undo-tree-id24328 . -1) (undo-tree-id24329 . -1) (undo-tree-id24330 . -1) (undo-tree-id24331 . -1) (undo-tree-id24332 . -1) (undo-tree-id24333 . -1) (undo-tree-id24334 . -1) (undo-tree-id24335 . -1) (undo-tree-id24336 . -1) (undo-tree-id24337 . -1) (undo-tree-id24338 . -1) (undo-tree-id24339 . -1) (undo-tree-id24340 . -1) (undo-tree-id24341 . -1) (undo-tree-id24342 . -1) (undo-tree-id24343 . -1) (undo-tree-id24344 . -1) (undo-tree-id24345 . -1) (undo-tree-id24346 . -1) (undo-tree-id24347 . -1) (undo-tree-id24348 . -1) (undo-tree-id24349 . -1) (undo-tree-id24350 . -1) (undo-tree-id24351 . -1) (undo-tree-id24352 . -1) (undo-tree-id24353 . -1) (undo-tree-id24354 . -1) (undo-tree-id24355 . -1) (undo-tree-id24356 . -1) (undo-tree-id24357 . -1) (undo-tree-id24358 . -1) (undo-tree-id24359 . -1) (undo-tree-id24360 . -1) (undo-tree-id24361 . -1) (undo-tree-id24362 . -1) (undo-tree-id24363 . -1) (undo-tree-id24364 . -1) (undo-tree-id24365 . -1) (undo-tree-id24366 . -1) (undo-tree-id24367 . -1) (undo-tree-id24368 . -1) (undo-tree-id24369 . -1) (undo-tree-id24370 . -1) (undo-tree-id24371 . -1) (undo-tree-id24372 . -1) (undo-tree-id24373 . -1) (undo-tree-id24374 . -1) (undo-tree-id24375 . -1) (undo-tree-id24376 . -1) (undo-tree-id24377 . -1) (undo-tree-id24378 . -1) (undo-tree-id24379 . -1) (undo-tree-id24380 . -1) (undo-tree-id24381 . -1) (undo-tree-id24382 . -1) (undo-tree-id24383 . -1) (undo-tree-id24384 . -1) (undo-tree-id24385 . -1) (undo-tree-id24386 . -1) (undo-tree-id24387 . -1) (undo-tree-id24388 . -1) (undo-tree-id24389 . -1) (undo-tree-id24390 . -1) (undo-tree-id24391 . -1) (undo-tree-id24392 . -1) (undo-tree-id24393 . -1) (undo-tree-id24394 . -1) (undo-tree-id24395 . -1) (#(" " 0 1 (fontified t)) . -4707) (undo-tree-id24396 . -1) (undo-tree-id24397 . -1) (undo-tree-id24398 . -1) (undo-tree-id24399 . -1) (undo-tree-id24400 . -1) (undo-tree-id24401 . -1) (undo-tree-id24402 . -1) (undo-tree-id24403 . -1) (undo-tree-id24404 . -1) (undo-tree-id24405 . -1) (undo-tree-id24406 . -1) (undo-tree-id24407 . -1) (undo-tree-id24408 . -1) (undo-tree-id24409 . -1) (undo-tree-id24410 . -1) (undo-tree-id24411 . -1) (undo-tree-id24412 . -1) (undo-tree-id24413 . -1) (undo-tree-id24414 . -1) (undo-tree-id24415 . -1) (undo-tree-id24416 . -1) (undo-tree-id24417 . -1) (undo-tree-id24418 . -1) (undo-tree-id24419 . -1) (undo-tree-id24420 . -1) (undo-tree-id24421 . -1) (undo-tree-id24422 . -1) (undo-tree-id24423 . -1) (undo-tree-id24424 . -1) (undo-tree-id24425 . -1) (undo-tree-id24426 . -1) (undo-tree-id24427 . -1) (undo-tree-id24428 . -1) (undo-tree-id24429 . -1) (undo-tree-id24430 . -1) (undo-tree-id24431 . -1) (undo-tree-id24432 . -1) (undo-tree-id24433 . -1) (undo-tree-id24434 . -1) (undo-tree-id24435 . -1) (undo-tree-id24436 . -1) (undo-tree-id24437 . -1) (undo-tree-id24438 . -1) (undo-tree-id24439 . -1) (undo-tree-id24440 . -1) (undo-tree-id24441 . -1) (undo-tree-id24442 . -1) (undo-tree-id24443 . -1) (undo-tree-id24444 . -1) (undo-tree-id24445 . -1) (undo-tree-id24446 . -1) (undo-tree-id24447 . -1) (undo-tree-id24448 . -1) (undo-tree-id24449 . -1) (undo-tree-id24450 . -1) (undo-tree-id24451 . -1) (undo-tree-id24452 . -1) (undo-tree-id24453 . -1) (undo-tree-id24454 . -1) (undo-tree-id24455 . -1) (undo-tree-id24456 . -1) (undo-tree-id24457 . -1) (undo-tree-id24458 . -1) (undo-tree-id24459 . -1) (undo-tree-id24460 . -1) (undo-tree-id24461 . -1) (undo-tree-id24462 . -1) (undo-tree-id24463 . -1) (undo-tree-id24464 . -1) (undo-tree-id24465 . -1) (undo-tree-id24466 . -1) (undo-tree-id24467 . -1) (undo-tree-id24468 . -1) (undo-tree-id24469 . -1) (undo-tree-id24470 . -1) (undo-tree-id24471 . -1) (undo-tree-id24472 . -1) (undo-tree-id24473 . -1) (undo-tree-id24474 . -1) (undo-tree-id24475 . -1) (undo-tree-id24476 . -1) (undo-tree-id24477 . -1) (undo-tree-id24478 . -1) (undo-tree-id24479 . -1) (undo-tree-id24480 . -1) (undo-tree-id24481 . -1) (undo-tree-id24482 . -1) (undo-tree-id24483 . -1) (undo-tree-id24484 . -1) (undo-tree-id24485 . -1) (undo-tree-id24486 . -1) (undo-tree-id24487 . -1) (undo-tree-id24488 . -1) (undo-tree-id24489 . -1) (undo-tree-id24490 . -1) (undo-tree-id24491 . -1) (undo-tree-id24492 . -1) (undo-tree-id24493 . -1) (undo-tree-id24494 . -1) (undo-tree-id24495 . -1) (undo-tree-id24496 . -1) (undo-tree-id24497 . -1) (undo-tree-id24498 . -1) (undo-tree-id24499 . -1) (undo-tree-id24500 . -1) (undo-tree-id24501 . -1) (undo-tree-id24502 . -1) (undo-tree-id24503 . -1) (undo-tree-id24504 . -1) (undo-tree-id24505 . -1) (undo-tree-id24506 . -1) (undo-tree-id24507 . -1) (undo-tree-id24508 . -1) (undo-tree-id24509 . -1) (undo-tree-id24510 . -1) (undo-tree-id24511 . -1) (undo-tree-id24512 . -1) (undo-tree-id24513 . -1) (undo-tree-id24514 . -1) (undo-tree-id24515 . -1) (undo-tree-id24516 . -1) (undo-tree-id24517 . -1) (undo-tree-id24518 . -1) (undo-tree-id24519 . -1) (undo-tree-id24520 . -1) (undo-tree-id24521 . -1) (undo-tree-id24522 . -1) (undo-tree-id24523 . -1) (undo-tree-id24524 . -1) (undo-tree-id24525 . -1) (undo-tree-id24526 . -1) (undo-tree-id24527 . -1) (undo-tree-id24528 . -1) (undo-tree-id24529 . -1) (undo-tree-id24530 . -1) (undo-tree-id24531 . -1) (undo-tree-id24532 . -1) (undo-tree-id24533 . -1) (undo-tree-id24534 . -1) (undo-tree-id24535 . -1) (undo-tree-id24536 . -1) (undo-tree-id24537 . -1) (undo-tree-id24538 . -1) (undo-tree-id24539 . -1) (undo-tree-id24540 . -1) (undo-tree-id24541 . -1) (undo-tree-id24542 . -1) (undo-tree-id24543 . -1) (undo-tree-id24544 . -1) (undo-tree-id24545 . -1) (undo-tree-id24546 . -1) (undo-tree-id24547 . -1) (undo-tree-id24548 . -1) (undo-tree-id24549 . -1) (undo-tree-id24550 . -1) (undo-tree-id24551 . -1) (undo-tree-id24552 . -1) (undo-tree-id24553 . -1) (undo-tree-id24554 . -1) (undo-tree-id24555 . -1) (undo-tree-id24556 . -1) (undo-tree-id24557 . -1) (undo-tree-id24558 . -1) (undo-tree-id24559 . -1) (#(" " 0 1 (fontified t)) . -4708) (undo-tree-id24560 . -1) (undo-tree-id24561 . -1) (undo-tree-id24562 . -1) (undo-tree-id24563 . -1) (undo-tree-id24564 . -1) (undo-tree-id24565 . -1) (undo-tree-id24566 . -1) (undo-tree-id24567 . -1) (undo-tree-id24568 . -1) (undo-tree-id24569 . -1) (undo-tree-id24570 . -1) (undo-tree-id24571 . -1) (undo-tree-id24572 . -1) (undo-tree-id24573 . -1) (undo-tree-id24574 . -1) (undo-tree-id24575 . -1) (undo-tree-id24576 . -1) (undo-tree-id24577 . -1) (undo-tree-id24578 . -1) (undo-tree-id24579 . -1) (undo-tree-id24580 . -1) (undo-tree-id24581 . -1) (undo-tree-id24582 . -1) (undo-tree-id24583 . -1) (undo-tree-id24584 . -1) (undo-tree-id24585 . -1) (undo-tree-id24586 . -1) (undo-tree-id24587 . -1) (undo-tree-id24588 . -1) (undo-tree-id24589 . -1) (undo-tree-id24590 . -1) (undo-tree-id24591 . -1) (undo-tree-id24592 . -1) (undo-tree-id24593 . -1) (undo-tree-id24594 . -1) (undo-tree-id24595 . -1) (undo-tree-id24596 . -1) (undo-tree-id24597 . -1) (undo-tree-id24598 . -1) (undo-tree-id24599 . -1) (undo-tree-id24600 . -1) (undo-tree-id24601 . -1) (undo-tree-id24602 . -1) (undo-tree-id24603 . -1) (undo-tree-id24604 . -1) (undo-tree-id24605 . -1) (undo-tree-id24606 . -1) (undo-tree-id24607 . -1) (undo-tree-id24608 . -1) (undo-tree-id24609 . -1) (undo-tree-id24610 . -1) (undo-tree-id24611 . -1) (undo-tree-id24612 . -1) (undo-tree-id24613 . -1) (undo-tree-id24614 . -1) (undo-tree-id24615 . -1) (undo-tree-id24616 . -1) (undo-tree-id24617 . -1) (undo-tree-id24618 . -1) (undo-tree-id24619 . -1) (undo-tree-id24620 . -1) (undo-tree-id24621 . -1) (undo-tree-id24622 . -1) (undo-tree-id24623 . -1) (undo-tree-id24624 . -1) (undo-tree-id24625 . -1) (undo-tree-id24626 . -1) (undo-tree-id24627 . -1) (undo-tree-id24628 . -1) (undo-tree-id24629 . -1) (undo-tree-id24630 . -1) (undo-tree-id24631 . -1) (undo-tree-id24632 . -1) (undo-tree-id24633 . -1) (undo-tree-id24634 . -1) (undo-tree-id24635 . -1) (undo-tree-id24636 . -1) (undo-tree-id24637 . -1) (undo-tree-id24638 . -1) (undo-tree-id24639 . -1) (undo-tree-id24640 . -1) (undo-tree-id24641 . -1) (undo-tree-id24642 . -1) (undo-tree-id24643 . -1) (undo-tree-id24644 . -1) (undo-tree-id24645 . -1) (undo-tree-id24646 . -1) (undo-tree-id24647 . -1) (undo-tree-id24648 . -1) (undo-tree-id24649 . -1) (undo-tree-id24650 . -1) (undo-tree-id24651 . -1) (undo-tree-id24652 . -1) (undo-tree-id24653 . -1) (undo-tree-id24654 . -1) (undo-tree-id24655 . -1) (undo-tree-id24656 . -1) (undo-tree-id24657 . -1) (undo-tree-id24658 . -1) (undo-tree-id24659 . -1) (undo-tree-id24660 . -1) (undo-tree-id24661 . -1) (undo-tree-id24662 . -1) (undo-tree-id24663 . -1) (undo-tree-id24664 . -1) (undo-tree-id24665 . -1) (undo-tree-id24666 . -1) (undo-tree-id24667 . -1) (undo-tree-id24668 . -1) (undo-tree-id24669 . -1) (undo-tree-id24670 . -1) (undo-tree-id24671 . -1) (undo-tree-id24672 . -1) (undo-tree-id24673 . -1) (undo-tree-id24674 . -1) (undo-tree-id24675 . -1) (undo-tree-id24676 . -1) (undo-tree-id24677 . -1) (undo-tree-id24678 . -1) (undo-tree-id24679 . -1) (undo-tree-id24680 . -1) (undo-tree-id24681 . -1) (undo-tree-id24682 . -1) (undo-tree-id24683 . -1) (undo-tree-id24684 . -1) (undo-tree-id24685 . -1) (undo-tree-id24686 . -1) (undo-tree-id24687 . -1) (undo-tree-id24688 . -1) (undo-tree-id24689 . -1) (undo-tree-id24690 . -1) (undo-tree-id24691 . -1) (undo-tree-id24692 . -1) (undo-tree-id24693 . -1) (undo-tree-id24694 . -1) (undo-tree-id24695 . -1) (undo-tree-id24696 . -1) (undo-tree-id24697 . -1) (undo-tree-id24698 . -1) (undo-tree-id24699 . -1) (undo-tree-id24700 . -1) (undo-tree-id24701 . -1) (undo-tree-id24702 . -1) (undo-tree-id24703 . -1) (undo-tree-id24704 . -1) (undo-tree-id24705 . -1) (undo-tree-id24706 . -1) (#(" " 0 1 (fontified t)) . -4709) (undo-tree-id24707 . -1) (undo-tree-id24708 . -1) (undo-tree-id24709 . -1) (undo-tree-id24710 . -1) (undo-tree-id24711 . -1) (undo-tree-id24712 . -1) (undo-tree-id24713 . -1) (undo-tree-id24714 . -1) (undo-tree-id24715 . -1) (undo-tree-id24716 . -1) (undo-tree-id24717 . -1) (undo-tree-id24718 . -1) (undo-tree-id24719 . -1) (undo-tree-id24720 . -1) (undo-tree-id24721 . -1) (undo-tree-id24722 . -1) (undo-tree-id24723 . -1) (undo-tree-id24724 . -1) (undo-tree-id24725 . -1) (undo-tree-id24726 . -1) (undo-tree-id24727 . -1) (undo-tree-id24728 . -1) (undo-tree-id24729 . -1) (undo-tree-id24730 . -1) (undo-tree-id24731 . -1) (undo-tree-id24732 . -1) (undo-tree-id24733 . -1) (undo-tree-id24734 . -1) (undo-tree-id24735 . -1) (undo-tree-id24736 . -1) (undo-tree-id24737 . -1) (undo-tree-id24738 . -1) (undo-tree-id24739 . -1) (undo-tree-id24740 . -1) (undo-tree-id24741 . -1) (undo-tree-id24742 . -1) (undo-tree-id24743 . -1) (undo-tree-id24744 . -1) (undo-tree-id24745 . -1) (undo-tree-id24746 . -1) (undo-tree-id24747 . -1) (undo-tree-id24748 . -1) (undo-tree-id24749 . -1) (undo-tree-id24750 . -1) (undo-tree-id24751 . -1) (undo-tree-id24752 . -1) (undo-tree-id24753 . -1) (undo-tree-id24754 . -1) (undo-tree-id24755 . -1) (undo-tree-id24756 . -1) (undo-tree-id24757 . -1) (undo-tree-id24758 . -1) (undo-tree-id24759 . -1) (undo-tree-id24760 . -1) (undo-tree-id24761 . -1) (undo-tree-id24762 . -1) (undo-tree-id24763 . -1) (undo-tree-id24764 . -1) (undo-tree-id24765 . -1) (undo-tree-id24766 . -1) (undo-tree-id24767 . -1) (undo-tree-id24768 . -1) (undo-tree-id24769 . -1) (undo-tree-id24770 . -1) (undo-tree-id24771 . -1) (undo-tree-id24772 . -1) (undo-tree-id24773 . -1) (undo-tree-id24774 . -1) (undo-tree-id24775 . -1) (undo-tree-id24776 . -1) (undo-tree-id24777 . -1) (undo-tree-id24778 . -1) (undo-tree-id24779 . -1) (undo-tree-id24780 . -1) (undo-tree-id24781 . -1) (undo-tree-id24782 . -1) (undo-tree-id24783 . -1) (undo-tree-id24784 . -1) (undo-tree-id24785 . -1) (undo-tree-id24786 . -1) (undo-tree-id24787 . -1) (undo-tree-id24788 . -1) (undo-tree-id24789 . -1) (undo-tree-id24790 . -1) (undo-tree-id24791 . -1) (undo-tree-id24792 . -1) (undo-tree-id24793 . -1) (undo-tree-id24794 . -1) (undo-tree-id24795 . -1) (undo-tree-id24796 . -1) (undo-tree-id24797 . -1) (undo-tree-id24798 . -1) (undo-tree-id24799 . -1) (undo-tree-id24800 . -1) (undo-tree-id24801 . -1) (undo-tree-id24802 . -1) (undo-tree-id24803 . -1) (undo-tree-id24804 . -1) (undo-tree-id24805 . -1) (undo-tree-id24806 . -1) (undo-tree-id24807 . -1) (undo-tree-id24808 . -1) (undo-tree-id24809 . -1) (undo-tree-id24810 . -1) (undo-tree-id24811 . -1) (undo-tree-id24812 . -1) (undo-tree-id24813 . -1) (undo-tree-id24814 . -1) (undo-tree-id24815 . -1) (undo-tree-id24816 . -1) (undo-tree-id24817 . -1) (undo-tree-id24818 . -1) (undo-tree-id24819 . -1) (undo-tree-id24820 . -1) (undo-tree-id24821 . -1) (undo-tree-id24822 . -1) 4710) nil (25934 12623 859020 534000) 0 nil] [nil nil ((4696 . 4712) (#("               " 0 15 (fontified nil)) . 4695) (undo-tree-id20865 . -15) (undo-tree-id20866 . -15) (undo-tree-id20867 . -15) (undo-tree-id20868 . -15) (undo-tree-id20869 . -15) (undo-tree-id20870 . -15) (undo-tree-id20871 . -15) (undo-tree-id20872 . -15) (undo-tree-id20873 . -15) (undo-tree-id20874 . -15) (undo-tree-id20875 . -15) (undo-tree-id20876 . -15) (undo-tree-id20877 . -15) (undo-tree-id20878 . -15) (undo-tree-id20879 . -15) (undo-tree-id20880 . -15) (undo-tree-id20881 . -15) (undo-tree-id20882 . -15) (undo-tree-id20883 . -15) (undo-tree-id20884 . -15) (undo-tree-id20885 . -15) (undo-tree-id20886 . -15) (undo-tree-id20887 . -15) (undo-tree-id20888 . -15) (undo-tree-id20889 . -15) (undo-tree-id20890 . -15) (undo-tree-id20891 . -15) (undo-tree-id20892 . -15) (undo-tree-id20893 . -15) (undo-tree-id20894 . -15) (undo-tree-id20895 . -15) (undo-tree-id20896 . -15) (undo-tree-id20897 . -15) (undo-tree-id20898 . -15) (undo-tree-id20899 . -15) (undo-tree-id20900 . -15) (undo-tree-id20901 . -15) (undo-tree-id20902 . -15) (undo-tree-id20903 . -15) (undo-tree-id20904 . -15) (undo-tree-id20905 . -15) (undo-tree-id20906 . -15) (undo-tree-id20907 . -15) (undo-tree-id20908 . -15) (undo-tree-id20909 . -15) (undo-tree-id20910 . -15) (undo-tree-id20911 . -15) (undo-tree-id20912 . -15) (undo-tree-id20913 . -15) (undo-tree-id20914 . -15) (undo-tree-id20915 . -15) (undo-tree-id20916 . -15) (undo-tree-id20917 . -15) (undo-tree-id20918 . -15) (undo-tree-id20919 . -15) (undo-tree-id20920 . -15) (undo-tree-id20921 . -15) (undo-tree-id20922 . -15) (undo-tree-id20923 . -15) (undo-tree-id20924 . -15) (undo-tree-id20925 . -15) (undo-tree-id20926 . -15) (undo-tree-id20927 . -15) (4710 . 4711)) ((#("
" 0 1 (fontified nil)) . 4710) (undo-tree-id20967 . -1) (undo-tree-id20968 . -1) (undo-tree-id20969 . -1) (undo-tree-id20970 . -1) (4695 . 4710) (#("                " 0 16 (fontified t)) . 4696) (undo-tree-id20971 . -16) (undo-tree-id20972 . -16) (undo-tree-id20973 . -16)) (25934 12614 63848 420000) 0 nil])
([nil nil ((4305 . 4318) (t 25934 12623 906574 652000)) nil (25934 12939 707761 306000) 0 nil])
nil
([nil nil ((4318 . 4330)) nil (25934 12939 707760 278000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4351) (4350 . 4351) (4349 . 4351) (#("[" 0 1 (fontified nil)) . -4349) (4330 . 4350)) nil (25934 12939 707758 861000) 0 nil])
([nil nil ((4350 . 4351)) nil (25934 12939 707757 270000) 0 nil])
([nil nil ((4352 . 4355)) nil (25934 12939 707756 427000) 0 nil])
([nil nil ((4355 . 4366)) nil (25934 12939 707755 422000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -4365) (undo-tree-id24825 . -1) 4366) nil (25934 12939 707753 988000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4368) (4367 . 4368) (4366 . 4368) (#("[" 0 1 (fontified nil)) . -4366) (4365 . 4367)) nil (25934 12939 707749 863000) 0 nil])
([nil nil ((4367 . 4368)) nil (25934 12939 707747 543000) 0 nil])
([nil nil ((4369 . 4378)) nil (25934 12939 707746 63000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4384) (4383 . 4384) (4382 . 4384) (#("(" 0 1 (fontified nil)) . -4382) (4378 . 4383)) nil (25934 12939 707743 971000) 0 nil])
([nil nil ((4385 . 4394) (4384 . 4386) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4384) (undo-tree-id24823 . -1) (undo-tree-id24824 . -1) (4384 . 4385)) nil (25934 12939 707740 310000) 0 nil])
([nil nil ((apply -10 4396 4810 undo--wrap-and-run-primitive-undo 4396 4810 ((4697 . 4699) (4601 . 4603) (4536 . 4538) (4454 . 4456) (4408 . 4410) 4786))) nil (25934 12939 707712 346000) 0 nil])
([nil nil ((3439 . 3452) (t 25934 12939 767493 975000)) nil (25934 13577 172102 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3522 . 3523) (nil fontified nil 3522 . 3523) (nil fontified nil 3521 . 3522) (nil fontified nil 3505 . 3521) (nil fontified nil 3504 . 3505) (nil fontified nil 3485 . 3504) (nil fontified nil 3484 . 3485) (nil fontified nil 3483 . 3484) (nil fontified nil 3464 . 3483) (nil fontified nil 3452 . 3464) (3452 . 3523)) nil (25934 13577 172101 419000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3452) 3440) nil (25934 13577 172099 422000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3499) (undo-tree-id24852 . -1) (#("o" 0 1 (fontified t)) . -3500) (undo-tree-id24853 . -1) (#("v" 0 1 (fontified t)) . -3501) (undo-tree-id24854 . -1) (#("a" 0 1 (fontified t)) . -3502) (undo-tree-id24855 . -1) (#("r" 0 1 (fontified t)) . -3503) (undo-tree-id24856 . -1) (#("i" 0 1 (fontified t)) . -3504) (undo-tree-id24857 . -1) (#("a" 0 1 (fontified t)) . -3505) (undo-tree-id24858 . -1) (#("n" 0 1 (fontified t)) . -3506) (undo-tree-id24859 . -1) (#("c" 0 1 (fontified t)) . -3507) (undo-tree-id24860 . -1) (#("e" 0 1 (fontified t)) . -3508) (undo-tree-id24861 . -1) 3509) nil (25934 13577 172096 398000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 3501) (3500 . 3501) (3499 . 3501) (#("[" 0 1 (fontified nil)) . -3499) (3499 . 3500)) nil (25934 13577 172084 922000) 0 nil])
([nil nil ((3500 . 3503)) nil (25934 13577 172083 204000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3501) (undo-tree-id24850 . -1) (#("r" 0 1 (fontified t)) . -3502) (undo-tree-id24851 . -1) 3503) nil (25934 13577 172081 815000) 0 nil])
([nil nil ((3501 . 3506)) nil (25934 13577 172079 150000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . -3500) (undo-tree-id24844 . -1) (#("A" 0 1 (fontified t)) . -3501) (undo-tree-id24845 . -1) (#("R" 0 1 (fontified nil)) . -3502) (undo-tree-id24846 . -1) (#("_" 0 1 (fontified t)) . -3503) (undo-tree-id24847 . -1) (#("F" 0 1 (fontified t)) . -3504) (undo-tree-id24848 . -1) (#("F" 0 1 (fontified t)) . -3505) (undo-tree-id24849 . -1) 3506) nil (25934 13577 172077 107000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3499) (undo-tree-id24842 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3500) (undo-tree-id24843 . -1) 3501) nil (25934 13577 172070 187000) 0 nil])
([nil nil ((3499 . 3506)) nil (25934 13577 172067 426000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3505) (undo-tree-id24841 . -1) 3506) nil (25934 13577 172066 632000) 0 nil])
([nil nil ((3505 . 3509)) nil (25934 13577 172064 636000) 0 nil])
([nil nil ((3439 . 3452)) nil (25934 13577 172063 994000) 0 nil])
([nil nil ((3452 . 3459)) nil (25934 13577 172063 320000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3871 . 3872) (nil fontified nil 3871 . 3872) (nil fontified nil 3870 . 3871) (nil fontified nil 3863 . 3870) (nil fontified nil 3859 . 3863) (nil fontified nil 3858 . 3859) (nil fontified nil 3852 . 3858) (nil fontified nil 3851 . 3852) (nil fontified nil 3850 . 3851) (nil fontified nil 3844 . 3850) (nil fontified nil 3840 . 3844) (nil fontified nil 3839 . 3840) (nil fontified nil 3834 . 3839) (nil fontified nil 3832 . 3834) (nil fontified nil 3831 . 3832) (nil fontified nil 3830 . 3831) (nil fontified nil 3829 . 3830) (nil fontified nil 3811 . 3829) (nil fontified nil 3810 . 3811) (nil fontified nil 3771 . 3810) (nil fontified nil 3769 . 3771) (nil fontified nil 3768 . 3769) (nil fontified nil 3750 . 3768) (nil fontified nil 3749 . 3750) (nil fontified nil 3710 . 3749) (nil fontified nil 3708 . 3710) (nil fontified nil 3707 . 3708) (nil fontified nil 3689 . 3707) (nil fontified nil 3688 . 3689) (nil fontified nil 3649 . 3688) (nil fontified nil 3647 . 3649) (nil fontified nil 3646 . 3647) (nil fontified nil 3628 . 3646) (nil fontified nil 3627 . 3628) (nil fontified nil 3626 . 3627) (nil fontified nil 3625 . 3626) (nil fontified nil 3612 . 3625) (nil fontified nil 3611 . 3612) (nil fontified nil 3610 . 3611) (nil fontified nil 3609 . 3610) (nil fontified nil 3600 . 3609) (nil fontified nil 3588 . 3600) (nil fontified nil 3559 . 3588) (nil fontified nil 3557 . 3559) (nil fontified nil 3545 . 3557) (nil fontified nil 3532 . 3545) (nil fontified nil 3531 . 3532) (nil fontified nil 3530 . 3531) (nil fontified nil 3523 . 3530) (nil fontified nil 3519 . 3523) (nil fontified nil 3518 . 3519) (nil fontified nil 3512 . 3518) (nil fontified nil 3511 . 3512) (nil fontified nil 3510 . 3511) (nil fontified nil 3504 . 3510) (nil fontified nil 3500 . 3504) (nil fontified nil 3499 . 3500) (nil fontified nil 3494 . 3499) (nil fontified nil 3492 . 3494) (nil fontified nil 3491 . 3492) (nil fontified nil 3473 . 3491) (nil fontified nil 3472 . 3473) (nil fontified nil 3471 . 3472) (nil fontified nil 3458 . 3471) (nil fontified nil 3457 . 3458) (nil fontified nil 3456 . 3457) (nil fontified nil 3452 . 3456) (nil fontified nil 3440 . 3452) (3440 . 3872)) nil (25934 13577 172060 698000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3410)) nil (25934 13577 172049 179000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3484) (#("." 0 1 (fontified t)) . 3484) (#("0" 0 1 (fontified t)) . 3484) (#(" " 0 1 (fontified t)) . 3484) (#("," 0 1 (fontified t)) . 3484) (#("0" 0 1 (fontified t)) . 3484)) nil (25934 13577 172047 266000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3480) (undo-tree-id24837 . -1) (#(" " 0 1 (fontified t)) . -3481) (undo-tree-id24838 . -1) (#("0" 0 1 (fontified t)) . -3482) (undo-tree-id24839 . -1) (#("." 0 1 (fontified t)) . -3483) (undo-tree-id24840 . -1) 3484) nil (25934 13577 172044 698000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3471) (undo-tree-id24827 . -1) (#("0" 0 1 (fontified t)) . -3472) (undo-tree-id24828 . -1) (#("." 0 1 (fontified nil)) . -3473) (undo-tree-id24829 . -1) (#("0" 0 1 (fontified t)) . -3474) (undo-tree-id24830 . -1) (#("," 0 1 (fontified t)) . -3475) (undo-tree-id24831 . -1) (#(" " 0 1 (fontified t)) . -3476) (undo-tree-id24832 . -1) (#("0" 0 1 (fontified t)) . -3477) (undo-tree-id24833 . -1) (#("." 0 1 (fontified nil)) . -3478) (undo-tree-id24834 . -1) (#("0" 0 1 (fontified t)) . -3479) (undo-tree-id24835 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3480) (undo-tree-id24836 . -1) 3481) nil (25934 13577 172036 667000) 0 nil])
([nil nil ((3472 . 3482) (3471 . 3473) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3471) (3471 . 3472)) nil (25934 13577 172021 631000) 0 nil])
([nil nil ((#("            mean = torch.tensor((self.N_POP), dtype=self.FLOAT, device=self.device)
" 0 12 (fontified t) 12 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 37 (face font-lock-keyword-face fontified t) 37 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 46 (fontified t) 46 51 (fontified t) 51 52 (face font-lock-operator-face fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 62 (fontified t) 62 63 (fontified t rear-nonsticky t) 63 64 (fontified t) 64 70 (fontified t) 70 71 (face font-lock-operator-face fontified t) 71 75 (face font-lock-keyword-face fontified t) 75 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t) 83 84 (fontified t)) . 3439) (undo-tree-id24826 . -84) 3523) nil (25934 13577 172019 753000) 0 nil])
([nil nil ((3390 . 3391)) nil (25934 13577 171869 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3474 . 3475) (nil fontified nil 3474 . 3475) (nil fontified nil 3473 . 3474) (nil fontified nil 3466 . 3473) (nil fontified nil 3462 . 3466) (nil fontified nil 3461 . 3462) (nil fontified nil 3455 . 3461) (nil fontified nil 3454 . 3455) (nil fontified nil 3453 . 3454) (nil fontified nil 3447 . 3453) (nil fontified nil 3443 . 3447) (nil fontified nil 3442 . 3443) (nil fontified nil 3437 . 3442) (nil fontified nil 3435 . 3437) (nil fontified nil 3434 . 3435) (nil fontified nil 3428 . 3434) (nil fontified nil 3424 . 3428) (nil fontified nil 3423 . 3424) (nil fontified nil 3422 . 3423) (nil fontified nil 3409 . 3422) (nil fontified nil 3408 . 3409) (nil fontified nil 3407 . 3408) (nil fontified nil 3403 . 3407) (nil fontified nil 3391 . 3403) (3391 . 3475)) nil (25934 13577 171867 745000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3399) 3391) nil (25934 13577 171864 372000) 0 nil])
([nil nil ((3479 . 3500)) nil (25934 13577 171863 442000) 0 nil])
([nil nil ((3504 . 3506) (#("(" 0 1 (fontified nil)) . -3504) (3500 . 3505)) nil (25934 13577 171861 939000) 0 nil])
([nil nil ((3506 . 3515)) nil (25934 13577 171855 836000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3498) (undo-tree-id25037 . -1) (#("e" 0 1 (fontified t)) . -3499) (undo-tree-id25038 . -1) (#("n" 0 1 (fontified t)) . -3500) (undo-tree-id25039 . -1) (#("s" 0 1 (fontified t)) . -3501) (undo-tree-id25040 . -1) (#("o" 0 1 (fontified t)) . -3502) (undo-tree-id25041 . -1) (#("r" 0 1 (fontified t)) . -3503) (undo-tree-id25042 . -1) 3504 (t 25934 13577 313869 939000)) nil (25934 13668 836484 294000) 0 nil])
([nil nil ((3498 . 3502)) nil (25934 13668 836477 162000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3500) (undo-tree-id25035 . -1) (#("e" 0 1 (fontified t)) . -3501) (undo-tree-id25036 . -1) 3502) nil (25934 13668 836475 971000) 0 nil])
([nil nil ((3500 . 3501)) nil (25934 13668 836473 444000) 0 nil])
([nil nil ((3502 . 3508)) nil (25934 13668 836472 959000) 0 nil])
([nil nil ((3508 . 3512)) nil (25934 13668 836472 495000) 0 nil])
([nil nil ((3512 . 3514)) nil (25934 13668 836472 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3549 . 3550) (nil fontified nil 3543 . 3550) (nil fontified nil 3539 . 3543) (nil fontified nil 3538 . 3539) (nil fontified nil 3532 . 3538) (nil fontified nil 3531 . 3532) (nil fontified nil 3530 . 3531) (nil fontified nil 3524 . 3530) (nil fontified nil 3520 . 3524) (nil fontified nil 3519 . 3520) (nil fontified nil 3514 . 3519) (3514 . 3550)) nil (25934 13668 836471 226000) 0 nil])
([nil nil ((3399 . 3402)) nil (25934 13668 836469 513000) 0 nil])
([nil nil ((3482 . 3485)) nil (25934 13668 836469 81000) 0 nil])
([nil nil ((#("ariance" 0 7 (face font-lock-variable-name-face fontified t)) . 3488)) nil (25934 13668 836468 328000) 0 nil])
([nil nil ((3399 . 3400)) nil (25934 13668 836467 648000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3399) (undo-tree-id25034 . -1) 3400) nil (25934 13668 836466 911000) 0 nil])
([nil nil ((3399 . 3404)) nil (25934 13668 836465 236000) 0 nil])
([nil nil ((3487 . 3492)) nil (25934 13668 836464 660000) 0 nil])
([nil nil ((#("        self.ff_mean = torch.tensor((self.N_POP), dtype=self.FLOAT, device=self.device)
        self.ff_cov = torch.eye(self.N_POP, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-variable-name-face fontified t) 16 20 (face font-lock-variable-name-face fontified t) 20 21 (fontified t) 21 22 (face font-lock-operator-face fontified t) 22 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 41 (face font-lock-keyword-face fontified t) 41 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t) 48 50 (fontified t) 50 55 (fontified t) 55 56 (face font-lock-operator-face fontified t) 56 60 (face font-lock-keyword-face fontified t) 60 66 (fontified t) 66 67 (fontified t rear-nonsticky t) 67 68 (fontified t) 68 74 (fontified t) 74 75 (face font-lock-operator-face fontified t) 75 79 (face font-lock-keyword-face fontified t) 79 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-1-face) fontified t) 87 88 (rear-nonsticky t fontified t) 88 96 (fontified t) 96 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 104 (face font-lock-variable-name-face fontified t) 104 107 (face font-lock-variable-name-face fontified t) 107 108 (fontified t) 108 109 (face font-lock-operator-face fontified t) 109 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 124 (face font-lock-keyword-face fontified t) 124 132 (fontified t) 132 137 (fontified t) 137 138 (face font-lock-operator-face fontified t) 138 142 (face font-lock-keyword-face fontified t) 142 148 (fontified t) 148 149 (fontified t rear-nonsticky t) 149 150 (fontified t) 150 156 (fontified t) 156 157 (face font-lock-operator-face fontified t) 157 161 (face font-lock-keyword-face fontified t) 161 167 (fontified t) 167 168 (rear-nonsticky t fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t) 169 170 (fontified t)) . 3391) (undo-tree-id25026 . -169) (undo-tree-id25027 . -169) (undo-tree-id25028 . -96) (undo-tree-id25029 . -169) (undo-tree-id25030 . -50) (undo-tree-id25031 . -132) (undo-tree-id25032 . -169) (undo-tree-id25033 . -170) 3561) nil (25934 13668 836463 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14824 . 14825) (nil fontified nil 14824 . 14825) (nil fontified nil 14823 . 14824) (nil fontified nil 14822 . 14823) (nil fontified nil 14816 . 14822) (nil fontified nil 14812 . 14816) (nil fontified nil 14811 . 14812) (nil fontified nil 14805 . 14811) (nil fontified nil 14804 . 14805) (nil fontified nil 14803 . 14804) (nil fontified nil 14797 . 14803) (nil fontified nil 14793 . 14797) (nil fontified nil 14792 . 14793) (nil fontified nil 14787 . 14792) (nil fontified nil 14779 . 14787) (nil fontified nil 14775 . 14779) (nil fontified nil 14774 . 14775) (nil fontified nil 14764 . 14774) (nil fontified nil 14763 . 14764) (nil fontified nil 14762 . 14763) (nil fontified nil 14759 . 14762) (nil fontified nil 14756 . 14759) (nil fontified nil 14755 . 14756) (nil fontified nil 14751 . 14755) (nil fontified nil 14743 . 14751) (nil fontified nil 14742 . 14743) (nil fontified nil 14741 . 14742) (nil fontified nil 14734 . 14741) (nil fontified nil 14730 . 14734) (nil fontified nil 14729 . 14730) (nil fontified nil 14723 . 14729) (nil fontified nil 14722 . 14723) (nil fontified nil 14721 . 14722) (nil fontified nil 14715 . 14721) (nil fontified nil 14711 . 14715) (nil fontified nil 14710 . 14711) (nil fontified nil 14705 . 14710) (nil fontified nil 14703 . 14705) (nil fontified nil 14702 . 14703) (nil fontified nil 14696 . 14702) (nil fontified nil 14692 . 14696) (nil fontified nil 14691 . 14692) (nil fontified nil 14690 . 14691) (nil fontified nil 14677 . 14690) (nil fontified nil 14676 . 14677) (nil fontified nil 14675 . 14676) (nil fontified nil 14671 . 14675) (nil fontified nil 14668 . 14671) (nil fontified nil 14667 . 14668) (nil fontified nil 14663 . 14667) (nil fontified nil 14655 . 14663) (14655 . 14825)) nil (25934 13668 836453 428000) 0 nil])
([nil nil ((14654 . 14667)) nil (25934 13668 836444 815000) 0 nil])
([nil nil ((14676 . 14680) 14668) nil (25934 13668 836443 760000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14676) (undo-tree-id25025 . -4) 14680) nil (25934 13668 836442 648000) 0 nil])
([nil nil ((#("            mean = 
" 0 12 (fontified t) 12 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 3780) (undo-tree-id25018 . -20) (undo-tree-id25019 . -19) (undo-tree-id25020 . -18) (undo-tree-id25021 . -19) (undo-tree-id25022 . -19) (undo-tree-id25023 . -20) (undo-tree-id25024 . -20)) nil (25934 13668 836440 171000) 0 nil])
([nil nil ((#("            # Define the covariance matrix
            covariance = torch.tensor([[1.0, 0.0, 0.0, 0.0],
                                       [0.0, 1.0, 0.0, 0.0],
                                       [0.0, 0.0, 1.0, 0.0],
                                       [0.0, 0.0, 0.0, 1.0],], dtype=self.FLOAT, device=self.device)
" 0 12 (fontified t) 12 14 (face font-lock-comment-delimiter-face fontified t) 14 43 (face font-lock-comment-face fontified t) 43 55 (fontified t) 55 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (fontified t) 66 67 (face font-lock-operator-face fontified t) 67 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-3-face) fontified t) 83 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-3-face) fontified t) 102 104 (fontified t) 104 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-3-face) fontified t) 144 162 (fontified t) 162 163 (face (rainbow-delimiters-depth-3-face) fontified t) 163 165 (fontified t) 165 204 (fontified t) 204 205 (face (rainbow-delimiters-depth-3-face) fontified t) 205 223 (fontified t) 223 224 (face (rainbow-delimiters-depth-3-face) fontified t) 224 226 (fontified t) 226 265 (fontified t) 265 266 (face (rainbow-delimiters-depth-3-face) fontified t) 266 284 (fontified t) 284 285 (face (rainbow-delimiters-depth-3-face) fontified t) 285 286 (fontified t) 286 287 (face (rainbow-delimiters-depth-2-face) fontified t) 287 289 (fontified t) 289 294 (fontified t) 294 295 (face font-lock-operator-face fontified t) 295 299 (face font-lock-keyword-face fontified t) 299 305 (fontified t) 305 306 (fontified t rear-nonsticky t) 306 307 (fontified t) 307 313 (fontified t) 313 314 (face font-lock-operator-face fontified t) 314 318 (face font-lock-keyword-face fontified t) 318 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-1-face) fontified t) 326 327 (fontified t rear-nonsticky t)) . 3453) (undo-tree-id25010 . -327) (undo-tree-id25011 . -327) (undo-tree-id25012 . -327) (undo-tree-id25013 . -327) (undo-tree-id25014 . -327) (undo-tree-id25015 . -327) (undo-tree-id25016 . -327) (undo-tree-id25017 . -327)) nil (25934 13668 836430 621000) 0 nil])
([nil nil ((#("            multivariate_normal = MultivariateNormal(mean, covariance)
" 0 12 (fontified t) 12 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face font-lock-operator-face fontified t) 33 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 71 (fontified t rear-nonsticky t)) . 3453) (undo-tree-id24975 . -12) (undo-tree-id24976 . -12) (undo-tree-id24977 . -12) (undo-tree-id24978 . -12) (undo-tree-id24979 . -12) (undo-tree-id24980 . -12) (undo-tree-id24981 . -71) (undo-tree-id24982 . -71) (undo-tree-id24983 . -71) (undo-tree-id24984 . -71) (undo-tree-id24985 . -71) (undo-tree-id24986 . -71) (undo-tree-id24987 . -71) (undo-tree-id24988 . -71) (undo-tree-id24989 . -71) (undo-tree-id24990 . -71) (undo-tree-id24991 . -71) (undo-tree-id24992 . -71) (undo-tree-id24993 . -71) (undo-tree-id24994 . -71) (undo-tree-id24995 . -71) (undo-tree-id24996 . -71) (undo-tree-id24997 . -71) (undo-tree-id24998 . -71) (undo-tree-id24999 . -71) (undo-tree-id25000 . -71) (undo-tree-id25001 . -71) (undo-tree-id25002 . -12) (undo-tree-id25003 . -71) (undo-tree-id25004 . -71) (undo-tree-id25005 . -71) (undo-tree-id25006 . -71) (undo-tree-id25007 . -71) (undo-tree-id25008 . -71) (undo-tree-id25009 . -71) 3524) nil (25934 13668 836419 911000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3452) (undo-tree-id24862 . -1) (undo-tree-id24863 . -1) (undo-tree-id24864 . -1) (undo-tree-id24865 . -1) (undo-tree-id24866 . -1) (undo-tree-id24867 . -1) (undo-tree-id24868 . -1) (undo-tree-id24869 . -1) (undo-tree-id24870 . -1) (undo-tree-id24871 . -1) (undo-tree-id24872 . -1) (undo-tree-id24873 . -1) (undo-tree-id24874 . -1) (undo-tree-id24875 . -1) (undo-tree-id24876 . -1) (undo-tree-id24877 . -1) (undo-tree-id24878 . -1) (undo-tree-id24879 . -1) (undo-tree-id24880 . -1) (undo-tree-id24881 . -1) (undo-tree-id24882 . -1) (undo-tree-id24883 . -1) (undo-tree-id24884 . -1) (undo-tree-id24885 . -1) (undo-tree-id24886 . -1) (undo-tree-id24887 . -1) (undo-tree-id24888 . -1) (undo-tree-id24889 . -1) (undo-tree-id24890 . -1) (undo-tree-id24891 . -1) (undo-tree-id24892 . -1) (undo-tree-id24893 . -1) (undo-tree-id24894 . -1) (undo-tree-id24895 . -1) (undo-tree-id24896 . -1) (undo-tree-id24897 . -1) (undo-tree-id24898 . -1) (undo-tree-id24899 . -1) (undo-tree-id24900 . -1) (undo-tree-id24901 . -1) (undo-tree-id24902 . -1) (undo-tree-id24903 . -1) (undo-tree-id24904 . -1) (undo-tree-id24905 . -1) (undo-tree-id24906 . -1) (undo-tree-id24907 . -1) (undo-tree-id24908 . -1) (undo-tree-id24909 . -1) (undo-tree-id24910 . -1) (undo-tree-id24911 . -1) (undo-tree-id24912 . -1) (undo-tree-id24913 . -1) (undo-tree-id24914 . -1) (undo-tree-id24915 . -1) (undo-tree-id24916 . -1) (undo-tree-id24917 . -1) (undo-tree-id24918 . -1) (undo-tree-id24919 . -1) (undo-tree-id24920 . -1) (undo-tree-id24921 . -1) (undo-tree-id24922 . -1) (undo-tree-id24923 . -1) (undo-tree-id24924 . -1) (undo-tree-id24925 . -1) (undo-tree-id24926 . -1) (undo-tree-id24927 . -1) (undo-tree-id24928 . -1) (undo-tree-id24929 . -1) (undo-tree-id24930 . -1) (undo-tree-id24931 . -1) (undo-tree-id24932 . -1) (undo-tree-id24933 . -1) (undo-tree-id24934 . -1) (undo-tree-id24935 . -1) (undo-tree-id24936 . -1) (undo-tree-id24937 . -1) (undo-tree-id24938 . -1) (undo-tree-id24939 . -1) (undo-tree-id24940 . -1) (undo-tree-id24941 . -1) (undo-tree-id24942 . -1) (undo-tree-id24943 . -1) (undo-tree-id24944 . -1) (undo-tree-id24945 . -1) (undo-tree-id24946 . -1) (undo-tree-id24947 . -1) (undo-tree-id24948 . -1) (undo-tree-id24949 . -1) (undo-tree-id24950 . -1) (undo-tree-id24951 . -1) (undo-tree-id24952 . -1) (undo-tree-id24953 . -1) (undo-tree-id24954 . -1) (undo-tree-id24955 . -1) (undo-tree-id24956 . -1) (undo-tree-id24957 . -1) (undo-tree-id24958 . -1) (undo-tree-id24959 . -1) (undo-tree-id24960 . -1) (undo-tree-id24961 . -1) (undo-tree-id24962 . -1) (undo-tree-id24963 . -1) (undo-tree-id24964 . -1) (undo-tree-id24965 . -1) (undo-tree-id24966 . -1) (undo-tree-id24967 . -1) (undo-tree-id24968 . -1) (undo-tree-id24969 . -1) (undo-tree-id24970 . -1) (undo-tree-id24971 . -1) (undo-tree-id24972 . -1) (undo-tree-id24973 . -1) (undo-tree-id24974 . -1) 3453) nil (25934 13668 836374 370000) 0 nil])
([nil nil ((nil fontified nil 14489 . 14490) (nil fontified nil 14488 . 14489) (nil fontified nil 14472 . 14488) (nil fontified nil 14471 . 14472) (nil fontified nil 14452 . 14471) (nil fontified nil 14451 . 14452) (nil fontified nil 14450 . 14451) (nil fontified nil 14431 . 14450) (nil fontified nil 14419 . 14431) (14419 . 14490) (t 25934 13668 926258 396000)) nil (25934 13683 78429 882000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14427) 14419) nil (25934 13683 78426 970000) 0 nil])
([nil nil ((14420 . 14428) (#("        " 0 8 (fontified nil)) . 14419) (undo-tree-id25043 . -8) (14418 . 14428)) nil (25934 13683 78424 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14458 . 14459) (nil fontified nil 14457 . 14459) (nil fontified nil 14456 . 14457) (nil fontified nil 14450 . 14456) (nil fontified nil 14446 . 14450) (nil fontified nil 14445 . 14446) (nil fontified nil 14440 . 14445) (nil fontified nil 14439 . 14440) (nil fontified nil 14437 . 14439) (nil fontified nil 14430 . 14437) (nil fontified nil 14427 . 14430) (nil fontified nil 14419 . 14427) (14419 . 14459)) nil (25934 13683 78410 636000) 0 nil])
([nil nil ((14419 . 14420)) nil (25934 13683 78400 280000) 0 nil])
([nil nil ((14460 . 14472) (t 25934 13683 143560 199000)) nil (25934 13724 106455 915000) 0 nil])
([nil nil ((14472 . 14479)) nil (25934 13724 106454 685000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -14477) (undo-tree-id25045 . -1) (#("F" 0 1 (fontified t)) . -14478) (undo-tree-id25046 . -1) 14479) nil (25934 13724 106452 816000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14485) (14484 . 14485) (14483 . 14485) (#("[" 0 1 (fontified nil)) . -14483) (14477 . 14484)) nil (25934 13724 106442 545000) 0 nil])
([nil nil ((14484 . 14489)) nil (25934 13724 106438 493000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14492) (14491 . 14492) (14490 . 14492) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -14490) (14490 . 14491)) nil (25934 13724 106435 173000) 0 nil])
([nil nil ((14491 . 14497)) nil (25934 13724 106430 958000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -14496) (undo-tree-id25044 . -1) 14497) nil (25934 13724 106429 419000) 0 nil])
([nil nil ((14497 . 14500)) nil (25934 13724 106416 985000) 0 nil])
([nil nil ((14500 . 14506)) nil (25934 13724 106416 23000) 0 nil])
([nil nil ((14500 . 14505)) nil (25934 13724 106414 983000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14513) (14512 . 14513) (14511 . 14513) (#("[" 0 1 (fontified nil)) . -14511) (14511 . 14512)) nil (25934 13724 106412 170000) 0 nil])
([nil nil ((14512 . 14517)) nil (25934 13724 106403 228000) 0 nil])
([nil nil ((14419 . 14427) (t 25934 13724 199319 458000)) nil (25934 13742 838565 494000) 0 nil])
([nil nil ((14296 . 14297) (t 25934 13743 65046 894000)) nil (25934 13747 954504 71000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 14297) (t 25934 13748 45502 928000)) nil (25934 13753 15379 150000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14296) (undo-tree-id25074 . -1) (undo-tree-id25075 . -1) (undo-tree-id25076 . -1) (undo-tree-id25077 . -1) (undo-tree-id25078 . -1) (undo-tree-id25079 . -1) (undo-tree-id25080 . -1) (undo-tree-id25081 . -1) (undo-tree-id25082 . -1) (undo-tree-id25083 . -1) (undo-tree-id25084 . -1) (undo-tree-id25085 . -1) (undo-tree-id25086 . -1) (undo-tree-id25087 . -1) (undo-tree-id25088 . -1) (undo-tree-id25089 . -1) (undo-tree-id25090 . -1) (undo-tree-id25091 . -1) (undo-tree-id25092 . -1) (undo-tree-id25093 . -1) (undo-tree-id25094 . -1) (undo-tree-id25095 . -1) (undo-tree-id25096 . -1) (undo-tree-id25097 . -1) (undo-tree-id25098 . -1) (undo-tree-id25099 . -1) (undo-tree-id25100 . -1) (undo-tree-id25101 . -1) (undo-tree-id25102 . -1) (undo-tree-id25103 . -1) (undo-tree-id25104 . -1) (undo-tree-id25105 . -1) (undo-tree-id25106 . -1) (undo-tree-id25107 . -1) (undo-tree-id25108 . -1) (undo-tree-id25109 . -1) (undo-tree-id25110 . -1) (undo-tree-id25111 . -1) (undo-tree-id25112 . -1) (undo-tree-id25113 . -1) (undo-tree-id25114 . -1) (undo-tree-id25115 . -1) (undo-tree-id25116 . -1) (undo-tree-id25117 . -1) (undo-tree-id25118 . -1) (undo-tree-id25119 . -1) (undo-tree-id25120 . -1) (undo-tree-id25121 . -1) (undo-tree-id25122 . -1) (undo-tree-id25123 . -1) (undo-tree-id25124 . -1) (undo-tree-id25125 . -1) (undo-tree-id25126 . -1) (undo-tree-id25127 . -1) (undo-tree-id25128 . -1) (undo-tree-id25129 . -1) (undo-tree-id25130 . -1) (undo-tree-id25131 . -1) (undo-tree-id25132 . -1) (undo-tree-id25133 . -1) (undo-tree-id25134 . -1) (undo-tree-id25135 . -1) (undo-tree-id25136 . -1) (undo-tree-id25137 . -1) (undo-tree-id25138 . -1) (undo-tree-id25139 . -1) (undo-tree-id25140 . -1) (undo-tree-id25141 . -1) (undo-tree-id25142 . -1) (undo-tree-id25143 . -1) (undo-tree-id25144 . -1) (undo-tree-id25145 . -1) (undo-tree-id25146 . -1) (undo-tree-id25147 . -1) (undo-tree-id25148 . -1) (undo-tree-id25149 . -1) (undo-tree-id25150 . -1) (undo-tree-id25151 . -1) (undo-tree-id25152 . -1) (undo-tree-id25153 . -1) (undo-tree-id25154 . -1) (undo-tree-id25155 . -1) (undo-tree-id25156 . -1) (undo-tree-id25157 . -1) (undo-tree-id25158 . -1) (undo-tree-id25159 . -1) (undo-tree-id25160 . -1) (undo-tree-id25161 . -1) (undo-tree-id25162 . -1) (undo-tree-id25163 . -1) (undo-tree-id25164 . -1) (undo-tree-id25165 . -1) (undo-tree-id25166 . -1) (undo-tree-id25167 . -1) (undo-tree-id25168 . -1) (undo-tree-id25169 . -1) (undo-tree-id25170 . -1) (undo-tree-id25171 . -1) (undo-tree-id25172 . -1) (undo-tree-id25173 . -1) (undo-tree-id25174 . -1) (undo-tree-id25175 . -1) (undo-tree-id25176 . -1) (undo-tree-id25177 . -1) (undo-tree-id25178 . -1) (undo-tree-id25179 . -1) (undo-tree-id25180 . -1) (undo-tree-id25181 . -1) (undo-tree-id25182 . -1) (undo-tree-id25183 . -1) (undo-tree-id25184 . -1) (undo-tree-id25185 . -1) (undo-tree-id25186 . -1) (undo-tree-id25187 . -1) (undo-tree-id25188 . -1) (undo-tree-id25189 . -1) (undo-tree-id25190 . -1) (undo-tree-id25191 . -1) (undo-tree-id25192 . -1) (undo-tree-id25193 . -1) (undo-tree-id25194 . -1) (undo-tree-id25195 . -1) (undo-tree-id25196 . -1) (undo-tree-id25197 . -1) (undo-tree-id25198 . -1) (undo-tree-id25199 . -1) (undo-tree-id25200 . -1) (undo-tree-id25201 . -1) (undo-tree-id25202 . -1) (undo-tree-id25203 . -1) (undo-tree-id25204 . -1) (undo-tree-id25205 . -1) (undo-tree-id25206 . -1) (undo-tree-id25207 . -1) (undo-tree-id25208 . -1) (undo-tree-id25209 . -1) (undo-tree-id25210 . -1) (undo-tree-id25211 . -1) (undo-tree-id25212 . -1) (undo-tree-id25213 . -1) (undo-tree-id25214 . -1) (undo-tree-id25215 . -1) (undo-tree-id25216 . -1) (undo-tree-id25217 . -1) (undo-tree-id25218 . -1) (undo-tree-id25219 . -1) (undo-tree-id25220 . -1) (undo-tree-id25221 . -1) (undo-tree-id25222 . -1) (undo-tree-id25223 . -1) (undo-tree-id25224 . -1) (undo-tree-id25225 . -1) (undo-tree-id25226 . -1) (undo-tree-id25227 . -1) 14297) nil (25934 13753 15351 594000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -14285) (undo-tree-id25047 . -1) (undo-tree-id25048 . -1) (undo-tree-id25049 . -1) (undo-tree-id25050 . -1) (undo-tree-id25051 . -1) (undo-tree-id25052 . -1) (undo-tree-id25053 . -1) (undo-tree-id25054 . -1) (undo-tree-id25055 . -1) (undo-tree-id25056 . -1) (undo-tree-id25057 . -1) (undo-tree-id25058 . -1) (undo-tree-id25059 . -1) (undo-tree-id25060 . -1) (undo-tree-id25061 . -1) (undo-tree-id25062 . -1) (undo-tree-id25063 . -1) (undo-tree-id25064 . -1) (undo-tree-id25065 . -1) (undo-tree-id25066 . -1) (undo-tree-id25067 . -1) (undo-tree-id25068 . -1) (undo-tree-id25069 . -1) (undo-tree-id25070 . -1) (undo-tree-id25071 . -1) (undo-tree-id25072 . -1) (undo-tree-id25073 . -1) 14286) nil (25934 13753 14334 923000) 0 nil])
([nil nil ((14542 . 14546) 14534 (t 25934 13753 65962 626000)) nil (25934 13778 889016 166000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14542) (undo-tree-id25275 . -4) 14546) nil (25934 13778 889014 360000) 0 nil])
([nil nil ((14542 . 14545)) nil (25934 13778 889011 813000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -14595) (undo-tree-id25268 . -1) (#("r" 0 1 (fontified t)) . -14596) (undo-tree-id25269 . -1) (#("i" 0 1 (fontified t)) . -14597) (undo-tree-id25270 . -1) (#("a" 0 1 (fontified t)) . -14598) (undo-tree-id25271 . -1) (#("n" 0 1 (fontified t)) . -14599) (undo-tree-id25272 . -1) (#("c" 0 1 (fontified t)) . -14600) (undo-tree-id25273 . -1) (#("e" 0 1 (fontified t)) . -14601) (undo-tree-id25274 . -1) 14602) nil (25934 13778 889007 850000) 0 nil])
([nil nil ((14592 . 14595)) nil (25934 13778 888990 501000) 0 nil])
([nil nil ((14586 . 14590)) nil (25934 13778 888988 981000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -14589) (undo-tree-id25228 . -1) (undo-tree-id25229 . -1) (undo-tree-id25230 . -1) (undo-tree-id25231 . -1) (undo-tree-id25232 . -1) (undo-tree-id25233 . -1) (undo-tree-id25234 . -1) (undo-tree-id25235 . -1) (undo-tree-id25236 . -1) (undo-tree-id25237 . -1) (undo-tree-id25238 . -1) (undo-tree-id25239 . -1) (undo-tree-id25240 . -1) (undo-tree-id25241 . -1) (undo-tree-id25242 . -1) (undo-tree-id25243 . -1) (undo-tree-id25244 . -1) (undo-tree-id25245 . -1) (undo-tree-id25246 . -1) (undo-tree-id25247 . -1) (undo-tree-id25248 . -1) (undo-tree-id25249 . -1) (undo-tree-id25250 . -1) (undo-tree-id25251 . -1) (undo-tree-id25252 . -1) (undo-tree-id25253 . -1) (undo-tree-id25254 . -1) (undo-tree-id25255 . -1) (undo-tree-id25256 . -1) (undo-tree-id25257 . -1) (undo-tree-id25258 . -1) (undo-tree-id25259 . -1) (undo-tree-id25260 . -1) (undo-tree-id25261 . -1) (undo-tree-id25262 . -1) (undo-tree-id25263 . -1) (undo-tree-id25264 . -1) (undo-tree-id25265 . -1) (undo-tree-id25266 . -1) (undo-tree-id25267 . -1) 14590) nil (25934 13778 888978 773000) 0 nil])
([nil nil ((14542 . 14546) 14534 (t 25934 13778 972334 738000)) nil (25934 13783 790738 958000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14542) (undo-tree-id25276 . -4) (undo-tree-id25277 . -4) (undo-tree-id25278 . -4) (undo-tree-id25279 . -4) (undo-tree-id25280 . -4) (undo-tree-id25281 . -4) (undo-tree-id25282 . -4) (undo-tree-id25283 . -4) (undo-tree-id25284 . -4) (undo-tree-id25285 . -4) (undo-tree-id25286 . -4) (undo-tree-id25287 . -4) (undo-tree-id25288 . -4) (undo-tree-id25289 . -4) (undo-tree-id25290 . -4) (undo-tree-id25291 . -4) (undo-tree-id25292 . -4) (undo-tree-id25293 . -4) (undo-tree-id25294 . -4) (undo-tree-id25295 . -4) (undo-tree-id25296 . -4) (undo-tree-id25297 . -4) (undo-tree-id25298 . -4) (undo-tree-id25299 . -4) (undo-tree-id25300 . -4) (undo-tree-id25301 . -4) (undo-tree-id25302 . -4) (undo-tree-id25303 . -4) (undo-tree-id25304 . -4) (undo-tree-id25305 . -4) (undo-tree-id25306 . -4) (undo-tree-id25307 . -4) (undo-tree-id25308 . -4) (undo-tree-id25309 . -4) (undo-tree-id25310 . -4) (undo-tree-id25311 . -4) (undo-tree-id25312 . -4) (undo-tree-id25313 . -4) (undo-tree-id25314 . -4) (undo-tree-id25315 . -4) (undo-tree-id25316 . -4) (undo-tree-id25317 . -4) 14546) nil (25934 13783 790719 518000) 0 nil])
([nil nil ((14542 . 14547)) nil (25934 13783 790550 322000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -14555) (undo-tree-id25323 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -14556) (undo-tree-id25324 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -14557) (undo-tree-id25325 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -14558) (undo-tree-id25326 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -14559) (undo-tree-id25327 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -14560) (undo-tree-id25328 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -14561) (undo-tree-id25329 . -1) 14562 (t 25934 13783 864782 713000)) nil (25934 13791 371533 976000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -14551) (undo-tree-id25319 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -14552) (undo-tree-id25320 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -14553) (undo-tree-id25321 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -14554) (undo-tree-id25322 . -1) 14555) nil (25934 13791 371524 51000) 0 nil])
([nil nil ((14551 . 14552)) nil (25934 13791 371518 253000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -14551) (undo-tree-id25318 . -1) 14552) nil (25934 13791 371515 683000) 0 nil])
([nil nil ((14551 . 14555)) nil (25934 13791 371500 309000) 0 nil])
([nil nil ((3390 . 3398) (t 25934 13791 493481 234000)) nil (25934 13909 566940 615000) 0 nil])
([nil nil ((3306 . 3314) (#("        " 0 8 (fontified nil)) . 3305) (undo-tree-id25343 . -8) (3313 . 3314)) nil (25934 13909 566937 157000) 0 nil])
([nil nil ((3399 . 3402)) nil (25934 13909 566931 148000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3399) (undo-tree-id25340 . -1) (#("a" 0 1 (fontified t)) . -3400) (undo-tree-id25341 . -1) (#("m" 0 1 (fontified t)) . -3401) (undo-tree-id25342 . -1) 3402) nil (25934 13909 566928 595000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3433 . 3434) (nil fontified nil 3432 . 3434) (nil fontified nil 3431 . 3432) (nil fontified nil 3430 . 3431) (nil fontified nil 3427 . 3430) (nil fontified nil 3426 . 3427) (nil fontified nil 3425 . 3426) (nil fontified nil 3399 . 3425) (3399 . 3434)) nil (25934 13909 566922 344000) 0 nil])
([nil nil ((3391 . 3392)) nil (25934 13909 566919 352000) 0 nil])
([nil nil ((#("        multivariate_normal.sample((Nb,)).T
" 0 8 (fontified t) 8 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 42 (fontified t) 42 43 (rear-nonsticky t fontified t) 43 44 (fontified t)) . -3392) (undo-tree-id25330 . -44) (undo-tree-id25331 . -44) (undo-tree-id25332 . -44) (undo-tree-id25333 . -44) (undo-tree-id25334 . -44) (undo-tree-id25335 . -8) (undo-tree-id25336 . -8) (undo-tree-id25337 . -8) (undo-tree-id25338 . -8) (undo-tree-id25339 . -44) 3436) nil (25934 13909 566917 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3852 . 3853) (nil fontified nil 3850 . 3853) (nil fontified nil 3845 . 3850) (nil fontified nil 3844 . 3845) (nil fontified nil 3843 . 3844) (nil fontified nil 3836 . 3843) (nil fontified nil 3832 . 3836) (nil fontified nil 3831 . 3832) (nil fontified nil 3797 . 3831) (nil fontified nil 3731 . 3797) (nil fontified nil 3727 . 3731) (nil fontified nil 3726 . 3727) (nil fontified nil 3635 . 3726) (nil fontified nil 3633 . 3635) (nil fontified nil 3632 . 3633) (nil fontified nil 3631 . 3632) (nil fontified nil 3630 . 3631) (nil fontified nil 3625 . 3630) (nil fontified nil 3624 . 3625) (nil fontified nil 3621 . 3624) (nil fontified nil 3617 . 3621) (nil fontified nil 3616 . 3617) (nil fontified nil 3615 . 3616) (nil fontified nil 3550 . 3615) (nil fontified nil 3525 . 3550) (nil fontified nil 3523 . 3525) (nil fontified nil 3522 . 3523) (nil fontified nil 3517 . 3522) (nil fontified nil 3516 . 3517) (nil fontified nil 3509 . 3516) (nil fontified nil 3505 . 3509) (nil fontified nil 3504 . 3505) (nil fontified nil 3462 . 3504) (nil fontified nil 3452 . 3462) (nil fontified nil 3415 . 3452) (nil fontified nil 3410 . 3415) (nil fontified nil 3409 . 3410) (nil fontified nil 3405 . 3409) (nil fontified nil 3404 . 3405) (nil fontified nil 3392 . 3404) (3392 . 3853)) nil (25934 13909 566868 695000) 0 nil])
([nil nil ((3392 . 3400)) nil (25934 13909 566862 504000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#("
" 0 1 (fontified t)) . 3422)) nil (25934 13909 566857 877000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566850 191000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566843 421000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566836 659000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566833 705000) 0 nil])
([nil nil ((3422 . 3423)) nil (25934 13909 566832 889000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#("
" 0 1 (fontified t)) . 3446)) nil (25934 13909 566827 683000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446)) nil (25934 13909 566820 243000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446)) nil (25934 13909 566813 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446)) nil (25934 13909 566808 489000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446)) nil (25934 13909 566804 555000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#("
" 0 1 (fontified t)) . 3470)) nil (25934 13909 566797 588000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470)) nil (25934 13909 566790 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470)) nil (25934 13909 566783 463000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470)) nil (25934 13909 566775 884000) 0 nil])
([nil nil ((#("d" 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470)) nil (25934 13909 566771 437000) 0 nil])
([nil nil ((3470 . 3471)) nil (25934 13909 566769 922000) 0 nil])
([nil nil ((3471 . 3472)) nil (25934 13909 566769 135000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#("
" 0 1 (fontified t)) . 3488)) nil (25934 13909 566763 985000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified nil)) . 3488)) nil (25934 13909 566756 741000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488)) nil (25934 13909 566748 587000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488)) nil (25934 13909 566740 177000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488)) nil (25934 13909 566735 370000) 0 nil])
([nil nil ((3488 . 3489)) nil (25934 13909 566733 727000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3517) 3509) nil (25934 13909 566725 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3450 . 3451) (nil fontified nil 3448 . 3451) (nil fontified nil 3447 . 3448) (nil fontified nil 3446 . 3447) (nil fontified nil 3443 . 3446) (nil fontified nil 3442 . 3443) (nil fontified nil 3441 . 3442) (nil fontified nil 3414 . 3441) (nil fontified nil 3413 . 3414) (nil fontified nil 3412 . 3413) (nil fontified nil 3409 . 3412) (nil fontified nil 3408 . 3409) (nil fontified nil 3404 . 3408) (nil fontified nil 3392 . 3404) (3392 . 3451) (t 25934 13909 724307 18000)) nil (25934 14149 975365 541000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3400) 3392) nil (25934 14149 975358 515000) 0 nil])
([nil nil ((3446 . 3455)) nil (25934 14149 975357 28000) 0 nil])
([nil nil ((3411 . 3414)) nil (25934 14149 975355 501000) 0 nil])
([nil nil ((#("variate_normal" 0 14 (fontified t)) . 3419)) nil (25934 14149 975353 768000) 0 nil])
([nil nil ((3419 . 3426)) nil (25934 14149 975352 440000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -3414) (undo-tree-id25363 . -1) (#("u" 0 1 (fontified t)) . -3415) (undo-tree-id25364 . -1) (#("l" 0 1 (fontified t)) . -3416) (undo-tree-id25365 . -1) (#("t" 0 1 (fontified t)) . -3417) (undo-tree-id25366 . -1) (#("i" 0 1 (fontified t)) . -3418) (undo-tree-id25367 . -1) (#("_" 0 1 (fontified t)) . -3419) (undo-tree-id25368 . -1) 3420) nil (25934 14149 975348 551000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . 3400)) nil (25934 14149 975335 17000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . 3400) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . 3400) (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . 3400) (#("." 0 1 (fontified t)) . 3400)) nil (25934 14149 975332 235000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3400) 3392) nil (25934 14149 975329 868000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3425) (undo-tree-id25361 . -1) (#("T" 0 1 (fontified t)) . -3426) (undo-tree-id25362 . -1) 3427) nil (25934 14149 975327 327000) 0 nil])
([nil nil ((3400 . 3402)) nil (25934 14149 975321 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3463 . 3464) (nil fontified nil 3463 . 3464) (nil fontified nil 3462 . 3463) (nil fontified nil 3461 . 3462) (nil fontified nil 3458 . 3461) (nil fontified nil 3457 . 3458) (nil fontified nil 3456 . 3457) (nil fontified nil 3439 . 3456) (nil fontified nil 3438 . 3439) (nil fontified nil 3437 . 3438) (nil fontified nil 3436 . 3437) (nil fontified nil 3428 . 3436) (3428 . 3464)) nil (25934 14149 975319 199000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -3423) (undo-tree-id25344 . -1) (undo-tree-id25345 . -1) (undo-tree-id25346 . -1) (undo-tree-id25347 . -1) (undo-tree-id25348 . -1) (undo-tree-id25349 . -1) (undo-tree-id25350 . -1) (undo-tree-id25351 . -1) (undo-tree-id25352 . -1) (undo-tree-id25353 . -1) (undo-tree-id25354 . -1) (undo-tree-id25355 . -1) (undo-tree-id25356 . -1) (undo-tree-id25357 . -1) (undo-tree-id25358 . -1) (undo-tree-id25359 . -1) (undo-tree-id25360 . -1) 3424) nil (25934 14149 975311 807000) 0 nil])
([nil nil ((3423 . 3424)) nil (25934 14149 975068 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3503 . 3504) (nil fontified nil 3502 . 3504) (nil fontified nil 3501 . 3502) (nil fontified nil 3495 . 3501) (nil fontified nil 3493 . 3495) (nil fontified nil 3491 . 3493) (nil fontified nil 3490 . 3491) (nil fontified nil 3485 . 3490) (nil fontified nil 3484 . 3485) (nil fontified nil 3482 . 3484) (nil fontified nil 3475 . 3482) (nil fontified nil 3474 . 3475) (nil fontified nil 3472 . 3474) (nil fontified nil 3464 . 3472) (3464 . 3504) (t 25934 14150 354340 277000)) nil (25934 14206 688672 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3539 . 3540) (nil fontified nil 3539 . 3540) (nil fontified nil 3538 . 3539) (nil fontified nil 3537 . 3538) (nil fontified nil 3534 . 3537) (nil fontified nil 3533 . 3534) (nil fontified nil 3532 . 3533) (nil fontified nil 3515 . 3532) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3512 . 3513) (nil fontified nil 3504 . 3512) (3504 . 3540)) nil (25934 14206 688667 408000) 0 nil])
([nil nil ((3512 . 3516) 3504) nil (25934 14206 688663 555000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . 3516) (#(" " 0 1 (fontified t)) . 3516) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 3516)) nil (25934 14206 688661 701000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3516) 3504) nil (25934 14206 688660 281000) 0 nil])
([nil nil ((3465 . 3473) (#("        " 0 8 (fontified nil)) . 3464) (undo-tree-id25984 . -8) (undo-tree-id25985 . -8) (undo-tree-id25986 . -8) (undo-tree-id25987 . -8) (undo-tree-id25988 . -8) (undo-tree-id25989 . -8) (undo-tree-id25990 . -8) (undo-tree-id25991 . -8) (undo-tree-id25992 . -8) (undo-tree-id25993 . -8) (undo-tree-id25994 . -8) (undo-tree-id25995 . -8) (undo-tree-id25996 . -8) (undo-tree-id25997 . -8) (undo-tree-id25998 . -8) (undo-tree-id25999 . -8) (3463 . 3473)) nil (25934 14206 688657 884000) 0 nil])
([nil nil ((3473 . 3477)) nil (25934 14206 688631 269000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -3473) (undo-tree-id25371 . -1) (undo-tree-id25372 . -1) (undo-tree-id25373 . -1) (undo-tree-id25374 . -1) (undo-tree-id25375 . -1) (undo-tree-id25376 . -1) (undo-tree-id25377 . -1) (undo-tree-id25378 . -1) (undo-tree-id25379 . -1) (undo-tree-id25380 . -1) (undo-tree-id25381 . -1) (undo-tree-id25382 . -1) (undo-tree-id25383 . -1) (undo-tree-id25384 . -1) (undo-tree-id25385 . -1) (undo-tree-id25386 . -1) (undo-tree-id25387 . -1) (undo-tree-id25388 . -1) (undo-tree-id25389 . -1) (undo-tree-id25390 . -1) (undo-tree-id25391 . -1) (undo-tree-id25392 . -1) (undo-tree-id25393 . -1) (undo-tree-id25394 . -1) (undo-tree-id25395 . -1) (undo-tree-id25396 . -1) (undo-tree-id25397 . -1) (undo-tree-id25398 . -1) (undo-tree-id25399 . -1) (undo-tree-id25400 . -1) (undo-tree-id25401 . -1) (undo-tree-id25402 . -1) (undo-tree-id25403 . -1) (undo-tree-id25404 . -1) (undo-tree-id25405 . -1) (undo-tree-id25406 . -1) (undo-tree-id25407 . -1) (undo-tree-id25408 . -1) (undo-tree-id25409 . -1) (undo-tree-id25410 . -1) (undo-tree-id25411 . -1) (undo-tree-id25412 . -1) (undo-tree-id25413 . -1) (undo-tree-id25414 . -1) (undo-tree-id25415 . -1) (undo-tree-id25416 . -1) (undo-tree-id25417 . -1) (undo-tree-id25418 . -1) (undo-tree-id25419 . -1) (undo-tree-id25420 . -1) (undo-tree-id25421 . -1) (undo-tree-id25422 . -1) (undo-tree-id25423 . -1) (undo-tree-id25424 . -1) (undo-tree-id25425 . -1) (undo-tree-id25426 . -1) (undo-tree-id25427 . -1) (undo-tree-id25428 . -1) (undo-tree-id25429 . -1) (undo-tree-id25430 . -1) (undo-tree-id25431 . -1) (undo-tree-id25432 . -1) (undo-tree-id25433 . -1) (undo-tree-id25434 . -1) (undo-tree-id25435 . -1) (undo-tree-id25436 . -1) (undo-tree-id25437 . -1) (undo-tree-id25438 . -1) (undo-tree-id25439 . -1) (undo-tree-id25440 . -1) (undo-tree-id25441 . -1) (undo-tree-id25442 . -1) (undo-tree-id25443 . -1) (undo-tree-id25444 . -1) (undo-tree-id25445 . -1) (undo-tree-id25446 . -1) (undo-tree-id25447 . -1) (undo-tree-id25448 . -1) (undo-tree-id25449 . -1) (undo-tree-id25450 . -1) (undo-tree-id25451 . -1) (undo-tree-id25452 . -1) (undo-tree-id25453 . -1) (undo-tree-id25454 . -1) (undo-tree-id25455 . -1) (undo-tree-id25456 . -1) (undo-tree-id25457 . -1) (undo-tree-id25458 . -1) (undo-tree-id25459 . -1) (undo-tree-id25460 . -1) (undo-tree-id25461 . -1) (undo-tree-id25462 . -1) (undo-tree-id25463 . -1) (undo-tree-id25464 . -1) (undo-tree-id25465 . -1) (undo-tree-id25466 . -1) (undo-tree-id25467 . -1) (undo-tree-id25468 . -1) (undo-tree-id25469 . -1) (undo-tree-id25470 . -1) (undo-tree-id25471 . -1) (undo-tree-id25472 . -1) (undo-tree-id25473 . -1) (undo-tree-id25474 . -1) (undo-tree-id25475 . -1) (undo-tree-id25476 . -1) (undo-tree-id25477 . -1) (undo-tree-id25478 . -1) (undo-tree-id25479 . -1) (undo-tree-id25480 . -1) (undo-tree-id25481 . -1) (undo-tree-id25482 . -1) (undo-tree-id25483 . -1) (undo-tree-id25484 . -1) (undo-tree-id25485 . -1) (undo-tree-id25486 . -1) (undo-tree-id25487 . -1) (undo-tree-id25488 . -1) (undo-tree-id25489 . -1) (undo-tree-id25490 . -1) (undo-tree-id25491 . -1) (undo-tree-id25492 . -1) (undo-tree-id25493 . -1) (undo-tree-id25494 . -1) (undo-tree-id25495 . -1) (undo-tree-id25496 . -1) (undo-tree-id25497 . -1) (undo-tree-id25498 . -1) (undo-tree-id25499 . -1) (undo-tree-id25500 . -1) (undo-tree-id25501 . -1) (undo-tree-id25502 . -1) (undo-tree-id25503 . -1) (undo-tree-id25504 . -1) (undo-tree-id25505 . -1) (undo-tree-id25506 . -1) (undo-tree-id25507 . -1) (undo-tree-id25508 . -1) (undo-tree-id25509 . -1) (undo-tree-id25510 . -1) (undo-tree-id25511 . -1) (undo-tree-id25512 . -1) (undo-tree-id25513 . -1) (undo-tree-id25514 . -1) (undo-tree-id25515 . -1) (undo-tree-id25516 . -1) (undo-tree-id25517 . -1) (undo-tree-id25518 . -1) (undo-tree-id25519 . -1) (undo-tree-id25520 . -1) (undo-tree-id25521 . -1) (undo-tree-id25522 . -1) (undo-tree-id25523 . -1) (undo-tree-id25524 . -1) (undo-tree-id25525 . -1) (undo-tree-id25526 . -1) (undo-tree-id25527 . -1) (undo-tree-id25528 . -1) (undo-tree-id25529 . -1) (undo-tree-id25530 . -1) (undo-tree-id25531 . -1) (undo-tree-id25532 . -1) (undo-tree-id25533 . -1) (undo-tree-id25534 . -1) (undo-tree-id25535 . -1) (undo-tree-id25536 . -1) (undo-tree-id25537 . -1) (undo-tree-id25538 . -1) (undo-tree-id25539 . -1) (undo-tree-id25540 . -1) (undo-tree-id25541 . -1) (undo-tree-id25542 . -1) (undo-tree-id25543 . -1) (undo-tree-id25544 . -1) (undo-tree-id25545 . -1) (undo-tree-id25546 . -1) (undo-tree-id25547 . -1) (undo-tree-id25548 . -1) (undo-tree-id25549 . -1) (undo-tree-id25550 . -1) (undo-tree-id25551 . -1) (undo-tree-id25552 . -1) (undo-tree-id25553 . -1) (undo-tree-id25554 . -1) (undo-tree-id25555 . -1) (undo-tree-id25556 . -1) (undo-tree-id25557 . -1) (undo-tree-id25558 . -1) (undo-tree-id25559 . -1) (undo-tree-id25560 . -1) (undo-tree-id25561 . -1) (undo-tree-id25562 . -1) (undo-tree-id25563 . -1) (undo-tree-id25564 . -1) (undo-tree-id25565 . -1) (undo-tree-id25566 . -1) (undo-tree-id25567 . -1) (undo-tree-id25568 . -1) (undo-tree-id25569 . -1) (undo-tree-id25570 . -1) (undo-tree-id25571 . -1) (undo-tree-id25572 . -1) (undo-tree-id25573 . -1) (undo-tree-id25574 . -1) (undo-tree-id25575 . -1) (undo-tree-id25576 . -1) (undo-tree-id25577 . -1) (undo-tree-id25578 . -1) (undo-tree-id25579 . -1) (undo-tree-id25580 . -1) (undo-tree-id25581 . -1) (undo-tree-id25582 . -1) (undo-tree-id25583 . -1) (undo-tree-id25584 . -1) (undo-tree-id25585 . -1) (undo-tree-id25586 . -1) (undo-tree-id25587 . -1) (undo-tree-id25588 . -1) (undo-tree-id25589 . -1) (undo-tree-id25590 . -1) (undo-tree-id25591 . -1) (undo-tree-id25592 . -1) (undo-tree-id25593 . -1) (undo-tree-id25594 . -1) (undo-tree-id25595 . -1) (undo-tree-id25596 . -1) (undo-tree-id25597 . -1) (#("a" 0 1 (fontified t)) . -3474) (undo-tree-id25598 . -1) (undo-tree-id25599 . -1) (undo-tree-id25600 . -1) (undo-tree-id25601 . -1) (undo-tree-id25602 . -1) (undo-tree-id25603 . -1) (undo-tree-id25604 . -1) (undo-tree-id25605 . -1) (undo-tree-id25606 . -1) (undo-tree-id25607 . -1) (undo-tree-id25608 . -1) (undo-tree-id25609 . -1) (undo-tree-id25610 . -1) (undo-tree-id25611 . -1) (undo-tree-id25612 . -1) (undo-tree-id25613 . -1) (undo-tree-id25614 . -1) (undo-tree-id25615 . -1) (undo-tree-id25616 . -1) (undo-tree-id25617 . -1) (undo-tree-id25618 . -1) (undo-tree-id25619 . -1) (undo-tree-id25620 . -1) (undo-tree-id25621 . -1) (undo-tree-id25622 . -1) (undo-tree-id25623 . -1) (undo-tree-id25624 . -1) (undo-tree-id25625 . -1) (undo-tree-id25626 . -1) (undo-tree-id25627 . -1) (undo-tree-id25628 . -1) (undo-tree-id25629 . -1) (undo-tree-id25630 . -1) (undo-tree-id25631 . -1) (undo-tree-id25632 . -1) (undo-tree-id25633 . -1) (undo-tree-id25634 . -1) (undo-tree-id25635 . -1) (undo-tree-id25636 . -1) (undo-tree-id25637 . -1) (undo-tree-id25638 . -1) (undo-tree-id25639 . -1) (undo-tree-id25640 . -1) (undo-tree-id25641 . -1) (undo-tree-id25642 . -1) (undo-tree-id25643 . -1) (undo-tree-id25644 . -1) (undo-tree-id25645 . -1) (undo-tree-id25646 . -1) (undo-tree-id25647 . -1) (undo-tree-id25648 . -1) (undo-tree-id25649 . -1) (undo-tree-id25650 . -1) (undo-tree-id25651 . -1) (undo-tree-id25652 . -1) (undo-tree-id25653 . -1) (undo-tree-id25654 . -1) (undo-tree-id25655 . -1) (undo-tree-id25656 . -1) (undo-tree-id25657 . -1) (undo-tree-id25658 . -1) (undo-tree-id25659 . -1) (undo-tree-id25660 . -1) (undo-tree-id25661 . -1) (undo-tree-id25662 . -1) (undo-tree-id25663 . -1) (undo-tree-id25664 . -1) (undo-tree-id25665 . -1) (undo-tree-id25666 . -1) (undo-tree-id25667 . -1) (undo-tree-id25668 . -1) (undo-tree-id25669 . -1) (undo-tree-id25670 . -1) (undo-tree-id25671 . -1) (undo-tree-id25672 . -1) (undo-tree-id25673 . -1) (undo-tree-id25674 . -1) (undo-tree-id25675 . -1) (undo-tree-id25676 . -1) (undo-tree-id25677 . -1) (undo-tree-id25678 . -1) (undo-tree-id25679 . -1) (undo-tree-id25680 . -1) (undo-tree-id25681 . -1) (undo-tree-id25682 . -1) (undo-tree-id25683 . -1) (undo-tree-id25684 . -1) (undo-tree-id25685 . -1) (undo-tree-id25686 . -1) (undo-tree-id25687 . -1) (undo-tree-id25688 . -1) (undo-tree-id25689 . -1) (undo-tree-id25690 . -1) (undo-tree-id25691 . -1) (undo-tree-id25692 . -1) (undo-tree-id25693 . -1) (undo-tree-id25694 . -1) (undo-tree-id25695 . -1) (undo-tree-id25696 . -1) (undo-tree-id25697 . -1) (undo-tree-id25698 . -1) (undo-tree-id25699 . -1) (undo-tree-id25700 . -1) (undo-tree-id25701 . -1) (undo-tree-id25702 . -1) (undo-tree-id25703 . -1) (undo-tree-id25704 . -1) (undo-tree-id25705 . -1) (undo-tree-id25706 . -1) (undo-tree-id25707 . -1) (undo-tree-id25708 . -1) (undo-tree-id25709 . -1) (undo-tree-id25710 . -1) (undo-tree-id25711 . -1) (undo-tree-id25712 . -1) (undo-tree-id25713 . -1) (undo-tree-id25714 . -1) (undo-tree-id25715 . -1) (undo-tree-id25716 . -1) (undo-tree-id25717 . -1) (undo-tree-id25718 . -1) (undo-tree-id25719 . -1) (undo-tree-id25720 . -1) (undo-tree-id25721 . -1) (undo-tree-id25722 . -1) (undo-tree-id25723 . -1) (undo-tree-id25724 . -1) (undo-tree-id25725 . -1) (undo-tree-id25726 . -1) (undo-tree-id25727 . -1) (undo-tree-id25728 . -1) (undo-tree-id25729 . -1) (undo-tree-id25730 . -1) (undo-tree-id25731 . -1) (undo-tree-id25732 . -1) (undo-tree-id25733 . -1) (undo-tree-id25734 . -1) (undo-tree-id25735 . -1) (undo-tree-id25736 . -1) (undo-tree-id25737 . -1) (undo-tree-id25738 . -1) (undo-tree-id25739 . -1) (undo-tree-id25740 . -1) (undo-tree-id25741 . -1) (undo-tree-id25742 . -1) (undo-tree-id25743 . -1) (undo-tree-id25744 . -1) (undo-tree-id25745 . -1) (undo-tree-id25746 . -1) (undo-tree-id25747 . -1) (undo-tree-id25748 . -1) (undo-tree-id25749 . -1) (undo-tree-id25750 . -1) (undo-tree-id25751 . -1) (undo-tree-id25752 . -1) (undo-tree-id25753 . -1) (undo-tree-id25754 . -1) (undo-tree-id25755 . -1) (undo-tree-id25756 . -1) (undo-tree-id25757 . -1) (undo-tree-id25758 . -1) (undo-tree-id25759 . -1) (undo-tree-id25760 . -1) (undo-tree-id25761 . -1) (undo-tree-id25762 . -1) (undo-tree-id25763 . -1) (undo-tree-id25764 . -1) (undo-tree-id25765 . -1) (undo-tree-id25766 . -1) (undo-tree-id25767 . -1) (undo-tree-id25768 . -1) (undo-tree-id25769 . -1) (undo-tree-id25770 . -1) (undo-tree-id25771 . -1) (undo-tree-id25772 . -1) (undo-tree-id25773 . -1) (undo-tree-id25774 . -1) (undo-tree-id25775 . -1) (undo-tree-id25776 . -1) (undo-tree-id25777 . -1) (undo-tree-id25778 . -1) (undo-tree-id25779 . -1) (undo-tree-id25780 . -1) (undo-tree-id25781 . -1) (undo-tree-id25782 . -1) (undo-tree-id25783 . -1) (#("r" 0 1 (fontified t)) . -3475) (undo-tree-id25784 . -1) (undo-tree-id25785 . -1) (undo-tree-id25786 . -1) (undo-tree-id25787 . -1) (undo-tree-id25788 . -1) (undo-tree-id25789 . -1) (undo-tree-id25790 . -1) (undo-tree-id25791 . -1) (undo-tree-id25792 . -1) (undo-tree-id25793 . -1) (undo-tree-id25794 . -1) (undo-tree-id25795 . -1) (undo-tree-id25796 . -1) (undo-tree-id25797 . -1) (undo-tree-id25798 . -1) (undo-tree-id25799 . -1) (undo-tree-id25800 . -1) (undo-tree-id25801 . -1) (undo-tree-id25802 . -1) (undo-tree-id25803 . -1) (undo-tree-id25804 . -1) (undo-tree-id25805 . -1) (undo-tree-id25806 . -1) (undo-tree-id25807 . -1) (undo-tree-id25808 . -1) (undo-tree-id25809 . -1) (undo-tree-id25810 . -1) (undo-tree-id25811 . -1) (undo-tree-id25812 . -1) (undo-tree-id25813 . -1) (undo-tree-id25814 . -1) (undo-tree-id25815 . -1) (undo-tree-id25816 . -1) (undo-tree-id25817 . -1) (undo-tree-id25818 . -1) (undo-tree-id25819 . -1) (undo-tree-id25820 . -1) (undo-tree-id25821 . -1) (undo-tree-id25822 . -1) (undo-tree-id25823 . -1) (undo-tree-id25824 . -1) (undo-tree-id25825 . -1) (undo-tree-id25826 . -1) (undo-tree-id25827 . -1) (undo-tree-id25828 . -1) (undo-tree-id25829 . -1) (undo-tree-id25830 . -1) (undo-tree-id25831 . -1) (undo-tree-id25832 . -1) (undo-tree-id25833 . -1) (undo-tree-id25834 . -1) (undo-tree-id25835 . -1) (undo-tree-id25836 . -1) (undo-tree-id25837 . -1) (undo-tree-id25838 . -1) (undo-tree-id25839 . -1) (undo-tree-id25840 . -1) (undo-tree-id25841 . -1) (undo-tree-id25842 . -1) (undo-tree-id25843 . -1) (undo-tree-id25844 . -1) (undo-tree-id25845 . -1) (undo-tree-id25846 . -1) (undo-tree-id25847 . -1) (undo-tree-id25848 . -1) (undo-tree-id25849 . -1) (undo-tree-id25850 . -1) (undo-tree-id25851 . -1) (undo-tree-id25852 . -1) (undo-tree-id25853 . -1) (undo-tree-id25854 . -1) (undo-tree-id25855 . -1) (undo-tree-id25856 . -1) (undo-tree-id25857 . -1) (undo-tree-id25858 . -1) (undo-tree-id25859 . -1) (undo-tree-id25860 . -1) (undo-tree-id25861 . -1) (undo-tree-id25862 . -1) (undo-tree-id25863 . -1) (undo-tree-id25864 . -1) (undo-tree-id25865 . -1) (undo-tree-id25866 . -1) (undo-tree-id25867 . -1) (undo-tree-id25868 . -1) (undo-tree-id25869 . -1) (undo-tree-id25870 . -1) (undo-tree-id25871 . -1) (undo-tree-id25872 . -1) (undo-tree-id25873 . -1) (undo-tree-id25874 . -1) (undo-tree-id25875 . -1) (undo-tree-id25876 . -1) (undo-tree-id25877 . -1) (undo-tree-id25878 . -1) (undo-tree-id25879 . -1) (undo-tree-id25880 . -1) (undo-tree-id25881 . -1) (undo-tree-id25882 . -1) (undo-tree-id25883 . -1) (undo-tree-id25884 . -1) (undo-tree-id25885 . -1) (undo-tree-id25886 . -1) (undo-tree-id25887 . -1) (undo-tree-id25888 . -1) (undo-tree-id25889 . -1) (undo-tree-id25890 . -1) (undo-tree-id25891 . -1) (undo-tree-id25892 . -1) (undo-tree-id25893 . -1) (undo-tree-id25894 . -1) (undo-tree-id25895 . -1) (undo-tree-id25896 . -1) (undo-tree-id25897 . -1) (undo-tree-id25898 . -1) (undo-tree-id25899 . -1) (undo-tree-id25900 . -1) (undo-tree-id25901 . -1) (undo-tree-id25902 . -1) (undo-tree-id25903 . -1) (undo-tree-id25904 . -1) (undo-tree-id25905 . -1) (undo-tree-id25906 . -1) (undo-tree-id25907 . -1) (#(" " 0 1 (fontified t)) . -3476) (undo-tree-id25908 . -1) (undo-tree-id25909 . -1) (undo-tree-id25910 . -1) (undo-tree-id25911 . -1) (undo-tree-id25912 . -1) (undo-tree-id25913 . -1) (undo-tree-id25914 . -1) (undo-tree-id25915 . -1) (undo-tree-id25916 . -1) (undo-tree-id25917 . -1) (undo-tree-id25918 . -1) (undo-tree-id25919 . -1) (undo-tree-id25920 . -1) (undo-tree-id25921 . -1) (undo-tree-id25922 . -1) (undo-tree-id25923 . -1) (undo-tree-id25924 . -1) (undo-tree-id25925 . -1) (undo-tree-id25926 . -1) (undo-tree-id25927 . -1) (undo-tree-id25928 . -1) (undo-tree-id25929 . -1) (undo-tree-id25930 . -1) (undo-tree-id25931 . -1) (undo-tree-id25932 . -1) (undo-tree-id25933 . -1) (undo-tree-id25934 . -1) (undo-tree-id25935 . -1) (undo-tree-id25936 . -1) (undo-tree-id25937 . -1) (undo-tree-id25938 . -1) (undo-tree-id25939 . -1) (undo-tree-id25940 . -1) (undo-tree-id25941 . -1) (undo-tree-id25942 . -1) (undo-tree-id25943 . -1) (undo-tree-id25944 . -1) (undo-tree-id25945 . -1) (undo-tree-id25946 . -1) (undo-tree-id25947 . -1) (undo-tree-id25948 . -1) (undo-tree-id25949 . -1) (undo-tree-id25950 . -1) (undo-tree-id25951 . -1) (undo-tree-id25952 . -1) (undo-tree-id25953 . -1) (undo-tree-id25954 . -1) (undo-tree-id25955 . -1) (undo-tree-id25956 . -1) (undo-tree-id25957 . -1) (undo-tree-id25958 . -1) (undo-tree-id25959 . -1) (undo-tree-id25960 . -1) (undo-tree-id25961 . -1) (undo-tree-id25962 . -1) (undo-tree-id25963 . -1) (undo-tree-id25964 . -1) (undo-tree-id25965 . -1) (undo-tree-id25966 . -1) (undo-tree-id25967 . -1) (undo-tree-id25968 . -1) (undo-tree-id25969 . -1) (undo-tree-id25970 . -1) (undo-tree-id25971 . -1) (undo-tree-id25972 . -1) (undo-tree-id25973 . -1) (undo-tree-id25974 . -1) (undo-tree-id25975 . -1) (undo-tree-id25976 . -1) (undo-tree-id25977 . -1) (undo-tree-id25978 . -1) (undo-tree-id25979 . -1) (undo-tree-id25980 . -1) (undo-tree-id25981 . -1) (undo-tree-id25982 . -1) (undo-tree-id25983 . -1) 3477) nil (25934 14206 688596 475000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3483) (3482 . 3483) (3481 . 3483) (#("[" 0 1 (fontified nil)) . -3481) (undo-tree-id25369 . -1) (undo-tree-id25370 . -1) (3473 . 3482)) nil (25934 14206 686702 661000) 0 nil])
([nil nil ((#("# torch.manual_seed(1)
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 23 (face font-lock-comment-face fontified t)) . 331) (undo-tree-id0 . -23) (t 25934 14206 791507 938000)) nil (25934 14370 972128 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3273) (#(" " 0 1 (fontified t)) . 3273) (t 25934 14371 58598 647000)) nil (25934 14438 256578 15000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3273)) nil (25934 14438 256577 18000) 0 nil])
([nil nil ((#("     
" 0 6 (fontified t)) . 3273) (undo-tree-id8 . -5)) nil (25934 14438 256575 848000) 0 nil])
([nil nil ((#("        torch.normal(mean=0.0, std=self.VAR_FF[i_pop], size=(self.Na[i_pop],), dtype=self.FLOAT, device=self.device)
 " 0 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 25 (fontified t) 25 26 (face font-lock-operator-face fontified t) 26 34 (fontified t) 34 35 (face font-lock-operator-face fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-2-face) fontified t) 53 59 (fontified t) 59 60 (face font-lock-operator-face fontified t) 60 61 (face (rainbow-delimiters-depth-2-face) fontified t) 61 65 (face font-lock-keyword-face fontified t) 65 68 (fontified t) 68 69 (face (rainbow-delimiters-depth-3-face) fontified t) 69 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-3-face) fontified t) 75 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 84 (fontified t) 84 85 (face font-lock-operator-face fontified t) 85 89 (face font-lock-keyword-face fontified t) 89 103 (fontified t) 103 104 (face font-lock-operator-face fontified t) 104 108 (face font-lock-keyword-face fontified t) 108 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-1-face) fontified t) 116 118 (fontified t)) . 3537) (undo-tree-id7 . -118)) nil (25934 14438 256574 274000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3536) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 3537) nil (25934 14438 256572 691000) 0 nil])
([nil nil ((3395 . 3396)) nil (25934 14438 256570 168000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3395) (undo-tree-id4 . -1) 3396) nil (25934 14438 256569 341000) 0 nil])
([nil nil ((3368 . 3369)) nil (25934 14438 256567 454000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -3368) (undo-tree-id3 . -1) 3369) nil (25934 14438 256566 491000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 3368)) nil (25934 14438 256564 465000) 0 nil])
([nil nil ((3368 . 3369)) nil (25934 14438 256563 870000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3368) (undo-tree-id2 . -1) 3369) nil (25934 14438 256563 94000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3368) (#("=" 0 1 (face font-lock-operator-face fontified t)) . 3368) (#(" " 0 1 (fontified t)) . 3368)) nil (25934 14438 256560 934000) 0 nil])
([nil nil ((#("        ff_normal.sample((Na,))
        a = ff_normal.sample((Nb,))
" 0 8 (fontified t) 8 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 26 (face (rainbow-delimiters-depth-2-face) fontified t) 26 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t) 32 40 (fontified t) 40 41 (face font-lock-variable-name-face fontified t) 41 42 (fontified t) 42 43 (face font-lock-operator-face fontified t) 43 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-2-face) fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 68 (fontified t)) . -3360) (undo-tree-id1 . -68) 3428) nil (25934 14438 256559 763000) 0 nil])
([nil nil ((3360 . 3368)) nil (25934 14438 256552 91000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 3462) (3461 . 3462) (3460 . 3462) (#("[" 0 1 (fontified nil)) . -3460) (3460 . 3461)) nil (25934 14438 256550 543000) 0 nil])
([nil nil ((3461 . 3462)) nil (25934 14438 256549 50000) 0 nil])
([nil nil ((3462 . 3466)) nil (25934 14438 256544 14000) 0 nil])
([nil nil ((3440 . 3446) (t 25934 14438 300907 682000)) nil (25934 14446 23218 628000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3445) (undo-tree-id11 . -1) 3446) nil (25934 14446 23216 497000) 0 nil])
([nil nil ((3452 . 3454) (#("(" 0 1 (fontified nil)) . -3452) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (3445 . 3453)) nil (25934 14446 23210 231000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3453)) nil (25934 14446 23195 618000) 0 nil])
([nil nil ((3483 . 3484)) nil (25934 14446 23188 768000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -3497) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) 3500 (t 25934 14446 65893 131000)) nil (25934 14448 61422 285000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3493) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) 3497) nil (25934 14448 61330 32000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3533) (undo-tree-id148 . -1) 3534 (t 25934 14448 109121 998000)) nil (25934 14465 233697 40000) 0 nil])
([nil nil ((apply -14 3494 4134 undo--wrap-and-run-primitive-undo 3494 4134 ((4025 . 4027) (3919 . 3921) (3807 . 3809) (3695 . 3697) (3597 . 3599) (3556 . 3558) (3502 . 3504) 4111))) nil (25934 14465 233679 211000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3535) (undo-tree-id152 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3536) (undo-tree-id153 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3537) (undo-tree-id154 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3538) (undo-tree-id155 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3539) (undo-tree-id156 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3540) (undo-tree-id157 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3541) (undo-tree-id158 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3542) (undo-tree-id159 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3543) (undo-tree-id160 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3544) (undo-tree-id161 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3545) (undo-tree-id162 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3546) (undo-tree-id163 . -1) 3547 (t 25934 14465 290845 828000)) nil (25934 14500 38990 568000) 0 nil])
([nil nil ((3486 . 3498) (#("        " 0 8 (fontified nil)) . 3485) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (3493 . 3494)) nil (25934 14500 38971 335000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3494) (undo-tree-id149 . -4) 3498) nil (25934 14500 38958 27000) 0 nil])
([nil nil ((3494 . 3511)) nil (25934 14500 38934 848000) 0 nil])
([nil nil ((3506 . 3512) (t 25934 14500 94562 571000)) nil (25934 14602 753389 83000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3511) (undo-tree-id165 . -1) 3512) nil (25934 14602 753387 292000) 0 nil])
([nil nil ((3511 . 3515)) nil (25934 14602 753383 661000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3514) (undo-tree-id164 . -1) 3515) nil (25934 14602 753381 461000) 0 nil])
([nil nil ((3518 . 3520) (#("(" 0 1 (fontified nil)) . -3518) (3514 . 3519)) nil (25934 14602 753367 385000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3519)) nil (25934 14602 753364 744000) 0 nil])
([nil nil ((3524 . 3525)) nil (25934 14602 753355 863000) 0 nil])
([nil nil ((3485 . 3497) (t 25934 14602 818930 179000)) nil (25934 14604 918708 46000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3493) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) 3497) nil (25934 14604 918703 176000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3484) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 3485 (t 25934 14604 965506 404000)) nil (25934 14659 838875 815000) 0 nil])
([nil nil ((192 . 198) (t 25934 14659 898353 442000)) nil (25934 14667 704306 112000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -197) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 198) nil (25934 14667 704303 918000) 0 nil])
([nil nil ((197 . 200)) nil (25934 14667 704277 241000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -3492) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -3493) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -3494) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t)) . -3495) (undo-tree-id280 . -1) (#(" " 0 1 (fontified t)) . -3496) (undo-tree-id281 . -1) (#(" " 0 1 (fontified t)) . -3497) (undo-tree-id282 . -1) (#(" " 0 1 (fontified t)) . -3498) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -3499) (undo-tree-id284 . -1) 3500 (t 25934 14667 756371 112000)) nil (25934 14679 826113 323000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14743) 14735 (t 25934 14679 874942 314000)) nil (25934 14707 270079 957000) 0 nil])
([nil nil ((14736 . 14744) (#("        " 0 8 (fontified nil)) . 14735) (undo-tree-id287 . -8) (14743 . 14744)) nil (25934 14707 270076 700000) 0 nil])
([nil nil ((14744 . 14761)) nil (25934 14707 270071 14000) 0 nil])
([nil nil ((14761 . 14769) (#(" " 0 1 (fontified nil)) . 14760) (undo-tree-id286 . -1) (14761 . 14762)) nil (25934 14707 270068 335000) 0 nil])
([nil nil ((14767 . 14769) (#("(" 0 1 (fontified nil)) . -14767) (14760 . 14768)) nil (25934 14707 270063 449000) 0 nil])
([nil nil ((14768 . 14770)) nil (25934 14707 270062 88000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14769) (undo-tree-id285 . -1) 14770) nil (25934 14707 270060 892000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 14781) (14780 . 14781) (14779 . 14781) (#("[" 0 1 (fontified nil)) . -14779) (14769 . 14780)) nil (25934 14707 270046 798000) 0 nil])
([nil nil ((14780 . 14781)) nil (25934 14707 270038 963000) 0 nil])
([nil nil ((14735 . 14743) (t 25934 14707 315258 351000)) nil (25934 14711 437883 613000) 0 nil])
([nil nil ((apply -10 14383 14754 undo--wrap-and-run-primitive-undo 14383 14754 ((14684 . 14686) (14614 . 14616) (14572 . 14574) (14479 . 14481) (14391 . 14393) 14383))) nil (25934 14711 437881 931000) 0 nil])
([nil nil ((14391 . 14395) 14383) nil (25934 14711 437875 268000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14391) (undo-tree-id288 . -4) 14395 (t 25934 14711 495801 368000)) nil (25934 14712 603273 531000) 0 nil])
([nil nil ((14786 . 14793) (t 25934 14712 651947 873000)) nil (25934 14794 735179 805000) 0 nil])
([nil nil ((14786 . 14791)) nil (25934 14794 735178 881000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -14790) (undo-tree-id306 . -1) 14791) nil (25934 14794 735177 860000) 0 nil])
([nil nil ((14790 . 14791)) nil (25934 14794 735176 51000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14841 . 14842) (nil fontified nil 14841 . 14842) (nil fontified nil 14840 . 14841) (nil fontified nil 14833 . 14840) (nil fontified nil 14829 . 14833) (nil fontified nil 14828 . 14829) (nil fontified nil 14814 . 14828) (nil fontified nil 14810 . 14814) (nil fontified nil 14809 . 14810) (nil fontified nil 14796 . 14809) (nil fontified nil 14792 . 14796) (nil fontified nil 14791 . 14792) (nil fontified nil 14778 . 14791) (nil fontified nil 14777 . 14778) (nil fontified nil 14776 . 14777) (nil fontified nil 14769 . 14776) (nil fontified nil 14768 . 14769) (nil fontified nil 14764 . 14768) (nil fontified nil 14762 . 14764) (nil fontified nil 14754 . 14762) (14754 . 14842)) nil (25934 14794 735174 557000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -14874) (undo-tree-id291 . -1) (#("o" 0 1 (fontified t)) . -14875) (undo-tree-id292 . -1) (#("r" 0 1 (fontified t)) . -14876) (undo-tree-id293 . -1) (#("c" 0 1 (fontified t)) . -14877) (undo-tree-id294 . -1) (#("h" 0 1 (fontified t)) . -14878) (undo-tree-id295 . -1) (#("t" 0 1 (fontified t)) . -14879) (undo-tree-id296 . -1) (#("e" 0 1 (fontified t)) . -14880) (undo-tree-id297 . -1) (#("n" 0 1 (fontified nil)) . -14881) (undo-tree-id298 . -1) (#("s" 0 1 (fontified nil)) . -14882) (undo-tree-id299 . -1) (#("o" 0 1 (fontified nil)) . -14883) (undo-tree-id300 . -1) (#("r" 0 1 (fontified t)) . -14884) (undo-tree-id301 . -1) (#("." 0 1 (fontified t)) . -14885) (undo-tree-id302 . -1) (#("0" 0 1 (fontified t)) . -14886) (undo-tree-id303 . -1) (#("." 0 1 (fontified t)) . -14887) (undo-tree-id304 . -1) (#("0" 0 1 (fontified t)) . -14888) (undo-tree-id305 . -1) 14889) nil (25934 14794 735168 882000) 0 nil])
([nil nil ((apply 2 14754 14840 undo--wrap-and-run-primitive-undo 14754 14840 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14762) 14754))) nil (25934 14794 735153 883000) 0 nil])
([nil nil ((14872 . 14874)) nil (25934 14794 735152 918000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -14872) (undo-tree-id289 . -1) (#("m" 0 1 (fontified t)) . -14873) (undo-tree-id290 . -1) 14874) nil (25934 14794 735151 360000) 0 nil])
([nil nil ((14872 . 14876)) nil (25934 14794 735139 950000) 0 nil])
([nil nil ((14872 . 14875)) nil (25934 14794 735134 538000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -14790) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("e" 0 1 (fontified t)) . -14791) (undo-tree-id325 . -1) (#("l" 0 1 (fontified t)) . -14792) (undo-tree-id326 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14793) (undo-tree-id327 . -1) (#("." 0 1 (fontified t)) . -14794) (undo-tree-id328 . -1) (#("N" 0 1 (fontified t)) . -14795) (undo-tree-id329 . -1) (#("_" 0 1 (fontified t)) . -14796) (undo-tree-id330 . -1) (#("P" 0 1 (fontified t)) . -14797) (undo-tree-id331 . -1) (#("O" 0 1 (fontified t)) . -14798) (undo-tree-id332 . -1) (#("P" 0 1 (fontified t)) . -14799) (undo-tree-id333 . -1) 14800 (t 25934 14794 772440 551000)) nil (25934 14802 713828 332000) 0 nil])
([nil nil ((14790 . 14793)) nil (25934 14802 713789 15000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 14762) (#("f" 0 1 (fontified t)) . 14762) (#("l" 0 1 (fontified t)) . 14762) (#("e" 0 1 (fontified t)) . 14762) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 14762) (t 25934 14802 757184 962000)) nil (25934 14812 56802 150000) 0 nil])
([nil nil ((14888 . 14892) (t 25934 14812 102051 56000)) nil (25934 14859 738736 191000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -14888) (undo-tree-id334 . -1) (#("e" 0 1 (fontified t)) . -14889) (undo-tree-id335 . -1) (#("l" 0 1 (fontified t)) . -14890) (undo-tree-id336 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14891) (undo-tree-id337 . -1) 14892) nil (25934 14859 738732 147000) 0 nil])
([nil nil ((14869 . 14873)) nil (25934 14859 738707 924000) 0 nil])
([nil nil ((14873 . 14874)) nil (25934 14859 738697 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14348 . 14349) (nil fontified nil 14348 . 14349) (nil fontified nil 14347 . 14348) (nil fontified nil 14340 . 14347) (nil fontified nil 14336 . 14340) (nil fontified nil 14335 . 14336) (nil fontified nil 14321 . 14335) (nil fontified nil 14317 . 14321) (nil fontified nil 14316 . 14317) (nil fontified nil 14305 . 14316) (nil fontified nil 14301 . 14305) (nil fontified nil 14300 . 14301) (nil fontified nil 14287 . 14300) (nil fontified nil 14286 . 14287) (nil fontified nil 14285 . 14286) (nil fontified nil 14282 . 14285) (nil fontified nil 14281 . 14282) (nil fontified nil 14277 . 14281) (nil fontified nil 14269 . 14277) (14269 . 14349) (t 25934 14859 810426 459000)) nil (25934 14908 363004 550000) 0 nil])
([nil nil ((14348 . 14357)) nil (25934 14908 363001 568000) 0 nil])
([nil nil ((#("Ja0" 0 3 (fontified nil)) . -14309) (14312 . 14318) (nil fontified t 14285 . 14288) (nil face font-lock-variable-name-face 14285 . 14288) (#("Ja0" 0 3 (face font-lock-variable-name-face fontified t)) . -14282) (14285 . 14291)) nil (25934 14908 363000 514000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -14437) (undo-tree-id568 . -1) (#("p" 0 1 (fontified t)) . -14438) (undo-tree-id569 . -1) 14439) nil (25934 14908 362998 753000) 0 nil])
([nil nil ((14437 . 14442)) nil (25934 14908 362996 382000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -14441) (undo-tree-id567 . -1) 14442) nil (25934 14908 362995 633000) 0 nil])
([nil nil ((14441 . 14442)) nil (25934 14908 362993 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14301 . 14302) (nil fontified nil 14301 . 14302) (nil fontified nil 14291 . 14301) (14291 . 14302)) nil (25934 14908 362992 677000) 0 nil])
([nil nil ((14365 . 14366)) nil (25934 14908 362991 352000) 0 nil])
([nil nil ((#("        for i_pop in range(self.N_POP):
            self.VAR_FF[i_pop] = torch.sqrt(self.VAR_FF[i_pop])
" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 18 (fontified t) 18 20 (face font-lock-keyword-face fontified t) 20 21 (fontified t) 21 26 (face font-lock-builtin-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 31 (face font-lock-keyword-face fontified t) 31 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 40 (fontified t) 40 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 63 (face font-lock-variable-name-face fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 71 (fontified t) 71 72 (face font-lock-operator-face fontified t) 72 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 95 (fontified t) 95 96 (face (rainbow-delimiters-depth-2-face) fontified t) 96 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-2-face) fontified t) 102 103 (face (rainbow-delimiters-depth-1-face) fontified t) 103 104 (fontified t)) . -14376) (undo-tree-id492 . -73) (undo-tree-id493 . -39) (undo-tree-id494 . -39) (undo-tree-id495 . -39) (undo-tree-id496 . -39) (undo-tree-id497 . -39) (undo-tree-id498 . -39) (undo-tree-id499 . -39) (undo-tree-id500 . -39) (undo-tree-id501 . -39) (undo-tree-id502 . -39) (undo-tree-id503 . -39) (undo-tree-id504 . -39) (undo-tree-id505 . -39) (undo-tree-id506 . -39) (undo-tree-id507 . -39) (undo-tree-id508 . -39) (undo-tree-id509 . -39) (undo-tree-id510 . -40) (undo-tree-id511 . -40) (undo-tree-id512 . -40) (undo-tree-id513 . -40) (undo-tree-id514 . -40) (undo-tree-id515 . -40) (undo-tree-id516 . -40) (undo-tree-id517 . -40) (undo-tree-id518 . -40) (undo-tree-id519 . -40) (undo-tree-id520 . -40) (undo-tree-id521 . -40) (undo-tree-id522 . -40) (undo-tree-id523 . -40) (undo-tree-id524 . -40) (undo-tree-id525 . -40) (undo-tree-id526 . -40) (undo-tree-id527 . -40) (undo-tree-id528 . -40) (undo-tree-id529 . -40) (undo-tree-id530 . -40) (undo-tree-id531 . -40) (undo-tree-id532 . -40) (undo-tree-id533 . -40) (undo-tree-id534 . -104) (undo-tree-id535 . -104) (undo-tree-id536 . -40) (undo-tree-id537 . -104) (undo-tree-id538 . -104) (undo-tree-id539 . -104) (undo-tree-id540 . -104) (undo-tree-id541 . -104) (undo-tree-id542 . -104) (undo-tree-id543 . -104) (undo-tree-id544 . -104) (undo-tree-id545 . -104) (undo-tree-id546 . -104) (undo-tree-id547 . -104) (undo-tree-id548 . -104) (undo-tree-id549 . -104) (undo-tree-id550 . -104) (undo-tree-id551 . -104) (undo-tree-id552 . -104) (undo-tree-id553 . -104) (undo-tree-id554 . -104) (undo-tree-id555 . -104) (undo-tree-id556 . -104) (undo-tree-id557 . -104) (undo-tree-id558 . -104) (undo-tree-id559 . -104) (undo-tree-id560 . -104) (undo-tree-id561 . -104) (undo-tree-id562 . -104) (undo-tree-id563 . -104) (undo-tree-id564 . -104) (undo-tree-id565 . -104) (undo-tree-id566 . -104) 14480) nil (25934 14908 362988 397000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -14375) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 14376) nil (25934 14908 362915 429000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -14375) (undo-tree-id338 . -12)) nil (25934 14908 362590 832000) 0 nil])
([nil nil ((#("        # self.ff_mean = torch.tensor(self.N_POP, dtype=self.FLOAT, device=self.device)
        # self.ff_cov = torch.eye(self.N_POP, dtype=self.FLOAT, device=self.device)
        
        # for i_pop in range(self.N_POP):
        #     self.ff_cov[i_pop][i_pop] = self.VAR_FF[i_pop]
        
        # self.ff_multi_normal = MultivariateNormal(ff_mean, ff_cov)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t) 15 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 42 (face font-lock-comment-face fontified t) 42 55 (face font-lock-comment-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 60 (face font-lock-comment-face fontified t) 60 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t) 75 79 (face font-lock-comment-face fontified t) 79 86 (face font-lock-comment-face fontified t) 86 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 96 (fontified t) 96 98 (face font-lock-comment-delimiter-face fontified t) 98 102 (face font-lock-comment-face fontified t) 102 103 (face font-lock-comment-face fontified t) 103 109 (face font-lock-comment-face fontified t) 109 110 (face font-lock-comment-face fontified t) 110 111 (face font-lock-comment-face fontified t) 111 121 (face font-lock-comment-face fontified t) 121 122 (face font-lock-comment-face fontified t) 122 126 (face font-lock-comment-face fontified t) 126 139 (face font-lock-comment-face fontified t) 139 140 (face font-lock-comment-face fontified t) 140 144 (face font-lock-comment-face fontified t) 144 158 (face font-lock-comment-face fontified t) 158 159 (face font-lock-comment-face fontified t) 159 163 (face font-lock-comment-face fontified t) 163 170 (face font-lock-comment-face fontified t) 170 171 (face font-lock-comment-face fontified t) 171 172 (face font-lock-comment-face fontified t) 172 189 (fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 194 (face font-lock-comment-face fontified t) 194 201 (face font-lock-comment-face fontified t) 201 203 (face font-lock-comment-face fontified t) 203 204 (face font-lock-comment-face fontified t) 204 209 (face font-lock-comment-face fontified t) 209 210 (face font-lock-comment-face fontified t) 210 214 (face font-lock-comment-face fontified t) 214 220 (face font-lock-comment-face fontified t) 220 221 (face font-lock-comment-face fontified t) 221 223 (face font-lock-comment-face fontified t) 223 231 (fontified t) 231 233 (face font-lock-comment-delimiter-face fontified t) 233 237 (face font-lock-comment-delimiter-face fontified t) 237 241 (face font-lock-comment-face fontified t) 241 248 (face font-lock-comment-face fontified t) 248 249 (face font-lock-comment-face fontified t) 249 254 (face font-lock-comment-face fontified t) 254 255 (face font-lock-comment-face fontified t) 255 256 (face font-lock-comment-face fontified t) 256 261 (face font-lock-comment-face fontified t) 261 262 (face font-lock-comment-face fontified t) 262 263 (face font-lock-comment-face fontified t) 263 264 (face font-lock-comment-face fontified t) 264 265 (face font-lock-comment-face fontified t) 265 269 (face font-lock-comment-face fontified t) 269 276 (face font-lock-comment-face fontified t) 276 277 (face font-lock-comment-face fontified t) 277 282 (face font-lock-comment-face fontified t) 282 283 (face font-lock-comment-face fontified t) 283 284 (face font-lock-comment-face fontified t) 284 301 (fontified t) 301 303 (face font-lock-comment-delimiter-face fontified t) 303 307 (face font-lock-comment-face fontified t) 307 308 (face font-lock-comment-face fontified t) 308 323 (face font-lock-comment-face fontified t) 323 324 (face font-lock-comment-face fontified t) 324 325 (face font-lock-comment-face fontified t) 325 344 (face font-lock-comment-face fontified t) 344 345 (face font-lock-comment-face fontified t) 345 360 (face font-lock-comment-face fontified t) 360 361 (face font-lock-comment-face fontified t) 361 362 (face font-lock-comment-face fontified t)) . -14376) (undo-tree-id574 . -362) (undo-tree-id575 . -88) (undo-tree-id576 . -362) 14738 (t 25934 14908 398853 334000)) nil (25934 14916 136008 914000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14375) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 14376) nil (25934 14916 136002 305000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -14375) (undo-tree-id807 . -8) (undo-tree-id808 . -8) (undo-tree-id809 . -8) (undo-tree-id810 . -8) (undo-tree-id811 . -8) (undo-tree-id812 . -8) (undo-tree-id813 . -8) (undo-tree-id814 . -8) (undo-tree-id815 . -8) (undo-tree-id816 . -8) (undo-tree-id817 . -8) (undo-tree-id818 . -8) (undo-tree-id819 . -8) (undo-tree-id820 . -8) (undo-tree-id821 . -8) (undo-tree-id822 . -8) (undo-tree-id823 . -8) (undo-tree-id824 . -8) (undo-tree-id825 . -8) (undo-tree-id826 . -8) (undo-tree-id827 . -8) (undo-tree-id828 . -8) (undo-tree-id829 . -8) (undo-tree-id830 . -8) (undo-tree-id831 . -8) (undo-tree-id832 . -8) (undo-tree-id833 . -8) (undo-tree-id834 . -8) (undo-tree-id835 . -8) (undo-tree-id836 . -8) (undo-tree-id837 . -8) (undo-tree-id838 . -8) (undo-tree-id839 . -8) (undo-tree-id840 . -8) (undo-tree-id841 . -8) (undo-tree-id842 . -8) (undo-tree-id843 . -8) (undo-tree-id844 . -8) (undo-tree-id845 . -8) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -8) (undo-tree-id850 . -8) (undo-tree-id851 . -8) (undo-tree-id852 . -8) (undo-tree-id853 . -8) (undo-tree-id854 . -8) (undo-tree-id855 . -8) (undo-tree-id856 . -8) (undo-tree-id857 . -8) 14367 (t 25934 14916 179561 414000)) nil (25934 14918 241791 471000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14371) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) 14375) nil (25934 14918 241686 944000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14367) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) 14371) nil (25934 14918 241495 251000) 0 nil])
([nil nil ((14367 . 14375)) nil (25934 14918 241378 435000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14366) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) 14367 (t 25934 14918 283752 885000)) nil (25934 14923 712696 997000) 0 nil])
([nil nil ((3492 . 3505) (t 25934 14923 756250 825000)) nil (25934 14962 565559 462000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3501) (undo-tree-id892 . -4) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -4) (undo-tree-id903 . -4) (undo-tree-id904 . -4) (undo-tree-id905 . -4) (undo-tree-id906 . -4) (undo-tree-id907 . -4) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) (undo-tree-id918 . -4) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -4) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -4) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) 3505) nil (25934 14962 565551 422000) 0 nil])
([nil nil ((3461 . 3464) (t 25934 14962 620571 446000)) nil (25934 15009 89568 23000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3462) (undo-tree-id990 . -1) (#("e" 0 1 (fontified t)) . -3463) (undo-tree-id991 . -1) 3464) nil (25934 15009 89565 667000) 0 nil])
([nil nil ((3462 . 3466)) nil (25934 15009 89552 356000) 0 nil])
([nil nil ((3484 . 3489) (t 25934 15009 135967 757000)) nil (25934 15114 744581 502000) 0 nil])
([nil nil ((3551 . 3560) (t 25934 15120 235227 130000)) nil (25934 15132 595572 892000) 0 nil] [nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3499) (t 25934 15018 206721 862000)) ((3499 . 3500)) (25934 15114 12771 589000) 0 nil])
([nil nil ((3565 . 3567) (#("(" 0 1 (fontified nil)) . -3565) (3560 . 3566)) nil (25934 15132 595571 877000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3498) (undo-tree-id1040 . -1) 3499) ((3498 . 3499)) (25934 15113 829561 292000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3563) (undo-tree-id1041 . -1) (#("n" 0 1 (fontified t)) . -3564) (undo-tree-id1042 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3565) (undo-tree-id1043 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3566)) nil (25934 15132 595570 21000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3483) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1023 . -1) (undo-tree-id1025 . -1) (undo-tree-id1027 . -1) (undo-tree-id1029 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) 3484) ((3483 . 3484) (t 25934 15108 51637 101000)) (25934 15107 982715 992000) 0 nil])
([nil nil ((3566 . 3581) (3565 . 3567) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3565) (3563 . 3566)) nil (25934 15184 231315 942000) 0 nil])
nil
([nil nil ((3582 . 3591)) nil (25934 15195 259278 804000) 0 nil] [nil nil ((3582 . 3591) (t 25934 15132 638908 336000)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 3582) (undo-tree-id1066 . -1)) (25934 15183 651251 376000) 0 nil])
([nil nil ((3559 . 3561) (#("(" 0 1 (fontified nil)) . -3559) (3551 . 3560)) nil (25934 15195 259276 264000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3498) (undo-tree-id1065 . -1) 3499) ((3498 . 3499)) (25934 15183 246332 947000) 0 nil] [nil nil ((#("        print(net_input.shape)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . 3552) (undo-tree-id1045 . -31) (undo-tree-id1046 . -29) (undo-tree-id1047 . -29) (undo-tree-id1048 . -29) (undo-tree-id1049 . -29) (undo-tree-id1050 . -29) (undo-tree-id1051 . -29) (undo-tree-id1052 . -29)) ((3552 . 3583)) (25934 15152 820791 521000) 0 nil])
([nil nil ((3560 . 3561)) nil (25934 15195 259265 953000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3498)) ((3498 . 3499)) (25934 15183 72879 849000) 0 nil])
([nil nil ((3551 . 3553) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3551) (3551 . 3552)) ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3551) (3551 . 3552) (#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3551) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1)) (25934 15152 803465 240000) 0 nil])
([nil nil ((#("        print(net_input.shape)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . -3563) (undo-tree-id1067 . -30) (undo-tree-id1068 . -29) (undo-tree-id1069 . -29) (undo-tree-id1070 . -29) (undo-tree-id1071 . -29) (undo-tree-id1072 . -29) (undo-tree-id1073 . -30) (undo-tree-id1074 . -30) (undo-tree-id1075 . -30) (undo-tree-id1076 . -30) (undo-tree-id1077 . -30) (undo-tree-id1078 . -30) (undo-tree-id1079 . -30) (undo-tree-id1080 . -30) (undo-tree-id1081 . -30) (undo-tree-id1082 . -30) (undo-tree-id1083 . -30) (undo-tree-id1084 . -30) (undo-tree-id1085 . -30) (undo-tree-id1086 . -30) (undo-tree-id1087 . -30) (undo-tree-id1088 . -30) (undo-tree-id1089 . -30) (undo-tree-id1090 . -30) (undo-tree-id1091 . -30) (undo-tree-id1092 . -30) (undo-tree-id1093 . -30) (undo-tree-id1094 . -30) (undo-tree-id1095 . -30) (undo-tree-id1096 . -30) (undo-tree-id1097 . -30) (undo-tree-id1098 . -30) (undo-tree-id1099 . -30) (undo-tree-id1100 . -30) (undo-tree-id1101 . -30) (undo-tree-id1102 . -30) (undo-tree-id1103 . -30) (undo-tree-id1104 . -30) (undo-tree-id1105 . -30) (undo-tree-id1106 . -30) (undo-tree-id1107 . -30) (undo-tree-id1108 . -30) (undo-tree-id1109 . -30) (undo-tree-id1110 . -30) (undo-tree-id1111 . -30) (undo-tree-id1112 . -30) (undo-tree-id1113 . -30) (undo-tree-id1114 . -30) (undo-tree-id1115 . -30) (undo-tree-id1116 . -30) (undo-tree-id1117 . -30) (undo-tree-id1118 . -30) (undo-tree-id1119 . -30) (undo-tree-id1120 . -30) (undo-tree-id1121 . -30) (undo-tree-id1122 . -30) (undo-tree-id1123 . -30) (undo-tree-id1124 . -30) (undo-tree-id1125 . -30) (undo-tree-id1126 . -30) (undo-tree-id1127 . -30) (undo-tree-id1128 . -30) (undo-tree-id1129 . -30) (undo-tree-id1130 . -31) (undo-tree-id1131 . -31) (undo-tree-id1132 . -31) (undo-tree-id1133 . -31) (undo-tree-id1134 . -31) (undo-tree-id1135 . -31) (undo-tree-id1136 . -31) (undo-tree-id1137 . -31) (undo-tree-id1138 . -31) (undo-tree-id1139 . -31) (undo-tree-id1140 . -31) (undo-tree-id1141 . -31) (undo-tree-id1142 . -31) (undo-tree-id1143 . -31) (undo-tree-id1144 . -31) (undo-tree-id1145 . -31) (undo-tree-id1146 . -31) (undo-tree-id1147 . -31) (undo-tree-id1148 . -31) (undo-tree-id1149 . -31) (undo-tree-id1150 . -31) (undo-tree-id1151 . -31) (undo-tree-id1152 . -31) (undo-tree-id1153 . -31) (undo-tree-id1154 . -31) (undo-tree-id1155 . -31) (undo-tree-id1156 . -31) (undo-tree-id1157 . -31) (undo-tree-id1158 . -31) (undo-tree-id1159 . -31) (undo-tree-id1160 . -31) (undo-tree-id1161 . -31) (undo-tree-id1162 . -31) (undo-tree-id1163 . -31) (undo-tree-id1164 . -31) (undo-tree-id1165 . -31) (undo-tree-id1166 . -31) (undo-tree-id1167 . -31) (undo-tree-id1168 . -31) (undo-tree-id1169 . -31) (undo-tree-id1170 . -31) (undo-tree-id1171 . -31) (undo-tree-id1172 . -30) (undo-tree-id1173 . -31) (undo-tree-id1174 . -31) (undo-tree-id1175 . -31) (undo-tree-id1176 . -31) (undo-tree-id1177 . -31) (undo-tree-id1178 . -31) 3594 (t 25934 15195 342517 669000)) nil (25934 15204 944356 12000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3483)) ((3483 . 3484) (t 25934 15159 982512 692000)) (25934 15159 936526 756000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3551) (undo-tree-id1044 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3552)) ((3551 . 3553)) (25934 15152 802422 80000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3372) (undo-tree-id1215 . -4) 3376 (t 25934 15204 990602 529000)) nil (25934 15292 907884 812000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . -3367) (undo-tree-id1214 . -1) 3368) nil (25934 15292 907878 676000) 0 nil])
([nil nil ((3367 . 3375) (#("    " 0 4 (fontified t)) . 3367) (undo-tree-id1213 . -4) 3371) nil (25934 15292 907872 721000) 0 nil])
([nil nil ((#("        # for i_pop in range(self.N_POP):
        #     if self.VAR_FF[i_pop] > 0:
        #         net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.normal(mean=0.0,
        #                                                                               std=self.VAR_FF[i_pop],
        #                                                                               size=(self.Na[i_pop],),
        #                                                                               dtype=self.FLOAT,
        #                                                                               device=self.device)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 13 (face font-lock-comment-face fontified t) 13 20 (face font-lock-comment-face fontified t) 20 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t) 29 33 (face font-lock-comment-face fontified t) 33 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 42 (face font-lock-comment-face fontified t) 42 50 (fontified t) 50 52 (face font-lock-comment-delimiter-face fontified t) 52 56 (face font-lock-comment-delimiter-face fontified t) 56 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 63 (face font-lock-comment-face fontified t) 63 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 83 (face font-lock-comment-face fontified t) 83 91 (fontified t) 91 93 (face font-lock-comment-delimiter-face fontified t) 93 101 (face font-lock-comment-delimiter-face fontified t) 101 110 (face font-lock-comment-face fontified t) 110 111 (face font-lock-comment-face fontified t) 111 115 (face font-lock-comment-face fontified t) 115 122 (face font-lock-comment-face fontified t) 122 123 (face font-lock-comment-face fontified t) 123 128 (face font-lock-comment-face fontified t) 128 129 (face font-lock-comment-face fontified t) 129 132 (face font-lock-comment-face fontified t) 132 136 (face font-lock-comment-face fontified t) 136 143 (face font-lock-comment-face fontified t) 143 144 (face font-lock-comment-face fontified t) 144 150 (face font-lock-comment-face fontified t) 150 151 (face font-lock-comment-face fontified t) 151 153 (face font-lock-comment-face fontified t) 153 154 (face font-lock-comment-face fontified t) 154 155 (face font-lock-comment-face fontified t) 155 156 (face font-lock-comment-face fontified t) 156 157 (face font-lock-comment-face fontified t) 157 170 (face font-lock-comment-face fontified t) 170 171 (face font-lock-comment-face fontified t) 171 175 (face font-lock-comment-face fontified t) 175 176 (face font-lock-comment-face fontified t) 176 181 (face font-lock-comment-face fontified t) 181 189 (fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 269 (face font-lock-comment-delimiter-face fontified t) 269 272 (face font-lock-comment-face fontified t) 272 273 (face font-lock-comment-face fontified t) 273 277 (face font-lock-comment-face fontified t) 277 284 (face font-lock-comment-face fontified t) 284 285 (face font-lock-comment-face fontified t) 285 290 (face font-lock-comment-face fontified t) 290 291 (face font-lock-comment-face fontified t) 291 293 (face font-lock-comment-face fontified t) 293 301 (fontified t) 301 303 (face font-lock-comment-delimiter-face fontified t) 303 381 (face font-lock-comment-delimiter-face fontified t) 381 385 (face font-lock-comment-face fontified t) 385 386 (face font-lock-comment-face fontified t) 386 387 (face font-lock-comment-face fontified t) 387 391 (face font-lock-comment-face fontified t) 391 394 (face font-lock-comment-face fontified t) 394 395 (face font-lock-comment-face fontified t) 395 400 (face font-lock-comment-face fontified t) 400 401 (face font-lock-comment-face fontified t) 401 402 (face font-lock-comment-face fontified t) 402 403 (face font-lock-comment-face fontified t) 403 405 (face font-lock-comment-face fontified t) 405 413 (fontified t) 413 415 (face font-lock-comment-delimiter-face fontified t) 415 493 (face font-lock-comment-delimiter-face fontified t) 493 498 (face font-lock-comment-face fontified t) 498 499 (face font-lock-comment-face fontified t) 499 503 (face font-lock-comment-face fontified t) 503 511 (face font-lock-comment-face fontified t) 511 519 (fontified t) 519 521 (face font-lock-comment-delimiter-face fontified t) 521 599 (face font-lock-comment-delimiter-face fontified t) 599 605 (face font-lock-comment-face fontified t) 605 606 (face font-lock-comment-face fontified t) 606 610 (face font-lock-comment-face fontified t) 610 617 (face font-lock-comment-face fontified t) 617 618 (face font-lock-comment-face fontified t) 618 619 (face font-lock-comment-face fontified t)) . -3571) (undo-tree-id1212 . -619) 4190) nil (25934 15292 907869 25000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3570) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) 3571) nil (25934 15292 907858 291000) 0 nil])
([nil nil ((3710 . 3714) (t 25934 15292 956556 845000)) nil (25934 15401 186520 989000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3710) (undo-tree-id1218 . -4) 3714) nil (25934 15401 186517 882000) 0 nil])
([nil nil ((3710 . 3714)) nil (25934 15401 186512 391000) 0 nil])
([nil nil ((#("            # for i_pop in range(self.N_POP):
            #     rates_old = rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] 
            #     rates_old = rates_old * self.EXP_DT_TAU[i_pop]
            #     inputs = Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])
            #     rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = rates_old + self.DT_TAU[i_pop] * inputs
" 0 12 (fontified t) 12 14 (face font-lock-comment-delimiter-face fontified t) 14 46 (face font-lock-comment-face fontified t) 46 58 (fontified t) 58 64 (face font-lock-comment-delimiter-face fontified t) 64 101 (face font-lock-comment-face fontified t) 101 102 (face font-lock-comment-face fontified t) 102 128 (face font-lock-comment-face fontified t) 128 140 (fontified t) 140 146 (face font-lock-comment-delimiter-face fontified t) 146 187 (face font-lock-comment-face fontified t) 187 193 (face font-lock-comment-face fontified t) 193 205 (fontified t) 205 211 (face font-lock-comment-delimiter-face fontified t) 211 289 (face font-lock-comment-face fontified t) 289 295 (fontified t) 295 301 (fontified t) 301 307 (face font-lock-comment-delimiter-face fontified t) 307 343 (face font-lock-comment-face fontified t) 343 380 (face font-lock-comment-face fontified t) 380 400 (face font-lock-comment-face fontified t)) . 3965) (undo-tree-id1216 . -400) (undo-tree-id1217 . -46)) nil (25934 15401 186506 990000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4031) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) 4035 (t 25934 15401 236727 199000)) nil (25934 15724 743355 387000) 0 nil])
([nil nil ((11363 . 11371) (t 25934 15724 791228 732000)) nil (25934 15816 389820 780000) 0 nil])
([nil nil ((apply -14 11309 11753 undo--wrap-and-run-primitive-undo 11309 11753 ((11656 . 11658) (11568 . 11570) (11499 . 11501) (11426 . 11428) (11384 . 11386) (11348 . 11350) (11317 . 11319) 11730))) nil (25934 15816 389818 591000) 0 nil])
([nil nil ((11745 . 11753) (#("        " 0 8 (fontified nil)) . 11744) (undo-tree-id1315 . -8) (11752 . 11753)) nil (25934 15816 389816 418000) 0 nil])
([nil nil ((11308 . 11321)) nil (25934 15816 389813 97000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11407 . 11408) (nil fontified nil 11407 . 11408) (nil fontified nil 11406 . 11407) (nil fontified nil 11399 . 11406) (nil fontified nil 11395 . 11399) (nil fontified nil 11394 . 11395) (nil fontified nil 11380 . 11394) (nil fontified nil 11376 . 11380) (nil fontified nil 11375 . 11376) (nil fontified nil 11368 . 11375) (nil fontified nil 11367 . 11368) (nil fontified nil 11358 . 11367) (nil fontified nil 11354 . 11358) (nil fontified nil 11346 . 11354) (nil fontified nil 11342 . 11346) (nil fontified nil 11341 . 11342) (nil fontified nil 11340 . 11341) (nil fontified nil 11328 . 11340) (nil fontified nil 11327 . 11328) (nil fontified nil 11326 . 11327) (nil fontified nil 11317 . 11326) (nil fontified nil 11309 . 11317) (11309 . 11408)) nil (25934 15816 389811 477000) 0 nil])
([nil nil ((11317 . 11321) 11309) nil (25934 15816 389801 219000) 0 nil])
([nil nil ((#("rec_input" 0 9 (face font-lock-variable-name-face fontified t)) . 11321)) nil (25934 15816 389799 20000) 0 nil])
([nil nil ((11321 . 11331)) nil (25934 15816 389797 510000) 0 nil])
([nil nil ((11331 . 11335)) nil (25934 15816 389795 903000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -11333) (undo-tree-id1313 . -1) (#("T" 0 1 (face font-lock-variable-name-face fontified t)) . -11334) (undo-tree-id1314 . -1) 11335) nil (25934 15816 389793 351000) 0 nil])
([nil nil ((11333 . 11336)) nil (25934 15816 389788 629000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11317) (undo-tree-id1312 . -4) 11321) nil (25934 15816 389784 957000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11348) (#("," 0 1 (fontified t)) . 11348) (#("P" 0 1 (fontified t)) . 11348) (#("O" 0 1 (fontified t)) . 11348) (#("P" 0 1 (fontified t)) . 11348) (#("_" 0 1 (fontified t)) . 11348) (#("N" 0 1 (fontified t)) . 11348) (#("." 0 1 (fontified t)) . 11348) (#("f" 0 1 (fontified t)) . 11348) (#("l" 0 1 (fontified t)) . 11348) (#("e" 0 1 (fontified t)) . 11348) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 11348) (t 25934 15816 433216 123000)) nil (25934 15830 263759 814000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11347) (undo-tree-id1320 . -1) 11348) nil (25934 15830 263757 540000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11360) (undo-tree-id1319 . -1) 11361) nil (25934 15830 263755 609000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 11341) (undo-tree-id1316 . -1) (#("e" 0 1 (fontified t)) . 11341) (undo-tree-id1317 . -1) (#("z" 0 1 (fontified t)) . 11341) (undo-tree-id1318 . -1)) nil (25934 15830 263752 709000) 0 nil])
([nil nil ((11342 . 11344)) nil (25934 15830 263738 355000) 0 nil])
([nil nil ((nil fontified nil 11488 . 11489) (nil fontified nil 11487 . 11488) (nil fontified nil 11480 . 11487) (nil fontified nil 11476 . 11480) (nil fontified nil 11475 . 11476) (nil fontified nil 11469 . 11475) (nil fontified nil 11467 . 11469) (nil fontified nil 11462 . 11467) (nil fontified nil 11461 . 11462) (nil fontified nil 11457 . 11461) (nil fontified nil 11456 . 11457) (nil fontified nil 11449 . 11456) (nil fontified nil 11440 . 11449) (nil fontified nil 11436 . 11440) (nil fontified nil 11435 . 11436) (nil fontified nil 11424 . 11435) (nil fontified nil 11423 . 11424) (nil fontified nil 11422 . 11423) (nil fontified nil 11412 . 11422) (nil fontified nil 11411 . 11412) (nil fontified nil 11407 . 11411) (nil fontified nil 11399 . 11407) (11399 . 11489) (t 25934 15830 305575 509000)) nil (25934 15834 403830 383000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 11412) (#("P" 0 1 (face font-lock-variable-name-face fontified t)) . 11412) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . 11412) (#("E" 0 1 (face font-lock-variable-name-face fontified t)) . 11412)) nil (25934 15834 403822 202000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11493) (undo-tree-id1332 . -4) 11497 (t 25934 15834 445685 340000)) nil (25934 16050 257896 791000) 0 nil])
([nil nil ((11486 . 11494) (#("        " 0 8 (fontified nil)) . 11485) (undo-tree-id1331 . -8) (11493 . 11494)) nil (25934 16050 257894 815000) 0 nil])
([nil nil ((11494 . 11515)) nil (25934 16050 257893 223000) 0 nil])
([nil nil ((11515 . 11516)) nil (25934 16050 257892 715000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -11510) (undo-tree-id1325 . -1) (#("E" 0 1 (fontified t)) . -11511) (undo-tree-id1326 . -1) (#("U" 0 1 (fontified t)) . -11512) (undo-tree-id1327 . -1) (#("R" 0 1 (fontified t)) . -11513) (undo-tree-id1328 . -1) (#("O" 0 1 (fontified t)) . -11514) (undo-tree-id1329 . -1) (#("N" 0 1 (fontified t)) . -11515) (undo-tree-id1330 . -1) 11516) nil (25934 16050 257890 983000) 0 nil])
([nil nil ((11510 . 11513)) nil (25934 16050 257884 884000) 0 nil])
([nil nil ((11513 . 11522)) nil (25934 16050 257884 144000) 0 nil])
([nil nil ((11513 . 11515)) nil (25934 16050 257883 446000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -11513) (undo-tree-id1324 . -1) 11514) nil (25934 16050 257882 630000) 0 nil])
([nil nil ((11523 . 11527) 11515) nil (25934 16050 257880 368000) 0 nil])
([nil nil ((11527 . 11539)) nil (25934 16050 257879 376000) 0 nil])
([nil nil ((11539 . 11542)) nil (25934 16050 257878 232000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -11541) (undo-tree-id1323 . -1) 11542) nil (25934 16050 257876 948000) 0 nil])
([nil nil ((11542 . 11544) (#("[" 0 1 (fontified nil)) . -11542) (11541 . 11543)) nil (25934 16050 257874 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11585 . 11586) (nil fontified nil 11585 . 11586) (nil fontified nil 11583 . 11585) (nil fontified nil 11582 . 11583) (nil fontified nil 11576 . 11582) (nil fontified nil 11575 . 11576) (nil fontified nil 11568 . 11575) (nil fontified nil 11564 . 11568) (nil fontified nil 11561 . 11564) (nil fontified nil 11560 . 11561) (nil fontified nil 11555 . 11560) (nil fontified nil 11554 . 11555) (nil fontified nil 11547 . 11554) (nil fontified nil 11543 . 11547) (11543 . 11586)) nil (25934 16050 257872 559000) 0 nil])
([nil nil ((11587 . 11590)) nil (25934 16050 257869 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11623 . 11624) (nil fontified nil 11623 . 11624) (nil fontified nil 11622 . 11623) (nil fontified nil 11617 . 11622) (nil fontified nil 11616 . 11617) (nil fontified nil 11612 . 11616) (nil fontified nil 11608 . 11612) (nil fontified nil 11607 . 11608) (nil fontified nil 11606 . 11607) (nil fontified nil 11602 . 11606) (nil fontified nil 11598 . 11602) (nil fontified nil 11597 . 11598) (nil fontified nil 11596 . 11597) (nil fontified nil 11590 . 11596) (11590 . 11624)) nil (25934 16050 257868 211000) 0 nil])
([nil nil ((11624 . 11637)) nil (25934 16050 257865 338000) 0 nil])
([nil nil ((11485 . 11493)) nil (25934 16050 257864 772000) 0 nil])
([nil nil ((11203 . 11204)) nil (25934 16050 257864 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11280 . 11281) (nil fontified nil 11280 . 11281) (nil fontified nil 11279 . 11280) (nil fontified nil 11272 . 11279) (nil fontified nil 11268 . 11272) (nil fontified nil 11267 . 11268) (nil fontified nil 11259 . 11267) (nil fontified nil 11256 . 11259) (nil fontified nil 11250 . 11256) (nil fontified nil 11249 . 11250) (nil fontified nil 11239 . 11249) (nil fontified nil 11235 . 11239) (nil fontified nil 11234 . 11235) (nil fontified nil 11221 . 11234) (nil fontified nil 11220 . 11221) (nil fontified nil 11219 . 11220) (nil fontified nil 11217 . 11219) (nil fontified nil 11216 . 11217) (nil fontified nil 11212 . 11216) (nil fontified nil 11204 . 11212) (11204 . 11281)) nil (25934 16050 257863 49000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 11217) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . 11217)) nil (25934 16050 257860 148000) 0 nil])
([nil nil ((11217 . 11220)) nil (25934 16050 257859 409000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 11242)) nil (25934 16050 257858 714000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -11241) (undo-tree-id1322 . -1) 11242) nil (25934 16050 257857 651000) 0 nil])
([nil nil ((11241 . 11244)) nil (25934 16050 257855 242000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 11252)) nil (25934 16050 257854 597000) 0 nil])
([nil nil ((11252 . 11262)) nil (25934 16050 257853 683000) 0 nil])
([nil nil ((#(".int" 0 1 (fontified t) 1 4 (face font-lock-builtin-face fontified t)) . 11262) (undo-tree-id1321 . -4)) nil (25934 16050 257849 607000) 0 nil])
([nil nil ((#("        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 36 (face font-lock-keyword-face fontified t) 36 47 (fontified t) 47 48 (face font-lock-operator-face fontified t) 48 52 (face font-lock-keyword-face fontified t) 52 58 (fontified t) 58 66 (fontified t) 66 67 (face font-lock-operator-face fontified t) 67 71 (face font-lock-keyword-face fontified t) 71 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (rear-nonsticky t fontified t)) . 11204) (undo-tree-id1338 . -80) (t 25934 16050 304643 659000)) nil (25934 16062 348824 395000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11203) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) 11204) nil (25934 16062 348817 237000) 0 nil])
([nil nil ((11308 . 11321)) nil (25934 16062 348800 394000) 0 nil])
([nil nil ((nil fontified nil 11388 . 11389) (nil fontified nil 11387 . 11388) (nil fontified nil 11380 . 11387) (nil fontified nil 11376 . 11380) (nil fontified nil 11375 . 11376) (nil fontified nil 11367 . 11375) (nil fontified nil 11361 . 11367) (nil fontified nil 11357 . 11361) (nil fontified nil 11356 . 11357) (nil fontified nil 11345 . 11356) (nil fontified nil 11341 . 11345) (nil fontified nil 11340 . 11341) (nil fontified nil 11327 . 11340) (nil fontified nil 11326 . 11327) (nil fontified nil 11325 . 11326) (nil fontified nil 11322 . 11325) (nil fontified nil 11321 . 11322) (nil fontified nil 11317 . 11321) (nil fontified nil 11309 . 11317) (11309 . 11389)) nil (25934 16062 348796 387000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -11691) (undo-tree-id1333 . -1) (#("p" 0 1 (fontified t)) . -11692) (undo-tree-id1334 . -1) 11693) nil (25934 16062 348779 143000) 0 nil])
([nil nil ((11691 . 11696)) nil (25934 16062 348741 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11841 . 11842) (nil fontified nil 11841 . 11842) (nil fontified nil 11840 . 11841) (nil fontified nil 11839 . 11840) (nil fontified nil 11834 . 11839) (nil fontified nil 11833 . 11834) (nil fontified nil 11829 . 11833) (nil fontified nil 11825 . 11829) (nil fontified nil 11824 . 11825) (nil fontified nil 11823 . 11824) (nil fontified nil 11819 . 11823) (nil fontified nil 11815 . 11819) (nil fontified nil 11814 . 11815) (nil fontified nil 11813 . 11814) (nil fontified nil 11809 . 11813) (nil fontified nil 11803 . 11809) (nil fontified nil 11802 . 11803) (nil fontified nil 11801 . 11802) (nil fontified nil 11800 . 11801) (nil fontified nil 11799 . 11800) (nil fontified nil 11797 . 11799) (nil fontified nil 11796 . 11797) (nil fontified nil 11790 . 11796) (nil fontified nil 11789 . 11790) (nil fontified nil 11782 . 11789) (nil fontified nil 11778 . 11782) (nil fontified nil 11775 . 11778) (nil fontified nil 11774 . 11775) (nil fontified nil 11769 . 11774) (nil fontified nil 11768 . 11769) (nil fontified nil 11761 . 11768) (nil fontified nil 11757 . 11761) (nil fontified nil 11756 . 11757) (nil fontified nil 11745 . 11756) (nil fontified nil 11741 . 11745) (nil fontified nil 11729 . 11741) (11729 . 11842) (t 25934 16062 421087 298000)) nil (25934 16078 805547 188000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11804) (undo-tree-id1409 . -1) (#("o" 0 1 (fontified t)) . -11805) (undo-tree-id1410 . -1) (#("r" 0 1 (fontified t)) . -11806) (undo-tree-id1411 . -1) (#("c" 0 1 (fontified t)) . -11807) (undo-tree-id1412 . -1) (#("h" 0 1 (fontified t)) . -11808) (undo-tree-id1413 . -1) (#("." 0 1 (fontified t)) . -11809) (undo-tree-id1414 . -1) (#("e" 0 1 (fontified t)) . -11810) (undo-tree-id1415 . -1) (#("x" 0 1 (fontified t)) . -11811) (undo-tree-id1416 . -1) (#("p" 0 1 (fontified t)) . -11812) (undo-tree-id1417 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11813) (undo-tree-id1418 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -11814) (undo-tree-id1419 . -1) 11815) nil (25934 16078 805539 547000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t rear-nonsticky t)) . -11829) (undo-tree-id1408 . -1) 11830) nil (25934 16078 805529 839000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 11749)) nil (25934 16078 805527 902000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -11746) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (#("X" 0 1 (fontified t)) . -11747) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("P" 0 1 (fontified t)) . -11748) (undo-tree-id1407 . -1) 11749) nil (25934 16078 805521 802000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11834) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) (undo-tree-id1475 . -4) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) (undo-tree-id1478 . -4) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -4) (undo-tree-id1485 . -4) (undo-tree-id1486 . -4) (undo-tree-id1487 . -4) (undo-tree-id1488 . -4) (undo-tree-id1489 . -4) (undo-tree-id1490 . -4) (undo-tree-id1491 . -4) (undo-tree-id1492 . -4) (undo-tree-id1493 . -4) (undo-tree-id1494 . -4) (undo-tree-id1495 . -4) (undo-tree-id1496 . -4) (undo-tree-id1497 . -4) (undo-tree-id1498 . -4) (undo-tree-id1499 . -4) (undo-tree-id1500 . -4) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -4) (undo-tree-id1510 . -4) (undo-tree-id1511 . -4) (undo-tree-id1512 . -4) (undo-tree-id1513 . -4) (undo-tree-id1514 . -4) (undo-tree-id1515 . -4) (undo-tree-id1516 . -4) (undo-tree-id1517 . -4) (undo-tree-id1518 . -4) (undo-tree-id1519 . -4) (undo-tree-id1520 . -4) (undo-tree-id1521 . -4) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (undo-tree-id1525 . -4) (undo-tree-id1526 . -4) (undo-tree-id1527 . -4) (undo-tree-id1528 . -4) (undo-tree-id1529 . -4) (undo-tree-id1530 . -4) (undo-tree-id1531 . -4) (undo-tree-id1532 . -4) (undo-tree-id1533 . -4) (undo-tree-id1534 . -4) (undo-tree-id1535 . -4) (undo-tree-id1536 . -4) (undo-tree-id1537 . -4) (undo-tree-id1538 . -4) (undo-tree-id1539 . -4) (undo-tree-id1540 . -4) (undo-tree-id1541 . -4) (undo-tree-id1542 . -4) (undo-tree-id1543 . -4) (undo-tree-id1544 . -4) (undo-tree-id1545 . -4) (undo-tree-id1546 . -4) (undo-tree-id1547 . -4) (undo-tree-id1548 . -4) (undo-tree-id1549 . -4) (undo-tree-id1550 . -4) 11838 (t 25934 16078 845695 83000)) nil (25934 16082 60720 469000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3918) (undo-tree-id1555 . -1) (#("0" 0 1 (fontified t)) . -3919) (undo-tree-id1556 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3920) (undo-tree-id1557 . -1) 3921 (t 25934 16082 129817 460000)) nil (25934 16097 632426 210000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3932) (undo-tree-id1552 . -1) (#("0" 0 1 (fontified t)) . -3933) (undo-tree-id1553 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3934) (undo-tree-id1554 . -1) 3935) nil (25934 16097 632420 617000) 0 nil])
([nil nil ((#("rates" 0 5 (fontified t)) . 3895) (undo-tree-id1551 . -5) 3900) nil (25934 16097 632408 708000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3895) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 3895) (#(" " 0 1 (fontified t)) . 3895)) nil (25934 16097 632397 522000) 0 nil])
([nil nil ((3911 . 3919)) nil (25934 16097 632391 80000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11391) (undo-tree-id1558 . -4) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -4) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) (undo-tree-id1573 . -4) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) (undo-tree-id1576 . -4) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) (undo-tree-id1581 . -4) (undo-tree-id1582 . -4) (undo-tree-id1583 . -4) (undo-tree-id1584 . -4) (undo-tree-id1585 . -4) (undo-tree-id1586 . -4) (undo-tree-id1587 . -4) (undo-tree-id1588 . -4) (undo-tree-id1589 . -4) (undo-tree-id1590 . -4) (undo-tree-id1591 . -4) (undo-tree-id1592 . -4) (undo-tree-id1593 . -4) (undo-tree-id1594 . -4) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (undo-tree-id1598 . -4) (undo-tree-id1599 . -4) (undo-tree-id1600 . -4) (undo-tree-id1601 . -4) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (undo-tree-id1604 . -4) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) (undo-tree-id1612 . -4) (undo-tree-id1613 . -4) (undo-tree-id1614 . -4) (undo-tree-id1615 . -4) 11395 (t 25934 16097 670400 210000)) nil (25934 16126 218871 706000) 0 nil])
([nil nil ((11590 . 11594) (t 25934 16126 267487 424000)) nil (25934 16156 577915 494000) 0 nil])
([nil nil ((11598 . 11603) (t 25934 16156 640661 308000)) nil (25934 16164 150782 202000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11601) (undo-tree-id1680 . -1) (#("g" 0 1 (fontified t)) . -11602) (undo-tree-id1681 . -1) 11603) nil (25934 16164 150780 980000) 0 nil])
([nil nil ((11603 . 11605) (#("(" 0 1 (fontified nil)) . -11603) (11601 . 11604)) nil (25934 16164 150777 807000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 11604)) nil (25934 16164 150776 325000) 0 nil])
([nil nil ((11615 . 11616)) nil (25934 16164 150775 377000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11615) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) 11616) nil (25934 16164 150772 415000) 0 nil])
([nil nil ((11614 . 11615)) nil (25934 16164 150707 440000) 0 nil])
([nil nil ((2592 . 2600) (t 25934 16164 192956 0)) nil (25934 16230 240862 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2863) (undo-tree-id1682 . -1) (#(" " 0 1 (fontified t)) . -2864) (undo-tree-id1683 . -1) (#(" " 0 1 (fontified t)) . -2865) (undo-tree-id1684 . -1) (#(" " 0 1 (fontified t)) . -2866) (undo-tree-id1685 . -1) (#(" " 0 1 (fontified t)) . -2867) (undo-tree-id1686 . -1) (#(" " 0 1 (fontified t)) . -2868) (undo-tree-id1687 . -1) (#(" " 0 1 (fontified t)) . -2869) (undo-tree-id1688 . -1) (#(" " 0 1 (fontified t)) . -2870) (undo-tree-id1689 . -1) (#(" " 0 1 (fontified t)) . -2871) (undo-tree-id1690 . -1) (#(" " 0 1 (fontified t)) . -2872) (undo-tree-id1691 . -1) (#(" " 0 1 (fontified t)) . -2873) (undo-tree-id1692 . -1) 2874 (t 25934 16230 307577 518000)) nil (25934 16244 111845 220000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2964) (t 25934 16244 164135 415000)) nil (25934 16323 525653 610000) 0 nil])
([nil nil ((2964 . 2965)) nil (25934 16323 525652 548000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2971)) nil (25934 16323 525650 543000) 0 nil])
([nil nil ((2971 . 2972)) nil (25934 16323 525644 837000) 0 nil])
([nil nil ((2917 . 2933) (#("                " 0 16 (fontified nil)) . 2916) (undo-tree-id1695 . -16) (2932 . 2933) (t 25934 16323 579378 873000)) nil (25934 16349 756805 188000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2940) (2939 . 2940) (2938 . 2940) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2938) (2933 . 2939)) nil (25934 16349 756802 51000) 0 nil])
([nil nil ((2939 . 2948)) nil (25934 16349 756800 717000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2947) (undo-tree-id1694 . -1) 2948) nil (25934 16349 756799 671000) 0 nil])
([nil nil ((2947 . 2951)) nil (25934 16349 756797 249000) 0 nil])
([nil nil ((apply 2 3006 3046 undo--wrap-and-run-primitive-undo 3006 3046 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3022) 3048))) nil (25934 16349 756796 604000) 0 nil])
([nil nil ((2952 . 2969)) nil (25934 16349 756795 226000) 0 nil])
([nil nil ((2939 . 2940)) nil (25934 16349 756794 96000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2939) (undo-tree-id1693 . -1) 2940) nil (25934 16349 756792 713000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 2941) (2940 . 2941) (2939 . 2941) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2939) (2939 . 2940)) nil (25934 16349 756780 409000) 0 nil])
([nil nil ((2940 . 2944)) nil (25934 16349 756778 546000) 0 nil])
([nil nil ((2945 . 2947)) nil (25934 16349 756771 508000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3009) (undo-tree-id1700 . -1) 3010 (t 25934 16349 808464 858000)) nil (25934 16362 529505 641000) 0 nil])
([nil nil ((3009 . 3010)) nil (25934 16362 529502 518000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3016) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1)) nil (25934 16362 529499 668000) 0 nil])
([nil nil ((3016 . 3017)) nil (25934 16362 529473 685000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2960) (undo-tree-id1701 . -1) 2961 (t 25934 16362 592996 453000)) nil (25934 16407 425414 4000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2960) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (#(" " 0 1 (fontified t)) . -2961) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (#(" " 0 1 (fontified t)) . -2962) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (#(" " 0 1 (fontified nil)) . -2963) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (#(" " 0 1 (fontified nil)) . -2964) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (#(" " 0 1 (fontified nil)) . -2965) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (#(" " 0 1 (fontified nil)) . -2966) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (#(" " 0 1 (fontified t)) . -2967) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (#(" " 0 1 (fontified t)) . -2968) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (#(" " 0 1 (fontified t)) . -2969) (undo-tree-id2013 . -1) (#(" " 0 1 (fontified t)) . -2970) (undo-tree-id2014 . -1) (#(" " 0 1 (fontified t)) . -2971) (undo-tree-id2015 . -1) (#(" " 0 1 (fontified t)) . -2972) (undo-tree-id2016 . -1) (#(" " 0 1 (fontified t)) . -2973) (undo-tree-id2017 . -1) (#(" " 0 1 (fontified t)) . -2974) (undo-tree-id2018 . -1) (#(" " 0 1 (fontified t)) . -2975) (undo-tree-id2019 . -1) 2976 (t 25934 16407 478873 409000)) nil (25934 16410 156411 56000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2992) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) 2993 (t 25934 16410 210988 145000)) nil (25934 16414 692901 826000) 0 nil])
([nil nil ((2992 . 2993)) nil (25934 16414 692856 723000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2999)) nil (25934 16414 692855 217000) 0 nil])
([nil nil ((2999 . 3000)) nil (25934 16414 692849 387000) 0 nil])
([nil nil ((2960 . 2977) (t 25934 16414 739178 423000)) nil (25934 16444 59083 35000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2984) (2983 . 2984) (2982 . 2984) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2982) (2977 . 2983)) nil (25934 16444 59082 49000) 0 nil])
([nil nil ((2983 . 2990)) nil (25934 16444 59080 743000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2989) (undo-tree-id2060 . -1) 2990) nil (25934 16444 59079 674000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2993) (2992 . 2993) (2991 . 2993) (#("[" 0 1 (fontified nil)) . -2991) (2989 . 2992)) nil (25934 16444 59077 619000) 0 nil])
([nil nil ((2992 . 2998)) nil (25934 16444 59076 668000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2997) (undo-tree-id2059 . -1) 2998) nil (25934 16444 59075 649000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 3000) (2999 . 3000) (2998 . 3000) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2998) (2998 . 2999)) nil (25934 16444 59073 742000) 0 nil])
([nil nil ((2999 . 3002)) nil (25934 16444 59072 690000) 0 nil])
([nil nil ((3002 . 3004)) nil (25934 16444 59072 198000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3045) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1)) nil (25934 16444 59071 114000) 0 nil])
([nil nil ((3045 . 3046)) nil (25934 16444 59055 265000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3038)) nil (25934 16444 59054 34000) 0 nil])
([nil nil ((3038 . 3039)) nil (25934 16444 59052 661000) 0 nil])
([nil nil ((3006 . 3023)) nil (25934 16444 59047 296000) 0 nil])
([nil nil ((2916 . 2932) (t 25934 16444 100415 544000)) nil (25934 16516 565392 571000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2863) (undo-tree-id2061 . -1) (#(" " 0 1 (fontified t)) . -2864) (undo-tree-id2062 . -1) (#(" " 0 1 (fontified t)) . -2865) (undo-tree-id2063 . -1) (#(" " 0 1 (fontified t)) . -2866) (undo-tree-id2064 . -1) (#(" " 0 1 (fontified t)) . -2867) (undo-tree-id2065 . -1) 2868 (t 25934 16516 613388 280000)) nil (25934 16596 413266 682000) 0 nil])
([nil nil ((apply 2 2864 2909 undo--wrap-and-run-primitive-undo 2864 2909 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2880) 2911))) nil (25934 16596 413252 588000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3001) (t 25934 16596 454434 749000)) nil (25934 16634 767636 226000) 0 nil])
([nil nil ((3001 . 3002)) nil (25934 16634 767635 300000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3001) (undo-tree-id2069 . -1) 3002) nil (25934 16634 767634 159000) 0 nil])
([nil nil ((3001 . 3002)) nil (25934 16634 767632 274000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3001) (undo-tree-id2068 . -1) 3002) nil (25934 16634 767631 442000) 0 nil])
([nil nil ((3001 . 3002)) nil (25934 16634 767629 458000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3008)) nil (25934 16634 767628 625000) 0 nil])
([nil nil ((3008 . 3009)) nil (25934 16634 767627 965000) 0 nil])
([nil nil ((#("ç" 0 1 (fontified t)) . -3008) (undo-tree-id2067 . -1) 3009) nil (25934 16634 767626 942000) 0 nil])
([nil nil ((3008 . 3009)) nil (25934 16634 767622 252000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3071) (undo-tree-id2066 . -1) 3072) nil (25934 16634 767619 240000) 0 nil])
([nil nil ((3071 . 3072)) nil (25934 16634 767602 450000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3064)) nil (25934 16634 767600 654000) 0 nil])
([nil nil ((3064 . 3065)) nil (25934 16634 767594 146000) 0 nil])
([nil nil ((apply -2 2864 2928 undo--wrap-and-run-primitive-undo 2864 2928 ((2880 . 2882) 2909))) nil (25934 16651 771039 259000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1950) (undo-tree-id2070 . -1) 1951 (t 25934 16651 822218 105000)) nil (25934 16668 609756 35000) 0 nil])
([nil nil ((1950 . 1951)) nil (25934 16668 609742 370000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1957)) nil (25934 16668 609740 430000) 0 nil])
([nil nil ((1957 . 1958)) nil (25934 16668 609733 3000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1950) (undo-tree-id2077 . -1) 1951 (t 25934 16668 678990 326000)) nil (25934 16682 888328 854000) 0 nil])
([nil nil ((1950 . 1951)) nil (25934 16682 888322 363000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1957) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1)) nil (25934 16682 888317 778000) 0 nil])
([nil nil ((1957 . 1958)) nil (25934 16682 888270 768000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1957) (undo-tree-id2080 . -1) 1958 (t 25934 16682 972413 609000)) nil (25934 16699 552660 322000) 0 nil])
([nil nil ((1957 . 1958)) nil (25934 16699 552657 638000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1950) (undo-tree-id2079 . -1) 1951) nil (25934 16699 552656 612000) 0 nil])
([nil nil ((1950 . 1951)) nil (25934 16699 552654 319000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1777) (undo-tree-id2078 . -1) 1778) nil (25934 16699 552653 47000) 0 nil])
([nil nil ((1777 . 1778)) nil (25934 16699 552641 67000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1793)) nil (25934 16699 552639 344000) 0 nil])
([nil nil ((1793 . 1794)) nil (25934 16699 552632 313000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1911) (undo-tree-id2082 . -1) 1912 (t 25934 16699 613587 939000)) nil (25934 16706 447330 388000) 0 nil])
([nil nil ((1911 . 1912)) nil (25934 16706 447322 660000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1918) (undo-tree-id2081 . -1) 1919) nil (25934 16706 447318 664000) 0 nil])
([nil nil ((1918 . 1919)) nil (25934 16706 447295 451000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2880) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2880) (t 25934 16706 528466 215000)) nil (25934 16776 713800 963000) 0 nil])
([nil nil ((#("                r_pres = r_pres.unsqueeze(0)
" 0 16 (fontified t) 16 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (fontified t)) . -2864) (undo-tree-id2083 . -44) (undo-tree-id2084 . -44) (undo-tree-id2085 . -44) (undo-tree-id2086 . -44) (undo-tree-id2087 . -45) (undo-tree-id2088 . -45) (undo-tree-id2089 . -45) (undo-tree-id2090 . -45) (undo-tree-id2091 . -45) (undo-tree-id2092 . -45) (undo-tree-id2093 . -45) (undo-tree-id2094 . -45) (undo-tree-id2095 . -45) (undo-tree-id2096 . -45) (undo-tree-id2097 . -45) (undo-tree-id2098 . -45) (undo-tree-id2099 . -45) (undo-tree-id2100 . -45) (undo-tree-id2101 . -45) (undo-tree-id2102 . -45) (undo-tree-id2103 . -45) (undo-tree-id2104 . -45) (undo-tree-id2105 . -45) (undo-tree-id2106 . -45) (undo-tree-id2107 . -45) (undo-tree-id2108 . -45) (undo-tree-id2109 . -45) (undo-tree-id2110 . -45) (undo-tree-id2111 . -45) (undo-tree-id2112 . -45) (undo-tree-id2113 . -44) (undo-tree-id2114 . -45) (undo-tree-id2115 . -44) (undo-tree-id2116 . -44) (undo-tree-id2117 . -44) (undo-tree-id2118 . -44) (undo-tree-id2119 . -44) (undo-tree-id2120 . -44) (undo-tree-id2121 . -44) (undo-tree-id2122 . -44) (undo-tree-id2123 . -44) (undo-tree-id2124 . -44) (undo-tree-id2125 . -44) (undo-tree-id2126 . -44) (undo-tree-id2127 . -44) (undo-tree-id2128 . -44) (undo-tree-id2129 . -44) (undo-tree-id2130 . -44) (undo-tree-id2131 . -44) (undo-tree-id2132 . -44) (undo-tree-id2133 . -44) (undo-tree-id2134 . -44) (undo-tree-id2135 . -44) (undo-tree-id2136 . -44) (undo-tree-id2137 . -44) (undo-tree-id2138 . -44) (undo-tree-id2139 . -44) (undo-tree-id2140 . -44) (undo-tree-id2141 . -44) (undo-tree-id2142 . -44) (undo-tree-id2143 . -44) (undo-tree-id2144 . -44) (undo-tree-id2145 . -44) (undo-tree-id2146 . -16) (undo-tree-id2147 . -16) (undo-tree-id2148 . -16) (undo-tree-id2149 . -16) (undo-tree-id2150 . -16) (undo-tree-id2151 . -16) (undo-tree-id2152 . -16) (undo-tree-id2153 . -16) (undo-tree-id2154 . -16) (undo-tree-id2155 . -16) (undo-tree-id2156 . -16) (undo-tree-id2157 . -16) (undo-tree-id2158 . -16) (undo-tree-id2159 . -16) (undo-tree-id2160 . -16) (undo-tree-id2161 . -16) (undo-tree-id2162 . -16) (undo-tree-id2163 . -16) (undo-tree-id2164 . -16) (undo-tree-id2165 . -16) (undo-tree-id2166 . -16) (undo-tree-id2167 . -16) (undo-tree-id2168 . -16) (undo-tree-id2169 . -16) (undo-tree-id2170 . -16) (undo-tree-id2171 . -16) (undo-tree-id2172 . -16) (undo-tree-id2173 . -16) (undo-tree-id2174 . -16) (undo-tree-id2175 . -16) (undo-tree-id2176 . -16) (undo-tree-id2177 . -16) (undo-tree-id2178 . -16) (undo-tree-id2179 . -16) (undo-tree-id2180 . -16) (undo-tree-id2181 . -16) (undo-tree-id2182 . -16) (undo-tree-id2183 . -16) (undo-tree-id2184 . -16) (undo-tree-id2185 . -16) (undo-tree-id2186 . -16) (undo-tree-id2187 . -16) (undo-tree-id2188 . -16) (undo-tree-id2189 . -16) (undo-tree-id2190 . -16) (undo-tree-id2191 . -16) (undo-tree-id2192 . -16) (undo-tree-id2193 . -16) (undo-tree-id2194 . -16) (undo-tree-id2195 . -16) (undo-tree-id2196 . -16) (undo-tree-id2197 . -16) (undo-tree-id2198 . -16) (undo-tree-id2199 . -16) (undo-tree-id2200 . -16) (undo-tree-id2201 . -16) (undo-tree-id2202 . -16) (undo-tree-id2203 . -16) (undo-tree-id2204 . -16) (undo-tree-id2205 . -16) (undo-tree-id2206 . -16) (undo-tree-id2207 . -16) (undo-tree-id2208 . -16) (undo-tree-id2209 . -16) (undo-tree-id2210 . -16) (undo-tree-id2211 . -16) (undo-tree-id2212 . -16) (undo-tree-id2213 . -16) (undo-tree-id2214 . -16) (undo-tree-id2215 . -16) (undo-tree-id2216 . -16) (undo-tree-id2217 . -16) (undo-tree-id2218 . -16) (undo-tree-id2219 . -16) (undo-tree-id2220 . -16) (undo-tree-id2221 . -16) (undo-tree-id2222 . -16) (undo-tree-id2223 . -16) (undo-tree-id2224 . -16) (undo-tree-id2225 . -16) (undo-tree-id2226 . -45) (undo-tree-id2227 . -45) (undo-tree-id2228 . -45) (undo-tree-id2229 . -45) (undo-tree-id2230 . -45) (undo-tree-id2231 . -45) (undo-tree-id2232 . -45) (undo-tree-id2233 . -45) (undo-tree-id2234 . -45) (undo-tree-id2235 . -45) (undo-tree-id2236 . -45) (undo-tree-id2237 . -45) (undo-tree-id2238 . -45) (undo-tree-id2239 . -45) (undo-tree-id2240 . -45) (undo-tree-id2241 . -45) (undo-tree-id2242 . -45) (undo-tree-id2243 . -45) (undo-tree-id2244 . -45) (undo-tree-id2245 . -45) (undo-tree-id2246 . -45) (undo-tree-id2247 . -45) (undo-tree-id2248 . -45) (undo-tree-id2249 . -45) (undo-tree-id2250 . -45) (undo-tree-id2251 . -45) (undo-tree-id2252 . -45) (undo-tree-id2253 . -45) (undo-tree-id2254 . -45) (undo-tree-id2255 . -45) (undo-tree-id2256 . -45) (undo-tree-id2257 . -45) (undo-tree-id2258 . -45) (undo-tree-id2259 . -45) (undo-tree-id2260 . -45) (undo-tree-id2261 . -45) (undo-tree-id2262 . -45) (undo-tree-id2263 . -45) (undo-tree-id2264 . -45) (undo-tree-id2265 . -45) (undo-tree-id2266 . -45) 2909) nil (25934 16776 713787 998000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2852) (undo-tree-id2278 . -1) 2853 (t 25934 16776 766618 908000)) nil (25934 16799 8407 98000) 0 nil])
([nil nil ((2852 . 2853)) nil (25934 16799 8405 561000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2831) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) 2832) nil (25934 16799 8403 989000) 0 nil])
([nil nil ((2831 . 2832)) nil (25934 16799 8382 213000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2640) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (#(" " 0 1 (fontified t)) . -2641) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (#(" " 0 1 (fontified t)) . -2642) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (#(" " 0 1 (fontified t)) . -2643) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (#(" " 0 1 (fontified t)) . -2644) (undo-tree-id2511 . -1) (#(" " 0 1 (fontified t)) . -2645) (undo-tree-id2512 . -1) (#(" " 0 1 (fontified t)) . -2646) (undo-tree-id2513 . -1) (#(" " 0 1 (fontified t)) . -2647) (undo-tree-id2514 . -1) (#(" " 0 1 (fontified t)) . -2648) (undo-tree-id2515 . -1) (#(" " 0 1 (fontified t)) . -2649) (undo-tree-id2516 . -1) (#(" " 0 1 (fontified t)) . -2650) (undo-tree-id2517 . -1) (#(" " 0 1 (fontified nil)) . -2651) (undo-tree-id2518 . -1) (#(" " 0 1 (fontified t)) . -2652) (undo-tree-id2519 . -1) (#(" " 0 1 (fontified nil)) . -2653) (undo-tree-id2520 . -1) (#(" " 0 1 (fontified t)) . -2654) (undo-tree-id2521 . -1) (#(" " 0 1 (fontified t)) . -2655) (undo-tree-id2522 . -1) 2656 (t 25934 16799 56011 414000)) nil (25934 20424 380836 334000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2815) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) 2816 (t 25934 16880 196199 120000)) nil (25934 20545 936403 320000) 0 nil] [nil nil ((2600 . 2606) (t 25934 16880 196199 120000)) ((#("rrredb" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 2600) (undo-tree-id2529 . -6) (undo-tree-id2530 . -6) (undo-tree-id2531 . -6) (undo-tree-id2532 . -6) (undo-tree-id2533 . -6) (undo-tree-id2534 . -6) (undo-tree-id2535 . -6) (undo-tree-id2536 . -6) (undo-tree-id2537 . -6) (undo-tree-id2538 . -6) (undo-tree-id2539 . -6) (undo-tree-id2540 . -6) (undo-tree-id2541 . -6) (undo-tree-id2542 . -6) (undo-tree-id2543 . -6) (undo-tree-id2544 . -6) (undo-tree-id2545 . -6) (undo-tree-id2546 . -6) (undo-tree-id2547 . -6) (undo-tree-id2548 . -6) (undo-tree-id2549 . -6) (undo-tree-id2550 . -6) (undo-tree-id2551 . -6) (undo-tree-id2552 . -6) (undo-tree-id2553 . -6) (undo-tree-id2554 . -6) (undo-tree-id2555 . -6) (undo-tree-id2556 . -6) (undo-tree-id2557 . -6) (undo-tree-id2558 . -6) (undo-tree-id2559 . -6) (undo-tree-id2560 . -6) (undo-tree-id2561 . -6) (undo-tree-id2562 . -6) (undo-tree-id2563 . -6) (undo-tree-id2564 . -6) (undo-tree-id2565 . -6) (undo-tree-id2566 . -6) (undo-tree-id2567 . -6)) (25934 20423 776758 422000) 0 nil])
([nil nil ((2815 . 2816)) nil (25934 20545 936399 936000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2600) (undo-tree-id2523 . -1) (#("r" 0 1 (fontified t)) . -2601) (undo-tree-id2524 . -1) (#("r" 0 1 (fontified t)) . -2602) (undo-tree-id2525 . -1) (#("e" 0 1 (fontified t)) . -2603) (undo-tree-id2526 . -1) (#("d" 0 1 (fontified t)) . -2604) (undo-tree-id2527 . -1) (#("b" 0 1 (fontified t)) . -2605) (undo-tree-id2528 . -1) 2606) ((2600 . 2606)) (25934 20423 391021 855000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2815) (undo-tree-id2574 . -1) (#("_" 0 1 (fontified t)) . -2816) (undo-tree-id2575 . -1) 2817) nil (25934 20545 936398 953000) 0 nil])
([nil nil ((2649 . 2650) (2649 . 2650)) ((#("
" 0 1 (fontified nil)) . 2649) (#("
" 0 1 (fontified t)) . 2649)) (25934 20423 390301 824000) 0 nil])
([nil nil ((2815 . 2817)) nil (25934 20545 936396 853000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t)) . 2836)) nil (25934 20545 936396 282000) 0 nil])
([nil nil ((2836 . 2837)) nil (25934 20545 936395 831000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2940)) nil (25934 20545 936395 133000) 0 nil])
([nil nil ((2940 . 2941)) nil (25934 20545 936394 606000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2947)) nil (25934 20545 936393 876000) 0 nil])
([nil nil ((2947 . 2948)) nil (25934 20545 936393 249000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2947) (undo-tree-id2573 . -1) 2948) nil (25934 20545 936392 558000) 0 nil])
([nil nil ((2947 . 2948)) nil (25934 20545 936391 22000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3010) (undo-tree-id2572 . -1) 3011) nil (25934 20545 936390 271000) 0 nil])
([nil nil ((3010 . 3011)) nil (25934 20545 936388 817000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3003) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1)) nil (25934 20545 936387 584000) 0 nil])
([nil nil ((3003 . 3004)) nil (25934 20545 936371 473000) 0 nil])
([nil nil ((1924 . 1941) (t 25934 20545 972935 682000)) nil (25934 20568 671881 30000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1948) (1947 . 1948) (1946 . 1948) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1946) (1941 . 1947)) nil (25934 20568 671879 95000) 0 nil])
([nil nil ((1947 . 1956)) nil (25934 20568 671874 165000) 0 nil])
([nil nil ((1950 . 1952) (t 25934 20568 712593 941000)) nil (25934 20593 285549 715000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1950) (undo-tree-id2606 . -1) (#("e" 0 1 (fontified t)) . -1951) (undo-tree-id2607 . -1) 1952) nil (25934 20593 285548 373000) 0 nil])
([nil nil ((1951 . 1952)) nil (25934 20593 285545 469000) 0 nil])
([nil nil ((1952 . 1961)) nil (25934 20593 285544 555000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1958) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (#("d" 0 1 (fontified t)) . -1959) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (#("a" 0 1 (fontified t)) . -1960) (undo-tree-id2605 . -1) 1961) nil (25934 20593 285542 112000) 0 nil])
([nil nil ((1958 . 1963)) nil (25934 20593 285507 658000) 0 nil])
([nil nil ((1645 . 1653) (#("        " 0 8 (fontified nil)) . 1644) (undo-tree-id2777 . -8) (1652 . 1653) (t 25934 20593 328234 396000)) nil (25934 20636 683775 490000) 0 nil])
([nil nil ((1653 . 1655)) nil (25934 20636 683774 241000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1653) (undo-tree-id2775 . -1) (#("n" 0 1 (fontified t)) . -1654) (undo-tree-id2776 . -1) 1655) nil (25934 20636 683773 538000) 0 nil])
([nil nil ((1653 . 1659)) nil (25934 20636 683771 750000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -1653) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (#("a" 0 1 (fontified t)) . -1654) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (#("b" 0 1 (fontified t)) . -1655) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (#(" " 0 1 (fontified t)) . -1656) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1657) (undo-tree-id2773 . -1) (#(" " 0 1 (fontified t)) . -1658) (undo-tree-id2774 . -1) 1659) nil (25934 20636 683767 378000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1644) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) 1645) nil (25934 20636 683675 826000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1962) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (#("s" 0 1 (fontified t)) . -1963) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (#("h" 0 1 (fontified t)) . -1964) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (#("a" 0 1 (fontified t)) . -1965) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (#("p" 0 1 (fontified t)) . -1966) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (#("e" 0 1 (fontified t)) . -1967) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) 1968 (t 25934 20636 723625 375000)) nil (25934 20644 470217 701000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1964) (1963 . 1964) (1962 . 1964) (#("[" 0 1 (fontified nil)) . -1962) (1962 . 1963)) nil (25934 20644 470183 257000) 0 nil])
([nil nil ((1963 . 1964)) nil (25934 20644 470182 204000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1967) (1966 . 1967) (1965 . 1967) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1965) (1965 . 1966)) nil (25934 20644 470180 760000) 0 nil])
([nil nil ((1966 . 1967)) nil (25934 20644 470176 139000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1962) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (#("0" 0 1 (fontified t)) . -1963) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1964) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1965) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (#("0" 0 1 (fontified t)) . -1966) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1967) (undo-tree-id2871 . -1) 1968 (t 25934 20644 507519 322000)) nil (25934 20700 829860 47000) 0 nil])
([nil nil ((apply -2 1578 1655 undo--wrap-and-run-primitive-undo 1578 1655 ((1586 . 1588) 1644))) nil (25934 20700 829805 984000) 0 nil])
([nil nil ((1647 . 1655) (#("        " 0 8 (fontified nil)) . 1646) (undo-tree-id2825 . -8) (undo-tree-id2826 . -8) (undo-tree-id2827 . -8) (undo-tree-id2828 . -8) (undo-tree-id2829 . -8) (undo-tree-id2830 . -8) (1654 . 1655)) nil (25934 20700 829804 205000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1651) (undo-tree-id2824 . -4) 1655) nil (25934 20700 829789 151000) 0 nil])
([nil nil ((1647 . 1655) (#("    " 0 4 (fontified t)) . 1647) (undo-tree-id2823 . -4) 1651) nil (25934 20700 829784 745000) 0 nil])
([nil nil ((1655 . 1659)) nil (25934 20700 829780 883000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1657) (undo-tree-id2821 . -1) (#("f" 0 1 (fontified t)) . -1658) (undo-tree-id2822 . -1) 1659) nil (25934 20700 829779 935000) 0 nil])
([nil nil ((1657 . 1663)) nil (25934 20700 829776 797000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1662) (undo-tree-id2820 . -1) 1663) nil (25934 20700 829775 921000) 0 nil])
([nil nil ((1662 . 1670)) nil (25934 20700 829772 976000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1669) (undo-tree-id2819 . -1) 1670) nil (25934 20700 829772 189000) 0 nil])
([nil nil ((1676 . 1679) (1675 . 1677) (#("(" 0 1 (fontified nil)) . -1675) (1669 . 1676)) nil (25934 20700 829770 146000) 0 nil])
([nil nil ((1679 . 1690)) nil (25934 20700 829768 107000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1689) (undo-tree-id2818 . -1) 1690) nil (25934 20700 829766 59000) 0 nil])
([nil nil ((1689 . 1704)) nil (25934 20700 829762 947000) 0 nil])
([nil nil ((1705 . 1714)) nil (25934 20700 829762 293000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1704) (undo-tree-id2817 . -1) 1705) nil (25934 20700 829761 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1740 . 1741) (nil fontified nil 1740 . 1741) (nil fontified nil 1733 . 1740) (nil fontified nil 1729 . 1733) (nil fontified nil 1728 . 1729) (nil fontified nil 1722 . 1728) (nil fontified nil 1714 . 1722) (nil fontified nil 1710 . 1714) (nil fontified nil 1709 . 1710) (nil fontified nil 1704 . 1709) (1704 . 1741)) nil (25934 20700 829759 409000) 0 nil])
([nil nil ((1704 . 1706)) nil (25934 20700 829757 481000) 0 nil])
([nil nil ((1706 . 1709)) nil (25934 20700 829755 978000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1708) (undo-tree-id2816 . -1) 1709) nil (25934 20700 829754 276000) 0 nil])
([nil nil ((1708 . 1711)) nil (25934 20700 829750 253000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1709) (undo-tree-id2814 . -1) (#(" " 0 1 (fontified t)) . -1710) (undo-tree-id2815 . -1) 1711) nil (25934 20700 829748 215000) 0 nil])
([nil nil ((1709 . 1710)) nil (25934 20700 829741 214000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -1709) (undo-tree-id2813 . -1) 1710) nil (25934 20700 829738 979000) 0 nil])
([nil nil ((1709 . 1713)) nil (25934 20700 829731 162000) 0 nil])
([nil nil ((1713 . 1715)) nil (25934 20700 829730 701000) 0 nil])
([nil nil ((1714 . 1715)) nil (25934 20700 829730 34000) 0 nil])
([nil nil ((1716 . 1717)) nil (25934 20700 829725 565000) 0 nil])
([nil nil ((apply -6 1764 2042 undo--wrap-and-run-primitive-undo 1764 2042 ((1860 . 1862) (1814 . 1816) (1772 . 1774) 1971))) nil (25934 20726 806454 345000) 0 nil])
([nil nil ((apply 4 1764 1848 undo--wrap-and-run-primitive-undo 1764 1848 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1812) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1772) 1764))) nil (25934 20726 806453 896000) 0 nil])
([nil nil ((1848 . 1864) (#("        " 0 8 (fontified t)) . 1848)) nil (25934 20726 806453 453000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865)) nil (25934 20726 806451 593000) 0 nil])
([nil nil ((1935 . 1951) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 1934) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (1935 . 1936)) nil (25934 20726 806450 485000) 0 nil])
([nil nil ((1951 . 1953)) nil (25934 20726 806448 203000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2024) (2023 . 2024) (2022 . 2024) (#("[" 0 1 (face font-lock-variable-name-face fontified nil)) . -2022) (2022 . 2023)) nil (25934 20726 806447 167000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2044) (undo-tree-id2903 . -1) 2045) nil (25934 20726 806446 86000) 0 nil])
([nil nil ((2044 . 2045)) nil (25934 20726 806443 187000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2051) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) 2052) nil (25934 20726 806438 77000) 0 nil])
([nil nil ((2051 . 2052)) nil (25934 20726 806383 347000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2008) (undo-tree-id2911 . -1) (#("j" 0 1 (fontified t)) . -2009) (undo-tree-id2912 . -1) 2010 (t 25934 20726 842451 984000)) nil (25934 20775 192232 179000) 0 nil])
([nil nil ((2008 . 2010)) nil (25934 20775 192230 90000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -2009) (undo-tree-id2910 . -1) 2010) nil (25934 20775 192229 334000) 0 nil])
([nil nil ((2009 . 2010)) nil (25934 20775 192227 930000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2066 . 2067) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (nil fontified nil 2063 . 2065) (nil fontified nil 2062 . 2063) (nil fontified nil 2056 . 2062) (nil fontified nil 2055 . 2056) (nil fontified nil 2048 . 2055) (nil fontified nil 2044 . 2048) (nil fontified nil 2041 . 2044) (nil fontified nil 2040 . 2041) (nil fontified nil 2035 . 2040) (nil fontified nil 2034 . 2035) (nil fontified nil 2027 . 2034) (nil fontified nil 2023 . 2027) (nil fontified nil 2022 . 2023) (2022 . 2067)) nil (25934 20775 192227 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2111 . 2112) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2108 . 2110) (nil fontified nil 2107 . 2108) (nil fontified nil 2101 . 2107) (nil fontified nil 2100 . 2101) (nil fontified nil 2093 . 2100) (nil fontified nil 2089 . 2093) (nil fontified nil 2086 . 2089) (nil fontified nil 2085 . 2086) (nil fontified nil 2080 . 2085) (nil fontified nil 2079 . 2080) (nil fontified nil 2072 . 2079) (nil fontified nil 2068 . 2072) (nil fontified nil 2067 . 2068) (2067 . 2112)) nil (25934 20775 192225 458000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 2112) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2112) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1)) nil (25934 20775 192223 629000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2080) (undo-tree-id2906 . -1) 2081) nil (25934 20775 192220 66000) 0 nil])
([nil nil ((2080 . 2081)) nil (25934 20775 192211 478000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2101)) nil (25934 20775 192210 363000) 0 nil])
([nil nil ((2101 . 2102)) nil (25934 20775 192205 904000) 0 nil])
([nil nil ((apply -4 2146 2243 undo--wrap-and-run-primitive-undo 2146 2243 ((2203 . 2205) (2162 . 2164) 2230))) nil (25934 20777 628422 534000) 0 nil])
([nil nil ((2234 . 2250) (#("        " 0 8 (fontified t)) . 2234) (undo-tree-id2913 . -8) (t 25934 20777 665838 485000)) nil (25934 20778 535982 627000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2375) (undo-tree-id2916 . -1) (#("i" 0 1 (fontified t)) . -2376) (undo-tree-id2917 . -1) (#("_" 0 1 (fontified t)) . -2377) (undo-tree-id2918 . -1) (#("p" 0 1 (fontified t)) . -2378) (undo-tree-id2919 . -1) (#("o" 0 1 (fontified t)) . -2379) (undo-tree-id2920 . -1) (#("p" 0 1 (fontified t)) . -2380) (undo-tree-id2921 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2381) (undo-tree-id2922 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2382) (undo-tree-id2923 . -1) (#("i" 0 1 (fontified t)) . -2383) (undo-tree-id2924 . -1) (#("_" 0 1 (fontified t)) . -2384) (undo-tree-id2925 . -1) (#("p" 0 1 (fontified t)) . -2385) (undo-tree-id2926 . -1) (#("o" 0 1 (fontified t)) . -2386) (undo-tree-id2927 . -1) (#("p" 0 1 (fontified t)) . -2387) (undo-tree-id2928 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2388) (undo-tree-id2929 . -1) 2389 (t 25934 20778 573827 813000)) nil (25934 20822 752195 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2429 . 2430) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2426 . 2428) (nil fontified nil 2425 . 2426) (nil fontified nil 2419 . 2425) (nil fontified nil 2418 . 2419) (nil fontified nil 2411 . 2418) (nil fontified nil 2407 . 2411) (nil fontified nil 2404 . 2407) (nil fontified nil 2403 . 2404) (nil fontified nil 2398 . 2403) (nil fontified nil 2397 . 2398) (nil fontified nil 2390 . 2397) (nil fontified nil 2386 . 2390) (nil fontified nil 2385 . 2386) (2385 . 2430)) nil (25934 20822 752184 461000) 0 nil])
([nil nil ((2314 . 2323)) nil (25934 20822 752182 832000) 0 nil])
([nil nil ((2329 . 2342) (2328 . 2330) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2328) (2323 . 2329)) nil (25934 20822 752182 110000) 0 nil])
([nil nil ((2342 . 2345)) nil (25934 20822 752181 307000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2343) (undo-tree-id2914 . -1) (#("d" 0 1 (fontified t)) . -2344) (undo-tree-id2915 . -1) 2345) nil (25934 20822 752179 543000) 0 nil])
([nil nil ((2343 . 2353)) nil (25934 20822 752167 399000) 0 nil])
([nil nil ((2007 . 2012) (t 25934 20822 789319 597000)) nil (25934 20840 68633 107000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1770) (1769 . 1770) (1768 . 1770) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1768) (1763 . 1769) (t 25934 20840 113126 371000)) nil (25934 20883 650175 991000) 0 nil])
([nil nil ((1769 . 1777)) nil (25934 20883 650175 104000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1776) (undo-tree-id3019 . -1) 1777) nil (25934 20883 650174 445000) 0 nil])
([nil nil ((1776 . 1778)) nil (25934 20883 650173 74000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1777) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) 1778) nil (25934 20883 650168 94000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2055) (t 25934 20883 684654 89000)) nil (25934 20930 963877 767000) 0 nil])
([nil nil ((2055 . 2056)) nil (25934 20930 963876 758000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2076)) nil (25934 20930 963875 962000) 0 nil])
([nil nil ((2076 . 2077)) nil (25934 20930 963875 245000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2100) (undo-tree-id3020 . -1) 2101) nil (25934 20930 963873 966000) 0 nil])
([nil nil ((2100 . 2101)) nil (25934 20930 963863 88000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2121)) nil (25934 20930 963861 630000) 0 nil])
([nil nil ((2121 . 2122)) nil (25934 20930 963855 353000) 0 nil])
([nil nil ((1778 . 1787) (t 25934 20931 20161 723000)) nil (25934 20987 39846 999000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1794) (1793 . 1794) (1792 . 1794) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1792) (1787 . 1793)) nil (25934 20987 39846 2000) 0 nil])
([nil nil ((1793 . 1799)) nil (25934 20987 39845 292000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1798) (undo-tree-id3026 . -1) 1799) nil (25934 20987 39844 671000) 0 nil])
([nil nil ((1798 . 1805)) nil (25934 20987 39843 184000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -1802) (undo-tree-id3023 . -1) (#("e" 0 1 (fontified t)) . -1803) (undo-tree-id3024 . -1) (#("i" 0 1 (fontified t)) . -1804) (undo-tree-id3025 . -1) 1805) nil (25934 20987 39842 263000) 0 nil])
([nil nil ((1802 . 1808)) nil (25934 20987 39839 594000) 0 nil])
([nil nil ((1814 . 1816) (1813 . 1815) (#("[" 0 1 (fontified nil)) . -1813) (1808 . 1814)) nil (25934 20987 39838 880000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -1814) (undo-tree-id3021 . -1) (#(":" 0 1 (fontified t)) . -1815) (undo-tree-id3022 . -1) 1816) nil (25934 20987 39837 691000) 0 nil])
([nil nil ((1814 . 1818)) nil (25934 20987 39829 162000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1821) (1820 . 1821) (1819 . 1821) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1819) (1819 . 1820)) nil (25934 20987 39827 783000) 0 nil])
([nil nil ((1820 . 1824)) nil (25934 20987 39823 167000) 0 nil])
([nil nil ((1826 . 1835) (t 25934 20987 83603 941000)) nil (25934 20988 941849 226000) 0 nil])
([nil nil ((2062 . 2079) (t 25934 20988 979585 527000)) nil (25934 21016 325544 516000) 0 nil])
([nil nil ((2079 . 2085)) nil (25934 21016 325543 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2114 . 2115) (nil fontified nil 2114 . 2115) (nil fontified nil 2103 . 2114) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2089 . 2101) (nil fontified nil 2085 . 2089) (2085 . 2115)) nil (25934 21016 325543 273000) 0 nil])
([nil nil ((2115 . 2132)) nil (25934 21016 325541 986000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2139) (2138 . 2139) (2137 . 2139) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2137) (2132 . 2138)) nil (25934 21016 325541 111000) 0 nil])
([nil nil ((2138 . 2141)) nil (25934 21016 325540 285000) 0 nil])
([nil nil ((2141 . 2145)) nil (25934 21016 325539 731000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2143) (undo-tree-id3027 . -1) (#("h" 0 1 (fontified t)) . -2144) (undo-tree-id3028 . -1) 2145) nil (25934 21016 325538 225000) 0 nil])
([nil nil ((2143 . 2147)) nil (25934 21016 325527 648000) 0 nil])
([nil nil ((2148 . 2165)) nil (25934 21016 325522 803000) 0 nil])
([nil nil ((apply -2 2166 2369 undo--wrap-and-run-primitive-undo 2166 2369 ((2182 . 2184) 2326))) nil (25934 21017 944201 429000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 2140) (2139 . 2140) (2138 . 2140) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2138) (2138 . 2139) (t 25934 21017 999307 139000)) nil (25934 21030 473004 314000) 0 nil])
([nil nil ((2139 . 2142)) nil (25934 21030 473002 999000) 0 nil])
([nil nil ((2143 . 2145)) nil (25934 21030 472999 137000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2301) (undo-tree-id3373 . -1) (#("=" 0 1 (face font-lock-comment-face fontified t)) . -2302) (undo-tree-id3374 . -1) 2303 (t 25934 21030 503189 135000)) nil (25934 21080 535382 116000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 2302) (2301 . 2302) (#("]" 0 1 (face font-lock-comment-face fontified nil rear-nonsticky t)) . 2300) (2301 . 2302)) nil (25934 21080 535380 378000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2300) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) 2301) nil (25934 21080 535379 468000) 0 nil])
([nil nil ((2301 . 2302)) nil (25934 21080 535376 608000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2301) (undo-tree-id3368 . -1) 2302) nil (25934 21080 535376 63000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2307 . 2308) (nil fontified nil 2307 . 2308) (nil fontified nil 2301 . 2307) (2301 . 2308)) nil (25934 21080 535374 979000) 0 nil])
([nil nil ((2338 . 2339)) nil (25934 21080 535374 285000) 0 nil])
([nil nil ((apply 2 2156 2338 undo--wrap-and-run-primitive-undo 2156 2338 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2189) 2340))) nil (25934 21080 535373 526000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -2315) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (#("e" 0 1 (fontified t)) . -2316) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (#("i" 0 1 (fontified t)) . -2317) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (#("g" 0 1 (fontified t)) . -2318) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (#("h" 0 1 (fontified t)) . -2319) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (#("t" 0 1 (fontified t)) . -2320) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (#("s" 0 1 (fontified t)) . -2321) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2322) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2323) (#("i" 0 1 (fontified nil)) . -2323) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (#("_" 0 1 (fontified nil)) . -2324) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (#("p" 0 1 (fontified nil)) . -2325) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (#("o" 0 1 (fontified nil)) . -2326) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (#("p" 0 1 (fontified nil)) . -2327) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (#("," 0 1 (fontified t)) . -2328) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (#(" " 0 1 (fontified t)) . -2329) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (#("j" 0 1 (fontified t)) . -2330) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (#("_" 0 1 (fontified t)) . -2331) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (#("p" 0 1 (fontified t)) . -2332) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (#("o" 0 1 (fontified t)) . -2333) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (#("p" 0 1 (fontified t)) . -2334) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2335) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) 2336) nil (25934 21080 535366 394000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2314) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) 2315) nil (25934 21080 535222 915000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2306) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (#("e" 0 1 (fontified t)) . -2307) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (#("l" 0 1 (fontified t)) . -2308) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -2309) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (#("." 0 1 (fontified t)) . -2310) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (#("i" 0 1 (fontified t)) . -2311) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -2312) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (#("i" 0 1 (fontified t)) . -2313) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) 2314) nil (25934 21080 535212 788000) 0 nil])
([nil nil ((2306 . 2310)) nil (25934 21080 535159 868000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2222)) nil (25934 21080 535159 416000) 0 nil])
([nil nil ((2222 . 2223)) nil (25934 21080 535159 55000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2243) (undo-tree-id3055 . -1) 2244) nil (25934 21080 535158 528000) 0 nil])
([nil nil ((2243 . 2244)) nil (25934 21080 535157 535000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2243) (undo-tree-id3054 . -1) 2244) nil (25934 21080 535157 52000) 0 nil])
([nil nil ((2243 . 2244)) nil (25934 21080 535155 965000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2267)) nil (25934 21080 535155 419000) 0 nil])
([nil nil ((2267 . 2268)) nil (25934 21080 535154 870000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2288) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) 2289) nil (25934 21080 535153 249000) 0 nil])
([nil nil ((2288 . 2289)) nil (25934 21080 535094 426000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2299) (undo-tree-id3411 . -1) (#("f" 0 1 (fontified t)) . -2300) (undo-tree-id3412 . -1) (#("i" 0 1 (fontified t)) . -2301) (undo-tree-id3413 . -1) (#("l" 0 1 (fontified t)) . -2302) (undo-tree-id3414 . -1) (#("l" 0 1 (fontified t)) . -2303) (undo-tree-id3415 . -1) (#("_" 0 1 (fontified t)) . -2304) (undo-tree-id3416 . -1) 2305 (t 25934 21080 574727 664000)) nil (25934 21105 327289 575000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 2299) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1)) nil (25934 21105 327284 465000) 0 nil])
([nil nil ((2299 . 2302)) nil (25934 21105 327275 450000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -2305) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) 2306) nil (25934 21105 327271 547000) 0 nil])
([nil nil ((2177 . 2179) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2177) (2172 . 2178) (t 25934 21105 374505 303000)) nil (25934 21145 233598 920000) 0 nil])
([nil nil ((nil fontified nil 2287 . 2288) (nil fontified nil 2286 . 2287) (nil fontified nil 2284 . 2286) (nil fontified nil 2283 . 2284) (nil fontified nil 2278 . 2283) (nil fontified nil 2277 . 2278) (nil fontified nil 2276 . 2277) (nil fontified nil 2269 . 2276) (nil fontified nil 2265 . 2269) (nil fontified nil 2262 . 2265) (nil fontified nil 2261 . 2262) (nil fontified nil 2257 . 2261) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (nil fontified nil 2248 . 2255) (nil fontified nil 2244 . 2248) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2239 . 2241) (nil fontified nil 2238 . 2239) (nil fontified nil 2233 . 2238) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2224 . 2231) (nil fontified nil 2220 . 2224) (nil fontified nil 2217 . 2220) (nil fontified nil 2216 . 2217) (nil fontified nil 2212 . 2216) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2203 . 2210) (nil fontified nil 2199 . 2203) (nil fontified nil 2198 . 2199) (nil fontified nil 2194 . 2198) (nil fontified nil 2182 . 2194) (nil fontified nil 2178 . 2182) (2178 . 2288)) nil (25934 21145 233596 436000) 0 nil])
([nil nil ((2288 . 2294)) nil (25934 21145 233585 948000) 0 nil])
([nil nil ((2295 . 2312) (t 25934 21145 290155 406000)) nil (25934 21226 914616 273000) 0 nil])
([nil nil ((apply -2 2313 2489 undo--wrap-and-run-primitive-undo 2313 2489 ((2329 . 2331) 2446))) nil (25934 21369 719061 936000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . -2242) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2243) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) 2244) nil (25934 21374 689367 954000) 0 nil] [nil nil ((#("l" 0 1 (fontified t)) . -2267) (undo-tree-id3663 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -2268) (undo-tree-id3664 . -1) (#("." 0 1 (fontified nil)) . -2269) (undo-tree-id3665 . -1) (#("c" 0 1 (fontified nil)) . -2270) (undo-tree-id3666 . -1) (#("s" 0 1 (fontified nil)) . -2271) (undo-tree-id3667 . -1) (#("u" 0 1 (fontified t)) . -2272) (undo-tree-id3668 . -1) (#("m" 0 1 (fontified t)) . -2273) (undo-tree-id3669 . -1) (#("N" 0 1 (fontified t)) . -2274) (undo-tree-id3670 . -1) (#("a" 0 1 (fontified t)) . -2275) (undo-tree-id3671 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2276) (undo-tree-id3672 . -1) (#("j" 0 1 (fontified t)) . -2277) (undo-tree-id3673 . -1) (#("_" 0 1 (fontified t)) . -2278) (undo-tree-id3674 . -1) (#("p" 0 1 (fontified t)) . -2279) (undo-tree-id3675 . -1) (#("o" 0 1 (fontified t)) . -2280) (undo-tree-id3676 . -1) (#("p" 0 1 (fontified t)) . -2281) (undo-tree-id3677 . -1) (#(" " 0 1 (fontified t)) . -2282) (undo-tree-id3678 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -2283) (undo-tree-id3679 . -1) (#(" " 0 1 (fontified t)) . -2284) (undo-tree-id3680 . -1) (#("1" 0 1 (fontified t)) . -2285) (undo-tree-id3681 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2286) (undo-tree-id3682 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . -2287) (undo-tree-id3683 . -1) 2288 (t 25934 21226 957467 493000)) ((2267 . 2288)) (25934 21368 516476 587000) 0 nil])
([nil nil ((2242 . 2243)) nil (25934 21374 689247 139000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -2246) (undo-tree-id3563 . -1) (undo-tree-id3565 . -1) (undo-tree-id3567 . -1) (undo-tree-id3569 . -1) (undo-tree-id3571 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3576 . -1) (undo-tree-id3578 . -1) (undo-tree-id3580 . -1) (undo-tree-id3582 . -1) (undo-tree-id3584 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -2247) (undo-tree-id3587 . -1) (undo-tree-id3589 . -1) (undo-tree-id3591 . -1) (undo-tree-id3593 . -1) (undo-tree-id3595 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3600 . -1) (undo-tree-id3602 . -1) (undo-tree-id3604 . -1) (undo-tree-id3606 . -1) (#("." 0 1 (fontified nil)) . -2248) (undo-tree-id3609 . -1) (undo-tree-id3611 . -1) (undo-tree-id3613 . -1) (undo-tree-id3615 . -1) (undo-tree-id3617 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3622 . -1) (undo-tree-id3624 . -1) (undo-tree-id3626 . -1) (#("c" 0 1 (fontified t)) . -2249) (undo-tree-id3629 . -1) (undo-tree-id3631 . -1) (undo-tree-id3633 . -1) (undo-tree-id3635 . -1) (undo-tree-id3637 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3642 . -1) (undo-tree-id3644 . -1) (#("s" 0 1 (fontified t)) . -2250) (undo-tree-id3646 . -1) (#("u" 0 1 (fontified t)) . -2251) (undo-tree-id3647 . -1) (#("m" 0 1 (fontified t)) . -2252) (undo-tree-id3648 . -1) (#("N" 0 1 (fontified t)) . -2253) (undo-tree-id3649 . -1) (#("a" 0 1 (fontified t)) . -2254) (undo-tree-id3650 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2255) (undo-tree-id3651 . -1) (#("j" 0 1 (fontified t)) . -2256) (undo-tree-id3652 . -1) (#("_" 0 1 (fontified t)) . -2257) (undo-tree-id3653 . -1) (#("p" 0 1 (fontified t)) . -2258) (undo-tree-id3654 . -1) (#("o" 0 1 (fontified t)) . -2259) (undo-tree-id3655 . -1) (#("p" 0 1 (fontified t)) . -2260) (undo-tree-id3656 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2261) (undo-tree-id3657 . -1) (#(" " 0 1 (fontified t)) . -2262) (undo-tree-id3658 . -1) (#(":" 0 1 (fontified t)) . -2263) (undo-tree-id3659 . -1) (#(" " 0 1 (fontified t)) . -2264) (undo-tree-id3660 . -1) (#("s" 0 1 (fontified t)) . -2265) (undo-tree-id3661 . -1) (#("e" 0 1 (fontified t)) . -2266) (undo-tree-id3662 . -1) 2267) ((2246 . 2267)) (25934 21367 999525 311000) 0 nil])
([nil nil ((2243 . 2244) (t 25934 21374 736303 120000)) nil (25934 21375 464581 755000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2243) (undo-tree-id3418 . -1) (undo-tree-id3420 . -1) (undo-tree-id3422 . -1) (undo-tree-id3424 . -1) (undo-tree-id3426 . -1) (undo-tree-id3428 . -1) (undo-tree-id3430 . -1) (undo-tree-id3432 . -1) (undo-tree-id3434 . -1) (undo-tree-id3436 . -1) (undo-tree-id3438 . -1) (undo-tree-id3440 . -1) (undo-tree-id3442 . -1) (undo-tree-id3444 . -1) (undo-tree-id3446 . -1) (undo-tree-id3448 . -1) (undo-tree-id3450 . -1) (undo-tree-id3452 . -1) (undo-tree-id3454 . -1) (undo-tree-id3456 . -1) (undo-tree-id3458 . -1) (undo-tree-id3460 . -1) (undo-tree-id3462 . -1) (undo-tree-id3464 . -1) (undo-tree-id3466 . -1) (undo-tree-id3468 . -1) (undo-tree-id3470 . -1) (undo-tree-id3472 . -1) (undo-tree-id3474 . -1) (undo-tree-id3476 . -1) (undo-tree-id3478 . -1) (undo-tree-id3480 . -1) (undo-tree-id3482 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3487 . -1) (undo-tree-id3489 . -1) (undo-tree-id3491 . -1) (#("s" 0 1 (fontified t)) . -2244) (undo-tree-id3494 . -1) (undo-tree-id3496 . -1) (undo-tree-id3498 . -1) (undo-tree-id3500 . -1) (undo-tree-id3502 . -1) (undo-tree-id3504 . -1) (undo-tree-id3506 . -1) (undo-tree-id3508 . -1) (undo-tree-id3510 . -1) (undo-tree-id3512 . -1) (undo-tree-id3514 . -1) (undo-tree-id3516 . -1) (undo-tree-id3518 . -1) (undo-tree-id3520 . -1) (undo-tree-id3522 . -1) (undo-tree-id3524 . -1) (undo-tree-id3526 . -1) (undo-tree-id3528 . -1) (undo-tree-id3530 . -1) (undo-tree-id3532 . -1) (undo-tree-id3534 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -2245) (undo-tree-id3537 . -1) (undo-tree-id3539 . -1) (undo-tree-id3541 . -1) (undo-tree-id3543 . -1) (undo-tree-id3545 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3550 . -1) (undo-tree-id3552 . -1) (undo-tree-id3554 . -1) (undo-tree-id3556 . -1) (undo-tree-id3558 . -1) (undo-tree-id3560 . -1) 2246) ((2243 . 2246) (t 25934 21248 377292 738000)) (25934 21248 335414 931000) 0 nil])
([nil nil ((#("                print(self.Wab.weight.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1], self.csumNa[j_pop] : self.csumNa[j_pop + 1]].shape)
" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (face font-lock-keyword-face fontified t) 26 38 (fontified t) 38 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-3-face) fontified t) 55 56 (fontified t) 56 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 64 (fontified t) 64 68 (face font-lock-keyword-face fontified t) 68 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-3-face) fontified t) 76 77 (fontified t) 77 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 85 (fontified t) 85 86 (face (rainbow-delimiters-depth-3-face) fontified t) 86 88 (fontified t) 88 89 (face font-lock-keyword-face fontified t) 89 90 (face font-lock-keyword-face fontified t) 90 91 (face font-lock-keyword-face fontified t) 91 92 (face font-lock-keyword-face fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-3-face) fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-3-face) fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (face font-lock-keyword-face fontified t) 110 111 (face font-lock-keyword-face fontified t) 111 112 (face font-lock-keyword-face fontified t) 112 113 (face font-lock-keyword-face fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (face (rainbow-delimiters-depth-3-face) fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (face font-lock-operator-face fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (face (rainbow-delimiters-depth-3-face) fontified t) 131 132 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 132 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-1-face) fontified t) 139 140 (fontified t)) . -2156) (undo-tree-id3853 . -88) (undo-tree-id3854 . -16) (undo-tree-id3855 . -16) (undo-tree-id3856 . -16) (undo-tree-id3857 . -16) (undo-tree-id3858 . -16) (undo-tree-id3859 . -16) (undo-tree-id3860 . -16) (undo-tree-id3861 . -16) (undo-tree-id3862 . -16) (undo-tree-id3863 . -22) (undo-tree-id3864 . -138) (undo-tree-id3865 . -138) (undo-tree-id3866 . -138) (undo-tree-id3867 . -138) (undo-tree-id3868 . -86) (undo-tree-id3869 . -86) (undo-tree-id3870 . -86) (undo-tree-id3871 . -86) (undo-tree-id3872 . -88) (undo-tree-id3873 . -88) (undo-tree-id3874 . -88) (undo-tree-id3875 . -88) (undo-tree-id3876 . -88) (undo-tree-id3877 . -88) (undo-tree-id3878 . -140) 2296 (t 25934 21375 512297 241000)) nil (25934 21401 134595 962000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2155) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) 2156) nil (25934 21401 134576 471000) 0 nil])
([nil nil ((2155 . 2156)) nil (25934 21401 134552 31000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2189) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2189)) nil (25934 21401 134551 191000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 2253)) nil (25934 21401 134550 307000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2253)) nil (25934 21401 134549 622000) 0 nil])
([nil nil ((2253 . 2255)) nil (25934 21401 134548 864000) 0 nil])
([nil nil ((2255 . 2292) (#(" " 0 1 (fontified nil)) . 2254) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (2255 . 2256)) nil (25934 21547 922703 73000) 0 nil])
([nil nil ((nil fontified t 2417 . 2418) (t 25934 21551 303016 611000) (nil face font-lock-comment-face 2417 . 2418) (t 25934 21551 303016 611000) (nil fontified t 2416 . 2417) (t 25934 21551 303016 611000) (nil face font-lock-comment-face 2416 . 2417) (t 25934 21551 303016 611000) (#("][" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t)) . -2416) (t 25934 21551 303016 611000) (2418 . 2420) (t 25934 21551 303016 611000)) nil (25934 21579 460488 209000) 0 nil] [nil nil ((2342 . 2359) (t 25934 21401 176104 37000)) ((#("
                " 0 17 (fontified t)) . 2342)) (25934 21547 445412 517000) 0 nil])
([nil nil ((nil fontified t 3266 . 3267) (nil face (rainbow-delimiters-depth-1-face) 3266 . 3267) (nil fontified t 3265 . 3266) (nil face (rainbow-delimiters-depth-1-face) 3265 . 3266) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3265) (3267 . 3269)) nil (25934 21579 460485 560000) 0 nil])
([nil nil ((2064 . 2080) (#("                " 0 16 (fontified nil)) . 2063) (undo-tree-id3879 . -16) (2079 . 2080) (t 25934 21403 296088 182000)) ((#("
" 0 1 (fontified nil)) . 2079) (2063 . 2079) (#("                " 0 16 (fontified t)) . 2064)) (25934 21547 231642 23000) 0 nil])
([nil nil ((nil fontified t 3486 . 3487) (nil face (rainbow-delimiters-depth-2-face) 3486 . 3487) (nil fontified t 3485 . 3486) (nil face (rainbow-delimiters-depth-2-face) 3485 . 3486) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3485) (3487 . 3489)) nil (25934 21579 460484 151000) 0 nil])
([nil nil ((2466 . 2482) (#("        " 0 8 (fontified t)) . 2466) (t 25934 21405 432072 223000)) ((2466 . 2474) (#("                " 0 8 (fontified t) 8 12 (fontified t) 12 16 (fontified t)) . 2466) (undo-tree-id5014 . -8) (undo-tree-id5015 . -8) (undo-tree-id5016 . -12) (undo-tree-id5017 . -12) (undo-tree-id5018 . -12) (undo-tree-id5019 . -12) (undo-tree-id5020 . -12) (undo-tree-id5021 . -12) (undo-tree-id5022 . -12) (undo-tree-id5023 . -12) (undo-tree-id5024 . -12) (undo-tree-id5025 . -12) (undo-tree-id5026 . -12) (undo-tree-id5027 . -12) (undo-tree-id5028 . -12) (undo-tree-id5029 . -12) (undo-tree-id5030 . -12) (undo-tree-id5031 . -12) (undo-tree-id5032 . -12) (undo-tree-id5033 . -12) (undo-tree-id5034 . -12) (undo-tree-id5035 . -12) (undo-tree-id5036 . -12) (undo-tree-id5037 . -12) (undo-tree-id5038 . -12) (undo-tree-id5039 . -12) (undo-tree-id5040 . -16) (undo-tree-id5041 . -16) (undo-tree-id5042 . -16) (undo-tree-id5043 . -16) (undo-tree-id5044 . -16) (undo-tree-id5045 . -16) (undo-tree-id5046 . -16) (undo-tree-id5047 . -16) (undo-tree-id5048 . -16) (undo-tree-id5049 . -16) (undo-tree-id5050 . -16) (undo-tree-id5051 . -16) (undo-tree-id5052 . -16) (undo-tree-id5053 . -16) (undo-tree-id5054 . -16) (undo-tree-id5055 . -16) (undo-tree-id5056 . -16) (undo-tree-id5057 . -16) (undo-tree-id5058 . -16) (undo-tree-id5059 . -16) (undo-tree-id5060 . -16) (undo-tree-id5061 . -16) (undo-tree-id5062 . -16) (undo-tree-id5063 . -16) (undo-tree-id5064 . -16) (undo-tree-id5065 . -16) (undo-tree-id5066 . -16) (undo-tree-id5067 . -16) (undo-tree-id5068 . -16) (undo-tree-id5069 . -16) (undo-tree-id5070 . -16) (undo-tree-id5071 . -16) (undo-tree-id5072 . -16)) (25934 21546 809839 727000) 0 nil])
([nil nil ((nil fontified t 3549 . 3550) (nil face (rainbow-delimiters-depth-1-face) 3549 . 3550) (nil fontified t 3548 . 3549) (nil face (rainbow-delimiters-depth-1-face) 3548 . 3549) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3548) (3550 . 3552)) nil (25934 21579 460482 826000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2478) (undo-tree-id3970 . -4) (undo-tree-id3972 . -4) (undo-tree-id3974 . -4) (undo-tree-id3976 . -4) (undo-tree-id3978 . -4) (undo-tree-id3980 . -4) (undo-tree-id3982 . -4) (undo-tree-id3984 . -4) (undo-tree-id3986 . -4) (undo-tree-id3988 . -4) (undo-tree-id3990 . -4) (undo-tree-id3992 . -4) (undo-tree-id3994 . -4) (undo-tree-id3996 . -4) (undo-tree-id3998 . -4) (undo-tree-id4000 . -4) (undo-tree-id4002 . -4) (undo-tree-id4004 . -4) (undo-tree-id4006 . -4) (undo-tree-id4008 . -4) (undo-tree-id4010 . -4) (undo-tree-id4012 . -4) (undo-tree-id4014 . -4) (undo-tree-id4016 . -4) (undo-tree-id4017 . -4) (undo-tree-id4019 . -4) (undo-tree-id4021 . -4) (undo-tree-id4023 . -4) 2482) ((2478 . 2482)) (25934 21546 627520 697000) 0 nil])
([nil nil ((nil fontified t 3654 . 3655) (nil face (rainbow-delimiters-depth-1-face) 3654 . 3655) (nil fontified t 3653 . 3654) (nil face (rainbow-delimiters-depth-1-face) 3653 . 3654) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3653) (3655 . 3657)) nil (25934 21579 460481 404000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2474) (undo-tree-id3881 . -4) (undo-tree-id3883 . -4) (undo-tree-id3885 . -4) (undo-tree-id3887 . -4) (undo-tree-id3889 . -4) (undo-tree-id3891 . -4) (undo-tree-id3893 . -4) (undo-tree-id3895 . -4) (undo-tree-id3897 . -4) (undo-tree-id3899 . -4) (undo-tree-id3901 . -4) (undo-tree-id3903 . -4) (undo-tree-id3905 . -4) (undo-tree-id3907 . -4) (undo-tree-id3909 . -4) (undo-tree-id3911 . -4) (undo-tree-id3913 . -4) (undo-tree-id3915 . -4) (undo-tree-id3917 . -4) (undo-tree-id3919 . -4) (undo-tree-id3921 . -4) (undo-tree-id3923 . -4) (undo-tree-id3925 . -4) (undo-tree-id3927 . -4) (undo-tree-id3929 . -4) (undo-tree-id3931 . -4) (undo-tree-id3933 . -4) (undo-tree-id3935 . -4) (undo-tree-id3937 . -4) (undo-tree-id3939 . -4) (undo-tree-id3941 . -4) (undo-tree-id3943 . -4) (undo-tree-id3945 . -4) (undo-tree-id3947 . -4) (undo-tree-id3949 . -4) (undo-tree-id3951 . -4) (undo-tree-id3953 . -4) (undo-tree-id3955 . -4) (undo-tree-id3957 . -4) (undo-tree-id3959 . -4) (undo-tree-id3961 . -4) (undo-tree-id3963 . -4) (undo-tree-id3965 . -4) (undo-tree-id3967 . -4) 2478) ((2474 . 2478)) (25934 21546 438242 642000) 0 nil])
([nil nil ((nil fontified t 8134 . 8135) (nil face (rainbow-delimiters-depth-1-face) 8134 . 8135) (nil fontified t 8133 . 8134) (nil face (rainbow-delimiters-depth-1-face) 8133 . 8134) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8133) (8135 . 8137)) nil (25934 21579 460480 103000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3283) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3283) (t 25934 21412 508019 468000)) ((3283 . 3284) (3283 . 3284)) (25934 21545 927554 908000) 0 nil])
([nil nil ((nil fontified t 8873 . 8874) (nil face (rainbow-delimiters-depth-1-face) 8873 . 8874) (nil fontified t 8872 . 8873) (nil face (rainbow-delimiters-depth-1-face) 8872 . 8873) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8872) (8874 . 8876)) nil (25934 21579 460478 559000) 0 nil])
([nil nil ((3283 . 3285)) ((#(", " 0 2 (fontified t)) . 3283) (undo-tree-id5013 . -2)) (25934 21545 594312 43000) 0 nil])
([nil nil ((nil fontified t 9181 . 9182) (nil face (rainbow-delimiters-depth-1-face) 9181 . 9182) (nil fontified t 9180 . 9181) (nil face (rainbow-delimiters-depth-1-face) 9180 . 9181) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9180) (9182 . 9184)) nil (25934 21579 460477 61000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3503) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3503)) ((3503 . 3504) (3503 . 3504)) (25934 21545 380239 180000) 0 nil])
([nil nil ((nil fontified t 9665 . 9666) (nil face (rainbow-delimiters-depth-1-face) 9665 . 9666) (nil fontified t 9664 . 9665) (nil face (rainbow-delimiters-depth-1-face) 9664 . 9665) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9664) (9666 . 9668)) nil (25934 21579 460475 623000) 0 nil])
([nil nil ((3503 . 3505)) ((#("n " 0 1 (fontified t) 1 2 (fontified t)) . 3503) (undo-tree-id4973 . -2) (undo-tree-id4974 . -2) (undo-tree-id4975 . -2) (undo-tree-id4976 . -2) (undo-tree-id4977 . -2) (undo-tree-id4978 . -2) (undo-tree-id4979 . -2) (undo-tree-id4980 . -2) (undo-tree-id4981 . -2) (undo-tree-id4982 . -2) (undo-tree-id4983 . -2) (undo-tree-id4984 . -2) (undo-tree-id4985 . -2) (undo-tree-id4986 . -2) (undo-tree-id4987 . -2) (undo-tree-id4988 . -2) (undo-tree-id4989 . -2) (undo-tree-id4990 . -2) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) (undo-tree-id4995 . -2) (undo-tree-id4996 . -2) (undo-tree-id4997 . -2) (undo-tree-id4998 . -2) (undo-tree-id4999 . -2) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -2) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2)) (25934 21544 917978 277000) 0 nil])
([nil nil ((nil fontified t 9707 . 9708) (nil face (rainbow-delimiters-depth-1-face) 9707 . 9708) (nil fontified t 9706 . 9707) (nil face (rainbow-delimiters-depth-1-face) 9706 . 9707) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9706) (9708 . 9710)) nil (25934 21579 460474 298000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3503) (undo-tree-id4033 . -1) (#(" " 0 1 (fontified t)) . -3504) (undo-tree-id4034 . -1) 3505) ((3503 . 3505)) (25934 21544 488592 578000) 0 nil])
([nil nil ((nil fontified t 9734 . 9735) (nil face (rainbow-delimiters-depth-1-face) 9734 . 9735) (nil fontified t 9733 . 9734) (nil face (rainbow-delimiters-depth-1-face) 9733 . 9734) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9733) (9735 . 9737)) nil (25934 21579 460472 691000) 0 nil])
([nil nil ((3503 . 3505)) ((#(", " 0 2 (fontified t)) . 3503) (undo-tree-id4970 . -2) (undo-tree-id4971 . -2) (undo-tree-id4972 . -2)) (25934 21543 835790 683000) 0 nil])
([nil nil ((nil fontified t 9823 . 9824) (nil face (rainbow-delimiters-depth-1-face) 9823 . 9824) (nil fontified t 9822 . 9823) (nil face (rainbow-delimiters-depth-1-face) 9822 . 9823) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9822) (9824 . 9826)) nil (25934 21579 460470 906000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3566) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3566)) ((3566 . 3567) (3566 . 3567)) (25934 21543 629194 905000) 0 nil])
([nil nil ((nil fontified t 10039 . 10040) (nil face (rainbow-delimiters-depth-1-face) 10039 . 10040) (nil fontified t 10038 . 10039) (nil face (rainbow-delimiters-depth-1-face) 10038 . 10039) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10038) (10040 . 10042)) nil (25934 21579 460469 307000) 0 nil])
([nil nil ((3566 . 3567)) ((#("n" 0 1 (fontified t)) . 3566) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1)) (25934 21543 15598 972000) 0 nil])
([nil nil ((nil fontified t 10286 . 10287) (nil face (rainbow-delimiters-depth-1-face) 10286 . 10287) (nil fontified t 10285 . 10286) (nil face (rainbow-delimiters-depth-1-face) 10285 . 10286) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10285) (10287 . 10289)) nil (25934 21579 460466 787000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3566) (undo-tree-id4026 . -1) 3567) ((3566 . 3567)) (25934 21542 579597 623000) 0 nil])
([nil nil ((nil fontified t 10357 . 10358) (nil face (rainbow-delimiters-depth-1-face) 10357 . 10358) (nil fontified t 10356 . 10357) (nil face (rainbow-delimiters-depth-1-face) 10356 . 10357) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10356) (10358 . 10360)) nil (25934 21579 460465 236000) 0 nil])
([nil nil ((3566 . 3568)) ((#(", " 0 2 (fontified t)) . 3566) (undo-tree-id4911 . -2) (undo-tree-id4912 . -2) (undo-tree-id4913 . -2)) (25934 21542 385148 764000) 0 nil])
([nil nil ((nil fontified t 10477 . 10478) (nil face (rainbow-delimiters-depth-2-face) 10477 . 10478) (nil fontified t 10476 . 10477) (nil face (rainbow-delimiters-depth-2-face) 10476 . 10477) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10476) (10478 . 10480)) nil (25934 21579 460463 595000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3671) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3671)) ((3671 . 3672) (3671 . 3672)) (25934 21542 363272 560000) 0 nil])
([nil nil ((nil fontified t 10558 . 10559) (nil face (rainbow-delimiters-depth-2-face) 10558 . 10559) (nil fontified t 10557 . 10558) (nil face (rainbow-delimiters-depth-2-face) 10557 . 10558) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10557) (10559 . 10561)) nil (25934 21579 460461 708000) 0 nil])
([nil nil ((3671 . 3673)) ((#(", " 0 2 (fontified t)) . 3671) (undo-tree-id4908 . -2) (undo-tree-id4909 . -2) (undo-tree-id4910 . -2)) (25934 21542 41234 404000) 0 nil])
([nil nil ((nil fontified t 10751 . 10752) (nil face (rainbow-delimiters-depth-1-face) 10751 . 10752) (nil fontified t 10750 . 10751) (nil face (rainbow-delimiters-depth-1-face) 10750 . 10751) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10750) (10752 . 10754)) nil (25934 21579 460459 871000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8151) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8151) (t 25934 21471 427586 641000)) ((8151 . 8152) (8151 . 8152)) (25934 21541 875797 33000) 0 nil])
([nil nil ((nil fontified t 10810 . 10811) (nil face (rainbow-delimiters-depth-1-face) 10810 . 10811) (nil fontified t 10809 . 10810) (nil face (rainbow-delimiters-depth-1-face) 10809 . 10810) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10809) (10811 . 10813)) nil (25934 21579 460458 290000) 0 nil])
([nil nil ((8151 . 8153)) ((#(", " 0 2 (fontified t)) . 8151) (undo-tree-id4905 . -2) (undo-tree-id4906 . -2) (undo-tree-id4907 . -2)) (25934 21541 711058 878000) 0 nil])
([nil nil ((nil fontified t 10905 . 10906) (nil face (rainbow-delimiters-depth-2-face) 10905 . 10906) (nil fontified t 10904 . 10905) (nil face (rainbow-delimiters-depth-2-face) 10904 . 10905) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10904) (10906 . 10908)) nil (25934 21579 460456 682000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8890) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8890) (t 25934 21477 299544 107000)) ((8890 . 8891) (8890 . 8891)) (25934 21541 544173 151000) 0 nil])
([nil nil ((nil fontified t 11041 . 11042) (nil face (rainbow-delimiters-depth-2-face) 11041 . 11042) (nil fontified t 11040 . 11041) (nil face (rainbow-delimiters-depth-2-face) 11040 . 11041) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11040) (11042 . 11044)) nil (25934 21579 460454 981000) 0 nil])
([nil nil ((8890 . 8892)) ((#(", " 0 2 (fontified t)) . 8890) (undo-tree-id4832 . -2) (undo-tree-id4833 . -2) (undo-tree-id4834 . -2) (undo-tree-id4835 . -2) (undo-tree-id4836 . -2) (undo-tree-id4837 . -2) (undo-tree-id4838 . -2) (undo-tree-id4839 . -2) (undo-tree-id4840 . -2) (undo-tree-id4841 . -2) (undo-tree-id4842 . -2) (undo-tree-id4843 . -2) (undo-tree-id4844 . -2) (undo-tree-id4845 . -2) (undo-tree-id4846 . -2) (undo-tree-id4847 . -2) (undo-tree-id4848 . -2) (undo-tree-id4849 . -2) (undo-tree-id4850 . -2) (undo-tree-id4851 . -2) (undo-tree-id4852 . -2) (undo-tree-id4853 . -2) (undo-tree-id4854 . -2) (undo-tree-id4855 . -2) (undo-tree-id4856 . -2) (undo-tree-id4857 . -2) (undo-tree-id4858 . -2) (undo-tree-id4859 . -2) (undo-tree-id4860 . -2) (undo-tree-id4861 . -2) (undo-tree-id4862 . -2) (undo-tree-id4863 . -2) (undo-tree-id4864 . -2) (undo-tree-id4865 . -2) (undo-tree-id4866 . -2) (undo-tree-id4867 . -2) (undo-tree-id4868 . -2) (undo-tree-id4869 . -2) (undo-tree-id4870 . -2) (undo-tree-id4871 . -2) (undo-tree-id4872 . -2) (undo-tree-id4873 . -2) (undo-tree-id4874 . -2) (undo-tree-id4875 . -2) (undo-tree-id4876 . -2) (undo-tree-id4877 . -2) (undo-tree-id4878 . -2) (undo-tree-id4879 . -2) (undo-tree-id4880 . -2) (undo-tree-id4881 . -2) (undo-tree-id4882 . -2) (undo-tree-id4883 . -2) (undo-tree-id4884 . -2) (undo-tree-id4885 . -2) (undo-tree-id4886 . -2) (undo-tree-id4887 . -2) (undo-tree-id4888 . -2) (undo-tree-id4889 . -2) (undo-tree-id4890 . -2) (undo-tree-id4891 . -2) (undo-tree-id4892 . -2) (undo-tree-id4893 . -2) (undo-tree-id4894 . -2) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) (undo-tree-id4897 . -2) (undo-tree-id4898 . -2) (undo-tree-id4899 . -2) (undo-tree-id4900 . -2) (undo-tree-id4901 . -2) (undo-tree-id4902 . -2) (undo-tree-id4903 . -2) (undo-tree-id4904 . -2)) (25934 21541 378201 319000) 0 nil])
([nil nil ((nil fontified t 11096 . 11097) (nil face (rainbow-delimiters-depth-1-face) 11096 . 11097) (nil fontified t 11095 . 11096) (nil face (rainbow-delimiters-depth-1-face) 11095 . 11096) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11095) (11097 . 11099)) nil (25934 21579 460453 515000) 0 nil])
([nil nil ((8893 . 8895) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8893) (undo-tree-id4214 . -1) (8892 . 8894) (t 25934 21482 475506 701000)) ((#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8892) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (8893 . 8894) (#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8893) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1)) (25934 21541 203158 973000) 0 nil])
([nil nil ((nil fontified t 11189 . 11190) (nil face (rainbow-delimiters-depth-2-face) 11189 . 11190) (nil fontified t 11188 . 11189) (nil face (rainbow-delimiters-depth-2-face) 11188 . 11189) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11188) (11190 . 11192)) nil (25934 21579 460452 7000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8892) (undo-tree-id4036 . -1) (undo-tree-id4038 . -1) (undo-tree-id4040 . -1) (undo-tree-id4042 . -1) (undo-tree-id4044 . -1) (undo-tree-id4046 . -1) (undo-tree-id4048 . -1) (undo-tree-id4050 . -1) (undo-tree-id4052 . -1) (undo-tree-id4054 . -1) (undo-tree-id4056 . -1) (undo-tree-id4058 . -1) (undo-tree-id4060 . -1) (undo-tree-id4062 . -1) (undo-tree-id4064 . -1) (undo-tree-id4066 . -1) (undo-tree-id4068 . -1) (undo-tree-id4070 . -1) (undo-tree-id4072 . -1) (undo-tree-id4074 . -1) (undo-tree-id4076 . -1) (undo-tree-id4078 . -1) (undo-tree-id4080 . -1) (undo-tree-id4082 . -1) (undo-tree-id4084 . -1) (undo-tree-id4086 . -1) (undo-tree-id4088 . -1) (undo-tree-id4090 . -1) (undo-tree-id4092 . -1) (undo-tree-id4094 . -1) (undo-tree-id4096 . -1) (undo-tree-id4098 . -1) (undo-tree-id4100 . -1) (undo-tree-id4102 . -1) (undo-tree-id4104 . -1) (undo-tree-id4106 . -1) (undo-tree-id4108 . -1) (undo-tree-id4110 . -1) (undo-tree-id4112 . -1) (undo-tree-id4114 . -1) (undo-tree-id4116 . -1) (undo-tree-id4118 . -1) (undo-tree-id4120 . -1) (undo-tree-id4122 . -1) (undo-tree-id4124 . -1) (undo-tree-id4126 . -1) (undo-tree-id4128 . -1) (undo-tree-id4130 . -1) (undo-tree-id4132 . -1) (undo-tree-id4134 . -1) (undo-tree-id4136 . -1) (undo-tree-id4138 . -1) (undo-tree-id4140 . -1) (undo-tree-id4142 . -1) (undo-tree-id4144 . -1) (undo-tree-id4146 . -1) (undo-tree-id4148 . -1) (undo-tree-id4150 . -1) (undo-tree-id4152 . -1) (undo-tree-id4154 . -1) (undo-tree-id4156 . -1) (undo-tree-id4158 . -1) (undo-tree-id4160 . -1) (undo-tree-id4162 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8893) (undo-tree-id4164 . -1) (undo-tree-id4166 . -1) (undo-tree-id4168 . -1) (undo-tree-id4170 . -1) (undo-tree-id4172 . -1) (undo-tree-id4174 . -1) (undo-tree-id4176 . -1) (undo-tree-id4178 . -1) (undo-tree-id4180 . -1) (undo-tree-id4182 . -1) (undo-tree-id4184 . -1) (undo-tree-id4186 . -1) (undo-tree-id4188 . -1) (undo-tree-id4190 . -1) (undo-tree-id4192 . -1) (undo-tree-id4194 . -1) (undo-tree-id4196 . -1) (undo-tree-id4198 . -1) (undo-tree-id4200 . -1) (undo-tree-id4202 . -1) (undo-tree-id4204 . -1) (undo-tree-id4206 . -1) (undo-tree-id4208 . -1) (undo-tree-id4210 . -1) (undo-tree-id4212 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8894)) ((8892 . 8895)) (25934 21541 45119 631000) 0 nil])
([nil nil ((nil fontified t 14890 . 14891) (nil face (rainbow-delimiters-depth-1-face) 14890 . 14891) (nil fontified t 14889 . 14890) (nil face (rainbow-delimiters-depth-1-face) 14889 . 14890) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14889) (14891 . 14893)) nil (25934 21579 460450 674000) 0 nil])
([nil nil ((8850 . 8866) (#("            " 0 12 (fontified t)) . 8850) 8892 (t 25934 21485 267486 557000)) ((8850 . 8862) (#("                " 0 4 (fontified t) 4 8 (fontified t) 8 12 (fontified t) 12 16 (fontified t)) . 8850) (undo-tree-id4682 . -4) (undo-tree-id4683 . -4) (undo-tree-id4684 . -4) (undo-tree-id4685 . -4) (undo-tree-id4686 . -4) (undo-tree-id4687 . -4) (undo-tree-id4688 . -4) (undo-tree-id4689 . -4) (undo-tree-id4690 . -4) (undo-tree-id4691 . -4) (undo-tree-id4692 . -4) (undo-tree-id4693 . -4) (undo-tree-id4694 . -4) (undo-tree-id4695 . -4) (undo-tree-id4696 . -4) (undo-tree-id4697 . -4) (undo-tree-id4698 . -4) (undo-tree-id4699 . -4) (undo-tree-id4700 . -4) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -4) (undo-tree-id4704 . -4) (undo-tree-id4705 . -4) (undo-tree-id4706 . -8) (undo-tree-id4707 . -8) (undo-tree-id4708 . -8) (undo-tree-id4709 . -8) (undo-tree-id4710 . -8) (undo-tree-id4711 . -8) (undo-tree-id4712 . -8) (undo-tree-id4713 . -8) (undo-tree-id4714 . -8) (undo-tree-id4715 . -8) (undo-tree-id4716 . -8) (undo-tree-id4717 . -8) (undo-tree-id4718 . -8) (undo-tree-id4719 . -8) (undo-tree-id4720 . -8) (undo-tree-id4721 . -8) (undo-tree-id4722 . -8) (undo-tree-id4723 . -8) (undo-tree-id4724 . -8) (undo-tree-id4725 . -8) (undo-tree-id4726 . -8) (undo-tree-id4727 . -8) (undo-tree-id4728 . -8) (undo-tree-id4729 . -8) (undo-tree-id4730 . -12) (undo-tree-id4731 . -12) (undo-tree-id4732 . -12) (undo-tree-id4733 . -12) (undo-tree-id4734 . -12) (undo-tree-id4735 . -12) (undo-tree-id4736 . -12) (undo-tree-id4737 . -12) (undo-tree-id4738 . -12) (undo-tree-id4739 . -12) (undo-tree-id4740 . -12) (undo-tree-id4741 . -12) (undo-tree-id4742 . -12) (undo-tree-id4743 . -12) (undo-tree-id4744 . -12) (undo-tree-id4745 . -12) (undo-tree-id4746 . -12) (undo-tree-id4747 . -12) (undo-tree-id4748 . -12) (undo-tree-id4749 . -12) (undo-tree-id4750 . -12) (undo-tree-id4751 . -12) (undo-tree-id4752 . -12) (undo-tree-id4753 . -12) (undo-tree-id4754 . -16) (undo-tree-id4755 . -16) (undo-tree-id4756 . -16) (undo-tree-id4757 . -16) (undo-tree-id4758 . -16) (undo-tree-id4759 . -16) (undo-tree-id4760 . -16) (undo-tree-id4761 . -16) (undo-tree-id4762 . -16) (undo-tree-id4763 . -16) (undo-tree-id4764 . -16) (undo-tree-id4765 . -16) (undo-tree-id4766 . -16) (undo-tree-id4767 . -16) (undo-tree-id4768 . -16) (undo-tree-id4769 . -16) (undo-tree-id4770 . -16) (undo-tree-id4771 . -16) (undo-tree-id4772 . -16) (undo-tree-id4773 . -16) (undo-tree-id4774 . -16) (undo-tree-id4775 . -16) (undo-tree-id4776 . -16) (undo-tree-id4777 . -16) (undo-tree-id4778 . -16) (undo-tree-id4779 . -16)) (25934 21540 869785 513000) 0 nil])
([nil nil ((nil fontified t 15001 . 15002) (nil face (rainbow-delimiters-depth-1-face) 15001 . 15002) (nil fontified t 15000 . 15001) (nil face (rainbow-delimiters-depth-1-face) 15000 . 15001) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15000) (15002 . 15004)) nil (25934 21579 460449 296000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8862) (undo-tree-id4593 . -4) 8866) ((8862 . 8866)) (25934 21540 696008 13000) 0 nil])
([nil nil ((nil fontified t 15214 . 15215) (nil face (rainbow-delimiters-depth-1-face) 15214 . 15215) (nil fontified t 15213 . 15214) (nil face (rainbow-delimiters-depth-1-face) 15213 . 15214) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15213) (15215 . 15217)) nil (25934 21579 460447 785000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8858) (undo-tree-id4529 . -4) (undo-tree-id4531 . -4) (undo-tree-id4533 . -4) (undo-tree-id4535 . -4) (undo-tree-id4537 . -4) (undo-tree-id4539 . -4) (undo-tree-id4541 . -4) (undo-tree-id4543 . -4) (undo-tree-id4545 . -4) (undo-tree-id4547 . -4) (undo-tree-id4549 . -4) (undo-tree-id4551 . -4) (undo-tree-id4553 . -4) (undo-tree-id4555 . -4) (undo-tree-id4557 . -4) (undo-tree-id4559 . -4) (undo-tree-id4561 . -4) (undo-tree-id4563 . -4) (undo-tree-id4565 . -4) (undo-tree-id4567 . -4) (undo-tree-id4569 . -4) (undo-tree-id4571 . -4) (undo-tree-id4573 . -4) (undo-tree-id4575 . -4) (undo-tree-id4577 . -4) (undo-tree-id4579 . -4) (undo-tree-id4581 . -4) (undo-tree-id4583 . -4) (undo-tree-id4585 . -4) (undo-tree-id4587 . -4) (undo-tree-id4589 . -4) (undo-tree-id4591 . -4) 8862) ((8858 . 8862)) (25934 21540 546215 972000) 0 nil])
([nil nil ((#("][" 0 2 (face font-lock-comment-face fontified t)) . -15457) (15459 . 15461)) nil (25934 21579 460446 271000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8854) (undo-tree-id4410 . -4) (undo-tree-id4412 . -4) (undo-tree-id4414 . -4) (undo-tree-id4416 . -4) (undo-tree-id4418 . -4) (undo-tree-id4420 . -4) (undo-tree-id4422 . -4) (undo-tree-id4424 . -4) (undo-tree-id4426 . -4) (undo-tree-id4428 . -4) (undo-tree-id4430 . -4) (undo-tree-id4432 . -4) (undo-tree-id4434 . -4) (undo-tree-id4436 . -4) (undo-tree-id4438 . -4) (undo-tree-id4440 . -4) (undo-tree-id4442 . -4) (undo-tree-id4444 . -4) (undo-tree-id4446 . -4) (undo-tree-id4448 . -4) (undo-tree-id4450 . -4) (undo-tree-id4452 . -4) (undo-tree-id4454 . -4) (undo-tree-id4456 . -4) (undo-tree-id4458 . -4) (undo-tree-id4460 . -4) (undo-tree-id4462 . -4) (undo-tree-id4464 . -4) (undo-tree-id4466 . -4) (undo-tree-id4468 . -4) (undo-tree-id4470 . -4) (undo-tree-id4472 . -4) (undo-tree-id4474 . -4) (undo-tree-id4476 . -4) (undo-tree-id4478 . -4) (undo-tree-id4480 . -4) (undo-tree-id4482 . -4) (undo-tree-id4484 . -4) (undo-tree-id4486 . -4) (undo-tree-id4488 . -4) (undo-tree-id4490 . -4) (undo-tree-id4492 . -4) (undo-tree-id4494 . -4) (undo-tree-id4496 . -4) (undo-tree-id4498 . -4) (undo-tree-id4500 . -4) (undo-tree-id4502 . -4) (undo-tree-id4504 . -4) (undo-tree-id4506 . -4) (undo-tree-id4508 . -4) (undo-tree-id4510 . -4) (undo-tree-id4512 . -4) (undo-tree-id4514 . -4) (undo-tree-id4516 . -4) (undo-tree-id4518 . -4) (undo-tree-id4520 . -4) (undo-tree-id4522 . -4) (undo-tree-id4524 . -4) (undo-tree-id4526 . -4) 8858) ((8854 . 8858)) (25934 21540 388078 457000) 0 nil])
([nil nil ((nil fontified t 15561 . 15562) (nil face (rainbow-delimiters-depth-1-face) 15561 . 15562) (nil fontified t 15560 . 15561) (nil face (rainbow-delimiters-depth-1-face) 15560 . 15561) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15560) (15562 . 15564)) nil (25934 21579 460444 903000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8850) (undo-tree-id4265 . -4) (undo-tree-id4267 . -4) (undo-tree-id4269 . -4) (undo-tree-id4271 . -4) (undo-tree-id4273 . -4) (undo-tree-id4275 . -4) (undo-tree-id4277 . -4) (undo-tree-id4279 . -4) (undo-tree-id4281 . -4) (undo-tree-id4283 . -4) (undo-tree-id4285 . -4) (undo-tree-id4287 . -4) (undo-tree-id4289 . -4) (undo-tree-id4291 . -4) (undo-tree-id4293 . -4) (undo-tree-id4295 . -4) (undo-tree-id4297 . -4) (undo-tree-id4299 . -4) (undo-tree-id4301 . -4) (undo-tree-id4303 . -4) (undo-tree-id4305 . -4) (undo-tree-id4307 . -4) (undo-tree-id4309 . -4) (undo-tree-id4311 . -4) (undo-tree-id4313 . -4) (undo-tree-id4315 . -4) (undo-tree-id4317 . -4) (undo-tree-id4319 . -4) (undo-tree-id4321 . -4) (undo-tree-id4323 . -4) (undo-tree-id4325 . -4) (undo-tree-id4327 . -4) (undo-tree-id4329 . -4) (undo-tree-id4331 . -4) (undo-tree-id4333 . -4) (undo-tree-id4335 . -4) (undo-tree-id4337 . -4) (undo-tree-id4339 . -4) (undo-tree-id4341 . -4) (undo-tree-id4343 . -4) (undo-tree-id4345 . -4) (undo-tree-id4347 . -4) (undo-tree-id4349 . -4) (undo-tree-id4351 . -4) (undo-tree-id4353 . -4) (undo-tree-id4355 . -4) (undo-tree-id4357 . -4) (undo-tree-id4359 . -4) (undo-tree-id4361 . -4) (undo-tree-id4363 . -4) (undo-tree-id4365 . -4) (undo-tree-id4367 . -4) (undo-tree-id4369 . -4) (undo-tree-id4371 . -4) (undo-tree-id4373 . -4) (undo-tree-id4375 . -4) (undo-tree-id4377 . -4) (undo-tree-id4379 . -4) (undo-tree-id4381 . -4) (undo-tree-id4383 . -4) (undo-tree-id4385 . -4) (undo-tree-id4387 . -4) (undo-tree-id4389 . -4) (undo-tree-id4391 . -4) (undo-tree-id4393 . -4) (undo-tree-id4395 . -4) (undo-tree-id4397 . -4) (undo-tree-id4399 . -4) (undo-tree-id4401 . -4) (undo-tree-id4403 . -4) (undo-tree-id4405 . -4) (undo-tree-id4407 . -4) 8854) ((8850 . 8854)) (25934 21540 234808 659000) 0 nil])
([nil nil ((nil fontified t 15691 . 15692) (nil face (rainbow-delimiters-depth-1-face) 15691 . 15692) (nil fontified t 15690 . 15691) (nil face (rainbow-delimiters-depth-1-face) 15690 . 15691) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15690) (15692 . 15694)) nil (25934 21579 460442 738000) 0 nil])
([nil nil ((8850 . 8866)) ((#("                " 0 12 (fontified t) 12 16 (fontified t)) . 8850) (undo-tree-id4650 . -16) (undo-tree-id4651 . -16) (undo-tree-id4652 . -16) (undo-tree-id4653 . -16) (undo-tree-id4654 . -16) (undo-tree-id4655 . -16) (undo-tree-id4656 . -16) (undo-tree-id4657 . -16) (undo-tree-id4658 . -16) (undo-tree-id4659 . -16) (undo-tree-id4660 . -16) (undo-tree-id4661 . -16) (undo-tree-id4662 . -16) (undo-tree-id4663 . -16) (undo-tree-id4664 . -16) (undo-tree-id4665 . -16) (undo-tree-id4666 . -16) (undo-tree-id4667 . -16) (undo-tree-id4668 . -16) (undo-tree-id4669 . -16) (undo-tree-id4670 . -16) (undo-tree-id4671 . -16) (undo-tree-id4672 . -16) (undo-tree-id4673 . -16) (undo-tree-id4674 . -16) (undo-tree-id4675 . -16) (undo-tree-id4676 . -16) (undo-tree-id4677 . -16) (undo-tree-id4678 . -16) (undo-tree-id4679 . -16) (undo-tree-id4680 . -16) (undo-tree-id4681 . -16)) (25934 21540 65018 825000) 0 nil])
([nil nil ((nil fontified t 15930 . 15931) (nil face (rainbow-delimiters-depth-1-face) 15930 . 15931) (nil fontified t 15929 . 15930) (nil face (rainbow-delimiters-depth-1-face) 15929 . 15930) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15929) (15931 . 15933)) nil (25934 21596 749160 574000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8862) (undo-tree-id4216 . -4) (undo-tree-id4218 . -4) (undo-tree-id4220 . -4) (undo-tree-id4222 . -4) (undo-tree-id4224 . -4) (undo-tree-id4226 . -4) (undo-tree-id4228 . -4) (undo-tree-id4230 . -4) (undo-tree-id4232 . -4) (undo-tree-id4234 . -4) (undo-tree-id4236 . -4) (undo-tree-id4238 . -4) (undo-tree-id4240 . -4) (undo-tree-id4242 . -4) (undo-tree-id4244 . -4) (undo-tree-id4246 . -4) (undo-tree-id4248 . -4) (undo-tree-id4250 . -4) (undo-tree-id4252 . -4) (undo-tree-id4254 . -4) (undo-tree-id4256 . -4) (undo-tree-id4258 . -4) (undo-tree-id4260 . -4) (undo-tree-id4262 . -4) 8866) ((8862 . 8866)) (25934 21539 898347 542000) 0 nil])
([nil nil ((apply 2 1578 1644 undo--wrap-and-run-primitive-undo 1578 1644 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1586) 1646))) nil (25934 21720 756044 623000) 0 nil] [nil nil ((298 . 299) (t 25934 21579 510819 433000)) ((#("n" 0 1 (fontified t)) . 298) (undo-tree-id5073 . -1)) (25934 21596 748414 62000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9198) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 9198) (t 25934 21491 423442 224000)) ((9198 . 9199) (9198 . 9199)) (25934 21539 740244 97000) 0 nil])
([nil nil ((apply -6 1645 1840 undo--wrap-and-run-primitive-undo 1645 1840 ((1789 . 1791) (1763 . 1765) (1653 . 1655) 1825))) nil (25934 21720 756044 195000) 0 nil])
nil
([nil nil ((9198 . 9200)) ((#(", " 0 2 (fontified t)) . 9198) (undo-tree-id4647 . -2) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2)) (25934 21539 582278 548000) 0 nil])
([nil nil ((#("        # print(self.Wab.weight.data[0:10][0:10])
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 15 (face font-lock-comment-face fontified t) 15 16 (face font-lock-comment-face fontified t) 16 20 (face font-lock-comment-face fontified t) 20 36 (face font-lock-comment-face fontified t) 36 37 (face font-lock-comment-face fontified t) 37 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t) 43 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 50 (face font-lock-comment-face fontified t)) . 1781) (undo-tree-id5105 . -50) (undo-tree-id5106 . -50)) nil (25934 21720 756043 600000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9682) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 9682) (t 25934 21496 751403 945000)) ((9682 . 9683) (9682 . 9683)) (25934 21539 424083 153000) 0 nil])
([nil nil ((apply 2 1874 1959 undo--wrap-and-run-primitive-undo 1874 1959 ((#("# " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -1890) 1961))) nil (25934 21720 756041 123000) 0 nil])
([nil nil ((9682 . 9684)) ((#(", " 0 2 (fontified t)) . 9682) (undo-tree-id4646 . -2) (t 25934 21503 459355 867000)) (25934 21539 275869 1000) 0 nil])
([nil nil ((apply 2 1959 2013 undo--wrap-and-run-primitive-undo 1959 2013 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1975) 2015))) nil (25934 21720 756040 310000) 0 nil])
([nil nil ((nil fontified t 9724 . 9725) (t 25934 21503 459355 867000) (nil face (rainbow-delimiters-depth-1-face) 9724 . 9725) (t 25934 21503 459355 867000) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9724) (t 25934 21503 459355 867000) (9726 . 9727) (t 25934 21503 459355 867000)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9726) (t 25934 21503 459355 867000) (9724 . 9726) (t 25934 21503 459355 867000) (nil face nil 9724 . 9725) (t 25934 21503 459355 867000)) (25934 21539 126434 281000) 0 nil])
([nil nil ((1959 . 1991) (#("                " 0 16 (fontified t)) . 1959) (undo-tree-id5104 . -16) 1975) nil (25934 21720 756039 477000) 0 nil])
([nil nil ((nil fontified t 9750 . 9751) (nil face (rainbow-delimiters-depth-1-face) 9750 . 9751) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9750) (9752 . 9753)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9752) (9750 . 9752) (nil face nil 9750 . 9751)) (25934 21538 982820 158000) 0 nil])
([nil nil ((2028 . 2045)) nil (25934 21720 756037 586000) 0 nil])
([nil nil ((nil fontified t 9838 . 9839) (nil face (rainbow-delimiters-depth-1-face) 9838 . 9839) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9838) (9840 . 9841)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9840) (9838 . 9840) (nil face nil 9838 . 9839)) (25934 21538 831896 428000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2063) (undo-tree-id5102 . -1) (#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -2064) (undo-tree-id5103 . -1) 2065) nil (25934 21720 756036 711000) 0 nil])
([nil nil ((nil fontified t 10053 . 10054) (nil face (rainbow-delimiters-depth-1-face) 10053 . 10054) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10053) (10055 . 10056)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10055) (10053 . 10055) (nil face nil 10053 . 10054)) (25934 21538 683831 816000) 0 nil])
([nil nil ((2063 . 2064)) nil (25934 21720 756032 329000) 0 nil])
([nil nil ((nil fontified t 10299 . 10300) (nil face (rainbow-delimiters-depth-1-face) 10299 . 10300) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10299) (10301 . 10302)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10301) (10299 . 10301) (nil face nil 10299 . 10300)) (25934 21538 545358 672000) 0 nil])
([nil nil ((2064 . 2065)) nil (25934 21720 756031 76000) 0 nil])
([nil nil ((nil fontified t 10369 . 10370) (nil face (rainbow-delimiters-depth-1-face) 10369 . 10370) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10369) (10371 . 10372)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10371) (10369 . 10371) (nil face nil 10369 . 10370)) (25934 21538 391311 780000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-variable-name-face fontified t)) . -2064) (undo-tree-id5101 . -1) 2065) nil (25934 21720 756029 323000) 0 nil])
([nil nil ((nil fontified t 10488 . 10489) (nil face (rainbow-delimiters-depth-2-face) 10488 . 10489) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10488) (10490 . 10491)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 10490) (10488 . 10490) (nil face nil 10488 . 10489)) (25934 21538 250063 765000) 0 nil])
([nil nil ((#("                print('Wij', Wij.shape)
" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 27 (face font-lock-string-face fontified t) 27 29 (fontified t) 29 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 40 (fontified t)) . 2098) (undo-tree-id5080 . -29) (undo-tree-id5081 . -29) (undo-tree-id5082 . -29) (undo-tree-id5083 . -39) (undo-tree-id5084 . -39) (undo-tree-id5085 . -39) (undo-tree-id5086 . -39) (undo-tree-id5087 . -39) (undo-tree-id5088 . -39) (undo-tree-id5089 . -39) (undo-tree-id5090 . -39) (undo-tree-id5091 . -39) (undo-tree-id5092 . -39) (undo-tree-id5093 . -39) (undo-tree-id5094 . -39) (undo-tree-id5095 . -39) (undo-tree-id5096 . -39) (undo-tree-id5097 . -39) (undo-tree-id5098 . -39) (undo-tree-id5099 . -39) (undo-tree-id5100 . -40) 2138) nil (25934 21720 756025 308000) 0 nil])
([nil nil ((nil fontified t 10568 . 10569) (nil face (rainbow-delimiters-depth-2-face) 10568 . 10569) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10568) (10570 . 10571)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 10570) (10568 . 10570) (nil face nil 10568 . 10569)) (25934 21538 101280 343000) 0 nil])
([nil nil ((apply -4 2115 2330 undo--wrap-and-run-primitive-undo 2115 2330 ((2215 . 2217) (2131 . 2133) 2285))) nil (25934 21720 755992 329000) 0 nil])
([nil nil ((nil fontified t 10760 . 10761) (nil face (rainbow-delimiters-depth-1-face) 10760 . 10761) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10760) (10762 . 10763)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10762) (10760 . 10762) (nil face nil 10760 . 10761)) (25934 21537 951877 678000) 0 nil])
([nil nil ((2030 . 2046) (#("                " 0 16 (fontified nil)) . 2029) (undo-tree-id5079 . -16) (2045 . 2046)) nil (25934 21720 755991 731000) 0 nil])
([nil nil ((nil fontified t 10818 . 10819) (nil face (rainbow-delimiters-depth-1-face) 10818 . 10819) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10818) (10820 . 10821)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10820) (10818 . 10820) (nil face nil 10818 . 10819)) (25934 21537 805132 407000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2029) (undo-tree-id5078 . -1) 2030) nil (25934 21720 755990 196000) 0 nil])
([nil nil ((nil fontified t 10912 . 10913) (nil face (rainbow-delimiters-depth-2-face) 10912 . 10913) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10912) (10914 . 10915)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 10914) (10912 . 10914) (nil face nil 10912 . 10913)) (25934 21537 659193 368000) 0 nil])
([nil nil ((2114 . 2121)) nil (25934 21720 755988 997000) 0 nil])
([nil nil ((nil fontified t 11047 . 11048) (nil face (rainbow-delimiters-depth-2-face) 11047 . 11048) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11047) (11049 . 11050)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 11049) (11047 . 11049) (nil face nil 11047 . 11048)) (25934 21537 499250 938000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -2118) (undo-tree-id5075 . -1) (#("a" 0 1 (fontified t)) . -2119) (undo-tree-id5076 . -1) (#("b" 0 1 (fontified t)) . -2120) (undo-tree-id5077 . -1) 2121) nil (25934 21720 755987 358000) 0 nil])
([nil nil ((nil fontified t 11101 . 11102) (nil face (rainbow-delimiters-depth-1-face) 11101 . 11102) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11101) (11103 . 11104)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11103) (11101 . 11103) (nil face nil 11101 . 11102)) (25934 21537 342665 554000) 0 nil])
([nil nil ((2118 . 2130)) nil (25934 21720 755983 401000) 0 nil])
([nil nil ((nil fontified t 11193 . 11194) (nil face (rainbow-delimiters-depth-2-face) 11193 . 11194) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11193) (11195 . 11196)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 11195) (11193 . 11195) (nil face nil 11193 . 11194)) (25934 21537 175985 769000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2129) (undo-tree-id5074 . -1) 2130) nil (25934 21720 755982 178000) 0 nil])
([nil nil ((nil face (rainbow-delimiters-depth-1-face) 14893 . 14894) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14893) (undo-tree-id4595 . -2) (undo-tree-id4597 . -2) (undo-tree-id4599 . -2) (undo-tree-id4601 . -2) (undo-tree-id4603 . -2) (undo-tree-id4605 . -2) (undo-tree-id4607 . -2) (undo-tree-id4609 . -2) (undo-tree-id4611 . -2) (undo-tree-id4613 . -2) (undo-tree-id4615 . -2) (undo-tree-id4617 . -2) (undo-tree-id4619 . -2) (undo-tree-id4621 . -2) (undo-tree-id4623 . -2) (undo-tree-id4625 . -2) (undo-tree-id4627 . -2) (undo-tree-id4629 . -2) (undo-tree-id4631 . -2) (undo-tree-id4633 . -2) (undo-tree-id4635 . -2) (undo-tree-id4637 . -2) (undo-tree-id4639 . -2) (undo-tree-id4640 . -2) (undo-tree-id4642 . -2) (undo-tree-id4644 . -2) (14895 . 14896)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14895) (14893 . 14895) (nil face nil 14893 . 14894)) (25934 21534 321356 289000) 0 nil])
([nil nil ((2129 . 2134)) nil (25934 21720 755972 840000) 0 nil])
nil
([nil nil ((2134 . 2151)) nil (25934 21720 755968 148000) 0 nil])
([nil nil ((1890 . 1894) (t 25934 21720 801859 397000)) nil (25934 21731 602025 972000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1890) (undo-tree-id5111 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1891) (undo-tree-id5112 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1892) (undo-tree-id5113 . -1) (#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -1893) (undo-tree-id5114 . -1) 1894) nil (25934 21731 602024 449000) 0 nil])
([nil nil ((#("                # self.Wab[j_pop, i_pop] = Wij
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-face fontified t) 22 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t) 42 47 (face font-lock-comment-face fontified t)) . 2367) (undo-tree-id5107 . -34) (undo-tree-id5108 . -34) (undo-tree-id5109 . -34) (undo-tree-id5110 . -47) 2414) nil (25934 21731 602020 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2181 . 2182) (nil fontified nil 2177 . 2182) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2170 . 2174) (nil fontified nil 2169 . 2170) (nil fontified nil 2167 . 2169) (nil fontified nil 2163 . 2167) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2157 . 2161) (nil fontified nil 2153 . 2157) (nil fontified nil 2151 . 2153) (nil fontified nil 2135 . 2151) (2135 . 2182)) nil (25934 21731 602008 175000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2151) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2151)) nil (25934 21731 601997 932000) 0 nil])
([nil nil ((#("                # print(Wij.weight.data)
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t)) . -2371) (undo-tree-id5227 . -41) (undo-tree-id5228 . -41) (undo-tree-id5229 . -41) (undo-tree-id5230 . -39) (undo-tree-id5231 . -39) (undo-tree-id5232 . -39) (undo-tree-id5233 . -39) (undo-tree-id5234 . -39) (undo-tree-id5235 . -39) (undo-tree-id5236 . -39) (undo-tree-id5237 . -16) (undo-tree-id5238 . -16) (undo-tree-id5239 . -16) (undo-tree-id5240 . -41) (undo-tree-id5241 . -41) (undo-tree-id5242 . -41) (undo-tree-id5243 . -41) (undo-tree-id5244 . -41) (undo-tree-id5245 . -41) (undo-tree-id5246 . -41) (undo-tree-id5247 . -41) (undo-tree-id5248 . -41) (undo-tree-id5249 . -41) (undo-tree-id5250 . -41) (undo-tree-id5251 . -41) (undo-tree-id5252 . -41) (undo-tree-id5253 . -41) (undo-tree-id5254 . -41) (undo-tree-id5255 . -41) (undo-tree-id5256 . -41) (undo-tree-id5257 . -41) (undo-tree-id5258 . -41) (undo-tree-id5259 . -41) (undo-tree-id5260 . -41) (undo-tree-id5261 . -41) (undo-tree-id5262 . -41) (undo-tree-id5263 . -41) (undo-tree-id5264 . -41) (undo-tree-id5265 . -41) (undo-tree-id5266 . -41) (undo-tree-id5267 . -41) (undo-tree-id5268 . -41) (undo-tree-id5269 . -41) (undo-tree-id5270 . -41) (undo-tree-id5271 . -41) (undo-tree-id5272 . -41) (undo-tree-id5273 . -41) (undo-tree-id5274 . -41) (undo-tree-id5275 . -41) (undo-tree-id5276 . -41) (undo-tree-id5277 . -41) (undo-tree-id5278 . -41) (undo-tree-id5279 . -41) (undo-tree-id5280 . -41) (undo-tree-id5281 . -41) (undo-tree-id5282 . -41) (undo-tree-id5283 . -41) (undo-tree-id5284 . -41) (undo-tree-id5285 . -41) (undo-tree-id5286 . -41) (undo-tree-id5287 . -41) (undo-tree-id5288 . -41) 2412 (t 25934 21731 641787 431000)) nil (25934 21742 795901 979000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2383) (undo-tree-id5184 . -4) (undo-tree-id5185 . -4) (undo-tree-id5186 . -4) (undo-tree-id5187 . -4) (undo-tree-id5188 . -4) (undo-tree-id5189 . -4) (undo-tree-id5190 . -4) (undo-tree-id5191 . -4) (undo-tree-id5192 . -4) (undo-tree-id5193 . -4) (undo-tree-id5194 . -4) (undo-tree-id5195 . -4) (undo-tree-id5196 . -4) (undo-tree-id5197 . -4) (undo-tree-id5198 . -4) (undo-tree-id5199 . -4) (undo-tree-id5200 . -4) (undo-tree-id5201 . -4) (undo-tree-id5202 . -4) (undo-tree-id5203 . -4) (undo-tree-id5204 . -4) (undo-tree-id5205 . -4) (undo-tree-id5206 . -4) (undo-tree-id5207 . -4) (undo-tree-id5208 . -4) (undo-tree-id5209 . -4) (undo-tree-id5210 . -4) (undo-tree-id5211 . -4) (undo-tree-id5212 . -4) (undo-tree-id5213 . -4) (undo-tree-id5214 . -4) (undo-tree-id5215 . -4) (undo-tree-id5216 . -4) (undo-tree-id5217 . -4) (undo-tree-id5218 . -4) (undo-tree-id5219 . -4) (undo-tree-id5220 . -4) (undo-tree-id5221 . -4) (undo-tree-id5222 . -4) (undo-tree-id5223 . -4) (undo-tree-id5224 . -4) (undo-tree-id5225 . -4) (undo-tree-id5226 . -4) 2387) nil (25934 21742 795828 532000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2379) (undo-tree-id5115 . -4) (undo-tree-id5116 . -4) (undo-tree-id5117 . -4) (undo-tree-id5118 . -4) (undo-tree-id5119 . -4) (undo-tree-id5120 . -4) (undo-tree-id5121 . -4) (undo-tree-id5122 . -4) (undo-tree-id5123 . -4) (undo-tree-id5124 . -4) (undo-tree-id5125 . -4) (undo-tree-id5126 . -4) (undo-tree-id5127 . -4) (undo-tree-id5128 . -4) (undo-tree-id5129 . -4) (undo-tree-id5130 . -4) (undo-tree-id5131 . -4) (undo-tree-id5132 . -4) (undo-tree-id5133 . -4) (undo-tree-id5134 . -4) (undo-tree-id5135 . -4) (undo-tree-id5136 . -4) (undo-tree-id5137 . -4) (undo-tree-id5138 . -4) (undo-tree-id5139 . -4) (undo-tree-id5140 . -4) (undo-tree-id5141 . -4) (undo-tree-id5142 . -4) (undo-tree-id5143 . -4) (undo-tree-id5144 . -4) (undo-tree-id5145 . -4) (undo-tree-id5146 . -4) (undo-tree-id5147 . -4) (undo-tree-id5148 . -4) (undo-tree-id5149 . -4) (undo-tree-id5150 . -4) (undo-tree-id5151 . -4) (undo-tree-id5152 . -4) (undo-tree-id5153 . -4) (undo-tree-id5154 . -4) (undo-tree-id5155 . -4) (undo-tree-id5156 . -4) (undo-tree-id5157 . -4) (undo-tree-id5158 . -4) (undo-tree-id5159 . -4) (undo-tree-id5160 . -4) (undo-tree-id5161 . -4) (undo-tree-id5162 . -4) (undo-tree-id5163 . -4) (undo-tree-id5164 . -4) (undo-tree-id5165 . -4) (undo-tree-id5166 . -4) (undo-tree-id5167 . -4) (undo-tree-id5168 . -4) (undo-tree-id5169 . -4) (undo-tree-id5170 . -4) (undo-tree-id5171 . -4) (undo-tree-id5172 . -4) (undo-tree-id5173 . -4) (undo-tree-id5174 . -4) (undo-tree-id5175 . -4) (undo-tree-id5176 . -4) (undo-tree-id5177 . -4) (undo-tree-id5178 . -4) (undo-tree-id5179 . -4) (undo-tree-id5180 . -4) (undo-tree-id5181 . -4) (undo-tree-id5182 . -4) (undo-tree-id5183 . -4) 2383) nil (25934 21742 795798 713000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2622 . 2623) (nil fontified nil 2622 . 2623) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2615 . 2620) (nil fontified nil 2614 . 2615) (nil fontified nil 2610 . 2614) (nil fontified nil 2606 . 2610) (nil fontified nil 2605 . 2606) (nil fontified nil 2599 . 2605) (nil fontified nil 2598 . 2599) (nil fontified nil 2597 . 2598) (nil fontified nil 2595 . 2597) (nil fontified nil 2594 . 2595) (nil fontified nil 2588 . 2594) (nil fontified nil 2587 . 2588) (nil fontified nil 2580 . 2587) (nil fontified nil 2576 . 2580) (nil fontified nil 2573 . 2576) (nil fontified nil 2572 . 2573) (nil fontified nil 2567 . 2572) (nil fontified nil 2566 . 2567) (nil fontified nil 2559 . 2566) (nil fontified nil 2555 . 2559) (nil fontified nil 2554 . 2555) (nil fontified nil 2544 . 2554) (nil fontified nil 2540 . 2544) (nil fontified nil 2536 . 2540) (nil fontified nil 2524 . 2536) (2524 . 2623) (t 25934 21742 833713 355000)) nil (25934 21775 713220 707000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2593) (undo-tree-id5342 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -2594) (undo-tree-id5343 . -1) (#(" " 0 1 (fontified t)) . -2595) (undo-tree-id5344 . -1) (#("1" 0 1 (fontified t)) . -2596) (undo-tree-id5345 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2597) (undo-tree-id5346 . -1) 2598) nil (25934 21775 713217 525000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2588)) nil (25934 21775 713212 576000) 0 nil])
([nil nil ((2588 . 2589)) nil (25934 21775 713212 181000) 0 nil])
([nil nil ((2594 . 2595)) nil (25934 21775 713211 297000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2578) (undo-tree-id5334 . -1) (#("f" 0 1 (fontified t)) . -2579) (undo-tree-id5335 . -1) (#("." 0 1 (fontified t)) . -2580) (undo-tree-id5336 . -1) (#("c" 0 1 (fontified t)) . -2581) (undo-tree-id5337 . -1) (#("s" 0 1 (fontified t)) . -2582) (undo-tree-id5338 . -1) (#("u" 0 1 (fontified t)) . -2583) (undo-tree-id5339 . -1) (#("m" 0 1 (fontified t)) . -2584) (undo-tree-id5340 . -1) (#("N" 0 1 (fontified t)) . -2585) (undo-tree-id5341 . -1) 2586) nil (25934 21775 713209 557000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2578) (#("a" 0 1 (fontified t)) . 2578)) nil (25934 21775 713203 436000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2572) (undo-tree-id5328 . -1) (#(" " 0 1 (fontified t)) . -2573) (undo-tree-id5329 . -1) (#(":" 0 1 (fontified t)) . -2574) (undo-tree-id5330 . -1) (#(" " 0 1 (fontified t)) . -2575) (undo-tree-id5331 . -1) (#("s" 0 1 (fontified t)) . -2576) (undo-tree-id5332 . -1) (#("e" 0 1 (fontified t)) . -2577) (undo-tree-id5333 . -1) 2578) nil (25934 21775 713201 879000) 0 nil])
([nil nil ((2572 . 2574)) nil (25934 21775 713197 556000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2555) (undo-tree-id5316 . -1) (#("e" 0 1 (fontified t)) . -2556) (undo-tree-id5317 . -1) (#("l" 0 1 (fontified t)) . -2557) (undo-tree-id5318 . -1) (#("f" 0 1 (fontified t)) . -2558) (undo-tree-id5319 . -1) (#("." 0 1 (fontified t)) . -2559) (undo-tree-id5320 . -1) (#("c" 0 1 (fontified t)) . -2560) (undo-tree-id5321 . -1) (#("s" 0 1 (fontified t)) . -2561) (undo-tree-id5322 . -1) (#("u" 0 1 (fontified t)) . -2562) (undo-tree-id5323 . -1) (#("m" 0 1 (fontified t)) . -2563) (undo-tree-id5324 . -1) (#("N" 0 1 (fontified t)) . -2564) (undo-tree-id5325 . -1) (#("a" 0 1 (fontified t)) . -2565) (undo-tree-id5326 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2566) (undo-tree-id5327 . -1) 2567) nil (25934 21775 713194 976000) 0 nil])
([nil nil ((#("[i_pop, j_pop]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (fontified t) 8 9 (fontified t) 9 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 2554) (undo-tree-id5315 . -14) 2568) nil (25934 21775 713183 960000) 0 nil])
([nil nil ((nil fontified nil 2562 . 2563) (nil fontified nil 2558 . 2562) (nil fontified nil 2557 . 2558) (nil fontified nil 2550 . 2557) (nil fontified nil 2549 . 2550) (2549 . 2563)) nil (25934 21775 713182 522000) 0 nil])
([nil nil ((apply -2 2593 2703 undo--wrap-and-run-primitive-undo 2593 2703 ((2605 . 2607) 2692))) nil (25934 21775 713181 311000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -2568) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) 2569) nil (25934 21775 713177 317000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2701) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) 2702 (t 25934 21775 753496 757000)) nil (25934 21780 566652 162000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2705) (undo-tree-id5427 . -4) (undo-tree-id5428 . -4) (undo-tree-id5429 . -4) (undo-tree-id5430 . -4) (undo-tree-id5431 . -4) (undo-tree-id5432 . -4) (undo-tree-id5433 . -4) (undo-tree-id5434 . -4) (undo-tree-id5435 . -4) (undo-tree-id5436 . -4) (undo-tree-id5437 . -4) (undo-tree-id5438 . -4) (undo-tree-id5439 . -4) (undo-tree-id5440 . -4) (undo-tree-id5441 . -4) (undo-tree-id5442 . -4) (undo-tree-id5443 . -4) (undo-tree-id5444 . -4) (undo-tree-id5445 . -4) (undo-tree-id5446 . -4) (undo-tree-id5447 . -4) (undo-tree-id5448 . -4) (undo-tree-id5449 . -4) (undo-tree-id5450 . -4) (undo-tree-id5451 . -4) (undo-tree-id5452 . -4) (undo-tree-id5453 . -4) (undo-tree-id5454 . -4) (undo-tree-id5455 . -4) (undo-tree-id5456 . -4) (undo-tree-id5457 . -4) (undo-tree-id5458 . -4) (undo-tree-id5459 . -4) (undo-tree-id5460 . -4) (undo-tree-id5461 . -4) (undo-tree-id5462 . -4) (undo-tree-id5463 . -4) (undo-tree-id5464 . -4) (undo-tree-id5465 . -4) (undo-tree-id5466 . -4) (undo-tree-id5467 . -4) (undo-tree-id5468 . -4) (undo-tree-id5469 . -4) (undo-tree-id5470 . -4) (undo-tree-id5471 . -4) 2701) nil (25934 21780 566624 943000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2701) (undo-tree-id5347 . -4) (undo-tree-id5348 . -4) (undo-tree-id5349 . -4) (undo-tree-id5350 . -4) (undo-tree-id5351 . -4) (undo-tree-id5352 . -4) (undo-tree-id5353 . -4) (undo-tree-id5354 . -4) (undo-tree-id5355 . -4) (undo-tree-id5356 . -4) (undo-tree-id5357 . -4) (undo-tree-id5358 . -4) (undo-tree-id5359 . -4) (undo-tree-id5360 . -4) (undo-tree-id5361 . -4) (undo-tree-id5362 . -4) (undo-tree-id5363 . -4) (undo-tree-id5364 . -4) (undo-tree-id5365 . -4) (undo-tree-id5366 . -4) (undo-tree-id5367 . -4) (undo-tree-id5368 . -4) (undo-tree-id5369 . -4) (undo-tree-id5370 . -4) (undo-tree-id5371 . -4) (undo-tree-id5372 . -4) (undo-tree-id5373 . -4) (undo-tree-id5374 . -4) (undo-tree-id5375 . -4) (undo-tree-id5376 . -4) (undo-tree-id5377 . -4) (undo-tree-id5378 . -4) (undo-tree-id5379 . -4) (undo-tree-id5380 . -4) (undo-tree-id5381 . -4) (undo-tree-id5382 . -4) (undo-tree-id5383 . -4) (undo-tree-id5384 . -4) (undo-tree-id5385 . -4) (undo-tree-id5386 . -4) (undo-tree-id5387 . -4) (undo-tree-id5388 . -4) (undo-tree-id5389 . -4) (undo-tree-id5390 . -4) (undo-tree-id5391 . -4) (undo-tree-id5392 . -4) (undo-tree-id5393 . -4) (undo-tree-id5394 . -4) (undo-tree-id5395 . -4) (undo-tree-id5396 . -4) (undo-tree-id5397 . -4) (undo-tree-id5398 . -4) (undo-tree-id5399 . -4) (undo-tree-id5400 . -4) (undo-tree-id5401 . -4) (undo-tree-id5402 . -4) (undo-tree-id5403 . -4) (undo-tree-id5404 . -4) (undo-tree-id5405 . -4) (undo-tree-id5406 . -4) (undo-tree-id5407 . -4) (undo-tree-id5408 . -4) (undo-tree-id5409 . -4) (undo-tree-id5410 . -4) (undo-tree-id5411 . -4) (undo-tree-id5412 . -4) (undo-tree-id5413 . -4) (undo-tree-id5414 . -4) (undo-tree-id5415 . -4) (undo-tree-id5416 . -4) (undo-tree-id5417 . -4) (undo-tree-id5418 . -4) (undo-tree-id5419 . -4) (undo-tree-id5420 . -4) (undo-tree-id5421 . -4) (undo-tree-id5422 . -4) (undo-tree-id5423 . -4) (undo-tree-id5424 . -4) (undo-tree-id5425 . -4) (undo-tree-id5426 . -4) 2705) nil (25934 21780 566496 961000) 0 nil])
([nil nil ((1644 . 1652) (t 25934 21780 613464 939000)) nil (25934 21796 406445 286000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -2168) (undo-tree-id5505 . -1) 2169 (t 25934 21796 453361 505000)) nil (25934 21815 684544 233000) 0 nil])
([nil nil ((2168 . 2169)) nil (25934 21815 684535 831000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . 2175)) nil (25934 21815 684534 462000) 0 nil])
([nil nil ((2175 . 2176)) nil (25934 21815 684529 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2571 . 2572) (nil fontified nil 2570 . 2572) (nil fontified nil 2569 . 2570) (nil fontified nil 2563 . 2569) (nil fontified nil 2559 . 2563) (nil fontified nil 2558 . 2559) (nil fontified nil 2553 . 2558) (nil fontified nil 2552 . 2553) (nil fontified nil 2550 . 2552) (nil fontified nil 2543 . 2550) (nil fontified nil 2540 . 2543) (nil fontified nil 2532 . 2540) (2532 . 2572) (t 25934 21815 721236 232000)) nil (25934 21827 230382 505000) 0 nil])
([nil nil ((2540 . 2544) 2532) nil (25934 21827 230380 655000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2548)) nil (25934 21827 230379 897000) 0 nil])
([nil nil ((2548 . 2549)) nil (25934 21827 230379 317000) 0 nil])
([nil nil ((2576 . 2592) (#("            " 0 12 (fontified t)) . 2576)) nil (25934 21827 230374 583000) 0 nil])
([nil nil ((2647 . 2664) (t 25934 21827 269161 430000)) nil (25934 21839 969017 950000) 0 nil])
([nil nil ((#("            for j_pop in range(self.N_POP):
" 0 12 (fontified t) 12 15 (face font-lock-keyword-face fontified t) 15 22 (fontified t) 22 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 30 (face font-lock-builtin-face fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t) 43 44 (rear-nonsticky t fontified t)) . 2532) (undo-tree-id5524 . -44)) nil (25934 21839 969015 960000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2544) 2532) nil (25934 21839 969012 209000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2599) (undo-tree-id5523 . -1) 2600) nil (25934 21839 969010 58000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2565) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1)) nil (25934 21839 969004 830000) 0 nil])
([nil nil ((2565 . 2566)) nil (25934 21839 968980 851000) 0 nil])
([nil nil ((1597 . 1603) (t 25934 21840 9079 143000)) nil (25934 21868 927377 88000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1596) (undo-tree-id5530 . -1) (#("t" 0 1 (fontified t)) . -1597) (undo-tree-id5531 . -1) (#("o" 0 1 (fontified t)) . -1598) (undo-tree-id5532 . -1) (#("r" 0 1 (fontified t)) . -1599) (undo-tree-id5533 . -1) (#("c" 0 1 (fontified t)) . -1600) (undo-tree-id5534 . -1) (#("h" 0 1 (fontified t)) . -1601) (undo-tree-id5535 . -1) (#("." 0 1 (fontified t)) . -1602) (undo-tree-id5536 . -1) 1603) nil (25934 21868 927375 672000) 0 nil])
([nil nil ((1596 . 1599)) nil (25934 21868 927369 798000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1597) (undo-tree-id5528 . -1) (#("o" 0 1 (fontified t)) . -1598) (undo-tree-id5529 . -1) 1599) nil (25934 21868 927368 954000) 0 nil])
([nil nil ((1597 . 1606)) nil (25934 21868 927367 5000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1605) (undo-tree-id5527 . -1) 1606) nil (25934 21868 927366 154000) 0 nil])
([nil nil ((1605 . 1606)) nil (25934 21868 927364 420000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1604) (undo-tree-id5525 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1605) (undo-tree-id5526 . -1) 1606) nil (25934 21868 927363 677000) 0 nil])
([nil nil ((1605 . 1607) (#("(" 0 1 (fontified nil)) . -1605) (1604 . 1606)) nil (25934 21868 927356 10000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1606)) nil (25934 21868 927354 759000) 0 nil])
([nil nil ((1652 . 1653)) nil (25934 21868 927350 253000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1597) (#("y" 0 1 (fontified t)) . 1597) (#("a" 0 1 (fontified t)) . 1597) (#("r" 0 1 (fontified t)) . 1597) (#("r" 0 1 (fontified t)) . 1597) (#("a" 0 1 (fontified t)) . 1597) (#("." 0 1 (fontified t)) . 1597) (#("p" 0 1 (fontified t)) . 1597) (#("n" 0 1 (fontified t)) . 1597) (t 25934 21868 968892 983000)) nil (25934 21889 117809 695000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1643) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) 1644) nil (25934 21889 117804 663000) 0 nil])
([nil nil ((apply -2 2452 2534 undo--wrap-and-run-primitive-undo 2452 2534 ((2460 . 2462) 2492))) nil (25934 21901 173809 386000) 0 nil])
([nil nil ((1605 . 1607) (#("(" 0 1 (fontified nil)) . -1605) (1597 . 1606)) nil (25934 21901 173807 778000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1606)) nil (25934 21901 173805 534000) 0 nil])
([nil nil ((1652 . 1653)) nil (25934 21901 173800 86000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2611) (undo-tree-id5703 . -1) (#(" " 0 1 (fontified t)) . -2612) (undo-tree-id5704 . -1) (#(" " 0 1 (fontified t)) . -2613) (undo-tree-id5705 . -1) (#(" " 0 1 (fontified t)) . -2614) (undo-tree-id5706 . -1) (#(" " 0 1 (fontified t)) . -2615) (undo-tree-id5707 . -1) (#(" " 0 1 (fontified t)) . -2616) (undo-tree-id5708 . -1) (#(" " 0 1 (fontified t)) . -2617) (undo-tree-id5709 . -1) (#(" " 0 1 (fontified t)) . -2618) (undo-tree-id5710 . -1) 2619 (t 25934 21901 224687 16000)) nil (25934 21919 544599 587000) 0 nil])
([nil nil ((#("[i_pop, i_pop]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 9 (fontified t) 9 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 2569) (undo-tree-id5584 . -9) (undo-tree-id5585 . -9) (undo-tree-id5586 . -9) (undo-tree-id5587 . -9) (undo-tree-id5588 . -11) (undo-tree-id5589 . -10) (undo-tree-id5590 . -11) (undo-tree-id5591 . -11) (undo-tree-id5592 . -11) (undo-tree-id5593 . -11) (undo-tree-id5594 . -11) (undo-tree-id5595 . -11) (undo-tree-id5596 . -11) (undo-tree-id5597 . -11) (undo-tree-id5598 . -11) (undo-tree-id5599 . -11) (undo-tree-id5600 . -11) (undo-tree-id5601 . -11) (undo-tree-id5602 . -11) (undo-tree-id5603 . -11) (undo-tree-id5604 . -11) (undo-tree-id5605 . -11) (undo-tree-id5606 . -11) (undo-tree-id5607 . -11) (undo-tree-id5608 . -11) (undo-tree-id5609 . -11) (undo-tree-id5610 . -11) (undo-tree-id5611 . -11) (undo-tree-id5612 . -11) (undo-tree-id5613 . -11) (undo-tree-id5614 . -11) (undo-tree-id5615 . -11) (undo-tree-id5616 . -11) (undo-tree-id5617 . -11) (undo-tree-id5618 . -11) (undo-tree-id5619 . -11) (undo-tree-id5620 . -12) (undo-tree-id5621 . -11) (undo-tree-id5622 . -12) (undo-tree-id5623 . -12) (undo-tree-id5624 . -12) (undo-tree-id5625 . -12) (undo-tree-id5626 . -12) (undo-tree-id5627 . -12) (undo-tree-id5628 . -12) (undo-tree-id5629 . -12) (undo-tree-id5630 . -12) (undo-tree-id5631 . -12) (undo-tree-id5632 . -12) (undo-tree-id5633 . -12) (undo-tree-id5634 . -12) (undo-tree-id5635 . -12) (undo-tree-id5636 . -12) (undo-tree-id5637 . -12) (undo-tree-id5638 . -12) (undo-tree-id5639 . -12) (undo-tree-id5640 . -12) (undo-tree-id5641 . -12) (undo-tree-id5642 . -12) (undo-tree-id5643 . -12) (undo-tree-id5644 . -12) (undo-tree-id5645 . -13) (undo-tree-id5646 . -12) (undo-tree-id5647 . -13) (undo-tree-id5648 . -13) (undo-tree-id5649 . -13) (undo-tree-id5650 . -13) (undo-tree-id5651 . -13) (undo-tree-id5652 . -13) (undo-tree-id5653 . -13) (undo-tree-id5654 . -13) (undo-tree-id5655 . -13) (undo-tree-id5656 . -13) (undo-tree-id5657 . -13) (undo-tree-id5658 . -13) (undo-tree-id5659 . -13) (undo-tree-id5660 . -13) (undo-tree-id5661 . -13) (undo-tree-id5662 . -13) (undo-tree-id5663 . -13) (undo-tree-id5664 . -13) (undo-tree-id5665 . -13) (undo-tree-id5666 . -13) (undo-tree-id5667 . -13) (undo-tree-id5668 . -13) (undo-tree-id5669 . -13) (undo-tree-id5670 . -13) (undo-tree-id5671 . -13) (undo-tree-id5672 . -13) (undo-tree-id5673 . -13) (undo-tree-id5674 . -13) (undo-tree-id5675 . -13) (undo-tree-id5676 . -14) (undo-tree-id5677 . -13) (undo-tree-id5678 . -14) (undo-tree-id5679 . -14) (undo-tree-id5680 . -14) (undo-tree-id5681 . -14) (undo-tree-id5682 . -14) (undo-tree-id5683 . -14) (undo-tree-id5684 . -14) (undo-tree-id5685 . -14) (undo-tree-id5686 . -14) (undo-tree-id5687 . -14) (undo-tree-id5688 . -14) (undo-tree-id5689 . -14) (undo-tree-id5690 . -14) (undo-tree-id5691 . -14) (undo-tree-id5692 . -14) (undo-tree-id5693 . -14) (undo-tree-id5694 . -14) (undo-tree-id5695 . -14) (undo-tree-id5696 . -14) (undo-tree-id5697 . -14) (undo-tree-id5698 . -14) (undo-tree-id5699 . -14) (undo-tree-id5700 . -14) (undo-tree-id5701 . -14) (undo-tree-id5702 . -14) 2583) nil (25934 21919 544583 128000) 0 nil])
([nil nil ((nil fontified nil 2577 . 2578) (nil fontified nil 2573 . 2577) (nil fontified nil 2565 . 2573) (nil fontified nil 2564 . 2565) (2564 . 2578)) nil (25934 21919 544335 421000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -8930) (undo-tree-id5721 . -1) (#("T" 0 1 (fontified t)) . -8931) (undo-tree-id5722 . -1) 8932 (t 25934 21919 588570 377000)) nil (25934 21997 858465 871000) 0 nil])
([nil nil ((8916 . 8918) (#("(" 0 1 (fontified nil)) . -8916) (8905 . 8917)) nil (25934 21997 858463 105000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8917)) nil (25934 21997 858462 27000) 0 nil])
([nil nil ((8942 . 8943)) nil (25934 21997 858461 496000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8928) (undo-tree-id5719 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -8929) (undo-tree-id5720 . -1) 8930) nil (25934 21997 858460 818000) 0 nil])
([nil nil ((8928 . 8930)) nil (25934 21997 858458 315000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8929) (undo-tree-id5718 . -1) 8930) nil (25934 21997 858457 519000) 0 nil])
([nil nil ((8942 . 8943)) nil (25934 21997 858456 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8942) (undo-tree-id5717 . -1) 8943) nil (25934 21997 858455 695000) 0 nil])
([nil nil ((9008 . 9010) (#("(" 0 1 (fontified nil)) . -9008) (8997 . 9009)) nil (25934 21997 858454 244000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9009)) nil (25934 21997 858453 542000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -9034) (undo-tree-id5715 . -1) (#("T" 0 1 (fontified t)) . -9035) (undo-tree-id5716 . -1) 9036) nil (25934 21997 858452 883000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 9035) (9034 . 9035) (#(" " 0 1 (fontified nil)) . -9034) (9034 . 9035) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -9034) (9034 . 9035)) nil (25934 21997 858450 424000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -9034) (undo-tree-id5714 . -1) 9035) nil (25934 21997 858449 434000) 0 nil])
([nil nil ((9034 . 9036)) nil (25934 21997 858447 964000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -9021) (undo-tree-id5712 . -1) (#(" " 0 1 (fontified t)) . -9022) (undo-tree-id5713 . -1) 9023) nil (25934 21997 858447 143000) 0 nil])
([nil nil ((9021 . 9022)) nil (25934 21997 858444 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9020) (undo-tree-id5711 . -1) 9021) nil (25934 21997 858442 945000) 0 nil])
([nil nil ((9021 . 9022)) nil (25934 21997 858431 918000) 0 nil])
([nil nil ((8853 . 8869) (#("            " 0 12 (fontified t)) . 8853) (undo-tree-id5724 . -6) 8859 (t 25934 21997 908077 557000)) nil (25934 22007 351854 439000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8865) (undo-tree-id5723 . -4) 8869) nil (25934 22007 351849 546000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1932) (t 25934 22007 392018 356000)) nil (25934 22080 846384 17000) 0 nil])
([nil nil ((1932 . 1933)) nil (25934 22080 846382 261000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1948)) nil (25934 22080 846379 982000) 0 nil])
([nil nil ((1948 . 1949)) nil (25934 22080 846373 315000) 0 nil])
([nil nil ((apply -2 3054 3164 undo--wrap-and-run-primitive-undo 3054 3164 ((3062 . 3064) 3153))) nil (25934 22123 148679 496000) 0 nil])
([nil nil ((#("                inputs = rec_input[j_pop, self.csumNa[i_pop] : self.csumNa[i_pop + 1]]
" 0 16 (fontified t) 16 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 40 (fontified t) 40 42 (fontified t) 42 46 (face font-lock-keyword-face fontified t) 46 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 81 (fontified t) 81 82 (face font-lock-operator-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t)) . -3248) (undo-tree-id5824 . -86) (undo-tree-id5825 . -86) (undo-tree-id5826 . -86) (undo-tree-id5827 . -40) (undo-tree-id5828 . -87) 3335 (t 25934 22123 203302 717000)) nil (25934 22149 75953 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3637) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (#("i" 0 1 (fontified t)) . -3638) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3639) (undo-tree-id5817 . -1) (#("p" 0 1 (fontified t)) . -3640) (undo-tree-id5818 . -1) (#("u" 0 1 (fontified t)) . -3641) (undo-tree-id5819 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3642) (undo-tree-id5820 . -1) (#("s" 0 1 (fontified t)) . -3643) (undo-tree-id5821 . -1) (#(" " 0 1 (fontified t)) . -3644) (undo-tree-id5822 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3645) (undo-tree-id5823 . -1) 3646) nil (25934 22149 75933 848000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3062) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3062) (t 25934 22149 131144 166000)) nil (25934 22175 20708 813000) 0 nil])
([nil nil ((3154 . 3162) (#("        " 0 8 (fontified nil)) . 3153) (undo-tree-id5869 . -8) (3161 . 3162) (t 25934 22175 66472 29000)) nil (25934 22283 491037 125000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3478) (undo-tree-id5868 . -1) 3479) nil (25934 22283 491035 28000) 0 nil])
([nil nil ((3478 . 3479)) nil (25934 22283 491032 485000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3485) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) 3486) nil (25934 22283 491028 809000) 0 nil])
([nil nil ((3485 . 3486)) nil (25934 22283 490957 506000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3422) (undo-tree-id5870 . -1) 3423 (t 25934 22283 575907 439000)) nil (25934 22294 238018 260000) 0 nil])
([nil nil ((3422 . 3423)) nil (25934 22294 238010 544000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3415)) nil (25934 22294 238009 56000) 0 nil])
([nil nil ((3415 . 3416)) nil (25934 22294 238004 799000) 0 nil])
([nil nil ((apply -16 3163 3674 undo--wrap-and-run-primitive-undo 3163 3674 ((3579 . 3581) (3520 . 3522) (3465 . 3467) (3400 . 3402) (3354 . 3356) (3259 . 3261) (3213 . 3215) (3171 . 3173) 3641))) nil (25934 22359 612920 647000) 0 nil])
([nil nil ((3162 . 3174)) nil (25934 22359 612919 901000) 0 nil])
([nil nil ((3183 . 3188) (3182 . 3184) (#("(" 0 1 (fontified nil)) . -3182) (3174 . 3183)) nil (25934 22359 612914 195000) 0 nil])
([nil nil ((3189 . 3198) (t 25934 22359 658411 175000)) nil (25934 22373 547960 920000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3205) (3204 . 3205) (3203 . 3205) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3203) (3198 . 3204)) nil (25934 22373 547958 25000) 0 nil])
([nil nil ((3204 . 3207)) nil (25934 22373 547954 838000) 0 nil])
([nil nil ((3207 . 3219)) nil (25934 22373 547953 184000) 0 nil])
([nil nil ((3205 . 3214) (3204 . 3206) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3204) (3204 . 3205)) nil (25934 22373 547950 812000) 0 nil])
([nil nil ((3215 . 3217)) nil (25934 22373 547949 202000) 0 nil])
([nil nil ((3233 . 3242)) nil (25934 22373 547943 328000) 0 nil])
([nil nil ((apply -2 3054 3156 undo--wrap-and-run-primitive-undo 3054 3156 ((3062 . 3064) 3153))) nil (25934 22376 66920 692000) 0 nil])
([nil nil ((3155 . 3163)) nil (25934 22376 66915 400000) 0 nil])
([nil nil ((apply -2 1578 1665 undo--wrap-and-run-primitive-undo 1578 1665 ((1586 . 1588) 1654))) nil (25934 22409 879131 405000) 0 nil])
([nil nil ((apply 2 1665 1773 undo--wrap-and-run-primitive-undo 1665 1773 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1673) 1775))) nil (25934 22409 879125 361000) 0 nil])
([nil nil ((apply 2 1773 1797 undo--wrap-and-run-primitive-undo 1773 1797 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1781) 1799))) nil (25934 22413 45410 798000) 0 nil])
([nil nil ((apply -10 1890 2223 undo--wrap-and-run-primitive-undo 1890 2223 ((2175 . 2177) (2136 . 2138) (2082 . 2084) (1993 . 1995) (1906 . 1908) 2196))) nil (25934 22424 122425 539000) 0 nil])
([nil nil ((apply 4 2223 2393 undo--wrap-and-run-primitive-undo 2223 2393 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2321) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2239) 2397))) nil (25934 22424 122420 289000) 0 nil])
([nil nil ((apply -2 2548 2727 undo--wrap-and-run-primitive-undo 2548 2727 ((2560 . 2562) 2624))) nil (25934 22429 541435 533000) 0 nil])
([nil nil ((apply 2 2626 2725 undo--wrap-and-run-primitive-undo 2626 2725 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2638) 2727))) nil (25934 22429 541426 479000) 0 nil])
([nil nil ((apply -10 14835 15134 undo--wrap-and-run-primitive-undo 14835 15134 ((15046 . 15048) (14989 . 14991) (14931 . 14933) (14889 . 14891) (14847 . 14849) 15115))) nil (25934 22449 346002 479000) 0 nil])
([nil nil ((apply 10 14835 15115 undo--wrap-and-run-primitive-undo 14835 15115 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15038) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14983) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14927) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14887) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14847) 15125))) nil (25934 22449 346001 632000) 0 nil])
([nil nil ((apply -48 14812 16068 undo--wrap-and-run-primitive-undo 14812 16068 ((16013 . 16015) (15971 . 15973) (15934 . 15936) (15903 . 15905) (15842 . 15844) (15760 . 15762) (15736 . 15738) (15626 . 15628) (15599 . 15601) (15521 . 15523) (15479 . 15481) (15431 . 15433) (15400 . 15402) (15340 . 15342) (15265 . 15267) (15223 . 15225) (15181 . 15183) (15144 . 15146) (15044 . 15046) (14987 . 14989) (14929 . 14931) (14887 . 14889) (14845 . 14847) (14821 . 14823) 16019))) nil (25934 22449 345996 100000) 0 nil])
([nil nil ((16067 . 16075) (t 25934 22449 400772 198000)) nil (25934 22450 489345 529000) 0 nil])
([nil nil ((14812 . 14820) (t 25934 22450 550567 240000)) nil (25934 22459 723184 948000) 0 nil])
([nil nil ((14713 . 14721) (#("    " 0 4 (fontified t)) . 14713)) nil (25934 22459 723183 619000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14717) (undo-tree-id5871 . -4) 14721) nil (25934 22459 723179 252000) 0 nil])
([nil nil ((apply 2 2159 2204 undo--wrap-and-run-primitive-undo 2159 2204 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2175) 2206))) nil (25934 22484 655053 597000) 0 nil])
([nil nil ((2159 . 2160)) nil (25934 22484 655052 149000) 0 nil])
([nil nil ((apply -2 2160 2224 undo--wrap-and-run-primitive-undo 2160 2224 ((2176 . 2178) 2205))) nil (25934 22484 655050 508000) 0 nil])
([nil nil ((apply 6 2066 2201 undo--wrap-and-run-primitive-undo 2066 2201 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2172) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2134) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2082) 2207))) nil (25934 22484 655049 227000) 0 nil])
([nil nil ((2155 . 2171)) nil (25934 22497 252123 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2154) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) 2155) nil (25934 22506 451614 689000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -2154) (undo-tree-id5872 . -1) (undo-tree-id5874 . -1) (undo-tree-id5876 . -1) (undo-tree-id5878 . -1) (undo-tree-id5880 . -1) (undo-tree-id5882 . -1) (undo-tree-id5884 . -1) (undo-tree-id5886 . -1) (undo-tree-id5888 . -1) (undo-tree-id5890 . -1) (undo-tree-id5892 . -1) (undo-tree-id5894 . -1) (undo-tree-id5896 . -1) (undo-tree-id5898 . -1) (undo-tree-id5900 . -1) (undo-tree-id5902 . -1) (undo-tree-id5904 . -1) (undo-tree-id5906 . -1) (undo-tree-id5908 . -1) (undo-tree-id5910 . -1) (undo-tree-id5912 . -1) (undo-tree-id5914 . -1) (undo-tree-id5916 . -1) (undo-tree-id5918 . -1) (undo-tree-id5920 . -1) (undo-tree-id5922 . -1) (undo-tree-id5924 . -1) (undo-tree-id5926 . -1) (undo-tree-id5928 . -1) (undo-tree-id5930 . -1) 2155) ((2154 . 2155) (t 25934 22484 777241 937000)) (25934 22496 979480 604000) 0 nil])
([nil nil ((#("                Wij.weight.data = W0                
                self.Wab[i_pop, j_pop] = Wij
" 0 16 (fontified t) 16 27 (fontified t) 27 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face font-lock-operator-face fontified t) 33 36 (fontified t) 36 52 (fontified t) 52 53 (fontified t) 53 69 (fontified t) 69 73 (face font-lock-keyword-face fontified t) 73 74 (fontified t) 74 77 (face font-lock-variable-name-face fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t) 78 79 (face font-lock-variable-name-face fontified t) 79 83 (face font-lock-variable-name-face fontified t) 83 85 (fontified t) 85 86 (face font-lock-variable-name-face fontified t) 86 90 (face font-lock-variable-name-face fontified t) 90 91 (face (rainbow-delimiters-depth-1-face) fontified t) 91 92 (fontified t) 92 93 (face font-lock-operator-face fontified t) 93 97 (fontified t) 97 98 (fontified t rear-nonsticky t)) . 2118) (undo-tree-id5943 . -8) (undo-tree-id5944 . -16) (undo-tree-id5945 . -36) (undo-tree-id5946 . -53) (undo-tree-id5947 . -53) (undo-tree-id5948 . -98) 2216) nil (25934 22506 451611 656000) 0 nil])
([nil nil ((#("                self.Wab[i_pop, j_pop] = Wij
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 21 (fontified t) 21 24 (face font-lock-variable-name-face fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 30 (face font-lock-variable-name-face fontified t) 30 32 (fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 37 (face font-lock-variable-name-face fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 44 (fontified t) 44 45 (fontified t rear-nonsticky t)) . 2171) (undo-tree-id5932 . -45) 2216 (t 25934 22484 777241 937000)) ((2171 . 2216)) (25934 22496 978425 274000) 0 nil])
([nil nil ((nil fontified nil 2215 . 2216) (nil fontified nil 2211 . 2215) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2204 . 2208) (nil fontified nil 2203 . 2204) (nil fontified nil 2201 . 2203) (nil fontified nil 2197 . 2201) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2192 . 2195) (nil fontified nil 2191 . 2192) (nil fontified nil 2187 . 2191) (nil fontified nil 2171 . 2187) (nil fontified nil 2170 . 2171) (nil fontified nil 2154 . 2170) (nil fontified nil 2151 . 2154) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2145 . 2149) (nil fontified nil 2134 . 2145) (nil fontified nil 2118 . 2134) (2118 . 2216)) nil (25934 22506 451604 256000) 0 nil])
nil
([nil nil ((apply -4 2118 2237 undo--wrap-and-run-primitive-undo 2118 2237 ((2189 . 2191) (2134 . 2136) 2216))) nil (25934 22506 451600 884000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2404) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (#("j" 0 1 (fontified t)) . -2405) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) 2406) nil (25934 22506 451598 938000) 0 nil])
([nil nil ((2404 . 2405)) nil (25934 22506 451574 560000) 0 nil])
([nil nil ((4142 . 4146) 4134 (t 25934 22506 503751 423000)) nil (25934 22545 327730 412000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4142) (undo-tree-id5951 . -4) (undo-tree-id5952 . -4) (undo-tree-id5953 . -4) (undo-tree-id5954 . -4) (undo-tree-id5955 . -4) (undo-tree-id5956 . -4) (undo-tree-id5957 . -4) (undo-tree-id5958 . -4) (undo-tree-id5959 . -4) (undo-tree-id5960 . -4) (undo-tree-id5961 . -4) (undo-tree-id5962 . -4) (undo-tree-id5963 . -4) (undo-tree-id5964 . -4) (undo-tree-id5965 . -4) (undo-tree-id5966 . -4) (undo-tree-id5967 . -4) (undo-tree-id5968 . -4) (undo-tree-id5969 . -4) (undo-tree-id5970 . -4) (undo-tree-id5971 . -4) (undo-tree-id5972 . -4) (undo-tree-id5973 . -4) (undo-tree-id5974 . -4) (undo-tree-id5975 . -4) (undo-tree-id5976 . -4) (undo-tree-id5977 . -4) (undo-tree-id5978 . -4) (undo-tree-id5979 . -4) (undo-tree-id5980 . -4) (undo-tree-id5981 . -4) (undo-tree-id5982 . -4) (undo-tree-id5983 . -4) (undo-tree-id5984 . -4) (undo-tree-id5985 . -4) (undo-tree-id5986 . -4) (undo-tree-id5987 . -4) (undo-tree-id5988 . -4) (undo-tree-id5989 . -4) (undo-tree-id5990 . -4) (undo-tree-id5991 . -4) (undo-tree-id5992 . -4) 4146) nil (25934 22545 327724 566000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -4193) (undo-tree-id5993 . -8) (undo-tree-id5994 . -8) (undo-tree-id5995 . -8) (undo-tree-id5996 . -8) (undo-tree-id5997 . -8) (undo-tree-id5998 . -8) (undo-tree-id5999 . -8) (undo-tree-id6000 . -8) (undo-tree-id6001 . -8) (undo-tree-id6002 . -8) (undo-tree-id6003 . -8) (undo-tree-id6004 . -8) (undo-tree-id6005 . -8) (undo-tree-id6006 . -8) (undo-tree-id6007 . -8) (undo-tree-id6008 . -8) (undo-tree-id6009 . -8) (undo-tree-id6010 . -8) (undo-tree-id6011 . -8) 4201 (t 25934 22545 386111 561000)) nil (25934 22558 669743 264000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4246 . 4247) (nil fontified nil 4246 . 4247) (nil fontified nil 4245 . 4246) (nil fontified nil 4240 . 4245) (nil fontified nil 4239 . 4240) (nil fontified nil 4229 . 4239) (nil fontified nil 4228 . 4229) (nil fontified nil 4217 . 4228) (nil fontified nil 4216 . 4217) (nil fontified nil 4215 . 4216) (nil fontified nil 4210 . 4215) (nil fontified nil 4206 . 4210) (nil fontified nil 4199 . 4206) (nil fontified nil 4197 . 4199) (nil fontified nil 4194 . 4197) (4194 . 4247) (t 25934 22558 761677 697000)) nil (25934 22733 450149 8000) 0 nil])
([nil nil ((apply -4 4247 4357 undo--wrap-and-run-primitive-undo 4247 4357 ((4297 . 4299) (4255 . 4257) 4340))) nil (25934 22733 450146 999000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4202) 4194) nil (25934 22733 450146 266000) 0 nil])
([nil nil ((apply -2 4194 4287 undo--wrap-and-run-primitive-undo 4194 4287 ((4202 . 4204) 4243))) nil (25934 22733 450145 689000) 0 nil])
([nil nil ((#("        # net_input = net_input + rec_input[i_pop]
" 0 3 (fontified t) 3 5 (fontified t) 5 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 14 (face font-lock-comment-face fontified t) 14 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 32 (face font-lock-comment-face fontified t) 32 33 (face font-lock-comment-face fontified t) 33 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 49 (face font-lock-comment-face fontified t) 49 50 (face font-lock-comment-face fontified t) 50 51 (face font-lock-comment-face rear-nonsticky t fontified t)) . -4194) (undo-tree-id6016 . -51) (undo-tree-id6017 . -51) 4245) nil (25934 22733 450144 859000) 0 nil])
([nil nil ((4184 . 4196)) nil (25934 22733 450142 182000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4194) (undo-tree-id6014 . -1) (#("t" 0 1 (fontified t)) . -4195) (undo-tree-id6015 . -1) 4196) nil (25934 22733 450141 114000) 0 nil])
([nil nil ((4194 . 4196)) nil (25934 22733 450138 88000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4194) (undo-tree-id6012 . -1) (#("t" 0 1 (fontified t)) . -4195) (undo-tree-id6013 . -1) 4196) nil (25934 22733 450136 343000) 0 nil])
([nil nil ((4194 . 4196)) nil (25934 22733 450120 769000) 0 nil])
([nil nil ((apply -2 3905 4001 undo--wrap-and-run-primitive-undo 3905 4001 ((3913 . 3915) 3905))) nil (25934 22736 593370 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4067 . 4068) (nil fontified nil 4067 . 4068) (nil fontified nil 4066 . 4067) (nil fontified nil 4065 . 4066) (nil fontified nil 4064 . 4065) (nil fontified nil 4063 . 4064) (nil fontified nil 4062 . 4063) (nil fontified nil 4057 . 4062) (nil fontified nil 4056 . 4057) (nil fontified nil 4054 . 4056) (nil fontified nil 4053 . 4054) (nil fontified nil 4049 . 4053) (nil fontified nil 4048 . 4049) (nil fontified nil 4047 . 4048) (nil fontified nil 4044 . 4047) (nil fontified nil 4031 . 4044) (nil fontified nil 4030 . 4031) (nil fontified nil 4026 . 4030) (nil fontified nil 4025 . 4026) (nil fontified nil 4019 . 4025) (nil fontified nil 4011 . 4019) (nil fontified nil 4008 . 4011) (nil fontified nil 4004 . 4008) (nil fontified nil 4002 . 4004) (nil fontified nil 4001 . 4002) (4001 . 4068) (t 25934 22736 689513 913000)) nil (25934 22804 494071 343000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t) 2 4 (fontified t)) . -4009) 4001) nil (25934 22804 494068 2000) 0 nil])
([nil nil ((4063 . 4072)) nil (25934 22804 494067 368000) 0 nil])
([nil nil ((apply -6 4073 4214 undo--wrap-and-run-primitive-undo 4073 4214 ((4144 . 4146) (4102 . 4104) (4081 . 4083) 4199))) nil (25934 22804 494066 891000) 0 nil])
([nil nil ((#(".append" 0 1 (fontified t) 1 7 (fontified t)) . 4014)) nil (25934 22804 494066 321000) 0 nil])
([nil nil ((4014 . 4015)) nil (25934 22804 494065 661000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4015)) nil (25934 22804 494064 815000) 0 nil])
([nil nil ((4015 . 4018)) nil (25934 22804 494064 79000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4015) (undo-tree-id6029 . -1) 4016) nil (25934 22804 494063 224000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -4057) (undo-tree-id6028 . -1) 4058) nil (25934 22804 494061 232000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4044) (undo-tree-id6018 . -1) (#("N" 0 1 (fontified t)) . -4045) (undo-tree-id6019 . -1) (#("a" 0 1 (fontified t)) . -4046) (undo-tree-id6020 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -4047) (undo-tree-id6021 . -1) (#("i" 0 1 (fontified nil)) . -4048) (undo-tree-id6022 . -1) (#("_" 0 1 (fontified t)) . -4049) (undo-tree-id6023 . -1) (#("p" 0 1 (fontified t)) . -4050) (undo-tree-id6024 . -1) (#("o" 0 1 (fontified t)) . -4051) (undo-tree-id6025 . -1) (#("p" 0 1 (fontified t)) . -4052) (undo-tree-id6026 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -4053) (undo-tree-id6027 . -1) 4054) nil (25934 22804 494056 723000) 0 nil])
([nil nil ((4044 . 4053)) nil (25934 22804 494034 544000) 0 nil])
([nil nil ((4056 . 4060) (t 25934 22804 543762 877000)) nil (25934 22819 376129 255000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4066) (4065 . 4066) (4064 . 4066) (#("(" 0 1 (fontified nil)) . -4064) (4060 . 4065)) nil (25934 22819 376127 521000) 0 nil])
([nil nil ((4065 . 4066)) nil (25934 22819 376125 552000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4246) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (#("a" 0 1 (fontified t)) . -4247) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (#("c" 0 1 (fontified t)) . -4248) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (#("k" 0 1 (fontified t)) . -4249) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -4250) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (#("n" 0 1 (fontified t)) . -4251) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (#("o" 0 1 (fontified t)) . -4252) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (#("i" 0 1 (fontified t)) . -4253) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (#("s" 0 1 (fontified nil)) . -4254) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (#("e" 0 1 (fontified nil)) . -4255) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4256) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (#("." 0 1 (fontified nil)) . -4257) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (#("s" 0 1 (fontified nil)) . -4258) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (#("q" 0 1 (fontified nil)) . -4259) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (#("u" 0 1 (fontified t)) . -4260) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (#("e" 0 1 (fontified t)) . -4261) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (#("e" 0 1 (fontified t)) . -4262) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (#("z" 0 1 (fontified t)) . -4263) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (#("e" 0 1 (fontified t)) . -4264) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4265) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4266) (#("0" 0 1 (fontified t)) . -4266) (undo-tree-id6178 . -1) 4267) nil (25934 22819 376114 548000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4238) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (#("o" 0 1 (fontified t)) . -4239) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (#("r" 0 1 (fontified t)) . -4240) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (#("c" 0 1 (fontified t)) . -4241) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (#("h" 0 1 (fontified t)) . -4242) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (#("." 0 1 (fontified t)) . -4243) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (#("v" 0 1 (fontified t)) . -4244) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (#("s" 0 1 (fontified t)) . -4245) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) 4246) nil (25934 22819 375979 207000) 0 nil])
([nil nil ((4238 . 4239)) nil (25934 22819 375887 590000) 0 nil])
([nil nil ((4239 . 4243)) nil (25934 22819 375879 641000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9255 . 9256) (nil fontified nil 9246 . 9256) (nil fontified nil 9242 . 9246) (nil fontified nil 9241 . 9242) (nil fontified nil 9239 . 9241) (nil fontified nil 9227 . 9239) (9227 . 9256) (t 25934 22819 467923 721000)) nil (25934 22843 648960 50000) 0 nil])
([nil nil ((9256 . 9272) (#("            " 0 12 (fontified t)) . 9256) (undo-tree-id6179 . -12) (undo-tree-id6180 . -12) (undo-tree-id6181 . -12)) nil (25934 22843 648952 849000) 0 nil])
([nil nil ((#("        print('rec_input', rec_input.shape)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 27 (fontified t) 27 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 44 (fontified t)) . -3217) (undo-tree-id6182 . -8) (undo-tree-id6183 . -8) (undo-tree-id6184 . -44) (undo-tree-id6185 . -44) (undo-tree-id6186 . -44) (undo-tree-id6187 . -44) (undo-tree-id6188 . -44) (undo-tree-id6189 . -44) (undo-tree-id6190 . -44) (undo-tree-id6191 . -44) (undo-tree-id6192 . -44) (undo-tree-id6193 . -44) (undo-tree-id6194 . -44) (undo-tree-id6195 . -44) (undo-tree-id6196 . -44) (undo-tree-id6197 . -44) (undo-tree-id6198 . -44) (undo-tree-id6199 . -44) (undo-tree-id6200 . -44) (undo-tree-id6201 . -44) (undo-tree-id6202 . -44) (undo-tree-id6203 . -44) (undo-tree-id6204 . -44) (undo-tree-id6205 . -44) (undo-tree-id6206 . -44) (undo-tree-id6207 . -44) (undo-tree-id6208 . -44) (undo-tree-id6209 . -44) (undo-tree-id6210 . -44) 3261 (t 25934 22843 728043 626000)) nil (25934 22867 875534 161000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8269) (#("." 0 1 (fontified t)) . 8269) (#("0" 0 1 (fontified t)) . 8269) (#(" " 0 1 (fontified nil)) . 8269) (#("," 0 1 (fontified nil)) . 8269) (#("0" 0 1 (fontified t)) . 8269) (#("." 0 1 (fontified nil)) . 8269) (#("0" 0 1 (fontified t)) . 8269) (#(" " 0 1 (fontified t)) . 8269) (#("," 0 1 (fontified t)) . 8269) (t 25934 22867 932229 264000)) nil (25934 23140 254976 573000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8416) (#("." 0 1 (fontified t)) . 8416) (#("0" 0 1 (fontified t)) . 8416) (#(" " 0 1 (fontified t)) . 8416) (#("," 0 1 (fontified t)) . 8416) (#("0" 0 1 (fontified t)) . 8416) (#("." 0 1 (fontified t)) . 8416) (#("0" 0 1 (fontified t)) . 8416)) nil (25934 23140 254972 31000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8414) (undo-tree-id6592 . -1) (#(" " 0 1 (fontified t)) . -8415) (undo-tree-id6593 . -1) 8416) nil (25934 23140 254969 150000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8465) (#("." 0 1 (fontified t)) . 8465) (#("0" 0 1 (fontified t)) . 8465) (#(" " 0 1 (fontified t)) . 8465) (#("," 0 1 (fontified t)) . 8465) (#("0" 0 1 (fontified t)) . 8465) (#("." 0 1 (fontified t)) . 8465) (#("0" 0 1 (fontified t)) . 8465) (#(" " 0 1 (fontified t)) . 8465) (#("," 0 1 (fontified t)) . 8465)) nil (25934 23140 254963 735000) 0 nil])
([nil nil ((#("                                       [0.0, 0.0, 1.0, 0.0],
" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) fontified t) 59 61 (fontified t)) . -8468) (undo-tree-id6591 . -61) 8529) nil (25934 23140 254960 771000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8507) (#(" " 0 1 (fontified t)) . 8507) (#("," 0 1 (fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("." 0 1 (fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 8507)) nil (25934 23140 254957 159000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 8507) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("." 0 1 (fontified t)) . 8507) (#("1" 0 1 (fontified t)) . 8507) (#(" " 0 1 (fontified t)) . 8507) (#("," 0 1 (fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("." 0 1 (fontified nil)) . 8507) (#("0" 0 1 (fontified nil)) . 8507) (#(" " 0 1 (fontified nil)) . 8507) (#("," 0 1 (fontified nil)) . 8507) (#("0" 0 1 (fontified nil)) . 8507) (#("." 0 1 (fontified t)) . 8507)) nil (25934 23140 254952 950000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -8504) (undo-tree-id6590 . -3) 8507) nil (25934 23140 254949 645000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8500) (undo-tree-id6589 . -4) 8504) nil (25934 23140 254946 981000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8496) (undo-tree-id6588 . -4) 8500) nil (25934 23140 254944 378000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8492) (undo-tree-id6587 . -4) 8496) nil (25934 23140 254942 50000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8488) (undo-tree-id6586 . -4) 8492) nil (25934 23140 254939 782000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8484) (undo-tree-id6585 . -4) 8488) nil (25934 23140 254937 312000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8480) (undo-tree-id6571 . -4) (undo-tree-id6572 . -4) (undo-tree-id6573 . -4) (undo-tree-id6574 . -4) (undo-tree-id6575 . -4) (undo-tree-id6576 . -4) (undo-tree-id6577 . -4) (undo-tree-id6578 . -4) (undo-tree-id6579 . -4) (undo-tree-id6580 . -4) (undo-tree-id6581 . -4) (undo-tree-id6582 . -4) (undo-tree-id6583 . -4) (undo-tree-id6584 . -4) 8484) nil (25934 23140 254934 626000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8476) (undo-tree-id6526 . -4) (undo-tree-id6527 . -4) (undo-tree-id6528 . -4) (undo-tree-id6529 . -4) (undo-tree-id6530 . -4) (undo-tree-id6531 . -4) (undo-tree-id6532 . -4) (undo-tree-id6533 . -4) (undo-tree-id6534 . -4) (undo-tree-id6535 . -4) (undo-tree-id6536 . -4) (undo-tree-id6537 . -4) (undo-tree-id6538 . -4) (undo-tree-id6539 . -4) (undo-tree-id6540 . -4) (undo-tree-id6541 . -4) (undo-tree-id6542 . -4) (undo-tree-id6543 . -4) (undo-tree-id6544 . -4) (undo-tree-id6545 . -4) (undo-tree-id6546 . -4) (undo-tree-id6547 . -4) (undo-tree-id6548 . -4) (undo-tree-id6549 . -4) (undo-tree-id6550 . -4) (undo-tree-id6551 . -4) (undo-tree-id6552 . -4) (undo-tree-id6553 . -4) (undo-tree-id6554 . -4) (undo-tree-id6555 . -4) (undo-tree-id6556 . -4) (undo-tree-id6557 . -4) (undo-tree-id6558 . -4) (undo-tree-id6559 . -4) (undo-tree-id6560 . -4) (undo-tree-id6561 . -4) (undo-tree-id6562 . -4) (undo-tree-id6563 . -4) (undo-tree-id6564 . -4) (undo-tree-id6565 . -4) (undo-tree-id6566 . -4) (undo-tree-id6567 . -4) (undo-tree-id6568 . -4) (undo-tree-id6569 . -4) (undo-tree-id6570 . -4) 8480) nil (25934 23140 254916 836000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8472) (undo-tree-id6457 . -4) (undo-tree-id6458 . -4) (undo-tree-id6459 . -4) (undo-tree-id6460 . -4) (undo-tree-id6461 . -4) (undo-tree-id6462 . -4) (undo-tree-id6463 . -4) (undo-tree-id6464 . -4) (undo-tree-id6465 . -4) (undo-tree-id6466 . -4) (undo-tree-id6467 . -4) (undo-tree-id6468 . -4) (undo-tree-id6469 . -4) (undo-tree-id6470 . -4) (undo-tree-id6471 . -4) (undo-tree-id6472 . -4) (undo-tree-id6473 . -4) (undo-tree-id6474 . -4) (undo-tree-id6475 . -4) (undo-tree-id6476 . -4) (undo-tree-id6477 . -4) (undo-tree-id6478 . -4) (undo-tree-id6479 . -4) (undo-tree-id6480 . -4) (undo-tree-id6481 . -4) (undo-tree-id6482 . -4) (undo-tree-id6483 . -4) (undo-tree-id6484 . -4) (undo-tree-id6485 . -4) (undo-tree-id6486 . -4) (undo-tree-id6487 . -4) (undo-tree-id6488 . -4) (undo-tree-id6489 . -4) (undo-tree-id6490 . -4) (undo-tree-id6491 . -4) (undo-tree-id6492 . -4) (undo-tree-id6493 . -4) (undo-tree-id6494 . -4) (undo-tree-id6495 . -4) (undo-tree-id6496 . -4) (undo-tree-id6497 . -4) (undo-tree-id6498 . -4) (undo-tree-id6499 . -4) (undo-tree-id6500 . -4) (undo-tree-id6501 . -4) (undo-tree-id6502 . -4) (undo-tree-id6503 . -4) (undo-tree-id6504 . -4) (undo-tree-id6505 . -4) (undo-tree-id6506 . -4) (undo-tree-id6507 . -4) (undo-tree-id6508 . -4) (undo-tree-id6509 . -4) (undo-tree-id6510 . -4) (undo-tree-id6511 . -4) (undo-tree-id6512 . -4) (undo-tree-id6513 . -4) (undo-tree-id6514 . -4) (undo-tree-id6515 . -4) (undo-tree-id6516 . -4) (undo-tree-id6517 . -4) (undo-tree-id6518 . -4) (undo-tree-id6519 . -4) (undo-tree-id6520 . -4) (undo-tree-id6521 . -4) (undo-tree-id6522 . -4) (undo-tree-id6523 . -4) (undo-tree-id6524 . -4) (undo-tree-id6525 . -4) 8476) nil (25934 23140 254865 564000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8468) (undo-tree-id6350 . -4) (undo-tree-id6351 . -4) (undo-tree-id6352 . -4) (undo-tree-id6353 . -4) (undo-tree-id6354 . -4) (undo-tree-id6355 . -4) (undo-tree-id6356 . -4) (undo-tree-id6357 . -4) (undo-tree-id6358 . -4) (undo-tree-id6359 . -4) (undo-tree-id6360 . -4) (undo-tree-id6361 . -4) (undo-tree-id6362 . -4) (undo-tree-id6363 . -4) (undo-tree-id6364 . -4) (undo-tree-id6365 . -4) (undo-tree-id6366 . -4) (undo-tree-id6367 . -4) (undo-tree-id6368 . -4) (undo-tree-id6369 . -4) (undo-tree-id6370 . -4) (undo-tree-id6371 . -4) (undo-tree-id6372 . -4) (undo-tree-id6373 . -4) (undo-tree-id6374 . -4) (undo-tree-id6375 . -4) (undo-tree-id6376 . -4) (undo-tree-id6377 . -4) (undo-tree-id6378 . -4) (undo-tree-id6379 . -4) (undo-tree-id6380 . -4) (undo-tree-id6381 . -4) (undo-tree-id6382 . -4) (undo-tree-id6383 . -4) (undo-tree-id6384 . -4) (undo-tree-id6385 . -4) (undo-tree-id6386 . -4) (undo-tree-id6387 . -4) (undo-tree-id6388 . -4) (undo-tree-id6389 . -4) (undo-tree-id6390 . -4) (undo-tree-id6391 . -4) (undo-tree-id6392 . -4) (undo-tree-id6393 . -4) (undo-tree-id6394 . -4) (undo-tree-id6395 . -4) (undo-tree-id6396 . -4) (undo-tree-id6397 . -4) (undo-tree-id6398 . -4) (undo-tree-id6399 . -4) (undo-tree-id6400 . -4) (undo-tree-id6401 . -4) (undo-tree-id6402 . -4) (undo-tree-id6403 . -4) (undo-tree-id6404 . -4) (undo-tree-id6405 . -4) (undo-tree-id6406 . -4) (undo-tree-id6407 . -4) (undo-tree-id6408 . -4) (undo-tree-id6409 . -4) (undo-tree-id6410 . -4) (undo-tree-id6411 . -4) (undo-tree-id6412 . -4) (undo-tree-id6413 . -4) (undo-tree-id6414 . -4) (undo-tree-id6415 . -4) (undo-tree-id6416 . -4) (undo-tree-id6417 . -4) (undo-tree-id6418 . -4) (undo-tree-id6419 . -4) (undo-tree-id6420 . -4) (undo-tree-id6421 . -4) (undo-tree-id6422 . -4) (undo-tree-id6423 . -4) (undo-tree-id6424 . -4) (undo-tree-id6425 . -4) (undo-tree-id6426 . -4) (undo-tree-id6427 . -4) (undo-tree-id6428 . -4) (undo-tree-id6429 . -4) (undo-tree-id6430 . -4) (undo-tree-id6431 . -4) (undo-tree-id6432 . -4) (undo-tree-id6433 . -4) (undo-tree-id6434 . -4) (undo-tree-id6435 . -4) (undo-tree-id6436 . -4) (undo-tree-id6437 . -4) (undo-tree-id6438 . -4) (undo-tree-id6439 . -4) (undo-tree-id6440 . -4) (undo-tree-id6441 . -4) (undo-tree-id6442 . -4) (undo-tree-id6443 . -4) (undo-tree-id6444 . -4) (undo-tree-id6445 . -4) (undo-tree-id6446 . -4) (undo-tree-id6447 . -4) (undo-tree-id6448 . -4) (undo-tree-id6449 . -4) (undo-tree-id6450 . -4) (undo-tree-id6451 . -4) (undo-tree-id6452 . -4) (undo-tree-id6453 . -4) (undo-tree-id6454 . -4) (undo-tree-id6455 . -4) (undo-tree-id6456 . -4) 8472) nil (25934 23140 254774 2000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8467) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) 8468) nil (25934 23140 254540 217000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8411) (undo-tree-id6737 . -1) (#("." 0 1 (fontified t)) . -8412) (undo-tree-id6738 . -1) (#("0" 0 1 (fontified t)) . -8413) (undo-tree-id6739 . -1) 8414 (t 25934 23140 326561 763000)) nil (25934 23159 418840 497000) 0 nil])
([nil nil ((8411 . 8416)) nil (25934 23159 418834 878000) 0 nil])
([nil nil ((8416 . 8419)) nil (25934 23159 418834 34000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -8416) (undo-tree-id6734 . -1) (#("o" 0 1 (fontified t)) . -8417) (undo-tree-id6735 . -1) (#("v" 0 1 (fontified t)) . -8418) (undo-tree-id6736 . -1) 8419) nil (25934 23159 418832 34000) 0 nil])
([nil nil ((8416 . 8419)) nil (25934 23159 418826 122000) 0 nil])
([nil nil ((8416 . 8419)) nil (25934 23159 418825 80000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8465) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (#("." 0 1 (fontified t)) . -8466) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (#("0" 0 1 (fontified t)) . -8467) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) 8468) nil (25934 23159 418815 321000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8475 . 8476) (nil fontified nil 8469 . 8476) (nil fontified nil 8465 . 8469) (8465 . 8476)) nil (25934 23159 418472 994000) 0 nil])
([nil nil ((apply 8 15077 15256 undo--wrap-and-run-primitive-undo 15077 15256 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15200) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15160) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15120) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15085) 15264))) nil (25934 23544 263063 987000) 0 nil])
([nil nil ((apply 12 14754 15056 undo--wrap-and-run-primitive-undo 14754 15056 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14975) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14920) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14864) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14824) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14784) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14762) 15068))) nil (25934 23548 735254 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14954 . 14955) (14856 . 14955)) ((#("            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
" 0 12 (fontified nil) 12 16 (face font-lock-keyword-face fontified nil) 16 20 (fontified nil) 20 30 (fontified nil) 30 31 (face (rainbow-delimiters-depth-1-face) fontified nil) 31 35 (face font-lock-keyword-face fontified nil) 35 42 (fontified nil) 42 43 (face (rainbow-delimiters-depth-2-face) fontified nil) 43 48 (fontified nil) 48 49 (face (rainbow-delimiters-depth-2-face) fontified nil) 49 52 (fontified nil) 52 56 (face font-lock-keyword-face fontified nil) 56 63 (fontified nil) 63 64 (face (rainbow-delimiters-depth-2-face) fontified nil) 64 70 (fontified nil) 70 71 (face font-lock-operator-face fontified nil) 71 73 (fontified nil) 73 74 (face (rainbow-delimiters-depth-2-face) fontified nil) 74 75 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t) 75 81 (fontified nil) 81 82 (face (rainbow-delimiters-depth-1-face) fontified nil) 82 86 (face font-lock-keyword-face fontified nil) 86 90 (fontified nil) 90 91 (face (rainbow-delimiters-depth-2-face) fontified nil) 91 96 (fontified nil) 96 97 (face (rainbow-delimiters-depth-2-face) fontified nil) 97 98 (face (rainbow-delimiters-depth-1-face) fontified nil) 98 99 (rear-nonsticky nil fontified nil)) . 14856) (nil rear-nonsticky t 14954 . 14955)) (25934 23549 716372 120000) 0 nil])
([nil nil ((#("            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
" 0 12 (fontified t) 12 16 (face font-lock-keyword-face fontified t) 16 20 (fontified t) 20 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 70 (fontified t) 70 71 (face font-lock-operator-face fontified t) 71 73 (fontified t) 73 74 (face (rainbow-delimiters-depth-2-face) fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 75 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-1-face) fontified t) 82 86 (face font-lock-keyword-face fontified t) 86 90 (fontified t) 90 91 (face (rainbow-delimiters-depth-2-face) fontified t) 91 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-2-face) fontified t) 97 98 (face (rainbow-delimiters-depth-1-face) fontified t) 98 99 (rear-nonsticky t fontified t)) . 14856) (undo-tree-id6828 . -99) 14955) nil (25934 23575 789298 3000) 0 nil] [nil nil ((14856 . 14876) (#("            " 0 12 (fontified t)) . 14856)) ((14856 . 14868) (#("                    " 0 20 (fontified t)) . 14856)) (25934 23548 404578 74000) 0 nil])
([nil nil ((nil fontified nil 15010 . 15011) (nil fontified nil 15009 . 15010) (nil fontified nil 15008 . 15009) (nil fontified nil 15003 . 15008) (nil fontified nil 15002 . 15003) (nil fontified nil 14998 . 15002) (nil fontified nil 14994 . 14998) (nil fontified nil 14993 . 14994) (nil fontified nil 14987 . 14993) (nil fontified nil 14986 . 14987) (nil fontified nil 14985 . 14986) (nil fontified nil 14983 . 14985) (nil fontified nil 14982 . 14983) (nil fontified nil 14976 . 14982) (nil fontified nil 14975 . 14976) (nil fontified nil 14968 . 14975) (nil fontified nil 14964 . 14968) (nil fontified nil 14961 . 14964) (nil fontified nil 14960 . 14961) (nil fontified nil 14955 . 14960) (nil fontified nil 14954 . 14955) (nil fontified nil 14947 . 14954) (nil fontified nil 14943 . 14947) (nil fontified nil 14942 . 14943) (nil fontified nil 14932 . 14942) (nil fontified nil 14928 . 14932) (nil fontified nil 14924 . 14928) (nil fontified nil 14912 . 14924) (14912 . 15011)) nil (25934 23575 789294 514000) 0 nil])
([nil nil ((#("                    self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
" 0 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 28 (fontified t) 28 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 43 (face font-lock-keyword-face fontified t) 43 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-2-face) fontified t) 57 60 (fontified t) 60 64 (face font-lock-keyword-face fontified t) 64 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 78 (fontified t) 78 79 (face font-lock-operator-face fontified t) 79 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 83 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 94 (face font-lock-keyword-face fontified t) 94 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) fontified t) 99 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-2-face) fontified t) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t) 106 107 (rear-nonsticky t fontified t)) . 14856) (undo-tree-id6740 . -107)) ((14856 . 14963)) (25934 23548 388028 492000) 0 nil])
([nil nil ((14912 . 14932) (#("            " 0 12 (fontified t)) . 14912)) nil (25934 23575 789289 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14967 . 14968) (nil fontified nil 14967 . 14968) (nil fontified nil 14966 . 14967) (nil fontified nil 14963 . 14966) (nil fontified nil 14962 . 14963) (nil fontified nil 14946 . 14962) (nil fontified nil 14945 . 14946) (nil fontified nil 14944 . 14945) (nil fontified nil 14942 . 14944) (nil fontified nil 14941 . 14942) (nil fontified nil 14940 . 14941) (nil fontified nil 14936 . 14940) (nil fontified nil 14932 . 14936) (nil fontified nil 14924 . 14932) (nil fontified nil 14920 . 14924) (nil fontified nil 14912 . 14920) (14912 . 14968)) ((#("                    self.Wab[i, i].bias.data.fill_(0.0)
" 0 8 (fontified nil) 8 12 (fontified nil) 12 20 (fontified nil) 20 24 (face font-lock-keyword-face fontified nil) 24 28 (fontified nil) 28 29 (face (rainbow-delimiters-depth-1-face) fontified nil) 29 30 (fontified nil) 30 32 (fontified nil) 32 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-1-face) fontified nil) 34 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 54 (fontified nil) 54 55 (face (rainbow-delimiters-depth-1-face) fontified nil) 55 56 (rear-nonsticky nil fontified nil)) . 14912) (nil rear-nonsticky t 14967 . 14968)) (25934 23548 386902 716000) 0 nil] [nil nil ((14775 . 14788)) ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 14775) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1)) (25934 23544 332970 812000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15017) (undo-tree-id6827 . -1) 15018) nil (25934 23575 789287 949000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 14831 . 14832) (nil fontified nil 14831 . 14832) (nil fontified nil 14830 . 14831) (nil fontified nil 14827 . 14830) (nil fontified nil 14826 . 14827) (nil fontified nil 14810 . 14826) (nil fontified nil 14809 . 14810) (nil fontified nil 14808 . 14809) (nil fontified nil 14806 . 14808) (nil fontified nil 14805 . 14806) (nil fontified nil 14804 . 14805) (nil fontified nil 14800 . 14804) (nil fontified nil 14796 . 14800) (nil fontified nil 14788 . 14796) (nil fontified nil 14784 . 14788) (nil fontified nil 14776 . 14784) (14776 . 14832)) ((#("                    self.Wab[i, i].bias.data.fill_(0.0)
" 0 8 (fontified nil) 8 12 (fontified nil) 12 20 (fontified nil) 20 24 (face font-lock-keyword-face fontified nil) 24 28 (fontified nil) 28 29 (face (rainbow-delimiters-depth-1-face) fontified nil) 29 30 (fontified nil) 30 32 (fontified nil) 32 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-1-face) fontified nil) 34 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 54 (fontified nil) 54 55 (face (rainbow-delimiters-depth-1-face) fontified nil) 55 56 (rear-nonsticky nil fontified nil)) . 14776) (undo-tree-id6741 . -55) (nil rear-nonsticky t 14831 . 14832)) (25934 23544 263748 789000) 0 nil])
([nil nil ((15017 . 15018)) nil (25934 23575 789285 253000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -14788) 14776) ((14788 . 14796)) (25934 23544 263026 817000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -15002) (undo-tree-id6812 . -1) (#("e" 0 1 (fontified t)) . -15003) (undo-tree-id6813 . -1) (#("l" 0 1 (fontified t)) . -15004) (undo-tree-id6814 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -15005) (undo-tree-id6815 . -1) (#("." 0 1 (fontified t)) . -15006) (undo-tree-id6816 . -1) (#("J" 0 1 (fontified t)) . -15007) (undo-tree-id6817 . -1) (#("a" 0 1 (fontified t)) . -15008) (undo-tree-id6818 . -1) (#("0" 0 1 (fontified t)) . -15009) (undo-tree-id6819 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15010) (undo-tree-id6820 . -1) (#("i" 0 1 (fontified t)) . -15011) (undo-tree-id6821 . -1) (#("_" 0 1 (fontified t)) . -15012) (undo-tree-id6822 . -1) (#("p" 0 1 (fontified t)) . -15013) (undo-tree-id6823 . -1) (#("o" 0 1 (fontified t)) . -15014) (undo-tree-id6824 . -1) (#("p" 0 1 (fontified t)) . -15015) (undo-tree-id6825 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15016) (undo-tree-id6826 . -1) 15017) nil (25934 23575 789279 876000) 0 nil])
nil
([nil nil ((15002 . 15005)) nil (25934 23575 789257 808000) 0 nil])
([nil nil ((nil fontified nil 15156 . 15157) (nil fontified nil 15155 . 15156) (nil fontified nil 15152 . 15155) (nil fontified nil 15151 . 15152) (nil fontified nil 15145 . 15151) (nil fontified nil 15144 . 15145) (nil fontified nil 15143 . 15144) (nil fontified nil 15141 . 15143) (nil fontified nil 15140 . 15141) (nil fontified nil 15134 . 15140) (nil fontified nil 15133 . 15134) (nil fontified nil 15126 . 15133) (nil fontified nil 15122 . 15126) (nil fontified nil 15119 . 15122) (nil fontified nil 15118 . 15119) (nil fontified nil 15113 . 15118) (nil fontified nil 15112 . 15113) (nil fontified nil 15105 . 15112) (nil fontified nil 15101 . 15105) (nil fontified nil 15100 . 15101) (nil fontified nil 15090 . 15100) (nil fontified nil 15086 . 15090) (nil fontified nil 15082 . 15086) (nil fontified nil 15062 . 15082) (15062 . 15157)) nil (25934 23575 789255 998000) 0 nil])
([nil nil ((#("                    self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(0.0)
" 0 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 28 (fontified t) 28 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 43 (face font-lock-keyword-face fontified t) 43 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-2-face) fontified t) 57 60 (fontified t) 60 64 (face font-lock-keyword-face fontified t) 64 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 78 (fontified t) 78 79 (face font-lock-operator-face fontified t) 79 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 83 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t rear-nonsticky t)) . 15062) (undo-tree-id6811 . -95) 15157) nil (25934 23575 789249 977000) 0 nil])
([nil nil ((nil fontified nil 15245 . 15246) (nil fontified nil 15244 . 15245) (nil fontified nil 15241 . 15244) (nil fontified nil 15240 . 15241) (nil fontified nil 15234 . 15240) (nil fontified nil 15233 . 15234) (nil fontified nil 15232 . 15233) (nil fontified nil 15230 . 15232) (nil fontified nil 15229 . 15230) (nil fontified nil 15223 . 15229) (nil fontified nil 15222 . 15223) (nil fontified nil 15215 . 15222) (nil fontified nil 15211 . 15215) (nil fontified nil 15208 . 15211) (nil fontified nil 15207 . 15208) (nil fontified nil 15202 . 15207) (nil fontified nil 15201 . 15202) (nil fontified nil 15194 . 15201) (nil fontified nil 15190 . 15194) (nil fontified nil 15189 . 15190) (nil fontified nil 15179 . 15189) (nil fontified nil 15175 . 15179) (nil fontified nil 15171 . 15175) (nil fontified nil 15151 . 15171) (15151 . 15246)) nil (25934 23575 789246 625000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -15241) (undo-tree-id6808 . -1) (#("." 0 1 (fontified t)) . -15242) (undo-tree-id6809 . -1) (#("0" 0 1 (fontified t)) . -15243) (undo-tree-id6810 . -1) 15244) nil (25934 23575 789240 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15276 . 15277) (nil fontified nil 15276 . 15277) (nil fontified nil 15275 . 15276) (nil fontified nil 15274 . 15275) (nil fontified nil 15273 . 15274) (nil fontified nil 15270 . 15273) (nil fontified nil 15266 . 15270) (nil fontified nil 15265 . 15266) (nil fontified nil 15254 . 15265) (nil fontified nil 15253 . 15254) (nil fontified nil 15252 . 15253) (nil fontified nil 15251 . 15252) (nil fontified nil 15250 . 15251) (nil fontified nil 15249 . 15250) (nil fontified nil 15245 . 15249) (nil fontified nil 15241 . 15245) (15241 . 15277)) nil (25934 23575 789223 694000) 0 nil])
([nil nil ((apply -2 15062 15281 undo--wrap-and-run-primitive-undo 15062 15281 ((15082 . 15084) 15151))) nil (25934 23575 789219 898000) 0 nil])
([nil nil ((apply -2 14856 15009 undo--wrap-and-run-primitive-undo 14856 15009 ((14876 . 14878) 14912))) nil (25934 23575 789212 790000) 0 nil])
([nil nil ((nil fontified nil 15565 . 15566) (nil fontified nil 15564 . 15565) (nil fontified nil 15561 . 15564) (nil fontified nil 15560 . 15561) (nil fontified nil 15554 . 15560) (nil fontified nil 15553 . 15554) (nil fontified nil 15552 . 15553) (nil fontified nil 15550 . 15552) (nil fontified nil 15549 . 15550) (nil fontified nil 15543 . 15549) (nil fontified nil 15542 . 15543) (nil fontified nil 15535 . 15542) (nil fontified nil 15531 . 15535) (nil fontified nil 15528 . 15531) (nil fontified nil 15527 . 15528) (nil fontified nil 15522 . 15527) (nil fontified nil 15521 . 15522) (nil fontified nil 15514 . 15521) (nil fontified nil 15510 . 15514) (nil fontified nil 15509 . 15510) (nil fontified nil 15499 . 15509) (nil fontified nil 15495 . 15499) (nil fontified nil 15491 . 15495) (nil fontified nil 15471 . 15491) (15471 . 15566) (t 25934 23575 867659 830000)) nil (25934 23586 291540 704000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -15561) (undo-tree-id6829 . -1) (#("." 0 1 (fontified t)) . -15562) (undo-tree-id6830 . -1) (#("0" 0 1 (fontified t)) . -15563) (undo-tree-id6831 . -1) 15564) nil (25934 23586 291535 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15571 . 15572) (nil fontified nil 15571 . 15572) (nil fontified nil 15570 . 15571) (nil fontified nil 15569 . 15570) (nil fontified nil 15565 . 15569) (nil fontified nil 15561 . 15565) (15561 . 15572)) nil (25934 23586 291525 236000) 0 nil])
([nil nil ((apply -2 15407 15576 undo--wrap-and-run-primitive-undo 15407 15576 ((15427 . 15429) 15471))) nil (25934 23586 291519 84000) 0 nil])
([nil nil ((apply 18 15585 16048 undo--wrap-and-run-primitive-undo 15585 16048 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15997) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15975) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15867) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15842) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15766) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15726) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15680) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15651) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15593) 16066))) nil (25934 23597 228620 236000) 0 nil])
([nil nil ((apply 10 16048 16292 undo--wrap-and-run-primitive-undo 16048 16292 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16240) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16200) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16165) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16136) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16077) 16302))) nil (25934 23597 228619 601000) 0 nil])
([nil nil ((16292 . 16308) (#("        " 0 8 (fontified t)) . 16292) (undo-tree-id6832 . -8) (undo-tree-id6833 . -8)) nil (25934 23597 228618 466000) 0 nil])
([nil nil ((nil fontified nil 16394 . 16395) (nil fontified nil 16393 . 16394) (nil fontified nil 16392 . 16393) (nil fontified nil 16391 . 16392) (nil fontified nil 16390 . 16391) (nil fontified nil 16386 . 16390) (nil fontified nil 16382 . 16386) (nil fontified nil 16381 . 16382) (nil fontified nil 16375 . 16381) (nil fontified nil 16374 . 16375) (nil fontified nil 16373 . 16374) (nil fontified nil 16371 . 16373) (nil fontified nil 16370 . 16371) (nil fontified nil 16364 . 16370) (nil fontified nil 16363 . 16364) (nil fontified nil 16356 . 16363) (nil fontified nil 16352 . 16356) (nil fontified nil 16349 . 16352) (nil fontified nil 16348 . 16349) (nil fontified nil 16343 . 16348) (nil fontified nil 16342 . 16343) (nil fontified nil 16335 . 16342) (nil fontified nil 16331 . 16335) (nil fontified nil 16330 . 16331) (nil fontified nil 16320 . 16330) (nil fontified nil 16316 . 16320) (nil fontified nil 16312 . 16316) (nil fontified nil 16292 . 16312) (16292 . 16395)) nil (25934 23597 228606 635000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16308) 16292) nil (25934 23597 228598 102000) 0 nil])
([nil nil ((apply -2 16232 16393 undo--wrap-and-run-primitive-undo 16232 16393 ((16248 . 16250) 16292))) nil (25934 23601 34144 347000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 16363) (t 25934 23601 94576 458000)) nil (25934 23648 487465 735000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16363)) nil (25934 23648 487464 109000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16364)) nil (25934 23648 487463 219000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 16342)) nil (25934 23648 487461 993000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15525)) nil (25934 23648 487460 980000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15542)) nil (25934 23648 487459 949000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15542)) nil (25934 23648 487458 977000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15543)) nil (25934 23648 487458 33000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15526)) nil (25934 23648 487456 949000) 0 nil])
([nil nil ((15527 . 15528)) nil (25934 23648 487456 155000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -15527) (undo-tree-id6853 . -1) 15528) nil (25934 23648 487454 713000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15527)) nil (25934 23648 487450 387000) 0 nil])
([nil nil ((nil fontified nil 16045 . 16046) (nil fontified nil 16044 . 16045) (nil fontified nil 16043 . 16044) (nil fontified nil 16042 . 16043) (nil fontified nil 16041 . 16042) (nil fontified nil 16037 . 16041) (nil fontified nil 16033 . 16037) (nil fontified nil 16032 . 16033) (nil fontified nil 16026 . 16032) (nil fontified nil 16025 . 16026) (nil fontified nil 16024 . 16025) (nil fontified nil 16023 . 16024) (nil fontified nil 16022 . 16023) (nil fontified nil 16021 . 16022) (nil fontified nil 16020 . 16021) (nil fontified nil 16013 . 16020) (nil fontified nil 16009 . 16013) (nil fontified nil 16008 . 16009) (nil fontified nil 16007 . 16008) (nil fontified nil 16006 . 16007) (nil fontified nil 16005 . 16006) (nil fontified nil 15998 . 16005) (nil fontified nil 15994 . 15998) (nil fontified nil 15993 . 15994) (nil fontified nil 15983 . 15993) (nil fontified nil 15979 . 15983) (nil fontified nil 15975 . 15979) (nil fontified nil 15955 . 15975) (15955 . 16046)) nil (25934 23648 487447 748000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16026) (undo-tree-id6834 . -1) (#("f" 0 1 (fontified t)) . -16027) (undo-tree-id6835 . -1) (#("i" 0 1 (fontified t)) . -16028) (undo-tree-id6836 . -1) (#("l" 0 1 (fontified t)) . -16029) (undo-tree-id6837 . -1) (#("l" 0 1 (fontified t)) . -16030) (undo-tree-id6838 . -1) (#("_" 0 1 (fontified t)) . -16031) (undo-tree-id6839 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16032) (undo-tree-id6840 . -1) (#("s" 0 1 (fontified t)) . -16033) (undo-tree-id6841 . -1) (#("e" 0 1 (fontified t)) . -16034) (undo-tree-id6842 . -1) (#("l" 0 1 (fontified t)) . -16035) (undo-tree-id6843 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16036) (undo-tree-id6844 . -1) (#("." 0 1 (fontified t)) . -16037) (undo-tree-id6845 . -1) (#("J" 0 1 (fontified t)) . -16038) (undo-tree-id6846 . -1) (#("a" 0 1 (fontified t)) . -16039) (undo-tree-id6847 . -1) (#("0" 0 1 (fontified t)) . -16040) (undo-tree-id6848 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -16041) (undo-tree-id6849 . -1) (#("i" 0 1 (fontified t)) . -16042) (undo-tree-id6850 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . -16043) (undo-tree-id6851 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16044) (undo-tree-id6852 . -1) 16045) nil (25934 23648 487435 142000) 0 nil])
([nil nil ((16026 . 16029)) nil (25934 23648 487389 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16088 . 16089) (nil fontified nil 16086 . 16089) (nil fontified nil 16085 . 16086) (nil fontified nil 16082 . 16085) (nil fontified nil 16081 . 16082) (nil fontified nil 16080 . 16081) (nil fontified nil 16079 . 16080) (nil fontified nil 16078 . 16079) (nil fontified nil 16077 . 16078) (nil fontified nil 16076 . 16077) (nil fontified nil 16075 . 16076) (nil fontified nil 16072 . 16075) (nil fontified nil 16068 . 16072) (nil fontified nil 16067 . 16068) (nil fontified nil 16056 . 16067) (nil fontified nil 16055 . 16056) (nil fontified nil 16054 . 16055) (nil fontified nil 16053 . 16054) (nil fontified nil 16052 . 16053) (nil fontified nil 16051 . 16052) (nil fontified nil 16047 . 16051) (nil fontified nil 16043 . 16047) (nil fontified nil 16042 . 16043) (nil fontified nil 16041 . 16042) (nil fontified nil 16040 . 16041) (nil fontified nil 16039 . 16040) (nil fontified nil 16038 . 16039) (nil fontified nil 16037 . 16038) (nil fontified nil 16033 . 16037) (nil fontified nil 16029 . 16033) (16029 . 16089)) nil (25934 23648 487386 149000) 0 nil])
([nil nil ((apply -2 15847 16092 undo--wrap-and-run-primitive-undo 15847 16092 ((15867 . 15869) 15847))) nil (25934 23648 487374 855000) 0 nil])
([nil nil ((apply -4 16092 16198 undo--wrap-and-run-primitive-undo 16092 16198 ((16132 . 16134) (16108 . 16110) 16173))) nil (25934 23669 620253 201000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16193) (undo-tree-id6854 . -4) 16177) nil (25934 23669 620242 28000) 0 nil])
([nil nil ((#("                if i==0:
" 0 8 (fontified t) 8 15 (fontified t) 15 16 (fontified t) 16 18 (face font-lock-keyword-face fontified t) 18 20 (fontified t) 20 22 (face font-lock-operator-face fontified t) 22 25 (fontified t)) . -15822) (undo-tree-id7038 . -25) 15847 (t 25934 23669 723985 6000)) nil (25934 23729 418111 218000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15838) 15822) nil (25934 23729 418107 490000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15944) (undo-tree-id7037 . -3)) nil (25934 23729 418105 873000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -15849) (undo-tree-id7036 . -1) 15850) nil (25934 23729 418102 592000) 0 nil])
([nil nil ((15849 . 15850)) nil (25934 23729 418098 302000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -15852) (undo-tree-id7035 . -1) 15853) nil (25934 23729 418096 623000) 0 nil])
([nil nil ((15852 . 15853)) nil (25934 23729 418093 498000) 0 nil])
([nil nil ((#("                # self.Wab[0, 0].bias.data = self.Ja0[i] + self.ksi[0] * torch.sqrt(self.Ka[0]) * self.M0
" 0 2 (fontified t) 2 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-face fontified t) 22 26 (face font-lock-comment-face fontified t) 26 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-face fontified t) 31 32 (face font-lock-comment-face fontified t) 32 41 (face font-lock-comment-face fontified t) 41 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 45 (face font-lock-comment-face fontified t) 45 49 (face font-lock-comment-face fontified t) 49 53 (face font-lock-comment-face fontified t) 53 54 (face font-lock-comment-face fontified t) 54 55 (face font-lock-comment-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 63 (face font-lock-comment-face fontified t) 63 67 (face font-lock-comment-face fontified t) 67 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 83 (face font-lock-comment-face fontified t) 83 84 (face font-lock-comment-face fontified t) 84 88 (face font-lock-comment-face fontified t) 88 91 (face font-lock-comment-face fontified t) 91 92 (face font-lock-comment-face fontified t) 92 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 96 (face font-lock-comment-face fontified t) 96 97 (face font-lock-comment-face fontified t) 97 98 (face font-lock-comment-face fontified t) 98 101 (face font-lock-comment-face fontified t) 101 102 (face font-lock-comment-face fontified t) 102 106 (face font-lock-comment-face fontified t)) . 15822) (undo-tree-id7033 . -106) (undo-tree-id7034 . -106) 15928) nil (25934 23729 418091 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15798 . 15799) (nil fontified nil 15795 . 15799) (nil fontified nil 15794 . 15795) (nil fontified nil 15791 . 15794) (nil fontified nil 15790 . 15791) (nil fontified nil 15789 . 15790) (nil fontified nil 15788 . 15789) (nil fontified nil 15787 . 15788) (nil fontified nil 15786 . 15787) (nil fontified nil 15785 . 15786) (nil fontified nil 15784 . 15785) (nil fontified nil 15781 . 15784) (nil fontified nil 15777 . 15781) (nil fontified nil 15776 . 15777) (nil fontified nil 15765 . 15776) (nil fontified nil 15764 . 15765) (nil fontified nil 15763 . 15764) (nil fontified nil 15762 . 15763) (nil fontified nil 15761 . 15762) (nil fontified nil 15760 . 15761) (nil fontified nil 15756 . 15760) (nil fontified nil 15752 . 15756) (nil fontified nil 15751 . 15752) (nil fontified nil 15750 . 15751) (nil fontified nil 15749 . 15750) (nil fontified nil 15748 . 15749) (nil fontified nil 15747 . 15748) (nil fontified nil 15746 . 15747) (nil fontified nil 15742 . 15746) (nil fontified nil 15738 . 15742) (nil fontified nil 15737 . 15738) (nil fontified nil 15736 . 15737) (nil fontified nil 15734 . 15736) (nil fontified nil 15725 . 15734) (nil fontified nil 15724 . 15725) (nil fontified nil 15721 . 15724) (nil fontified nil 15719 . 15721) (nil fontified nil 15715 . 15719) (nil fontified nil 15711 . 15715) (nil fontified nil 15709 . 15711) (nil fontified nil 15701 . 15709) (nil fontified nil 15695 . 15701) (nil fontified nil 15693 . 15695) (15693 . 15799)) nil (25934 23729 418083 153000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15705) (undo-tree-id7032 . -4) 15709) nil (25934 23729 418066 97000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 15705)) nil (25934 23729 418063 155000) 0 nil])
([nil nil ((15694 . 15710) (#(" " 0 1 (fontified nil)) . 15694) (#("            " 0 2 (fontified nil) 2 8 (fontified nil) 8 12 (fontified nil)) . 15693) (undo-tree-id7031 . -12) (15705 . 15706)) nil (25934 23729 418061 242000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15706) (undo-tree-id7030 . -4) 15710) nil (25934 23729 418057 410000) 0 nil])
([nil nil ((apply -2 15694 15809 undo--wrap-and-run-primitive-undo 15694 15809 ((15706 . 15708) 15794))) nil (25934 23729 418054 53000) 0 nil])
([nil nil ((#("                self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]] = self.Ja0[i] + self.ksi[0] * torch.sqrt(self.Ka[0]) * self.M0
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (fontified t) 50 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 63 (fontified t) 63 64 (face font-lock-operator-face fontified t) 64 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-2-face) fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 67 68 (fontified t) 68 69 (face font-lock-operator-face fontified t) 69 70 (fontified t) 70 74 (face font-lock-keyword-face fontified t) 74 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 84 (fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 94 (fontified t) 94 95 (face (rainbow-delimiters-depth-1-face) fontified t) 95 96 (fontified t) 96 97 (face font-lock-operator-face fontified t) 97 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-1-face) fontified t) 109 113 (face font-lock-keyword-face fontified t) 113 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) fontified t) 117 118 (fontified t) 118 119 (face (rainbow-delimiters-depth-2-face) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (fontified t) 121 122 (face font-lock-operator-face fontified t) 122 123 (fontified t) 123 126 (face font-lock-keyword-face fontified t) 126 127 (face font-lock-keyword-face fontified t) 127 129 (fontified t) 129 130 (fontified t rear-nonsticky t) 130 131 (fontified t rear-nonsticky t)) . 15925) (undo-tree-id7026 . -70) (undo-tree-id7027 . -16) (undo-tree-id7028 . -131) (undo-tree-id7029 . -131) 16056) nil (25934 23729 418052 214000) 0 nil])
([nil nil ((nil fontified nil 15926 . 15927) (nil fontified nil 15925 . 15926) (nil fontified nil 15923 . 15925) (nil fontified nil 15922 . 15923) (nil fontified nil 15919 . 15922) (nil fontified nil 15918 . 15919) (nil fontified nil 15917 . 15918) (nil fontified nil 15916 . 15917) (nil fontified nil 15915 . 15916) (nil fontified nil 15914 . 15915) (nil fontified nil 15913 . 15914) (nil fontified nil 15912 . 15913) (nil fontified nil 15909 . 15912) (nil fontified nil 15905 . 15909) (nil fontified nil 15904 . 15905) (nil fontified nil 15893 . 15904) (nil fontified nil 15892 . 15893) (nil fontified nil 15891 . 15892) (nil fontified nil 15890 . 15891) (nil fontified nil 15889 . 15890) (nil fontified nil 15888 . 15889) (nil fontified nil 15884 . 15888) (nil fontified nil 15880 . 15884) (nil fontified nil 15879 . 15880) (nil fontified nil 15878 . 15879) (nil fontified nil 15877 . 15878) (nil fontified nil 15876 . 15877) (nil fontified nil 15875 . 15876) (nil fontified nil 15874 . 15875) (nil fontified nil 15870 . 15874) (nil fontified nil 15866 . 15870) (nil fontified nil 15865 . 15866) (nil fontified nil 15864 . 15865) (nil fontified nil 15863 . 15864) (nil fontified nil 15862 . 15863) (nil fontified nil 15861 . 15862) (nil fontified nil 15860 . 15861) (nil fontified nil 15859 . 15860) (nil fontified nil 15858 . 15859) (nil fontified nil 15857 . 15858) (nil fontified nil 15850 . 15857) (nil fontified nil 15846 . 15850) (nil fontified nil 15845 . 15846) (nil fontified nil 15844 . 15845) (nil fontified nil 15843 . 15844) (nil fontified nil 15842 . 15843) (nil fontified nil 15835 . 15842) (nil fontified nil 15831 . 15835) (nil fontified nil 15830 . 15831) (nil fontified nil 15820 . 15830) (nil fontified nil 15816 . 15820) (nil fontified nil 15812 . 15816) (nil fontified nil 15796 . 15812) (15796 . 15927)) nil (25934 23729 418035 985000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15808) 15796) nil (25934 23729 418013 635000) 0 nil])
([nil nil ((#("                #     self.Wab[i, i].bias.data = self.Ja0[i]
" 0 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-delimiter-face fontified t) 22 26 (face font-lock-comment-face fontified t) 26 30 (face font-lock-comment-face fontified t) 30 31 (face font-lock-comment-face fontified t) 31 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 36 (face font-lock-comment-face fontified t) 36 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 53 (face font-lock-comment-face fontified t) 53 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 60 (face font-lock-comment-face fontified t) 60 61 (face font-lock-comment-face fontified t)) . -16076) (undo-tree-id7025 . -61) 16137) nil (25934 23729 418012 646000) 0 nil])
([nil nil ((#("                # else:
" 0 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-face fontified t) 22 24 (face font-lock-comment-face fontified t)) . -16052) (undo-tree-id7023 . -24) (undo-tree-id7024 . -24) 16076) nil (25934 23729 418010 632000) 0 nil])
([nil nil ((apply -2 15936 16054 undo--wrap-and-run-primitive-undo 15936 16054 ((15948 . 15950) 15976))) nil (25934 23729 418007 715000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15990) 15978) nil (25934 23729 418006 722000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15871) (undo-tree-id7022 . -1) 15872) nil (25934 23729 418005 738000) 0 nil])
([nil nil ((15871 . 15872)) nil (25934 23729 418003 822000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15854) (undo-tree-id7021 . -1) 15855) nil (25934 23729 418003 67000) 0 nil])
([nil nil ((15854 . 15855)) nil (25934 23729 417999 346000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15839) (undo-tree-id7020 . -1) 15840) nil (25934 23729 417998 536000) 0 nil])
([nil nil ((15839 . 15840)) nil (25934 23729 417996 231000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 15856)) nil (25934 23729 417995 121000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -15854) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -15855) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) 15856) nil (25934 23729 417987 279000) 0 nil])
([nil nil ((15854 . 15855)) nil (25934 23729 417735 803000) 0 nil])
([nil nil ((nil fontified nil 16311 . 16312) (nil fontified nil 16310 . 16311) (nil fontified nil 16308 . 16310) (nil fontified nil 16307 . 16308) (nil fontified nil 16304 . 16307) (nil fontified nil 16303 . 16304) (nil fontified nil 16302 . 16303) (nil fontified nil 16301 . 16302) (nil fontified nil 16300 . 16301) (nil fontified nil 16299 . 16300) (nil fontified nil 16298 . 16299) (nil fontified nil 16297 . 16298) (nil fontified nil 16294 . 16297) (nil fontified nil 16290 . 16294) (nil fontified nil 16289 . 16290) (nil fontified nil 16278 . 16289) (nil fontified nil 16277 . 16278) (nil fontified nil 16276 . 16277) (nil fontified nil 16275 . 16276) (nil fontified nil 16274 . 16275) (nil fontified nil 16273 . 16274) (nil fontified nil 16269 . 16273) (nil fontified nil 16265 . 16269) (nil fontified nil 16264 . 16265) (nil fontified nil 16263 . 16264) (nil fontified nil 16262 . 16263) (nil fontified nil 16261 . 16262) (nil fontified nil 16260 . 16261) (nil fontified nil 16259 . 16260) (nil fontified nil 16255 . 16259) (nil fontified nil 16251 . 16255) (nil fontified nil 16250 . 16251) (nil fontified nil 16249 . 16250) (nil fontified nil 16248 . 16249) (nil fontified nil 16247 . 16248) (nil fontified nil 16246 . 16247) (nil fontified nil 16245 . 16246) (nil fontified nil 16244 . 16245) (nil fontified nil 16237 . 16244) (nil fontified nil 16233 . 16237) (nil fontified nil 16232 . 16233) (nil fontified nil 16231 . 16232) (nil fontified nil 16230 . 16231) (nil fontified nil 16229 . 16230) (nil fontified nil 16222 . 16229) (nil fontified nil 16218 . 16222) (nil fontified nil 16217 . 16218) (nil fontified nil 16213 . 16217) (nil fontified nil 16207 . 16213) (nil fontified nil 16203 . 16207) (nil fontified nil 16199 . 16203) (nil fontified nil 16187 . 16199) (16187 . 16312) (t 25934 23729 498075 672000)) nil (25934 23740 292085 418000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16290) (undo-tree-id8137 . -1) (#("e" 0 1 (fontified t)) . -16291) (undo-tree-id8138 . -1) (#("l" 0 1 (fontified t)) . -16292) (undo-tree-id8139 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16293) (undo-tree-id8140 . -1) (#("." 0 1 (fontified t)) . -16294) (undo-tree-id8141 . -1) (#("K" 0 1 (fontified t)) . -16295) (undo-tree-id8142 . -1) (#("a" 0 1 (fontified t)) . -16296) (undo-tree-id8143 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -16297) (undo-tree-id8144 . -1) (#("0" 0 1 (fontified nil)) . -16298) (undo-tree-id8145 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -16299) (undo-tree-id8146 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16300) (undo-tree-id8147 . -1) (#(" " 0 1 (fontified nil)) . -16301) (undo-tree-id8148 . -1) (#("*" 0 1 (face font-lock-operator-face fontified nil)) . -16302) (undo-tree-id8149 . -1) (#(" " 0 1 (fontified nil)) . -16303) (undo-tree-id8150 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -16304) (undo-tree-id8151 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -16305) (undo-tree-id8152 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -16306) (undo-tree-id8153 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16307) (undo-tree-id8154 . -1) (#("." 0 1 (fontified t)) . -16308) (undo-tree-id8155 . -1) (#("M" 0 1 (fontified t)) . -16309) (undo-tree-id8156 . -1) (#("0" 0 1 (fontified t rear-nonsticky t)) . -16310) (undo-tree-id8157 . -1) 16311) nil (25934 23740 292073 225000) 0 nil])
([nil nil ((#("." 0 1 (fontified nil)) . -16269) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (#("k" 0 1 (fontified nil)) . -16270) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (#("s" 0 1 (fontified nil)) . -16271) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (#("i" 0 1 (fontified nil)) . -16272) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16273) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (#("0" 0 1 (fontified t)) . -16274) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16275) (undo-tree-id8122 . -1) (#(" " 0 1 (fontified t)) . -16276) (undo-tree-id8123 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -16277) (undo-tree-id8124 . -1) (#(" " 0 1 (fontified t)) . -16278) (undo-tree-id8125 . -1) (#("t" 0 1 (fontified t)) . -16279) (undo-tree-id8126 . -1) (#("o" 0 1 (fontified t)) . -16280) (undo-tree-id8127 . -1) (#("r" 0 1 (fontified t)) . -16281) (undo-tree-id8128 . -1) (#("c" 0 1 (fontified t)) . -16282) (undo-tree-id8129 . -1) (#("h" 0 1 (fontified t)) . -16283) (undo-tree-id8130 . -1) (#("." 0 1 (fontified t)) . -16284) (undo-tree-id8131 . -1) (#("s" 0 1 (fontified t)) . -16285) (undo-tree-id8132 . -1) (#("q" 0 1 (fontified t)) . -16286) (undo-tree-id8133 . -1) (#("r" 0 1 (fontified t)) . -16287) (undo-tree-id8134 . -1) (#("t" 0 1 (fontified t)) . -16288) (undo-tree-id8135 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16289) (undo-tree-id8136 . -1) 16290) nil (25934 23740 292043 345000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16262) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -16263) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (#(" " 0 1 (fontified t)) . -16264) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (#("s" 0 1 (fontified t)) . -16265) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (#("e" 0 1 (fontified t)) . -16266) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (#("l" 0 1 (fontified t)) . -16267) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -16268) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) 16269) nil (25934 23756 347535 584000) 0 nil])
([nil nil ((#("                self.Wab.bias.data[self.csumNa[i] : self.csumNa[i+1]].fill_(self.Ja0[i])
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (fontified t) 65 66 (face font-lock-operator-face fontified t) 66 67 (fontified t) 67 68 (face (rainbow-delimiters-depth-2-face) fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 69 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-1-face) fontified t) 76 80 (face font-lock-keyword-face fontified t) 80 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 89 (fontified t rear-nonsticky t)) . 16366) (undo-tree-id8291 . -89) (undo-tree-id8292 . -89) (t 25934 23740 349757 900000)) nil (25934 23771 877562 916000) 0 nil] [nil nil ((#("                self.Wab.bias.data[self.csumNa[i] : self.csumNa[i+1]].fill_(self.Ja0[i])
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (fontified t) 65 66 (face font-lock-operator-face fontified t) 66 67 (fontified t) 67 68 (face (rainbow-delimiters-depth-2-face) fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 69 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-1-face) fontified t) 76 80 (face font-lock-keyword-face fontified t) 80 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 89 (fontified t rear-nonsticky t)) . 16366) (undo-tree-id8161 . -89) (undo-tree-id8162 . -89) 16455 (t 25934 23740 349757 900000)) ((16366 . 16455)) (25934 23755 895898 557000) 0 nil])
([nil nil ((apply 2 16304 16364 undo--wrap-and-run-primitive-undo 16304 16364 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16320) 16366))) nil (25934 23771 877550 781000) 0 nil])
([nil nil ((nil fontified nil 16351 . 16352) (nil fontified nil 16350 . 16351) (nil fontified nil 16349 . 16350) (nil fontified nil 16348 . 16349) (nil fontified nil 16347 . 16348) (nil fontified nil 16343 . 16347) (nil fontified nil 16339 . 16343) (nil fontified nil 16338 . 16339) (nil fontified nil 16332 . 16338) (nil fontified nil 16331 . 16332) (nil fontified nil 16330 . 16331) (nil fontified nil 16329 . 16330) (nil fontified nil 16328 . 16329) (nil fontified nil 16327 . 16328) (nil fontified nil 16326 . 16327) (nil fontified nil 16319 . 16326) (nil fontified nil 16315 . 16319) (nil fontified nil 16312 . 16315) (nil fontified nil 16311 . 16312) (nil fontified nil 16310 . 16311) (nil fontified nil 16309 . 16310) (nil fontified nil 16302 . 16309) (nil fontified nil 16298 . 16302) (nil fontified nil 16297 . 16298) (nil fontified nil 16287 . 16297) (nil fontified nil 16283 . 16287) (nil fontified nil 16279 . 16283) (nil fontified nil 16263 . 16279) (16263 . 16352)) ((#("                self.Wab.bias.data[self.csumNa[i] : self.csumNa[i+1]].fill_(self.Ja0[i])
" 0 4 (fontified nil) 4 8 (fontified nil) 8 12 (fontified nil) 12 16 (fontified nil) 16 20 (face font-lock-keyword-face fontified nil) 20 24 (fontified nil) 24 34 (fontified nil) 34 35 (face (rainbow-delimiters-depth-1-face) fontified nil) 35 39 (face font-lock-keyword-face fontified nil) 39 46 (fontified nil) 46 47 (face (rainbow-delimiters-depth-2-face) fontified nil) 47 48 (fontified nil) 48 49 (face (rainbow-delimiters-depth-2-face) fontified nil) 49 52 (fontified nil) 52 56 (face font-lock-keyword-face fontified nil) 56 63 (fontified nil) 63 64 (face (rainbow-delimiters-depth-2-face) fontified nil) 64 65 (fontified nil) 65 66 (face font-lock-operator-face fontified nil) 66 67 (fontified nil) 67 68 (face (rainbow-delimiters-depth-2-face) fontified nil) 68 69 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t) 69 75 (fontified nil) 75 76 (face (rainbow-delimiters-depth-1-face) fontified nil) 76 80 (face font-lock-keyword-face fontified nil) 80 84 (fontified nil) 84 85 (face (rainbow-delimiters-depth-2-face) fontified nil) 85 86 (fontified nil) 86 87 (face (rainbow-delimiters-depth-2-face) fontified nil rear-nonsticky t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified nil) 88 89 (fontified nil rear-nonsticky t)) . 16263) (undo-tree-id8163 . -89) (undo-tree-id8164 . -89) (undo-tree-id8165 . -4) (undo-tree-id8166 . -4) (undo-tree-id8167 . -4) (undo-tree-id8168 . -4) (undo-tree-id8169 . -4) (undo-tree-id8170 . -4) (undo-tree-id8171 . -4) (undo-tree-id8172 . -4) (undo-tree-id8173 . -4) (undo-tree-id8174 . -4) (undo-tree-id8175 . -4) (undo-tree-id8176 . -4) (undo-tree-id8177 . -4) (undo-tree-id8178 . -4) (undo-tree-id8179 . -4) (undo-tree-id8180 . -4) (undo-tree-id8181 . -4) (undo-tree-id8182 . -4) (undo-tree-id8183 . -4) (undo-tree-id8184 . -4) (undo-tree-id8185 . -4) (undo-tree-id8186 . -4) (undo-tree-id8187 . -4) (undo-tree-id8188 . -4) (undo-tree-id8189 . -4) (undo-tree-id8190 . -4) (undo-tree-id8191 . -4) (undo-tree-id8192 . -4) (undo-tree-id8193 . -4) (undo-tree-id8194 . -4) (undo-tree-id8195 . -4) (undo-tree-id8196 . -4) (undo-tree-id8197 . -4) (undo-tree-id8198 . -4) (undo-tree-id8199 . -4) (undo-tree-id8200 . -4) (undo-tree-id8201 . -4) (undo-tree-id8202 . -4) (undo-tree-id8203 . -4) (undo-tree-id8204 . -4) (undo-tree-id8205 . -8) (undo-tree-id8206 . -8) (undo-tree-id8207 . -8) (undo-tree-id8208 . -8) (undo-tree-id8209 . -8) (undo-tree-id8210 . -8) (undo-tree-id8211 . -8) (undo-tree-id8212 . -8) (undo-tree-id8213 . -8) (undo-tree-id8214 . -8) (undo-tree-id8215 . -8) (undo-tree-id8216 . -8) (undo-tree-id8217 . -8) (undo-tree-id8218 . -8) (undo-tree-id8219 . -8) (undo-tree-id8220 . -8) (undo-tree-id8221 . -8) (undo-tree-id8222 . -8) (undo-tree-id8223 . -8) (undo-tree-id8224 . -8) (undo-tree-id8225 . -8) (undo-tree-id8226 . -8) (undo-tree-id8227 . -8) (undo-tree-id8228 . -8) (undo-tree-id8229 . -8) (undo-tree-id8230 . -8) (undo-tree-id8231 . -8) (undo-tree-id8232 . -8) (undo-tree-id8233 . -8) (undo-tree-id8234 . -8) (undo-tree-id8235 . -8) (undo-tree-id8236 . -12) (undo-tree-id8237 . -12) (undo-tree-id8238 . -12) (undo-tree-id8239 . -12) (undo-tree-id8240 . -12) (undo-tree-id8241 . -12) (undo-tree-id8242 . -12) (undo-tree-id8243 . -12) (undo-tree-id8244 . -12) (undo-tree-id8245 . -12) (undo-tree-id8246 . -12) (undo-tree-id8247 . -12) (undo-tree-id8248 . -12) (undo-tree-id8249 . -12) (undo-tree-id8250 . -12) (undo-tree-id8251 . -12) (undo-tree-id8252 . -12) (undo-tree-id8253 . -12) (undo-tree-id8254 . -12) (undo-tree-id8255 . -12) (undo-tree-id8256 . -12) (undo-tree-id8257 . -12) (undo-tree-id8258 . -12) (undo-tree-id8259 . -12) (undo-tree-id8260 . -12) (undo-tree-id8261 . -12) (undo-tree-id8262 . -12) (undo-tree-id8263 . -12) (undo-tree-id8264 . -12) (undo-tree-id8265 . -12) (undo-tree-id8266 . -12) (undo-tree-id8267 . -12) (undo-tree-id8268 . -12) (undo-tree-id8269 . -12) (undo-tree-id8270 . -12) (undo-tree-id8271 . -12) (undo-tree-id8272 . -12) (undo-tree-id8273 . -12) (undo-tree-id8274 . -12) (undo-tree-id8275 . -12) (undo-tree-id8276 . -12) (undo-tree-id8277 . -12) (undo-tree-id8278 . -12) (undo-tree-id8279 . -12) (undo-tree-id8280 . -12) (undo-tree-id8281 . -12) (undo-tree-id8282 . -12) (undo-tree-id8283 . -12) (undo-tree-id8284 . -12) (undo-tree-id8285 . -12) (undo-tree-id8286 . -12) (undo-tree-id8287 . -12) (undo-tree-id8288 . -12) (undo-tree-id8289 . -12) (undo-tree-id8290 . -12) (nil fontified t 16351 . 16352)) (25934 23755 446679 349000) 0 nil])
([nil nil ((apply -4 16264 16385 undo--wrap-and-run-primitive-undo 16264 16385 ((16318 . 16320) (16276 . 16278) 16364))) nil (25934 23771 877544 803000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16275) 16263) ((16275 . 16279)) (25934 23754 865143 412000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16380) 16368 (t 25934 23771 948876 722000)) nil (25934 23775 815285 715000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16271) (undo-tree-id8160 . -4) 16275) ((16271 . 16275)) (25934 23754 444839 432000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16376) (undo-tree-id8293 . -4) 16380) nil (25934 23775 815280 133000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16267) (undo-tree-id8159 . -4) 16271) ((16267 . 16271)) (25934 23754 199908 921000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 14966) (t 25934 23775 888771 194000)) nil (25934 23895 475857 124000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16263) (undo-tree-id8158 . -4) 16267) ((16263 . 16267)) (25934 23754 170278 996000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 14983)) nil (25934 23895 475855 698000) 0 nil])
([nil nil ((16263 . 16275)) ((#("            " 0 12 (fontified t)) . 16263)) (25934 23754 169476 50000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 14983)) nil (25934 23895 475854 281000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 14984)) nil (25934 23895 475853 75000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14969) (undo-tree-id8319 . -1) 14970) nil (25934 23895 475851 626000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14967) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) 14968) nil (25934 23895 475844 428000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15216) (t 25934 23895 537942 526000)) nil (25934 23902 249368 406000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15216)) nil (25934 23902 249366 84000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15217)) nil (25934 23902 249364 294000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15195) (undo-tree-id8320 . -1) (undo-tree-id8321 . -2) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -4)) nil (25934 23902 249359 494000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15196)) nil (25934 23902 249303 869000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15197)) nil (25934 23902 249297 171000) 0 nil])
([nil nil ((11314 . 11322) (t 25934 23902 309800 812000)) nil (25934 24292 964605 95000) 0 nil])
([nil nil ((11315 . 11323) (#("        " 0 8 (fontified nil)) . 11314) (undo-tree-id8392 . -8) (11322 . 11323)) nil (25934 24292 964603 898000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 11328) (11327 . 11328) (11326 . 11328) (#("'" 0 1 (fontified nil)) . -11326) (11323 . 11327)) nil (25934 24292 964601 198000) 0 nil])
([nil nil ((11327 . 11334)) nil (25934 24292 964598 932000) 0 nil])
([nil nil ((11335 . 11336)) nil (25934 24292 964598 37000) 0 nil])
([nil nil ((11336 . 11357)) nil (25934 24292 964597 343000) 0 nil])
([nil nil ((11357 . 11370)) nil (25934 24292 964596 707000) 0 nil])
([nil nil ((11370 . 11380)) nil (25934 24292 964595 752000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11378) (undo-tree-id8390 . -1) (#("1" 0 1 (fontified t)) . -11379) (undo-tree-id8391 . -1) 11380) nil (25934 24292 964594 432000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -11377) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) 11378) nil (25934 24292 964590 640000) 0 nil])
([nil nil ((11377 . 11380)) nil (25934 24292 964563 554000) 0 nil])
([nil nil ((11380 . 11392) (#(" " 0 1 (fontified nil)) . 11379) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (11380 . 11381)) nil (25934 24292 964554 717000) 0 nil])
([nil nil ((11378 . 11379)) nil (25934 24292 964456 171000) 0 nil])
([nil nil ((11380 . 11382) (t 25934 24293 23418 181000)) nil (25934 24295 959439 840000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11391) (undo-tree-id8393 . -4) (undo-tree-id8394 . -4) (undo-tree-id8395 . -4) (undo-tree-id8396 . -4) (undo-tree-id8397 . -4) (undo-tree-id8398 . -4) (undo-tree-id8399 . -4) (undo-tree-id8400 . -4) (undo-tree-id8401 . -4) (undo-tree-id8402 . -4) (undo-tree-id8403 . -4) (undo-tree-id8404 . -4) (undo-tree-id8405 . -4) (undo-tree-id8406 . -4) (undo-tree-id8407 . -4) (undo-tree-id8408 . -4) (undo-tree-id8409 . -4) (undo-tree-id8410 . -4) (undo-tree-id8411 . -4) (undo-tree-id8412 . -4) (undo-tree-id8413 . -4) (undo-tree-id8414 . -4) (undo-tree-id8415 . -4) (undo-tree-id8416 . -4) (undo-tree-id8417 . -4) (undo-tree-id8418 . -4) (undo-tree-id8419 . -4) (undo-tree-id8420 . -4) (undo-tree-id8421 . -4) (undo-tree-id8422 . -4) (undo-tree-id8423 . -4) (undo-tree-id8424 . -4) (undo-tree-id8425 . -4) (undo-tree-id8426 . -4) (undo-tree-id8427 . -4) (undo-tree-id8428 . -4) (undo-tree-id8429 . -4) (undo-tree-id8430 . -4) (undo-tree-id8431 . -4) (undo-tree-id8432 . -4) (undo-tree-id8433 . -4) (undo-tree-id8434 . -4) (undo-tree-id8435 . -4) (undo-tree-id8436 . -4) (undo-tree-id8437 . -4) (undo-tree-id8438 . -4) (undo-tree-id8439 . -4) (undo-tree-id8440 . -4) (undo-tree-id8441 . -4) (undo-tree-id8442 . -4) (undo-tree-id8443 . -4) (undo-tree-id8444 . -4) (undo-tree-id8445 . -4) (undo-tree-id8446 . -4) (undo-tree-id8447 . -4) (undo-tree-id8448 . -4) (undo-tree-id8449 . -4) (undo-tree-id8450 . -4) (undo-tree-id8451 . -4) (undo-tree-id8452 . -4) (undo-tree-id8453 . -4) (undo-tree-id8454 . -4) (undo-tree-id8455 . -4) (undo-tree-id8456 . -4) (undo-tree-id8457 . -4) (undo-tree-id8458 . -4) 11395 (t 25934 24296 15377 440000)) nil (25934 24297 360062 910000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11379) (undo-tree-id8470 . -1) (#("." 0 1 (fontified t)) . -11380) (undo-tree-id8471 . -1) (#("0" 0 1 (fontified t)) . -11381) (undo-tree-id8472 . -1) 11382 (t 25934 24297 411358 456000)) nil (25934 24401 291008 188000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11388) (11387 . 11388) (11386 . 11388) (#("(" 0 1 (fontified nil)) . -11386) (11379 . 11387)) nil (25934 24401 290997 896000) 0 nil])
([nil nil ((11387 . 11389)) nil (25934 24401 290995 886000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -11388) (undo-tree-id8469 . -1) 11389) nil (25934 24401 290994 81000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11381) (undo-tree-id8461 . -1) (#("s" 0 1 (fontified t)) . -11382) (undo-tree-id8462 . -1) (#("q" 0 1 (fontified t)) . -11383) (undo-tree-id8463 . -1) (#("r" 0 1 (fontified t)) . -11384) (undo-tree-id8464 . -1) (#("t" 0 1 (fontified t)) . -11385) (undo-tree-id8465 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11386) (undo-tree-id8466 . -1) (#("N" 0 1 (fontified t)) . -11387) (undo-tree-id8467 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11388) (undo-tree-id8468 . -1) 11389) nil (25934 24401 290981 950000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -11379) (undo-tree-id8459 . -1) (#("p" 0 1 (fontified t)) . -11380) (undo-tree-id8460 . -1) 11381) nil (25934 24401 290953 321000) 0 nil])
([nil nil ((11379 . 11382)) nil (25934 24401 290933 343000) 0 nil])
([nil nil ((8756 . 8772) (#("            " 0 12 (fontified nil)) . 8755) (undo-tree-id8494 . -12) (8767 . 8768) (t 25934 24401 373981 302000)) nil (25934 24495 636727 519000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8754) (undo-tree-id8493 . -1) 8755) nil (25934 24495 636725 568000) 0 nil])
([nil nil ((8754 . 8771)) nil (25934 24495 636724 296000) 0 nil])
([nil nil ((8755 . 8756)) nil (25934 24495 636723 567000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8768) (undo-tree-id8492 . -4) 8772) nil (25934 24495 636722 642000) 0 nil])
([nil nil ((8768 . 8775)) nil (25934 24495 636721 244000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -8771) (undo-tree-id8488 . -1) (#("l" 0 1 (fontified t)) . -8772) (undo-tree-id8489 . -1) (#("l" 0 1 (face font-lock-builtin-face fontified t)) . -8773) (undo-tree-id8490 . -1) (#(" " 0 1 (fontified t)) . -8774) (undo-tree-id8491 . -1) 8775) nil (25934 24495 636719 920000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 8773) (8772 . 8773) (8771 . 8773) (#("'" 0 1 (fontified nil)) . -8771) (8771 . 8772)) nil (25934 24495 636715 275000) 0 nil])
([nil nil ((8772 . 8779)) nil (25934 24495 636714 66000) 0 nil])
([nil nil ((8780 . 8786)) nil (25934 24495 636713 288000) 0 nil])
([nil nil ((8786 . 8787)) nil (25934 24495 636712 598000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -8786) (undo-tree-id8487 . -1) 8787) nil (25934 24495 636711 927000) 0 nil])
([nil nil ((8786 . 8802)) nil (25934 24495 636710 426000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8842 . 8843) (nil fontified nil 8842 . 8843) (nil fontified nil 8837 . 8842) (nil fontified nil 8835 . 8837) (nil fontified nil 8830 . 8835) (nil fontified nil 8829 . 8830) (nil fontified nil 8823 . 8829) (nil fontified nil 8819 . 8823) (8819 . 8843)) nil (25934 24495 636709 555000) 0 nil])
([nil nil ((8843 . 8844)) nil (25934 24495 636708 310000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8843) (undo-tree-id8486 . -1) 8844) nil (25934 24495 636707 324000) 0 nil])
([nil nil ((8843 . 8844)) nil (25934 24495 636705 863000) 0 nil])
([nil nil ((8844 . 8846)) nil (25934 24495 636705 176000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8869 . 8870) (nil fontified nil 8869 . 8870) (nil fontified nil 8864 . 8869) (nil fontified nil 8862 . 8864) (nil fontified nil 8857 . 8862) (nil fontified nil 8856 . 8857) (nil fontified nil 8850 . 8856) (nil fontified nil 8846 . 8850) (8846 . 8870)) nil (25934 24495 636704 433000) 0 nil])
([nil nil ((8870 . 8873)) nil (25934 24495 636703 254000) 0 nil])
([nil nil ((8873 . 8889) (#(" " 0 1 (fontified nil)) . 8872) (undo-tree-id8485 . -1) (8873 . 8874)) nil (25934 24495 636702 378000) 0 nil])
([nil nil ((8872 . 8880)) nil (25934 24495 636700 764000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -8873) (undo-tree-id8483 . -1) (#("p" 0 1 (fontified t)) . -8874) (undo-tree-id8484 . -1) 8875) nil (25934 24495 636699 814000) 0 nil])
([nil nil ((8873 . 8878)) nil (25934 24495 636697 91000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8885) (8884 . 8885) (8883 . 8885) (#("(" 0 1 (fontified nil)) . -8883) (8883 . 8884)) nil (25934 24495 636696 196000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8888) (8887 . 8888) (8886 . 8888) (#("[" 0 1 (fontified nil)) . -8886) (8884 . 8887)) nil (25934 24495 636694 775000) 0 nil])
([nil nil ((8887 . 8888)) nil (25934 24495 636693 514000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8864) (undo-tree-id8478 . -1) (#("_" 0 1 (fontified t)) . -8865) (undo-tree-id8479 . -1) (#("p" 0 1 (fontified t)) . -8866) (undo-tree-id8480 . -1) (#("o" 0 1 (fontified t)) . -8867) (undo-tree-id8481 . -1) (#("p" 0 1 (fontified t)) . -8868) (undo-tree-id8482 . -1) 8869) nil (25934 24495 636691 848000) 0 nil])
([nil nil ((8864 . 8865)) nil (25934 24495 636686 953000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8857) (undo-tree-id8473 . -1) (#("_" 0 1 (fontified t)) . -8858) (undo-tree-id8474 . -1) (#("p" 0 1 (fontified t)) . -8859) (undo-tree-id8475 . -1) (#("o" 0 1 (fontified t)) . -8860) (undo-tree-id8476 . -1) (#("p" 0 1 (fontified t)) . -8861) (undo-tree-id8477 . -1) 8862) nil (25934 24495 636684 820000) 0 nil])
([nil nil ((8857 . 8858)) nil (25934 24495 636671 615000) 0 nil])
([nil nil ((#("i_pop" 0 5 (face font-lock-variable-name-face fontified t)) . 8830)) nil (25934 24495 636670 921000) 0 nil])
([nil nil ((8830 . 8831)) nil (25934 24495 636670 357000) 0 nil])
([nil nil ((#("j_pop" 0 5 (fontified t)) . 8833)) nil (25934 24495 636669 178000) 0 nil])
([nil nil ((8833 . 8834)) nil (25934 24495 636664 276000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8857) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (#("o" 0 1 (fontified t)) . -8858) (undo-tree-id8503 . -1) (#("r" 0 1 (fontified t)) . -8859) (undo-tree-id8504 . -1) (#("c" 0 1 (fontified t)) . -8860) (undo-tree-id8505 . -1) 8861 (t 25934 24495 686676 183000)) nil (25934 24527 761378 898000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 8857)) nil (25934 24527 761353 245000) 0 nil])
([nil nil ((8857 . 8859)) nil (25934 24527 761347 224000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 8857) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (#("n" 0 1 (fontified t)) . 8857) (t 25934 24527 825261 903000)) nil (25934 24559 201558 30000) 0 nil])
([nil nil ((8857 . 8861)) nil (25934 24559 201547 120000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8860) (undo-tree-id8780 . -1) 8861) nil (25934 24559 201545 804000) 0 nil])
([nil nil ((8860 . 8863)) nil (25934 24559 201542 224000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8862) (undo-tree-id8779 . -1) 8863) nil (25934 24559 201540 971000) 0 nil])
([nil nil ((#("torch.sqrt(Na[0])" 0 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-2-face) fontified t) 14 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8857) (undo-tree-id8772 . -17) (undo-tree-id8773 . -17) (undo-tree-id8774 . -17) (undo-tree-id8775 . -17) (undo-tree-id8776 . -17) (undo-tree-id8777 . -17) (undo-tree-id8778 . -17)) nil (25934 24559 201537 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8915 . 8916) (nil fontified nil 8915 . 8916) (nil fontified nil 8914 . 8915) (nil fontified nil 8913 . 8914) (nil fontified nil 8912 . 8913) (nil fontified nil 8910 . 8912) (nil fontified nil 8909 . 8910) (nil fontified nil 8899 . 8909) (8899 . 8916)) nil (25934 24559 201526 720000) 0 nil])
([nil nil ((8916 . 8919)) nil (25934 24559 201524 371000) 0 nil])
([nil nil ((8985 . 9057) (#("                                                    " 0 52 (fontified t)) . 8985) (undo-tree-id8754 . -44) (undo-tree-id8755 . -44) (undo-tree-id8756 . -44) (undo-tree-id8757 . -44) (undo-tree-id8758 . -44) (undo-tree-id8759 . -44) (undo-tree-id8760 . -44) (undo-tree-id8761 . -44) (undo-tree-id8762 . -44) (undo-tree-id8763 . -44) (undo-tree-id8764 . -44) (undo-tree-id8765 . -44) (undo-tree-id8766 . -44) (undo-tree-id8767 . -44) (undo-tree-id8768 . -44) (undo-tree-id8769 . -44) (undo-tree-id8770 . -44) (undo-tree-id8771 . -44) 9029) nil (25934 24559 201521 948000) 0 nil])
([nil nil ((#("            if 'all2all' in self.CONNECTIVITY:
                self.KAPPA[0, 0] = self.KAPPA[0, 0] * 
" 0 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 24 (face font-lock-string-face fontified t) 24 25 (fontified t) 25 27 (face font-lock-keyword-face fontified t) 27 28 (fontified t) 28 32 (face font-lock-keyword-face fontified t) 32 46 (fontified t) 46 47 (fontified t) 47 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 68 (fontified t) 68 73 (face font-lock-variable-name-face fontified t) 73 74 (face (rainbow-delimiters-depth-1-face) fontified t) 74 75 (fontified t) 75 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 79 80 (fontified t) 80 81 (face font-lock-operator-face fontified t) 81 82 (fontified t) 82 86 (face font-lock-keyword-face fontified t) 86 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 94 (fontified t) 94 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 98 99 (fontified t) 99 100 (face font-lock-operator-face fontified t) 100 101 (fontified t) 101 102 (fontified t)) . 8756) (undo-tree-id8674 . -102) (undo-tree-id8675 . -101) (undo-tree-id8676 . -63) (undo-tree-id8677 . -82) (undo-tree-id8678 . -101) (undo-tree-id8679 . -101) (undo-tree-id8680 . -101) (undo-tree-id8681 . -101) (undo-tree-id8682 . -101) (undo-tree-id8683 . -101) (undo-tree-id8684 . -101) (undo-tree-id8685 . -101) (undo-tree-id8686 . -101) (undo-tree-id8687 . -101) (undo-tree-id8688 . -101) (undo-tree-id8689 . -101) (undo-tree-id8690 . -102) (undo-tree-id8691 . -102) (undo-tree-id8692 . -102) (undo-tree-id8693 . -102) (undo-tree-id8694 . -102) (undo-tree-id8695 . -102) (undo-tree-id8696 . -102) (undo-tree-id8697 . -102) (undo-tree-id8698 . -102) (undo-tree-id8699 . -102) (undo-tree-id8700 . -102) (undo-tree-id8701 . -102) (undo-tree-id8702 . -102) (undo-tree-id8703 . -102) (undo-tree-id8704 . -102) (undo-tree-id8705 . -102) (undo-tree-id8706 . -102) (undo-tree-id8707 . -102) (undo-tree-id8708 . -102) (undo-tree-id8709 . -102) (undo-tree-id8710 . -102) (undo-tree-id8711 . -102) (undo-tree-id8712 . -102) (undo-tree-id8713 . -102) (undo-tree-id8714 . -102) (undo-tree-id8715 . -102) (undo-tree-id8716 . -102) (undo-tree-id8717 . -102) (undo-tree-id8718 . -102) (undo-tree-id8719 . -102) (undo-tree-id8720 . -102) (undo-tree-id8721 . -102) (undo-tree-id8722 . -102) (undo-tree-id8723 . -102) (undo-tree-id8724 . -102) (undo-tree-id8725 . -102) (undo-tree-id8726 . -102) (undo-tree-id8727 . -47) (undo-tree-id8728 . -102) (undo-tree-id8729 . -47) (undo-tree-id8730 . -47) (undo-tree-id8731 . -47) (undo-tree-id8732 . -47) (undo-tree-id8733 . -47) (undo-tree-id8734 . -47) (undo-tree-id8735 . -47) (undo-tree-id8736 . -47) (undo-tree-id8737 . -47) (undo-tree-id8738 . -47) (undo-tree-id8739 . -47) (undo-tree-id8740 . -47) (undo-tree-id8741 . -47) (undo-tree-id8742 . -47) (undo-tree-id8743 . -47) (undo-tree-id8744 . -47) (undo-tree-id8745 . -47) (undo-tree-id8746 . -47) (undo-tree-id8747 . -47) (undo-tree-id8748 . -47) (undo-tree-id8749 . -47) (undo-tree-id8750 . -47) (undo-tree-id8751 . -47) (undo-tree-id8752 . -47) (undo-tree-id8753 . -101)) nil (25934 24559 201485 616000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8755) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) 8756) nil (25934 24559 201211 911000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8767) (undo-tree-id8788 . -4) (undo-tree-id8789 . -4) (undo-tree-id8790 . -4) (undo-tree-id8791 . -4) (undo-tree-id8792 . -4) (undo-tree-id8793 . -4) (undo-tree-id8794 . -4) (undo-tree-id8795 . -4) (undo-tree-id8796 . -4) (undo-tree-id8797 . -4) (undo-tree-id8798 . -4) (undo-tree-id8799 . -4) (undo-tree-id8800 . -4) (undo-tree-id8801 . -4) (undo-tree-id8802 . -4) (undo-tree-id8803 . -4) (undo-tree-id8804 . -4) (undo-tree-id8805 . -4) (undo-tree-id8806 . -4) (undo-tree-id8807 . -4) (undo-tree-id8808 . -4) (undo-tree-id8809 . -4) (undo-tree-id8810 . -4) (undo-tree-id8811 . -4) (undo-tree-id8812 . -4) (undo-tree-id8813 . -4) (undo-tree-id8814 . -4) (undo-tree-id8815 . -4) (undo-tree-id8816 . -4) (undo-tree-id8817 . -4) (undo-tree-id8818 . -4) (undo-tree-id8819 . -4) (undo-tree-id8820 . -4) (undo-tree-id8821 . -4) (undo-tree-id8822 . -4) (undo-tree-id8823 . -4) (undo-tree-id8824 . -4) (undo-tree-id8825 . -4) (undo-tree-id8826 . -4) (undo-tree-id8827 . -4) (undo-tree-id8828 . -4) (undo-tree-id8829 . -4) (undo-tree-id8830 . -4) (undo-tree-id8831 . -4) (undo-tree-id8832 . -4) (undo-tree-id8833 . -4) (undo-tree-id8834 . -4) (undo-tree-id8835 . -4) (undo-tree-id8836 . -4) (undo-tree-id8837 . -4) (undo-tree-id8838 . -4) (undo-tree-id8839 . -4) 8771 (t 25934 24559 295930 639000)) nil (25934 24560 252445 36000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8792) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 8792) (#(" " 0 1 (fontified t)) . 8792) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t rear-nonsticky t)) . 8792) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8792) (#("0" 0 1 (fontified t)) . 8792) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8792) (#("a" 0 1 (fontified t)) . 8792) (#("N" 0 1 (fontified t)) . 8792) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8792) (#("t" 0 1 (fontified t)) . 8792) (#("r" 0 1 (fontified t)) . 8792) (#("q" 0 1 (fontified t)) . 8792) (#("s" 0 1 (fontified t)) . 8792) (#("." 0 1 (fontified t)) . 8792) (#("h" 0 1 (fontified t)) . 8792) (#("c" 0 1 (fontified t)) . 8792) (#("r" 0 1 (fontified t)) . 8792) (#("o" 0 1 (fontified t)) . 8792) (#("t" 0 1 (fontified t)) . 8792) (t 25934 24560 355886 686000)) nil (25934 24580 101554 543000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . -8910) 8882) nil (25934 24580 101546 146000) 0 nil])
([nil nil ((apply -4 8980 9051 undo--wrap-and-run-primitive-undo 8980 9051 ((9021 . 9023) (8992 . 8994) 9034))) nil (25934 24633 894032 530000) 0 nil])
([nil nil ((15852 . 15865) (t 25934 24633 952966 533000)) nil (25934 24855 955670 553000) 0 nil])
([nil nil ((15865 . 15871)) nil (25934 24855 955668 861000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -15869) (undo-tree-id8868 . -1) (#("e" 0 1 (fontified t)) . -15870) (undo-tree-id8869 . -1) 15871) nil (25934 24855 955667 92000) 0 nil])
([nil nil ((15869 . 15876)) nil (25934 24855 955658 728000) 0 nil])
([nil nil ((15876 . 15877)) nil (25934 24855 955657 373000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -15876) (undo-tree-id8867 . -1) 15877) nil (25934 24855 955655 723000) 0 nil])
([nil nil ((15876 . 15883)) nil (25934 24855 955652 117000) 0 nil])
([nil nil ((15884 . 15900) (#("            " 0 12 (fontified t)) . 15884) (undo-tree-id8865 . -9) (undo-tree-id8866 . -9)) nil (25934 24855 955650 300000) 0 nil])
([nil nil ((nil fontified nil 16043 . 16044) (nil fontified nil 16040 . 16043) (nil fontified nil 16038 . 16040) (nil fontified nil 16032 . 16038) (nil fontified nil 16028 . 16032) (nil fontified nil 16027 . 16028) (nil fontified nil 16025 . 16027) (nil fontified nil 16013 . 16025) (16013 . 16044)) nil (25934 24855 955644 666000) 0 nil])
([nil nil ((16041 . 16043)) nil (25934 24855 955642 1000) 0 nil])
([nil nil ((nil fontified nil 16174 . 16175) (nil fontified nil 16173 . 16174) (nil fontified nil 16171 . 16173) (nil fontified nil 16170 . 16171) (nil fontified nil 16167 . 16170) (nil fontified nil 16166 . 16167) (nil fontified nil 16165 . 16166) (nil fontified nil 16164 . 16165) (nil fontified nil 16163 . 16164) (nil fontified nil 16162 . 16163) (nil fontified nil 16161 . 16162) (nil fontified nil 16160 . 16161) (nil fontified nil 16157 . 16160) (nil fontified nil 16153 . 16157) (nil fontified nil 16152 . 16153) (nil fontified nil 16141 . 16152) (nil fontified nil 16140 . 16141) (nil fontified nil 16139 . 16140) (nil fontified nil 16138 . 16139) (nil fontified nil 16137 . 16138) (nil fontified nil 16136 . 16137) (nil fontified nil 16132 . 16136) (nil fontified nil 16128 . 16132) (nil fontified nil 16127 . 16128) (nil fontified nil 16126 . 16127) (nil fontified nil 16125 . 16126) (nil fontified nil 16124 . 16125) (nil fontified nil 16123 . 16124) (nil fontified nil 16122 . 16123) (nil fontified nil 16118 . 16122) (nil fontified nil 16114 . 16118) (nil fontified nil 16113 . 16114) (nil fontified nil 16112 . 16113) (nil fontified nil 16111 . 16112) (nil fontified nil 16110 . 16111) (nil fontified nil 16109 . 16110) (nil fontified nil 16108 . 16109) (nil fontified nil 16107 . 16108) (nil fontified nil 16100 . 16107) (nil fontified nil 16096 . 16100) (nil fontified nil 16095 . 16096) (nil fontified nil 16094 . 16095) (nil fontified nil 16093 . 16094) (nil fontified nil 16092 . 16093) (nil fontified nil 16085 . 16092) (nil fontified nil 16081 . 16085) (nil fontified nil 16080 . 16081) (nil fontified nil 16076 . 16080) (nil fontified nil 16070 . 16076) (nil fontified nil 16066 . 16070) (nil fontified nil 16062 . 16066) (nil fontified nil 16046 . 16062) (16046 . 16175)) nil (25934 24855 955638 262000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -16137) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) 16138) nil (25934 24855 955623 312000) 0 nil])
([nil nil ((16137 . 16138)) nil (25934 24855 955487 396000) 0 nil])
([nil nil ((16174 . 16175) (t 25934 24856 57460 128000)) nil (25934 28132 864926 426000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -16174) (undo-tree-id8870 . -1) 16175) nil (25934 28132 864920 125000) 0 nil])
([nil nil ((16174 . 16178) (t 25934 28132 951843 910000)) nil (25934 28137 151933 823000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -16174) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (#("e" 0 1 (fontified t)) . -16175) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (#("d" 0 1 (fontified t)) . -16176) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (#("g" 0 1 (fontified t)) . -16177) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) 16178 (t 25934 28137 263768 819000)) nil (25934 28149 318134 838000) 0 nil])
([nil nil ((16174 . 16175) (t 25934 28149 391557 937000)) nil (25934 28183 337122 524000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -16174) (undo-tree-id8893 . -1) 16175) nil (25934 28183 337109 620000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14578) (undo-tree-id8894 . -1) (#(" " 0 1 (fontified t)) . -14579) (undo-tree-id8895 . -1) (#(" " 0 1 (fontified t)) . -14580) (undo-tree-id8896 . -1) (#(" " 0 1 (fontified t)) . -14581) (undo-tree-id8897 . -1) (#(" " 0 1 (fontified t)) . -14582) (undo-tree-id8898 . -1) (#(" " 0 1 (fontified t)) . -14583) (undo-tree-id8899 . -1) (#(" " 0 1 (fontified t)) . -14584) (undo-tree-id8900 . -1) (#(" " 0 1 (fontified t)) . -14585) (undo-tree-id8901 . -1) 14586 (t 25934 28183 522966 921000)) nil (25934 32706 169775 844000) 0 nil])
([nil nil ((8754 . 8771) (t 25934 32664 538105 732000)) nil (25934 32775 414512 435000) 0 nil] [nil nil ((14718 . 14719) (t 25934 32664 538105 732000)) ((#("
" 0 1 (fontified t)) . 14718)) (25934 32706 168799 806000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8778) (8777 . 8778) (8776 . 8778) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -8776) (8771 . 8777)) nil (25934 32775 414510 933000) 0 nil])
nil
([nil nil ((8777 . 8778)) nil (25934 32775 414509 686000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8777) (undo-tree-id8947 . -1) 8778) nil (25934 32775 414508 959000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 8779) (8778 . 8779) (8777 . 8779) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8777) (8777 . 8778)) nil (25934 32775 414506 588000) 0 nil])
([nil nil ((8778 . 8779)) nil (25934 32775 414505 511000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -8778) (undo-tree-id8946 . -1) 8779) nil (25934 32775 414504 719000) 0 nil])
([nil nil ((8778 . 8783)) nil (25934 32775 414503 245000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -8782) (undo-tree-id8945 . -1) 8783) nil (25934 32775 414502 376000) 0 nil])
([nil nil ((8782 . 8788)) nil (25934 32775 414500 633000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -8787) (undo-tree-id8944 . -1) 8788) nil (25934 32775 414499 898000) 0 nil])
([nil nil ((8787 . 8788)) nil (25934 32775 414498 597000) 0 nil])
([nil nil ((8789 . 8791)) nil (25934 32775 414497 494000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8801) (8800 . 8801) (8799 . 8801) (#("[" 0 1 (fontified nil)) . -8799) (8791 . 8800)) nil (25934 32775 414496 635000) 0 nil])
([nil nil ((8800 . 8801)) nil (25934 32775 414495 623000) 0 nil])
([nil nil ((8802 . 8805)) nil (25934 32775 414494 963000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id8942 . -1) (#(" " 0 1 (fontified t)) . -8804) (undo-tree-id8943 . -1) 8805) nil (25934 32775 414493 741000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32775 414491 651000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id8941 . -1) 8804) nil (25934 32775 414490 825000) 0 nil])
([nil nil ((8803 . 8810)) nil (25934 32775 414489 282000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8815) (8814 . 8815) (8813 . 8815) (#("[" 0 1 (fontified nil)) . -8813) (8810 . 8814)) nil (25934 32775 414488 293000) 0 nil])
([nil nil ((8814 . 8815)) nil (25934 32775 414487 158000) 0 nil])
([nil nil ((8816 . 8817)) nil (25934 32775 414486 423000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8816) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) 8817) nil (25934 32775 414481 993000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -8803) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) 8804 (t 25934 32775 466740 578000)) nil (25934 32802 451394 823000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32802 451341 746000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) 8804 (t 25934 32802 516670 917000)) nil (25934 32822 887301 365000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887293 465000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id9006 . -1) 8804) nil (25934 32822 887292 459000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887290 870000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id9005 . -1) 8804) nil (25934 32822 887290 56000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887288 362000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id9004 . -1) 8804) nil (25934 32822 887287 577000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887286 91000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id9003 . -1) 8804) nil (25934 32822 887285 210000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887283 480000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8803) (undo-tree-id9002 . -1) 8804) nil (25934 32822 887282 442000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887280 766000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id9001 . -1) 8804) nil (25934 32822 887279 621000) 0 nil])
([nil nil ((8803 . 8806)) nil (25934 32822 887277 854000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8802) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (#("→" 0 1 (fontified t)) . -8803) (undo-tree-id8998 . -1) (#("^" 0 1 (face font-lock-operator-face fontified t)) . -8804) (undo-tree-id8999 . -1) (#("^" 0 1 (face font-lock-operator-face fontified t)) . -8805) (undo-tree-id9000 . -1) 8806) nil (25934 32822 887275 57000) 0 nil])
([nil nil ((8802 . 8805)) nil (25934 32822 887261 48000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id8988 . -1) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -8804) (undo-tree-id8989 . -1) 8805) nil (25934 32822 887259 165000) 0 nil])
([nil nil ((8803 . 8805)) nil (25934 32822 887254 930000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -8804) (undo-tree-id8987 . -1) 8805) nil (25934 32822 887250 337000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8880 . 8881) (nil fontified nil 8880 . 8881) (nil fontified nil 8879 . 8880) (nil fontified nil 8878 . 8879) (nil fontified nil 8877 . 8878) (nil fontified nil 8876 . 8877) (nil fontified nil 8872 . 8876) (nil fontified nil 8868 . 8872) (nil fontified nil 8867 . 8868) (nil fontified nil 8865 . 8867) (nil fontified nil 8864 . 8865) (nil fontified nil 8863 . 8864) (nil fontified nil 8862 . 8863) (nil fontified nil 8858 . 8862) (nil fontified nil 8854 . 8858) (nil fontified nil 8852 . 8854) (nil fontified nil 8840 . 8852) (nil fontified nil 8839 . 8840) (nil fontified nil 8834 . 8839) (nil fontified nil 8818 . 8834) (8818 . 8881) (t 25934 32822 950088 52000)) nil (25934 32923 519826 208000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -8866) (undo-tree-id9018 . -1) 8867) nil (25934 32923 519819 289000) 0 nil])
([nil nil ((8854 . 8855)) nil (25934 32923 519811 825000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -8854) (undo-tree-id9017 . -1) 8855) nil (25934 32923 519806 953000) 0 nil])
([nil nil ((8863 . 8865) (#("(" 0 1 (fontified nil)) . -8863) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (8854 . 8864)) nil (25934 32923 519793 948000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8864)) nil (25934 32923 519745 215000) 0 nil])
([nil nil ((8889 . 8890)) nil (25934 32923 519733 799000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8875) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (#(" " 0 1 (fontified t)) . -8876) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) 8877 (t 25934 32923 608600 561000)) nil (25934 32926 388125 658000) 0 nil])
([nil nil ((8875 . 8877)) nil (25934 32926 387870 905000) 0 nil])
([nil nil ((apply -2 8818 8906 undo--wrap-and-run-primitive-undo 8818 8906 ((8834 . 8836) 8891))) nil (25934 32935 475744 636000) 0 nil])
([nil nil ((8893 . 8909) (#("            " 0 12 (fontified t)) . 8893) (undo-tree-id9135 . -12) (undo-tree-id9136 . -12) (undo-tree-id9137 . -12) (undo-tree-id9138 . -12)) nil (25934 32935 475737 376000) 0 nil])
([nil nil ((#("                # print('ksi . ksi1', torch.dot(self.ksi[0], self.ksi[1]))
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 36 (face font-lock-comment-face fontified t) 36 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 52 (face font-lock-comment-face fontified t) 52 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 61 (face font-lock-comment-face fontified t) 61 65 (face font-lock-comment-face fontified t) 65 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face rear-nonsticky t fontified t)) . -8818) (undo-tree-id9139 . -75) (undo-tree-id9140 . -75) (undo-tree-id9141 . -75) (undo-tree-id9142 . -61) (undo-tree-id9143 . -61) (undo-tree-id9144 . -61) (undo-tree-id9145 . -61) (undo-tree-id9146 . -61) (undo-tree-id9147 . -75) (undo-tree-id9148 . -75) (undo-tree-id9149 . -75) (undo-tree-id9150 . -75) (undo-tree-id9151 . -75) (undo-tree-id9152 . -75) (undo-tree-id9153 . -75) (undo-tree-id9154 . -75) (undo-tree-id9155 . -75) (undo-tree-id9156 . -75) (undo-tree-id9157 . -75) (undo-tree-id9158 . -75) (undo-tree-id9159 . -75) (undo-tree-id9160 . -75) (undo-tree-id9161 . -75) (undo-tree-id9162 . -75) (undo-tree-id9163 . -75) (undo-tree-id9164 . -75) (undo-tree-id9165 . -75) (undo-tree-id9166 . -75) (undo-tree-id9167 . -75) (undo-tree-id9168 . -75) (undo-tree-id9169 . -61) (undo-tree-id9170 . -75) (undo-tree-id9171 . -75) (undo-tree-id9172 . -75) (undo-tree-id9173 . -75) (undo-tree-id9174 . -75) (undo-tree-id9175 . -75) 8893 (t 25934 32935 581327 648000)) nil (25934 32937 899381 916000) 0 nil])
([nil nil ((8525 . 8537) (#("            " 0 12 (fontified nil)) . 8524) (undo-tree-id9179 . -12) (undo-tree-id9180 . -12) (undo-tree-id9181 . -12) (undo-tree-id9182 . -12) (undo-tree-id9183 . -12) (undo-tree-id9184 . -12) (undo-tree-id9185 . -12) (undo-tree-id9186 . -12) (undo-tree-id9187 . -12) (8536 . 8537) (t 25934 32937 953470 600000)) nil (25934 32984 476951 187000) 0 nil])
([nil nil ((8525 . 8526)) nil (25934 32984 476930 709000) 0 nil])
([nil nil ((8538 . 8544)) nil (25934 32984 476929 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8568 . 8569) (nil fontified nil 8568 . 8569) (nil fontified nil 8567 . 8568) (nil fontified nil 8566 . 8567) (nil fontified nil 8562 . 8566) (nil fontified nil 8558 . 8562) (nil fontified nil 8557 . 8558) (nil fontified nil 8555 . 8557) (nil fontified nil 8554 . 8555) (nil fontified nil 8553 . 8554) (nil fontified nil 8552 . 8553) (nil fontified nil 8548 . 8552) (nil fontified nil 8544 . 8548) (8544 . 8569)) nil (25934 32984 476925 997000) 0 nil])
([nil nil ((8569 . 8572)) nil (25934 32984 476920 429000) 0 nil])
([nil nil ((8571 . 8573)) nil (25934 32984 476919 529000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8572) (undo-tree-id9178 . -1) 8573) nil (25934 32984 476918 580000) 0 nil])
([nil nil ((8572 . 8573)) nil (25934 32984 476916 297000) 0 nil])
([nil nil ((8574 . 8575)) nil (25934 32984 476915 537000) 0 nil])
([nil nil ((8575 . 8576)) nil (25934 32984 476914 764000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -8575) (undo-tree-id9177 . -1) 8576) nil (25934 32984 476913 563000) 0 nil])
([nil nil ((8575 . 8576)) nil (25934 32984 476909 672000) 0 nil])
([nil nil ((8577 . 8593) (#("            " 0 12 (fontified t)) . 8577)) nil (25934 32984 476908 317000) 0 nil])
([nil nil ((8665 . 8681) (#("            " 0 12 (fontified t)) . 8665)) nil (25934 32984 476906 158000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8651) (undo-tree-id9176 . -1) 8652) nil (25934 32984 476903 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8675 . 8676) (nil fontified nil 8673 . 8676) (nil fontified nil 8672 . 8673) (nil fontified nil 8671 . 8672) (nil fontified nil 8668 . 8671) (nil fontified nil 8667 . 8668) (nil fontified nil 8666 . 8667) (nil fontified nil 8639 . 8666) (nil fontified nil 8638 . 8639) (nil fontified nil 8637 . 8638) (nil fontified nil 8634 . 8637) (nil fontified nil 8633 . 8634) (nil fontified nil 8629 . 8633) (nil fontified nil 8613 . 8629) (nil fontified nil 8600 . 8613) (nil fontified nil 8599 . 8600) (nil fontified nil 8583 . 8599) (nil fontified nil 8582 . 8583) (nil fontified nil 8563 . 8582) (nil fontified nil 8562 . 8563) (nil fontified nil 8561 . 8562) (nil fontified nil 8542 . 8561) (nil fontified nil 8526 . 8542) (8526 . 8676)) nil (25934 32984 476887 526000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8538) 8526) nil (25934 32984 476877 87000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8621)) nil (25934 32984 476874 143000) 0 nil])
([nil nil ((8667 . 8680)) nil (25934 32984 476867 937000) 0 nil])
([nil nil ((8699 . 8702) (t 25934 32984 548206 756000)) nil (25934 33003 450124 860000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8700) (undo-tree-id9188 . -1) (#("o" 0 1 (fontified t)) . -8701) (undo-tree-id9189 . -1) 8702) nil (25934 33003 450121 784000) 0 nil])
([nil nil ((8708 . 8710) (#("(" 0 1 (fontified nil)) . -8708) (8700 . 8709)) nil (25934 33003 450098 801000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8709)) nil (25934 33003 450095 212000) 0 nil])
([nil nil ((8734 . 8735)) nil (25934 33003 450084 989000) 0 nil])
([nil nil ((#("." 0 1 (fontified nil)) . 8740) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (8739 . 8740) (#("1" 0 1 (fontified nil)) . 8738) (8739 . 8740) (t 25934 33003 549285 105000)) nil (25934 33037 363072 89000) 0 nil])
([nil nil ((8668 . 8669) (t 25934 60819 320927 366000)) nil (25934 61482 652762 797000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8668) (undo-tree-id0 . -1) 8669) nil (25934 61482 652760 614000) 0 nil])
([nil nil ((apply -6 8681 8900 undo--wrap-and-run-primitive-undo 8681 8900 ((8846 . 8848) (8757 . 8759) (8693 . 8695) 8893))) nil (25934 61482 652739 814000) 0 nil])
([nil nil ((8899 . 8911)) nil (25934 61482 652735 414000) 0 nil])
([nil nil ((12109 . 12109) (12109 . 12110) (12105 . 12105) (12105 . 12109) (t 25934 61482 800948 479000)) nil (25934 61918 259811 922000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12109) (undo-tree-id13 . -1) 12110) nil (25934 61918 259810 1000) 0 nil])
([nil nil ((12121 . 12121) (12121 . 12122) (12120 . 12120) (12120 . 12121) (12119 . 12119) (12119 . 12120) (12118 . 12118) (12118 . 12119) (12117 . 12117) (12117 . 12118) (12116 . 12116) (12116 . 12117) (12115 . 12115) (12115 . 12116) (12113 . 12113) (12113 . 12115) (12111 . 12111) (12111 . 12113) (12110 . 12110) (12110 . 12111) (12109 . 12109) (12109 . 12110)) nil (25934 61918 259807 117000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -12121) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 12122) nil (25934 61918 259800 14000) 0 nil])
([nil nil ((12123 . 12123) (12123 . 12125) (12122 . 12122) (12122 . 12123) (12121 . 12121) (12121 . 12122)) nil (25934 61918 259774 90000) 0 nil])
([nil nil ((8422 . 8422) (8422 . 8423) (8421 . 8421) (8421 . 8422) (8420 . 8420) (8420 . 8421) (8419 . 8419) (8419 . 8420) (8418 . 8418) (8418 . 8419) (8417 . 8417) (8417 . 8418) (8416 . 8416) (8416 . 8417) (8415 . 8415) (8415 . 8416) (8413 . 8413) (8413 . 8415) (8409 . 8409) (8409 . 8413) (t 25934 61918 324962 339000)) nil (25934 62020 136568 540000) 0 nil])
([nil nil ((8495 . 8497)) nil (25934 62020 136562 622000) 0 nil])
([nil nil ((8508 . 8508) (8508 . 8509) (8506 . 8506) (8506 . 8508) (8505 . 8505) (8505 . 8506) (8504 . 8504) (8504 . 8505) (8503 . 8503) (8503 . 8504) (8502 . 8502) (8502 . 8503) (8501 . 8501) (8501 . 8502) (8499 . 8499) (8499 . 8501) (8497 . 8497) (8497 . 8499)) nil (25934 62020 136557 483000) 0 nil])
([nil nil ((#("V" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8409) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8409) (#("C" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8409) (#("_" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8409) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 8409) (#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 8409) (#("." 0 1 (fontified nil)) . 8409) (undo-tree-id0 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#(" " 0 1 (fontified nil)) . 8409) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 8409) (#(" " 0 1 (fontified t)) . 8409) (t 25934 62020 200965 581000)) nil (25940 12879 939758 37000) 0 nil])
([nil nil ((#("V" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("C" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("_" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8481) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("L" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8481) (#("." 0 1 (fontified t)) . 8481) (#("f" 0 1 (fontified t)) . 8481) (#("l" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8481) (#("e" 0 1 (fontified t)) . 8481) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 8481) (#(" " 0 1 (fontified t)) . 8481) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 8481) (#(" " 0 1 (fontified t)) . 8481)) nil (25940 12879 939729 977000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8596) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t)) . -8597) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -8598) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -8599) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -8600) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -8601) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -8602) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t)) . -8603) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -8604) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t)) . -8605) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -8606) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t)) . -8607) (undo-tree-id12 . -1) 8608 (t 25940 12880 3914 831000)) nil (25940 13127 599497 773000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9079 . 9080) (nil fontified nil 9078 . 9080) (nil fontified nil 9066 . 9078) (nil fontified nil 9065 . 9066) (nil fontified nil 9061 . 9065) (nil fontified nil 9060 . 9061) (nil fontified nil 9058 . 9060) (nil fontified nil 9057 . 9058) (nil fontified nil 9056 . 9057) (nil fontified nil 9049 . 9056) (nil fontified nil 9048 . 9049) (nil fontified nil 9047 . 9048) (nil fontified nil 9045 . 9047) (nil fontified nil 9037 . 9045) (9037 . 9080) (t 25940 13127 663922 712000)) nil (25940 13193 113091 827000) 0 nil])
([nil nil ((9038 . 9054) (#("        " 0 8 (fontified nil)) . 9038) (9037 . 9038)) nil (25940 13193 113087 136000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9050) (undo-tree-id13 . -4) 9054) nil (25940 13193 113082 852000) 0 nil])
([nil nil ((#("            if 'all2all' in self.CONNECTIVITY:
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:string fontified t) 16 23 (face tree-sitter-hl-face:string fontified t) 23 24 (face tree-sitter-hl-face:string fontified t) 24 25 (fontified t) 25 27 (face tree-sitter-hl-face:operator fontified t) 27 28 (fontified t) 28 32 (face tree-sitter-hl-face:keyword fontified t) 32 33 (fontified t) 33 45 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 45 46 (fontified t) 46 47 (rear-nonsticky t fontified t)) . -9038) (undo-tree-id130 . -23) (undo-tree-id131 . -23) (undo-tree-id132 . -23) (undo-tree-id133 . -23) (undo-tree-id134 . -23) (undo-tree-id135 . -23) (undo-tree-id136 . -23) (undo-tree-id137 . -23) (undo-tree-id138 . -23) (undo-tree-id139 . -23) (undo-tree-id140 . -23) (undo-tree-id141 . -23) (undo-tree-id142 . -23) (undo-tree-id143 . -23) (undo-tree-id144 . -23) (undo-tree-id145 . -23) (undo-tree-id146 . -23) (undo-tree-id147 . -23) (undo-tree-id148 . -23) (undo-tree-id149 . -23) (undo-tree-id150 . -23) (undo-tree-id151 . -23) (undo-tree-id152 . -23) (undo-tree-id153 . -23) (undo-tree-id154 . -47) (undo-tree-id155 . -47) (undo-tree-id156 . -47) (undo-tree-id157 . -47) (undo-tree-id158 . -47) (undo-tree-id159 . -47) (undo-tree-id160 . -47) (undo-tree-id161 . -47) (undo-tree-id162 . -47) (undo-tree-id163 . -47) (undo-tree-id164 . -47) (undo-tree-id165 . -47) (undo-tree-id166 . -47) 9085 (t 25940 13193 175924 797000)) nil (25940 13215 846831 949000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9037) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 9038) nil (25940 13215 846788 954000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9049) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) 9053) nil (25940 13215 846566 142000) 0 nil])
([nil nil ((8525 . 8537) (t 25940 13215 911925 520000)) nil (25940 13398 654349 983000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16448) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16448) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16448) (#("a" 0 1 (fontified t)) . 16448) (#("K" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . 16448) (#("." 0 1 (fontified t)) . 16448) (#("f" 0 1 (fontified t)) . 16448) (#("l" 0 1 (fontified t)) . 16448) (#("e" 0 1 (fontified t)) . 16448) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 16448) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16448) (#("t" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("q" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("s" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("." 0 1 (fontified t)) . 16448) (#("h" 0 1 (fontified t)) . 16448) (#("c" 0 1 (fontified t)) . 16448) (#("r" 0 1 (fontified t)) . 16448) (#("o" 0 1 (fontified t)) . 16448) (#("t" 0 1 (fontified t)) . 16448) (t 25940 13398 719931 338000)) nil (25940 13435 75825 610000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16448) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16448)) nil (25940 13435 75819 385000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16446) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t)) . -16447) (undo-tree-id168 . -1) 16448) nil (25940 13435 75817 383000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16284) (#("a" 0 1 (fontified t)) . 16284) (#("K" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . 16284) (#("." 0 1 (fontified t)) . 16284) (#("f" 0 1 (fontified t)) . 16284) (#("l" 0 1 (fontified t)) . 16284) (#("e" 0 1 (fontified t)) . 16284) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 16284) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16284) (#("t" 0 1 (fontified t)) . 16284) (#("r" 0 1 (fontified t)) . 16284) (#("q" 0 1 (fontified t)) . 16284) (#("s" 0 1 (fontified t)) . 16284) (#("." 0 1 (fontified t)) . 16284) (#("h" 0 1 (fontified t)) . 16284) (#("c" 0 1 (fontified t)) . 16284) (#("r" 0 1 (fontified t)) . 16284) (#("o" 0 1 (fontified t)) . 16284) (#("t" 0 1 (fontified t)) . 16284) (#(" " 0 1 (fontified t)) . 16284) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 16284)) nil (25940 13435 75801 726000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16284) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16284) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16284) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16284)) nil (25940 13435 75791 298000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16295) (16294 . 16295) (16293 . 16295) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -16293) (16285 . 16294) (t 25940 13435 147932 497000)) nil (25940 13455 281685 815000) 0 nil])
([nil nil ((16294 . 16295)) nil (25940 13455 281682 701000) 0 nil])
([nil nil ((16296 . 16297)) nil (25940 13455 281681 765000) 0 nil])
([nil nil ((16296 . 16297)) nil (25940 13455 281680 671000) 0 nil])
([nil nil ((16436 . 16442)) nil (25940 13455 281679 657000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16445) (16444 . 16445) (16443 . 16445) (#("[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -16443) (16442 . 16444)) nil (25940 13455 281677 163000) 0 nil])
([nil nil ((16444 . 16445)) nil (25940 13455 281673 938000) 0 nil])
([nil nil ((16446 . 16449)) nil (25940 13455 281668 752000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11808) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 11808) (t 25940 13455 347933 140000)) nil (25940 13720 653248 369000) 0 nil])
([nil nil ((11863 . 11865)) nil (25940 13720 653243 978000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 11834) (#("s" 0 1 (fontified t)) . 11834) (#("n" 0 1 (fontified t)) . 11834) (t 25940 13720 719941 584000)) nil (25940 13730 510808 147000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -11832) (undo-tree-id180 . -1) (#("o" 0 1 (fontified t)) . -11833) (undo-tree-id181 . -1) 11834) nil (25940 13730 510805 892000) 0 nil])
([nil nil ((11832 . 11836)) nil (25940 13730 510802 183000) 0 nil])
([nil nil ((11836 . 11837)) nil (25940 13730 510800 654000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11836) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 11837) nil (25940 13730 510796 229000) 0 nil])
([nil nil ((1358 . 1362) (t 25940 13730 575941 898000)) nil (25940 14703 916538 307000) 0 nil])
([nil nil ((8673 . 8685) (#("            " 0 12 (fontified nil)) . 8672) (undo-tree-id211 . -12) (8684 . 8685) (t 25940 14703 979972 874000)) nil (25940 14726 848319 216000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8672) (undo-tree-id210 . -1) 8673) nil (25940 14726 848316 438000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8957) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) 8961) nil (25940 14726 848313 27000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8998) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4)) nil (25940 14726 848286 491000) 0 nil])
([nil nil ((8928 . 8930)) nil (25940 14726 848268 876000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8928) (undo-tree-id217 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8929) (undo-tree-id218 . -1) 8930 (t 25940 14726 911973 604000)) nil (25940 14731 938551 56000) 0 nil])
([nil nil ((8945 . 8961) (#("            " 0 12 (fontified t)) . 8945) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) 8957) nil (25940 14731 938546 159000) 0 nil])
([nil nil ((8990 . 9006) (#("            " 0 12 (fontified t)) . 8990) (undo-tree-id212 . -12)) nil (25940 14955 568943 970000) 0 nil])
([nil nil ((9026 . 9035) (t 25940 14732 3973 766000)) nil (25940 14961 922674 576000) 0 nil] [nil nil ((#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8711) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("b" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8712) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8713) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 8714 (t 25940 14732 3973 766000)) ((8711 . 8714)) (25940 14955 567851 906000) 0 nil])
([nil nil ((9035 . 9037) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -9035) (9035 . 9036) (t 25940 14961 987981 84000)) nil (25940 14990 878630 419000) 0 nil])
nil
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9036)) nil (25940 14990 878628 352000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9043) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -9044) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -9045) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -9046) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#(" " 0 1 (fontified t)) . -9047) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("@" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -9048) (undo-tree-id423 . -1) (#(" " 0 1 (fontified t)) . -9049) (undo-tree-id424 . -1) (#("s" 0 1 (fontified t)) . -9050) (undo-tree-id425 . -1) (#("e" 0 1 (fontified t)) . -9051) (undo-tree-id426 . -1) (#("l" 0 1 (fontified t)) . -9052) (undo-tree-id427 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -9053) (undo-tree-id428 . -1) (#("." 0 1 (fontified t)) . -9054) (undo-tree-id429 . -1) (#("k" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9055) (undo-tree-id430 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9056) (undo-tree-id431 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9057) (undo-tree-id432 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -9058) (undo-tree-id433 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -9059) (undo-tree-id434 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -9060) (undo-tree-id435 . -1) 9061) nil (25940 14990 878618 225000) 0 nil])
([nil nil ((9043 . 9044)) nil (25940 14990 878145 216000) 0 nil])
([nil nil ((9045 . 9046) (t 25940 14990 943982 6000)) nil (25940 14993 190028 531000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8697) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 8697) (t 25940 14993 255982 79000)) nil (25940 20466 483592 611000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 8759)) nil (25940 20466 483590 903000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8763) 8759) nil (25940 20466 483589 744000) 0 nil])
([nil nil ((8834 . 8850) (#("            " 0 12 (fontified t)) . 8834) (undo-tree-id3 . -12)) nil (25940 20466 483587 763000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 8850)) nil (25940 20466 483584 622000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -8850) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -5)) nil (25940 20466 483579 978000) 0 nil])
([nil nil ((800 . 801) (t 25940 20466 552156 252000)) nil (25956 41423 788335 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1166 . 1167) (nil fontified nil 1159 . 1167) (nil fontified nil 1153 . 1159) (nil fontified nil 1147 . 1153) (nil fontified nil 1146 . 1147) (nil fontified nil 1142 . 1146) (nil fontified nil 1141 . 1142) (nil fontified nil 1140 . 1141) (nil fontified nil 1138 . 1140) (nil fontified nil 1132 . 1138) (nil fontified nil 1128 . 1132) (nil fontified nil 1127 . 1128) (nil fontified nil 1126 . 1127) (nil fontified nil 1124 . 1126) (nil fontified nil 1118 . 1124) (nil fontified nil 1117 . 1118) (nil fontified nil 1069 . 1117) (nil fontified nil 1063 . 1069) (nil fontified nil 1062 . 1063) (nil fontified nil 1060 . 1062) (nil fontified nil 1059 . 1060) (nil fontified nil 1058 . 1059) (nil fontified nil 1048 . 1058) (nil fontified nil 1046 . 1048) (nil fontified nil 1045 . 1046) (nil fontified nil 1044 . 1045) (nil fontified nil 1034 . 1044) (nil fontified nil 1032 . 1034) (nil fontified nil 1028 . 1032) (nil fontified nil 1022 . 1028) (nil fontified nil 1019 . 1022) (nil fontified nil 1018 . 1019) (nil fontified nil 1017 . 1018) (nil fontified nil 1016 . 1017) (nil fontified nil 1012 . 1016) (nil fontified nil 1011 . 1012) (nil fontified nil 1008 . 1011) (nil fontified nil 1004 . 1008) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 1001 . 1002) (nil fontified nil 997 . 1001) (nil fontified nil 996 . 997) (nil fontified nil 993 . 996) (nil fontified nil 989 . 993) (nil fontified nil 988 . 989) (nil fontified nil 985 . 988) (nil fontified nil 984 . 985) (nil fontified nil 983 . 984) (nil fontified nil 982 . 983) (nil fontified nil 972 . 982) (nil fontified nil 969 . 972) (nil fontified nil 968 . 969) (nil fontified nil 967 . 968) (nil fontified nil 966 . 967) (nil fontified nil 956 . 966) (nil fontified nil 954 . 956) (nil fontified nil 952 . 954) (nil fontified nil 951 . 952) (nil fontified nil 949 . 951) (nil fontified nil 943 . 949) (nil fontified nil 942 . 943) (nil fontified nil 934 . 942) (nil fontified nil 932 . 934) (nil fontified nil 931 . 932) (nil fontified nil 930 . 931) (nil fontified nil 929 . 930) (nil fontified nil 928 . 929) (nil fontified nil 924 . 928) (nil fontified nil 923 . 924) (nil fontified nil 917 . 923) (nil fontified nil 913 . 917) (nil fontified nil 912 . 913) (nil fontified nil 909 . 912) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 906 . 907) (nil fontified nil 898 . 906) (nil fontified nil 896 . 898) (nil fontified nil 895 . 896) (nil fontified nil 894 . 895) (nil fontified nil 893 . 894) (nil fontified nil 892 . 893) (nil fontified nil 888 . 892) (nil fontified nil 887 . 888) (nil fontified nil 881 . 887) (nil fontified nil 877 . 881) (nil fontified nil 876 . 877) (nil fontified nil 873 . 876) (nil fontified nil 872 . 873) (nil fontified nil 871 . 872) (nil fontified nil 870 . 871) (nil fontified nil 862 . 870) (nil fontified nil 860 . 862) (nil fontified nil 858 . 860) (nil fontified nil 851 . 858) (nil fontified nil 850 . 851) (nil fontified nil 848 . 850) (nil fontified nil 844 . 848) (nil fontified nil 842 . 844) (nil fontified nil 841 . 842) (nil fontified nil 839 . 841) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 829 . 836) (nil fontified nil 827 . 829) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 823 . 825) (nil fontified nil 821 . 823) (nil fontified nil 820 . 821) (nil fontified nil 818 . 820) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 807 . 816) (nil fontified nil 806 . 807) (nil fontified nil 803 . 806) (nil fontified nil 801 . 803) (801 . 1167)) nil (25956 41423 788326 188000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -801) (t 25956 41423 858191 158000)) nil (25956 41436 166178 924000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t)) . -844) 840) nil (25956 41436 166177 667000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t)) . -864) 860) nil (25956 41436 166176 502000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t)) . -898)) nil (25956 41436 166175 415000) 0 nil])
([nil nil ((935 . 943) (#("      " 0 6 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 935)) nil (25956 41436 166174 229000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -939) (undo-tree-id4 . -4) 943) nil (25956 41436 166172 939000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -954) 950) nil (25956 41436 166170 754000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -968)) nil (25956 41436 166169 576000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1012) 1008) nil (25956 41436 166168 561000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1026) 1022) nil (25956 41436 166167 396000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1038)) nil (25956 41436 166165 449000) 0 nil])
([nil nil ((1043 . 1051) (#("      " 0 6 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1043)) nil (25956 41436 166164 162000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1047) (undo-tree-id3 . -4) 1051) nil (25956 41436 166162 751000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1100) (undo-tree-id2 . -2)) nil (25956 41436 166159 948000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1112) (undo-tree-id1 . -2)) nil (25956 41436 166157 88000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1125) (undo-tree-id0 . -2)) nil (25956 41436 166150 986000) 0 nil])
([nil nil ((6826 . 6834) (t 25956 41436 234191 552000)) nil (25956 41454 385918 184000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 6841) (6840 . 6841) (6839 . 6841) (#("(" 0 1 (fontified nil)) . -6839) (6834 . 6840)) nil (25956 41454 385916 610000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 6842) (6841 . 6842) (6840 . 6842) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -6840) (6840 . 6841)) nil (25956 41454 385913 733000) 0 nil])
([nil nil ((6841 . 6853)) nil (25956 41454 385910 906000) 0 nil])
([nil nil ((6855 . 6864)) nil (25956 41454 385905 770000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . -6853) (undo-tree-id6 . -1) 6854 (t 25956 41454 454192 132000)) nil (25956 41461 391098 763000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . -6840) (undo-tree-id5 . -1) 6841) nil (25956 41461 391095 528000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 6842) (6841 . 6842) (6840 . 6842) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -6840) (6840 . 6841)) nil (25956 41461 391083 333000) 0 nil])
([nil nil ((6841 . 6847)) nil (25956 41461 391080 818000) 0 nil])
([nil nil ((6848 . 6850)) nil (25956 41461 391075 945000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6863) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 6864 (t 25956 41461 458192 355000)) nil (25956 41462 756257 968000) 0 nil])
([nil nil ((6863 . 6864) (t 25956 41462 826192 398000)) nil (25956 41567 245176 178000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6903 . 6904) (nil fontified nil 6903 . 6904) (nil fontified nil 6902 . 6903) (nil fontified nil 6901 . 6902) (nil fontified nil 6894 . 6901) (nil fontified nil 6892 . 6894) (nil fontified nil 6891 . 6892) (nil fontified nil 6890 . 6891) (nil fontified nil 6888 . 6890) (nil fontified nil 6886 . 6888) (nil fontified nil 6885 . 6886) (nil fontified nil 6883 . 6885) (nil fontified nil 6882 . 6883) (nil fontified nil 6881 . 6882) (nil fontified nil 6872 . 6881) (6872 . 6904)) nil (25956 41567 245174 405000) 0 nil])
([nil nil ((6904 . 6913)) nil (25956 41567 245170 258000) 0 nil])
([nil nil ((6865 . 6873) (#("        " 0 8 (fontified nil)) . 6864) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (6872 . 6873)) nil (25956 41567 245168 876000) 0 nil])
([nil nil ((6873 . 6880)) nil (25956 41567 245163 175000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6879) (undo-tree-id19 . -1) 6880) nil (25956 41567 245162 98000) 0 nil])
([nil nil ((6879 . 6881)) nil (25956 41567 245152 975000) 0 nil])
([nil nil ((6913 . 6922)) nil (25956 41567 245151 669000) 0 nil])
([nil nil ((6873 . 6878)) nil (25956 41567 245150 663000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 6934) (6933 . 6934) (6932 . 6934) (#("(" 0 1 (fontified nil)) . -6932) (6927 . 6933)) nil (25956 41567 245148 806000) 0 nil])
([nil nil ((6933 . 6943)) nil (25956 41567 245146 147000) 0 nil])
([nil nil ((6943 . 6949)) nil (25956 41567 245141 976000) 0 nil])
([nil nil ((6944 . 6947) (t 25956 41567 314195 723000)) nil (25956 41576 444350 636000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6946) (undo-tree-id29 . -1) 6947) nil (25956 41576 444349 179000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6949) (6948 . 6949) (6947 . 6949) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6947) (6946 . 6948)) nil (25956 41576 444346 170000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6944) (undo-tree-id24 . -1) (#("p" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6945) (undo-tree-id25 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6946) (undo-tree-id26 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -6947) (undo-tree-id27 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -6948) (undo-tree-id28 . -1) 6949) nil (25956 41576 444340 324000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6896) (undo-tree-id38 . -1) 6897 (t 25956 41576 510196 16000)) nil (25956 41618 66986 876000) 0 nil])
([nil nil ((6896 . 6898)) nil (25956 41618 66984 645000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6897) (undo-tree-id37 . -1) 6898) nil (25956 41618 66983 704000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6906) (6905 . 6906) (6904 . 6906) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6904) (6897 . 6905)) nil (25956 41618 66981 314000) 0 nil])
([nil nil ((6905 . 6906)) nil (25956 41618 66979 620000) 0 nil])
([nil nil ((#("à" 0 1 (fontified t)) . -6905) (undo-tree-id36 . -1) 6906) nil (25956 41618 66978 611000) 0 nil])
([nil nil ((6905 . 6906)) nil (25956 41618 66976 600000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6909) (undo-tree-id35 . -1) 6910) nil (25956 41618 66975 577000) 0 nil])
([nil nil ((6909 . 6918)) nil (25956 41618 66973 641000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:property fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6917) (undo-tree-id34 . -1) 6918) nil (25956 41618 66972 622000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6919) (6918 . 6919) (6917 . 6919) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6917) (6917 . 6918)) nil (25956 41618 66970 285000) 0 nil])
([nil nil ((6918 . 6919)) nil (25956 41618 66968 545000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6925) (undo-tree-id33 . -1) 6926) nil (25956 41618 66967 311000) 0 nil])
([nil nil ((6925 . 6926)) nil (25956 41618 66964 951000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6936) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 6937) nil (25956 41618 66962 578000) 0 nil])
([nil nil ((6936 . 6937)) nil (25956 41618 66944 992000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6913) (6912 . 6913) (6911 . 6913) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6911) (6907 . 6912) (t 25956 41618 134197 340000)) nil (25956 41667 951147 204000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6932) (6931 . 6932) (6930 . 6932) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6930) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (6926 . 6931)) nil (25956 41667 951141 853000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1132) (undo-tree-id54 . -1) (#("1" 0 1 (fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1133) (undo-tree-id55 . -1) (#("," 0 1 (fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1134) (undo-tree-id56 . -1) (#(" " 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1135) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1136) (undo-tree-id58 . -1) (#("2" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1137) (undo-tree-id59 . -1) 1138 (t 25956 41668 18198 928000)) nil (25956 41733 28756 350000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1144) (1143 . 1144) (1142 . 1144) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1142) (1132 . 1143)) nil (25956 41733 28747 724000) 0 nil])
([nil nil ((1143 . 1144)) nil (25956 41733 28746 68000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -1142) (undo-tree-id52 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1143) (#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1143) (undo-tree-id53 . -1) 1144) nil (25956 41733 28744 798000) 0 nil])
([nil nil ((1142 . 1143)) nil (25956 41733 28741 498000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1142) (undo-tree-id51 . -1) 1143) nil (25956 41733 28740 444000) 0 nil])
([nil nil ((1143 . 1149) (1142 . 1144) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1142) (1142 . 1143)) nil (25956 41733 28738 224000) 0 nil])
([nil nil ((#("é" 0 1 (fontified t)) . -1147) (undo-tree-id49 . -1) (#("1" 0 1 (fontified t)) . -1148) (undo-tree-id50 . -1) 1149) nil (25956 41733 28736 416000) 0 nil])
([nil nil ((1147 . 1148)) nil (25956 41733 28733 380000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -1147) (undo-tree-id48 . -1) 1148) nil (25956 41733 28732 249000) 0 nil])
([nil nil ((1147 . 1149)) nil (25956 41733 28730 169000) 0 nil])
([nil nil ((apply -4 1096 1125 undo--wrap-and-run-primitive-undo 1096 1125 ((1114 . 1116) (1100 . 1102) 1120))) nil (25956 41733 28729 374000) 0 nil])
([nil nil ((1124 . 1128)) nil (25956 41733 28728 406000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1151) (undo-tree-id46 . -1) (#("2" 0 1 (fontified t)) . -1152) (undo-tree-id47 . -1) 1153) nil (25956 41733 28727 55000) 0 nil])
([nil nil ((1151 . 1152)) nil (25956 41733 28723 850000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1154) (#("e" 0 1 (fontified t)) . 1154)) nil (25956 41733 28722 766000) 0 nil])
([nil nil ((1154 . 1155)) nil (25956 41733 28721 444000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1151) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 1152) nil (25956 41733 28718 988000) 0 nil])
([nil nil ((1151 . 1152)) nil (25956 41733 28698 726000) 0 nil])
([nil nil ((#("    # Normalize the vectors (make them unit vectors)
    # e1 = u 
    # e2 = v 
" 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 4 52 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 52 53 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 53 57 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 57 59 (face tree-sitter-hl-face:comment fontified t) 59 61 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 61 62 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 62 63 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 63 66 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 66 67 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 67 71 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 71 73 (face tree-sitter-hl-face:comment fontified t) 73 75 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 75 76 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 76 77 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 77 80 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 80 81 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1043) (undo-tree-id97 . -81) (undo-tree-id98 . -81) (undo-tree-id99 . -53) (undo-tree-id100 . -81) (undo-tree-id101 . -81) (undo-tree-id102 . -81) (undo-tree-id103 . -81) (undo-tree-id104 . -67) (undo-tree-id105 . -81) (undo-tree-id106 . -67) (undo-tree-id107 . -67) (undo-tree-id108 . -67) (undo-tree-id109 . -67) (undo-tree-id110 . -67) (undo-tree-id111 . -67) (undo-tree-id112 . -67) (undo-tree-id113 . -67) (undo-tree-id114 . -67) (undo-tree-id115 . -53) (undo-tree-id116 . -67) (undo-tree-id117 . -53) (t 25956 41733 98200 999000)) nil (25956 41736 115834 273000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1042) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 1043) nil (25956 41736 115809 727000) 0 nil])
([nil nil ((1042 . 1050) (#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1042) (t 25956 41736 186201 97000)) nil (25956 41737 221601 893000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1046) (undo-tree-id118 . -4) 1050) nil (25956 41737 221596 980000) 0 nil])
([nil nil ((6920 . 6928) (#("        " 0 8 (fontified nil)) . 6919) (undo-tree-id125 . -8) (6927 . 6928) (t 25956 41737 290201 132000)) nil (25956 41803 949294 5000) 0 nil])
([nil nil ((6919 . 6927)) nil (25956 41803 949291 610000) 0 nil])
([nil nil ((6920 . 6928) (#("        " 0 8 (fontified nil)) . 6919) (undo-tree-id124 . -8) (6927 . 6928)) nil (25956 41803 949290 615000) 0 nil])
([nil nil ((6928 . 6936)) nil (25956 41803 949288 203000) 0 nil])
([nil nil ((6934 . 6935)) nil (25956 41803 949287 315000) 0 nil])
([nil nil ((6943 . 6945) (#("(" 0 1 (fontified nil)) . -6943) (6937 . 6944)) nil (25956 41803 949286 232000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -6943) (undo-tree-id123 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 6944)) nil (25956 41803 949284 557000) 0 nil])
([nil nil ((6944 . 6952) (6943 . 6945) (#("[" 0 1 (fontified nil)) . -6943) (6943 . 6944)) nil (25956 41803 949282 167000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -6950) (undo-tree-id121 . -1) (#("t" 0 1 (fontified t)) . -6951) (undo-tree-id122 . -1) 6952) nil (25956 41803 949279 532000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6962) (6961 . 6962) (6960 . 6962) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6960) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (6950 . 6961)) nil (25956 41803 949271 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7001 . 7002) (nil fontified nil 7001 . 7002) (nil fontified nil 7000 . 7001) (nil fontified nil 6995 . 7000) (nil fontified nil 6988 . 6995) (nil fontified nil 6986 . 6988) (nil fontified nil 6985 . 6986) (nil fontified nil 6979 . 6985) (nil fontified nil 6978 . 6979) (nil fontified nil 6977 . 6978) (nil fontified nil 6972 . 6977) (nil fontified nil 6964 . 6972) (6964 . 7002) (t 25956 41804 22203 256000)) nil (25956 41819 104584 397000) 0 nil])
([nil nil ((6946 . 6947) (t 25956 41819 174203 738000)) nil (25956 41849 560264 342000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6946) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 6947) nil (25956 41849 560261 242000) 0 nil])
([nil nil ((6947 . 6952)) nil (25956 41849 560237 224000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:variable fontified t src-block t font-lock-fontified t)) . 898) (t 25956 41849 630204 707000)) nil (25956 42453 36027 107000) 0 nil])
([nil nil ((898 . 899)) nil (25956 42453 36022 557000) 0 nil])
([nil nil ((1043 . 1051) (#("    " 0 4 (fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1043) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (1042 . 1043) (t 25956 42453 102223 911000)) nil (25956 42471 46009 393000) 0 nil])
([nil nil ((nil fontified nil 1126 . 1127) (nil fontified nil 1125 . 1126) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1119 . 1123) (nil fontified nil 1118 . 1119) (nil fontified nil 1112 . 1118) (nil fontified nil 1108 . 1112) (nil fontified nil 1107 . 1108) (nil fontified nil 1104 . 1107) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1095 . 1101) (nil fontified nil 1093 . 1095) (nil fontified nil 1092 . 1093) (nil fontified nil 1091 . 1092) (nil fontified nil 1090 . 1091) (nil fontified nil 1089 . 1090) (nil fontified nil 1085 . 1089) (nil fontified nil 1084 . 1085) (nil fontified nil 1078 . 1084) (nil fontified nil 1074 . 1078) (nil fontified nil 1073 . 1074) (nil fontified nil 1070 . 1073) (nil fontified nil 1069 . 1070) (nil fontified nil 1068 . 1069) (nil fontified nil 1067 . 1068) (nil fontified nil 1061 . 1067) (nil fontified nil 1059 . 1061) (nil fontified nil 1057 . 1059) (nil fontified nil 1050 . 1057) (nil fontified nil 1049 . 1050) (nil fontified nil 1047 . 1049) (nil fontified nil 1045 . 1047) (nil fontified nil 1043 . 1045) (1043 . 1127)) nil (25956 42471 45999 774000) 0 nil])
([nil nil ((#("        u = a / np.linalg.norm(a)
" 0 2 (fontified t src-block t font-lock-fontified t) 2 8 (fontified t src-block t font-lock-fontified t) 8 9 (face tree-sitter-hl-face:variable fontified t src-block t font-lock-fontified t) 9 10 (fontified t src-block t font-lock-fontified t) 10 11 (face tree-sitter-hl-face:operator fontified t src-block t font-lock-fontified t) 11 14 (fontified t src-block t font-lock-fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t src-block t font-lock-fontified t) 15 19 (fontified t src-block t font-lock-fontified t) 19 25 (face tree-sitter-hl-face:property fontified t src-block t font-lock-fontified t) 25 26 (fontified t src-block t font-lock-fontified t) 26 30 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t src-block t font-lock-fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t) 31 32 (fontified t src-block t font-lock-fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t) 33 34 (fontified t src-block t font-lock-fontified t)) . -1059) (undo-tree-id137 . -34) (undo-tree-id138 . -34) (undo-tree-id139 . -34) (undo-tree-id140 . -34) (undo-tree-id141 . -34) (undo-tree-id142 . -34) (undo-tree-id143 . -34) (undo-tree-id144 . -34) (undo-tree-id145 . -34) (undo-tree-id146 . -34) (undo-tree-id147 . -34) (undo-tree-id148 . -34) (undo-tree-id149 . -34) (undo-tree-id150 . -34) (undo-tree-id151 . -34) 1093) nil (25956 42471 45986 61000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1097) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) 1101 (t 25956 42471 118224 484000)) nil (25956 42475 247659 315000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3630 . 3631) (nil fontified nil 3630 . 3631) (nil fontified nil 3629 . 3630) (nil fontified nil 3620 . 3629) (nil fontified nil 3619 . 3620) (nil fontified nil 3618 . 3619) (nil fontified nil 3617 . 3618) (nil fontified nil 3607 . 3617) (nil fontified nil 3606 . 3607) (nil fontified nil 3605 . 3606) (nil fontified nil 3604 . 3605) (nil fontified nil 3598 . 3604) (nil fontified nil 3597 . 3598) (nil fontified nil 3593 . 3597) (nil fontified nil 3592 . 3593) (nil fontified nil 3591 . 3592) (nil fontified nil 3584 . 3591) (nil fontified nil 3583 . 3584) (nil fontified nil 3582 . 3583) (nil fontified nil 3572 . 3582) (nil fontified nil 3571 . 3572) (nil fontified nil 3567 . 3571) (nil fontified nil 3566 . 3567) (nil fontified nil 3565 . 3566) (nil fontified nil 3564 . 3565) (nil fontified nil 3559 . 3564) (nil fontified nil 3547 . 3559) (3547 . 3631) (t 25956 42475 314224 618000)) nil (25956 44331 31408 131000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3555) 3547) nil (25956 44331 31400 402000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3555) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3555) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3555)) nil (25956 44331 31398 824000) 0 nil])
([nil nil ((3555 . 3565)) nil (25956 44331 31397 383000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:variable fontified nil)) . 3565) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3565)) nil (25956 44331 31396 150000) 0 nil])
([nil nil ((3555 . 3557)) nil (25956 44331 31395 116000) 0 nil])
([nil nil ((#("        # net_input = torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 86 (face tree-sitter-hl-face:comment fontified t) 86 87 (fontified t)) . -4278) (undo-tree-id235 . -87) 4365) nil (25956 44331 31393 946000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4277) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 4278) nil (25956 44331 31391 535000) 0 nil])
([nil nil ((#("        # noise = []
        # for i_pop in range(self.N_POP):
        #     noise.append(self.ff_normal.sample((self.Na[i_pop],)))
" 0 8 (fontified t) 8 20 (face tree-sitter-hl-face:comment fontified t) 20 29 (fontified t) 29 62 (face tree-sitter-hl-face:comment fontified t) 62 71 (fontified t) 71 131 (face tree-sitter-hl-face:comment fontified t) 131 132 (fontified t)) . -4362) (undo-tree-id232 . -132) 4494) nil (25956 44331 31388 509000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4361) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 4362) nil (25956 44331 31386 103000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4352) (undo-tree-id229 . -1) 4353) nil (25956 44331 31383 91000) 0 nil])
([nil nil ((#("        # for i_pop in range(self.N_POP):
        #     net_input = net_input + rec_input[i_pop]
" 0 8 (fontified t) 8 41 (face tree-sitter-hl-face:comment fontified t) 41 50 (fontified t) 50 96 (face tree-sitter-hl-face:comment fontified t) 96 97 (fontified t)) . -4416) (undo-tree-id228 . -97) 4513) nil (25956 44331 31380 864000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4415) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 4416) nil (25956 44331 31378 586000) 0 nil])
([nil nil ((#("        # for j_pop in range(self.N_POP):
        #     for i_pop in range(self.N_POP):
        #         r_pres = rates[self.csumNa[j_pop] : self.csumNa[j_pop + 1]]
                
        #         print('rate', r_pres.shape)
        #         print(self.Wab[j_pop, i_pop])
                
        #         Wij = self.Wab[j_pop, i_pop](r_pres)
        #         print('Wij', Wij.shape)
                
        #         rec_input[j_pop, self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = Wij
" 0 8 (fontified t) 8 41 (face tree-sitter-hl-face:comment fontified t) 41 50 (fontified t) 50 87 (face tree-sitter-hl-face:comment fontified t) 87 96 (fontified t) 96 165 (face tree-sitter-hl-face:comment fontified t) 165 191 (fontified t) 191 228 (face tree-sitter-hl-face:comment fontified t) 228 237 (fontified t) 237 276 (face tree-sitter-hl-face:comment fontified t) 276 302 (fontified t) 302 348 (face tree-sitter-hl-face:comment fontified t) 348 357 (fontified t) 357 390 (face tree-sitter-hl-face:comment fontified t) 390 416 (fontified t) 416 493 (face tree-sitter-hl-face:comment fontified t) 493 494 (fontified t)) . -3643) (undo-tree-id208 . -8) (undo-tree-id209 . -8) (undo-tree-id210 . -8) (undo-tree-id211 . -494) (undo-tree-id212 . -277) (undo-tree-id213 . -229) (undo-tree-id214 . -294) (undo-tree-id215 . -277) (undo-tree-id216 . -349) (undo-tree-id217 . -294) (undo-tree-id218 . -391) (undo-tree-id219 . -349) (undo-tree-id220 . -408) (undo-tree-id221 . -391) (undo-tree-id222 . -494) (undo-tree-id223 . -494) (undo-tree-id224 . -408) (undo-tree-id225 . -494) 4137) nil (25956 44331 31373 801000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3642) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 3643) nil (25956 44331 31262 554000) 0 nil])
([nil nil ((8591 . 8592) (t 25956 44331 102283 673000)) nil (25956 46858 20997 257000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8591) (undo-tree-id256 . -1) 8592) nil (25956 46858 20995 838000) 0 nil])
([nil nil ((8591 . 8604)) nil (25956 46858 20993 54000) 0 nil])
([nil nil ((8604 . 8605)) nil (25956 46858 20992 129000) 0 nil])
([nil nil ((8608 . 8610)) nil (25956 46858 20990 615000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8611) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 8612) nil (25956 46858 20985 897000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8589) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (t 25956 46858 90364 87000)) nil (25956 46874 567018 971000) 0 nil])
([nil nil ((8603 . 8604)) nil (25956 46874 566994 617000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8609) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 8610 (t 25956 46874 638364 614000)) nil (25956 47227 277546 399000) 0 nil])
([nil nil ((apply -6 8536 8781 undo--wrap-and-run-primitive-undo 8536 8781 ((8715 . 8717) (8626 . 8628) (8548 . 8550) 8762))) nil (25956 47435 912888 247000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16293) (t 25956 47435 986382 477000)) nil (25956 48091 47819 978000) 0 nil])
([nil nil ((16293 . 16294)) nil (25956 48091 47817 898000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16282) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 16283) nil (25956 48091 47814 977000) 0 nil])
([nil nil ((16282 . 16283)) nil (25956 48091 47786 205000) 0 nil])
([nil nil ((16320 . 16336) (#("            " 0 12 (fontified nil)) . 16320) (16319 . 16320) (t 25956 48091 118403 325000)) nil (25956 48107 456153 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16617 . 16618) (nil fontified nil 16617 . 16618) (nil fontified nil 16615 . 16617) (nil fontified nil 16614 . 16615) (nil fontified nil 16610 . 16614) (nil fontified nil 16609 . 16610) (nil fontified nil 16608 . 16609) (nil fontified nil 16607 . 16608) (nil fontified nil 16606 . 16607) (nil fontified nil 16605 . 16606) (nil fontified nil 16604 . 16605) (nil fontified nil 16602 . 16604) (nil fontified nil 16601 . 16602) (nil fontified nil 16597 . 16601) (nil fontified nil 16596 . 16597) (nil fontified nil 16595 . 16596) (nil fontified nil 16594 . 16595) (nil fontified nil 16593 . 16594) (nil fontified nil 16592 . 16593) (nil fontified nil 16591 . 16592) (nil fontified nil 16588 . 16591) (nil fontified nil 16587 . 16588) (nil fontified nil 16583 . 16587) (nil fontified nil 16582 . 16583) (nil fontified nil 16581 . 16582) (nil fontified nil 16580 . 16581) (nil fontified nil 16579 . 16580) (nil fontified nil 16578 . 16579) (nil fontified nil 16577 . 16578) (nil fontified nil 16574 . 16577) (nil fontified nil 16573 . 16574) (nil fontified nil 16569 . 16573) (nil fontified nil 16568 . 16569) (nil fontified nil 16567 . 16568) (nil fontified nil 16566 . 16567) (nil fontified nil 16565 . 16566) (nil fontified nil 16564 . 16565) (nil fontified nil 16563 . 16564) (nil fontified nil 16562 . 16563) (nil fontified nil 16556 . 16562) (nil fontified nil 16555 . 16556) (nil fontified nil 16551 . 16555) (nil fontified nil 16550 . 16551) (nil fontified nil 16549 . 16550) (nil fontified nil 16548 . 16549) (nil fontified nil 16547 . 16548) (nil fontified nil 16541 . 16547) (nil fontified nil 16540 . 16541) (nil fontified nil 16536 . 16540) (nil fontified nil 16535 . 16536) (nil fontified nil 16531 . 16535) (nil fontified nil 16530 . 16531) (nil fontified nil 16526 . 16530) (nil fontified nil 16525 . 16526) (nil fontified nil 16522 . 16525) (nil fontified nil 16521 . 16522) (nil fontified nil 16517 . 16521) (nil fontified nil 16501 . 16517) (nil fontified nil 16499 . 16501) (nil fontified nil 16496 . 16499) (nil fontified nil 16495 . 16496) (nil fontified nil 16493 . 16495) (nil fontified nil 16492 . 16493) (nil fontified nil 16488 . 16492) (nil fontified nil 16487 . 16488) (nil fontified nil 16483 . 16487) (nil fontified nil 16482 . 16483) (nil fontified nil 16480 . 16482) (nil fontified nil 16467 . 16480) (nil fontified nil 16465 . 16467) (nil fontified nil 16464 . 16465) (nil fontified nil 16460 . 16464) (nil fontified nil 16459 . 16460) (nil fontified nil 16458 . 16459) (nil fontified nil 16457 . 16458) (nil fontified nil 16456 . 16457) (nil fontified nil 16455 . 16456) (nil fontified nil 16454 . 16455) (nil fontified nil 16452 . 16454) (nil fontified nil 16451 . 16452) (nil fontified nil 16447 . 16451) (nil fontified nil 16446 . 16447) (nil fontified nil 16445 . 16446) (nil fontified nil 16444 . 16445) (nil fontified nil 16443 . 16444) (nil fontified nil 16442 . 16443) (nil fontified nil 16441 . 16442) (nil fontified nil 16438 . 16441) (nil fontified nil 16437 . 16438) (nil fontified nil 16433 . 16437) (nil fontified nil 16432 . 16433) (nil fontified nil 16431 . 16432) (nil fontified nil 16430 . 16431) (nil fontified nil 16429 . 16430) (nil fontified nil 16428 . 16429) (nil fontified nil 16427 . 16428) (nil fontified nil 16424 . 16427) (nil fontified nil 16423 . 16424) (nil fontified nil 16419 . 16423) (nil fontified nil 16418 . 16419) (nil fontified nil 16417 . 16418) (nil fontified nil 16416 . 16417) (nil fontified nil 16415 . 16416) (nil fontified nil 16414 . 16415) (nil fontified nil 16413 . 16414) (nil fontified nil 16412 . 16413) (nil fontified nil 16406 . 16412) (nil fontified nil 16405 . 16406) (nil fontified nil 16401 . 16405) (nil fontified nil 16400 . 16401) (nil fontified nil 16399 . 16400) (nil fontified nil 16398 . 16399) (nil fontified nil 16397 . 16398) (nil fontified nil 16391 . 16397) (nil fontified nil 16390 . 16391) (nil fontified nil 16386 . 16390) (nil fontified nil 16385 . 16386) (nil fontified nil 16381 . 16385) (nil fontified nil 16380 . 16381) (nil fontified nil 16376 . 16380) (nil fontified nil 16375 . 16376) (nil fontified nil 16372 . 16375) (nil fontified nil 16371 . 16372) (nil fontified nil 16367 . 16371) (nil fontified nil 16349 . 16367) (nil fontified nil 16348 . 16349) (nil fontified nil 16347 . 16348) (nil fontified nil 16345 . 16347) (nil fontified nil 16344 . 16345) (nil fontified nil 16340 . 16344) (nil fontified nil 16339 . 16340) (nil fontified nil 16335 . 16339) (nil fontified nil 16334 . 16335) (nil fontified nil 16332 . 16334) (nil fontified nil 16320 . 16332) (16320 . 16618)) nil (25956 48107 456146 794000) 0 nil])
([nil nil ((16348 . 16349)) nil (25956 48107 456117 375000) 0 nil])
([nil nil ((#("8" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16498)) nil (25956 48107 456116 207000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16497) (undo-tree-id289 . -1) 16498) nil (25956 48107 456113 137000) 0 nil])
([nil nil ((16497 . 16499)) nil (25956 48107 456090 468000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16593) (undo-tree-id301 . -1) 16594 (t 25956 48107 526403 847000)) nil (25956 48111 88546 71000) 0 nil])
([nil nil ((16593 . 16594)) nil (25956 48111 88542 426000) 0 nil])
([nil nil ((16444 . 16445)) nil (25956 48111 88540 706000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16444) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 16445) nil (25956 48111 88535 684000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16443) (undo-tree-id302 . -1) 16444 (t 25956 48111 158403 963000)) nil (25956 48112 621991 947000) 0 nil])
([nil nil ((16443 . 16444)) nil (25956 48112 621976 34000) 0 nil])
([nil nil ((16319 . 16335) (t 25956 48112 690404 12000)) nil (25956 48115 629616 358000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16331) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) 16335) nil (25956 48115 629610 595000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16643) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) 16647 (t 25956 48115 702404 107000)) nil (25956 48120 664528 617000) 0 nil])
([nil nil ((apply -8 6124 6347 undo--wrap-and-run-primitive-undo 6124 6347 ((6306 . 6308) (6255 . 6257) (6220 . 6222) (6132 . 6134) 6330))) nil (25956 48617 756775 354000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16128) (undo-tree-id338 . -1) (#("e" 0 1 (fontified t)) . -16129) (undo-tree-id339 . -1) (#("l" 0 1 (fontified t)) . -16130) (undo-tree-id340 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -16131) (undo-tree-id341 . -1) (#("." 0 1 (fontified nil)) . -16132) (undo-tree-id342 . -1) (#("J" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -16133) (undo-tree-id343 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -16134) (undo-tree-id344 . -1) (#("0" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -16135) (undo-tree-id345 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16136) (undo-tree-id346 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16137) (undo-tree-id347 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16138) (undo-tree-id348 . -1) (#(" " 0 1 (fontified t)) . -16139) (undo-tree-id349 . -1) 16140 (t 25956 48617 826420 86000)) nil (25956 49439 116991 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16128) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 16128)) nil (25956 49439 116975 655000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 16264)) nil (25956 49439 116974 532000) 0 nil])
([nil nil ((#(".Ja0" 0 1 (fontified t) 1 4 (face tree-sitter-hl-face:constructor fontified t)) . 16264)) nil (25956 49439 116973 787000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16264) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16264) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16264) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16264)) nil (25956 49439 116972 668000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 16414)) nil (25956 49439 116971 123000) 0 nil])
([nil nil ((#(".Ja0" 0 1 (fontified t) 1 4 (face tree-sitter-hl-face:constructor fontified t)) . 16414)) nil (25956 49439 116970 204000) 0 nil])
([nil nil ((#("[0" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face tree-sitter-hl-face:number fontified t)) . 16414)) nil (25956 49439 116969 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16414) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16414)) nil (25956 49439 116968 321000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 16552) (undo-tree-id337 . -4)) nil (25956 49439 116967 101000) 0 nil])
([nil nil ((#(".Ja0" 0 1 (fontified t) 1 4 (face tree-sitter-hl-face:constructor fontified t)) . 16552) (undo-tree-id336 . -4)) nil (25956 49439 116964 774000) 0 nil])
([nil nil ((#("[0" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face tree-sitter-hl-face:number fontified t)) . 16552) (undo-tree-id335 . -2)) nil (25956 49439 117464 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16552) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16552)) nil (25956 49440 691859 960000) 0 nil] [nil nil ((#("] - self" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t) 1 2 (fontified t) 2 3 (face tree-sitter-hl-face:operator fontified t) 3 4 (fontified t) 4 8 (face tree-sitter-hl-face:keyword fontified t)) . 16552) (undo-tree-id334 . -8)) ((16552 . 16560)) (25956 49439 116955 691000) 0 nil])
([nil nil ((9115 . 9117) (t 25956 49440 762446 274000)) nil (25956 50377 460549 157000) 0 nil])
nil
([nil nil ((#("?" 0 1 (fontified t)) . -9115) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 9116) nil (25956 50377 460545 850000) 0 nil])
([nil nil ((9115 . 9116)) nil (25956 50377 460509 758000) 0 nil])
([nil nil ((apply 4 9147 9201 undo--wrap-and-run-primitive-undo 9147 9201 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -9186) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -9159) 9205))) nil (25956 50385 817818 455000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16136 . 16137) (nil fontified nil 16126 . 16137) (16126 . 16137) (t 25956 50385 890476 350000)) nil (25956 50448 221724 523000) 0 nil])
([nil nil ((16141 . 16143) (16140 . 16142) (#("(" 0 1 (fontified nil)) . -16140) (16137 . 16141)) nil (25956 50448 221722 418000) 0 nil])
([nil nil ((16142 . 16144)) nil (25956 50448 221720 352000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16144) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 16144)) nil (25956 50448 221718 623000) 0 nil])
([nil nil ((16144 . 16147)) nil (25956 50448 221716 523000) 0 nil])
([nil nil ((16181 . 16182)) nil (25956 50448 221712 129000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16135) (undo-tree-id371 . -1) 16136 (t 25956 50448 290478 335000)) nil (25956 50457 491286 977000) 0 nil])
([nil nil ((16135 . 16136)) nil (25956 50457 491270 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16340 . 16341) (nil fontified nil 16340 . 16341) (nil fontified nil 16339 . 16340) (nil fontified nil 16337 . 16339) (nil fontified nil 16336 . 16337) (nil fontified nil 16332 . 16336) (nil fontified nil 16331 . 16332) (nil fontified nil 16330 . 16331) (nil fontified nil 16329 . 16330) (nil fontified nil 16328 . 16329) (nil fontified nil 16327 . 16328) (nil fontified nil 16326 . 16327) (nil fontified nil 16324 . 16326) (nil fontified nil 16323 . 16324) (nil fontified nil 16319 . 16323) (nil fontified nil 16318 . 16319) (nil fontified nil 16317 . 16318) (nil fontified nil 16316 . 16317) (nil fontified nil 16315 . 16316) (nil fontified nil 16314 . 16315) (nil fontified nil 16313 . 16314) (nil fontified nil 16310 . 16313) (nil fontified nil 16309 . 16310) (nil fontified nil 16305 . 16309) (nil fontified nil 16304 . 16305) (nil fontified nil 16303 . 16304) (nil fontified nil 16302 . 16303) (nil fontified nil 16299 . 16302) (nil fontified nil 16298 . 16299) (nil fontified nil 16297 . 16298) (nil fontified nil 16296 . 16297) (nil fontified nil 16295 . 16296) (nil fontified nil 16294 . 16295) (nil fontified nil 16293 . 16294) (nil fontified nil 16292 . 16293) (nil fontified nil 16289 . 16292) (nil fontified nil 16288 . 16289) (nil fontified nil 16284 . 16288) (nil fontified nil 16283 . 16284) (nil fontified nil 16282 . 16283) (nil fontified nil 16281 . 16282) (nil fontified nil 16280 . 16281) (nil fontified nil 16279 . 16280) (nil fontified nil 16278 . 16279) (nil fontified nil 16277 . 16278) (nil fontified nil 16271 . 16277) (nil fontified nil 16270 . 16271) (nil fontified nil 16266 . 16270) (nil fontified nil 16265 . 16266) (nil fontified nil 16264 . 16265) (nil fontified nil 16263 . 16264) (nil fontified nil 16262 . 16263) (nil fontified nil 16256 . 16262) (nil fontified nil 16255 . 16256) (nil fontified nil 16251 . 16255) (nil fontified nil 16250 . 16251) (nil fontified nil 16246 . 16250) (nil fontified nil 16245 . 16246) (nil fontified nil 16241 . 16245) (nil fontified nil 16240 . 16241) (nil fontified nil 16237 . 16240) (nil fontified nil 16236 . 16237) (nil fontified nil 16232 . 16236) (nil fontified nil 16216 . 16232) (16216 . 16341) (t 25956 50457 562478 631000)) nil (25956 50473 659255 835000) 0 nil])
([nil nil ((#("                self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = - self.ksi[0] * self.I0[0] * self.M0
" 0 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 24 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 24 25 (fontified t) 25 29 (face tree-sitter-hl-face:property fontified t) 29 30 (fontified t) 30 34 (face tree-sitter-hl-face:property fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face tree-sitter-hl-face:keyword fontified t) 39 40 (fontified t) 40 46 (face tree-sitter-hl-face:property fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (face tree-sitter-hl-face:number fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (fontified t) 50 54 (face tree-sitter-hl-face:keyword fontified t) 54 55 (fontified t) 55 61 (face tree-sitter-hl-face:property fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 63 (face tree-sitter-hl-face:number fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (face (rainbow-delimiters-depth-1-face) fontified t) 65 66 (fontified t) 66 67 (face tree-sitter-hl-face:operator fontified t) 67 68 (fontified t) 68 69 (face tree-sitter-hl-face:operator fontified t) 69 70 (fontified t) 70 74 (face tree-sitter-hl-face:keyword fontified t) 74 75 (fontified t) 75 78 (face tree-sitter-hl-face:property fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (face tree-sitter-hl-face:number fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (fontified t) 82 83 (face tree-sitter-hl-face:operator fontified t) 83 84 (fontified t) 84 88 (face tree-sitter-hl-face:keyword fontified t) 88 89 (fontified t) 89 91 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 91 92 (face (rainbow-delimiters-depth-1-face) fontified t) 92 93 (face tree-sitter-hl-face:number fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t) 95 96 (face tree-sitter-hl-face:operator fontified t) 96 97 (fontified t) 97 101 (face tree-sitter-hl-face:keyword fontified t) 101 102 (fontified t) 102 104 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 104 105 (fontified t)) . -16341) (undo-tree-id374 . -75) (undo-tree-id375 . -105) 16446) nil (25956 50473 659241 377000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16303) (undo-tree-id373 . -1) 16304) nil (25956 50473 659237 798000) 0 nil])
([nil nil ((16303 . 16304)) nil (25956 50473 659234 887000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -16303) (undo-tree-id372 . -1) 16304) nil (25956 50473 659232 652000) 0 nil])
([nil nil ((16303 . 16304)) nil (25956 50473 659218 732000) 0 nil])
([nil nil ((16342 . 16358) (#("            " 0 12 (fontified nil)) . 16342) (16341 . 16342) (t 25956 50473 730479 145000)) nil (25956 50496 996926 343000) 0 nil])
([nil nil ((nil fontified nil 16655 . 16656) (nil fontified nil 16654 . 16655) (nil fontified nil 16652 . 16654) (nil fontified nil 16651 . 16652) (nil fontified nil 16647 . 16651) (nil fontified nil 16646 . 16647) (nil fontified nil 16645 . 16646) (nil fontified nil 16644 . 16645) (nil fontified nil 16643 . 16644) (nil fontified nil 16642 . 16643) (nil fontified nil 16641 . 16642) (nil fontified nil 16639 . 16641) (nil fontified nil 16638 . 16639) (nil fontified nil 16634 . 16638) (nil fontified nil 16633 . 16634) (nil fontified nil 16632 . 16633) (nil fontified nil 16631 . 16632) (nil fontified nil 16630 . 16631) (nil fontified nil 16629 . 16630) (nil fontified nil 16628 . 16629) (nil fontified nil 16625 . 16628) (nil fontified nil 16624 . 16625) (nil fontified nil 16620 . 16624) (nil fontified nil 16619 . 16620) (nil fontified nil 16618 . 16619) (nil fontified nil 16617 . 16618) (nil fontified nil 16614 . 16617) (nil fontified nil 16613 . 16614) (nil fontified nil 16612 . 16613) (nil fontified nil 16611 . 16612) (nil fontified nil 16610 . 16611) (nil fontified nil 16609 . 16610) (nil fontified nil 16608 . 16609) (nil fontified nil 16607 . 16608) (nil fontified nil 16604 . 16607) (nil fontified nil 16603 . 16604) (nil fontified nil 16599 . 16603) (nil fontified nil 16598 . 16599) (nil fontified nil 16597 . 16598) (nil fontified nil 16596 . 16597) (nil fontified nil 16595 . 16596) (nil fontified nil 16594 . 16595) (nil fontified nil 16593 . 16594) (nil fontified nil 16592 . 16593) (nil fontified nil 16586 . 16592) (nil fontified nil 16585 . 16586) (nil fontified nil 16581 . 16585) (nil fontified nil 16580 . 16581) (nil fontified nil 16579 . 16580) (nil fontified nil 16578 . 16579) (nil fontified nil 16577 . 16578) (nil fontified nil 16571 . 16577) (nil fontified nil 16570 . 16571) (nil fontified nil 16566 . 16570) (nil fontified nil 16565 . 16566) (nil fontified nil 16561 . 16565) (nil fontified nil 16560 . 16561) (nil fontified nil 16556 . 16560) (nil fontified nil 16555 . 16556) (nil fontified nil 16552 . 16555) (nil fontified nil 16551 . 16552) (nil fontified nil 16547 . 16551) (nil fontified nil 16531 . 16547) (nil fontified nil 16529 . 16531) (nil fontified nil 16526 . 16529) (nil fontified nil 16525 . 16526) (nil fontified nil 16523 . 16525) (nil fontified nil 16522 . 16523) (nil fontified nil 16518 . 16522) (nil fontified nil 16517 . 16518) (nil fontified nil 16513 . 16517) (nil fontified nil 16512 . 16513) (nil fontified nil 16510 . 16512) (nil fontified nil 16498 . 16510) (nil fontified nil 16497 . 16498) (nil fontified nil 16496 . 16497) (nil fontified nil 16494 . 16496) (nil fontified nil 16493 . 16494) (nil fontified nil 16489 . 16493) (nil fontified nil 16488 . 16489) (nil fontified nil 16487 . 16488) (nil fontified nil 16486 . 16487) (nil fontified nil 16485 . 16486) (nil fontified nil 16484 . 16485) (nil fontified nil 16483 . 16484) (nil fontified nil 16481 . 16483) (nil fontified nil 16480 . 16481) (nil fontified nil 16476 . 16480) (nil fontified nil 16475 . 16476) (nil fontified nil 16474 . 16475) (nil fontified nil 16473 . 16474) (nil fontified nil 16472 . 16473) (nil fontified nil 16471 . 16472) (nil fontified nil 16470 . 16471) (nil fontified nil 16467 . 16470) (nil fontified nil 16466 . 16467) (nil fontified nil 16462 . 16466) (nil fontified nil 16461 . 16462) (nil fontified nil 16460 . 16461) (nil fontified nil 16459 . 16460) (nil fontified nil 16456 . 16459) (nil fontified nil 16455 . 16456) (nil fontified nil 16454 . 16455) (nil fontified nil 16453 . 16454) (nil fontified nil 16452 . 16453) (nil fontified nil 16451 . 16452) (nil fontified nil 16450 . 16451) (nil fontified nil 16449 . 16450) (nil fontified nil 16446 . 16449) (nil fontified nil 16445 . 16446) (nil fontified nil 16441 . 16445) (nil fontified nil 16440 . 16441) (nil fontified nil 16439 . 16440) (nil fontified nil 16438 . 16439) (nil fontified nil 16437 . 16438) (nil fontified nil 16436 . 16437) (nil fontified nil 16435 . 16436) (nil fontified nil 16434 . 16435) (nil fontified nil 16428 . 16434) (nil fontified nil 16427 . 16428) (nil fontified nil 16423 . 16427) (nil fontified nil 16422 . 16423) (nil fontified nil 16421 . 16422) (nil fontified nil 16420 . 16421) (nil fontified nil 16419 . 16420) (nil fontified nil 16413 . 16419) (nil fontified nil 16412 . 16413) (nil fontified nil 16408 . 16412) (nil fontified nil 16407 . 16408) (nil fontified nil 16403 . 16407) (nil fontified nil 16402 . 16403) (nil fontified nil 16398 . 16402) (nil fontified nil 16397 . 16398) (nil fontified nil 16394 . 16397) (nil fontified nil 16393 . 16394) (nil fontified nil 16389 . 16393) (nil fontified nil 16373 . 16389) (nil fontified nil 16371 . 16373) (nil fontified nil 16370 . 16371) (nil fontified nil 16369 . 16370) (nil fontified nil 16367 . 16369) (nil fontified nil 16366 . 16367) (nil fontified nil 16362 . 16366) (nil fontified nil 16361 . 16362) (nil fontified nil 16357 . 16361) (nil fontified nil 16356 . 16357) (nil fontified nil 16354 . 16356) (nil fontified nil 16342 . 16354) (16342 . 16656)) nil (25956 50496 996919 494000) 0 nil])
([nil nil ((#("            if self.PHI0 == 90:
                self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = + self.ksi[1] * self.I0[0] * self.M0
            if self.PHI0 == 270:
                self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = - self.ksi[1] * self.I0[0] * self.M0
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (fontified t) 15 19 (face tree-sitter-hl-face:keyword fontified t) 19 20 (fontified t) 20 24 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 24 25 (fontified t) 25 27 (face tree-sitter-hl-face:operator fontified t) 27 28 (fontified t) 28 29 (face tree-sitter-hl-face:number fontified t) 29 30 (face tree-sitter-hl-face:number fontified t) 30 32 (fontified t) 32 48 (fontified t) 48 52 (face tree-sitter-hl-face:keyword fontified t) 52 53 (fontified t) 53 56 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 56 57 (fontified t) 57 61 (face tree-sitter-hl-face:property fontified t) 61 62 (fontified t) 62 66 (face tree-sitter-hl-face:property fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 71 (face tree-sitter-hl-face:keyword fontified t) 71 72 (fontified t) 72 78 (face tree-sitter-hl-face:property fontified t) 78 79 (face (rainbow-delimiters-depth-2-face) fontified t) 79 80 (face tree-sitter-hl-face:number fontified t) 80 81 (face (rainbow-delimiters-depth-2-face) fontified t) 81 82 (fontified t) 82 86 (face tree-sitter-hl-face:keyword fontified t) 86 87 (fontified t) 87 93 (face tree-sitter-hl-face:property fontified t) 93 94 (face (rainbow-delimiters-depth-2-face) fontified t) 94 95 (face tree-sitter-hl-face:number fontified t) 95 96 (face (rainbow-delimiters-depth-2-face) fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 98 (fontified t) 98 99 (face tree-sitter-hl-face:operator fontified t) 99 100 (fontified t) 100 101 (face tree-sitter-hl-face:operator fontified t) 101 102 (fontified t) 102 106 (face tree-sitter-hl-face:keyword fontified t) 106 107 (fontified t) 107 110 (face tree-sitter-hl-face:property fontified t) 110 111 (face (rainbow-delimiters-depth-1-face) fontified t) 111 112 (face tree-sitter-hl-face:number fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 114 (fontified t) 114 115 (face tree-sitter-hl-face:operator fontified t) 115 116 (fontified t) 116 120 (face tree-sitter-hl-face:keyword fontified t) 120 121 (fontified t) 121 123 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t) 124 125 (face tree-sitter-hl-face:number fontified t) 125 126 (face (rainbow-delimiters-depth-1-face) fontified t) 126 127 (fontified t) 127 128 (face tree-sitter-hl-face:operator fontified t) 128 129 (fontified t) 129 133 (face tree-sitter-hl-face:keyword fontified t) 133 134 (fontified t) 134 136 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 136 137 (fontified t) 137 149 (fontified t) 149 151 (face tree-sitter-hl-face:keyword fontified t) 151 152 (fontified t) 152 156 (face tree-sitter-hl-face:keyword fontified t) 156 157 (fontified t) 157 161 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 161 162 (fontified t) 162 163 (face tree-sitter-hl-face:operator fontified t) 163 164 (face tree-sitter-hl-face:operator fontified t) 164 165 (fontified t) 165 166 (face tree-sitter-hl-face:number fontified t) 166 167 (face tree-sitter-hl-face:number fontified t) 167 168 (face tree-sitter-hl-face:number fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 172 (fontified t) 172 186 (fontified t) 186 190 (face tree-sitter-hl-face:keyword fontified t) 190 191 (fontified t) 191 194 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 194 195 (fontified t) 195 199 (face tree-sitter-hl-face:property fontified t) 199 200 (fontified t) 200 204 (face tree-sitter-hl-face:property fontified t) 204 205 (face (rainbow-delimiters-depth-1-face) fontified t) 205 209 (face tree-sitter-hl-face:keyword fontified t) 209 210 (fontified t) 210 216 (face tree-sitter-hl-face:property fontified t) 216 217 (face (rainbow-delimiters-depth-2-face) fontified t) 217 218 (face tree-sitter-hl-face:number fontified t) 218 219 (face (rainbow-delimiters-depth-2-face) fontified t) 219 220 (fontified t) 220 224 (face tree-sitter-hl-face:keyword fontified t) 224 225 (fontified t) 225 231 (face tree-sitter-hl-face:property fontified t) 231 232 (face (rainbow-delimiters-depth-2-face) fontified t) 232 233 (face tree-sitter-hl-face:number fontified t) 233 234 (face (rainbow-delimiters-depth-2-face) fontified t) 234 235 (face (rainbow-delimiters-depth-1-face) fontified t) 235 236 (fontified t) 236 237 (face tree-sitter-hl-face:operator fontified t) 237 238 (fontified t) 238 239 (face tree-sitter-hl-face:operator fontified t) 239 240 (fontified t) 240 244 (face tree-sitter-hl-face:keyword fontified t) 244 245 (fontified t) 245 248 (face tree-sitter-hl-face:property fontified t) 248 249 (face (rainbow-delimiters-depth-1-face) fontified t) 249 250 (face tree-sitter-hl-face:number fontified t) 250 251 (face (rainbow-delimiters-depth-1-face) fontified t) 251 252 (fontified t) 252 253 (face tree-sitter-hl-face:operator fontified t) 253 254 (fontified t) 254 258 (face tree-sitter-hl-face:keyword fontified t) 258 259 (fontified t) 259 261 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 261 262 (face (rainbow-delimiters-depth-1-face) fontified t) 262 263 (face tree-sitter-hl-face:number fontified t) 263 264 (face (rainbow-delimiters-depth-1-face) fontified t) 264 265 (fontified t) 265 266 (face tree-sitter-hl-face:operator fontified t) 266 267 (fontified t) 267 271 (face tree-sitter-hl-face:keyword fontified t) 271 272 (fontified t) 272 274 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 274 275 (fontified t rear-nonsticky t)) . -16673) (undo-tree-id406 . -22) (undo-tree-id407 . -22) (undo-tree-id408 . -275) 16948) nil (25956 50496 996886 714000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16672) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 16673) nil (25956 50496 996882 503000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16526) (undo-tree-id399 . -1) (#("8" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16527) (undo-tree-id400 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16528) (undo-tree-id401 . -1) 16529) nil (25956 50496 996877 301000) 0 nil])
([nil nil ((16526 . 16529)) nil (25956 50496 996873 11000) 0 nil])
([nil nil ((#("9" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16528) (undo-tree-id398 . -1) 16529) nil (25956 50496 996871 915000) 0 nil])
([nil nil ((16528 . 16529)) nil (25956 50496 996869 914000) 0 nil])
([nil nil ((16370 . 16371)) nil (25956 50496 996868 963000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16472) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) 16473) nil (25956 50496 996867 209000) 0 nil])
([nil nil ((16472 . 16473)) nil (25956 50496 996855 867000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16630) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 16631) nil (25956 50496 996853 311000) 0 nil])
([nil nil ((16630 . 16631)) nil (25956 50496 996827 206000) 0 nil])
([nil nil ((16341 . 16357) (t 25956 50497 66479 888000)) nil (25956 50503 194846 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16353) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) 16357) nil (25956 50503 194841 171000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -9115) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -9116) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) 9117 (t 25956 50503 266480 85000)) nil (25956 50621 903505 851000) 0 nil])
([nil nil ((apply -4 9145 9216 undo--wrap-and-run-primitive-undo 9145 9216 ((9186 . 9188) (9157 . 9159) 9199))) nil (25956 50676 566790 396000) 0 nil])
([nil nil ((2736 . 2752) (#("        " 0 8 (fontified t)) . 2736) (undo-tree-id18 . -8) 2744 (t 25956 50676 638485 602000)) nil (25966 60958 710213 872000) 0 nil])
([nil nil ((2447 . 2449)) nil (25966 60958 710210 699000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2618) (undo-tree-id17 . -1) 2619) nil (25966 60958 710209 295000) 0 nil])
([nil nil ((2618 . 2619)) nil (25966 60958 710206 792000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2639) (undo-tree-id16 . -1) 2640) nil (25966 60958 710205 604000) 0 nil])
([nil nil ((2639 . 2640)) nil (25966 60958 710203 169000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2721) (undo-tree-id15 . -1) 2722) nil (25966 60958 710201 894000) 0 nil])
([nil nil ((2721 . 2722)) nil (25966 60958 710199 296000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2700) (undo-tree-id14 . -1) 2701) nil (25966 60958 710197 868000) 0 nil])
([nil nil ((2700 . 2701)) nil (25966 60958 710195 83000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2447) (undo-tree-id12 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2448) (undo-tree-id13 . -1) 2449) nil (25966 60958 710193 426000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2441) (undo-tree-id11 . -1) 2442) nil (25966 60958 710188 921000) 0 nil])
([nil nil ((2441 . 2442)) nil (25966 60958 710185 891000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2434) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 2435) nil (25966 60958 710182 400000) 0 nil])
([nil nil ((2434 . 2435)) nil (25966 60958 710146 667000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2487) (undo-tree-id32 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2488) (undo-tree-id33 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2489) (undo-tree-id34 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2490) (undo-tree-id35 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2491) (undo-tree-id36 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2492) (undo-tree-id37 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2493) (undo-tree-id38 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2494) (undo-tree-id39 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2495) (undo-tree-id40 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2496) (undo-tree-id41 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2497) (undo-tree-id42 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2498) (undo-tree-id43 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2499) (undo-tree-id44 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2500) (undo-tree-id45 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2501) (undo-tree-id46 . -1) 2502 (t 25966 61016 747669 646000)) nil (25966 60964 883003 807000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2486) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 2487) nil (25966 60964 882971 845000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2182 . 2183) (nil fontified nil 2135 . 2183) (2135 . 2183) (t 25966 61022 871669 841000)) nil (25966 61014 299816 68000) 0 nil])
([nil nil ((#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 2135)) nil (25966 61014 299814 764000) 0 nil])
([nil nil ((#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2180) (undo-tree-id65 . -1) 2181) nil (25966 61014 299814 20000) 0 nil])
([nil nil ((apply -2 2127 2184 undo--wrap-and-run-primitive-undo 2127 2184 ((2135 . 2137) 2181))) nil (25966 61014 299812 316000) 0 nil])
([nil nil ((2126 . 2135)) nil (25966 61014 299811 702000) 0 nil])
([nil nil ((2192 . 2200)) nil (25966 61014 299811 100000) 0 nil])
([nil nil ((#("A" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2178) (undo-tree-id64 . -1) 2179) nil (25966 61014 299810 163000) 0 nil])
([nil nil ((2178 . 2179)) nil (25966 61014 299808 479000) 0 nil])
([nil nil ((2128 . 2136) (#("        " 0 8 (fontified nil)) . 2127) (undo-tree-id63 . -8) (2135 . 2136)) nil (25966 61014 299807 475000) 0 nil])
([nil nil ((2136 . 2137)) nil (25966 61014 299805 678000) 0 nil])
([nil nil ((2137 . 2148)) nil (25966 61014 299804 977000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2146) (undo-tree-id61 . -1) (#("c" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2147) (undo-tree-id62 . -1) 2148) nil (25966 61014 299803 897000) 0 nil])
([nil nil ((2146 . 2148)) nil (25966 61014 299801 224000) 0 nil])
([nil nil ((2213 . 2222)) nil (25966 61014 299800 555000) 0 nil])
([nil nil ((2222 . 2239)) nil (25966 61014 299799 966000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2237) (undo-tree-id59 . -1) (#("y" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2238) (undo-tree-id60 . -1) 2239) nil (25966 61014 299798 963000) 0 nil])
([nil nil ((2237 . 2240)) nil (25966 61014 299795 941000) 0 nil])
([nil nil ((#("y" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2239) (undo-tree-id58 . -1) 2240) nil (25966 61014 299794 995000) 0 nil])
([nil nil ((2239 . 2244)) nil (25966 61014 299793 68000) 0 nil])
([nil nil ((2244 . 2259)) nil (25966 61014 299792 110000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2258) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 2259) nil (25966 61014 299790 320000) 0 nil])
([nil nil ((2258 . 2260)) nil (25966 61014 299770 896000) 0 nil])
([nil nil ((2260 . 2269)) nil (25966 61014 299767 535000) 0 nil])
([nil nil ((7982 . 7990) (t 25966 61072 259671 413000)) nil (25966 61047 825062 321000) 0 nil])
([nil nil ((2581 . 2587) (t 25966 61105 795672 480000)) nil (25966 61098 915800 708000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2585) (undo-tree-id68 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2586) (undo-tree-id69 . -1) 2587) nil (25966 61098 915799 316000) 0 nil])
([nil nil ((2585 . 2594)) nil (25966 61098 915796 160000) 0 nil])
([nil nil ((2584 . 2586) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2584) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (2584 . 2585)) nil (25966 61098 915794 158000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2585)) nil (25966 61098 915778 758000) 0 nil])
([nil nil ((#("                # Wij = nn.Linear(self.Na[i_pop], self.Na[j_pop], bias=(i_pop==j_pop),
                #                 dtype=self.FLOAT, device=self.device)
" 0 16 (fontified t) 16 86 (face tree-sitter-hl-face:comment fontified t) 86 103 (fontified t) 103 158 (face tree-sitter-hl-face:comment fontified t) 158 159 (fontified t)) . -2354) (undo-tree-id88 . -159) 2513 (t 25966 61156 875674 106000)) nil (25966 61105 12444 804000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2353) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 2354) nil (25966 61105 12440 495000) 0 nil])
([nil nil ((#("                # Wij.weight.data = W0
                # self.Wab[i_pop, j_pop] = Wij
" 0 16 (fontified t) 16 38 (face tree-sitter-hl-face:comment fontified t) 38 39 (fontified t) 39 55 (fontified t) 55 85 (face tree-sitter-hl-face:comment fontified t) 85 86 (fontified t)) . -2436) (undo-tree-id70 . -38) (undo-tree-id71 . -39) (undo-tree-id72 . -39) (undo-tree-id73 . -39) (undo-tree-id74 . -39) (undo-tree-id75 . -39) (undo-tree-id76 . -39) (undo-tree-id77 . -39) (undo-tree-id78 . -86) (undo-tree-id79 . -39) (undo-tree-id80 . -39) (undo-tree-id81 . -39) (undo-tree-id82 . -86) (undo-tree-id83 . -86) (undo-tree-id84 . -39) (undo-tree-id85 . -86) 2522) nil (25966 61105 12431 771000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2634) (undo-tree-id92 . -4) 2638 (t 25966 61162 971674 300000)) nil (25966 61173 402939 735000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2630) (undo-tree-id91 . -4) 2634) nil (25966 61173 402934 921000) 0 nil])
([nil nil ((2686 . 2688)) nil (25966 61173 402930 156000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2686) (undo-tree-id89 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2687) (undo-tree-id90 . -1) 2688) nil (25966 61173 402923 567000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3806) (undo-tree-id93 . -12) 3818 (t 25966 61231 371676 476000)) nil (25966 61220 604081 359000) 0 nil])
([nil nil ((7529 . 7541) (t 25966 61278 571677 978000)) nil (25966 61406 8859 721000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7537) (undo-tree-id95 . -4) 7541) nil (25966 61406 8857 589000) 0 nil])
([nil nil ((7586 . 7594)) nil (25966 61406 8852 818000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7590) (undo-tree-id94 . -4) 7594) nil (25966 61406 8847 722000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2848) (undo-tree-id97 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2849) (undo-tree-id98 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2850) (undo-tree-id99 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2851) (undo-tree-id100 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2852) (undo-tree-id101 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2853) (undo-tree-id102 . -1) 2854 (t 25966 61463 979683 878000)) nil (25966 61481 888703 22000) 0 nil])
([nil nil ((#("            # self.Wab[i_pop, i_pop].bias.data.fill_(self.Ja0[i_pop])  
" 0 12 (fontified t) 12 71 (face tree-sitter-hl-face:comment fontified t) 71 72 (fontified t)) . -2777) (undo-tree-id96 . -72) 2849) nil (25966 61481 888683 158000) 0 nil])
([nil nil ((#("        # Create recurrent layer with nn.Linear
        # self.Wab = np.array([[None]*self.N_POP for _ in range(self.N_POP)])
" 0 8 (fontified t) 8 47 (face tree-sitter-hl-face:comment fontified t) 47 56 (fontified t) 56 125 (face tree-sitter-hl-face:comment fontified t) 125 126 (fontified t)) . -1860) (undo-tree-id107 . -48) (undo-tree-id108 . -48) (undo-tree-id109 . -126) 1986 (t 25966 61539 867686 293000)) nil (25966 61495 61336 723000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1859) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 1860) nil (25966 61495 61324 969000) 0 nil])
([nil nil ((3964 . 3968) (t 25966 61553 43686 713000)) nil (25966 61563 82441 272000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3964) (undo-tree-id110 . -4) 3968) nil (25966 61563 82439 9000) 0 nil])
([nil nil ((3964 . 3968)) nil (25966 61563 82423 566000) 0 nil])
([nil nil ((2995 . 2999) 2987 (t 25966 61621 51688 877000)) nil (25966 61689 757482 413000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2995) (undo-tree-id176 . -4) 2999) nil (25966 61689 757481 123000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2991) (undo-tree-id175 . -4) 2995) nil (25966 61689 757479 185000) 0 nil])
([nil nil ((219 . 224)) nil (25966 61689 757477 545000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -223) (undo-tree-id174 . -1) 224) nil (25966 61689 757476 604000) 0 nil])
([nil nil ((223 . 224)) nil (25966 61689 757474 712000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 223) (undo-tree-id173 . -1) (224 . 225)) nil (25966 61689 757473 291000) 0 nil])
([nil nil ((223 . 241)) nil (25966 61689 757471 458000) 0 nil])
([nil nil ((241 . 250)) nil (25966 61689 757470 561000) 0 nil])
([nil nil ((#("ç" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -249) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 250) nil (25966 61689 757468 968000) 0 nil])
([nil nil ((249 . 255)) nil (25966 61689 757451 702000) 0 nil])
([nil nil ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -253) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -254) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 255) nil (25966 61689 757448 326000) 0 nil])
([nil nil ((253 . 255)) nil (25966 61689 757355 358000) 0 nil])
([nil nil ((#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -254) (undo-tree-id185 . -1) 255 (t 25966 61747 727692 908000)) nil (25966 61699 805243 331000) 0 nil])
([nil nil ((#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -251) (undo-tree-id182 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -252) (undo-tree-id183 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -253) (undo-tree-id184 . -1) 254) nil (25966 61699 805239 485000) 0 nil])
([nil nil ((251 . 255)) nil (25966 61699 805233 202000) 0 nil])
([nil nil ((#("d" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -252) (undo-tree-id179 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -253) (undo-tree-id180 . -1) (#("l" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -254) (undo-tree-id181 . -1) 255) nil (25966 61699 805231 19000) 0 nil])
([nil nil ((252 . 253)) nil (25966 61699 805224 12000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -251) (undo-tree-id177 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -252) (undo-tree-id178 . -1) 253) nil (25966 61699 805219 975000) 0 nil])
([nil nil ((251 . 255)) nil (25966 61699 805197 314000) 0 nil])
([nil nil ((3024 . 3036) (#("    " 0 4 (fontified t)) . 3024) (t 25966 61757 779693 228000)) nil (25966 61737 768294 744000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3032) (undo-tree-id186 . -4) 3036) nil (25966 61737 768286 196000) 0 nil])
([nil nil ((2787 . 2799) (#("        " 0 8 (fontified nil)) . 2786) (undo-tree-id188 . -8) (2794 . 2795) (t 25966 61795 755694 436000)) nil (25966 61744 77884 785000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2795) (undo-tree-id187 . -4) 2799) nil (25966 61744 77877 616000) 0 nil])
([nil nil ((2795 . 2812)) nil (25966 61744 77858 970000) 0 nil])
([nil nil ((#("        # fixing the seed
        new_seed = int(time.time())
        torch.manual_seed(new_seed)
        
        if torch.cuda.is_available():
            torch.cuda.manual_seed(new_seed)
            torch.cuda.manual_seed_all(new_seed)  # For all GPUs
" 0 8 (fontified t) 8 25 (face tree-sitter-hl-face:comment fontified t) 25 26 (fontified t) 26 34 (fontified t) 34 42 (face tree-sitter-hl-face:variable fontified t) 42 43 (fontified t) 43 44 (face tree-sitter-hl-face:operator fontified t) 44 45 (fontified t) 45 48 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 54 (fontified t) 54 58 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 58 59 (face (rainbow-delimiters-depth-2-face) fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 76 (fontified t) 76 87 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 115 (fontified t) 115 117 (face tree-sitter-hl-face:keyword fontified t) 117 124 (fontified t) 124 128 (face tree-sitter-hl-face:property fontified t) 128 129 (fontified t) 129 141 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 141 142 (face (rainbow-delimiters-depth-1-face) fontified t) 142 143 (face (rainbow-delimiters-depth-1-face) fontified t) 143 163 (fontified t) 163 167 (face tree-sitter-hl-face:property fontified t) 167 168 (fontified t) 168 179 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 179 180 (face (rainbow-delimiters-depth-1-face) fontified t) 180 188 (fontified t) 188 189 (face (rainbow-delimiters-depth-1-face) fontified t) 189 208 (fontified t) 208 212 (face tree-sitter-hl-face:property fontified t) 212 213 (fontified t) 213 228 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 228 229 (face (rainbow-delimiters-depth-1-face) fontified t) 229 237 (fontified t) 237 238 (face (rainbow-delimiters-depth-1-face) fontified t) 238 240 (fontified t) 240 254 (face tree-sitter-hl-face:comment fontified t) 254 255 (fontified t)) . 2787) (undo-tree-id189 . -255) (undo-tree-id190 . -144) (undo-tree-id191 . -255) (undo-tree-id192 . -26) (t 25966 61802 55694 637000)) nil (25966 61772 464490 867000) 0 nil])
([nil nil ((837 . 838)) nil (25966 61772 464473 963000) 0 nil])
([nil nil ((852 . 853) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 852) (851 . 852) (850 . 852) (#("(" 0 1 (fontified nil)) . -850) (838 . 851)) nil (25966 61772 464472 842000) 0 nil])
([nil nil ((853 . 858)) nil (25966 61772 464471 84000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1112 . 1113) (nil fontified nil 1112 . 1113) (nil fontified nil 1098 . 1112) (nil fontified nil 1096 . 1098) (nil fontified nil 1095 . 1096) (nil fontified nil 1087 . 1095) (nil fontified nil 1086 . 1087) (nil fontified nil 1071 . 1086) (nil fontified nil 1070 . 1071) (nil fontified nil 1066 . 1070) (nil fontified nil 1047 . 1066) (nil fontified nil 1046 . 1047) (nil fontified nil 1038 . 1046) (nil fontified nil 1037 . 1038) (nil fontified nil 1026 . 1037) (nil fontified nil 1025 . 1026) (nil fontified nil 1021 . 1025) (nil fontified nil 1001 . 1021) (nil fontified nil 1000 . 1001) (nil fontified nil 999 . 1000) (nil fontified nil 987 . 999) (nil fontified nil 986 . 987) (nil fontified nil 982 . 986) (nil fontified nil 975 . 982) (nil fontified nil 973 . 975) (nil fontified nil 955 . 973) (nil fontified nil 954 . 955) (nil fontified nil 946 . 954) (nil fontified nil 945 . 946) (nil fontified nil 934 . 945) (nil fontified nil 919 . 934) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 912 . 916) (nil fontified nil 907 . 912) (nil fontified nil 906 . 907) (nil fontified nil 903 . 906) (nil fontified nil 902 . 903) (nil fontified nil 901 . 902) (nil fontified nil 900 . 901) (nil fontified nil 892 . 900) (nil fontified nil 884 . 892) (nil fontified nil 883 . 884) (nil fontified nil 866 . 883) (nil fontified nil 858 . 866) (858 . 1113)) nil (25966 61772 464468 804000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -858) 854) nil (25966 61772 464459 421000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -880)) nil (25966 61772 464458 390000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -912)) nil (25966 61772 464457 655000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -944)) nil (25966 61772 464456 777000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -949)) nil (25966 61772 464455 822000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -987) 983) nil (25966 61772 464454 43000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1028)) nil (25966 61772 464449 517000) 0 nil])
([nil nil ((#("    # fixing the seed
" 0 4 (fontified t) 4 21 (face tree-sitter-hl-face:comment fontified t) 21 22 (fontified t)) . -854) (undo-tree-id193 . -4) (undo-tree-id194 . -22) 876 (t 25966 61830 443695 540000)) nil (25966 61776 457432 384000) 0 nil])
([nil nil ((842 . 844)) nil (25966 61776 457410 633000) 0 nil])
([nil nil ((1061 . 1069) (t 25966 61834 439695 667000)) nil (25966 61791 411325 711000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1065) (undo-tree-id265 . -4) 1069) nil (25966 61791 411324 712000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1061) (undo-tree-id264 . -4) 1065) nil (25966 61791 411322 762000) 0 nil])
([nil nil ((1061 . 1070)) nil (25966 61791 411320 965000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1066) (undo-tree-id263 . -4) 1070) nil (25966 61791 411319 874000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1061) (undo-tree-id262 . -1) 1062) nil (25966 61791 411318 33000) 0 nil])
([nil nil ((3014 . 3027)) nil (25966 61791 411316 256000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3023) (undo-tree-id261 . -4) 3027) nil (25966 61791 411315 105000) 0 nil])
([nil nil ((3023 . 3030)) nil (25966 61791 411312 971000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3029) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 3030) nil (25966 61791 411311 739000) 0 nil])
([nil nil ((3034 . 3036) (#("(" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -3034) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (3029 . 3035)) nil (25966 61791 411307 705000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -3033) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("(" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -3034) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 3035)) nil (25966 61791 411292 990000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3035) (3034 . 3035) (3033 . 3035) (#("(" 0 1 (fontified nil)) . -3033) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (3033 . 3034)) nil (25966 61791 411236 920000) 0 nil])
([nil nil ((3014 . 3026) (t 25966 61849 387696 143000)) nil (25966 61794 497587 136000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3022) (undo-tree-id266 . -4) 3026) nil (25966 61794 497579 933000) 0 nil])
([nil nil ((#("        if self.SEED !=0 :
            torch.manual_seed(self.SEED)
            
            if torch.cuda.is_available():
                torch.cuda.manual_seed(self.SEED)
                torch.cuda.manual_seed_all(self.SEED)  # For all GPUs
" 0 8 (fontified t) 8 10 (face tree-sitter-hl-face:keyword fontified t) 10 11 (fontified t) 11 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (fontified t) 16 20 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 20 21 (fontified t) 21 23 (face tree-sitter-hl-face:operator fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 45 (fontified t) 45 56 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 61 (face tree-sitter-hl-face:keyword fontified t) 61 62 (fontified t) 62 66 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 93 (fontified t) 93 95 (face tree-sitter-hl-face:keyword fontified t) 95 102 (fontified t) 102 106 (face tree-sitter-hl-face:property fontified t) 106 107 (fontified t) 107 111 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 111 119 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (face (rainbow-delimiters-depth-1-face) fontified t) 121 135 (fontified t) 135 145 (fontified t) 145 149 (face tree-sitter-hl-face:property fontified t) 149 150 (fontified t) 150 161 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 166 (face tree-sitter-hl-face:keyword fontified t) 166 167 (fontified t) 167 171 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 195 (fontified t) 195 199 (face tree-sitter-hl-face:property fontified t) 199 200 (fontified t) 200 215 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 215 216 (face (rainbow-delimiters-depth-1-face) fontified t) 216 220 (face tree-sitter-hl-face:keyword fontified t) 220 221 (fontified t) 221 225 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 225 226 (face (rainbow-delimiters-depth-1-face) fontified t) 226 228 (fontified t) 228 242 (face tree-sitter-hl-face:comment fontified t) 242 243 (fontified t)) . 1873) (undo-tree-id268 . -243) 2116 (t 25966 61852 483696 241000)) nil (25966 61825 915038 50000) 0 nil])
([nil nil ((837 . 838)) nil (25966 61825 915035 97000) 0 nil])
([nil nil ((838 . 839)) nil (25966 61825 915033 917000) 0 nil])
([nil nil ((852 . 853) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 852) (851 . 852) (850 . 852) (#("(" 0 1 (fontified nil)) . -850) (838 . 851)) nil (25966 61825 915032 535000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -852) (undo-tree-id267 . -1) 853) nil (25966 61825 915029 897000) 0 nil])
([nil nil ((852 . 853)) nil (25966 61825 915018 600000) 0 nil])
([nil nil ((853 . 858)) nil (25966 61825 915017 499000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1100 . 1101) (nil fontified nil 1100 . 1101) (nil fontified nil 1086 . 1100) (nil fontified nil 1084 . 1086) (nil fontified nil 1083 . 1084) (nil fontified nil 1079 . 1083) (nil fontified nil 1078 . 1079) (nil fontified nil 1074 . 1078) (nil fontified nil 1073 . 1074) (nil fontified nil 1058 . 1073) (nil fontified nil 1057 . 1058) (nil fontified nil 1053 . 1057) (nil fontified nil 1030 . 1053) (nil fontified nil 1029 . 1030) (nil fontified nil 1025 . 1029) (nil fontified nil 1024 . 1025) (nil fontified nil 1020 . 1024) (nil fontified nil 1019 . 1020) (nil fontified nil 1008 . 1019) (nil fontified nil 1007 . 1008) (nil fontified nil 1003 . 1007) (nil fontified nil 993 . 1003) (nil fontified nil 979 . 993) (nil fontified nil 978 . 979) (nil fontified nil 977 . 978) (nil fontified nil 969 . 977) (nil fontified nil 965 . 969) (nil fontified nil 964 . 965) (nil fontified nil 960 . 964) (nil fontified nil 953 . 960) (nil fontified nil 951 . 953) (nil fontified nil 925 . 951) (nil fontified nil 924 . 925) (nil fontified nil 920 . 924) (nil fontified nil 919 . 920) (nil fontified nil 915 . 919) (nil fontified nil 914 . 915) (nil fontified nil 903 . 914) (nil fontified nil 882 . 903) (nil fontified nil 881 . 882) (nil fontified nil 879 . 881) (nil fontified nil 878 . 879) (nil fontified nil 874 . 878) (nil fontified nil 873 . 874) (nil fontified nil 869 . 873) (nil fontified nil 868 . 869) (nil fontified nil 866 . 868) (nil fontified nil 858 . 866) (858 . 1101)) nil (25966 61825 915014 399000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -858) 854) nil (25966 61825 915002 942000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -885) 881) nil (25966 61825 915001 469000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -922)) nil (25966 61825 915000 33000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -931)) nil (25966 61825 914998 856000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -973) 969) nil (25966 61825 914997 426000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1019)) nil (25966 61825 914995 847000) 0 nil])
([nil nil ((nil fontified t 1031 . 1035) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 1031 . 1035) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1031) (1040 . 1044) (nil fontified t 986 . 990) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 986 . 990) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -986) (995 . 999) (nil fontified t 898 . 902) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 898 . 902) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -898) (907 . 911) (nil fontified t 861 . 865) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 861 . 865) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -861) (870 . 874)) nil (25966 61825 914992 809000) 0 nil])
([nil nil ((851 . 855)) nil (25966 61825 914984 775000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2093) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 2094 (t 25966 61883 891697 241000)) nil (25966 61836 767629 640000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2129 . 2130) (nil fontified nil 2129 . 2130) (nil fontified nil 2128 . 2129) (nil fontified nil 2127 . 2128) (nil fontified nil 2123 . 2127) (nil fontified nil 2122 . 2123) (nil fontified nil 2114 . 2122) (nil fontified nil 2113 . 2114) (nil fontified nil 2110 . 2113) (2110 . 2130)) nil (25966 61836 767621 669000) 0 nil])
([nil nil ((2110 . 2118)) nil (25966 61836 767617 739000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2118) (#("f" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2118) (#("e" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2118) (#("d" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 2118)) nil (25966 61836 767615 126000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2132) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 2133) nil (25966 61836 767608 842000) 0 nil])
([nil nil ((2132 . 2141) (t 25966 61894 747697 586000)) nil (25966 61839 612702 745000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . 2093) (undo-tree-id284 . -8) (2101 . 2102) (t 25966 61897 587697 677000)) nil (25966 61846 595720 788000) 0 nil])
([nil nil ((2102 . 2123)) nil (25966 61846 595708 103000) 0 nil])
([nil nil ((2123 . 2129)) nil (25966 61846 595704 246000) 0 nil])
([nil nil ((2154 . 2162) (#("        " 0 8 (fontified nil)) . 2153) (undo-tree-id451 . -8) (2161 . 2162) (t 25966 61904 571697 899000)) nil (25966 61873 666919 710000) 0 nil])
([nil nil ((2162 . 2169)) nil (25966 61873 666917 730000) 0 nil])
([nil nil ((#("d" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2164) (undo-tree-id446 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2165) (undo-tree-id447 . -1) (#("f" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2166) (undo-tree-id448 . -1) (#("i" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2167) (undo-tree-id449 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2168) (undo-tree-id450 . -1) 2169) nil (25966 61873 666916 403000) 0 nil])
([nil nil ((2164 . 2175)) nil (25966 61873 666910 488000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2174) (undo-tree-id445 . -1) 2175) nil (25966 61873 666909 637000) 0 nil])
([nil nil ((2174 . 2188)) nil (25966 61873 666907 960000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2187) (undo-tree-id444 . -1) 2188) nil (25966 61873 666907 34000) 0 nil])
([nil nil ((2187 . 2190)) nil (25966 61873 666905 334000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2188) (undo-tree-id442 . -1) (#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2189) (undo-tree-id443 . -1) 2190) nil (25966 61873 666904 266000) 0 nil])
([nil nil ((2321 . 2329)) nil (25966 61873 666901 80000) 0 nil])
([nil nil ((#("        # In pytorch
        # y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        # so Wij means i presynaptic and j postsynaptic
" 0 8 (fontified t) 8 20 (face tree-sitter-hl-face:comment fontified t) 20 21 (fontified t) 21 29 (fontified t) 29 31 (face tree-sitter-hl-face:comment fontified t) 31 34 (face tree-sitter-hl-face:comment fontified t) 34 35 (face tree-sitter-hl-face:comment fontified t) 35 36 (face tree-sitter-hl-face:comment fontified t) 36 41 (face tree-sitter-hl-face:comment fontified t) 41 42 (face tree-sitter-hl-face:comment fontified t) 42 43 (face tree-sitter-hl-face:comment fontified t) 43 44 (face tree-sitter-hl-face:comment fontified t) 44 45 (face tree-sitter-hl-face:comment fontified t) 45 46 (face tree-sitter-hl-face:comment fontified t) 46 47 (face tree-sitter-hl-face:comment fontified t) 47 48 (face tree-sitter-hl-face:comment fontified t) 48 49 (face tree-sitter-hl-face:comment fontified t) 49 50 (face tree-sitter-hl-face:comment fontified t) 50 51 (face tree-sitter-hl-face:comment fontified t) 51 52 (face tree-sitter-hl-face:comment fontified t) 52 53 (face tree-sitter-hl-face:comment fontified t) 53 64 (face tree-sitter-hl-face:comment fontified t) 64 65 (face tree-sitter-hl-face:comment fontified t) 65 66 (face tree-sitter-hl-face:comment fontified t) 66 68 (face tree-sitter-hl-face:comment fontified t) 68 69 (face tree-sitter-hl-face:comment fontified t) 69 70 (face tree-sitter-hl-face:comment fontified t) 70 71 (face tree-sitter-hl-face:comment fontified t) 71 72 (face tree-sitter-hl-face:comment fontified t) 72 76 (face tree-sitter-hl-face:comment fontified t) 76 77 (fontified t rear-nonsticky t) 77 85 (fontified t) 85 132 (face tree-sitter-hl-face:comment fontified t) 132 133 (fontified t)) . 2330) (undo-tree-id439 . -29) (undo-tree-id440 . -21) (undo-tree-id441 . -133) 2463) nil (25966 61873 666899 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2321 . 2322) (nil fontified nil 2321 . 2322) (nil fontified nil 2274 . 2321) (nil fontified nil 2266 . 2274) (nil fontified nil 2265 . 2266) (nil fontified nil 2261 . 2265) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2255 . 2257) (nil fontified nil 2254 . 2255) (nil fontified nil 2253 . 2254) (nil fontified nil 2242 . 2253) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2225 . 2230) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2220 . 2223) (nil fontified nil 2218 . 2220) (nil fontified nil 2210 . 2218) (nil fontified nil 2209 . 2210) (nil fontified nil 2197 . 2209) (nil fontified nil 2189 . 2197) (2189 . 2322)) nil (25966 61873 668426 395000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#("
" 0 1 (fontified t)) . 2209)) nil (25966 61878 384292 382000) 0 nil] [nil nil ((#("I" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2199) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2200) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2201) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("p" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2202) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("y" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2203) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2204) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2205) (undo-tree-id435 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2206) (undo-tree-id436 . -1) (#("c" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2207) (undo-tree-id437 . -1) (#("h" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2208) (undo-tree-id438 . -1) 2209) ((2199 . 2209)) (25966 61873 666879 647000) 0 nil])
([nil nil ((2311 . 2320)) nil (25966 61878 384281 528000) 0 nil])
nil
([nil nil ((2164 . 2167) (t 25966 61936 371698 911000)) nil (25966 61892 648215 991000) 0 nil])
([nil nil ((2173 . 2177)) nil (25966 61892 648214 596000) 0 nil])
([nil nil ((2195 . 2209)) nil (25966 61892 648213 292000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2206) (undo-tree-id509 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2207) (undo-tree-id510 . -1) (#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2208) (undo-tree-id511 . -1) 2209) nil (25966 61892 648211 541000) 0 nil])
([nil nil ((2206 . 2211)) nil (25966 61892 648205 911000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2209) (undo-tree-id507 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2210) (undo-tree-id508 . -1) 2211) nil (25966 61892 648204 46000) 0 nil])
([nil nil ((2211 . 2213) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2211) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (2209 . 2212)) nil (25966 61892 648198 802000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2210) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2211) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2212)) nil (25966 61892 648189 582000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . 2212) (2211 . 2212) (2210 . 2212) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2210) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (2210 . 2211)) nil (25966 61892 648117 570000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2485) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 2486 (t 25966 61950 631699 365000)) nil (25966 61910 639308 811000) 0 nil])
([nil nil ((2233 . 2234)) nil (25966 61910 639292 331000) 0 nil])
([nil nil ((#("        # print(self.Wab.bias.data.shape)
" 0 8 (fontified t) 8 41 (face tree-sitter-hl-face:comment fontified t) 41 42 (fontified t)) . -2920) (undo-tree-id517 . -41) (undo-tree-id518 . -42) (undo-tree-id519 . -42) (undo-tree-id520 . -42) (undo-tree-id521 . -42) (undo-tree-id522 . -42) (undo-tree-id523 . -42) (undo-tree-id524 . -42) (undo-tree-id525 . -42) (undo-tree-id526 . -42) (undo-tree-id527 . -42) (undo-tree-id528 . -42) (undo-tree-id529 . -42) (undo-tree-id530 . -42) 2962 (t 25966 61968 619699 937000)) nil (25966 61919 132877 932000) 0 nil])
([nil nil ((3286 . 3294) (#("        " 0 8 (fontified nil)) . 3285) (undo-tree-id537 . -8) (3293 . 3294) (t 25966 61977 119700 208000)) nil (25966 61939 871101 245000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3338 . 3339) (nil fontified nil 3335 . 3339) (nil fontified nil 3334 . 3335) (nil fontified nil 3333 . 3334) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3329 . 3331) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3316 . 3327) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3311 . 3312) (nil fontified nil 3310 . 3311) (nil fontified nil 3309 . 3310) (nil fontified nil 3308 . 3309) (nil fontified nil 3307 . 3308) (nil fontified nil 3306 . 3307) (nil fontified nil 3305 . 3306) (nil fontified nil 3304 . 3305) (nil fontified nil 3299 . 3304) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3294 . 3297) (3294 . 3339)) nil (25966 61939 871096 678000) 0 nil])
([nil nil ((3294 . 3296) (#("{" 0 1 (fontified nil)) . -3294) (3294 . 3295)) nil (25966 61939 871088 206000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3294) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3295)) nil (25966 61939 871084 317000) 0 nil])
([nil nil ((3294 . 3296)) nil (25966 62108 229483 343000) 0 nil])
([nil nil ((3377 . 3386)) ((#("
        " 0 9 (fontified t)) . 3377)) (25966 62109 21906 623000) 0 nil])
([nil nil ((#("                " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 2578) (undo-tree-id844 . -16) (undo-tree-id845 . -16) (undo-tree-id846 . -16) (undo-tree-id847 . -16) (undo-tree-id848 . -16) (undo-tree-id849 . -16) (undo-tree-id850 . -16) (undo-tree-id851 . -16) (undo-tree-id852 . -16) (undo-tree-id853 . -16)) ((2578 . 2594)) (25966 62109 339161 921000) 0 nil])
([nil nil ((2630 . 2632)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2630) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2)) (25966 62109 872177 319000) 0 nil])
([nil nil ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2630) (undo-tree-id854 . -2)) ((2630 . 2632)) (25966 62110 374163 738000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2617) (undo-tree-id855 . -1)) ((2617 . 2618)) (25966 62110 803737 734000) 0 nil])
([nil nil ((2617 . 2618)) ((#("i" 0 1 (fontified t)) . 2617)) (25966 62111 544773 868000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2624)) ((2624 . 2625)) (25966 62114 198990 129000) 0 nil])
([nil nil ((2624 . 2625)) ((#("j" 0 1 (fontified t)) . 2624)) (25966 62115 3408 1000) 0 nil])
([nil nil ((2630 . 2632)) nil (25966 62121 266303 635000) 0 nil] [nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face))) . 7713)) ((7713 . 7714)) (25966 62112 675489 360000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -2630) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2631) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 2632) nil (25966 62121 266299 708000) 0 nil])
([nil nil ((7713 . 7715) (#("[" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -7713) (7713 . 7714)) ((#("[" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 7713) (7713 . 7714) (#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7713) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2)) (25966 62104 524489 945000) 0 nil])
([nil nil ((2630 . 2632)) nil (25966 62121 266261 9000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7714) (undo-tree-id584 . -1) 7715) ((7714 . 7715)) (25966 62104 374748 231000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2637) (undo-tree-id875 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2638) (undo-tree-id876 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2639) (undo-tree-id877 . -1) 2640 (t 25966 62179 251706 640000)) nil (25966 62134 289192 990000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -7714) (undo-tree-id583 . -1) 7715) ((7714 . 7715)) (25966 62104 219217 482000) 0 nil])
([nil nil ((2637 . 2639)) nil (25966 62134 289186 930000) 0 nil])
([nil nil ((7714 . 7715)) ((#("j" 0 1 (fontified t)) . 7714)) (25966 62104 59897 626000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2642) (undo-tree-id873 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2643) (undo-tree-id874 . -1) 2644) nil (25966 62134 289185 265000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7742) (undo-tree-id582 . -1) 7743) ((7742 . 7743)) (25966 62103 902035 737000) 0 nil])
([nil nil ((2642 . 2645)) nil (25966 62134 289170 881000) 0 nil])
([nil nil ((7742 . 7743)) ((#("i" 0 1 (fontified t)) . 7742)) (25966 62103 736108 166000) 0 nil])
([nil nil ((2646 . 2648)) nil (25966 62134 289169 632000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7770) (undo-tree-id579 . -1) (undo-tree-id581 . -1) 7771) ((7770 . 7771)) (25966 62103 570582 634000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . 2654) (2653 . 2654) (2652 . 2654) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2652) (2648 . 2653)) nil (25966 62134 289166 503000) 0 nil])
([nil nil ((7770 . 7771)) ((#("o" 0 1 (fontified t)) . 7770) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1)) (25966 62103 396945 74000) 0 nil])
([nil nil ((2653 . 2662)) nil (25966 62134 289160 357000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -7770) (undo-tree-id569 . -1) (undo-tree-id571 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id576 . -1) (undo-tree-id578 . -1) 7771) ((7770 . 7771)) (25966 62103 237959 836000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2637) (undo-tree-id913 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2638) (undo-tree-id914 . -1) 2639 (t 25966 62192 275707 54000)) nil (25966 62145 474233 529000) 0 nil])
([nil nil ((7770 . 7771)) ((#("i" 0 1 (fontified t)) . 7770)) (25966 62103 72993 300000) 0 nil])
([nil nil ((2637 . 2640)) nil (25966 62145 474230 108000) 0 nil])
([nil nil ((7722 . 7723) (7721 . 7723) (#("{" 0 1 (fontified nil)) . -7721) (7720 . 7722) (t 25966 62048 895702 492000)) ((#(" {" 0 1 (fontified nil) 1 2 (fontified nil)) . 7720) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (7721 . 7722) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 7721) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#(" " 0 1 (fontified t)) . 7722) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1)) (25966 62102 914300 651000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2643) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2643) (#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2643)) nil (25966 62145 474228 757000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7721) (undo-tree-id588 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7722) (#(" " 0 1 (fontified t)) . -7722) (undo-tree-id589 . -1) 7723) ((7722 . 7723) (7721 . 7723)) (25966 62102 749333 255000) 0 nil])
([nil nil ((2643 . 2645)) nil (25966 62145 474227 460000) 0 nil])
([nil nil ((7721 . 7727)) ((#("# post" 0 6 (face tree-sitter-hl-face:comment fontified t)) . 7721)) (25966 62102 598462 246000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2654) (undo-tree-id910 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2655) (undo-tree-id911 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2656) (undo-tree-id912 . -1) 2657) nil (25966 62145 474225 986000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7754) (undo-tree-id587 . -1) 7755) ((7754 . 7755)) (25966 62102 445689 206000) 0 nil])
([nil nil ((2654 . 2656)) nil (25966 62145 474220 532000) 0 nil])
([nil nil ((7756 . 7758) (#("{" 0 1 (fontified nil)) . -7756) (7754 . 7757)) ((#("] {" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 7754) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -2) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (7756 . 7757) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7756) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1)) (25966 62102 284566 554000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2659) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2660) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) 2661) nil (25966 62145 474217 207000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7756) (undo-tree-id586 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7757)) ((7756 . 7758)) (25966 62102 125374 572000) 0 nil])
([nil nil ((2659 . 2662)) nil (25966 62145 474167 922000) 0 nil])
([nil nil ((7756 . 7761)) ((#("# pre" 0 5 (face tree-sitter-hl-face:comment fontified t)) . 7756) (undo-tree-id694 . -5) (undo-tree-id695 . -5) (undo-tree-id696 . -5) (undo-tree-id697 . -5) (undo-tree-id698 . -5) (undo-tree-id699 . -5) (undo-tree-id700 . -5) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -5) (undo-tree-id704 . -5) (undo-tree-id705 . -5) (undo-tree-id706 . -5) (undo-tree-id707 . -5) (undo-tree-id708 . -5) (undo-tree-id709 . -5) (undo-tree-id710 . -5) (undo-tree-id711 . -5) (undo-tree-id712 . -5) (undo-tree-id713 . -5) (undo-tree-id714 . -5) (undo-tree-id715 . -5) (undo-tree-id716 . -5)) (25966 62101 974970 372000) 0 nil])
([nil nil ((2153 . 2161) (t 25966 62203 459707 410000)) nil (25966 62154 826730 56000) 0 nil])
([nil nil ((7761 . 7763) (t 25966 62059 307702 823000)) ((#("si" 0 1 (face tree-sitter-hl-face:comment fontified t) 1 2 (face tree-sitter-hl-face:comment fontified t)) . 7761) (undo-tree-id681 . -1) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2)) (25966 62101 818164 779000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2147) (undo-tree-id915 . -1) (#("e" 0 1 (fontified t)) . -2148) (undo-tree-id916 . -1) (#("e" 0 1 (fontified t)) . -2149) (undo-tree-id917 . -1) (#("d" 0 1 (fontified t)) . -2150) (undo-tree-id918 . -1) 2151 (t 25966 62212 819707 708000)) nil (25966 62159 68849 577000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -7762) (undo-tree-id591 . -1) 7763) ((7762 . 7763)) (25966 62101 659603 256000) 0 nil])
([nil nil ((2147 . 2156)) nil (25966 62159 68828 163000) 0 nil])
([nil nil ((7762 . 7769)) ((#("ynaptic" 0 7 (face tree-sitter-hl-face:comment fontified t)) . 7762)) (25966 62101 501568 84000) 0 nil])
([nil nil ((14532 . 14540) (t 25966 62217 55707 843000)) nil (25966 62203 246913 366000) 0 nil])
([nil nil ((7727 . 7728)) ((#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 7727) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1)) (25966 62101 394586 235000) 0 nil])
([nil nil ((17330 . 17331) (t 25966 62261 243709 249000)) nil (25966 62237 941208 298000) 0 nil])
([nil nil ((7728 . 7729)) ((#("u" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 7728) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1)) (25966 62101 198012 331000) 0 nil])
([nil nil ((#("<" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -17330) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) 17331) nil (25966 62237 941200 525000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -7728) (undo-tree-id590 . -1) 7729) ((7728 . 7729)) (25966 62101 48707 671000) 0 nil])
([nil nil ((17330 . 17334) (t 25966 62295 939710 353000)) nil (25966 62241 882163 122000) 0 nil])
([nil nil ((7728 . 7735)) ((#("ynaptic" 0 7 (face tree-sitter-hl-face:comment fontified t)) . 7728)) (25966 62100 886615 316000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -17330) (undo-tree-id939 . -4) 17334) nil (25966 62241 882156 461000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8833) (undo-tree-id613 . -1) 8834 (t 25966 62069 839703 158000)) ((8833 . 8834)) (25966 62100 835518 897000) 0 nil])
([nil nil ((#("# class Activation(torch.nn.Module):
#     def __init__(self, func_name='erf'):
#         super().__init__()
#         self.func_name = func_name
        
#     def forward(self, x, THRESH=15):
#         if self.func_name == 'erf':
#             return THRESH * 0.5 / (1.0 + torch.erf(x / np.sqrt(2.0)))
#         elif self.func_name == 'relu':
#             return nn.ReLU()(x - THRESH)
#         else:
#             raise ValueError('Invalid function name')
" 0 36 (face tree-sitter-hl-face:comment fontified t) 36 37 (fontified t) 37 79 (face tree-sitter-hl-face:comment fontified t) 79 80 (fontified t) 80 108 (face tree-sitter-hl-face:comment fontified t) 108 109 (fontified t) 109 145 (face tree-sitter-hl-face:comment fontified t) 145 155 (fontified t) 155 193 (face tree-sitter-hl-face:comment fontified t) 193 194 (fontified t) 194 231 (face tree-sitter-hl-face:comment fontified t) 231 232 (fontified t) 232 303 (face tree-sitter-hl-face:comment fontified t) 303 304 (fontified t) 304 344 (face tree-sitter-hl-face:comment fontified t) 344 345 (fontified t) 345 387 (face tree-sitter-hl-face:comment fontified t) 387 388 (fontified t) 388 403 (face tree-sitter-hl-face:comment fontified t) 403 404 (fontified t) 404 459 (face tree-sitter-hl-face:comment fontified t) 459 460 (fontified t)) . -377) (undo-tree-id967 . -460) (undo-tree-id968 . -460) (undo-tree-id969 . -460) (undo-tree-id970 . -404) (undo-tree-id971 . -460) (undo-tree-id972 . -460) (undo-tree-id973 . -460) (undo-tree-id974 . -460) (undo-tree-id975 . -460) (undo-tree-id976 . -460) (undo-tree-id977 . -460) (undo-tree-id978 . -460) (undo-tree-id979 . -460) (undo-tree-id980 . -460) (undo-tree-id981 . -460) 837 (t 25966 62299 875710 478000)) nil (25966 62256 236203 766000) 0 nil])
([nil nil ((8833 . 8834)) ((#("j" 0 1 (fontified t)) . 8833)) (25966 62100 584639 788000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -376) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) 377) nil (25966 62256 236175 30000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 8840)) ((8840 . 8841)) (25966 62100 429684 53000) 0 nil])
([nil nil ((2217 . 2233) (#("                " 0 5 (fontified nil) 5 6 (fontified nil) 6 16 (fontified nil)) . 2216) (undo-tree-id993 . -16) (2232 . 2233) (t 25966 62314 231710 935000)) nil (25966 62416 60314 106000) 0 nil])
([nil nil ((8840 . 8841)) ((#("i" 0 1 (fontified t)) . 8840)) (25966 62100 275857 874000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2240) (2239 . 2240) (2238 . 2240) (#("(" 0 1 (fontified nil)) . -2238) (2233 . 2239)) nil (25966 62416 60309 705000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9002) (undo-tree-id593 . -1) (undo-tree-id595 . -1) (undo-tree-id597 . -1) (undo-tree-id599 . -1) (undo-tree-id601 . -1) (undo-tree-id603 . -1) (undo-tree-id605 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id610 . -1) (undo-tree-id612 . -1) 9003) ((9002 . 9003)) (25966 62100 113631 57000) 0 nil])
([nil nil ((2239 . 2245)) nil (25966 62416 60307 192000) 0 nil])
([nil nil ((9002 . 9003)) ((#("i" 0 1 (fontified t)) . 9002)) (25966 62099 971580 458000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:property fontified t)) . -2244) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) 2245) nil (25966 62416 60303 563000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9198) (undo-tree-id619 . -1) 9199 (t 25966 62084 555703 626000)) ((9198 . 9199)) (25966 62099 836216 773000) 0 nil])
([nil nil ((2244 . 2247)) nil (25966 62416 60251 911000) 0 nil])
([nil nil ((9198 . 9199)) ((#("j" 0 1 (fontified t)) . 9198)) (25966 62099 672700 85000) 0 nil])
([nil nil ((2248 . 2265) (t 25966 62474 75716 22000)) nil (25966 62418 25482 464000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9205) (undo-tree-id618 . -1) 9206) ((9205 . 9206)) (25966 62099 530833 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2215 . 2216) (nil fontified nil 2215 . 2216) (nil fontified nil 2204 . 2215) (nil fontified nil 2192 . 2204) (nil fontified nil 2188 . 2192) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2177 . 2181) (nil fontified nil 2176 . 2177) (nil fontified nil 2170 . 2176) (nil fontified nil 2169 . 2170) (nil fontified nil 2168 . 2169) (nil fontified nil 2157 . 2168) (nil fontified nil 2156 . 2157) (nil fontified nil 2152 . 2156) (nil fontified nil 2151 . 2152) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2147 . 2149) (nil fontified nil 2131 . 2147) (2131 . 2216) (t 25966 62476 39716 84000)) nil (25966 62515 923780 458000) 0 nil])
([nil nil ((9205 . 9206)) ((#("i" 0 1 (fontified t)) . 9205)) (25966 62099 393291 90000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2182) (undo-tree-id994 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2183) (undo-tree-id995 . -1) 2184) nil (25966 62515 923762 985000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9682) (undo-tree-id617 . -1) 9683) ((9682 . 9683)) (25966 62099 229924 59000) 0 nil])
([nil nil ((2230 . 2232) (t 25966 62574 15719 202000)) nil (25966 62523 613208 705000) 0 nil])
([nil nil ((9682 . 9683)) ((#("j" 0 1 (fontified t)) . 9682)) (25966 62099 189297 438000) 0 nil])
([nil nil ((2301 . 2317) (t 25966 62581 743719 448000)) nil (25966 62526 739887 228000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9689) (undo-tree-id616 . -1) 9690) ((9689 . 9690)) (25966 62098 938480 204000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2300) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) 2301) nil (25966 62526 739878 765000) 0 nil])
([nil nil ((9689 . 9690)) ((#("i" 0 1 (fontified t)) . 9689)) (25966 62098 797447 117000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2169) (undo-tree-id1000 . -1) 2170 (t 25966 62584 867719 547000)) nil (25966 62562 51735 66000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9751) (undo-tree-id615 . -1) 9752) ((9751 . 9752)) (25966 62098 655553 226000) 0 nil])
([nil nil ((2169 . 2170)) nil (25966 62562 51719 667000) 0 nil])
([nil nil ((9751 . 9752)) ((#("j" 0 1 (fontified t)) . 9751)) (25966 62098 528480 807000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2176)) nil (25966 62562 51716 491000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9758) (undo-tree-id614 . -1) 9759) ((9758 . 9759)) (25966 62098 363515 269000) 0 nil])
([nil nil ((2176 . 2177)) nil (25966 62562 51710 148000) 0 nil])
([nil nil ((9758 . 9759)) ((#("i" 0 1 (fontified t)) . 9758)) (25966 62098 243123 580000) 0 nil])
([nil nil ((#("                # W0 = self.initWeights(i_pop, j_pop).T # (post, pre).T -> (pre, post)                
" 0 16 (fontified t) 16 18 (face tree-sitter-hl-face:comment fontified t) 18 20 (face tree-sitter-hl-face:comment fontified t) 20 21 (face tree-sitter-hl-face:comment fontified t) 21 22 (face tree-sitter-hl-face:comment fontified t) 22 23 (face tree-sitter-hl-face:comment fontified t) 23 27 (face tree-sitter-hl-face:comment fontified t) 27 28 (face tree-sitter-hl-face:comment fontified t) 28 39 (face tree-sitter-hl-face:comment fontified t) 39 40 (face tree-sitter-hl-face:comment fontified t) 40 41 (face tree-sitter-hl-face:comment fontified t) 41 47 (face tree-sitter-hl-face:comment fontified t) 47 48 (face tree-sitter-hl-face:comment fontified t) 48 52 (face tree-sitter-hl-face:comment fontified t) 52 53 (face tree-sitter-hl-face:comment fontified t) 53 54 (face tree-sitter-hl-face:comment fontified t) 54 55 (face tree-sitter-hl-face:comment fontified t) 55 56 (face tree-sitter-hl-face:comment fontified t) 56 57 (face tree-sitter-hl-face:comment fontified t) 57 58 (face tree-sitter-hl-face:comment fontified t) 58 59 (face tree-sitter-hl-face:comment fontified t) 59 63 (face tree-sitter-hl-face:comment fontified t) 63 75 (face tree-sitter-hl-face:comment fontified t) 75 86 (face tree-sitter-hl-face:comment fontified t) 86 102 (face tree-sitter-hl-face:comment fontified t) 102 103 (fontified t)) . -2214) (undo-tree-id1018 . -42) (undo-tree-id1019 . -103) 2317 (t 25966 62620 47720 667000)) nil (25966 62611 761523 63000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9840) (undo-tree-id620 . -1) 9841 (t 25966 62105 143704 282000)) ((9840 . 9841)) (25966 62098 79610 742000) 0 nil])
([nil nil ((#("(" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2185) (undo-tree-id1001 . -1) (#("p" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2186) (undo-tree-id1002 . -1) (#("o" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2187) (undo-tree-id1003 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2188) (undo-tree-id1004 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2189) (undo-tree-id1005 . -1) (#("," 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2190) (undo-tree-id1006 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2191) (undo-tree-id1007 . -1) (#("p" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2192) (undo-tree-id1008 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2193) (undo-tree-id1009 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2194) (undo-tree-id1010 . -1) (#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2195) (undo-tree-id1011 . -1) (#("." 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2196) (undo-tree-id1012 . -1) (#("T" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2197) (undo-tree-id1013 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2198) (undo-tree-id1014 . -1) (#("-" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2199) (undo-tree-id1015 . -1) (#(">" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2200) (undo-tree-id1016 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2201) (undo-tree-id1017 . -1) 2202) nil (25966 62611 761474 639000) 0 nil])
([nil nil ((9840 . 9841)) ((#("j" 0 1 (fontified t)) . 9840)) (25966 62097 946094 769000) 0 nil])
([nil nil ((#("                print(W0.shape)
" 0 16 (fontified t) 16 21 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 24 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 24 25 (fontified t) 25 30 (face tree-sitter-hl-face:property fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t)) . -2197) (undo-tree-id1020 . -31) (undo-tree-id1021 . -31) (undo-tree-id1022 . -31) (undo-tree-id1023 . -31) (undo-tree-id1024 . -31) (undo-tree-id1025 . -31) (undo-tree-id1026 . -31) (undo-tree-id1027 . -32) 2229 (t 25966 62669 923722 254000)) nil (25966 62615 305658 681000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 9847)) ((9847 . 9848)) (25966 62097 791211 543000) 0 nil])
([nil nil ((1232 . 1234) (t 25966 62673 507722 368000)) nil (25966 64613 810251 486000) 0 nil])
([nil nil ((9847 . 9848)) ((#("i" 0 1 (fontified t)) . 9847)) (25966 62097 637939 891000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -1262) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -1263) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 1264) nil (25966 64613 810244 12000) 0 nil])
([nil nil ((9891 . 9903) (t 25966 62110 243704 444000)) ((#("            " 0 8 (fontified t) 8 12 (fontified t)) . 9891) (undo-tree-id627 . -12) (undo-tree-id628 . -12) (undo-tree-id629 . -12) (undo-tree-id630 . -12) (undo-tree-id631 . -12) (undo-tree-id632 . -12) (undo-tree-id633 . -12) (undo-tree-id634 . -12) (undo-tree-id635 . -12) (undo-tree-id636 . -12) (undo-tree-id637 . -12)) (25966 62097 478200 769000) 0 nil])
([nil nil ((#("            # self.Wab[0, 0].bias.data = self.Ja0[i] + self.ksi[0] * torch.sqrt(self.Ka[0]) * self.M0
" 0 12 (fontified t) 12 101 (face tree-sitter-hl-face:comment fontified t) 101 102 (fontified t)) . -15323) (undo-tree-id1044 . -102) 15425 (t 25966 64671 851785 960000)) nil (25966 64648 328597 368000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9899) (undo-tree-id622 . -4) 9903) ((9899 . 9903)) (25966 62097 362935 616000) 0 nil])
([nil nil ((apply -16 15323 16010 undo--wrap-and-run-primitive-undo 15323 16010 ((15866 . 15868) (15831 . 15833) (15704 . 15706) (15670 . 15672) (15530 . 15532) (15495 . 15497) (15368 . 15370) (15335 . 15337) 15965))) nil (25966 64648 328582 724000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10311) (undo-tree-id621 . -1) 10312) ((10311 . 10312)) (25966 62097 362567 23000) 0 nil])
([nil nil ((apply 4 16010 16120 undo--wrap-and-run-primitive-undo 16010 16120 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16062) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16022) 16124))) nil (25966 64648 328580 981000) 0 nil])
([nil nil ((10311 . 10312)) ((#("j" 0 1 (fontified t)) . 10311)) (25966 62097 264704 107000) 0 nil])
([nil nil ((16050 . 16066) (#("            " 0 12 (fontified t)) . 16050)) nil (25966 64648 328575 850000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10318)) ((10318 . 10319)) (25966 62097 233641 971000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16074) (undo-tree-id1048 . -1) (#("i" 0 1 (fontified t)) . -16075) (undo-tree-id1049 . -1) (#("," 0 1 (fontified t)) . -16076) (undo-tree-id1050 . -1) (#(" " 0 1 (fontified t)) . -16077) (undo-tree-id1051 . -1) (#("i" 0 1 (fontified t)) . -16078) (undo-tree-id1052 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16079) (undo-tree-id1053 . -1) (#("." 0 1 (fontified t)) . -16080) (undo-tree-id1054 . -1) 16081 (t 25966 64706 363787 58000)) nil (25966 64680 629451 169000) 0 nil])
([nil nil ((10318 . 10319)) ((#("i" 0 1 (fontified t)) . 10318)) (25966 62097 203507 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16113 . 16114) (nil fontified nil 16113 . 16114) (nil fontified nil 16112 . 16113) (nil fontified nil 16111 . 16112) (nil fontified nil 16110 . 16111) (nil fontified nil 16104 . 16110) (nil fontified nil 16103 . 16104) (nil fontified nil 16099 . 16103) (nil fontified nil 16098 . 16099) (nil fontified nil 16097 . 16098) (nil fontified nil 16096 . 16097) (nil fontified nil 16095 . 16096) (nil fontified nil 16089 . 16095) (nil fontified nil 16088 . 16089) (nil fontified nil 16084 . 16088) (nil fontified nil 16083 . 16084) (16083 . 16114)) nil (25966 64680 629441 184000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -10071) (undo-tree-id624 . -1) 10072 (t 25966 62119 819704 749000)) ((10071 . 10072)) (25966 62097 173108 570000) 0 nil])
([nil nil ((#("            for i in range(self.N_POP):
" 0 12 (fontified t) 12 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (fontified t) 16 17 (face tree-sitter-hl-face:variable fontified t) 17 18 (fontified t) 18 20 (face tree-sitter-hl-face:operator fontified t) 20 21 (fontified t) 21 26 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 37 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (fontified t)) . 16010) (undo-tree-id1047 . -40)) nil (25966 64680 629436 921000) 0 nil])
([nil nil ((10071 . 10072)) ((#("i" 0 1 (fontified t)) . 10071)) (25966 62097 143461 553000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16022) 16010) nil (25966 64680 629434 501000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10064) (undo-tree-id623 . -1) 10065) ((10064 . 10065)) (25966 62097 113498 66000) 0 nil])
([nil nil ((16030 . 16031)) nil (25966 64680 629433 479000) 0 nil])
([nil nil ((10064 . 10065)) ((#("j" 0 1 (fontified t)) . 10064)) (25966 62097 83969 346000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16083) (undo-tree-id1046 . -1) 16084) nil (25966 64680 629432 489000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10382) (undo-tree-id626 . -1) 10383 (t 25966 62125 307704 923000)) ((10382 . 10383)) (25966 62097 53463 742000) 0 nil])
([nil nil ((16083 . 16084)) nil (25966 64680 629429 322000) 0 nil])
([nil nil ((10382 . 10383)) ((#("j" 0 1 (fontified t)) . 10382)) (25966 62097 24342 508000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16102) (undo-tree-id1045 . -1) 16103) nil (25966 64680 629427 120000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10389)) ((10389 . 10390)) (25966 62096 535334 237000) 0 nil])
([nil nil ((16102 . 16103)) nil (25966 64680 629409 707000) 0 nil])
([nil nil ((10389 . 10390)) ((#("i" 0 1 (fontified t)) . 10389)) (25966 62096 373245 861000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16117) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) 16121 (t 25966 64738 667788 86000)) nil (25966 64682 433357 557000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10502)) ((10502 . 10503)) (25966 62096 247536 696000) 0 nil])
([nil nil ((#("            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
" 0 12 (fontified t) 12 16 (face tree-sitter-hl-face:keyword fontified t) 16 17 (fontified t) 17 20 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 20 21 (fontified t) 21 25 (face tree-sitter-hl-face:property fontified t) 25 26 (fontified t) 26 30 (face tree-sitter-hl-face:property fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (face tree-sitter-hl-face:keyword fontified t) 35 36 (fontified t) 36 42 (face tree-sitter-hl-face:property fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face tree-sitter-hl-face:number fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 46 (fontified t) 46 50 (face tree-sitter-hl-face:keyword fontified t) 50 51 (fontified t) 51 57 (face tree-sitter-hl-face:property fontified t) 57 58 (face (rainbow-delimiters-depth-2-face) fontified t) 58 59 (face tree-sitter-hl-face:number fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 61 62 (fontified t) 62 63 (face tree-sitter-hl-face:operator fontified t) 63 64 (fontified t) 64 68 (face tree-sitter-hl-face:keyword fontified t) 68 69 (fontified t) 69 72 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 72 73 (face (rainbow-delimiters-depth-1-face) fontified t) 73 74 (face tree-sitter-hl-face:number fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 76 (fontified t) 76 77 (face tree-sitter-hl-face:operator fontified t) 77 78 (fontified t) 78 82 (face tree-sitter-hl-face:keyword fontified t) 82 83 (fontified t) 83 91 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 91 92 (face (rainbow-delimiters-depth-1-face) fontified t) 92 93 (face tree-sitter-hl-face:number fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t)) . 16010) (undo-tree-id1060 . -30) (undo-tree-id1061 . -95) 16105 (t 25966 64740 475788 144000)) nil (25966 64691 185406 100000) 0 nil])
([nil nil ((10502 . 10503)) ((#("j" 0 1 (fontified t)) . 10502)) (25966 62096 89086 897000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15416 . 15417) (nil fontified nil 15416 . 15417) (nil fontified nil 15415 . 15416) (nil fontified nil 15414 . 15415) (nil fontified nil 15413 . 15414) (nil fontified nil 15405 . 15413) (nil fontified nil 15404 . 15405) (nil fontified nil 15400 . 15404) (nil fontified nil 15399 . 15400) (nil fontified nil 15398 . 15399) (nil fontified nil 15397 . 15398) (nil fontified nil 15396 . 15397) (nil fontified nil 15395 . 15396) (nil fontified nil 15394 . 15395) (nil fontified nil 15391 . 15394) (nil fontified nil 15390 . 15391) (nil fontified nil 15386 . 15390) (nil fontified nil 15385 . 15386) (nil fontified nil 15384 . 15385) (nil fontified nil 15383 . 15384) (nil fontified nil 15382 . 15383) (nil fontified nil 15381 . 15382) (nil fontified nil 15380 . 15381) (nil fontified nil 15379 . 15380) (nil fontified nil 15373 . 15379) (nil fontified nil 15372 . 15373) (nil fontified nil 15368 . 15372) (nil fontified nil 15367 . 15368) (nil fontified nil 15366 . 15367) (nil fontified nil 15365 . 15366) (nil fontified nil 15364 . 15365) (nil fontified nil 15358 . 15364) (nil fontified nil 15357 . 15358) (nil fontified nil 15353 . 15357) (nil fontified nil 15352 . 15353) (nil fontified nil 15348 . 15352) (nil fontified nil 15347 . 15348) (nil fontified nil 15343 . 15347) (nil fontified nil 15342 . 15343) (nil fontified nil 15339 . 15342) (nil fontified nil 15338 . 15339) (nil fontified nil 15334 . 15338) (nil fontified nil 15322 . 15334) (15322 . 15417)) nil (25966 64691 185380 6000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10509)) ((10509 . 10510)) (25966 62095 940485 182000) 0 nil])
([nil nil ((15321 . 15338)) nil (25966 64691 185361 40000) 0 nil])
([nil nil ((10509 . 10510)) ((#("i" 0 1 (fontified t)) . 10509)) (25966 62095 812837 605000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15334) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) 15338 (t 25966 64749 231788 422000)) nil (25966 64692 608857 65000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10583) (undo-tree-id625 . -1) 10584) ((10583 . 10584)) (25966 62095 655525 987000) 0 nil])
([nil nil ((16733 . 16735) (t 25966 64750 643788 467000)) nil (25966 64749 255927 535000) 0 nil])
([nil nil ((10583 . 10584)) ((#("j" 0 1 (fontified t)) . 10583)) (25966 62095 501321 936000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -16733) (undo-tree-id1068 . -1) (#("p" 0 1 (fontified t)) . -16734) (undo-tree-id1069 . -1) 16735) nil (25966 64749 255926 135000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10590)) ((10590 . 10591)) (25966 62095 365823 196000) 0 nil])
([nil nil ((16740 . 16742) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -16740) (16733 . 16741)) nil (25966 64749 255921 777000) 0 nil])
([nil nil ((10590 . 10591)) ((#("i" 0 1 (fontified t)) . 10590) (t 25966 62143 455705 501000)) (25966 62085 469777 470000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16741) (undo-tree-id1067 . -1) 16742) nil (25966 64749 255919 354000) 0 nil])
nil
([nil nil ((16751 . 16752)) nil (25966 64749 255900 574000) 0 nil])
([nil nil ((5328 . 5352) (#("                " 0 16 (fontified t)) . 5328) (undo-tree-id1071 . -16) 5344 (t 25966 64807 295790 270000)) nil (25967 260 474207 687000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5348) (undo-tree-id1070 . -4) 5352) nil (25967 260 474196 417000) 0 nil])
([nil nil ((5495 . 5503) (t 25967 318 539823 596000)) nil (25967 264 131477 887000) 0 nil])
([nil nil ((5057 . 5066) (t 25967 322 187823 712000)) nil (25967 272 358315 458000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -5065) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) 5066) nil (25967 272 358311 505000) 0 nil])
([nil nil ((5065 . 5066)) nil (25967 272 358279 296000) 0 nil])
([nil nil ((5194 . 5196) (t 25967 330 419823 974000)) nil (25967 293 577880 240000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -5194) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -5195) (undo-tree-id1087 . -1) 5196 (t 25967 351 639824 649000)) nil (25967 296 22319 47000) 0 nil])
([nil nil ((5057 . 5058) (t 25967 354 83824 727000)) nil (25967 312 829974 815000) 0 nil])
([nil nil ((5059 . 5065)) nil (25967 312 829967 183000) 0 nil])
([nil nil ((5334 . 5344) (t 25967 370 899825 262000)) nil (25967 324 452482 518000) 0 nil])
([nil nil ((5344 . 5351)) nil (25967 324 452481 226000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -5349) (undo-tree-id1088 . -1) (#("Y" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -5350) (undo-tree-id1089 . -1) 5351) nil (25967 324 452478 701000) 0 nil])
([nil nil ((5349 . 5350)) nil (25967 324 452461 378000) 0 nil])
([nil nil ((5360 . 5384) (#("                    " 0 20 (fontified t)) . 5360) (undo-tree-id1090 . -20) 5380 (t 25967 382 515825 631000)) nil (25967 325 908330 634000) 0 nil])
([nil nil ((5201 . 5203) (t 25967 383 967825 678000)) nil (25967 389 111172 968000) 0 nil])
([nil nil ((5187 . 5188)) nil (25967 389 111165 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15447) (undo-tree-id13 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -15448) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t)) . -15449) (undo-tree-id15 . -1) 15450 (t 25967 447 179827 689000)) nil (25967 4585 776898 210000) 0 nil])
([nil nil ((15447 . 15453)) nil (25967 4585 776890 20000) 0 nil])
([nil nil ((#("ç" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15452) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 15453) nil (25967 4585 776887 390000) 0 nil])
([nil nil ((15453 . 15455) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15453) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (15452 . 15454)) nil (25967 4585 776866 587000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 15454)) nil (25967 4585 776830 249000) 0 nil])
([nil nil ((15484 . 15485)) nil (25967 4585 776823 874000) 0 nil])
([nil nil ((15386 . 15402) (#("            " 0 12 (fontified t)) . 15386) (undo-tree-id30 . -12) (t 25967 4585 915959 393000)) nil (25967 4621 458330 60000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15398) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) 15402) nil (25967 4621 458320 585000) 0 nil])
([nil nil ((16785 . 16803) (t 25967 4621 599960 528000)) nil (25967 4640 389501 1000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16801) (undo-tree-id64 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16802) (undo-tree-id65 . -1) 16803) nil (25967 4640 389498 96000) 0 nil])
([nil nil ((16801 . 16805)) nil (25967 4640 389492 395000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16803) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16804) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 16805) nil (25967 4640 389486 208000) 0 nil])
([nil nil ((16803 . 16805)) nil (25967 4640 389413 104000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -16785) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(" " 0 1 (fontified t)) . -16786) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("d" 0 1 (fontified nil)) . -16787) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("e" 0 1 (fontified nil)) . -16788) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("v" 0 1 (fontified nil)) . -16789) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("i" 0 1 (fontified nil)) . -16790) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("c" 0 1 (fontified t)) . -16791) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t)) . -16792) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16793) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("s" 0 1 (fontified t)) . -16794) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t)) . -16795) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("l" 0 1 (fontified t)) . -16796) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -16797) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("." 0 1 (fontified t)) . -16798) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16799) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16800) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16801) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16802) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16803) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16804) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) 16805 (t 25967 4640 531961 131000)) nil (25967 4646 476623 454000) 0 nil])
([nil nil ((15486 . 15498) (t 25967 4646 619961 325000)) nil (25967 4745 597656 699000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15484) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) 15485 (t 25967 4747 207964 526000)) nil (25967 4775 42522 141000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -15465) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id355 . -1) (undo-tree-id357 . -1) (undo-tree-id359 . -1) (undo-tree-id361 . -1) (undo-tree-id363 . -1) (undo-tree-id365 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id371 . -1) (undo-tree-id373 . -1) (undo-tree-id375 . -1) (undo-tree-id377 . -1) (undo-tree-id379 . -1) (undo-tree-id381 . -1) (undo-tree-id383 . -1) (undo-tree-id385 . -1) (undo-tree-id387 . -1) (undo-tree-id389 . -1) (undo-tree-id391 . -1) (undo-tree-id393 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (undo-tree-id399 . -1) (undo-tree-id401 . -1) (undo-tree-id403 . -1) (undo-tree-id405 . -1) (undo-tree-id407 . -1) (undo-tree-id409 . -1) (undo-tree-id411 . -1) (undo-tree-id413 . -1) (undo-tree-id415 . -1) (undo-tree-id417 . -1) (undo-tree-id419 . -1) (undo-tree-id421 . -1) (undo-tree-id423 . -1) (undo-tree-id425 . -1) (undo-tree-id427 . -1) (undo-tree-id429 . -1) (undo-tree-id431 . -1) (undo-tree-id433 . -1) (undo-tree-id435 . -1) (undo-tree-id437 . -1) (undo-tree-id439 . -1) (undo-tree-id441 . -1) (undo-tree-id443 . -1) (undo-tree-id445 . -1) (undo-tree-id447 . -1) (undo-tree-id449 . -1) (undo-tree-id451 . -1) (undo-tree-id453 . -1) (undo-tree-id455 . -1) (undo-tree-id457 . -1) (undo-tree-id459 . -1) (undo-tree-id461 . -1) (undo-tree-id463 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -15466) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id470 . -1) (undo-tree-id472 . -1) (undo-tree-id474 . -1) (undo-tree-id476 . -1) (undo-tree-id478 . -1) (undo-tree-id480 . -1) (undo-tree-id482 . -1) (undo-tree-id484 . -1) (undo-tree-id486 . -1) (undo-tree-id488 . -1) (undo-tree-id490 . -1) (undo-tree-id492 . -1) (undo-tree-id494 . -1) (undo-tree-id496 . -1) (undo-tree-id498 . -1) (undo-tree-id500 . -1) (undo-tree-id502 . -1) (undo-tree-id504 . -1) (undo-tree-id506 . -1) (undo-tree-id508 . -1) (undo-tree-id510 . -1) (undo-tree-id512 . -1) (undo-tree-id514 . -1) (undo-tree-id516 . -1) (undo-tree-id518 . -1) (undo-tree-id520 . -1) (undo-tree-id522 . -1) (undo-tree-id524 . -1) (undo-tree-id526 . -1) (undo-tree-id528 . -1) (undo-tree-id530 . -1) (undo-tree-id532 . -1) (undo-tree-id534 . -1) (undo-tree-id536 . -1) (undo-tree-id538 . -1) (undo-tree-id540 . -1) (undo-tree-id542 . -1) (undo-tree-id544 . -1) (undo-tree-id546 . -1) (undo-tree-id548 . -1) (undo-tree-id550 . -1) (undo-tree-id552 . -1) (undo-tree-id554 . -1) (undo-tree-id556 . -1) (undo-tree-id558 . -1) (undo-tree-id560 . -1) (undo-tree-id562 . -1) (undo-tree-id564 . -1) (undo-tree-id566 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -15467) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id575 . -1) (undo-tree-id577 . -1) (undo-tree-id579 . -1) (undo-tree-id581 . -1) (undo-tree-id583 . -1) (undo-tree-id585 . -1) (undo-tree-id587 . -1) (undo-tree-id589 . -1) (undo-tree-id591 . -1) (undo-tree-id593 . -1) (undo-tree-id595 . -1) (undo-tree-id597 . -1) (undo-tree-id599 . -1) (undo-tree-id601 . -1) (undo-tree-id603 . -1) (undo-tree-id605 . -1) (undo-tree-id607 . -1) (undo-tree-id609 . -1) (undo-tree-id611 . -1) (undo-tree-id613 . -1) (undo-tree-id615 . -1) (undo-tree-id617 . -1) (undo-tree-id619 . -1) (undo-tree-id621 . -1) (undo-tree-id623 . -1) (undo-tree-id625 . -1) (undo-tree-id627 . -1) (undo-tree-id629 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -1) (undo-tree-id635 . -1) (undo-tree-id637 . -1) (undo-tree-id639 . -1) (undo-tree-id641 . -1) (undo-tree-id643 . -1) (undo-tree-id645 . -1) (undo-tree-id647 . -1) (undo-tree-id649 . -1) (undo-tree-id651 . -1) (undo-tree-id653 . -1) (undo-tree-id655 . -1) (undo-tree-id657 . -1) (undo-tree-id659 . -1) (undo-tree-id661 . -1) (undo-tree-id663 . -1) (#("s" 0 1 (fontified t)) . -15468) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id670 . -1) (undo-tree-id672 . -1) (undo-tree-id674 . -1) (undo-tree-id676 . -1) (undo-tree-id678 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id688 . -1) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (undo-tree-id700 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) (undo-tree-id732 . -1) (undo-tree-id734 . -1) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (#("e" 0 1 (fontified t)) . -15469) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id755 . -1) (undo-tree-id757 . -1) (undo-tree-id759 . -1) (undo-tree-id761 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (undo-tree-id767 . -1) (undo-tree-id769 . -1) (undo-tree-id771 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) (undo-tree-id783 . -1) (undo-tree-id785 . -1) (undo-tree-id787 . -1) (undo-tree-id789 . -1) (undo-tree-id791 . -1) (undo-tree-id793 . -1) (undo-tree-id795 . -1) (undo-tree-id797 . -1) (undo-tree-id799 . -1) (undo-tree-id801 . -1) (undo-tree-id803 . -1) (undo-tree-id805 . -1) (undo-tree-id807 . -1) (undo-tree-id809 . -1) (undo-tree-id811 . -1) (undo-tree-id813 . -1) (undo-tree-id815 . -1) (undo-tree-id817 . -1) (undo-tree-id819 . -1) (undo-tree-id821 . -1) (undo-tree-id823 . -1) (#("l" 0 1 (fontified t)) . -15470) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id830 . -1) (undo-tree-id832 . -1) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (undo-tree-id854 . -1) (undo-tree-id856 . -1) (undo-tree-id858 . -1) (undo-tree-id860 . -1) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -15471) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id895 . -1) (undo-tree-id897 . -1) (undo-tree-id899 . -1) (undo-tree-id901 . -1) (undo-tree-id903 . -1) (undo-tree-id905 . -1) (undo-tree-id907 . -1) (undo-tree-id909 . -1) (undo-tree-id911 . -1) (undo-tree-id913 . -1) (undo-tree-id915 . -1) (undo-tree-id917 . -1) (undo-tree-id919 . -1) (undo-tree-id921 . -1) (undo-tree-id923 . -1) (undo-tree-id925 . -1) (undo-tree-id927 . -1) (undo-tree-id929 . -1) (undo-tree-id931 . -1) (undo-tree-id933 . -1) (undo-tree-id935 . -1) (undo-tree-id937 . -1) (undo-tree-id939 . -1) (undo-tree-id941 . -1) (undo-tree-id943 . -1) (#("." 0 1 (fontified t)) . -15472) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id982 . -1) (undo-tree-id984 . -1) (undo-tree-id986 . -1) (undo-tree-id988 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15473) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1023 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15474) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15475) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1055 . -1) (undo-tree-id1057 . -1) (undo-tree-id1059 . -1) (undo-tree-id1061 . -1) (undo-tree-id1063 . -1) (undo-tree-id1065 . -1) (undo-tree-id1067 . -1) (undo-tree-id1069 . -1) (undo-tree-id1071 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15476) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) (undo-tree-id1084 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (undo-tree-id1090 . -1) (undo-tree-id1092 . -1) (#("F" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15477) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1099 . -1) (undo-tree-id1101 . -1) (undo-tree-id1103 . -1) (undo-tree-id1105 . -1) (undo-tree-id1107 . -1) (undo-tree-id1109 . -1) (undo-tree-id1111 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15478) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1118 . -1) (undo-tree-id1120 . -1) (undo-tree-id1122 . -1) (undo-tree-id1124 . -1) (undo-tree-id1126 . -1) (undo-tree-id1128 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15479) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15480) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -15481) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 15482) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -15482) (undo-tree-id1152 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15483) (undo-tree-id1153 . -1) 15484 (t 25967 4649 703961 423000)) ((15482 . 15484) (15465 . 15483)) (25967 4745 164628 871000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15448) (undo-tree-id1182 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15449) (undo-tree-id1183 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15450) (undo-tree-id1184 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15451) (undo-tree-id1185 . -1) (#("_" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15452) (undo-tree-id1186 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15453) (undo-tree-id1187 . -1) 15454) nil (25967 4775 42493 405000) 0 nil])
([nil nil ((15465 . 15466)) ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 15465) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (t 25967 4732 75964 44000)) (25967 4731 930096 838000) 0 nil])
([nil nil ((15448 . 15450)) nil (25967 4775 42479 52000) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t)) . -15447) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 15448) nil (25967 4775 42475 15000) 0 nil])
([nil nil ((15449 . 15450)) nil (25967 4775 42433 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15447) (undo-tree-id1202 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -15448) (undo-tree-id1203 . -1) (#(" " 0 1 (fontified t)) . -15449) (undo-tree-id1204 . -1) 15450 (t 25967 4775 183965 416000)) nil (25967 4846 239998 259000) 0 nil])
([nil nil ((15453 . 15455) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15453) (15447 . 15454)) nil (25967 4846 239987 710000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15454) (undo-tree-id1201 . -1) 15455) nil (25967 4846 239983 262000) 0 nil])
([nil nil ((15484 . 15485)) nil (25967 4846 239962 461000) 0 nil])
([nil nil ((15484 . 15487) (t 25967 4846 383967 682000)) nil (25967 4850 966837 559000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15484) (undo-tree-id1205 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15485) (undo-tree-id1206 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15486) (undo-tree-id1207 . -1) 15487) nil (25967 4850 966830 428000) 0 nil])
([nil nil ((15484 . 15487) (t 25967 4851 107967 832000)) nil (25967 4873 813357 428000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 15489) (15488 . 15489) (15487 . 15489) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15487) (15487 . 15488) (t 25967 4873 955968 559000)) nil (25967 4887 603474 275000) 0 nil])
([nil nil ((15488 . 15496)) nil (25967 4887 603470 110000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15495) (undo-tree-id1208 . -1) 15496) nil (25967 4887 603466 942000) 0 nil])
([nil nil ((15495 . 15499)) nil (25967 4887 603439 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15480 . 15481) (nil fontified nil 15480 . 15481) (nil fontified nil 15474 . 15480) (nil fontified nil 15473 . 15474) (nil fontified nil 15469 . 15473) (nil fontified nil 15468 . 15469) (nil fontified nil 15466 . 15468) (nil fontified nil 15465 . 15466) (15465 . 15481)) nil (25967 4887 603431 692000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -16833) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("p" 0 1 (fontified t)) . -16834) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) 16835 (t 25967 4887 747968 998000)) nil (25967 4902 372857 22000) 0 nil])
([nil nil ((16833 . 16838)) nil (25967 4902 372804 714000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15500) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15501) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15502) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -15503) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 15504) (#("s" 0 1 (fontified t)) . -15504) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (#("e" 0 1 (fontified t)) . -15505) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (#("l" 0 1 (fontified t)) . -15506) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -15507) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (#("." 0 1 (fontified nil)) . -15508) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15509) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15510) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15511) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15512) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15513) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15514) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15515) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) 15516 (t 25967 4902 459969 466000)) nil (25967 4909 938737 622000) 0 nil])
([nil nil ((15500 . 15501)) nil (25967 4909 938660 733000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15465) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15466) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15467) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15468) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (#("s" 0 1 (fontified t)) . -15469) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -15470) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -15471) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -15472) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (#("." 0 1 (fontified t)) . -15473) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15474) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15475) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15476) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15477) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15478) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15479) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) rear-nonsticky t fontified t)) . -15480) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (#(" " 0 1 (fontified t)) . -15481) (undo-tree-id1615 . -1) 15482) nil (25967 4909 938641 939000) 0 nil])
([nil nil ((15465 . 15466)) nil (25967 4909 938093 868000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15448) (undo-tree-id1702 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15449) (undo-tree-id1703 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15450) (undo-tree-id1704 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15451) (undo-tree-id1705 . -1) (#("_" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15452) (undo-tree-id1706 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15453) (undo-tree-id1707 . -1) 15454 (t 25967 4910 15969 706000)) nil (25967 4923 519764 426000) 0 nil])
([nil nil ((15448 . 15449)) nil (25967 4923 519753 960000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15448) (undo-tree-id1701 . -1) 15449) nil (25967 4923 519752 65000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15447) (undo-tree-id1700 . -1) 15448) nil (25967 4923 519748 596000) 0 nil])
([nil nil ((15447 . 15450)) nil (25967 4923 519745 200000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -15480) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 15481) nil (25967 4923 519740 215000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -3018) (undo-tree-id1708 . -16) (undo-tree-id1709 . -16) (undo-tree-id1710 . -16) (undo-tree-id1711 . -16) (undo-tree-id1712 . -16) (undo-tree-id1713 . -16) (undo-tree-id1714 . -16) (undo-tree-id1715 . -16) (undo-tree-id1716 . -16) (undo-tree-id1717 . -16) (undo-tree-id1718 . -16) (undo-tree-id1719 . -16) (undo-tree-id1720 . -16) 3034 (t 25967 4923 599970 139000)) nil (25967 5508 504212 462000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3217) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (#(" " 0 1 (fontified t)) . -3218) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (#(" " 0 1 (fontified t)) . -3219) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (#(" " 0 1 (fontified t)) . -3220) (undo-tree-id1763 . -1) (#(" " 0 1 (fontified t)) . -3221) (undo-tree-id1764 . -1) (#(" " 0 1 (fontified t)) . -3222) (undo-tree-id1765 . -1) (#(" " 0 1 (fontified t)) . -3223) (undo-tree-id1766 . -1) (#(" " 0 1 (fontified t)) . -3224) (undo-tree-id1767 . -1) (#(" " 0 1 (fontified t)) . -3225) (undo-tree-id1768 . -1) (#(" " 0 1 (fontified t)) . -3226) (undo-tree-id1769 . -1) (#(" " 0 1 (fontified t)) . -3227) (undo-tree-id1770 . -1) (#(" " 0 1 (fontified t)) . -3228) (undo-tree-id1771 . -1) (#(" " 0 1 (fontified t)) . -3229) (undo-tree-id1772 . -1) (#(" " 0 1 (fontified t)) . -3230) (undo-tree-id1773 . -1) (#(" " 0 1 (fontified t)) . -3231) (undo-tree-id1774 . -1) (#(" " 0 1 (fontified t)) . -3232) (undo-tree-id1775 . -1) 3233 (t 25967 5508 583988 754000)) nil (25967 10480 402646 716000) 0 nil])
([nil nil ((2612 . 2616) 2604 (t 25967 10480 504146 972000)) nil (25967 10703 501388 613000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2612) (undo-tree-id1776 . -4) (undo-tree-id1777 . -4) (undo-tree-id1778 . -4) (undo-tree-id1779 . -4) (undo-tree-id1780 . -4) (undo-tree-id1781 . -4) (undo-tree-id1782 . -4) (undo-tree-id1783 . -4) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) 2616) nil (25967 10703 501382 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2829 . 2830) (nil fontified nil 2829 . 2830) (nil fontified nil 2815 . 2829) (nil fontified nil 2813 . 2815) (nil fontified nil 2812 . 2813) (nil fontified nil 2804 . 2812) (nil fontified nil 2803 . 2804) (nil fontified nil 2788 . 2803) (nil fontified nil 2787 . 2788) (nil fontified nil 2783 . 2787) (nil fontified nil 2768 . 2783) (nil fontified nil 2767 . 2768) (nil fontified nil 2759 . 2767) (nil fontified nil 2758 . 2759) (nil fontified nil 2747 . 2758) (nil fontified nil 2746 . 2747) (nil fontified nil 2742 . 2746) (nil fontified nil 2726 . 2742) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (nil fontified nil 2712 . 2724) (nil fontified nil 2711 . 2712) (nil fontified nil 2707 . 2711) (nil fontified nil 2700 . 2707) (nil fontified nil 2698 . 2700) (nil fontified nil 2688 . 2698) (nil fontified nil 2687 . 2688) (nil fontified nil 2679 . 2687) (nil fontified nil 2678 . 2679) (nil fontified nil 2667 . 2678) (nil fontified nil 2656 . 2667) (nil fontified nil 2655 . 2656) (nil fontified nil 2654 . 2655) (nil fontified nil 2653 . 2654) (nil fontified nil 2649 . 2653) (nil fontified nil 2644 . 2649) (nil fontified nil 2643 . 2644) (nil fontified nil 2640 . 2643) (nil fontified nil 2639 . 2640) (nil fontified nil 2638 . 2639) (nil fontified nil 2637 . 2638) (nil fontified nil 2629 . 2637) (nil fontified nil 2625 . 2629) (2625 . 2830) (t 25967 10703 580154 70000)) nil (25967 11001 643570 210000) 0 nil])
([nil nil ((2625 . 2633) (#("    " 0 4 (fontified t)) . 2625)) nil (25967 11001 643558 872000) 0 nil])
([nil nil ((2661 . 2669) (#("    " 0 4 (fontified t)) . 2661) (undo-tree-id1791 . -4)) nil (25967 11001 643557 265000) 0 nil])
([nil nil ((2702 . 2710) (#("    " 0 4 (fontified t)) . 2702) (undo-tree-id1790 . -4)) nil (25967 11001 643553 883000) 0 nil])
([nil nil ((2748 . 2752) 2740) nil (25967 11001 643540 714000) 0 nil])
([nil nil ((2793 . 2797) 2785) nil (25967 11001 643538 210000) 0 nil])
([nil nil ((2849 . 2862)) nil (25967 11001 643532 738000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2858) (undo-tree-id1795 . -4) 2862 (t 25967 11001 724163 558000)) nil (25967 11005 967005 359000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2854) (undo-tree-id1794 . -4) 2858) nil (25967 11005 967002 476000) 0 nil])
([nil nil ((2850 . 2862) (#("    " 0 4 (fontified t)) . 2850) (undo-tree-id1793 . -4) 2854) nil (25967 11005 966999 5000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2858) (undo-tree-id1792 . -4) 2862) nil (25967 11005 966993 975000) 0 nil])
([nil nil ((2612 . 2614)) nil (25967 11005 966978 441000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1895 . 1896) (nil fontified nil 1895 . 1896) (nil fontified nil 1881 . 1895) (nil fontified nil 1879 . 1881) (nil fontified nil 1878 . 1879) (nil fontified nil 1874 . 1878) (nil fontified nil 1873 . 1874) (nil fontified nil 1858 . 1873) (nil fontified nil 1857 . 1858) (nil fontified nil 1853 . 1857) (nil fontified nil 1834 . 1853) (nil fontified nil 1833 . 1834) (nil fontified nil 1829 . 1833) (nil fontified nil 1828 . 1829) (nil fontified nil 1817 . 1828) (nil fontified nil 1816 . 1817) (nil fontified nil 1812 . 1816) (nil fontified nil 1792 . 1812) (nil fontified nil 1791 . 1792) (nil fontified nil 1790 . 1791) (nil fontified nil 1778 . 1790) (nil fontified nil 1777 . 1778) (nil fontified nil 1773 . 1777) (nil fontified nil 1766 . 1773) (nil fontified nil 1764 . 1766) (nil fontified nil 1746 . 1764) (nil fontified nil 1745 . 1746) (nil fontified nil 1741 . 1745) (nil fontified nil 1740 . 1741) (nil fontified nil 1729 . 1740) (nil fontified nil 1712 . 1729) (nil fontified nil 1711 . 1712) (nil fontified nil 1709 . 1711) (nil fontified nil 1703 . 1709) (nil fontified nil 1701 . 1703) (nil fontified nil 1697 . 1701) (1697 . 1896) (t 25967 11006 44163 696000)) nil (25967 11044 669994 797000) 0 nil])
([nil nil ((1697 . 1705) (#("    " 0 4 (fontified t)) . 1697)) nil (25967 11044 669986 145000) 0 nil])
([nil nil ((1727 . 1731)) nil (25967 11044 669984 819000) 0 nil])
([nil nil ((1763 . 1767) 1755) nil (25967 11044 669983 818000) 0 nil])
([nil nil ((1776 . 1780) 1768) nil (25967 11044 669982 763000) 0 nil])
([nil nil ((1810 . 1826) (#("            " 0 12 (fontified t)) . 1810)) nil (25967 11044 669981 415000) 0 nil])
([nil nil ((1855 . 1871) (#("            " 0 12 (fontified t)) . 1855)) nil (25967 11044 669980 258000) 0 nil])
([nil nil ((1712 . 1713)) nil (25967 11044 669978 865000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1712) (undo-tree-id1796 . -1) 1713) nil (25967 11044 669977 29000) 0 nil])
([nil nil ((nil fontified nil 1933 . 1937) (#("seed" 0 4 (fontified nil)) . -1928) (1932 . 1941) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1914) (1918 . 1927) (nil fontified nil 1874 . 1878) (#("seed" 0 4 (fontified nil)) . -1869) (1873 . 1882) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1859) (1863 . 1872) (nil fontified nil 1764 . 1768) (#("seed" 0 4 (fontified nil)) . -1759) (1763 . 1772) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1749) (1753 . 1762) (#("seed" 0 4 (fontified t)) . -1708) (1712 . 1721)) nil (25967 11044 669960 939000) 0 nil])
([nil nil ((2957 . 2965) (#("    " 0 4 (fontified t)) . 2957) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) 2961 (t 25967 11044 744164 927000)) nil (25967 11051 686460 318000) 0 nil])
([nil nil ((1677 . 1679) (t 25967 11051 764165 150000)) nil (25967 11055 646937 390000) 0 nil])
([nil nil ((14807 . 14810) (t 25967 11055 724165 276000)) nil (25967 11403 298571 606000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -14807) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -14808) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -14809) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) 14810 (t 25967 11403 376176 340000)) nil (25967 11424 661459 294000) 0 nil])
([nil nil ((14807 . 14824) (t 25967 11424 736177 19000)) nil (25967 11694 311834 206000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14823) (undo-tree-id1905 . -1) 14824) nil (25967 11694 311832 547000) 0 nil])
([nil nil ((14823 . 14826)) nil (25967 11694 311829 17000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14825) (undo-tree-id1904 . -1) 14826) nil (25967 11694 311826 742000) 0 nil])
([nil nil ((14825 . 14827)) nil (25967 11694 311811 137000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14826) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) 14827 (t 25967 11694 388185 600000)) nil (25967 11700 593475 432000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14807) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#(" " 0 1 (fontified t)) . -14808) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (#("d" 0 1 (fontified t)) . -14809) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (#("e" 0 1 (fontified t)) . -14810) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (#("v" 0 1 (fontified t)) . -14811) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (#("i" 0 1 (fontified t)) . -14812) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (#("c" 0 1 (fontified t)) . -14813) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (#("e" 0 1 (face tree-sitter-hl-face:label fontified nil)) . -14814) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -14815) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (#("s" 0 1 (fontified nil)) . -14816) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (#("e" 0 1 (fontified t)) . -14817) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (#("l" 0 1 (fontified t)) . -14818) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -14819) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (#("." 0 1 (fontified t)) . -14820) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14821) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14822) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14823) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14824) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14825) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) 14826) nil (25967 11700 593438 448000) 0 nil])
([nil nil ((apply -10 1699 1976 undo--wrap-and-run-primitive-undo 1699 1976 ((1898 . 1900) (1841 . 1843) (1797 . 1799) (1736 . 1738) (1707 . 1709) 1957))) nil (25967 11813 732453 288000) 0 nil])
([nil nil ((#("        # if self.SEED !=0 :
        #     torch.manual_self.SEED(self.SEED)
            
        #     if torch.cuda.is_available():
        #         torch.cuda.manual_self.SEED(self.SEED)
        #         torch.cuda.manual_self.SEED_all(self.SEED)  # For all GPUs
" 0 8 (fontified t) 8 10 (face tree-sitter-hl-face:comment fontified t) 10 12 (face tree-sitter-hl-face:comment fontified t) 12 13 (face tree-sitter-hl-face:comment fontified t) 13 17 (face tree-sitter-hl-face:comment fontified t) 17 18 (face tree-sitter-hl-face:comment fontified t) 18 22 (face tree-sitter-hl-face:comment fontified t) 22 23 (face tree-sitter-hl-face:comment fontified t) 23 25 (face tree-sitter-hl-face:comment fontified t) 25 26 (face tree-sitter-hl-face:comment fontified t) 26 28 (face tree-sitter-hl-face:comment fontified t) 28 29 (fontified t) 29 37 (fontified t) 37 39 (face tree-sitter-hl-face:comment fontified t) 39 49 (face tree-sitter-hl-face:comment fontified t) 49 56 (face tree-sitter-hl-face:comment fontified t) 56 60 (face tree-sitter-hl-face:comment fontified t) 60 61 (face tree-sitter-hl-face:comment fontified t) 61 65 (face tree-sitter-hl-face:comment fontified t) 65 66 (face tree-sitter-hl-face:comment fontified t) 66 70 (face tree-sitter-hl-face:comment fontified t) 70 71 (face tree-sitter-hl-face:comment fontified t) 71 75 (face tree-sitter-hl-face:comment fontified t) 75 76 (face tree-sitter-hl-face:comment fontified t) 76 77 (fontified t) 77 90 (fontified t) 90 98 (fontified t) 98 100 (face tree-sitter-hl-face:comment fontified t) 100 104 (face tree-sitter-hl-face:comment fontified t) 104 106 (face tree-sitter-hl-face:comment fontified t) 106 113 (face tree-sitter-hl-face:comment fontified t) 113 117 (face tree-sitter-hl-face:comment fontified t) 117 118 (face tree-sitter-hl-face:comment fontified t) 118 130 (face tree-sitter-hl-face:comment fontified t) 130 131 (face tree-sitter-hl-face:comment fontified t) 131 132 (face tree-sitter-hl-face:comment fontified t) 132 133 (face tree-sitter-hl-face:comment fontified t) 133 134 (fontified t) 134 142 (fontified t) 142 144 (face tree-sitter-hl-face:comment fontified t) 144 152 (face tree-sitter-hl-face:comment fontified t) 152 158 (face tree-sitter-hl-face:comment fontified t) 158 162 (face tree-sitter-hl-face:comment fontified t) 162 163 (face tree-sitter-hl-face:comment fontified t) 163 170 (face tree-sitter-hl-face:comment fontified t) 170 174 (face tree-sitter-hl-face:comment fontified t) 174 175 (face tree-sitter-hl-face:comment fontified t) 175 179 (face tree-sitter-hl-face:comment fontified t) 179 180 (face tree-sitter-hl-face:comment fontified t) 180 184 (face tree-sitter-hl-face:comment fontified t) 184 185 (face tree-sitter-hl-face:comment fontified t) 185 189 (face tree-sitter-hl-face:comment fontified t) 189 190 (face tree-sitter-hl-face:comment fontified t) 190 191 (fontified t) 191 199 (fontified t) 199 201 (face tree-sitter-hl-face:comment fontified t) 201 209 (face tree-sitter-hl-face:comment fontified t) 209 215 (face tree-sitter-hl-face:comment fontified t) 215 219 (face tree-sitter-hl-face:comment fontified t) 219 220 (face tree-sitter-hl-face:comment fontified t) 220 227 (face tree-sitter-hl-face:comment fontified t) 227 231 (face tree-sitter-hl-face:comment fontified t) 231 232 (face tree-sitter-hl-face:comment fontified t) 232 236 (face tree-sitter-hl-face:comment fontified t) 236 240 (face tree-sitter-hl-face:comment fontified t) 240 241 (face tree-sitter-hl-face:comment fontified t) 241 245 (face tree-sitter-hl-face:comment fontified t) 245 246 (face tree-sitter-hl-face:comment fontified t) 246 250 (face tree-sitter-hl-face:comment fontified t) 250 251 (face tree-sitter-hl-face:comment fontified t) 251 253 (face tree-sitter-hl-face:comment fontified t) 253 267 (face tree-sitter-hl-face:comment fontified t) 267 268 (rear-nonsticky t fontified t)) . 1699) (undo-tree-id2504 . -268) (undo-tree-id2505 . -268) (undo-tree-id2506 . -191) (undo-tree-id2507 . -29) (undo-tree-id2508 . -18) (undo-tree-id2509 . -18)) nil (25967 11813 732451 892000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1677) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 1677)) nil (25967 11813 732443 153000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2612) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2612)) nil (25967 11813 732441 59000) 0 nil])
([nil nil ((#("        new_seed = int(time.time())
        torch.manual_seed(new_seed)
        
        if torch.cuda.is_available():
            torch.cuda.manual_seed(new_seed)
            torch.cuda.manual_seed_all(new_seed)  # For all GPUs
" 0 8 (fontified t) 8 16 (face tree-sitter-hl-face:variable fontified t) 16 17 (fontified t) 17 18 (face tree-sitter-hl-face:operator fontified t) 18 19 (fontified t) 19 22 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 28 (fontified t) 28 32 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 44 (fontified t) 44 50 (fontified t) 50 61 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t) 62 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t) 72 80 (fontified t) 80 81 (fontified t) 81 89 (fontified t) 89 91 (face tree-sitter-hl-face:keyword fontified t) 91 98 (fontified t) 98 102 (face tree-sitter-hl-face:property fontified t) 102 103 (fontified t) 103 115 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 115 116 (face (rainbow-delimiters-depth-1-face) fontified t) 116 117 (face (rainbow-delimiters-depth-1-face) fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 137 (fontified t) 137 141 (face tree-sitter-hl-face:property fontified t) 141 142 (fontified t) 142 153 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 153 154 (face (rainbow-delimiters-depth-1-face) fontified t) 154 162 (fontified t) 162 163 (face (rainbow-delimiters-depth-1-face) fontified t) 163 164 (fontified t) 164 182 (fontified t) 182 186 (face tree-sitter-hl-face:property fontified t) 186 187 (fontified t) 187 202 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 202 203 (face (rainbow-delimiters-depth-1-face) fontified t) 203 211 (fontified t) 211 212 (face (rainbow-delimiters-depth-1-face) fontified t) 212 214 (fontified t) 214 228 (face tree-sitter-hl-face:comment fontified t) 228 229 (fontified t)) . -2625) (undo-tree-id2499 . -229) (undo-tree-id2500 . -229) (undo-tree-id2501 . -229) (undo-tree-id2502 . -164) (undo-tree-id2503 . -229) 2854) nil (25967 11813 732435 704000) 0 nil])
([nil nil ((1320 . 1324) (t 25967 11813 812189 400000)) nil (25967 11861 17657 565000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1320) (undo-tree-id2510 . -4) (undo-tree-id2511 . -4) (undo-tree-id2512 . -4) (undo-tree-id2513 . -4) (undo-tree-id2514 . -4) (undo-tree-id2515 . -4) (undo-tree-id2516 . -4) (undo-tree-id2517 . -4) (undo-tree-id2518 . -4) (undo-tree-id2519 . -4) (undo-tree-id2520 . -4) (undo-tree-id2521 . -4) (undo-tree-id2522 . -4) (undo-tree-id2523 . -4) (undo-tree-id2524 . -4) (undo-tree-id2525 . -4) (undo-tree-id2526 . -4) (undo-tree-id2527 . -4) (undo-tree-id2528 . -4) (undo-tree-id2529 . -4) (undo-tree-id2530 . -4) (undo-tree-id2531 . -4) (undo-tree-id2532 . -4) 1324) nil (25967 11861 17651 921000) 0 nil])
([nil nil ((15363 . 15379) (#("            " 0 12 (fontified t)) . 15363) (undo-tree-id2547 . -12) (t 25967 11861 100190 905000)) nil (25967 12043 608328 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15375) (undo-tree-id2533 . -4) (undo-tree-id2534 . -4) (undo-tree-id2535 . -4) (undo-tree-id2536 . -4) (undo-tree-id2537 . -4) (undo-tree-id2538 . -4) (undo-tree-id2539 . -4) (undo-tree-id2540 . -4) (undo-tree-id2541 . -4) (undo-tree-id2542 . -4) (undo-tree-id2543 . -4) (undo-tree-id2544 . -4) (undo-tree-id2545 . -4) (undo-tree-id2546 . -4) 15379) nil (25967 12043 608321 704000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3215) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3216) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (#("q" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3217) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -3218) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -3219) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3220) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (#("z" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3221) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3222) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3223) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -3224) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3225) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) 3226 (t 25967 12043 688196 716000)) nil (25967 12134 19065 301000) 0 nil])
([nil nil ((9181 . 9193) (t 25967 12134 100199 593000)) nil (25975 4465 525466 606000) 0 nil])
([nil nil ((#("def set_seed(seed):
    if seed !=0 :
        torch.manual_seed(seed)
        
        if torch.cuda.is_available():
            torch.cuda.manual_seed(seed)
            torch.cuda.manual_seed_all(seed)  # For all GPUs
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 12 (face tree-sitter-hl-face:function fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 17 (face tree-sitter-hl-face:variable.parameter fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 24 (fontified t) 24 26 (face tree-sitter-hl-face:keyword fontified t) 26 32 (fontified t) 32 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (face tree-sitter-hl-face:number fontified t) 35 52 (fontified t) 52 63 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 68 (fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t) 69 87 (fontified t) 87 89 (face tree-sitter-hl-face:keyword fontified t) 89 96 (fontified t) 96 100 (face tree-sitter-hl-face:property fontified t) 100 101 (fontified t) 101 113 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 113 114 (face (rainbow-delimiters-depth-1-face) fontified t) 114 115 (face (rainbow-delimiters-depth-1-face) fontified t) 115 135 (fontified t) 135 139 (face tree-sitter-hl-face:property fontified t) 139 140 (fontified t) 140 151 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 176 (fontified t) 176 180 (face tree-sitter-hl-face:property fontified t) 180 181 (fontified t) 181 196 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t) 202 204 (fontified t) 204 218 (face tree-sitter-hl-face:comment fontified t) 218 219 (fontified t)) . 377) (undo-tree-id0 . -20) (undo-tree-id1 . -20) (undo-tree-id2 . -20) (undo-tree-id3 . -20) (undo-tree-id4 . -20) (undo-tree-id5 . -20) (undo-tree-id6 . -219) (undo-tree-id7 . -20) (undo-tree-id8 . -20) (undo-tree-id9 . -38) (undo-tree-id10 . -20) (undo-tree-id11 . -70) (undo-tree-id12 . -38) (undo-tree-id13 . -79) (undo-tree-id14 . -70) (undo-tree-id15 . -117) (undo-tree-id16 . -79) (undo-tree-id17 . -158) (undo-tree-id18 . -117) (undo-tree-id19 . -219) (undo-tree-id20 . -158) (undo-tree-id21 . -219) (undo-tree-id22 . -219) (undo-tree-id23 . -219) (undo-tree-id24 . -219) (undo-tree-id25 . -219) 596 (t 25975 4465 658732 125000)) nil (25975 4493 115546 41000) 0 nil])
([nil nil ((#("def reset_seed():
    new_seed = int(time.time())
    torch.manual_seed(new_seed)
    
    if torch.cuda.is_available():
        torch.cuda.manual_seed(new_seed)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 14 (face tree-sitter-hl-face:function fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 22 (fontified t) 22 30 (face tree-sitter-hl-face:variable fontified t) 30 31 (fontified t) 31 32 (face tree-sitter-hl-face:operator fontified t) 32 33 (fontified t) 33 36 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 42 (fontified t) 42 46 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 60 (fontified t) 60 71 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 91 (fontified t) 91 93 (face tree-sitter-hl-face:keyword fontified t) 93 100 (fontified t) 100 104 (face tree-sitter-hl-face:property fontified t) 104 105 (fontified t) 105 117 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 117 118 (face (rainbow-delimiters-depth-1-face) fontified t) 118 119 (face (rainbow-delimiters-depth-1-face) fontified t) 119 135 (fontified t) 135 139 (face tree-sitter-hl-face:property fontified t) 139 140 (fontified t) 140 151 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t) 161 162 (fontified t)) . -379) (undo-tree-id82 . -18) (undo-tree-id83 . -50) (undo-tree-id84 . -50) (undo-tree-id85 . -50) (undo-tree-id86 . -50) (undo-tree-id87 . -18) (undo-tree-id88 . -50) (undo-tree-id89 . -162) 541 (t 25975 4493 198733 2000)) nil (25975 4539 514540 319000) 0 nil])
([nil nil ((#("        torch.cuda.manual_seed_all(new_seed)  # For all GPUs
" 0 14 (fontified t) 14 18 (face tree-sitter-hl-face:property fontified t) 18 19 (fontified t) 19 34 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 46 (fontified t) 46 60 (face tree-sitter-hl-face:comment fontified t) 60 61 (fontified t)) . -379) (undo-tree-id81 . -61) 440) nil (25975 4539 514531 978000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -376) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("
" 0 1 (fontified t)) . -377) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("
" 0 1 (fontified t)) . -378) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 379) nil (25975 4539 514527 588000) 0 nil])
([nil nil ((219 . 220)) nil (25975 4539 514485 172000) 0 nil])
([nil nil ((#("from torch.distributions import Normal, MultivariateNormal
" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 25 (fontified t) 25 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 38 (face tree-sitter-hl-face:constructor fontified t) 38 40 (fontified t) 40 58 (face tree-sitter-hl-face:constructor fontified t) 58 59 (fontified t)) . 160) (undo-tree-id31 . -59) 219) nil (25975 4539 514484 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 144 . 145) (nil fontified nil 144 . 145) (nil fontified nil 126 . 144) (nil fontified nil 124 . 126) (nil fontified nil 118 . 124) (nil fontified nil 117 . 118) (nil fontified nil 111 . 117) (nil fontified nil 90 . 111) (nil fontified nil 86 . 90) (86 . 145)) nil (25975 4539 514482 6000) 0 nil])
([nil nil ((145 . 146)) nil (25975 4539 514479 375000) 0 nil])
([nil nil ((#("import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 13 (fontified t) 13 17 (face tree-sitter-hl-face:keyword fontified t) 17 24 (fontified t) 24 30 (face tree-sitter-hl-face:keyword fontified t) 30 34 (fontified t) 34 38 (face tree-sitter-hl-face:keyword fontified t) 38 59 (fontified t) 59 65 (face tree-sitter-hl-face:keyword fontified t) 65 66 (fontified t) 66 72 (face tree-sitter-hl-face:constructor fontified t) 72 74 (fontified t) 74 92 (face tree-sitter-hl-face:constructor fontified t) 92 93 (rear-nonsticky t fontified t)) . 52) (undo-tree-id27 . -34) (undo-tree-id28 . -34) (undo-tree-id29 . -34) (undo-tree-id30 . -93) 145) nil (25975 4539 514478 75000) 0 nil])
([nil nil ((126 . 127)) nil (25975 4539 514471 713000) 0 nil])
([nil nil ((nil fontified nil 219 . 220) (nil fontified nil 201 . 219) (nil fontified nil 199 . 201) (nil fontified nil 193 . 199) (nil fontified nil 192 . 193) (nil fontified nil 186 . 192) (nil fontified nil 165 . 186) (nil fontified nil 161 . 165) (nil fontified nil 157 . 161) (nil fontified nil 151 . 157) (nil fontified nil 144 . 151) (nil fontified nil 140 . 144) (nil fontified nil 133 . 140) (nil fontified nil 127 . 133) (127 . 220)) nil (25975 4539 514470 232000) 0 nil])
([nil nil ((221 . 234)) nil (25975 4539 514466 184000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -233) (undo-tree-id26 . -1) 234) nil (25975 4539 514463 513000) 0 nil])
([nil nil ((233 . 251)) nil (25975 4539 514445 660000) 0 nil])
([nil nil ((#("class Activation(torch.nn.Module):
    def forward(self, x, THRESH=15):
        # return nn.ReLU()(x)
        return THRESH * 0.5 * (1.0 + torch.erf(x / np.sqrt(2.0)))
" 0 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (fontified t) 6 16 (face tree-sitter-hl-face:constructor fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 23 (fontified t) 23 25 (face tree-sitter-hl-face:property fontified t) 25 26 (fontified t) 26 32 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 39 (fontified t) 39 42 (face tree-sitter-hl-face:keyword fontified t) 42 43 (fontified t) 43 50 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 55 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 55 57 (fontified t) 57 58 (face tree-sitter-hl-face:variable.parameter fontified t) 58 60 (fontified t) 60 66 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 66 67 (face tree-sitter-hl-face:operator fontified t) 67 69 (face tree-sitter-hl-face:number fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 80 (fontified t) 80 101 (face tree-sitter-hl-face:comment fontified t) 101 110 (fontified t) 110 116 (face tree-sitter-hl-face:keyword fontified t) 116 117 (fontified t) 117 123 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 123 124 (fontified t) 124 125 (face tree-sitter-hl-face:operator fontified t) 125 126 (fontified t) 126 129 (face tree-sitter-hl-face:number fontified t) 129 130 (fontified t) 130 131 (face tree-sitter-hl-face:operator fontified t) 131 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-1-face) fontified t) 133 136 (face tree-sitter-hl-face:number fontified t) 136 137 (fontified t) 137 138 (face tree-sitter-hl-face:operator fontified t) 138 145 (fontified t) 145 148 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 148 149 (face (rainbow-delimiters-depth-2-face) fontified t) 149 151 (fontified t) 151 152 (face tree-sitter-hl-face:operator fontified t) 152 156 (fontified t) 156 160 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 160 161 (face (rainbow-delimiters-depth-3-face) fontified t) 161 164 (face tree-sitter-hl-face:number fontified t) 164 165 (face (rainbow-delimiters-depth-3-face) fontified t) 165 166 (face (rainbow-delimiters-depth-2-face) fontified t) 166 167 (face (rainbow-delimiters-depth-1-face) fontified t) 167 168 (fontified t)) . -740) (undo-tree-id93 . -168) 908 (t 25975 4539 594734 478000)) nil (25975 4555 816718 173000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -739) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 740) nil (25975 4555 816714 520000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2032)) nil (25975 4555 816708 770000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . -2031) (undo-tree-id90 . -1) 2032) nil (25975 4555 816705 768000) 0 nil])
([nil nil ((2040 . 2041)) nil (25975 4555 816684 995000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -2040) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 2041 (t 25975 4555 958734 999000)) nil (25975 4556 907169 347000) 0 nil])
([nil nil ((2040 . 2041)) nil (25975 4556 907133 608000) 0 nil])
([nil nil ((220 . 221) (t 25975 4557 54735 34000)) nil (25975 4582 474060 46000) 0 nil])
([nil nil ((221 . 222)) nil (25975 4582 474058 168000) 0 nil])
([nil nil ((222 . 243)) nil (25975 4582 474055 988000) 0 nil])
([nil nil ((243 . 258)) nil (25975 4582 474050 866000) 0 nil])
([nil nil ((#("import time
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 12 (fontified t)) . 21) (undo-tree-id106 . -11) (t 25975 4582 618735 847000)) nil (25975 4685 601358 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4449 . 4450) (nil fontified nil 4420 . 4450) (4420 . 4450) (t 25975 4685 734739 129000)) nil (25975 4699 730474 637000) 0 nil])
([nil nil ((4420 . 4421)) nil (25975 4699 730472 186000) 0 nil])
([nil nil ((4468 . 4472) 4460) nil (25975 4699 730470 283000) 0 nil])
([nil nil ((4521 . 4537) (#("            " 0 12 (fontified t)) . 4521) (undo-tree-id125 . -12) 4533) nil (25975 4699 730467 870000) 0 nil])
([nil nil ((4560 . 4576) (#("            " 0 12 (fontified t)) . 4560)) nil (25975 4699 730463 699000) 0 nil])
([nil nil ((4619 . 4635) (#("            " 0 12 (fontified t)) . 4619) (undo-tree-id124 . -12)) nil (25975 4699 730461 498000) 0 nil])
([nil nil ((4679 . 4683)) nil (25975 4699 730457 969000) 0 nil])
([nil nil ((4713 . 4737) (#("                    " 0 20 (fontified t)) . 4713) (undo-tree-id122 . -20) (undo-tree-id123 . -20)) nil (25975 4699 730455 803000) 0 nil])
([nil nil ((4778 . 4782) 4754) nil (25975 4699 730450 876000) 0 nil])
([nil nil ((4857 . 4885) (#("                    " 0 20 (fontified t)) . 4857) (undo-tree-id121 . -20)) nil (25975 4699 730447 899000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4881) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) 4885) nil (25975 4699 730439 566000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4925) (undo-tree-id126 . -1) 4926 (t 25975 4699 866739 578000)) nil (25975 4701 361104 935000) 0 nil])
([nil nil ((4926 . 4950) (#("        " 0 8 (fontified nil)) . 4926) (undo-tree-id127 . -8) (4925 . 4926) (t 25975 4701 490739 630000)) nil (25975 4703 298796 658000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4946) (undo-tree-id206 . -4) 4950 (t 25975 4703 434739 692000)) nil (25975 4705 213091 85000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4942) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) 4946) nil (25975 4705 213086 385000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4938) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) 4942) nil (25975 4705 213061 883000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4934) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) 4938) nil (25975 4705 213017 243000) 0 nil])
([nil nil ((#("# torch.backends.cudnn.deterministic = True
# torch.backends.cudnn.benchmark = False
" 0 43 (face tree-sitter-hl-face:comment fontified t) 43 44 (fontified t) 44 84 (face tree-sitter-hl-face:comment fontified t) 84 85 (fontified t)) . 350) (undo-tree-id207 . -85) (undo-tree-id208 . -85) (undo-tree-id209 . -85) (undo-tree-id210 . -85) (undo-tree-id211 . -85) (undo-tree-id212 . -85) (undo-tree-id213 . -85) (undo-tree-id214 . -85) (undo-tree-id215 . -85) (undo-tree-id216 . -85) (undo-tree-id217 . -85) (undo-tree-id218 . -85) (undo-tree-id219 . -85) (undo-tree-id220 . -85) (undo-tree-id221 . -85) (undo-tree-id222 . -44) (undo-tree-id223 . -44) (undo-tree-id224 . -44) (undo-tree-id225 . -44) (undo-tree-id226 . -44) (undo-tree-id227 . -44) (undo-tree-id228 . -44) (undo-tree-id229 . -44) (undo-tree-id230 . -44) (undo-tree-id231 . -44) (undo-tree-id232 . -44) (undo-tree-id233 . -44) (undo-tree-id234 . -44) (undo-tree-id235 . -44) (undo-tree-id236 . -44) (undo-tree-id237 . -44) (undo-tree-id238 . -44) (undo-tree-id239 . -44) (undo-tree-id240 . -44) (undo-tree-id241 . -44) (undo-tree-id242 . -44) (undo-tree-id243 . -85) (undo-tree-id244 . -85) (undo-tree-id245 . -44) (undo-tree-id246 . -85) (undo-tree-id247 . -85) (undo-tree-id248 . -85) (undo-tree-id249 . -85) (undo-tree-id250 . -85) (undo-tree-id251 . -85) (undo-tree-id252 . -85) (undo-tree-id253 . -85) (undo-tree-id254 . -85) (undo-tree-id255 . -85) (undo-tree-id256 . -85) (undo-tree-id257 . -85) 435 (t 25975 4705 346739 753000)) nil (25975 4711 283804 585000) 0 nil])
([nil nil ((#("import warnings
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 16 (fontified t)) . 98) (undo-tree-id258 . -16) (undo-tree-id259 . -16) (undo-tree-id260 . -16) (undo-tree-id261 . -16) (undo-tree-id262 . -16) (undo-tree-id263 . -16) (undo-tree-id264 . -16) (undo-tree-id265 . -16) (undo-tree-id266 . -16) (undo-tree-id267 . -15) (undo-tree-id268 . -16) (undo-tree-id269 . -15) (undo-tree-id270 . -15) (undo-tree-id271 . -15) (undo-tree-id272 . -15) (undo-tree-id273 . -15) (undo-tree-id274 . -15) (undo-tree-id275 . -15) (undo-tree-id276 . -15) (undo-tree-id277 . -15) (undo-tree-id278 . -16) (undo-tree-id279 . -16) (undo-tree-id280 . -16) (undo-tree-id281 . -16) (undo-tree-id282 . -16) (undo-tree-id283 . -16) (undo-tree-id284 . -16) (undo-tree-id285 . -16) (undo-tree-id286 . -16) (undo-tree-id287 . -16) (undo-tree-id288 . -16) (undo-tree-id289 . -16) (undo-tree-id290 . -16) (undo-tree-id291 . -16) 114 (t 25975 4711 434739 946000)) nil (25975 4726 819652 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 315 . 316) (nil fontified nil 306 . 316) (nil fontified nil 300 . 306) (300 . 316)) nil (25975 4726 819578 638000) 0 nil])
([nil nil ((#("from yaml import safe_load
from time import perf_counter
" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 10 (fontified t) 10 16 (face tree-sitter-hl-face:keyword fontified t) 16 27 (fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 37 (fontified t) 37 43 (face tree-sitter-hl-face:keyword fontified t) 43 57 (fontified t)) . 41) (undo-tree-id295 . -57) (undo-tree-id296 . -57) 98 (t 25975 4726 958740 440000)) nil (25975 4738 169364 432000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -40) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 41) nil (25975 4738 169358 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 96 . 97) (nil fontified nil 83 . 97) (nil fontified nil 77 . 83) (nil fontified nil 71 . 77) (nil fontified nil 67 . 71) (nil fontified nil 56 . 67) (nil fontified nil 50 . 56) (nil fontified nil 44 . 50) (nil fontified nil 40 . 44) (40 . 97)) nil (25975 4738 169338 353000) 0 nil])
([nil nil ((40 . 41)) nil (25975 4767 779355 951000) 0 nil])
([nil nil ((#("def get_theta(a, b, GM=0, IF_NORM=0):

    if IF_NORM:
        u = a / np.linalg.norm(a)
        v = b / np.linalg.norm(b)
          
    if GM:
        u = a
        v = b - np.dot(b, u) / np.dot(u, u) * u
    else:
        u=a
        v=b

    if IF_NORM:
        v = b / np.linalg.norm(b)
    
    return np.arctan2(v, u)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 13 (face tree-sitter-hl-face:function fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (face tree-sitter-hl-face:variable.parameter fontified t) 15 17 (fontified t) 17 18 (face tree-sitter-hl-face:variable.parameter fontified t) 18 20 (fontified t) 20 22 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 22 23 (face tree-sitter-hl-face:operator fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 26 (fontified t) 26 33 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 33 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (face tree-sitter-hl-face:number fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 43 (fontified t) 43 45 (face tree-sitter-hl-face:keyword fontified t) 45 46 (fontified t) 46 53 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 53 63 (fontified t) 63 64 (face tree-sitter-hl-face:variable fontified t) 64 65 (fontified t) 65 66 (face tree-sitter-hl-face:operator fontified t) 66 69 (fontified t) 69 70 (face tree-sitter-hl-face:operator fontified t) 70 74 (fontified t) 74 80 (face tree-sitter-hl-face:property fontified t) 80 81 (fontified t) 81 85 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 97 (fontified t) 97 98 (face tree-sitter-hl-face:variable fontified t) 98 99 (fontified t) 99 100 (face tree-sitter-hl-face:operator fontified t) 100 103 (fontified t) 103 104 (face tree-sitter-hl-face:operator fontified t) 104 108 (fontified t) 108 114 (face tree-sitter-hl-face:property fontified t) 114 115 (fontified t) 115 119 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-1-face) fontified t) 122 138 (fontified t) 138 140 (face tree-sitter-hl-face:keyword fontified t) 140 141 (fontified t) 141 143 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 143 153 (fontified t) 153 154 (face tree-sitter-hl-face:variable fontified t) 154 155 (fontified t) 155 156 (face tree-sitter-hl-face:operator fontified t) 156 167 (fontified t) 167 168 (face tree-sitter-hl-face:variable fontified t) 168 169 (fontified t) 169 170 (face tree-sitter-hl-face:operator fontified t) 170 173 (fontified t) 173 174 (face tree-sitter-hl-face:operator fontified t) 174 178 (fontified t) 178 181 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-1-face) fontified t) 187 188 (fontified t) 188 189 (face tree-sitter-hl-face:operator fontified t) 189 193 (fontified t) 193 196 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t) 202 203 (fontified t) 203 204 (face tree-sitter-hl-face:operator fontified t) 204 211 (fontified t) 211 215 (face tree-sitter-hl-face:keyword fontified t) 215 225 (fontified t) 225 226 (face tree-sitter-hl-face:variable fontified t) 226 227 (face tree-sitter-hl-face:operator fontified t) 227 237 (fontified t) 237 238 (face tree-sitter-hl-face:variable fontified t) 238 239 (face tree-sitter-hl-face:operator fontified t) 239 246 (fontified t) 246 248 (face tree-sitter-hl-face:keyword fontified t) 248 249 (fontified t) 249 256 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 256 266 (fontified t) 266 267 (face tree-sitter-hl-face:variable fontified t) 267 268 (fontified t) 268 269 (face tree-sitter-hl-face:operator fontified t) 269 272 (fontified t) 272 273 (face tree-sitter-hl-face:operator fontified t) 273 277 (fontified t) 277 283 (face tree-sitter-hl-face:property fontified t) 283 284 (fontified t) 284 288 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 288 289 (face (rainbow-delimiters-depth-1-face) fontified t) 289 290 (fontified t) 290 291 (face (rainbow-delimiters-depth-1-face) fontified t) 291 301 (fontified t) 301 307 (face tree-sitter-hl-face:keyword fontified t) 307 311 (fontified t) 311 318 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 318 319 (face (rainbow-delimiters-depth-1-face) fontified t) 319 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-1-face) fontified t) 324 325 (fontified t)) . 355) (undo-tree-id358 . -325) (undo-tree-id359 . -325) (undo-tree-id360 . -325) (undo-tree-id361 . -325) (undo-tree-id362 . -325) (undo-tree-id363 . -325) (undo-tree-id364 . -325) (undo-tree-id365 . -325) (undo-tree-id366 . -325) (undo-tree-id367 . -325) (undo-tree-id368 . -325) (undo-tree-id369 . -325) (undo-tree-id370 . -325) (undo-tree-id371 . -325) (undo-tree-id372 . -325) (undo-tree-id373 . -325) (undo-tree-id374 . -325) (undo-tree-id375 . -325) (undo-tree-id376 . -325) (undo-tree-id377 . -325) (undo-tree-id378 . -297) (undo-tree-id379 . -325) (undo-tree-id380 . -297) (undo-tree-id381 . -297) (undo-tree-id382 . -297) (undo-tree-id383 . -297) (undo-tree-id384 . -297) (undo-tree-id385 . -297) (undo-tree-id386 . -297) (undo-tree-id387 . -297) (undo-tree-id388 . -297) (undo-tree-id389 . -292) (undo-tree-id390 . -297) (undo-tree-id391 . -258) (undo-tree-id392 . -292) (undo-tree-id393 . -242) (undo-tree-id394 . -258) (undo-tree-id395 . -241) (undo-tree-id396 . -242) (undo-tree-id397 . -229) (undo-tree-id398 . -242) (undo-tree-id399 . -217) (undo-tree-id400 . -229) (undo-tree-id401 . -207) (undo-tree-id402 . -229) (undo-tree-id403 . -159) (undo-tree-id404 . -229) (undo-tree-id405 . -145) (undo-tree-id406 . -159) (undo-tree-id407 . -134) (undo-tree-id408 . -159) (undo-tree-id409 . -123) (undo-tree-id410 . -159) (undo-tree-id411 . -89) (undo-tree-id412 . -159) (undo-tree-id413 . -55) (undo-tree-id414 . -159) (undo-tree-id415 . -39) (undo-tree-id416 . -159) (undo-tree-id417 . -38) (undo-tree-id418 . -159) (undo-tree-id419 . -159) (undo-tree-id420 . -159) (undo-tree-id421 . -159) (undo-tree-id422 . -159)) nil (25975 4771 300462 2000) 0 nil] [nil nil ((#("def get_theta(a, b, GM=0, IF_NORM=0):

    if IF_NORM:
        u = a / np.linalg.norm(a)
        v = b / np.linalg.norm(b)
          
    if GM:
        u = a
        v = b - np.dot(b, u) / np.dot(u, u) * u
    else:
        u=a
        v=b

    if IF_NORM:
        v = b / np.linalg.norm(b)
    
    return np.arctan2(v, u)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 13 (face tree-sitter-hl-face:function fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (face tree-sitter-hl-face:variable.parameter fontified t) 15 17 (fontified t) 17 18 (face tree-sitter-hl-face:variable.parameter fontified t) 18 20 (fontified t) 20 22 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 22 23 (face tree-sitter-hl-face:operator fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 26 (fontified t) 26 33 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 33 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (face tree-sitter-hl-face:number fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 43 (fontified t) 43 45 (face tree-sitter-hl-face:keyword fontified t) 45 46 (fontified t) 46 53 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 53 63 (fontified t) 63 64 (face tree-sitter-hl-face:variable fontified t) 64 65 (fontified t) 65 66 (face tree-sitter-hl-face:operator fontified t) 66 69 (fontified t) 69 70 (face tree-sitter-hl-face:operator fontified t) 70 74 (fontified t) 74 80 (face tree-sitter-hl-face:property fontified t) 80 81 (fontified t) 81 85 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 97 (fontified t) 97 98 (face tree-sitter-hl-face:variable fontified t) 98 99 (fontified t) 99 100 (face tree-sitter-hl-face:operator fontified t) 100 103 (fontified t) 103 104 (face tree-sitter-hl-face:operator fontified t) 104 108 (fontified t) 108 114 (face tree-sitter-hl-face:property fontified t) 114 115 (fontified t) 115 119 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-1-face) fontified t) 122 138 (fontified t) 138 140 (face tree-sitter-hl-face:keyword fontified t) 140 141 (fontified t) 141 143 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 143 153 (fontified t) 153 154 (face tree-sitter-hl-face:variable fontified t) 154 155 (fontified t) 155 156 (face tree-sitter-hl-face:operator fontified t) 156 167 (fontified t) 167 168 (face tree-sitter-hl-face:variable fontified t) 168 169 (fontified t) 169 170 (face tree-sitter-hl-face:operator fontified t) 170 173 (fontified t) 173 174 (face tree-sitter-hl-face:operator fontified t) 174 178 (fontified t) 178 181 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-1-face) fontified t) 187 188 (fontified t) 188 189 (face tree-sitter-hl-face:operator fontified t) 189 193 (fontified t) 193 196 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t) 202 203 (fontified t) 203 204 (face tree-sitter-hl-face:operator fontified t) 204 211 (fontified t) 211 215 (face tree-sitter-hl-face:keyword fontified t) 215 225 (fontified t) 225 226 (face tree-sitter-hl-face:variable fontified t) 226 227 (face tree-sitter-hl-face:operator fontified t) 227 237 (fontified t) 237 238 (face tree-sitter-hl-face:variable fontified t) 238 239 (face tree-sitter-hl-face:operator fontified t) 239 246 (fontified t) 246 248 (face tree-sitter-hl-face:keyword fontified t) 248 249 (fontified t) 249 256 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 256 266 (fontified t) 266 267 (face tree-sitter-hl-face:variable fontified t) 267 268 (fontified t) 268 269 (face tree-sitter-hl-face:operator fontified t) 269 272 (fontified t) 272 273 (face tree-sitter-hl-face:operator fontified t) 273 277 (fontified t) 277 283 (face tree-sitter-hl-face:property fontified t) 283 284 (fontified t) 284 288 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 288 289 (face (rainbow-delimiters-depth-1-face) fontified t) 289 290 (fontified t) 290 291 (face (rainbow-delimiters-depth-1-face) fontified t) 291 301 (fontified t) 301 307 (face tree-sitter-hl-face:keyword fontified t) 307 311 (fontified t) 311 318 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 318 319 (face (rainbow-delimiters-depth-1-face) fontified t) 319 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-1-face) fontified t) 324 325 (fontified t)) . 355) (undo-tree-id298 . -207) (undo-tree-id300 . -38) (undo-tree-id302 . -38) (undo-tree-id304 . -38) (undo-tree-id306 . -38) (undo-tree-id308 . -38) (undo-tree-id310 . -38) (undo-tree-id311 . -325) (undo-tree-id313 . -38) (undo-tree-id315 . -38) (undo-tree-id317 . -38) (undo-tree-id319 . -325) (undo-tree-id321 . -38) (undo-tree-id323 . -39) (undo-tree-id325 . -55) (undo-tree-id327 . -89) (undo-tree-id329 . -123) (undo-tree-id331 . -134) (undo-tree-id333 . -145) (undo-tree-id335 . -159) (undo-tree-id337 . -207) (undo-tree-id339 . -217) (undo-tree-id341 . -229) (undo-tree-id343 . -241) (undo-tree-id345 . -242) (undo-tree-id347 . -258) (undo-tree-id349 . -292) (undo-tree-id351 . -297) (undo-tree-id353 . -325) (undo-tree-id355 . -297) (undo-tree-id357 . -325) 680 (t 25975 4738 306740 802000)) ((355 . 680) (t 25975 4753 974741 300000)) (25975 4753 823599 880000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -354) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 355 (t 25975 4771 438741 856000)) nil (25975 4782 591028 261000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified nil)) . 350) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (354 . 355)) nil (25975 4782 590826 712000) 0 nil])
([nil nil ((230 . 236) (t 25975 4782 726742 215000)) nil (25975 4792 719791 935000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -235) (undo-tree-id531 . -1) 236) nil (25975 4792 719789 953000) 0 nil])
([nil nil ((235 . 238)) nil (25975 4792 719785 349000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -235) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) 236) nil (25975 4792 719781 229000) 0 nil])
([nil nil ((237 . 241)) nil (25975 4792 719730 319000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -230) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (#(" " 0 1 (fontified t)) . -231) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("g" 0 1 (fontified t)) . -232) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("e" 0 1 (fontified t)) . -233) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("t" 0 1 (fontified nil)) . -234) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("_" 0 1 (fontified nil)) . -235) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#("t" 0 1 (fontified nil)) . -236) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("h" 0 1 (fontified nil)) . -237) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#("e" 0 1 (fontified t)) . -238) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("t" 0 1 (fontified t)) . -239) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("a" 0 1 (fontified t)) . -240) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) 241 (t 25975 4792 862742 538000)) nil (25975 4799 1763 941000) 0 nil])
([nil nil ((261 . 268)) nil (25975 4799 1709 11000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -267) (undo-tree-id532 . -1) 268) nil (25975 4799 1704 714000) 0 nil])
([nil nil ((267 . 272)) nil (25975 4799 1671 24000) 0 nil])
([nil nil ((#("from src.utils import set_seed, get_theta
" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 8 (fontified t) 8 15 (fontified t) 15 21 (face tree-sitter-hl-face:keyword fontified t) 21 41 (fontified t) 41 42 (fontified t)) . 231) (undo-tree-id566 . -30) (undo-tree-id567 . -42) 273 (t 25975 4799 138742 737000)) nil (25975 4801 721214 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 234 . 235) (nil fontified nil 234 . 235) (nil fontified nil 214 . 234) (nil fontified nil 208 . 214) (nil fontified nil 201 . 208) (nil fontified nil 197 . 201) (nil fontified nil 193 . 197) (193 . 235)) nil (25975 4802 790885 873000) 0 nil] [nil nil ((#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 194) (193 . 194) (#("
" 0 1 (fontified t)) . 192) (193 . 194)) ((#("f" 0 1 (fontified nil)) . 193) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (192 . 193) (#("
" 0 1 (fontified t)) . 193) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (194 . 195)) (25975 4801 720023 576000) 0 nil])
([nil nil ((1425 . 1441) (#("        " 0 8 (fontified t)) . 1425) (undo-tree-id579 . -8) (t 25975 4802 922742 858000)) nil (25975 4810 724317 685000) 0 nil])
nil
([nil nil ((7468 . 7470) (#("(" 0 1 (fontified nil)) . -7468) (7468 . 7469) (t 25975 4810 862743 110000)) nil (25975 4882 603620 764000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7469)) nil (25975 4882 603618 326000) 0 nil])
([nil nil ((7662 . 7663)) nil (25975 4882 603617 73000) 0 nil])
([nil nil ((7500 . 7519) (#(" " 0 1 (fontified nil)) . 7499) (undo-tree-id583 . -1) (7500 . 7501)) nil (25975 4882 603615 480000) 0 nil])
([nil nil ((#("                              " 0 30 (fontified t)) . -7582) 7560) nil (25975 4882 603611 396000) 0 nil])
([nil nil ((7623 . 7642) (#(" " 0 1 (fontified nil)) . 7622) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (7623 . 7624)) nil (25975 4882 603607 982000) 0 nil])
([nil nil ((7671 . 7684)) nil (25975 4882 603586 277000) 0 nil])
([nil nil ((7968 . 8001) (#(" " 0 1 (fontified nil)) . 7967) (undo-tree-id589 . -1) (7968 . 7969) (t 25975 4882 738745 398000)) nil (25975 4907 708232 857000) 0 nil])
([nil nil ((8117 . 8148) (#(" " 0 1 (fontified nil)) . 8116) (undo-tree-id588 . -1) (8117 . 8118)) nil (25975 4907 708228 323000) 0 nil])
([nil nil ((8038 . 8051)) nil (25975 4907 708224 703000) 0 nil])
([nil nil ((8284 . 8318) (#(" " 0 1 (fontified nil)) . 8283) (undo-tree-id587 . -1) (8284 . 8285)) nil (25975 4907 708222 219000) 0 nil])
([nil nil ((8356 . 8390) (#(" " 0 1 (fontified nil)) . 8355) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (8356 . 8357)) nil (25975 4907 708215 3000) 0 nil])
([nil nil ((8649 . 8651) (#("(" 0 1 (fontified nil)) . -8649) (8649 . 8650) (t 25975 4907 842746 197000)) nil (25975 4925 693187 340000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8650)) nil (25975 4925 693185 7000) 0 nil])
([nil nil ((8723 . 8724)) nil (25975 7798 292654 896000) 0 nil])
([nil nil ((8687 . 8706) (#(" " 0 1 (fontified nil)) . 8686) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (8687 . 8688)) ((#("
" 0 1 (fontified nil)) . 8687) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (8686 . 8687) (#("                   " 0 19 (fontified t)) . 8687)) (25975 7799 230352 883000) 0 nil])
([nil nil ((8900 . 8902) (#("(" 0 1 (fontified nil)) . 8900) (8900 . 8901)) ((#("(" 0 1 (fontified nil)) . 8900) (8900 . 8901) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8900) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1)) (25975 7799 420557 825000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8901)) ((8901 . 8902)) (25975 7799 808358 643000) 0 nil])
([nil nil ((8989 . 8990)) ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8989)) (25975 7800 195493 970000) 0 nil])
([nil nil ((8924 . 8943) (#(" " 0 1 (fontified nil)) . 8923) (8924 . 8925)) ((#("
" 0 1 (fontified nil)) . 8924) (8923 . 8924) (#("                   " 0 19 (fontified t)) . 8924)) (25975 7800 766350 981000) 0 nil])
([nil nil ((9464 . 9499) (#(" " 0 1 (fontified nil)) . 9463) (9464 . 9465)) ((#("
" 0 1 (fontified nil)) . 9464) (9463 . 9464) (#("                                   " 0 35 (fontified nil)) . 9464)) (25975 7802 847464 863000) 0 nil])
([nil nil ((#("import os
import gc
import numpy as np

from yaml import safe_load
from time import perf_counter

import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal

from src.utils import set_seed, get_theta
from src.activation import Activation
from src.plasticity import STP_Model

import warnings
warnings.filterwarnings(\"ignore\")


class Network(nn.Module):
    def __init__(self, conf_file, sim_name, repo_root, **kwargs):
        super().__init__()

        # load parameters
        self.loadConfig(conf_file, sim_name, repo_root, **kwargs)

        # set csts
        self.initConst()

        # scale parameters
        self.scaleParam()

        # set seed for connectivity
        set_seed(self.SEED)
        
        # We define the recurrent network with nn.linear()
        # In pytorch, y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        # so Wij means i presynaptic and j postsynaptic
        
        self.Wab = nn.Linear(self.N_NEURON, self.N_NEURON, bias=True, dtype=self.FLOAT, device=self.device)
        print(self.Wab)
                
        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                W0 = self.initWeights(j_pop, i_pop) # (pre, post)
                
                self.Wab.weight.data[self.csumNa[j_pop] : self.csumNa[j_pop + 1],
                                     self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = W0
                
        # Here we store the constant external input in the bias
        for i_pop in range(self.N_POP):
            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
        
        set_seed(0)
        
        
    def update_rec_input(self, rates):
        '''Dynamics of the recurrent inputs'''
        # rec_input = torch.zeros((self.N_POP, self.N_NEURON), dtype=self.FLOAT, device=self.device)

        # y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        rec_input = self.Wab(rates)
        
        # rec_inputs = self.EXP_DT_TAU * rates + self.DT_TAU * Activation()(net_input)
        
        return rec_input

    def update_net_input(self, rec_input):
        '''Updating the net input into the neurons'''
        
        noise = self.ff_normal.sample((self.N_NEURON,))
        net_input = noise + rec_input
        
        return net_input
    
    def update_rates(self, rates, net_input):
        '''Dynamics of the rates'''
        # using array slices is faster than indices
        if self.RATE_DYN:
            rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation()(net_input)
        else:
            rates = Activation()(net_input)
        
        return rates
    
    def forward(self, rates):
        '''This is the main function of the class'''
        rec_input = self.update_rec_input(rates)
        net_input = self.update_net_input(rec_input)
        rates = self.update_rates(rates, net_input)

        return rates
    
    def print_activity(self, step, rates):

        times = np.round((step - self.N_STEADY) / self.N_STEPS * self.DURATION, 2)
        
        activity = []
        
        activity.append(np.round(torch.mean(rates[:self.csumNa[1]]).cpu().detach().numpy(), 2))

        if self.N_POP > 1:
            activity.append(np.round(torch.mean(rates[self.csumNa[1]:self.csumNa[2]]).cpu().detach().numpy(), 2))
        
        if self.N_POP > 2:
            activity.append(np.round(torch.mean(rates[self.csumNa[2]:]).cpu().detach().numpy(), 2))

        print(
            \"times (s)\",
            np.round(times, 2),
            \"rates (Hz)\",
            activity,
        )
    
    def run(self):
        result = []
        # init rates
        hidden = self.initRates()

        start = perf_counter()
        
        self.N_STEPS = int(self.DURATION / self.DT)
        self.N_STEADY = int(self.T_STEADY / self.DT)
        self.N_WINDOW = int(self.T_WINDOW / self.DT)
        self.N_STIM_ON = int(self.T_STIM_ON / self.DT)
        self.N_STIM_OFF = int(self.T_STIM_OFF / self.DT)

        with torch.no_grad():
        
            for step in range(self.N_STEPS + self.N_STEADY):
                self.update_stim(step)
                hidden = self.forward(hidden)
            
                if step >= self.N_STEADY+1:
                    if step % self.N_WINDOW == 0:
                        if self.VERBOSE:
                            self.print_activity(step - self.N_STEADY, hidden)
                        
                        result.append(hidden.cpu().detach().numpy())
        
        result = np.array(result)
        print('result', result.shape)
        
        # self.theta = get_theta(self.ksi[1].cpu(), self.ksi[0].cpu(), GM=1, IF_NORM=1)
        # print(self.theta.shape)

        # result = result[:, self.theta.argsort()]
        # print('result', result.shape)
        
        print('Saving rates to:', self.DATA_PATH + self.FILE_NAME + '.npy')
        np.save(self.DATA_PATH + self.FILE_NAME + '.npy', result)
        
        for obj in gc.get_objects():
            if torch.is_tensor(obj):
                del obj
        
        # Manually triggering the garbage collector afterwards
        gc.collect()
        torch.cuda.empty_cache()
        
        end = perf_counter()

        print(\"Elapsed (with compilation) = {}s\".format((end - start)))

        return result

    def loadConfig(self, conf_file, sim_name, repo_root, **kwargs):
        # Loading configuration file
        conf_path = repo_root + '/conf/'+ conf_file
        print('Loading config from', conf_path)
        param = safe_load(open(conf_path, \"r\"))

        param[\"FILE_NAME\"] = sim_name
        param.update(kwargs)

        for k, v in param.items():
            setattr(self, k, v)

        self.DATA_PATH = repo_root + \"/data/simul/\"
        self.MAT_PATH = repo_root + \"/data/matrix/\"

        if not os.path.exists(self.DATA_PATH):
            os.makedirs(self.DATA_PATH)

        if not os.path.exists(self.MAT_PATH):
            os.makedirs(self.MAT_PATH)

        if self.FLOAT_PRECISION == 32:
            self.FLOAT = torch.float
        else:
            self.FLOAT = torch.float64
        
        self.device = torch.device(self.DEVICE)
    
    def initRates(self):
        return torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)
    
    def initWeights(self, i_pop, j_pop):
        
        Na = self.Na[i_pop]
        Nb = self.Na[j_pop]
        Kb = self.Ka[j_pop]
        
        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)
        
        if 'lr' in self.STRUCTURE[i_pop, j_pop]:
            
            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)
            
            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)

            
            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T
            
            # while torch.abs(self.ksi[0] @ self.ksi[1] - self.LR_COV) > .01:
            #     multivariate_normal = MultivariateNormal(mean, covariance)            
            #     self.ksi = multivariate_normal.sample((Nb,)).T
            
            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', torch.cov(self.ksi))
            
            Pij = (1.0 + self.KAPPA[i_pop, j_pop]
                   * (torch.outer(self.ksi[0], self.ksi[0])
                      + torch.outer(self.ksi[1], self.ksi[1]))
                   / torch.sqrt(self.Ka[j_pop]))
            
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0
            
            if self.VERBOSE:
                print('Pij', Pij.shape)
            
        if 'cos' in self.STRUCTURE[i_pop, j_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na),
                                 dtype=self.FLOAT, device=self.device)
            
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb),
                               dtype=self.FLOAT, device=self.device)
            
            i, j = torch.meshgrid(torch.arange(Na, device=self.device),
                                  torch.arange(Nb, device=self.device),
                                  indexing=\"ij\")
            
            theta_diff = theta[i] - phi[j]
            
            if 'spec' in self.STRUCTURE[i_pop, j_pop]:
                self.KAPPA[i_pop, j_pop] = self.KAPPA[i_pop, j_pop] / torch.sqrt(Kb)
                
            Pij = (1.0 + 2.0 * self.KAPPA[i_pop, j_pop]
                   * torch.cos(theta_diff - self.PHASE))

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')
            
            Cij = (self.Jab[i_pop, j_pop]
                   * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij))

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')
                
            Cij = self.Jab[i_pop, j_pop] * Pij / float(Nb)
            
            if self.SIGMA[i_pop, j_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[i_pop, j_pop])
                
                Hij = torch.normal(0, self.SIGMA[i_pop, j_pop],
                                   size=(Na, Nb), dtype=self.FLOAT, device=self.device)
                Cij = Cij + Hij / float(Nb)
                
        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[i_pop, j_pop]:
                if \"spec\" in self.STRUCTURE[i_pop, j_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[i_pop, j_pop])
            elif \"lr\" in self.STRUCTURE[i_pop, j_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                
        return Cij

    def initConst(self):
        self.Na = []
        self.Ka = []

        if 'all2all' in self.CONNECTIVITY:
            self.K = 1.0
        
        for i_pop in range(self.N_POP):
            self.Na.append(int(self.N_NEURON * self.frac[i_pop]))
            self.Ka.append(self.K * self.frac[i_pop])
            # self.Ka.append(self.K)
        
        self.Na = torch.tensor(self.Na, dtype=torch.int, device=self.device)
        self.Ka = torch.tensor(self.Ka, dtype=self.FLOAT, device=self.device)
        self.csumNa = torch.cat((torch.tensor([0], device=self.device), torch.cumsum(self.Na, dim=0)))
        
        if self.VERBOSE:
            print(\"Na\", self.Na, \"Ka\", self.Ka, \"csumNa\", self.csumNa)

        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)
        
        self.EXP_DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        self.DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        
        for i_pop in range(self.N_POP):
            self.EXP_DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.exp(-self.DT / self.TAU[i_pop])
            self.DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = self.DT / self.TAU[i_pop]
        
        # self.EXP_DT_TAU = []
        # self.DT_TAU = []
        
        # for i_pop in range(self.N_POP):
        #     self.EXP_DT_TAU.append(np.exp(-self.DT / self.TAU[i_pop]))
        #     self.DT_TAU.append(self.DT / self.TAU[i_pop])
        
        # self.DT_TAU = torch.tensor(self.DT_TAU, dtype=self.FLOAT, device=self.device)
        # self.EXP_DT_TAU = torch.tensor(self.EXP_DT_TAU, dtype=self.FLOAT, device=self.device)

        
        if self.VERBOSE:
            print(\"DT\", self.DT, \"TAU\", self.TAU)
        
        # if self.VERBOSE:
        #     print(\"EXP_DT_TAU\", self.EXP_DT_TAU, \"DT_TAU\", self.DT_TAU)
        
        self.STRUCTURE = np.array(self.STRUCTURE).reshape(self.N_POP, self.N_POP)
        self.SIGMA = torch.tensor(self.SIGMA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.KAPPA = torch.tensor(self.KAPPA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.PHASE = torch.tensor(self.PHASE * torch.pi / 180.0, dtype=self.FLOAT, device=self.device)
        
        # if self.VERBOSE:
        #     print(self.STRUCTURE)
        #     print(self.SIGMA)
        #     print(self.KAPPA)
        #     print(self.PHASE)


    def scaleParam(self):

        # scaling recurrent weights Jab
        if self.VERBOSE:
            print(\"Jab\", self.Jab)
            
        self.Jab = torch.tensor(self.Jab, dtype=self.FLOAT, device=self.device).reshape(self.N_POP, self.N_POP) * self.GAIN

        for i_pop in range(self.N_POP):
            self.Jab[:, i_pop] = self.Jab[:, i_pop] / torch.sqrt(self.Ka[i_pop])

        # if self.VERBOSE:
        #     print(\"scaled Jab\", self.Jab)

        # scaling FF weights
        if self.VERBOSE:
            print(\"Ja0\", self.Ja0)
        
        self.Ja0 = torch.tensor(self.Ja0, dtype=self.FLOAT, device=self.device)
        self.Ja0 = self.Ja0 * torch.sqrt(self.Ka[0]) * self.M0
        
        # if self.VERBOSE:
        #     print(\"scaled Ja0\", self.Ja0)
        
        self.VAR_FF = torch.sqrt(torch.tensor(self.VAR_FF, dtype=self.FLOAT, device=self.device))
        ff_mean = torch.tensor(0.0, dtype=self.FLOAT, device=self.device)
        self.ff_normal = Normal(ff_mean, self.VAR_FF[0])
        
    def update_stim(self, step):
        \"\"\"Perturb the inputs based on the simulus parameters.\"\"\"
        
        if step == 0:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(0.0)
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(0.0)
                if self.K !=1 and self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
        
        if step == self.N_STIM_ON:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i])
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i])
        
        if step == self.N_STIM_ON and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM ON\")
            
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
            
            # if self.PHI0 == 0:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[0] * self.I0[0] * self.M0)
            # if self.PHI0 == 180:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[0] * self.I0[0] * self.M0)
            
            # if self.PHI0 == 90:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[1] * self.I0[0] * self.M0)
            # if self.PHI0 == 270:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[1] * self.I0[0] * self.M0)
                            
            
        if step == self.N_STIM_OFF and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM OFF\")
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0]

            # for i in range(self.N_POP):
            #     self.Wab[i, i].bias.data.fill_(self.Ja0[i])
        
    def stimFunc(self, i_pop):
        \"\"\"Stimulus shape\"\"\"
        theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(self.Na[i_pop]), dtype=self.FLOAT, device=self.device)
        return self.I0[i_pop] * (1.0 + self.SIGMA0 * torch.cos(theta - self.PHI0 * torch.pi / 180.0)) * torch.sqrt(self.Ka[0]) * self.M0
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 10 (fontified t) 10 16 (face tree-sitter-hl-face:keyword fontified t) 16 20 (fontified t) 20 26 (face tree-sitter-hl-face:keyword fontified t) 26 33 (fontified t) 33 35 (face tree-sitter-hl-face:keyword fontified t) 35 40 (fontified t) 40 44 (face tree-sitter-hl-face:keyword fontified t) 44 50 (fontified t) 50 56 (face tree-sitter-hl-face:keyword fontified t) 56 67 (fontified t) 67 71 (face tree-sitter-hl-face:keyword fontified t) 71 77 (fontified t) 77 83 (face tree-sitter-hl-face:keyword fontified t) 83 98 (fontified t) 98 104 (face tree-sitter-hl-face:keyword fontified t) 104 111 (fontified t) 111 115 (face tree-sitter-hl-face:keyword fontified t) 115 122 (fontified t) 122 128 (face tree-sitter-hl-face:keyword fontified t) 128 132 (fontified t) 132 136 (face tree-sitter-hl-face:keyword fontified t) 136 157 (fontified t) 157 163 (face tree-sitter-hl-face:keyword fontified t) 163 164 (fontified t) 164 170 (face tree-sitter-hl-face:constructor fontified t) 170 172 (fontified t) 172 190 (face tree-sitter-hl-face:constructor fontified t) 190 192 (fontified t) 192 196 (face tree-sitter-hl-face:keyword fontified t) 196 207 (fontified t) 207 213 (face tree-sitter-hl-face:keyword fontified t) 213 234 (fontified t) 234 238 (face tree-sitter-hl-face:keyword fontified t) 238 254 (fontified t) 254 260 (face tree-sitter-hl-face:keyword fontified t) 260 261 (fontified t) 261 271 (face tree-sitter-hl-face:constructor fontified t) 271 272 (fontified t) 272 276 (face tree-sitter-hl-face:keyword fontified t) 276 292 (fontified t) 292 298 (face tree-sitter-hl-face:keyword fontified t) 298 299 (fontified t) 299 308 (face tree-sitter-hl-face:constructor fontified t) 308 310 (fontified t) 310 316 (face tree-sitter-hl-face:keyword fontified t) 316 335 (fontified t) 335 349 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 349 350 (face (rainbow-delimiters-depth-1-face) fontified t) 350 351 (face tree-sitter-hl-face:string fontified t) 351 357 (face tree-sitter-hl-face:string fontified t) 357 358 (face tree-sitter-hl-face:string fontified t) 358 359 (face (rainbow-delimiters-depth-1-face) fontified t) 359 362 (fontified t) 362 367 (face tree-sitter-hl-face:keyword fontified t) 367 368 (fontified t) 368 375 (face tree-sitter-hl-face:constructor fontified t) 375 376 (face (rainbow-delimiters-depth-1-face) fontified t) 376 379 (fontified t) 379 385 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 385 386 (face (rainbow-delimiters-depth-1-face) fontified t) 386 392 (fontified t) 392 395 (face tree-sitter-hl-face:keyword fontified t) 395 396 (fontified t) 396 404 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 404 405 (face (rainbow-delimiters-depth-1-face) fontified t) 405 409 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 409 411 (fontified t) 411 420 (face tree-sitter-hl-face:variable.parameter fontified t) 420 422 (fontified t) 422 430 (face tree-sitter-hl-face:variable.parameter fontified t) 430 432 (fontified t) 432 441 (face tree-sitter-hl-face:variable.parameter fontified t) 441 443 (fontified t) 443 445 (face tree-sitter-hl-face:operator fontified t) 445 451 (face tree-sitter-hl-face:variable.parameter fontified t) 451 452 (face (rainbow-delimiters-depth-1-face) fontified t) 452 462 (fontified t) 462 467 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 467 468 (face (rainbow-delimiters-depth-1-face) fontified t) 468 469 (face (rainbow-delimiters-depth-1-face) fontified t) 469 470 (fontified t) 470 478 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 478 479 (face (rainbow-delimiters-depth-1-face) fontified t) 479 480 (face (rainbow-delimiters-depth-1-face) fontified t) 480 490 (fontified t) 490 507 (face tree-sitter-hl-face:comment fontified t) 507 516 (fontified t) 516 520 (face tree-sitter-hl-face:keyword fontified t) 520 521 (fontified t) 521 531 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 531 532 (face (rainbow-delimiters-depth-1-face) fontified t) 532 564 (fontified t) 564 566 (face tree-sitter-hl-face:operator fontified t) 566 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-1-face) fontified t) 573 574 (fontified t) 574 583 (fontified t) 583 593 (face tree-sitter-hl-face:comment fontified t) 593 602 (fontified t) 602 606 (face tree-sitter-hl-face:keyword fontified t) 606 607 (fontified t) 607 616 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 616 617 (face (rainbow-delimiters-depth-1-face) fontified t) 617 618 (face (rainbow-delimiters-depth-1-face) fontified t) 618 628 (fontified t) 628 646 (face tree-sitter-hl-face:comment fontified t) 646 655 (fontified t) 655 659 (face tree-sitter-hl-face:keyword fontified t) 659 660 (fontified t) 660 670 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 670 671 (face (rainbow-delimiters-depth-1-face) fontified t) 671 672 (face (rainbow-delimiters-depth-1-face) fontified t) 672 682 (fontified t) 682 709 (face tree-sitter-hl-face:comment fontified t) 709 718 (fontified t) 718 726 (face tree-sitter-hl-face:function.call fontified t) 726 727 (face (rainbow-delimiters-depth-1-face) fontified t) 727 731 (face tree-sitter-hl-face:keyword fontified t) 731 732 (fontified t) 732 736 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 736 737 (face (rainbow-delimiters-depth-1-face) fontified t) 737 755 (fontified t) 755 805 (face tree-sitter-hl-face:comment fontified t) 805 814 (fontified t) 814 873 (face tree-sitter-hl-face:comment fontified t) 873 882 (fontified t) 882 929 (face tree-sitter-hl-face:comment fontified t) 929 947 (fontified t) 947 951 (face tree-sitter-hl-face:keyword fontified t) 951 952 (fontified t) 952 955 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 955 956 (fontified t) 956 957 (face tree-sitter-hl-face:operator fontified t) 957 961 (fontified t) 961 967 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 967 968 (face (rainbow-delimiters-depth-1-face) fontified t) 968 972 (face tree-sitter-hl-face:keyword fontified t) 972 973 (fontified t) 973 981 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 981 983 (fontified t) 983 987 (face tree-sitter-hl-face:keyword fontified t) 987 988 (fontified t) 988 996 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 996 998 (fontified t) 998 1002 (face tree-sitter-hl-face:label fontified t) 1002 1003 (face tree-sitter-hl-face:operator fontified t) 1003 1007 (face tree-sitter-hl-face:constant.builtin fontified t) 1007 1009 (fontified t) 1009 1014 (face tree-sitter-hl-face:label fontified t) 1014 1015 (face tree-sitter-hl-face:operator fontified t) 1015 1019 (face tree-sitter-hl-face:keyword fontified t) 1019 1020 (fontified t) 1020 1025 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1025 1027 (fontified t) 1027 1033 (face tree-sitter-hl-face:label fontified t) 1033 1034 (face tree-sitter-hl-face:operator fontified t) 1034 1038 (face tree-sitter-hl-face:keyword fontified t) 1038 1039 (fontified t) 1039 1045 (face tree-sitter-hl-face:property fontified t) 1045 1046 (face (rainbow-delimiters-depth-1-face) fontified t) 1046 1055 (fontified t) 1055 1060 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1060 1061 (face (rainbow-delimiters-depth-1-face) fontified t) 1061 1065 (face tree-sitter-hl-face:keyword fontified t) 1065 1066 (fontified t) 1066 1069 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1069 1070 (face (rainbow-delimiters-depth-1-face) fontified t) 1070 1096 (fontified t) 1096 1099 (face tree-sitter-hl-face:keyword fontified t) 1099 1100 (fontified t) 1100 1105 (face tree-sitter-hl-face:variable fontified t) 1105 1106 (fontified t) 1106 1108 (face tree-sitter-hl-face:operator fontified t) 1108 1109 (fontified t) 1109 1114 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1114 1115 (face (rainbow-delimiters-depth-1-face) fontified t) 1115 1119 (face tree-sitter-hl-face:keyword fontified t) 1119 1120 (fontified t) 1120 1125 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1125 1126 (face (rainbow-delimiters-depth-1-face) fontified t) 1126 1140 (fontified t) 1140 1143 (face tree-sitter-hl-face:keyword fontified t) 1143 1144 (fontified t) 1144 1149 (face tree-sitter-hl-face:variable fontified t) 1149 1150 (fontified t) 1150 1152 (face tree-sitter-hl-face:operator fontified t) 1152 1153 (fontified t) 1153 1158 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1158 1159 (face (rainbow-delimiters-depth-1-face) fontified t) 1159 1163 (face tree-sitter-hl-face:keyword fontified t) 1163 1164 (fontified t) 1164 1169 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1169 1170 (face (rainbow-delimiters-depth-1-face) fontified t) 1170 1172 (fontified t) 1172 1188 (fontified t) 1188 1190 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 1190 1191 (fontified t) 1191 1192 (face tree-sitter-hl-face:operator fontified t) 1192 1193 (fontified t) 1193 1197 (face tree-sitter-hl-face:keyword fontified t) 1197 1198 (fontified t) 1198 1209 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 1209 1210 (face (rainbow-delimiters-depth-1-face) fontified t) 1210 1211 (fontified t) 1211 1217 (fontified t) 1217 1218 (fontified t) 1218 1222 (fontified t) 1222 1223 (face (rainbow-delimiters-depth-1-face) fontified t) 1223 1224 (fontified t) 1224 1237 (face tree-sitter-hl-face:comment fontified t) 1237 1238 (fontified t) 1238 1241 (fontified t) 1241 1249 (fontified t) 1249 1254 (fontified t) 1254 1255 (fontified t) 1255 1271 (fontified t) 1271 1275 (face tree-sitter-hl-face:keyword fontified t) 1275 1276 (fontified t) 1276 1279 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1279 1280 (fontified t) 1280 1286 (face tree-sitter-hl-face:property fontified t) 1286 1287 (fontified t) 1287 1291 (face tree-sitter-hl-face:property fontified t) 1291 1292 (face (rainbow-delimiters-depth-1-face) fontified t) 1292 1296 (face tree-sitter-hl-face:keyword fontified t) 1296 1297 (fontified t) 1297 1303 (face tree-sitter-hl-face:property fontified t) 1303 1304 (face (rainbow-delimiters-depth-2-face) fontified t) 1304 1305 (fontified t) 1305 1309 (fontified t) 1309 1310 (face (rainbow-delimiters-depth-2-face) fontified t) 1310 1313 (fontified t) 1313 1317 (face tree-sitter-hl-face:keyword fontified t) 1317 1318 (fontified t) 1318 1324 (face tree-sitter-hl-face:property fontified t) 1324 1325 (face (rainbow-delimiters-depth-2-face) fontified t) 1325 1326 (fontified t) 1326 1331 (fontified t) 1331 1332 (face tree-sitter-hl-face:operator fontified t) 1332 1333 (fontified t) 1333 1334 (face tree-sitter-hl-face:number fontified t) 1334 1335 (face (rainbow-delimiters-depth-2-face) fontified t) 1335 1337 (fontified t) 1337 1374 (fontified t) 1374 1378 (face tree-sitter-hl-face:keyword fontified t) 1378 1379 (fontified t) 1379 1385 (face tree-sitter-hl-face:property fontified t) 1385 1386 (face (rainbow-delimiters-depth-2-face) fontified t) 1386 1387 (fontified t) 1387 1391 (fontified t) 1391 1392 (face (rainbow-delimiters-depth-2-face) fontified t) 1392 1395 (fontified t) 1395 1399 (face tree-sitter-hl-face:keyword fontified t) 1399 1400 (fontified t) 1400 1406 (face tree-sitter-hl-face:property fontified t) 1406 1407 (face (rainbow-delimiters-depth-2-face) fontified t) 1407 1408 (fontified t) 1408 1413 (fontified t) 1413 1414 (face tree-sitter-hl-face:operator fontified t) 1414 1415 (fontified t) 1415 1416 (face tree-sitter-hl-face:number fontified t) 1416 1417 (face (rainbow-delimiters-depth-2-face) fontified t) 1417 1418 (face (rainbow-delimiters-depth-1-face) fontified t) 1418 1419 (fontified t) 1419 1420 (face tree-sitter-hl-face:operator fontified t) 1420 1421 (fontified t) 1421 1423 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 1423 1424 (fontified t) 1424 1449 (fontified t) 1449 1483 (face tree-sitter-hl-face:comment fontified t) 1483 1500 (face tree-sitter-hl-face:comment fontified t) 1500 1504 (face tree-sitter-hl-face:comment fontified t) 1504 1513 (fontified t) 1513 1516 (face tree-sitter-hl-face:keyword fontified t) 1516 1517 (fontified t) 1517 1522 (face tree-sitter-hl-face:variable fontified t) 1522 1523 (fontified t) 1523 1525 (face tree-sitter-hl-face:operator fontified t) 1525 1526 (fontified t) 1526 1531 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1531 1532 (face (rainbow-delimiters-depth-1-face) fontified t) 1532 1536 (face tree-sitter-hl-face:keyword fontified t) 1536 1537 (fontified t) 1537 1542 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1542 1543 (face (rainbow-delimiters-depth-1-face) fontified t) 1543 1557 (fontified t) 1557 1561 (face tree-sitter-hl-face:keyword fontified t) 1561 1562 (fontified t) 1562 1565 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1565 1566 (fontified t) 1566 1570 (face tree-sitter-hl-face:property fontified t) 1570 1571 (fontified t) 1571 1575 (face tree-sitter-hl-face:property fontified t) 1575 1576 (face (rainbow-delimiters-depth-1-face) fontified t) 1576 1580 (face tree-sitter-hl-face:keyword fontified t) 1580 1581 (fontified t) 1581 1587 (face tree-sitter-hl-face:property fontified t) 1587 1588 (face (rainbow-delimiters-depth-2-face) fontified t) 1588 1593 (fontified t) 1593 1594 (face (rainbow-delimiters-depth-2-face) fontified t) 1594 1597 (fontified t) 1597 1601 (face tree-sitter-hl-face:keyword fontified t) 1601 1602 (fontified t) 1602 1608 (face tree-sitter-hl-face:property fontified t) 1608 1609 (face (rainbow-delimiters-depth-2-face) fontified t) 1609 1615 (fontified t) 1615 1616 (face tree-sitter-hl-face:operator fontified t) 1616 1617 (fontified t) 1617 1618 (face tree-sitter-hl-face:number fontified t) 1618 1619 (face (rainbow-delimiters-depth-2-face) fontified t) 1619 1620 (face (rainbow-delimiters-depth-1-face) fontified t) 1620 1621 (fontified t) 1621 1626 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 1626 1627 (face (rainbow-delimiters-depth-1-face) fontified t) 1627 1631 (face tree-sitter-hl-face:keyword fontified t) 1631 1632 (fontified t) 1632 1635 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1635 1636 (face (rainbow-delimiters-depth-2-face) fontified t) 1636 1641 (fontified t) 1641 1642 (face (rainbow-delimiters-depth-2-face) fontified t) 1642 1643 (face (rainbow-delimiters-depth-1-face) fontified t) 1643 1661 (fontified t) 1661 1669 (face tree-sitter-hl-face:function.call fontified t) 1669 1670 (face (rainbow-delimiters-depth-1-face) fontified t) 1670 1671 (face tree-sitter-hl-face:number fontified t) 1671 1672 (face (rainbow-delimiters-depth-1-face) fontified t) 1672 1695 (fontified t) 1695 1698 (face tree-sitter-hl-face:keyword fontified t) 1698 1699 (fontified t) 1699 1715 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 1715 1716 (face (rainbow-delimiters-depth-1-face) fontified t) 1716 1720 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 1720 1722 (fontified t) 1722 1727 (face tree-sitter-hl-face:variable.parameter fontified t) 1727 1728 (face (rainbow-delimiters-depth-1-face) fontified t) 1728 1738 (fontified t) 1738 1740 (face tree-sitter-hl-face:string fontified t) 1740 1741 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 1741 1773 (face tree-sitter-hl-face:string fontified t) 1773 1774 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 1774 1776 (face tree-sitter-hl-face:string fontified t) 1776 1785 (fontified t) 1785 1877 (face tree-sitter-hl-face:comment fontified t) 1877 1887 (fontified t) 1887 1934 (face tree-sitter-hl-face:comment fontified t) 1934 1943 (fontified t) 1943 1952 (face tree-sitter-hl-face:variable fontified t) 1952 1953 (fontified t) 1953 1954 (face tree-sitter-hl-face:operator fontified t) 1954 1955 (fontified t) 1955 1959 (face tree-sitter-hl-face:keyword fontified t) 1959 1960 (fontified t) 1960 1963 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 1963 1964 (face (rainbow-delimiters-depth-1-face) fontified t) 1964 1969 (fontified t) 1969 1970 (face (rainbow-delimiters-depth-1-face) fontified t) 1970 1988 (fontified t) 1988 2057 (face tree-sitter-hl-face:comment fontified t) 2057 2066 (face tree-sitter-hl-face:comment fontified t) 2066 2084 (fontified t) 2084 2090 (face tree-sitter-hl-face:keyword fontified t) 2090 2106 (fontified t) 2106 2109 (face tree-sitter-hl-face:keyword fontified t) 2109 2110 (fontified t) 2110 2126 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2126 2127 (face (rainbow-delimiters-depth-1-face) fontified t) 2127 2131 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2131 2133 (fontified t) 2133 2142 (face tree-sitter-hl-face:variable.parameter fontified t) 2142 2143 (face (rainbow-delimiters-depth-1-face) fontified t) 2143 2153 (fontified t) 2153 2155 (face tree-sitter-hl-face:string fontified t) 2155 2156 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2156 2195 (face tree-sitter-hl-face:string fontified t) 2195 2196 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2196 2198 (face tree-sitter-hl-face:string fontified t) 2198 2216 (fontified t) 2216 2221 (face tree-sitter-hl-face:variable fontified t) 2221 2222 (fontified t) 2222 2223 (face tree-sitter-hl-face:operator fontified t) 2223 2224 (fontified t) 2224 2228 (face tree-sitter-hl-face:keyword fontified t) 2228 2229 (fontified t) 2229 2238 (face tree-sitter-hl-face:property fontified t) 2238 2239 (fontified t) 2239 2245 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2245 2246 (face (rainbow-delimiters-depth-1-face) fontified t) 2246 2247 (face (rainbow-delimiters-depth-2-face) fontified t) 2247 2251 (face tree-sitter-hl-face:keyword fontified t) 2251 2252 (fontified t) 2252 2260 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2260 2261 (fontified t) 2261 2262 (face (rainbow-delimiters-depth-2-face) fontified t) 2262 2263 (face (rainbow-delimiters-depth-1-face) fontified t) 2263 2272 (fontified t) 2272 2281 (face tree-sitter-hl-face:variable fontified t) 2281 2282 (fontified t) 2282 2283 (face tree-sitter-hl-face:operator fontified t) 2283 2290 (fontified t) 2290 2291 (face tree-sitter-hl-face:operator fontified t) 2291 2319 (fontified t) 2319 2325 (face tree-sitter-hl-face:keyword fontified t) 2325 2345 (fontified t) 2345 2348 (face tree-sitter-hl-face:keyword fontified t) 2348 2349 (fontified t) 2349 2361 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2361 2362 (face (rainbow-delimiters-depth-1-face) fontified t) 2362 2366 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2366 2368 (fontified t) 2368 2373 (face tree-sitter-hl-face:variable.parameter fontified t) 2373 2375 (fontified t) 2375 2384 (face tree-sitter-hl-face:variable.parameter fontified t) 2384 2385 (face (rainbow-delimiters-depth-1-face) fontified t) 2385 2395 (fontified t) 2395 2397 (face tree-sitter-hl-face:string fontified t) 2397 2398 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2398 2419 (face tree-sitter-hl-face:string fontified t) 2419 2420 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2420 2422 (face tree-sitter-hl-face:string fontified t) 2422 2431 (fontified t) 2431 2474 (face tree-sitter-hl-face:comment fontified t) 2474 2483 (fontified t) 2483 2485 (face tree-sitter-hl-face:keyword fontified t) 2485 2486 (fontified t) 2486 2490 (face tree-sitter-hl-face:keyword fontified t) 2490 2491 (fontified t) 2491 2499 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2499 2501 (fontified t) 2501 2513 (fontified t) 2513 2518 (face tree-sitter-hl-face:variable fontified t) 2518 2519 (fontified t) 2519 2520 (face tree-sitter-hl-face:operator fontified t) 2520 2521 (fontified t) 2521 2525 (face tree-sitter-hl-face:keyword fontified t) 2525 2526 (fontified t) 2526 2536 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2536 2537 (fontified t) 2537 2538 (face tree-sitter-hl-face:operator fontified t) 2538 2545 (fontified t) 2545 2546 (face tree-sitter-hl-face:operator fontified t) 2546 2547 (fontified t) 2547 2551 (face tree-sitter-hl-face:keyword fontified t) 2551 2552 (fontified t) 2552 2558 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2558 2559 (fontified t) 2559 2560 (face tree-sitter-hl-face:operator fontified t) 2560 2561 (fontified t) 2561 2571 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 2571 2572 (face (rainbow-delimiters-depth-1-face) fontified t) 2572 2573 (face (rainbow-delimiters-depth-1-face) fontified t) 2573 2574 (face (rainbow-delimiters-depth-1-face) fontified t) 2574 2583 (fontified t) 2583 2584 (face (rainbow-delimiters-depth-1-face) fontified t) 2584 2585 (fontified t) 2585 2586 (fontified t) 2586 2593 (fontified t) 2593 2597 (face tree-sitter-hl-face:keyword fontified t) 2597 2599 (fontified t) 2599 2611 (fontified t) 2611 2616 (face tree-sitter-hl-face:variable fontified t) 2616 2617 (fontified t) 2617 2618 (face tree-sitter-hl-face:operator fontified t) 2618 2619 (fontified t) 2619 2629 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 2629 2630 (face (rainbow-delimiters-depth-1-face) fontified t) 2630 2631 (face (rainbow-delimiters-depth-1-face) fontified t) 2631 2632 (face (rainbow-delimiters-depth-1-face) fontified t) 2632 2641 (fontified t) 2641 2642 (face (rainbow-delimiters-depth-1-face) fontified t) 2642 2660 (fontified t) 2660 2666 (face tree-sitter-hl-face:keyword fontified t) 2666 2682 (fontified t) 2682 2685 (face tree-sitter-hl-face:keyword fontified t) 2685 2686 (fontified t) 2686 2693 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2693 2694 (face (rainbow-delimiters-depth-1-face) fontified t) 2694 2698 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2698 2700 (fontified t) 2700 2705 (face tree-sitter-hl-face:variable.parameter fontified t) 2705 2706 (face (rainbow-delimiters-depth-1-face) fontified t) 2706 2707 (fontified t) 2707 2716 (fontified t) 2716 2718 (face tree-sitter-hl-face:string fontified t) 2718 2719 (syntax-table (15) face tree-sitter-hl-face:string fontified t) 2719 2757 (face tree-sitter-hl-face:string fontified t) 2757 2758 (syntax-table (15) face tree-sitter-hl-face:string fontified t) 2758 2760 (face tree-sitter-hl-face:string fontified t) 2760 2769 (fontified t) 2769 2778 (face tree-sitter-hl-face:variable fontified t) 2778 2779 (fontified t) 2779 2780 (face tree-sitter-hl-face:operator fontified t) 2780 2781 (fontified t) 2781 2785 (face tree-sitter-hl-face:keyword fontified t) 2785 2786 (fontified t) 2786 2792 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2792 2793 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2793 2802 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2802 2803 (face (rainbow-delimiters-depth-1-face) fontified t) 2803 2808 (fontified t) 2808 2809 (face (rainbow-delimiters-depth-1-face) fontified t) 2809 2818 (fontified t) 2818 2827 (face tree-sitter-hl-face:variable fontified t) 2827 2828 (fontified t) 2828 2829 (face tree-sitter-hl-face:operator fontified t) 2829 2830 (fontified t) 2830 2834 (face tree-sitter-hl-face:keyword fontified t) 2834 2835 (fontified t) 2835 2851 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2851 2852 (face (rainbow-delimiters-depth-1-face) fontified t) 2852 2861 (fontified t) 2861 2862 (face (rainbow-delimiters-depth-1-face) fontified t) 2862 2871 (fontified t) 2871 2876 (face tree-sitter-hl-face:variable fontified t) 2876 2877 (fontified t) 2877 2878 (face tree-sitter-hl-face:operator fontified t) 2878 2879 (fontified t) 2879 2883 (face tree-sitter-hl-face:keyword fontified t) 2883 2884 (fontified t) 2884 2896 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2896 2897 (face (rainbow-delimiters-depth-1-face) fontified t) 2897 2913 (fontified t) 2913 2914 (face (rainbow-delimiters-depth-1-face) fontified t) 2914 2924 (fontified t) 2924 2930 (face tree-sitter-hl-face:keyword fontified t) 2930 2946 (fontified t) 2946 2949 (face tree-sitter-hl-face:keyword fontified t) 2949 2950 (fontified t) 2950 2964 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2964 2965 (face (rainbow-delimiters-depth-1-face) fontified t) 2965 2969 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2969 2971 (fontified t) 2971 2975 (face tree-sitter-hl-face:variable.parameter fontified t) 2975 2977 (fontified t) 2977 2982 (face tree-sitter-hl-face:variable.parameter fontified t) 2982 2983 (face (rainbow-delimiters-depth-1-face) fontified t) 2983 2994 (fontified t) 2994 2999 (face tree-sitter-hl-face:variable fontified t) 2999 3000 (fontified t) 3000 3001 (face tree-sitter-hl-face:operator fontified t) 3001 3005 (fontified t) 3005 3010 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3010 3011 (face (rainbow-delimiters-depth-1-face) fontified t) 3011 3012 (face (rainbow-delimiters-depth-2-face) fontified t) 3012 3017 (fontified t) 3017 3018 (face tree-sitter-hl-face:operator fontified t) 3018 3019 (fontified t) 3019 3023 (face tree-sitter-hl-face:keyword fontified t) 3023 3024 (fontified t) 3024 3032 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3032 3033 (face (rainbow-delimiters-depth-2-face) fontified t) 3033 3034 (fontified t) 3034 3035 (face tree-sitter-hl-face:operator fontified t) 3035 3036 (fontified t) 3036 3040 (face tree-sitter-hl-face:keyword fontified t) 3040 3041 (fontified t) 3041 3048 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3048 3049 (fontified t) 3049 3050 (face tree-sitter-hl-face:operator fontified t) 3050 3051 (fontified t) 3051 3055 (face tree-sitter-hl-face:keyword fontified t) 3055 3056 (fontified t) 3056 3064 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3064 3066 (fontified t) 3066 3067 (face tree-sitter-hl-face:number fontified t) 3067 3068 (face (rainbow-delimiters-depth-1-face) fontified t) 3068 3078 (fontified t) 3078 3086 (fontified t) 3086 3094 (face tree-sitter-hl-face:variable fontified t) 3094 3095 (fontified t) 3095 3096 (face tree-sitter-hl-face:operator fontified t) 3096 3097 (fontified t) 3097 3098 (face (rainbow-delimiters-depth-1-face) fontified t) 3098 3099 (face (rainbow-delimiters-depth-1-face) fontified t) 3099 3100 (fontified t) 3100 3126 (fontified t) 3126 3132 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3132 3133 (face (rainbow-delimiters-depth-1-face) fontified t) 3133 3136 (fontified t) 3136 3141 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3141 3142 (face (rainbow-delimiters-depth-2-face) fontified t) 3142 3148 (fontified t) 3148 3152 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3152 3153 (face (rainbow-delimiters-depth-3-face) fontified t) 3153 3158 (fontified t) 3158 3159 (face (rainbow-delimiters-depth-4-face) fontified t) 3159 3160 (fontified t) 3160 3164 (face tree-sitter-hl-face:keyword fontified t) 3164 3165 (fontified t) 3165 3171 (face tree-sitter-hl-face:property fontified t) 3171 3172 (face (rainbow-delimiters-depth-5-face) fontified t) 3172 3173 (face tree-sitter-hl-face:number fontified t) 3173 3174 (face (rainbow-delimiters-depth-5-face) fontified t) 3174 3175 (face (rainbow-delimiters-depth-4-face) fontified t) 3175 3176 (face (rainbow-delimiters-depth-3-face) fontified t) 3176 3177 (fontified t) 3177 3180 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3180 3181 (face (rainbow-delimiters-depth-3-face) fontified t) 3181 3182 (face (rainbow-delimiters-depth-3-face) fontified t) 3182 3183 (fontified t) 3183 3189 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3189 3190 (face (rainbow-delimiters-depth-3-face) fontified t) 3190 3191 (face (rainbow-delimiters-depth-3-face) fontified t) 3191 3192 (fontified t) 3192 3197 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3197 3198 (face (rainbow-delimiters-depth-3-face) fontified t) 3198 3199 (face (rainbow-delimiters-depth-3-face) fontified t) 3199 3201 (fontified t) 3201 3202 (face tree-sitter-hl-face:number fontified t) 3202 3203 (face (rainbow-delimiters-depth-2-face) fontified t) 3203 3204 (face (rainbow-delimiters-depth-1-face) fontified t) 3204 3214 (fontified t) 3214 3216 (face tree-sitter-hl-face:keyword fontified t) 3216 3217 (fontified t) 3217 3221 (face tree-sitter-hl-face:keyword fontified t) 3221 3222 (fontified t) 3222 3227 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3227 3228 (fontified t) 3228 3229 (face tree-sitter-hl-face:operator fontified t) 3229 3230 (fontified t) 3230 3231 (face tree-sitter-hl-face:number fontified t) 3231 3254 (fontified t) 3254 3260 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3260 3261 (face (rainbow-delimiters-depth-1-face) fontified t) 3261 3264 (fontified t) 3264 3269 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3269 3270 (face (rainbow-delimiters-depth-2-face) fontified t) 3270 3276 (fontified t) 3276 3280 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3280 3281 (face (rainbow-delimiters-depth-3-face) fontified t) 3281 3286 (fontified t) 3286 3287 (face (rainbow-delimiters-depth-4-face) fontified t) 3287 3291 (face tree-sitter-hl-face:keyword fontified t) 3291 3292 (fontified t) 3292 3298 (face tree-sitter-hl-face:property fontified t) 3298 3299 (face (rainbow-delimiters-depth-5-face) fontified t) 3299 3300 (face tree-sitter-hl-face:number fontified t) 3300 3301 (face (rainbow-delimiters-depth-5-face) fontified t) 3301 3302 (fontified t) 3302 3306 (face tree-sitter-hl-face:keyword fontified t) 3306 3307 (fontified t) 3307 3313 (face tree-sitter-hl-face:property fontified t) 3313 3314 (face (rainbow-delimiters-depth-5-face) fontified t) 3314 3315 (face tree-sitter-hl-face:number fontified t) 3315 3316 (face (rainbow-delimiters-depth-5-face) fontified t) 3316 3317 (face (rainbow-delimiters-depth-4-face) fontified t) 3317 3318 (face (rainbow-delimiters-depth-3-face) fontified t) 3318 3319 (fontified t) 3319 3322 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3322 3323 (face (rainbow-delimiters-depth-3-face) fontified t) 3323 3324 (face (rainbow-delimiters-depth-3-face) fontified t) 3324 3325 (fontified t) 3325 3331 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3331 3332 (face (rainbow-delimiters-depth-3-face) fontified t) 3332 3333 (face (rainbow-delimiters-depth-3-face) fontified t) 3333 3334 (fontified t) 3334 3339 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3339 3340 (face (rainbow-delimiters-depth-3-face) fontified t) 3340 3341 (face (rainbow-delimiters-depth-3-face) fontified t) 3341 3343 (fontified t) 3343 3344 (face tree-sitter-hl-face:number fontified t) 3344 3345 (face (rainbow-delimiters-depth-2-face) fontified t) 3345 3346 (face (rainbow-delimiters-depth-1-face) fontified t) 3346 3364 (fontified t) 3364 3366 (face tree-sitter-hl-face:keyword fontified t) 3366 3367 (fontified t) 3367 3371 (face tree-sitter-hl-face:keyword fontified t) 3371 3372 (fontified t) 3372 3377 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3377 3378 (fontified t) 3378 3379 (face tree-sitter-hl-face:operator fontified t) 3379 3380 (fontified t) 3380 3381 (face tree-sitter-hl-face:number fontified t) 3381 3404 (fontified t) 3404 3410 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3410 3411 (face (rainbow-delimiters-depth-1-face) fontified t) 3411 3414 (fontified t) 3414 3419 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3419 3420 (face (rainbow-delimiters-depth-2-face) fontified t) 3420 3426 (fontified t) 3426 3430 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3430 3431 (face (rainbow-delimiters-depth-3-face) fontified t) 3431 3436 (fontified t) 3436 3437 (face (rainbow-delimiters-depth-4-face) fontified t) 3437 3441 (face tree-sitter-hl-face:keyword fontified t) 3441 3442 (fontified t) 3442 3448 (face tree-sitter-hl-face:property fontified t) 3448 3449 (face (rainbow-delimiters-depth-5-face) fontified t) 3449 3450 (face tree-sitter-hl-face:number fontified t) 3450 3451 (face (rainbow-delimiters-depth-5-face) fontified t) 3451 3452 (fontified t) 3452 3453 (face (rainbow-delimiters-depth-4-face) fontified t) 3453 3454 (face (rainbow-delimiters-depth-3-face) fontified t) 3454 3455 (fontified t) 3455 3458 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3458 3459 (face (rainbow-delimiters-depth-3-face) fontified t) 3459 3460 (face (rainbow-delimiters-depth-3-face) fontified t) 3460 3461 (fontified t) 3461 3467 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3467 3468 (face (rainbow-delimiters-depth-3-face) fontified t) 3468 3469 (face (rainbow-delimiters-depth-3-face) fontified t) 3469 3470 (fontified t) 3470 3475 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3475 3476 (face (rainbow-delimiters-depth-3-face) fontified t) 3476 3477 (face (rainbow-delimiters-depth-3-face) fontified t) 3477 3479 (fontified t) 3479 3480 (face tree-sitter-hl-face:number fontified t) 3480 3481 (face (rainbow-delimiters-depth-2-face) fontified t) 3481 3482 (face (rainbow-delimiters-depth-1-face) fontified t) 3482 3492 (fontified t) 3492 3497 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3497 3498 (face (rainbow-delimiters-depth-1-face) fontified t) 3498 3511 (fontified t) 3511 3512 (face tree-sitter-hl-face:string fontified t) 3512 3521 (face tree-sitter-hl-face:string fontified t) 3521 3522 (face tree-sitter-hl-face:string fontified t) 3522 3539 (fontified t) 3539 3544 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3544 3545 (face (rainbow-delimiters-depth-2-face) fontified t) 3545 3552 (fontified t) 3552 3553 (face tree-sitter-hl-face:number fontified t) 3553 3554 (face (rainbow-delimiters-depth-2-face) fontified t) 3554 3568 (fontified t) 3568 3569 (face tree-sitter-hl-face:string fontified t) 3569 3579 (face tree-sitter-hl-face:string fontified t) 3579 3580 (face tree-sitter-hl-face:string fontified t) 3580 3612 (fontified t) 3612 3613 (face (rainbow-delimiters-depth-1-face) fontified t) 3613 3623 (fontified t) 3623 3626 (face tree-sitter-hl-face:keyword fontified t) 3626 3627 (fontified t) 3627 3630 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 3630 3631 (face (rainbow-delimiters-depth-1-face) fontified t) 3631 3635 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 3635 3636 (face (rainbow-delimiters-depth-1-face) fontified t) 3636 3638 (fontified t) 3638 3646 (fontified t) 3646 3652 (face tree-sitter-hl-face:variable fontified t) 3652 3653 (fontified t) 3653 3654 (face tree-sitter-hl-face:operator fontified t) 3654 3655 (fontified t) 3655 3656 (face (rainbow-delimiters-depth-1-face) fontified t) 3656 3657 (face (rainbow-delimiters-depth-1-face) fontified t) 3657 3658 (fontified t) 3658 3666 (fontified t) 3666 3678 (face tree-sitter-hl-face:comment fontified t) 3678 3679 (fontified t) 3679 3687 (fontified t) 3687 3693 (face tree-sitter-hl-face:variable fontified t) 3693 3694 (fontified t) 3694 3695 (face tree-sitter-hl-face:operator fontified t) 3695 3696 (fontified t) 3696 3700 (face tree-sitter-hl-face:keyword fontified t) 3700 3701 (fontified t) 3701 3710 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3710 3711 (face (rainbow-delimiters-depth-1-face) fontified t) 3711 3712 (face (rainbow-delimiters-depth-1-face) fontified t) 3712 3713 (fontified t) 3713 3714 (fontified t) 3714 3722 (fontified t) 3722 3727 (face tree-sitter-hl-face:variable fontified t) 3727 3728 (fontified t) 3728 3729 (face tree-sitter-hl-face:operator fontified t) 3729 3730 (fontified t) 3730 3742 (face tree-sitter-hl-face:function.call fontified t) 3742 3743 (face (rainbow-delimiters-depth-1-face) fontified t) 3743 3744 (face (rainbow-delimiters-depth-1-face) fontified t) 3744 3762 (fontified t) 3762 3766 (face tree-sitter-hl-face:keyword fontified t) 3766 3767 (fontified t) 3767 3774 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3774 3775 (fontified t) 3775 3776 (face tree-sitter-hl-face:operator fontified t) 3776 3777 (fontified t) 3777 3780 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3780 3781 (face (rainbow-delimiters-depth-1-face) fontified t) 3781 3785 (face tree-sitter-hl-face:keyword fontified t) 3785 3786 (fontified t) 3786 3794 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3794 3795 (fontified t) 3795 3796 (face tree-sitter-hl-face:operator fontified t) 3796 3797 (fontified t) 3797 3801 (face tree-sitter-hl-face:keyword fontified t) 3801 3802 (fontified t) 3802 3804 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3804 3805 (face (rainbow-delimiters-depth-1-face) fontified t) 3805 3814 (fontified t) 3814 3818 (face tree-sitter-hl-face:keyword fontified t) 3818 3819 (fontified t) 3819 3827 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3827 3828 (fontified t) 3828 3829 (face tree-sitter-hl-face:operator fontified t) 3829 3830 (fontified t) 3830 3833 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3833 3834 (face (rainbow-delimiters-depth-1-face) fontified t) 3834 3838 (face tree-sitter-hl-face:keyword fontified t) 3838 3839 (fontified t) 3839 3847 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3847 3848 (fontified t) 3848 3849 (face tree-sitter-hl-face:operator fontified t) 3849 3850 (fontified t) 3850 3854 (face tree-sitter-hl-face:keyword fontified t) 3854 3855 (fontified t) 3855 3857 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3857 3858 (face (rainbow-delimiters-depth-1-face) fontified t) 3858 3867 (fontified t) 3867 3871 (face tree-sitter-hl-face:keyword fontified t) 3871 3872 (fontified t) 3872 3880 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3880 3881 (fontified t) 3881 3882 (face tree-sitter-hl-face:operator fontified t) 3882 3883 (fontified t) 3883 3886 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3886 3887 (face (rainbow-delimiters-depth-1-face) fontified t) 3887 3891 (face tree-sitter-hl-face:keyword fontified t) 3891 3892 (fontified t) 3892 3900 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3900 3901 (fontified t) 3901 3902 (face tree-sitter-hl-face:operator fontified t) 3902 3903 (fontified t) 3903 3907 (face tree-sitter-hl-face:keyword fontified t) 3907 3908 (fontified t) 3908 3910 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3910 3911 (face (rainbow-delimiters-depth-1-face) fontified t) 3911 3920 (fontified t) 3920 3924 (face tree-sitter-hl-face:keyword fontified t) 3924 3925 (fontified t) 3925 3934 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3934 3935 (fontified t) 3935 3936 (face tree-sitter-hl-face:operator fontified t) 3936 3937 (fontified t) 3937 3940 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3940 3941 (face (rainbow-delimiters-depth-1-face) fontified t) 3941 3945 (face tree-sitter-hl-face:keyword fontified t) 3945 3946 (fontified t) 3946 3955 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3955 3956 (fontified t) 3956 3957 (face tree-sitter-hl-face:operator fontified t) 3957 3958 (fontified t) 3958 3962 (face tree-sitter-hl-face:keyword fontified t) 3962 3963 (fontified t) 3963 3965 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3965 3966 (face (rainbow-delimiters-depth-1-face) fontified t) 3966 3975 (fontified t) 3975 3979 (face tree-sitter-hl-face:keyword fontified t) 3979 3980 (fontified t) 3980 3990 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3990 3991 (fontified t) 3991 3992 (face tree-sitter-hl-face:operator fontified t) 3992 3993 (fontified t) 3993 3996 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3996 3997 (face (rainbow-delimiters-depth-1-face) fontified t) 3997 4001 (face tree-sitter-hl-face:keyword fontified t) 4001 4002 (fontified t) 4002 4012 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4012 4013 (fontified t) 4013 4014 (face tree-sitter-hl-face:operator fontified t) 4014 4015 (fontified t) 4015 4019 (face tree-sitter-hl-face:keyword fontified t) 4019 4020 (fontified t) 4020 4022 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4022 4023 (face (rainbow-delimiters-depth-1-face) fontified t) 4023 4033 (fontified t) 4033 4037 (face tree-sitter-hl-face:keyword fontified t) 4037 4044 (fontified t) 4044 4051 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4051 4052 (face (rainbow-delimiters-depth-1-face) fontified t) 4052 4053 (face (rainbow-delimiters-depth-1-face) fontified t) 4053 4054 (fontified t) 4054 4055 (fontified t) 4055 4064 (fontified t) 4064 4076 (fontified t) 4076 4079 (face tree-sitter-hl-face:keyword fontified t) 4079 4080 (fontified t) 4080 4081 (face tree-sitter-hl-face:variable fontified t) 4081 4084 (face tree-sitter-hl-face:variable fontified t) 4084 4085 (fontified t) 4085 4087 (face tree-sitter-hl-face:operator fontified t) 4087 4088 (fontified t) 4088 4093 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4093 4094 (face (rainbow-delimiters-depth-1-face) fontified t) 4094 4098 (face tree-sitter-hl-face:keyword fontified t) 4098 4099 (fontified t) 4099 4106 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4106 4107 (fontified t) 4107 4108 (face tree-sitter-hl-face:operator fontified t) 4108 4109 (fontified t) 4109 4113 (face tree-sitter-hl-face:keyword fontified t) 4113 4114 (fontified t) 4114 4122 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4122 4123 (face (rainbow-delimiters-depth-1-face) fontified t) 4123 4125 (fontified t) 4125 4141 (fontified t) 4141 4145 (face tree-sitter-hl-face:keyword fontified t) 4145 4146 (fontified t) 4146 4157 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4157 4158 (face (rainbow-delimiters-depth-1-face) fontified t) 4158 4162 (fontified t) 4162 4163 (face (rainbow-delimiters-depth-1-face) fontified t) 4163 4180 (fontified t) 4180 4186 (face tree-sitter-hl-face:variable fontified t) 4186 4187 (fontified t) 4187 4188 (face tree-sitter-hl-face:operator fontified t) 4188 4189 (fontified t) 4189 4193 (face tree-sitter-hl-face:keyword fontified t) 4193 4194 (fontified t) 4194 4201 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4201 4202 (face (rainbow-delimiters-depth-1-face) fontified t) 4202 4208 (fontified t) 4208 4209 (face (rainbow-delimiters-depth-1-face) fontified t) 4209 4239 (fontified t) 4239 4241 (face tree-sitter-hl-face:keyword fontified t) 4241 4247 (fontified t) 4247 4249 (face tree-sitter-hl-face:operator fontified t) 4249 4250 (fontified t) 4250 4254 (face tree-sitter-hl-face:keyword fontified t) 4254 4255 (fontified t) 4255 4263 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4263 4264 (face tree-sitter-hl-face:operator fontified t) 4264 4265 (face tree-sitter-hl-face:number fontified t) 4265 4287 (fontified t) 4287 4289 (face tree-sitter-hl-face:keyword fontified t) 4289 4295 (fontified t) 4295 4296 (face tree-sitter-hl-face:operator fontified t) 4296 4297 (fontified t) 4297 4301 (face tree-sitter-hl-face:keyword fontified t) 4301 4302 (fontified t) 4302 4310 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4310 4311 (fontified t) 4311 4313 (face tree-sitter-hl-face:operator fontified t) 4313 4314 (fontified t) 4314 4315 (face tree-sitter-hl-face:number fontified t) 4315 4341 (fontified t) 4341 4343 (face tree-sitter-hl-face:keyword fontified t) 4343 4344 (fontified t) 4344 4348 (face tree-sitter-hl-face:keyword fontified t) 4348 4349 (fontified t) 4349 4356 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4356 4386 (fontified t) 4386 4390 (face tree-sitter-hl-face:keyword fontified t) 4390 4391 (fontified t) 4391 4405 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4405 4406 (face (rainbow-delimiters-depth-1-face) fontified t) 4406 4411 (fontified t) 4411 4412 (face tree-sitter-hl-face:operator fontified t) 4412 4413 (fontified t) 4413 4417 (face tree-sitter-hl-face:keyword fontified t) 4417 4418 (fontified t) 4418 4426 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4426 4434 (fontified t) 4434 4435 (face (rainbow-delimiters-depth-1-face) fontified t) 4435 4492 (fontified t) 4492 4498 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4498 4499 (face (rainbow-delimiters-depth-1-face) fontified t) 4499 4506 (fontified t) 4506 4509 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4509 4510 (face (rainbow-delimiters-depth-2-face) fontified t) 4510 4511 (face (rainbow-delimiters-depth-2-face) fontified t) 4511 4512 (fontified t) 4512 4518 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4518 4519 (face (rainbow-delimiters-depth-2-face) fontified t) 4519 4520 (face (rainbow-delimiters-depth-2-face) fontified t) 4520 4521 (fontified t) 4521 4526 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4526 4527 (face (rainbow-delimiters-depth-2-face) fontified t) 4527 4528 (face (rainbow-delimiters-depth-2-face) fontified t) 4528 4529 (face (rainbow-delimiters-depth-1-face) fontified t) 4529 4547 (fontified t) 4547 4553 (face tree-sitter-hl-face:variable fontified t) 4553 4554 (fontified t) 4554 4555 (face tree-sitter-hl-face:operator fontified t) 4555 4559 (fontified t) 4559 4564 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4564 4565 (face (rainbow-delimiters-depth-1-face) fontified t) 4565 4571 (fontified t) 4571 4572 (face (rainbow-delimiters-depth-1-face) fontified t) 4572 4581 (fontified t) 4581 4586 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4586 4587 (face (rainbow-delimiters-depth-1-face) fontified t) 4587 4588 (face tree-sitter-hl-face:string fontified t) 4588 4594 (face tree-sitter-hl-face:string fontified t) 4594 4595 (face tree-sitter-hl-face:string fontified t) 4595 4604 (fontified t) 4604 4609 (face tree-sitter-hl-face:property fontified t) 4609 4610 (face (rainbow-delimiters-depth-1-face) fontified t) 4610 4628 (fontified t) 4628 4707 (face tree-sitter-hl-face:comment fontified t) 4707 4716 (fontified t) 4716 4741 (face tree-sitter-hl-face:comment fontified t) 4741 4751 (fontified t) 4751 4793 (face tree-sitter-hl-face:comment fontified t) 4793 4802 (fontified t) 4802 4833 (face tree-sitter-hl-face:comment fontified t) 4833 4851 (fontified t) 4851 4856 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4856 4857 (face (rainbow-delimiters-depth-1-face) fontified t) 4857 4858 (face tree-sitter-hl-face:string fontified t) 4858 4874 (face tree-sitter-hl-face:string fontified t) 4874 4875 (face tree-sitter-hl-face:string fontified t) 4875 4877 (fontified t) 4877 4881 (face tree-sitter-hl-face:keyword fontified t) 4881 4882 (fontified t) 4882 4891 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4891 4892 (fontified t) 4892 4893 (face tree-sitter-hl-face:operator fontified t) 4893 4894 (fontified t) 4894 4898 (face tree-sitter-hl-face:keyword fontified t) 4898 4899 (fontified t) 4899 4908 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4908 4909 (fontified t) 4909 4910 (face tree-sitter-hl-face:operator fontified t) 4910 4911 (fontified t) 4911 4912 (face tree-sitter-hl-face:string fontified t) 4912 4916 (face tree-sitter-hl-face:string fontified t) 4916 4917 (face tree-sitter-hl-face:string fontified t) 4917 4918 (face (rainbow-delimiters-depth-1-face) fontified t) 4918 4930 (fontified t) 4930 4934 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4934 4935 (face (rainbow-delimiters-depth-1-face) fontified t) 4935 4939 (face tree-sitter-hl-face:keyword fontified t) 4939 4940 (fontified t) 4940 4949 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4949 4950 (fontified t) 4950 4951 (face tree-sitter-hl-face:operator fontified t) 4951 4952 (fontified t) 4952 4956 (face tree-sitter-hl-face:keyword fontified t) 4956 4957 (fontified t) 4957 4966 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4966 4967 (fontified t) 4967 4968 (face tree-sitter-hl-face:operator fontified t) 4968 4969 (fontified t) 4969 4970 (face tree-sitter-hl-face:string fontified t) 4970 4974 (face tree-sitter-hl-face:string fontified t) 4974 4975 (face tree-sitter-hl-face:string fontified t) 4975 4983 (fontified t) 4983 4984 (face (rainbow-delimiters-depth-1-face) fontified t) 4984 5002 (fontified t) 5002 5005 (face tree-sitter-hl-face:keyword fontified t) 5005 5006 (fontified t) 5006 5009 (face tree-sitter-hl-face:variable fontified t) 5009 5010 (fontified t) 5010 5012 (face tree-sitter-hl-face:operator fontified t) 5012 5016 (fontified t) 5016 5027 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5027 5028 (face (rainbow-delimiters-depth-1-face) fontified t) 5028 5029 (face (rainbow-delimiters-depth-1-face) fontified t) 5029 5043 (fontified t) 5043 5045 (face tree-sitter-hl-face:keyword fontified t) 5045 5052 (fontified t) 5052 5061 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5061 5062 (face (rainbow-delimiters-depth-1-face) fontified t) 5062 5065 (fontified t) 5065 5066 (face (rainbow-delimiters-depth-1-face) fontified t) 5066 5084 (fontified t) 5084 5087 (face tree-sitter-hl-face:keyword fontified t) 5087 5109 (fontified t) 5109 5138 (face tree-sitter-hl-face:comment fontified t) 5138 5147 (face tree-sitter-hl-face:comment fontified t) 5147 5155 (face tree-sitter-hl-face:comment fontified t) 5155 5163 (face tree-sitter-hl-face:comment fontified t) 5163 5175 (fontified t) 5175 5182 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5182 5183 (face (rainbow-delimiters-depth-1-face) fontified t) 5183 5184 (face (rainbow-delimiters-depth-1-face) fontified t) 5184 5199 (fontified t) 5199 5203 (face tree-sitter-hl-face:property fontified t) 5203 5204 (fontified t) 5204 5215 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5215 5216 (face (rainbow-delimiters-depth-1-face) fontified t) 5216 5217 (face (rainbow-delimiters-depth-1-face) fontified t) 5217 5235 (fontified t) 5235 5238 (face tree-sitter-hl-face:variable fontified t) 5238 5239 (fontified t) 5239 5240 (face tree-sitter-hl-face:operator fontified t) 5240 5241 (fontified t) 5241 5253 (face tree-sitter-hl-face:function.call fontified t) 5253 5254 (face (rainbow-delimiters-depth-1-face) fontified t) 5254 5255 (face (rainbow-delimiters-depth-1-face) fontified t) 5255 5265 (fontified t) 5265 5270 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5270 5271 (face (rainbow-delimiters-depth-1-face) fontified t) 5271 5272 (face tree-sitter-hl-face:string fontified t) 5272 5304 (face tree-sitter-hl-face:string fontified t) 5304 5305 (face tree-sitter-hl-face:string fontified t) 5305 5306 (fontified t) 5306 5312 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5312 5313 (face (rainbow-delimiters-depth-2-face) fontified t) 5313 5314 (face (rainbow-delimiters-depth-3-face) fontified t) 5314 5318 (fontified t) 5318 5319 (face tree-sitter-hl-face:operator fontified t) 5319 5325 (fontified t) 5325 5326 (face (rainbow-delimiters-depth-3-face) fontified t) 5326 5327 (face (rainbow-delimiters-depth-2-face) fontified t) 5327 5328 (face (rainbow-delimiters-depth-1-face) fontified t) 5328 5329 (fontified t) 5329 5330 (fontified t) 5330 5338 (fontified t) 5338 5344 (face tree-sitter-hl-face:keyword fontified t) 5344 5351 (fontified t) 5351 5357 (fontified t) 5357 5360 (face tree-sitter-hl-face:keyword fontified t) 5360 5361 (fontified t) 5361 5371 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 5371 5372 (face (rainbow-delimiters-depth-1-face) fontified t) 5372 5376 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 5376 5378 (fontified t) 5378 5387 (face tree-sitter-hl-face:variable.parameter fontified t) 5387 5389 (fontified t) 5389 5397 (face tree-sitter-hl-face:variable.parameter fontified t) 5397 5399 (fontified t) 5399 5408 (face tree-sitter-hl-face:variable.parameter fontified t) 5408 5410 (fontified t) 5410 5412 (face tree-sitter-hl-face:operator fontified t) 5412 5418 (face tree-sitter-hl-face:variable.parameter fontified t) 5418 5419 (face (rainbow-delimiters-depth-1-face) fontified t) 5419 5429 (fontified t) 5429 5457 (face tree-sitter-hl-face:comment fontified t) 5457 5466 (fontified t) 5466 5475 (face tree-sitter-hl-face:variable fontified t) 5475 5476 (fontified t) 5476 5477 (face tree-sitter-hl-face:operator fontified t) 5477 5488 (fontified t) 5488 5489 (face tree-sitter-hl-face:operator fontified t) 5489 5490 (fontified t) 5490 5491 (face tree-sitter-hl-face:string fontified t) 5491 5497 (face tree-sitter-hl-face:string fontified t) 5497 5498 (face tree-sitter-hl-face:string fontified t) 5498 5499 (face tree-sitter-hl-face:operator fontified t) 5499 5518 (fontified t) 5518 5523 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5523 5524 (face (rainbow-delimiters-depth-1-face) fontified t) 5524 5525 (face tree-sitter-hl-face:string fontified t) 5525 5544 (face tree-sitter-hl-face:string fontified t) 5544 5545 (face tree-sitter-hl-face:string fontified t) 5545 5556 (fontified t) 5556 5557 (face (rainbow-delimiters-depth-1-face) fontified t) 5557 5566 (fontified t) 5566 5571 (face tree-sitter-hl-face:variable fontified t) 5571 5572 (fontified t) 5572 5573 (face tree-sitter-hl-face:operator fontified t) 5573 5574 (fontified t) 5574 5583 (face tree-sitter-hl-face:function.call fontified t) 5583 5584 (face (rainbow-delimiters-depth-1-face) fontified t) 5584 5588 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5588 5589 (face (rainbow-delimiters-depth-2-face) fontified t) 5589 5600 (fontified t) 5600 5601 (face tree-sitter-hl-face:string fontified t) 5601 5602 (face tree-sitter-hl-face:string fontified t) 5602 5603 (face tree-sitter-hl-face:string fontified t) 5603 5604 (face (rainbow-delimiters-depth-2-face) fontified t) 5604 5605 (face (rainbow-delimiters-depth-1-face) fontified t) 5605 5620 (fontified t) 5620 5621 (face (rainbow-delimiters-depth-1-face) fontified t) 5621 5622 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified t) 5622 5631 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified t) 5631 5632 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified t) 5632 5633 (face (rainbow-delimiters-depth-1-face) fontified t) 5633 5634 (fontified t) 5634 5635 (face tree-sitter-hl-face:operator fontified t) 5635 5659 (fontified t) 5659 5665 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5665 5666 (face (rainbow-delimiters-depth-1-face) fontified t) 5666 5672 (fontified t) 5672 5673 (face (rainbow-delimiters-depth-1-face) fontified t) 5673 5683 (fontified t) 5683 5686 (face tree-sitter-hl-face:keyword fontified t) 5686 5687 (fontified t) 5687 5688 (face tree-sitter-hl-face:variable fontified t) 5688 5690 (fontified t) 5690 5691 (face tree-sitter-hl-face:variable fontified t) 5691 5692 (fontified t) 5692 5694 (face tree-sitter-hl-face:operator fontified t) 5694 5701 (fontified t) 5701 5706 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5706 5707 (face (rainbow-delimiters-depth-1-face) fontified t) 5707 5708 (face (rainbow-delimiters-depth-1-face) fontified t) 5708 5722 (fontified t) 5722 5729 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5729 5730 (face (rainbow-delimiters-depth-1-face) fontified t) 5730 5734 (face tree-sitter-hl-face:keyword fontified t) 5734 5740 (fontified t) 5740 5741 (face (rainbow-delimiters-depth-1-face) fontified t) 5741 5743 (fontified t) 5743 5751 (fontified t) 5751 5755 (face tree-sitter-hl-face:keyword fontified t) 5755 5756 (fontified t) 5756 5765 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5765 5766 (fontified t) 5766 5767 (face tree-sitter-hl-face:operator fontified t) 5767 5778 (fontified t) 5778 5779 (face tree-sitter-hl-face:operator fontified t) 5779 5780 (fontified t) 5780 5781 (face tree-sitter-hl-face:string fontified t) 5781 5793 (face tree-sitter-hl-face:string fontified t) 5793 5794 (face tree-sitter-hl-face:string fontified t) 5794 5795 (fontified t) 5795 5803 (fontified t) 5803 5807 (face tree-sitter-hl-face:keyword fontified t) 5807 5808 (fontified t) 5808 5816 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5816 5817 (fontified t) 5817 5818 (face tree-sitter-hl-face:operator fontified t) 5818 5829 (fontified t) 5829 5830 (face tree-sitter-hl-face:operator fontified t) 5830 5831 (fontified t) 5831 5832 (face tree-sitter-hl-face:string fontified t) 5832 5845 (face tree-sitter-hl-face:string fontified t) 5845 5846 (face tree-sitter-hl-face:string fontified t) 5846 5847 (fontified t) 5847 5856 (fontified t) 5856 5858 (face tree-sitter-hl-face:keyword fontified t) 5858 5859 (fontified t) 5859 5862 (face tree-sitter-hl-face:operator fontified t) 5862 5866 (fontified t) 5866 5870 (face tree-sitter-hl-face:property fontified t) 5870 5871 (fontified t) 5871 5877 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5877 5878 (face (rainbow-delimiters-depth-1-face) fontified t) 5878 5882 (face tree-sitter-hl-face:keyword fontified t) 5882 5883 (fontified t) 5883 5892 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5892 5893 (face (rainbow-delimiters-depth-1-face) fontified t) 5893 5910 (fontified t) 5910 5918 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5918 5919 (face (rainbow-delimiters-depth-1-face) fontified t) 5919 5923 (face tree-sitter-hl-face:keyword fontified t) 5923 5924 (fontified t) 5924 5933 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5933 5934 (face (rainbow-delimiters-depth-1-face) fontified t) 5934 5944 (fontified t) 5944 5946 (face tree-sitter-hl-face:keyword fontified t) 5946 5947 (fontified t) 5947 5950 (face tree-sitter-hl-face:operator fontified t) 5950 5954 (fontified t) 5954 5958 (face tree-sitter-hl-face:property fontified t) 5958 5959 (fontified t) 5959 5965 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5965 5966 (face (rainbow-delimiters-depth-1-face) fontified t) 5966 5970 (face tree-sitter-hl-face:keyword fontified t) 5970 5971 (fontified t) 5971 5979 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5979 5980 (face (rainbow-delimiters-depth-1-face) fontified t) 5980 5997 (fontified t) 5997 6005 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6005 6006 (face (rainbow-delimiters-depth-1-face) fontified t) 6006 6010 (face tree-sitter-hl-face:keyword fontified t) 6010 6011 (fontified t) 6011 6019 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6019 6020 (face (rainbow-delimiters-depth-1-face) fontified t) 6020 6030 (fontified t) 6030 6032 (face tree-sitter-hl-face:keyword fontified t) 6032 6033 (fontified t) 6033 6037 (face tree-sitter-hl-face:keyword fontified t) 6037 6038 (fontified t) 6038 6053 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6053 6054 (fontified t) 6054 6056 (face tree-sitter-hl-face:operator fontified t) 6056 6057 (fontified t) 6057 6059 (face tree-sitter-hl-face:number fontified t) 6059 6073 (fontified t) 6073 6077 (face tree-sitter-hl-face:keyword fontified t) 6077 6078 (fontified t) 6078 6083 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6083 6084 (fontified t) 6084 6085 (face tree-sitter-hl-face:operator fontified t) 6085 6092 (fontified t) 6092 6097 (face tree-sitter-hl-face:property fontified t) 6097 6106 (fontified t) 6106 6110 (face tree-sitter-hl-face:keyword fontified t) 6110 6124 (fontified t) 6124 6128 (face tree-sitter-hl-face:keyword fontified t) 6128 6129 (fontified t) 6129 6134 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6134 6135 (fontified t) 6135 6136 (face tree-sitter-hl-face:operator fontified t) 6136 6143 (fontified t) 6143 6150 (face tree-sitter-hl-face:property fontified t) 6150 6168 (fontified t) 6168 6172 (face tree-sitter-hl-face:keyword fontified t) 6172 6173 (fontified t) 6173 6179 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 6179 6180 (fontified t) 6180 6181 (face tree-sitter-hl-face:operator fontified t) 6181 6188 (fontified t) 6188 6194 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6194 6195 (face (rainbow-delimiters-depth-1-face) fontified t) 6195 6199 (face tree-sitter-hl-face:keyword fontified t) 6199 6200 (fontified t) 6200 6206 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6206 6207 (face (rainbow-delimiters-depth-1-face) fontified t) 6207 6217 (fontified t) 6217 6220 (face tree-sitter-hl-face:keyword fontified t) 6220 6221 (fontified t) 6221 6230 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 6230 6231 (face (rainbow-delimiters-depth-1-face) fontified t) 6231 6235 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 6235 6236 (face (rainbow-delimiters-depth-1-face) fontified t) 6236 6246 (fontified t) 6246 6252 (face tree-sitter-hl-face:keyword fontified t) 6252 6259 (fontified t) 6259 6264 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6264 6265 (face (rainbow-delimiters-depth-1-face) fontified t) 6265 6269 (face tree-sitter-hl-face:keyword fontified t) 6269 6270 (fontified t) 6270 6278 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6278 6280 (fontified t) 6280 6285 (face tree-sitter-hl-face:label fontified t) 6285 6286 (face tree-sitter-hl-face:operator fontified t) 6286 6290 (face tree-sitter-hl-face:keyword fontified t) 6290 6291 (fontified t) 6291 6296 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6296 6298 (fontified t) 6298 6304 (face tree-sitter-hl-face:label fontified t) 6304 6305 (face tree-sitter-hl-face:operator fontified t) 6305 6309 (face tree-sitter-hl-face:keyword fontified t) 6309 6310 (fontified t) 6310 6316 (face tree-sitter-hl-face:property fontified t) 6316 6317 (face (rainbow-delimiters-depth-1-face) fontified t) 6317 6318 (fontified t) 6318 6323 (fontified t) 6323 6327 (fontified t) 6327 6330 (face tree-sitter-hl-face:keyword fontified t) 6330 6331 (fontified t) 6331 6342 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 6342 6343 (face (rainbow-delimiters-depth-1-face) fontified t) 6343 6347 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 6347 6349 (fontified t) 6349 6354 (face tree-sitter-hl-face:variable.parameter fontified t) 6354 6356 (fontified t) 6356 6361 (face tree-sitter-hl-face:variable.parameter fontified t) 6361 6362 (face (rainbow-delimiters-depth-1-face) fontified t) 6362 6364 (fontified t) 6364 6373 (fontified t) 6373 6381 (fontified t) 6381 6383 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6383 6384 (fontified t) 6384 6385 (face tree-sitter-hl-face:operator fontified t) 6385 6386 (fontified t) 6386 6390 (face tree-sitter-hl-face:keyword fontified t) 6390 6391 (fontified t) 6391 6393 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6393 6394 (face (rainbow-delimiters-depth-1-face) fontified t) 6394 6399 (fontified t) 6399 6400 (face (rainbow-delimiters-depth-1-face) fontified t) 6400 6401 (fontified t) 6401 6409 (fontified t) 6409 6411 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6411 6412 (fontified t) 6412 6413 (face tree-sitter-hl-face:operator fontified t) 6413 6414 (fontified t) 6414 6418 (face tree-sitter-hl-face:keyword fontified t) 6418 6419 (fontified t) 6419 6421 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6421 6422 (face (rainbow-delimiters-depth-1-face) fontified t) 6422 6427 (fontified t) 6427 6428 (face (rainbow-delimiters-depth-1-face) fontified t) 6428 6437 (fontified t) 6437 6439 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6439 6440 (fontified t) 6440 6441 (face tree-sitter-hl-face:operator fontified t) 6441 6442 (fontified t) 6442 6446 (face tree-sitter-hl-face:keyword fontified t) 6446 6447 (fontified t) 6447 6449 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6449 6450 (face (rainbow-delimiters-depth-1-face) fontified t) 6450 6455 (fontified t) 6455 6456 (face (rainbow-delimiters-depth-1-face) fontified t) 6456 6474 (fontified t) 6474 6477 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6477 6478 (fontified t) 6478 6479 (face tree-sitter-hl-face:operator fontified t) 6479 6486 (fontified t) 6486 6492 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6492 6493 (face (rainbow-delimiters-depth-1-face) fontified t) 6493 6496 (face tree-sitter-hl-face:number fontified t) 6496 6498 (fontified t) 6498 6503 (face tree-sitter-hl-face:label fontified t) 6503 6504 (face tree-sitter-hl-face:operator fontified t) 6504 6508 (face tree-sitter-hl-face:keyword fontified t) 6508 6509 (fontified t) 6509 6514 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6514 6516 (fontified t) 6516 6522 (face tree-sitter-hl-face:label fontified t) 6522 6523 (face tree-sitter-hl-face:operator fontified t) 6523 6527 (face tree-sitter-hl-face:keyword fontified t) 6527 6528 (fontified t) 6528 6534 (face tree-sitter-hl-face:property fontified t) 6534 6535 (face (rainbow-delimiters-depth-1-face) fontified t) 6535 6545 (fontified t) 6545 6553 (fontified t) 6553 6555 (face tree-sitter-hl-face:keyword fontified t) 6555 6556 (fontified t) 6556 6557 (face tree-sitter-hl-face:string fontified t) 6557 6559 (face tree-sitter-hl-face:string fontified t) 6559 6560 (face tree-sitter-hl-face:string fontified t) 6560 6561 (fontified t) 6561 6563 (face tree-sitter-hl-face:operator fontified t) 6563 6564 (fontified t) 6564 6568 (face tree-sitter-hl-face:keyword fontified t) 6568 6569 (fontified t) 6569 6578 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6578 6579 (face (rainbow-delimiters-depth-1-face) fontified t) 6579 6584 (fontified t) 6584 6586 (fontified t) 6586 6591 (fontified t) 6591 6592 (face (rainbow-delimiters-depth-1-face) fontified t) 6592 6594 (fontified t) 6594 6619 (fontified t) 6619 6623 (face tree-sitter-hl-face:variable fontified t) 6623 6624 (fontified t) 6624 6625 (face tree-sitter-hl-face:operator fontified t) 6625 6632 (fontified t) 6632 6638 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6638 6639 (face (rainbow-delimiters-depth-1-face) fontified t) 6639 6640 (face (rainbow-delimiters-depth-2-face) fontified t) 6640 6643 (face tree-sitter-hl-face:number fontified t) 6643 6645 (fontified t) 6645 6648 (face tree-sitter-hl-face:number fontified t) 6648 6649 (face (rainbow-delimiters-depth-2-face) fontified t) 6649 6651 (fontified t) 6651 6656 (face tree-sitter-hl-face:label fontified t) 6656 6657 (face tree-sitter-hl-face:operator fontified t) 6657 6661 (face tree-sitter-hl-face:keyword fontified t) 6661 6662 (fontified t) 6662 6667 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6667 6669 (fontified t) 6669 6675 (face tree-sitter-hl-face:label fontified t) 6675 6676 (face tree-sitter-hl-face:operator fontified t) 6676 6680 (face tree-sitter-hl-face:keyword fontified t) 6680 6681 (fontified t) 6681 6687 (face tree-sitter-hl-face:property fontified t) 6687 6688 (face (rainbow-delimiters-depth-1-face) fontified t) 6688 6714 (fontified t) 6714 6744 (face tree-sitter-hl-face:comment fontified t) 6744 6757 (fontified t) 6757 6767 (face tree-sitter-hl-face:variable fontified t) 6767 6768 (fontified t) 6768 6769 (face tree-sitter-hl-face:operator fontified t) 6769 6776 (fontified t) 6776 6782 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6782 6783 (face (rainbow-delimiters-depth-1-face) fontified t) 6783 6784 (face (rainbow-delimiters-depth-2-face) fontified t) 6784 6785 (face (rainbow-delimiters-depth-3-face) fontified t) 6785 6788 (face tree-sitter-hl-face:number fontified t) 6788 6790 (fontified t) 6790 6794 (face tree-sitter-hl-face:keyword fontified t) 6794 6795 (fontified t) 6795 6801 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6801 6802 (face (rainbow-delimiters-depth-3-face) fontified t) 6802 6843 (fontified t) 6843 6844 (face (rainbow-delimiters-depth-3-face) fontified t) 6844 6848 (face tree-sitter-hl-face:keyword fontified t) 6848 6849 (fontified t) 6849 6855 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6855 6857 (fontified t) 6857 6860 (face tree-sitter-hl-face:number fontified t) 6860 6861 (face (rainbow-delimiters-depth-3-face) fontified t) 6861 6862 (fontified t) 6862 6863 (face (rainbow-delimiters-depth-2-face) fontified t) 6863 6865 (fontified t) 6865 6870 (face tree-sitter-hl-face:label fontified t) 6870 6871 (face tree-sitter-hl-face:operator fontified t) 6871 6875 (face tree-sitter-hl-face:keyword fontified t) 6875 6876 (fontified t) 6876 6881 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6881 6883 (fontified t) 6883 6889 (face tree-sitter-hl-face:label fontified t) 6889 6890 (face tree-sitter-hl-face:operator fontified t) 6890 6894 (face tree-sitter-hl-face:keyword fontified t) 6894 6895 (fontified t) 6895 6901 (face tree-sitter-hl-face:property fontified t) 6901 6902 (face (rainbow-delimiters-depth-1-face) fontified t) 6902 6929 (fontified t) 6929 6948 (face tree-sitter-hl-face:variable fontified t) 6948 6949 (fontified t) 6949 6950 (face tree-sitter-hl-face:operator fontified t) 6950 6951 (fontified t) 6951 6969 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 6969 6970 (face (rainbow-delimiters-depth-1-face) fontified t) 6970 6986 (fontified t) 6986 6987 (face (rainbow-delimiters-depth-1-face) fontified t) 6987 7000 (fontified t) 7000 7004 (face tree-sitter-hl-face:keyword fontified t) 7004 7005 (fontified t) 7005 7008 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 7008 7009 (fontified t) 7009 7010 (face tree-sitter-hl-face:operator fontified t) 7010 7031 (fontified t) 7031 7037 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7037 7038 (face (rainbow-delimiters-depth-1-face) fontified t) 7038 7039 (face (rainbow-delimiters-depth-2-face) fontified t) 7039 7041 (face tree-sitter-hl-face:constructor fontified t) 7041 7042 (fontified t) 7042 7043 (face (rainbow-delimiters-depth-2-face) fontified t) 7043 7044 (face (rainbow-delimiters-depth-1-face) fontified t) 7044 7045 (fontified t) 7045 7046 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7046 7072 (fontified t) 7072 7137 (face tree-sitter-hl-face:comment fontified t) 7137 7150 (fontified t) 7150 7226 (face tree-sitter-hl-face:comment fontified t) 7226 7239 (fontified t) 7239 7291 (face tree-sitter-hl-face:comment fontified t) 7291 7317 (fontified t) 7317 7319 (face tree-sitter-hl-face:keyword fontified t) 7319 7320 (fontified t) 7320 7324 (face tree-sitter-hl-face:keyword fontified t) 7324 7325 (fontified t) 7325 7332 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7332 7350 (fontified t) 7350 7355 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7355 7356 (face (rainbow-delimiters-depth-1-face) fontified t) 7356 7357 (face tree-sitter-hl-face:string fontified t) 7357 7360 (face tree-sitter-hl-face:string fontified t) 7360 7361 (face tree-sitter-hl-face:string fontified t) 7361 7363 (fontified t) 7363 7367 (face tree-sitter-hl-face:keyword fontified t) 7367 7368 (fontified t) 7368 7371 (face tree-sitter-hl-face:property fontified t) 7371 7372 (fontified t) 7372 7377 (face tree-sitter-hl-face:property fontified t) 7377 7378 (face (rainbow-delimiters-depth-1-face) fontified t) 7378 7395 (fontified t) 7395 7400 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7400 7401 (face (rainbow-delimiters-depth-1-face) fontified t) 7401 7402 (face tree-sitter-hl-face:string fontified t) 7402 7412 (face tree-sitter-hl-face:string fontified t) 7412 7413 (face tree-sitter-hl-face:string fontified t) 7413 7421 (fontified t) 7421 7424 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7424 7425 (face (rainbow-delimiters-depth-2-face) fontified t) 7425 7429 (face tree-sitter-hl-face:keyword fontified t) 7429 7430 (fontified t) 7430 7433 (face tree-sitter-hl-face:property fontified t) 7433 7434 (face (rainbow-delimiters-depth-2-face) fontified t) 7434 7435 (face (rainbow-delimiters-depth-1-face) fontified t) 7435 7449 (fontified t) 7449 7461 (fontified t) 7461 7464 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 7464 7465 (fontified t) 7465 7466 (face tree-sitter-hl-face:operator fontified t) 7466 7467 (fontified t) 7467 7468 (face (rainbow-delimiters-depth-1-face) fontified t) 7468 7471 (face tree-sitter-hl-face:number fontified t) 7471 7472 (fontified t) 7472 7473 (face tree-sitter-hl-face:operator fontified t) 7473 7474 (fontified t) 7474 7478 (face tree-sitter-hl-face:keyword fontified t) 7478 7479 (fontified t) 7479 7484 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7484 7485 (face (rainbow-delimiters-depth-2-face) fontified t) 7485 7490 (fontified t) 7490 7492 (fontified t) 7492 7497 (fontified t) 7497 7498 (face (rainbow-delimiters-depth-2-face) fontified t) 7498 7499 (fontified t) 7499 7518 (fontified t) 7518 7519 (face tree-sitter-hl-face:operator fontified t) 7519 7520 (fontified t) 7520 7521 (face (rainbow-delimiters-depth-2-face) fontified t) 7521 7527 (fontified t) 7527 7532 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7532 7533 (face (rainbow-delimiters-depth-3-face) fontified t) 7533 7537 (face tree-sitter-hl-face:keyword fontified t) 7537 7538 (fontified t) 7538 7541 (face tree-sitter-hl-face:property fontified t) 7541 7542 (face (rainbow-delimiters-depth-4-face) fontified t) 7542 7543 (face tree-sitter-hl-face:number fontified t) 7543 7544 (face (rainbow-delimiters-depth-4-face) fontified t) 7544 7546 (fontified t) 7546 7550 (face tree-sitter-hl-face:keyword fontified t) 7550 7551 (fontified t) 7551 7554 (face tree-sitter-hl-face:property fontified t) 7554 7555 (face (rainbow-delimiters-depth-4-face) fontified t) 7555 7556 (face tree-sitter-hl-face:number fontified t) 7556 7557 (face (rainbow-delimiters-depth-4-face) fontified t) 7557 7558 (face (rainbow-delimiters-depth-3-face) fontified t) 7558 7581 (fontified t) 7581 7582 (face tree-sitter-hl-face:operator fontified t) 7582 7589 (fontified t) 7589 7594 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7594 7595 (face (rainbow-delimiters-depth-3-face) fontified t) 7595 7599 (face tree-sitter-hl-face:keyword fontified t) 7599 7600 (fontified t) 7600 7603 (face tree-sitter-hl-face:property fontified t) 7603 7604 (face (rainbow-delimiters-depth-4-face) fontified t) 7604 7605 (face tree-sitter-hl-face:number fontified t) 7605 7606 (face (rainbow-delimiters-depth-4-face) fontified t) 7606 7608 (fontified t) 7608 7612 (face tree-sitter-hl-face:keyword fontified t) 7612 7613 (fontified t) 7613 7616 (face tree-sitter-hl-face:property fontified t) 7616 7617 (face (rainbow-delimiters-depth-4-face) fontified t) 7617 7618 (face tree-sitter-hl-face:number fontified t) 7618 7619 (face (rainbow-delimiters-depth-4-face) fontified t) 7619 7620 (face (rainbow-delimiters-depth-3-face) fontified t) 7620 7621 (face (rainbow-delimiters-depth-2-face) fontified t) 7621 7641 (fontified t) 7641 7642 (face tree-sitter-hl-face:operator fontified t) 7642 7649 (fontified t) 7649 7653 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7653 7654 (face (rainbow-delimiters-depth-2-face) fontified t) 7654 7658 (face tree-sitter-hl-face:keyword fontified t) 7658 7659 (fontified t) 7659 7661 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7661 7662 (face (rainbow-delimiters-depth-3-face) fontified t) 7662 7667 (fontified t) 7667 7668 (face (rainbow-delimiters-depth-3-face) fontified t) 7668 7669 (face (rainbow-delimiters-depth-2-face) fontified t) 7669 7670 (face (rainbow-delimiters-depth-1-face) fontified t) 7670 7696 (fontified t) 7696 7712 (face tree-sitter-hl-face:comment fontified t) 7712 7725 (fontified t) 7725 7741 (face tree-sitter-hl-face:comment fontified t) 7741 7755 (fontified t) 7755 7767 (fontified t) 7767 7769 (face tree-sitter-hl-face:keyword fontified t) 7769 7770 (fontified t) 7770 7774 (face tree-sitter-hl-face:keyword fontified t) 7774 7775 (fontified t) 7775 7782 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7782 7784 (fontified t) 7784 7794 (fontified t) 7794 7799 (fontified t) 7799 7800 (fontified t) 7800 7805 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7805 7806 (face (rainbow-delimiters-depth-1-face) fontified t) 7806 7807 (face tree-sitter-hl-face:string fontified t) 7807 7810 (face tree-sitter-hl-face:string fontified t) 7810 7811 (face tree-sitter-hl-face:string fontified t) 7811 7813 (fontified t) 7813 7816 (face tree-sitter-hl-face:constructor fontified t) 7816 7817 (fontified t) 7817 7822 (face tree-sitter-hl-face:property fontified t) 7822 7823 (face (rainbow-delimiters-depth-1-face) fontified t) 7823 7824 (fontified t) 7824 7837 (fontified t) 7837 7845 (fontified t) 7845 7847 (face tree-sitter-hl-face:keyword fontified t) 7847 7848 (fontified t) 7848 7849 (face tree-sitter-hl-face:string fontified t) 7849 7852 (face tree-sitter-hl-face:string fontified t) 7852 7853 (face tree-sitter-hl-face:string fontified t) 7853 7854 (fontified t) 7854 7856 (face tree-sitter-hl-face:operator fontified t) 7856 7857 (fontified t) 7857 7861 (face tree-sitter-hl-face:keyword fontified t) 7861 7862 (fontified t) 7862 7871 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7871 7872 (face (rainbow-delimiters-depth-1-face) fontified t) 7872 7877 (fontified t) 7877 7879 (fontified t) 7879 7884 (fontified t) 7884 7885 (face (rainbow-delimiters-depth-1-face) fontified t) 7885 7899 (fontified t) 7899 7904 (face tree-sitter-hl-face:variable fontified t) 7904 7905 (fontified t) 7905 7906 (face tree-sitter-hl-face:operator fontified t) 7906 7913 (fontified t) 7913 7919 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7919 7920 (face (rainbow-delimiters-depth-1-face) fontified t) 7920 7921 (face tree-sitter-hl-face:number fontified t) 7921 7923 (fontified t) 7923 7926 (face tree-sitter-hl-face:number fontified t) 7926 7927 (fontified t) 7927 7928 (face tree-sitter-hl-face:operator fontified t) 7928 7935 (fontified t) 7935 7937 (face tree-sitter-hl-face:property fontified t) 7937 7939 (fontified t) 7939 7942 (face tree-sitter-hl-face:number fontified t) 7942 7943 (fontified t) 7943 7944 (face tree-sitter-hl-face:operator fontified t) 7944 7951 (fontified t) 7951 7953 (face tree-sitter-hl-face:property fontified t) 7953 7954 (fontified t) 7954 7955 (face tree-sitter-hl-face:operator fontified t) 7955 7956 (fontified t) 7956 7961 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7961 7962 (face (rainbow-delimiters-depth-2-face) fontified t) 7962 7964 (face tree-sitter-hl-face:constructor fontified t) 7964 7965 (face (rainbow-delimiters-depth-2-face) fontified t) 7965 8000 (fontified t) 8000 8005 (face tree-sitter-hl-face:label fontified t) 8005 8006 (face tree-sitter-hl-face:operator fontified t) 8006 8010 (face tree-sitter-hl-face:keyword fontified t) 8010 8011 (fontified t) 8011 8016 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8016 8018 (fontified t) 8018 8024 (face tree-sitter-hl-face:label fontified t) 8024 8025 (face tree-sitter-hl-face:operator fontified t) 8025 8029 (face tree-sitter-hl-face:keyword fontified t) 8029 8030 (fontified t) 8030 8036 (face tree-sitter-hl-face:property fontified t) 8036 8037 (face (rainbow-delimiters-depth-1-face) fontified t) 8037 8063 (fontified t) 8063 8066 (face tree-sitter-hl-face:variable fontified t) 8066 8067 (fontified t) 8067 8068 (face tree-sitter-hl-face:operator fontified t) 8068 8075 (fontified t) 8075 8081 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8081 8082 (face (rainbow-delimiters-depth-1-face) fontified t) 8082 8083 (face tree-sitter-hl-face:number fontified t) 8083 8085 (fontified t) 8085 8088 (face tree-sitter-hl-face:number fontified t) 8088 8089 (fontified t) 8089 8090 (face tree-sitter-hl-face:operator fontified t) 8090 8097 (fontified t) 8097 8099 (face tree-sitter-hl-face:property fontified t) 8099 8101 (fontified t) 8101 8104 (face tree-sitter-hl-face:number fontified t) 8104 8105 (fontified t) 8105 8106 (face tree-sitter-hl-face:operator fontified t) 8106 8113 (fontified t) 8113 8115 (face tree-sitter-hl-face:property fontified t) 8115 8116 (fontified t) 8116 8117 (face tree-sitter-hl-face:operator fontified t) 8117 8118 (fontified t) 8118 8123 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8123 8124 (face (rainbow-delimiters-depth-2-face) fontified t) 8124 8126 (face tree-sitter-hl-face:constructor fontified t) 8126 8127 (face (rainbow-delimiters-depth-2-face) fontified t) 8127 8160 (fontified t) 8160 8165 (face tree-sitter-hl-face:label fontified t) 8165 8166 (face tree-sitter-hl-face:operator fontified t) 8166 8170 (face tree-sitter-hl-face:keyword fontified t) 8170 8171 (fontified t) 8171 8176 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8176 8178 (fontified t) 8178 8184 (face tree-sitter-hl-face:label fontified t) 8184 8185 (face tree-sitter-hl-face:operator fontified t) 8185 8189 (face tree-sitter-hl-face:keyword fontified t) 8189 8190 (fontified t) 8190 8196 (face tree-sitter-hl-face:property fontified t) 8196 8197 (face (rainbow-delimiters-depth-1-face) fontified t) 8197 8223 (fontified t) 8223 8224 (face tree-sitter-hl-face:variable fontified t) 8224 8226 (fontified t) 8226 8227 (face tree-sitter-hl-face:variable fontified t) 8227 8228 (fontified t) 8228 8229 (face tree-sitter-hl-face:operator fontified t) 8229 8236 (fontified t) 8236 8244 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8244 8245 (face (rainbow-delimiters-depth-1-face) fontified t) 8245 8251 (fontified t) 8251 8257 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8257 8258 (face (rainbow-delimiters-depth-2-face) fontified t) 8258 8260 (face tree-sitter-hl-face:constructor fontified t) 8260 8262 (fontified t) 8262 8268 (face tree-sitter-hl-face:label fontified t) 8268 8269 (face tree-sitter-hl-face:operator fontified t) 8269 8273 (face tree-sitter-hl-face:keyword fontified t) 8273 8274 (fontified t) 8274 8280 (face tree-sitter-hl-face:property fontified t) 8280 8281 (face (rainbow-delimiters-depth-2-face) fontified t) 8281 8323 (fontified t) 8323 8329 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8329 8330 (face (rainbow-delimiters-depth-2-face) fontified t) 8330 8332 (face tree-sitter-hl-face:constructor fontified t) 8332 8334 (fontified t) 8334 8340 (face tree-sitter-hl-face:label fontified t) 8340 8341 (face tree-sitter-hl-face:operator fontified t) 8341 8345 (face tree-sitter-hl-face:keyword fontified t) 8345 8346 (fontified t) 8346 8352 (face tree-sitter-hl-face:property fontified t) 8352 8353 (face (rainbow-delimiters-depth-2-face) fontified t) 8353 8389 (fontified t) 8389 8397 (face tree-sitter-hl-face:label fontified t) 8397 8398 (face tree-sitter-hl-face:operator fontified t) 8398 8399 (face tree-sitter-hl-face:string fontified t) 8399 8401 (face tree-sitter-hl-face:string fontified t) 8401 8402 (face tree-sitter-hl-face:string fontified t) 8402 8403 (face (rainbow-delimiters-depth-1-face) fontified t) 8403 8429 (fontified t) 8429 8439 (face tree-sitter-hl-face:variable fontified t) 8439 8440 (fontified t) 8440 8441 (face tree-sitter-hl-face:operator fontified t) 8441 8447 (fontified t) 8447 8448 (face (rainbow-delimiters-depth-1-face) fontified t) 8448 8449 (fontified t) 8449 8450 (face (rainbow-delimiters-depth-1-face) fontified t) 8450 8451 (fontified t) 8451 8452 (face tree-sitter-hl-face:operator fontified t) 8452 8456 (fontified t) 8456 8457 (face (rainbow-delimiters-depth-1-face) fontified t) 8457 8458 (fontified t) 8458 8459 (face (rainbow-delimiters-depth-1-face) fontified t) 8459 8485 (fontified t) 8485 8487 (face tree-sitter-hl-face:keyword fontified t) 8487 8488 (fontified t) 8488 8489 (face tree-sitter-hl-face:string fontified t) 8489 8493 (face tree-sitter-hl-face:string fontified t) 8493 8494 (face tree-sitter-hl-face:string fontified t) 8494 8495 (fontified t) 8495 8497 (face tree-sitter-hl-face:operator fontified t) 8497 8498 (fontified t) 8498 8502 (face tree-sitter-hl-face:keyword fontified t) 8502 8503 (fontified t) 8503 8512 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8512 8513 (face (rainbow-delimiters-depth-1-face) fontified t) 8513 8518 (fontified t) 8518 8520 (fontified t) 8520 8525 (fontified t) 8525 8526 (face (rainbow-delimiters-depth-1-face) fontified t) 8526 8544 (fontified t) 8544 8548 (face tree-sitter-hl-face:keyword fontified t) 8548 8549 (fontified t) 8549 8554 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8554 8555 (face (rainbow-delimiters-depth-1-face) fontified t) 8555 8560 (face tree-sitter-hl-face:variable fontified t) 8560 8562 (fontified t) 8562 8567 (face tree-sitter-hl-face:variable fontified t) 8567 8568 (face (rainbow-delimiters-depth-1-face) fontified t) 8568 8569 (fontified t) 8569 8570 (face tree-sitter-hl-face:operator fontified t) 8570 8571 (fontified t) 8571 8575 (face tree-sitter-hl-face:keyword fontified t) 8575 8576 (fontified t) 8576 8581 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8581 8582 (face (rainbow-delimiters-depth-1-face) fontified t) 8582 8587 (fontified t) 8587 8589 (fontified t) 8589 8594 (fontified t) 8594 8595 (face (rainbow-delimiters-depth-1-face) fontified t) 8595 8596 (fontified t) 8596 8597 (face tree-sitter-hl-face:operator fontified t) 8597 8604 (fontified t) 8604 8608 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8608 8609 (face (rainbow-delimiters-depth-1-face) fontified t) 8609 8611 (face tree-sitter-hl-face:constructor fontified t) 8611 8612 (face (rainbow-delimiters-depth-1-face) fontified t) 8612 8630 (fontified t) 8630 8642 (fontified t) 8642 8645 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8645 8646 (fontified t) 8646 8647 (face tree-sitter-hl-face:operator fontified t) 8647 8648 (fontified t) 8648 8649 (face (rainbow-delimiters-depth-1-face) fontified t) 8649 8652 (face tree-sitter-hl-face:number fontified t) 8652 8653 (fontified t) 8653 8654 (face tree-sitter-hl-face:operator fontified t) 8654 8655 (fontified t) 8655 8658 (face tree-sitter-hl-face:number fontified t) 8658 8659 (fontified t) 8659 8660 (face tree-sitter-hl-face:operator fontified t) 8660 8661 (fontified t) 8661 8665 (face tree-sitter-hl-face:keyword fontified t) 8665 8666 (fontified t) 8666 8671 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8671 8672 (face (rainbow-delimiters-depth-2-face) fontified t) 8672 8677 (fontified t) 8677 8679 (fontified t) 8679 8684 (fontified t) 8684 8685 (face (rainbow-delimiters-depth-2-face) fontified t) 8685 8686 (fontified t) 8686 8705 (fontified t) 8705 8706 (face tree-sitter-hl-face:operator fontified t) 8706 8713 (fontified t) 8713 8716 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8716 8717 (face (rainbow-delimiters-depth-2-face) fontified t) 8717 8728 (fontified t) 8728 8729 (face tree-sitter-hl-face:operator fontified t) 8729 8730 (fontified t) 8730 8734 (face tree-sitter-hl-face:keyword fontified t) 8734 8735 (fontified t) 8735 8740 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8740 8741 (face (rainbow-delimiters-depth-2-face) fontified t) 8741 8742 (face (rainbow-delimiters-depth-1-face) fontified t) 8742 8743 (fontified t) 8743 8744 (fontified t) 8744 8752 (fontified t) 8752 8754 (face tree-sitter-hl-face:keyword fontified t) 8754 8755 (fontified t) 8755 8756 (face tree-sitter-hl-face:string fontified t) 8756 8762 (face tree-sitter-hl-face:string fontified t) 8762 8763 (face tree-sitter-hl-face:string fontified t) 8763 8764 (fontified t) 8764 8766 (face tree-sitter-hl-face:operator fontified t) 8766 8767 (fontified t) 8767 8771 (face tree-sitter-hl-face:keyword fontified t) 8771 8772 (fontified t) 8772 8784 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8784 8786 (fontified t) 8786 8798 (fontified t) 8798 8800 (face tree-sitter-hl-face:keyword fontified t) 8800 8801 (fontified t) 8801 8805 (face tree-sitter-hl-face:keyword fontified t) 8805 8806 (fontified t) 8806 8813 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8813 8815 (fontified t) 8815 8831 (fontified t) 8831 8836 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8836 8837 (face (rainbow-delimiters-depth-1-face) fontified t) 8837 8838 (face tree-sitter-hl-face:string fontified t) 8838 8865 (face tree-sitter-hl-face:string fontified t) 8865 8866 (face tree-sitter-hl-face:string fontified t) 8866 8867 (face (rainbow-delimiters-depth-1-face) fontified t) 8867 8868 (fontified t) 8868 8881 (fontified t) 8881 8893 (fontified t) 8893 8896 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8896 8897 (fontified t) 8897 8898 (face tree-sitter-hl-face:operator fontified t) 8898 8899 (fontified t) 8899 8900 (face (rainbow-delimiters-depth-1-face) fontified t) 8900 8904 (face tree-sitter-hl-face:keyword fontified t) 8904 8905 (fontified t) 8905 8908 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8908 8909 (face (rainbow-delimiters-depth-2-face) fontified t) 8909 8914 (fontified t) 8914 8916 (fontified t) 8916 8921 (fontified t) 8921 8922 (face (rainbow-delimiters-depth-2-face) fontified t) 8922 8923 (fontified t) 8923 8942 (fontified t) 8942 8943 (face tree-sitter-hl-face:operator fontified t) 8943 8944 (fontified t) 8944 8945 (face (rainbow-delimiters-depth-2-face) fontified t) 8945 8951 (fontified t) 8951 8955 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8955 8956 (face (rainbow-delimiters-depth-3-face) fontified t) 8956 8958 (face tree-sitter-hl-face:constructor fontified t) 8958 8960 (fontified t) 8960 8962 (face tree-sitter-hl-face:constructor fontified t) 8962 8964 (fontified t) 8964 8970 (face tree-sitter-hl-face:label fontified t) 8970 8971 (face tree-sitter-hl-face:operator fontified t) 8971 8975 (face tree-sitter-hl-face:keyword fontified t) 8975 8976 (fontified t) 8976 8982 (face tree-sitter-hl-face:property fontified t) 8982 8983 (face (rainbow-delimiters-depth-3-face) fontified t) 8983 8984 (fontified t) 8984 8985 (face tree-sitter-hl-face:operator fontified t) 8985 8986 (fontified t) 8986 8988 (face tree-sitter-hl-face:constructor fontified t) 8988 8989 (fontified t) 8989 8990 (face tree-sitter-hl-face:operator fontified t) 8990 8991 (fontified t) 8991 8996 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8996 8997 (face (rainbow-delimiters-depth-3-face) fontified t) 8997 8999 (face tree-sitter-hl-face:constructor fontified t) 8999 9000 (face (rainbow-delimiters-depth-3-face) fontified t) 9000 9001 (fontified t) 9001 9002 (face tree-sitter-hl-face:operator fontified t) 9002 9003 (fontified t) 9003 9006 (face tree-sitter-hl-face:constructor fontified t) 9006 9007 (face (rainbow-delimiters-depth-2-face) fontified t) 9007 9008 (face (rainbow-delimiters-depth-1-face) fontified t) 9008 9009 (fontified t) 9009 9018 (fontified t) 9018 9020 (face tree-sitter-hl-face:keyword fontified t) 9020 9021 (fontified t) 9021 9022 (face tree-sitter-hl-face:string fontified t) 9022 9029 (face tree-sitter-hl-face:string fontified t) 9029 9030 (face tree-sitter-hl-face:string fontified t) 9030 9031 (fontified t) 9031 9033 (face tree-sitter-hl-face:operator fontified t) 9033 9034 (fontified t) 9034 9038 (face tree-sitter-hl-face:keyword fontified t) 9038 9039 (fontified t) 9039 9051 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9051 9065 (fontified t) 9065 9067 (face tree-sitter-hl-face:keyword fontified t) 9067 9068 (fontified t) 9068 9072 (face tree-sitter-hl-face:keyword fontified t) 9072 9073 (fontified t) 9073 9080 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9080 9098 (fontified t) 9098 9103 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9103 9104 (face (rainbow-delimiters-depth-1-face) fontified t) 9104 9105 (face tree-sitter-hl-face:string fontified t) 9105 9129 (face tree-sitter-hl-face:string fontified t) 9129 9130 (face tree-sitter-hl-face:string fontified t) 9130 9131 (face (rainbow-delimiters-depth-1-face) fontified t) 9131 9161 (fontified t) 9161 9164 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9164 9165 (fontified t) 9165 9166 (face tree-sitter-hl-face:operator fontified t) 9166 9167 (fontified t) 9167 9171 (face tree-sitter-hl-face:keyword fontified t) 9171 9172 (fontified t) 9172 9175 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9175 9176 (face (rainbow-delimiters-depth-1-face) fontified t) 9176 9181 (fontified t) 9181 9183 (fontified t) 9183 9188 (fontified t) 9188 9189 (face (rainbow-delimiters-depth-1-face) fontified t) 9189 9190 (fontified t) 9190 9191 (face tree-sitter-hl-face:operator fontified t) 9191 9192 (fontified t) 9192 9195 (face tree-sitter-hl-face:constructor fontified t) 9195 9196 (fontified t) 9196 9197 (face tree-sitter-hl-face:operator fontified t) 9197 9198 (fontified t) 9198 9203 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9203 9204 (face (rainbow-delimiters-depth-1-face) fontified t) 9204 9206 (face tree-sitter-hl-face:constructor fontified t) 9206 9207 (face (rainbow-delimiters-depth-1-face) fontified t) 9207 9233 (fontified t) 9233 9235 (face tree-sitter-hl-face:keyword fontified t) 9235 9236 (fontified t) 9236 9240 (face tree-sitter-hl-face:keyword fontified t) 9240 9241 (fontified t) 9241 9246 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9246 9247 (face (rainbow-delimiters-depth-1-face) fontified t) 9247 9252 (fontified t) 9252 9254 (fontified t) 9254 9259 (fontified t) 9259 9260 (face (rainbow-delimiters-depth-1-face) fontified t) 9260 9261 (fontified t) 9261 9262 (face tree-sitter-hl-face:operator fontified t) 9262 9263 (fontified t) 9263 9266 (face tree-sitter-hl-face:number fontified t) 9266 9274 (fontified t) 9274 9275 (fontified t) 9275 9284 (fontified t) 9284 9286 (face tree-sitter-hl-face:keyword fontified t) 9286 9287 (fontified t) 9287 9291 (face tree-sitter-hl-face:keyword fontified t) 9291 9292 (fontified t) 9292 9295 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9295 9299 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9299 9301 (fontified t) 9301 9321 (fontified t) 9321 9326 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9326 9327 (face (rainbow-delimiters-depth-1-face) fontified t) 9327 9328 (face tree-sitter-hl-face:string fontified t) 9328 9353 (face tree-sitter-hl-face:string fontified t) 9353 9354 (face tree-sitter-hl-face:string fontified t) 9354 9356 (fontified t) 9356 9360 (face tree-sitter-hl-face:keyword fontified t) 9360 9361 (fontified t) 9361 9366 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9366 9367 (face (rainbow-delimiters-depth-2-face) fontified t) 9367 9372 (fontified t) 9372 9374 (fontified t) 9374 9379 (fontified t) 9379 9380 (face (rainbow-delimiters-depth-2-face) fontified t) 9380 9381 (face (rainbow-delimiters-depth-1-face) fontified t) 9381 9382 (fontified t) 9382 9399 (fontified t) 9399 9415 (fontified t) 9415 9418 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9418 9419 (fontified t) 9419 9420 (face tree-sitter-hl-face:operator fontified t) 9420 9427 (fontified t) 9427 9433 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9433 9434 (face (rainbow-delimiters-depth-1-face) fontified t) 9434 9435 (face tree-sitter-hl-face:number fontified t) 9435 9437 (fontified t) 9437 9441 (face tree-sitter-hl-face:keyword fontified t) 9441 9442 (fontified t) 9442 9447 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9447 9448 (face (rainbow-delimiters-depth-2-face) fontified t) 9448 9453 (fontified t) 9453 9455 (fontified t) 9455 9460 (fontified t) 9460 9461 (face (rainbow-delimiters-depth-2-face) fontified t) 9461 9462 (fontified t) 9462 9463 (fontified t) 9463 9498 (fontified t) 9498 9502 (face tree-sitter-hl-face:label fontified t) 9502 9503 (face tree-sitter-hl-face:operator fontified t) 9503 9504 (face (rainbow-delimiters-depth-2-face) fontified t) 9504 9506 (face tree-sitter-hl-face:constructor fontified t) 9506 9508 (fontified t) 9508 9510 (face tree-sitter-hl-face:constructor fontified t) 9510 9511 (face (rainbow-delimiters-depth-2-face) fontified t) 9511 9512 (fontified t) 9512 9513 (fontified t) 9513 9518 (face tree-sitter-hl-face:label fontified t) 9518 9519 (face tree-sitter-hl-face:operator fontified t) 9519 9523 (face tree-sitter-hl-face:keyword fontified t) 9523 9524 (fontified t) 9524 9529 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9529 9530 (fontified t) 9530 9531 (fontified t) 9531 9537 (face tree-sitter-hl-face:label fontified t) 9537 9538 (face tree-sitter-hl-face:operator fontified t) 9538 9542 (face tree-sitter-hl-face:keyword fontified t) 9542 9543 (fontified t) 9543 9549 (face tree-sitter-hl-face:property fontified t) 9549 9550 (face (rainbow-delimiters-depth-1-face) fontified t) 9550 9551 (fontified t) 9551 9567 (fontified t) 9567 9570 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9570 9571 (fontified t) 9571 9572 (face tree-sitter-hl-face:operator fontified t) 9572 9573 (fontified t) 9573 9576 (face tree-sitter-hl-face:constructor fontified t) 9576 9577 (fontified t) 9577 9578 (face tree-sitter-hl-face:operator fontified t) 9578 9579 (fontified t) 9579 9582 (face tree-sitter-hl-face:constructor fontified t) 9582 9583 (fontified t) 9583 9584 (face tree-sitter-hl-face:operator fontified t) 9584 9585 (fontified t) 9585 9590 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9590 9591 (face (rainbow-delimiters-depth-1-face) fontified t) 9591 9593 (face tree-sitter-hl-face:constructor fontified t) 9593 9594 (face (rainbow-delimiters-depth-1-face) fontified t) 9594 9620 (fontified t) 9620 9622 (face tree-sitter-hl-face:keyword fontified t) 9622 9623 (fontified t) 9623 9627 (face tree-sitter-hl-face:keyword fontified t) 9627 9628 (fontified t) 9628 9635 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9635 9649 (fontified t) 9649 9651 (face tree-sitter-hl-face:keyword fontified t) 9651 9652 (fontified t) 9652 9653 (face tree-sitter-hl-face:string fontified t) 9653 9656 (face tree-sitter-hl-face:string fontified t) 9656 9657 (face tree-sitter-hl-face:string fontified t) 9657 9658 (fontified t) 9658 9660 (face tree-sitter-hl-face:operator fontified t) 9660 9661 (fontified t) 9661 9665 (face tree-sitter-hl-face:keyword fontified t) 9665 9666 (fontified t) 9666 9675 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9675 9676 (face (rainbow-delimiters-depth-1-face) fontified t) 9676 9681 (fontified t) 9681 9683 (fontified t) 9683 9688 (fontified t) 9688 9689 (face (rainbow-delimiters-depth-1-face) fontified t) 9689 9707 (fontified t) 9707 9708 (face tree-sitter-hl-face:keyword fontified t) 9708 9709 (face tree-sitter-hl-face:keyword fontified t) 9709 9710 (fontified t) 9710 9711 (face tree-sitter-hl-face:string fontified t) 9711 9715 (face tree-sitter-hl-face:string fontified t) 9715 9716 (face tree-sitter-hl-face:string fontified t) 9716 9717 (fontified t) 9717 9719 (face tree-sitter-hl-face:operator fontified t) 9719 9720 (fontified t) 9720 9724 (face tree-sitter-hl-face:keyword fontified t) 9724 9725 (fontified t) 9725 9734 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9734 9735 (face (rainbow-delimiters-depth-1-face) fontified t) 9735 9740 (fontified t) 9740 9742 (fontified t) 9742 9747 (fontified t) 9747 9748 (face (rainbow-delimiters-depth-1-face) fontified t) 9748 9770 (fontified t) 9770 9775 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9775 9776 (face (rainbow-delimiters-depth-1-face) fontified t) 9776 9777 (face tree-sitter-hl-face:string fontified t) 9777 9815 (face tree-sitter-hl-face:string fontified t) 9815 9816 (face tree-sitter-hl-face:string fontified t) 9816 9817 (fontified t) 9817 9818 (face tree-sitter-hl-face:operator fontified t) 9818 9819 (fontified t) 9819 9823 (face tree-sitter-hl-face:keyword fontified t) 9823 9824 (fontified t) 9824 9829 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9829 9830 (face (rainbow-delimiters-depth-2-face) fontified t) 9830 9835 (fontified t) 9835 9837 (fontified t) 9837 9842 (fontified t) 9842 9843 (face (rainbow-delimiters-depth-2-face) fontified t) 9843 9844 (fontified t) 9844 9847 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9847 9848 (face (rainbow-delimiters-depth-2-face) fontified t) 9848 9849 (face (rainbow-delimiters-depth-2-face) fontified t) 9849 9850 (fontified t) 9850 9856 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9856 9857 (face (rainbow-delimiters-depth-2-face) fontified t) 9857 9858 (face (rainbow-delimiters-depth-2-face) fontified t) 9858 9859 (fontified t) 9859 9864 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9864 9865 (face (rainbow-delimiters-depth-2-face) fontified t) 9865 9866 (face (rainbow-delimiters-depth-2-face) fontified t) 9866 9867 (face (rainbow-delimiters-depth-1-face) fontified t) 9867 9884 (fontified t) 9884 9888 (face tree-sitter-hl-face:keyword fontified t) 9888 9910 (fontified t) 9910 9915 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9915 9916 (face (rainbow-delimiters-depth-1-face) fontified t) 9916 9917 (face tree-sitter-hl-face:string fontified t) 9917 9952 (face tree-sitter-hl-face:string fontified t) 9952 9953 (face tree-sitter-hl-face:string fontified t) 9953 9955 (fontified t) 9955 9959 (face tree-sitter-hl-face:keyword fontified t) 9959 9960 (fontified t) 9960 9965 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9965 9966 (face (rainbow-delimiters-depth-2-face) fontified t) 9966 9971 (fontified t) 9971 9973 (fontified t) 9973 9978 (fontified t) 9978 9979 (face (rainbow-delimiters-depth-2-face) fontified t) 9979 9980 (face (rainbow-delimiters-depth-1-face) fontified t) 9980 9993 (fontified t) 9993 9997 (face tree-sitter-hl-face:keyword fontified t) 9997 9998 (fontified t) 9998 9999 (face tree-sitter-hl-face:string fontified t) 9999 10001 (face tree-sitter-hl-face:string fontified t) 10001 10002 (face tree-sitter-hl-face:string fontified t) 10002 10003 (fontified t) 10003 10005 (face tree-sitter-hl-face:operator fontified t) 10005 10006 (fontified t) 10006 10010 (face tree-sitter-hl-face:keyword fontified t) 10010 10011 (fontified t) 10011 10020 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10020 10021 (face (rainbow-delimiters-depth-1-face) fontified t) 10021 10026 (fontified t) 10026 10028 (fontified t) 10028 10033 (fontified t) 10033 10034 (face (rainbow-delimiters-depth-1-face) fontified t) 10034 10052 (fontified t) 10052 10057 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10057 10058 (face (rainbow-delimiters-depth-1-face) fontified t) 10058 10059 (face tree-sitter-hl-face:string fontified t) 10059 10099 (face tree-sitter-hl-face:string fontified t) 10099 10100 (face tree-sitter-hl-face:string fontified t) 10100 10101 (fontified t) 10101 10102 (face tree-sitter-hl-face:operator fontified t) 10102 10103 (fontified t) 10103 10107 (face tree-sitter-hl-face:keyword fontified t) 10107 10108 (fontified t) 10108 10113 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10113 10114 (face (rainbow-delimiters-depth-2-face) fontified t) 10114 10119 (fontified t) 10119 10121 (fontified t) 10121 10126 (fontified t) 10126 10127 (face (rainbow-delimiters-depth-2-face) fontified t) 10127 10128 (fontified t) 10128 10131 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10131 10132 (face (rainbow-delimiters-depth-2-face) fontified t) 10132 10133 (face (rainbow-delimiters-depth-2-face) fontified t) 10133 10134 (fontified t) 10134 10140 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10140 10141 (face (rainbow-delimiters-depth-2-face) fontified t) 10141 10142 (face (rainbow-delimiters-depth-2-face) fontified t) 10142 10143 (fontified t) 10143 10148 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10148 10149 (face (rainbow-delimiters-depth-2-face) fontified t) 10149 10150 (face (rainbow-delimiters-depth-2-face) fontified t) 10150 10151 (face (rainbow-delimiters-depth-1-face) fontified t) 10151 10177 (fontified t) 10177 10183 (face tree-sitter-hl-face:keyword fontified t) 10183 10184 (fontified t) 10184 10187 (face tree-sitter-hl-face:constructor fontified t) 10187 10188 (fontified t) 10188 10189 (fontified t) 10189 10193 (fontified t) 10193 10196 (face tree-sitter-hl-face:keyword fontified t) 10196 10197 (fontified t) 10197 10206 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 10206 10207 (face (rainbow-delimiters-depth-1-face) fontified t) 10207 10211 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 10211 10212 (face (rainbow-delimiters-depth-1-face) fontified t) 10212 10222 (fontified t) 10222 10226 (face tree-sitter-hl-face:keyword fontified t) 10226 10227 (fontified t) 10227 10229 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10229 10230 (fontified t) 10230 10231 (face tree-sitter-hl-face:operator fontified t) 10231 10232 (fontified t) 10232 10233 (face (rainbow-delimiters-depth-1-face) fontified t) 10233 10234 (face (rainbow-delimiters-depth-1-face) fontified t) 10234 10240 (fontified t) 10240 10241 (fontified t) 10241 10242 (fontified t) 10242 10243 (fontified t) 10243 10247 (face tree-sitter-hl-face:keyword fontified t) 10247 10248 (fontified t) 10248 10250 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10250 10251 (fontified t) 10251 10252 (face tree-sitter-hl-face:operator fontified t) 10252 10253 (fontified t) 10253 10254 (face (rainbow-delimiters-depth-1-face) fontified t) 10254 10255 (face (rainbow-delimiters-depth-1-face) fontified t) 10255 10265 (fontified t) 10265 10267 (face tree-sitter-hl-face:keyword fontified t) 10267 10268 (fontified t) 10268 10269 (face tree-sitter-hl-face:string fontified t) 10269 10276 (face tree-sitter-hl-face:string fontified t) 10276 10277 (face tree-sitter-hl-face:string fontified t) 10277 10278 (fontified t) 10278 10280 (face tree-sitter-hl-face:operator fontified t) 10280 10281 (fontified t) 10281 10285 (face tree-sitter-hl-face:keyword fontified t) 10285 10286 (fontified t) 10286 10298 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10298 10312 (fontified t) 10312 10316 (face tree-sitter-hl-face:keyword fontified t) 10316 10317 (fontified t) 10317 10318 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10318 10319 (fontified t) 10319 10320 (face tree-sitter-hl-face:operator fontified t) 10320 10321 (fontified t) 10321 10324 (face tree-sitter-hl-face:number fontified t) 10324 10342 (fontified t) 10342 10345 (face tree-sitter-hl-face:keyword fontified t) 10345 10346 (fontified t) 10346 10351 (face tree-sitter-hl-face:variable fontified t) 10351 10352 (fontified t) 10352 10354 (face tree-sitter-hl-face:operator fontified t) 10354 10355 (fontified t) 10355 10360 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10360 10361 (face (rainbow-delimiters-depth-1-face) fontified t) 10361 10365 (face tree-sitter-hl-face:keyword fontified t) 10365 10366 (fontified t) 10366 10371 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10371 10372 (face (rainbow-delimiters-depth-1-face) fontified t) 10372 10386 (fontified t) 10386 10390 (face tree-sitter-hl-face:keyword fontified t) 10390 10391 (fontified t) 10391 10393 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10393 10394 (fontified t) 10394 10400 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10400 10401 (face (rainbow-delimiters-depth-1-face) fontified t) 10401 10404 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10404 10405 (face (rainbow-delimiters-depth-2-face) fontified t) 10405 10409 (face tree-sitter-hl-face:keyword fontified t) 10409 10410 (fontified t) 10410 10418 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10418 10419 (fontified t) 10419 10420 (face tree-sitter-hl-face:operator fontified t) 10420 10421 (fontified t) 10421 10425 (face tree-sitter-hl-face:keyword fontified t) 10425 10426 (fontified t) 10426 10430 (face tree-sitter-hl-face:property fontified t) 10430 10431 (face (rainbow-delimiters-depth-3-face) fontified t) 10431 10436 (fontified t) 10436 10437 (face (rainbow-delimiters-depth-3-face) fontified t) 10437 10438 (face (rainbow-delimiters-depth-2-face) fontified t) 10438 10439 (face (rainbow-delimiters-depth-1-face) fontified t) 10439 10452 (fontified t) 10452 10456 (face tree-sitter-hl-face:keyword fontified t) 10456 10457 (fontified t) 10457 10459 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10459 10460 (fontified t) 10460 10466 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10466 10467 (face (rainbow-delimiters-depth-1-face) fontified t) 10467 10471 (face tree-sitter-hl-face:keyword fontified t) 10471 10472 (fontified t) 10472 10473 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10473 10474 (fontified t) 10474 10475 (face tree-sitter-hl-face:operator fontified t) 10475 10476 (fontified t) 10476 10480 (face tree-sitter-hl-face:keyword fontified t) 10480 10481 (fontified t) 10481 10485 (face tree-sitter-hl-face:property fontified t) 10485 10486 (face (rainbow-delimiters-depth-2-face) fontified t) 10486 10491 (fontified t) 10491 10492 (face (rainbow-delimiters-depth-2-face) fontified t) 10492 10493 (face (rainbow-delimiters-depth-1-face) fontified t) 10493 10506 (fontified t) 10506 10509 (face tree-sitter-hl-face:comment fontified t) 10509 10530 (face tree-sitter-hl-face:comment fontified t) 10530 10548 (fontified t) 10548 10552 (face tree-sitter-hl-face:keyword fontified t) 10552 10553 (fontified t) 10553 10555 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10555 10556 (fontified t) 10556 10557 (face tree-sitter-hl-face:operator fontified t) 10557 10564 (fontified t) 10564 10570 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10570 10571 (face (rainbow-delimiters-depth-1-face) fontified t) 10571 10575 (face tree-sitter-hl-face:keyword fontified t) 10575 10576 (fontified t) 10576 10578 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10578 10580 (fontified t) 10580 10585 (face tree-sitter-hl-face:label fontified t) 10585 10586 (face tree-sitter-hl-face:operator fontified t) 10586 10592 (fontified t) 10592 10595 (face tree-sitter-hl-face:property fontified t) 10595 10597 (fontified t) 10597 10603 (face tree-sitter-hl-face:label fontified t) 10603 10604 (face tree-sitter-hl-face:operator fontified t) 10604 10608 (face tree-sitter-hl-face:keyword fontified t) 10608 10609 (fontified t) 10609 10615 (face tree-sitter-hl-face:property fontified t) 10615 10616 (face (rainbow-delimiters-depth-1-face) fontified t) 10616 10625 (fontified t) 10625 10629 (face tree-sitter-hl-face:keyword fontified t) 10629 10630 (fontified t) 10630 10632 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10632 10633 (fontified t) 10633 10634 (face tree-sitter-hl-face:operator fontified t) 10634 10641 (fontified t) 10641 10647 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10647 10648 (face (rainbow-delimiters-depth-1-face) fontified t) 10648 10652 (face tree-sitter-hl-face:keyword fontified t) 10652 10653 (fontified t) 10653 10655 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10655 10657 (fontified t) 10657 10662 (face tree-sitter-hl-face:label fontified t) 10662 10663 (face tree-sitter-hl-face:operator fontified t) 10663 10667 (face tree-sitter-hl-face:keyword fontified t) 10667 10668 (fontified t) 10668 10673 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10673 10674 (fontified t) 10674 10675 (fontified t) 10675 10681 (face tree-sitter-hl-face:label fontified t) 10681 10682 (face tree-sitter-hl-face:operator fontified t) 10682 10686 (face tree-sitter-hl-face:keyword fontified t) 10686 10687 (fontified t) 10687 10693 (face tree-sitter-hl-face:property fontified t) 10693 10694 (face (rainbow-delimiters-depth-1-face) fontified t) 10694 10703 (fontified t) 10703 10707 (face tree-sitter-hl-face:keyword fontified t) 10707 10708 (fontified t) 10708 10714 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 10714 10715 (fontified t) 10715 10716 (face tree-sitter-hl-face:operator fontified t) 10716 10723 (fontified t) 10723 10726 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10726 10727 (face (rainbow-delimiters-depth-1-face) fontified t) 10727 10728 (face (rainbow-delimiters-depth-2-face) fontified t) 10728 10734 (fontified t) 10734 10740 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10740 10741 (face (rainbow-delimiters-depth-3-face) fontified t) 10741 10742 (face (rainbow-delimiters-depth-4-face) fontified t) 10742 10743 (face tree-sitter-hl-face:number fontified t) 10743 10744 (face (rainbow-delimiters-depth-4-face) fontified t) 10744 10746 (fontified t) 10746 10752 (face tree-sitter-hl-face:label fontified t) 10752 10753 (face tree-sitter-hl-face:operator fontified t) 10753 10757 (face tree-sitter-hl-face:keyword fontified t) 10757 10758 (fontified t) 10758 10764 (face tree-sitter-hl-face:property fontified t) 10764 10765 (face (rainbow-delimiters-depth-3-face) fontified t) 10765 10773 (fontified t) 10773 10779 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10779 10780 (face (rainbow-delimiters-depth-3-face) fontified t) 10780 10784 (face tree-sitter-hl-face:keyword fontified t) 10784 10785 (fontified t) 10785 10787 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10787 10789 (fontified t) 10789 10792 (face tree-sitter-hl-face:label fontified t) 10792 10793 (face tree-sitter-hl-face:operator fontified t) 10793 10794 (face tree-sitter-hl-face:number fontified t) 10794 10795 (face (rainbow-delimiters-depth-3-face) fontified t) 10795 10796 (face (rainbow-delimiters-depth-2-face) fontified t) 10796 10797 (face (rainbow-delimiters-depth-1-face) fontified t) 10797 10809 (fontified t) 10809 10810 (fontified t) 10810 10815 (fontified t) 10815 10817 (face tree-sitter-hl-face:keyword fontified t) 10817 10818 (fontified t) 10818 10822 (face tree-sitter-hl-face:keyword fontified t) 10822 10823 (fontified t) 10823 10830 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10830 10844 (fontified t) 10844 10849 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10849 10850 (face (rainbow-delimiters-depth-1-face) fontified t) 10850 10851 (face tree-sitter-hl-face:string fontified t) 10851 10853 (face tree-sitter-hl-face:string fontified t) 10853 10854 (face tree-sitter-hl-face:string fontified t) 10854 10856 (fontified t) 10856 10860 (face tree-sitter-hl-face:keyword fontified t) 10860 10861 (fontified t) 10861 10863 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10863 10865 (fontified t) 10865 10866 (face tree-sitter-hl-face:string fontified t) 10866 10868 (face tree-sitter-hl-face:string fontified t) 10868 10869 (face tree-sitter-hl-face:string fontified t) 10869 10871 (fontified t) 10871 10875 (face tree-sitter-hl-face:keyword fontified t) 10875 10876 (fontified t) 10876 10878 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10878 10880 (fontified t) 10880 10881 (face tree-sitter-hl-face:string fontified t) 10881 10887 (face tree-sitter-hl-face:string fontified t) 10887 10888 (face tree-sitter-hl-face:string fontified t) 10888 10890 (fontified t) 10890 10894 (face tree-sitter-hl-face:keyword fontified t) 10894 10895 (fontified t) 10895 10899 (face tree-sitter-hl-face:property fontified t) 10899 10901 (face tree-sitter-hl-face:property fontified t) 10901 10902 (face (rainbow-delimiters-depth-1-face) fontified t) 10902 10912 (fontified t) 10912 10916 (face tree-sitter-hl-face:keyword fontified t) 10916 10917 (fontified t) 10917 10920 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10920 10921 (fontified t) 10921 10922 (face tree-sitter-hl-face:operator fontified t) 10922 10929 (fontified t) 10929 10935 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10935 10936 (face (rainbow-delimiters-depth-1-face) fontified t) 10936 10940 (face tree-sitter-hl-face:keyword fontified t) 10940 10941 (fontified t) 10941 10944 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10944 10946 (fontified t) 10946 10951 (face tree-sitter-hl-face:label fontified t) 10951 10952 (face tree-sitter-hl-face:operator fontified t) 10952 10956 (face tree-sitter-hl-face:keyword fontified t) 10956 10957 (fontified t) 10957 10962 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10962 10964 (fontified t) 10964 10970 (face tree-sitter-hl-face:label fontified t) 10970 10971 (face tree-sitter-hl-face:operator fontified t) 10971 10975 (face tree-sitter-hl-face:keyword fontified t) 10975 10976 (fontified t) 10976 10982 (face tree-sitter-hl-face:property fontified t) 10982 10983 (face (rainbow-delimiters-depth-1-face) fontified t) 10983 10998 (fontified t) 10998 11001 (fontified t) 11001 11005 (face tree-sitter-hl-face:keyword fontified t) 11005 11006 (fontified t) 11006 11016 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11016 11017 (fontified t) 11017 11018 (face tree-sitter-hl-face:operator fontified t) 11018 11025 (fontified t) 11025 11029 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11029 11030 (face (rainbow-delimiters-depth-1-face) fontified t) 11030 11034 (face tree-sitter-hl-face:keyword fontified t) 11034 11035 (fontified t) 11035 11043 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11043 11045 (fontified t) 11045 11050 (face tree-sitter-hl-face:label fontified t) 11050 11051 (face tree-sitter-hl-face:operator fontified t) 11051 11055 (face tree-sitter-hl-face:keyword fontified t) 11055 11056 (fontified t) 11056 11061 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11061 11063 (fontified t) 11063 11069 (face tree-sitter-hl-face:label fontified t) 11069 11070 (face tree-sitter-hl-face:operator fontified t) 11070 11074 (face tree-sitter-hl-face:keyword fontified t) 11074 11075 (fontified t) 11075 11081 (face tree-sitter-hl-face:property fontified t) 11081 11082 (face (rainbow-delimiters-depth-1-face) fontified t) 11082 11091 (fontified t) 11091 11095 (face tree-sitter-hl-face:keyword fontified t) 11095 11096 (fontified t) 11096 11102 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11102 11103 (fontified t) 11103 11104 (face tree-sitter-hl-face:operator fontified t) 11104 11111 (fontified t) 11111 11115 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11115 11116 (face (rainbow-delimiters-depth-1-face) fontified t) 11116 11120 (face tree-sitter-hl-face:keyword fontified t) 11120 11121 (fontified t) 11121 11129 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11129 11131 (fontified t) 11131 11136 (face tree-sitter-hl-face:label fontified t) 11136 11137 (face tree-sitter-hl-face:operator fontified t) 11137 11141 (face tree-sitter-hl-face:keyword fontified t) 11141 11142 (fontified t) 11142 11147 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11147 11149 (fontified t) 11149 11155 (face tree-sitter-hl-face:label fontified t) 11155 11156 (face tree-sitter-hl-face:operator fontified t) 11156 11160 (face tree-sitter-hl-face:keyword fontified t) 11160 11161 (fontified t) 11161 11167 (face tree-sitter-hl-face:property fontified t) 11167 11168 (face (rainbow-delimiters-depth-1-face) fontified t) 11168 11183 (fontified t) 11183 11186 (fontified t) 11186 11189 (face tree-sitter-hl-face:keyword fontified t) 11189 11190 (fontified t) 11190 11195 (face tree-sitter-hl-face:variable fontified t) 11195 11196 (fontified t) 11196 11198 (face tree-sitter-hl-face:operator fontified t) 11198 11199 (fontified t) 11199 11204 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 11204 11205 (face (rainbow-delimiters-depth-1-face) fontified t) 11205 11209 (face tree-sitter-hl-face:keyword fontified t) 11209 11210 (fontified t) 11210 11215 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11215 11216 (face (rainbow-delimiters-depth-1-face) fontified t) 11216 11230 (fontified t) 11230 11234 (face tree-sitter-hl-face:keyword fontified t) 11234 11235 (fontified t) 11235 11245 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11245 11246 (face (rainbow-delimiters-depth-1-face) fontified t) 11246 11250 (face tree-sitter-hl-face:keyword fontified t) 11250 11251 (fontified t) 11251 11257 (face tree-sitter-hl-face:property fontified t) 11257 11258 (face (rainbow-delimiters-depth-2-face) fontified t) 11258 11263 (fontified t) 11263 11264 (face (rainbow-delimiters-depth-2-face) fontified t) 11264 11267 (fontified t) 11267 11271 (face tree-sitter-hl-face:keyword fontified t) 11271 11272 (fontified t) 11272 11278 (face tree-sitter-hl-face:property fontified t) 11278 11279 (face (rainbow-delimiters-depth-2-face) fontified t) 11279 11285 (fontified t) 11285 11286 (face tree-sitter-hl-face:operator fontified t) 11286 11287 (fontified t) 11287 11288 (face tree-sitter-hl-face:number fontified t) 11288 11289 (face (rainbow-delimiters-depth-2-face) fontified t) 11289 11290 (face (rainbow-delimiters-depth-1-face) fontified t) 11290 11291 (fontified t) 11291 11292 (face tree-sitter-hl-face:operator fontified t) 11292 11299 (fontified t) 11299 11302 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11302 11303 (face (rainbow-delimiters-depth-1-face) fontified t) 11303 11304 (face tree-sitter-hl-face:operator fontified t) 11304 11308 (face tree-sitter-hl-face:keyword fontified t) 11308 11309 (fontified t) 11309 11311 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11311 11312 (fontified t) 11312 11313 (face tree-sitter-hl-face:operator fontified t) 11313 11314 (fontified t) 11314 11318 (face tree-sitter-hl-face:keyword fontified t) 11318 11319 (fontified t) 11319 11322 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11322 11323 (face (rainbow-delimiters-depth-2-face) fontified t) 11323 11328 (fontified t) 11328 11329 (face (rainbow-delimiters-depth-2-face) fontified t) 11329 11330 (face (rainbow-delimiters-depth-1-face) fontified t) 11330 11343 (fontified t) 11343 11347 (face tree-sitter-hl-face:keyword fontified t) 11347 11348 (fontified t) 11348 11354 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11354 11355 (face (rainbow-delimiters-depth-1-face) fontified t) 11355 11359 (face tree-sitter-hl-face:keyword fontified t) 11359 11360 (fontified t) 11360 11366 (face tree-sitter-hl-face:property fontified t) 11366 11367 (face (rainbow-delimiters-depth-2-face) fontified t) 11367 11372 (fontified t) 11372 11373 (face (rainbow-delimiters-depth-2-face) fontified t) 11373 11376 (fontified t) 11376 11380 (face tree-sitter-hl-face:keyword fontified t) 11380 11381 (fontified t) 11381 11387 (face tree-sitter-hl-face:property fontified t) 11387 11388 (face (rainbow-delimiters-depth-2-face) fontified t) 11388 11394 (fontified t) 11394 11395 (face tree-sitter-hl-face:operator fontified t) 11395 11396 (fontified t) 11396 11397 (face tree-sitter-hl-face:number fontified t) 11397 11398 (face (rainbow-delimiters-depth-2-face) fontified t) 11398 11399 (face (rainbow-delimiters-depth-1-face) fontified t) 11399 11400 (fontified t) 11400 11401 (face tree-sitter-hl-face:operator fontified t) 11401 11402 (fontified t) 11402 11406 (face tree-sitter-hl-face:keyword fontified t) 11406 11407 (fontified t) 11407 11409 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11409 11410 (fontified t) 11410 11411 (face tree-sitter-hl-face:operator fontified t) 11411 11412 (fontified t) 11412 11416 (face tree-sitter-hl-face:keyword fontified t) 11416 11417 (fontified t) 11417 11420 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11420 11421 (face (rainbow-delimiters-depth-1-face) fontified t) 11421 11426 (fontified t) 11426 11427 (face (rainbow-delimiters-depth-1-face) fontified t) 11427 11445 (fontified t) 11445 11467 (face tree-sitter-hl-face:comment fontified t) 11467 11476 (fontified t) 11476 11494 (face tree-sitter-hl-face:comment fontified t) 11494 11512 (fontified t) 11512 11545 (face tree-sitter-hl-face:comment fontified t) 11545 11554 (fontified t) 11554 11618 (face tree-sitter-hl-face:comment fontified t) 11618 11627 (fontified t) 11627 11678 (face tree-sitter-hl-face:comment fontified t) 11678 11688 (fontified t) 11688 11689 (fontified t) 11689 11696 (fontified t) 11696 11740 (face tree-sitter-hl-face:comment fontified t) 11740 11741 (face tree-sitter-hl-face:comment fontified t) 11741 11742 (face tree-sitter-hl-face:comment fontified t) 11742 11775 (face tree-sitter-hl-face:comment fontified t) 11775 11784 (fontified t) 11784 11871 (face tree-sitter-hl-face:comment fontified t) 11871 11890 (fontified t) 11890 11892 (face tree-sitter-hl-face:keyword fontified t) 11892 11893 (fontified t) 11893 11897 (face tree-sitter-hl-face:keyword fontified t) 11897 11898 (fontified t) 11898 11905 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11905 11919 (fontified t) 11919 11924 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 11924 11925 (face (rainbow-delimiters-depth-1-face) fontified t) 11925 11926 (face tree-sitter-hl-face:string fontified t) 11926 11928 (face tree-sitter-hl-face:string fontified t) 11928 11929 (face tree-sitter-hl-face:string fontified t) 11929 11931 (fontified t) 11931 11935 (face tree-sitter-hl-face:keyword fontified t) 11935 11936 (fontified t) 11936 11938 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11938 11940 (fontified t) 11940 11941 (face tree-sitter-hl-face:string fontified t) 11941 11944 (face tree-sitter-hl-face:string fontified t) 11944 11945 (face tree-sitter-hl-face:string fontified t) 11945 11947 (fontified t) 11947 11951 (face tree-sitter-hl-face:keyword fontified t) 11951 11952 (fontified t) 11952 11955 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11955 11956 (face (rainbow-delimiters-depth-1-face) fontified t) 11956 11974 (fontified t) 11974 11992 (face tree-sitter-hl-face:comment fontified t) 11992 12001 (fontified t) 12001 12066 (face tree-sitter-hl-face:comment fontified t) 12066 12084 (fontified t) 12084 12088 (face tree-sitter-hl-face:keyword fontified t) 12088 12089 (fontified t) 12089 12098 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12098 12099 (fontified t) 12099 12100 (face tree-sitter-hl-face:operator fontified t) 12100 12104 (fontified t) 12104 12109 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12109 12110 (face (rainbow-delimiters-depth-1-face) fontified t) 12110 12114 (face tree-sitter-hl-face:keyword fontified t) 12114 12115 (fontified t) 12115 12124 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12124 12125 (face (rainbow-delimiters-depth-1-face) fontified t) 12125 12126 (fontified t) 12126 12133 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12133 12134 (face (rainbow-delimiters-depth-1-face) fontified t) 12134 12138 (face tree-sitter-hl-face:keyword fontified t) 12138 12139 (fontified t) 12139 12144 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12144 12146 (fontified t) 12146 12150 (face tree-sitter-hl-face:keyword fontified t) 12150 12151 (fontified t) 12151 12156 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12156 12157 (face (rainbow-delimiters-depth-1-face) fontified t) 12157 12166 (fontified t) 12166 12170 (face tree-sitter-hl-face:keyword fontified t) 12170 12171 (fontified t) 12171 12174 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12174 12176 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12176 12177 (fontified t) 12177 12178 (face tree-sitter-hl-face:operator fontified t) 12178 12185 (fontified t) 12185 12191 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12191 12192 (face (rainbow-delimiters-depth-1-face) fontified t) 12192 12196 (face tree-sitter-hl-face:keyword fontified t) 12196 12197 (fontified t) 12197 12202 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12202 12204 (fontified t) 12204 12209 (face tree-sitter-hl-face:label fontified t) 12209 12210 (face tree-sitter-hl-face:operator fontified t) 12210 12214 (face tree-sitter-hl-face:keyword fontified t) 12214 12215 (fontified t) 12215 12220 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12220 12222 (fontified t) 12222 12228 (face tree-sitter-hl-face:label fontified t) 12228 12229 (face tree-sitter-hl-face:operator fontified t) 12229 12233 (face tree-sitter-hl-face:keyword fontified t) 12233 12234 (fontified t) 12234 12240 (face tree-sitter-hl-face:property fontified t) 12240 12241 (face (rainbow-delimiters-depth-1-face) fontified t) 12241 12242 (fontified t) 12242 12246 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12246 12247 (face (rainbow-delimiters-depth-1-face) fontified t) 12247 12251 (face tree-sitter-hl-face:keyword fontified t) 12251 12252 (fontified t) 12252 12257 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12257 12259 (fontified t) 12259 12263 (face tree-sitter-hl-face:keyword fontified t) 12263 12264 (fontified t) 12264 12269 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12269 12270 (face (rainbow-delimiters-depth-1-face) fontified t) 12270 12279 (fontified t) 12279 12283 (face tree-sitter-hl-face:keyword fontified t) 12283 12284 (fontified t) 12284 12289 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12289 12290 (fontified t) 12290 12291 (face tree-sitter-hl-face:operator fontified t) 12291 12298 (fontified t) 12298 12304 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12304 12305 (face (rainbow-delimiters-depth-1-face) fontified t) 12305 12309 (face tree-sitter-hl-face:keyword fontified t) 12309 12310 (fontified t) 12310 12315 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12315 12317 (fontified t) 12317 12322 (face tree-sitter-hl-face:label fontified t) 12322 12323 (face tree-sitter-hl-face:operator fontified t) 12323 12327 (face tree-sitter-hl-face:keyword fontified t) 12327 12328 (fontified t) 12328 12333 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12333 12335 (fontified t) 12335 12341 (face tree-sitter-hl-face:label fontified t) 12341 12342 (face tree-sitter-hl-face:operator fontified t) 12342 12346 (face tree-sitter-hl-face:keyword fontified t) 12346 12347 (fontified t) 12347 12353 (face tree-sitter-hl-face:property fontified t) 12353 12354 (face (rainbow-delimiters-depth-1-face) fontified t) 12354 12355 (fontified t) 12355 12359 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12359 12360 (face (rainbow-delimiters-depth-1-face) fontified t) 12360 12364 (face tree-sitter-hl-face:keyword fontified t) 12364 12365 (fontified t) 12365 12370 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12370 12372 (fontified t) 12372 12376 (face tree-sitter-hl-face:keyword fontified t) 12376 12377 (fontified t) 12377 12382 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12382 12383 (face (rainbow-delimiters-depth-1-face) fontified t) 12383 12392 (fontified t) 12392 12396 (face tree-sitter-hl-face:keyword fontified t) 12396 12397 (fontified t) 12397 12402 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12402 12403 (fontified t) 12403 12404 (face tree-sitter-hl-face:operator fontified t) 12404 12411 (fontified t) 12411 12417 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12417 12418 (face (rainbow-delimiters-depth-1-face) fontified t) 12418 12422 (face tree-sitter-hl-face:keyword fontified t) 12422 12423 (fontified t) 12423 12428 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12428 12429 (fontified t) 12429 12430 (face tree-sitter-hl-face:operator fontified t) 12430 12437 (fontified t) 12437 12439 (face tree-sitter-hl-face:property fontified t) 12439 12440 (fontified t) 12440 12441 (face tree-sitter-hl-face:operator fontified t) 12441 12442 (fontified t) 12442 12447 (face tree-sitter-hl-face:number fontified t) 12447 12449 (fontified t) 12449 12454 (face tree-sitter-hl-face:label fontified t) 12454 12455 (face tree-sitter-hl-face:operator fontified t) 12455 12459 (face tree-sitter-hl-face:keyword fontified t) 12459 12460 (fontified t) 12460 12465 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12465 12467 (fontified t) 12467 12473 (face tree-sitter-hl-face:label fontified t) 12473 12474 (face tree-sitter-hl-face:operator fontified t) 12474 12478 (face tree-sitter-hl-face:keyword fontified t) 12478 12479 (fontified t) 12479 12485 (face tree-sitter-hl-face:property fontified t) 12485 12486 (face (rainbow-delimiters-depth-1-face) fontified t) 12486 12504 (fontified t) 12504 12522 (face tree-sitter-hl-face:comment fontified t) 12522 12531 (fontified t) 12531 12558 (face tree-sitter-hl-face:comment fontified t) 12558 12567 (fontified t) 12567 12590 (face tree-sitter-hl-face:comment fontified t) 12590 12599 (fontified t) 12599 12622 (face tree-sitter-hl-face:comment fontified t) 12622 12631 (fontified t) 12631 12654 (face tree-sitter-hl-face:comment fontified t) 12654 12661 (fontified t) 12661 12664 (face tree-sitter-hl-face:keyword fontified t) 12664 12665 (fontified t) 12665 12675 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 12675 12676 (face (rainbow-delimiters-depth-1-face) fontified t) 12676 12680 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 12680 12681 (face (rainbow-delimiters-depth-1-face) fontified t) 12681 12692 (fontified t) 12692 12723 (face tree-sitter-hl-face:comment fontified t) 12723 12732 (fontified t) 12732 12734 (face tree-sitter-hl-face:keyword fontified t) 12734 12735 (fontified t) 12735 12739 (face tree-sitter-hl-face:keyword fontified t) 12739 12740 (fontified t) 12740 12747 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12747 12761 (fontified t) 12761 12766 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 12766 12767 (face (rainbow-delimiters-depth-1-face) fontified t) 12767 12768 (face tree-sitter-hl-face:string fontified t) 12768 12771 (face tree-sitter-hl-face:string fontified t) 12771 12772 (face tree-sitter-hl-face:string fontified t) 12772 12774 (fontified t) 12774 12778 (face tree-sitter-hl-face:keyword fontified t) 12778 12779 (fontified t) 12779 12782 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12782 12783 (face (rainbow-delimiters-depth-1-face) fontified t) 12783 12805 (fontified t) 12805 12809 (face tree-sitter-hl-face:keyword fontified t) 12809 12810 (fontified t) 12810 12813 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12813 12814 (fontified t) 12814 12815 (face tree-sitter-hl-face:operator fontified t) 12815 12822 (fontified t) 12822 12828 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12828 12829 (face (rainbow-delimiters-depth-1-face) fontified t) 12829 12833 (face tree-sitter-hl-face:keyword fontified t) 12833 12834 (fontified t) 12834 12837 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12837 12839 (fontified t) 12839 12844 (face tree-sitter-hl-face:label fontified t) 12844 12845 (face tree-sitter-hl-face:operator fontified t) 12845 12849 (face tree-sitter-hl-face:keyword fontified t) 12849 12850 (fontified t) 12850 12855 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12855 12857 (fontified t) 12857 12863 (face tree-sitter-hl-face:label fontified t) 12863 12864 (face tree-sitter-hl-face:operator fontified t) 12864 12868 (face tree-sitter-hl-face:keyword fontified t) 12868 12869 (fontified t) 12869 12875 (face tree-sitter-hl-face:property fontified t) 12875 12876 (face (rainbow-delimiters-depth-1-face) fontified t) 12876 12877 (fontified t) 12877 12884 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12884 12885 (face (rainbow-delimiters-depth-1-face) fontified t) 12885 12889 (face tree-sitter-hl-face:keyword fontified t) 12889 12890 (fontified t) 12890 12895 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12895 12897 (fontified t) 12897 12901 (face tree-sitter-hl-face:keyword fontified t) 12901 12902 (fontified t) 12902 12907 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12907 12908 (face (rainbow-delimiters-depth-1-face) fontified t) 12908 12909 (fontified t) 12909 12910 (face tree-sitter-hl-face:operator fontified t) 12910 12911 (fontified t) 12911 12915 (face tree-sitter-hl-face:keyword fontified t) 12915 12916 (fontified t) 12916 12920 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12920 12930 (fontified t) 12930 12933 (face tree-sitter-hl-face:keyword fontified t) 12933 12934 (fontified t) 12934 12939 (face tree-sitter-hl-face:variable fontified t) 12939 12940 (fontified t) 12940 12942 (face tree-sitter-hl-face:operator fontified t) 12942 12943 (fontified t) 12943 12948 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 12948 12949 (face (rainbow-delimiters-depth-1-face) fontified t) 12949 12953 (face tree-sitter-hl-face:keyword fontified t) 12953 12954 (fontified t) 12954 12959 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12959 12960 (face (rainbow-delimiters-depth-1-face) fontified t) 12960 12974 (fontified t) 12974 12978 (face tree-sitter-hl-face:keyword fontified t) 12978 12979 (fontified t) 12979 12982 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12982 12983 (face (rainbow-delimiters-depth-1-face) fontified t) 12983 12986 (fontified t) 12986 12991 (face tree-sitter-hl-face:variable fontified t) 12991 12992 (face (rainbow-delimiters-depth-1-face) fontified t) 12992 12993 (fontified t) 12993 12994 (face tree-sitter-hl-face:operator fontified t) 12994 12995 (fontified t) 12995 12999 (face tree-sitter-hl-face:keyword fontified t) 12999 13000 (fontified t) 13000 13003 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13003 13004 (face (rainbow-delimiters-depth-1-face) fontified t) 13004 13012 (fontified t) 13012 13013 (face (rainbow-delimiters-depth-1-face) fontified t) 13013 13014 (fontified t) 13014 13015 (face tree-sitter-hl-face:operator fontified t) 13015 13022 (fontified t) 13022 13026 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13026 13027 (face (rainbow-delimiters-depth-1-face) fontified t) 13027 13031 (face tree-sitter-hl-face:keyword fontified t) 13031 13032 (fontified t) 13032 13034 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13034 13035 (face (rainbow-delimiters-depth-2-face) fontified t) 13035 13040 (fontified t) 13040 13041 (face (rainbow-delimiters-depth-2-face) fontified t) 13041 13042 (face (rainbow-delimiters-depth-1-face) fontified t) 13042 13052 (fontified t) 13052 13070 (face tree-sitter-hl-face:comment fontified t) 13070 13079 (fontified t) 13079 13114 (face tree-sitter-hl-face:comment fontified t) 13114 13124 (fontified t) 13124 13144 (face tree-sitter-hl-face:comment fontified t) 13144 13153 (fontified t) 13153 13155 (face tree-sitter-hl-face:keyword fontified t) 13155 13156 (fontified t) 13156 13160 (face tree-sitter-hl-face:keyword fontified t) 13160 13161 (fontified t) 13161 13168 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13168 13182 (fontified t) 13182 13187 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13187 13188 (face (rainbow-delimiters-depth-1-face) fontified t) 13188 13189 (face tree-sitter-hl-face:string fontified t) 13189 13192 (face tree-sitter-hl-face:string fontified t) 13192 13193 (face tree-sitter-hl-face:string fontified t) 13193 13195 (fontified t) 13195 13199 (face tree-sitter-hl-face:keyword fontified t) 13199 13200 (fontified t) 13200 13203 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13203 13204 (face (rainbow-delimiters-depth-1-face) fontified t) 13204 13222 (fontified t) 13222 13226 (face tree-sitter-hl-face:keyword fontified t) 13226 13227 (fontified t) 13227 13230 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13230 13231 (fontified t) 13231 13232 (face tree-sitter-hl-face:operator fontified t) 13232 13239 (fontified t) 13239 13245 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13245 13246 (face (rainbow-delimiters-depth-1-face) fontified t) 13246 13250 (face tree-sitter-hl-face:keyword fontified t) 13250 13251 (fontified t) 13251 13254 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13254 13256 (fontified t) 13256 13261 (face tree-sitter-hl-face:label fontified t) 13261 13262 (face tree-sitter-hl-face:operator fontified t) 13262 13266 (face tree-sitter-hl-face:keyword fontified t) 13266 13267 (fontified t) 13267 13272 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13272 13274 (fontified t) 13274 13280 (face tree-sitter-hl-face:label fontified t) 13280 13281 (face tree-sitter-hl-face:operator fontified t) 13281 13285 (face tree-sitter-hl-face:keyword fontified t) 13285 13286 (fontified t) 13286 13292 (face tree-sitter-hl-face:property fontified t) 13292 13293 (face (rainbow-delimiters-depth-1-face) fontified t) 13293 13302 (fontified t) 13302 13306 (face tree-sitter-hl-face:keyword fontified t) 13306 13307 (fontified t) 13307 13310 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13310 13311 (fontified t) 13311 13312 (face tree-sitter-hl-face:operator fontified t) 13312 13313 (fontified t) 13313 13317 (face tree-sitter-hl-face:keyword fontified t) 13317 13318 (fontified t) 13318 13321 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13321 13322 (fontified t) 13322 13323 (face tree-sitter-hl-face:operator fontified t) 13323 13330 (fontified t) 13330 13334 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13334 13335 (face (rainbow-delimiters-depth-1-face) fontified t) 13335 13339 (face tree-sitter-hl-face:keyword fontified t) 13339 13340 (fontified t) 13340 13342 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13342 13343 (face (rainbow-delimiters-depth-2-face) fontified t) 13343 13344 (face tree-sitter-hl-face:number fontified t) 13344 13345 (face (rainbow-delimiters-depth-2-face) fontified t) 13345 13346 (face (rainbow-delimiters-depth-1-face) fontified t) 13346 13347 (fontified t) 13347 13348 (face tree-sitter-hl-face:operator fontified t) 13348 13349 (fontified t) 13349 13353 (face tree-sitter-hl-face:keyword fontified t) 13353 13354 (fontified t) 13354 13356 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13356 13374 (fontified t) 13374 13392 (face tree-sitter-hl-face:comment fontified t) 13392 13401 (fontified t) 13401 13436 (face tree-sitter-hl-face:comment fontified t) 13436 13454 (fontified t) 13454 13458 (face tree-sitter-hl-face:keyword fontified t) 13458 13459 (fontified t) 13459 13465 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13465 13466 (fontified t) 13466 13467 (face tree-sitter-hl-face:operator fontified t) 13467 13474 (fontified t) 13474 13478 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13478 13479 (face (rainbow-delimiters-depth-1-face) fontified t) 13479 13485 (fontified t) 13485 13491 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13491 13492 (face (rainbow-delimiters-depth-2-face) fontified t) 13492 13496 (face tree-sitter-hl-face:keyword fontified t) 13496 13497 (fontified t) 13497 13503 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13503 13505 (fontified t) 13505 13510 (face tree-sitter-hl-face:label fontified t) 13510 13511 (face tree-sitter-hl-face:operator fontified t) 13511 13515 (face tree-sitter-hl-face:keyword fontified t) 13515 13516 (fontified t) 13516 13521 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13521 13523 (fontified t) 13523 13529 (face tree-sitter-hl-face:label fontified t) 13529 13530 (face tree-sitter-hl-face:operator fontified t) 13530 13534 (face tree-sitter-hl-face:keyword fontified t) 13534 13535 (fontified t) 13535 13541 (face tree-sitter-hl-face:property fontified t) 13541 13542 (face (rainbow-delimiters-depth-2-face) fontified t) 13542 13543 (face (rainbow-delimiters-depth-1-face) fontified t) 13543 13552 (fontified t) 13552 13559 (face tree-sitter-hl-face:variable fontified t) 13559 13560 (fontified t) 13560 13561 (face tree-sitter-hl-face:operator fontified t) 13561 13568 (fontified t) 13568 13574 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13574 13575 (face (rainbow-delimiters-depth-1-face) fontified t) 13575 13578 (face tree-sitter-hl-face:number fontified t) 13578 13580 (fontified t) 13580 13585 (face tree-sitter-hl-face:label fontified t) 13585 13586 (face tree-sitter-hl-face:operator fontified t) 13586 13590 (face tree-sitter-hl-face:keyword fontified t) 13590 13591 (fontified t) 13591 13596 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13596 13598 (fontified t) 13598 13604 (face tree-sitter-hl-face:label fontified t) 13604 13605 (face tree-sitter-hl-face:operator fontified t) 13605 13609 (face tree-sitter-hl-face:keyword fontified t) 13609 13610 (fontified t) 13610 13616 (face tree-sitter-hl-face:property fontified t) 13616 13617 (face (rainbow-delimiters-depth-1-face) fontified t) 13617 13626 (fontified t) 13626 13630 (face tree-sitter-hl-face:keyword fontified t) 13630 13631 (fontified t) 13631 13640 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 13640 13641 (fontified t) 13641 13642 (face tree-sitter-hl-face:operator fontified t) 13642 13643 (fontified t) 13643 13649 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 13649 13650 (face (rainbow-delimiters-depth-1-face) fontified t) 13650 13659 (fontified t) 13659 13663 (face tree-sitter-hl-face:keyword fontified t) 13663 13664 (fontified t) 13664 13670 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13670 13671 (face (rainbow-delimiters-depth-2-face) fontified t) 13671 13672 (face tree-sitter-hl-face:number fontified t) 13672 13673 (face (rainbow-delimiters-depth-2-face) fontified t) 13673 13674 (face (rainbow-delimiters-depth-1-face) fontified t) 13674 13688 (fontified t) 13688 13691 (face tree-sitter-hl-face:keyword fontified t) 13691 13692 (fontified t) 13692 13703 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 13703 13704 (face (rainbow-delimiters-depth-1-face) fontified t) 13704 13708 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 13708 13710 (fontified t) 13710 13714 (face tree-sitter-hl-face:variable.parameter fontified t) 13714 13715 (face (rainbow-delimiters-depth-1-face) fontified t) 13715 13725 (fontified t) 13725 13727 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13727 13728 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13728 13779 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified t) 13779 13780 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13780 13782 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13782 13800 (fontified t) 13800 13802 (face tree-sitter-hl-face:keyword fontified t) 13802 13808 (fontified t) 13808 13810 (face tree-sitter-hl-face:operator fontified t) 13810 13811 (fontified t) 13811 13812 (face tree-sitter-hl-face:number fontified t) 13812 13826 (fontified t) 13826 13829 (face tree-sitter-hl-face:keyword fontified t) 13829 13830 (fontified t) 13830 13831 (face tree-sitter-hl-face:variable fontified t) 13831 13832 (fontified t) 13832 13834 (face tree-sitter-hl-face:operator fontified t) 13834 13835 (fontified t) 13835 13840 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13840 13841 (face (rainbow-delimiters-depth-1-face) fontified t) 13841 13845 (face tree-sitter-hl-face:keyword fontified t) 13845 13846 (fontified t) 13846 13851 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13851 13852 (face (rainbow-delimiters-depth-1-face) fontified t) 13852 13870 (fontified t) 13870 13872 (face tree-sitter-hl-face:keyword fontified t) 13872 13873 (fontified t) 13873 13877 (face tree-sitter-hl-face:keyword fontified t) 13877 13878 (fontified t) 13878 13889 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13889 13890 (face (rainbow-delimiters-depth-1-face) fontified t) 13890 13891 (fontified t) 13891 13892 (face (rainbow-delimiters-depth-1-face) fontified t) 13892 13914 (fontified t) 13914 13951 (face tree-sitter-hl-face:comment fontified t) 13951 13972 (fontified t) 13972 13976 (face tree-sitter-hl-face:keyword fontified t) 13976 13977 (fontified t) 13977 13980 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13980 13981 (fontified t) 13981 13985 (face tree-sitter-hl-face:property fontified t) 13985 13986 (fontified t) 13986 13990 (face tree-sitter-hl-face:property fontified t) 13990 13991 (face (rainbow-delimiters-depth-1-face) fontified t) 13991 13995 (face tree-sitter-hl-face:keyword fontified t) 13995 13996 (fontified t) 13996 14002 (face tree-sitter-hl-face:property fontified t) 14002 14003 (face (rainbow-delimiters-depth-2-face) fontified t) 14003 14004 (fontified t) 14004 14005 (face (rainbow-delimiters-depth-2-face) fontified t) 14005 14006 (fontified t) 14006 14010 (face tree-sitter-hl-face:keyword fontified t) 14010 14011 (fontified t) 14011 14017 (face tree-sitter-hl-face:property fontified t) 14017 14018 (face (rainbow-delimiters-depth-2-face) fontified t) 14018 14019 (fontified t) 14019 14020 (face tree-sitter-hl-face:operator fontified t) 14020 14021 (face tree-sitter-hl-face:number fontified t) 14021 14022 (face (rainbow-delimiters-depth-2-face) fontified t) 14022 14023 (face (rainbow-delimiters-depth-1-face) fontified t) 14023 14024 (fontified t) 14024 14029 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14029 14030 (face (rainbow-delimiters-depth-1-face) fontified t) 14030 14033 (face tree-sitter-hl-face:number fontified t) 14033 14034 (face (rainbow-delimiters-depth-1-face) fontified t) 14034 14051 (fontified t) 14051 14053 (face tree-sitter-hl-face:keyword fontified t) 14053 14054 (fontified t) 14054 14058 (face tree-sitter-hl-face:keyword fontified t) 14058 14059 (fontified t) 14059 14060 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14060 14061 (fontified t) 14061 14063 (face tree-sitter-hl-face:operator fontified t) 14063 14064 (face tree-sitter-hl-face:number fontified t) 14064 14065 (fontified t) 14065 14068 (face tree-sitter-hl-face:operator fontified t) 14068 14069 (fontified t) 14069 14073 (face tree-sitter-hl-face:keyword fontified t) 14073 14074 (fontified t) 14074 14085 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14085 14086 (face (rainbow-delimiters-depth-1-face) fontified t) 14086 14087 (fontified t) 14087 14088 (face (rainbow-delimiters-depth-1-face) fontified t) 14088 14110 (fontified t) 14110 14180 (face tree-sitter-hl-face:comment fontified t) 14180 14201 (fontified t) 14201 14205 (face tree-sitter-hl-face:keyword fontified t) 14205 14206 (fontified t) 14206 14209 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14209 14210 (fontified t) 14210 14214 (face tree-sitter-hl-face:property fontified t) 14214 14215 (fontified t) 14215 14219 (face tree-sitter-hl-face:property fontified t) 14219 14220 (face (rainbow-delimiters-depth-1-face) fontified t) 14220 14224 (face tree-sitter-hl-face:keyword fontified t) 14224 14225 (fontified t) 14225 14231 (face tree-sitter-hl-face:property fontified t) 14231 14232 (face (rainbow-delimiters-depth-2-face) fontified t) 14232 14233 (fontified t) 14233 14234 (face (rainbow-delimiters-depth-2-face) fontified t) 14234 14235 (fontified t) 14235 14239 (face tree-sitter-hl-face:keyword fontified t) 14239 14240 (fontified t) 14240 14246 (face tree-sitter-hl-face:property fontified t) 14246 14247 (face (rainbow-delimiters-depth-2-face) fontified t) 14247 14248 (fontified t) 14248 14249 (face tree-sitter-hl-face:operator fontified t) 14249 14250 (face tree-sitter-hl-face:number fontified t) 14250 14251 (face (rainbow-delimiters-depth-2-face) fontified t) 14251 14252 (face (rainbow-delimiters-depth-1-face) fontified t) 14252 14253 (fontified t) 14253 14258 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14258 14259 (face (rainbow-delimiters-depth-1-face) fontified t) 14259 14263 (face tree-sitter-hl-face:keyword fontified t) 14263 14264 (fontified t) 14264 14267 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14267 14268 (face (rainbow-delimiters-depth-2-face) fontified t) 14268 14269 (fontified t) 14269 14270 (face (rainbow-delimiters-depth-2-face) fontified t) 14270 14271 (fontified t) 14271 14272 (face tree-sitter-hl-face:operator fontified t) 14272 14279 (fontified t) 14279 14283 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14283 14284 (face (rainbow-delimiters-depth-2-face) fontified t) 14284 14288 (face tree-sitter-hl-face:keyword fontified t) 14288 14289 (fontified t) 14289 14291 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14291 14292 (face (rainbow-delimiters-depth-3-face) fontified t) 14292 14293 (face tree-sitter-hl-face:number fontified t) 14293 14294 (face (rainbow-delimiters-depth-3-face) fontified t) 14294 14295 (face (rainbow-delimiters-depth-2-face) fontified t) 14295 14296 (face (rainbow-delimiters-depth-1-face) fontified t) 14296 14314 (fontified t) 14314 14316 (face tree-sitter-hl-face:keyword fontified t) 14316 14322 (fontified t) 14322 14324 (face tree-sitter-hl-face:operator fontified t) 14324 14325 (fontified t) 14325 14329 (face tree-sitter-hl-face:keyword fontified t) 14329 14330 (fontified t) 14330 14339 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14339 14353 (fontified t) 14353 14356 (face tree-sitter-hl-face:keyword fontified t) 14356 14357 (fontified t) 14357 14358 (face tree-sitter-hl-face:variable fontified t) 14358 14359 (fontified t) 14359 14361 (face tree-sitter-hl-face:operator fontified t) 14361 14362 (fontified t) 14362 14367 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 14367 14368 (face (rainbow-delimiters-depth-1-face) fontified t) 14368 14372 (face tree-sitter-hl-face:keyword fontified t) 14372 14373 (fontified t) 14373 14378 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14378 14379 (face (rainbow-delimiters-depth-1-face) fontified t) 14379 14397 (fontified t) 14397 14399 (face tree-sitter-hl-face:keyword fontified t) 14399 14400 (fontified t) 14400 14404 (face tree-sitter-hl-face:keyword fontified t) 14404 14405 (fontified t) 14405 14416 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14416 14417 (face (rainbow-delimiters-depth-1-face) fontified t) 14417 14418 (fontified t) 14418 14419 (face (rainbow-delimiters-depth-1-face) fontified t) 14419 14441 (fontified t) 14441 14486 (face tree-sitter-hl-face:comment fontified t) 14486 14507 (fontified t) 14507 14511 (face tree-sitter-hl-face:keyword fontified t) 14511 14512 (fontified t) 14512 14515 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14515 14516 (fontified t) 14516 14520 (face tree-sitter-hl-face:property fontified t) 14520 14521 (fontified t) 14521 14525 (face tree-sitter-hl-face:property fontified t) 14525 14526 (face (rainbow-delimiters-depth-1-face) fontified t) 14526 14530 (face tree-sitter-hl-face:keyword fontified t) 14530 14531 (fontified t) 14531 14537 (face tree-sitter-hl-face:property fontified t) 14537 14538 (face (rainbow-delimiters-depth-2-face) fontified t) 14538 14539 (fontified t) 14539 14540 (face (rainbow-delimiters-depth-2-face) fontified t) 14540 14541 (fontified t) 14541 14545 (face tree-sitter-hl-face:keyword fontified t) 14545 14546 (fontified t) 14546 14552 (face tree-sitter-hl-face:property fontified t) 14552 14553 (face (rainbow-delimiters-depth-2-face) fontified t) 14553 14554 (fontified t) 14554 14555 (face tree-sitter-hl-face:operator fontified t) 14555 14556 (face tree-sitter-hl-face:number fontified t) 14556 14557 (face (rainbow-delimiters-depth-2-face) fontified t) 14557 14558 (face (rainbow-delimiters-depth-1-face) fontified t) 14558 14559 (fontified t) 14559 14564 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14564 14565 (face (rainbow-delimiters-depth-1-face) fontified t) 14565 14569 (face tree-sitter-hl-face:keyword fontified t) 14569 14570 (fontified t) 14570 14573 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14573 14574 (face (rainbow-delimiters-depth-2-face) fontified t) 14574 14575 (fontified t) 14575 14576 (face (rainbow-delimiters-depth-2-face) fontified t) 14576 14577 (face (rainbow-delimiters-depth-1-face) fontified t) 14577 14595 (fontified t) 14595 14597 (face tree-sitter-hl-face:keyword fontified t) 14597 14603 (fontified t) 14603 14605 (face tree-sitter-hl-face:operator fontified t) 14605 14606 (fontified t) 14606 14610 (face tree-sitter-hl-face:keyword fontified t) 14610 14611 (fontified t) 14611 14620 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14620 14621 (fontified t) 14621 14624 (face tree-sitter-hl-face:operator fontified t) 14624 14628 (fontified t) 14628 14631 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14631 14632 (face (rainbow-delimiters-depth-1-face) fontified t) 14632 14636 (face tree-sitter-hl-face:keyword fontified t) 14636 14637 (fontified t) 14637 14639 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14639 14641 (face tree-sitter-hl-face:operator fontified t) 14641 14642 (face tree-sitter-hl-face:number fontified t) 14642 14643 (face (rainbow-delimiters-depth-1-face) fontified t) 14643 14657 (fontified t) 14657 14659 (face tree-sitter-hl-face:keyword fontified t) 14659 14660 (fontified t) 14660 14664 (face tree-sitter-hl-face:keyword fontified t) 14664 14665 (fontified t) 14665 14672 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14672 14690 (fontified t) 14690 14695 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 14695 14696 (face (rainbow-delimiters-depth-1-face) fontified t) 14696 14697 (face tree-sitter-hl-face:string fontified t) 14697 14704 (face tree-sitter-hl-face:string fontified t) 14704 14705 (face tree-sitter-hl-face:string fontified t) 14705 14706 (face (rainbow-delimiters-depth-1-face) fontified t) 14706 14732 (fontified t) 14732 14736 (face tree-sitter-hl-face:keyword fontified t) 14736 14737 (fontified t) 14737 14740 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14740 14741 (fontified t) 14741 14745 (face tree-sitter-hl-face:property fontified t) 14745 14746 (fontified t) 14746 14750 (face tree-sitter-hl-face:property fontified t) 14750 14751 (face (rainbow-delimiters-depth-1-face) fontified t) 14751 14755 (face tree-sitter-hl-face:keyword fontified t) 14755 14756 (fontified t) 14756 14762 (face tree-sitter-hl-face:property fontified t) 14762 14763 (face (rainbow-delimiters-depth-2-face) fontified t) 14763 14764 (face tree-sitter-hl-face:number fontified t) 14764 14765 (face (rainbow-delimiters-depth-2-face) fontified t) 14765 14766 (fontified t) 14766 14770 (face tree-sitter-hl-face:keyword fontified t) 14770 14771 (fontified t) 14771 14777 (face tree-sitter-hl-face:property fontified t) 14777 14778 (face (rainbow-delimiters-depth-2-face) fontified t) 14778 14779 (face tree-sitter-hl-face:number fontified t) 14779 14780 (face (rainbow-delimiters-depth-2-face) fontified t) 14780 14781 (face (rainbow-delimiters-depth-1-face) fontified t) 14781 14782 (fontified t) 14782 14783 (face tree-sitter-hl-face:operator fontified t) 14783 14784 (fontified t) 14784 14788 (face tree-sitter-hl-face:keyword fontified t) 14788 14789 (fontified t) 14789 14792 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14792 14793 (face (rainbow-delimiters-depth-1-face) fontified t) 14793 14794 (face tree-sitter-hl-face:number fontified t) 14794 14795 (face (rainbow-delimiters-depth-1-face) fontified t) 14795 14796 (fontified t) 14796 14797 (face tree-sitter-hl-face:operator fontified t) 14797 14798 (fontified t) 14798 14802 (face tree-sitter-hl-face:keyword fontified t) 14802 14803 (fontified t) 14803 14811 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14811 14812 (face (rainbow-delimiters-depth-1-face) fontified t) 14812 14813 (face tree-sitter-hl-face:number fontified t) 14813 14814 (face (rainbow-delimiters-depth-1-face) fontified t) 14814 14840 (fontified t) 14840 14860 (face tree-sitter-hl-face:comment fontified t) 14860 14873 (fontified t) 14873 14987 (face tree-sitter-hl-face:comment fontified t) 14987 15000 (fontified t) 15000 15022 (face tree-sitter-hl-face:comment fontified t) 15022 15035 (fontified t) 15035 15149 (face tree-sitter-hl-face:comment fontified t) 15149 15175 (fontified t) 15175 15196 (face tree-sitter-hl-face:comment fontified t) 15196 15209 (fontified t) 15209 15323 (face tree-sitter-hl-face:comment fontified t) 15323 15336 (fontified t) 15336 15358 (face tree-sitter-hl-face:comment fontified t) 15358 15371 (fontified t) 15371 15485 (face tree-sitter-hl-face:comment fontified t) 15485 15536 (fontified t) 15536 15538 (face tree-sitter-hl-face:keyword fontified t) 15538 15544 (fontified t) 15544 15546 (face tree-sitter-hl-face:operator fontified t) 15546 15547 (fontified t) 15547 15551 (face tree-sitter-hl-face:keyword fontified t) 15551 15552 (fontified t) 15552 15562 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15562 15563 (fontified t) 15563 15566 (face tree-sitter-hl-face:operator fontified t) 15566 15570 (fontified t) 15570 15573 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 15573 15574 (face (rainbow-delimiters-depth-1-face) fontified t) 15574 15578 (face tree-sitter-hl-face:keyword fontified t) 15578 15579 (fontified t) 15579 15581 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15581 15583 (face tree-sitter-hl-face:operator fontified t) 15583 15584 (face tree-sitter-hl-face:number fontified t) 15584 15585 (face (rainbow-delimiters-depth-1-face) fontified t) 15585 15599 (fontified t) 15599 15601 (face tree-sitter-hl-face:keyword fontified t) 15601 15602 (fontified t) 15602 15606 (face tree-sitter-hl-face:keyword fontified t) 15606 15607 (fontified t) 15607 15614 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15614 15632 (fontified t) 15632 15637 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 15637 15638 (face (rainbow-delimiters-depth-1-face) fontified t) 15638 15639 (face tree-sitter-hl-face:string fontified t) 15639 15647 (face tree-sitter-hl-face:string fontified t) 15647 15648 (face tree-sitter-hl-face:string fontified t) 15648 15649 (face (rainbow-delimiters-depth-1-face) fontified t) 15649 15662 (fontified t) 15662 15666 (face tree-sitter-hl-face:keyword fontified t) 15666 15667 (fontified t) 15667 15670 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15670 15671 (fontified t) 15671 15675 (face tree-sitter-hl-face:property fontified t) 15675 15676 (fontified t) 15676 15680 (face tree-sitter-hl-face:property fontified t) 15680 15681 (face (rainbow-delimiters-depth-1-face) fontified t) 15681 15685 (face tree-sitter-hl-face:keyword fontified t) 15685 15686 (fontified t) 15686 15692 (face tree-sitter-hl-face:property fontified t) 15692 15693 (face (rainbow-delimiters-depth-2-face) fontified t) 15693 15694 (face tree-sitter-hl-face:number fontified t) 15694 15695 (face (rainbow-delimiters-depth-2-face) fontified t) 15695 15696 (fontified t) 15696 15700 (face tree-sitter-hl-face:keyword fontified t) 15700 15701 (fontified t) 15701 15707 (face tree-sitter-hl-face:property fontified t) 15707 15708 (face (rainbow-delimiters-depth-2-face) fontified t) 15708 15709 (face tree-sitter-hl-face:number fontified t) 15709 15710 (face (rainbow-delimiters-depth-2-face) fontified t) 15710 15711 (face (rainbow-delimiters-depth-1-face) fontified t) 15711 15712 (fontified t) 15712 15713 (face tree-sitter-hl-face:operator fontified t) 15713 15714 (fontified t) 15714 15718 (face tree-sitter-hl-face:keyword fontified t) 15718 15719 (fontified t) 15719 15722 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15722 15723 (face (rainbow-delimiters-depth-1-face) fontified t) 15723 15724 (face tree-sitter-hl-face:number fontified t) 15724 15725 (face (rainbow-delimiters-depth-1-face) fontified t) 15725 15739 (fontified t) 15739 15768 (face tree-sitter-hl-face:comment fontified t) 15768 15781 (fontified t) 15781 15830 (face tree-sitter-hl-face:comment fontified t) 15830 15844 (fontified t) 15844 15847 (face tree-sitter-hl-face:keyword fontified t) 15847 15848 (fontified t) 15848 15856 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 15856 15857 (face (rainbow-delimiters-depth-1-face) fontified t) 15857 15861 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 15861 15863 (fontified t) 15863 15868 (face tree-sitter-hl-face:variable.parameter fontified t) 15868 15869 (face (rainbow-delimiters-depth-1-face) fontified t) 15869 15879 (fontified t) 15879 15881 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15881 15882 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15882 15896 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified t) 15896 15897 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15897 15899 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15899 15908 (fontified t) 15908 15913 (face tree-sitter-hl-face:variable fontified t) 15913 15914 (fontified t) 15914 15915 (face tree-sitter-hl-face:operator fontified t) 15915 15922 (fontified t) 15922 15928 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 15928 15929 (face (rainbow-delimiters-depth-1-face) fontified t) 15929 15930 (face tree-sitter-hl-face:number fontified t) 15930 15932 (fontified t) 15932 15935 (face tree-sitter-hl-face:number fontified t) 15935 15936 (fontified t) 15936 15937 (face tree-sitter-hl-face:operator fontified t) 15937 15944 (fontified t) 15944 15946 (face tree-sitter-hl-face:property fontified t) 15946 15948 (fontified t) 15948 15951 (face tree-sitter-hl-face:number fontified t) 15951 15952 (fontified t) 15952 15953 (face tree-sitter-hl-face:operator fontified t) 15953 15960 (fontified t) 15960 15962 (face tree-sitter-hl-face:property fontified t) 15962 15963 (fontified t) 15963 15964 (face tree-sitter-hl-face:operator fontified t) 15964 15965 (fontified t) 15965 15970 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 15970 15971 (face (rainbow-delimiters-depth-2-face) fontified t) 15971 15975 (face tree-sitter-hl-face:keyword fontified t) 15975 15976 (fontified t) 15976 15978 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15978 15979 (face (rainbow-delimiters-depth-3-face) fontified t) 15979 15984 (fontified t) 15984 15985 (face (rainbow-delimiters-depth-3-face) fontified t) 15985 15986 (face (rainbow-delimiters-depth-2-face) fontified t) 15986 15988 (fontified t) 15988 15993 (face tree-sitter-hl-face:label fontified t) 15993 15994 (face tree-sitter-hl-face:operator fontified t) 15994 15998 (face tree-sitter-hl-face:keyword fontified t) 15998 15999 (fontified t) 15999 16004 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16004 16006 (fontified t) 16006 16012 (face tree-sitter-hl-face:label fontified t) 16012 16013 (face tree-sitter-hl-face:operator fontified t) 16013 16017 (face tree-sitter-hl-face:keyword fontified t) 16017 16018 (fontified t) 16018 16024 (face tree-sitter-hl-face:property fontified t) 16024 16025 (face (rainbow-delimiters-depth-1-face) fontified t) 16025 16034 (fontified t) 16034 16040 (face tree-sitter-hl-face:keyword fontified t) 16040 16041 (fontified t) 16041 16045 (face tree-sitter-hl-face:keyword fontified t) 16045 16046 (fontified t) 16046 16048 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16048 16049 (face (rainbow-delimiters-depth-1-face) fontified t) 16049 16054 (fontified t) 16054 16055 (face (rainbow-delimiters-depth-1-face) fontified t) 16055 16056 (fontified t) 16056 16057 (face tree-sitter-hl-face:operator fontified t) 16057 16058 (fontified t) 16058 16059 (face (rainbow-delimiters-depth-1-face) fontified t) 16059 16062 (face tree-sitter-hl-face:number fontified t) 16062 16063 (fontified t) 16063 16064 (face tree-sitter-hl-face:operator fontified t) 16064 16065 (fontified t) 16065 16069 (face tree-sitter-hl-face:keyword fontified t) 16069 16070 (fontified t) 16070 16076 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16076 16077 (fontified t) 16077 16078 (face tree-sitter-hl-face:operator fontified t) 16078 16085 (fontified t) 16085 16088 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 16088 16089 (face (rainbow-delimiters-depth-2-face) fontified t) 16089 16095 (fontified t) 16095 16096 (face tree-sitter-hl-face:operator fontified t) 16096 16097 (fontified t) 16097 16101 (face tree-sitter-hl-face:keyword fontified t) 16101 16102 (fontified t) 16102 16106 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16106 16107 (fontified t) 16107 16108 (face tree-sitter-hl-face:operator fontified t) 16108 16115 (fontified t) 16115 16117 (face tree-sitter-hl-face:property fontified t) 16117 16118 (fontified t) 16118 16119 (face tree-sitter-hl-face:operator fontified t) 16119 16120 (fontified t) 16120 16125 (face tree-sitter-hl-face:number fontified t) 16125 16126 (face (rainbow-delimiters-depth-2-face) fontified t) 16126 16127 (face (rainbow-delimiters-depth-1-face) fontified t) 16127 16128 (fontified t) 16128 16129 (face tree-sitter-hl-face:operator fontified t) 16129 16136 (fontified t) 16136 16140 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 16140 16141 (face (rainbow-delimiters-depth-1-face) fontified t) 16141 16145 (face tree-sitter-hl-face:keyword fontified t) 16145 16146 (fontified t) 16146 16148 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16148 16149 (face (rainbow-delimiters-depth-2-face) fontified t) 16149 16150 (face tree-sitter-hl-face:number fontified t) 16150 16151 (face (rainbow-delimiters-depth-2-face) fontified t) 16151 16152 (face (rainbow-delimiters-depth-1-face) fontified t) 16152 16153 (fontified t) 16153 16154 (face tree-sitter-hl-face:operator fontified t) 16154 16155 (fontified t) 16155 16159 (face tree-sitter-hl-face:keyword fontified t) 16159 16160 (fontified t) 16160 16162 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16162 16163 (fontified t)) . 1) (undo-tree-id1717 . -16163) (undo-tree-id1718 . -1210) (undo-tree-id1719 . -1210) (undo-tree-id1720 . -673) (undo-tree-id1721 . -673) (undo-tree-id1722 . -1210) (undo-tree-id1723 . -1210) (undo-tree-id1724 . -1172) (undo-tree-id1725 . -234) (undo-tree-id1726 . -192) (undo-tree-id1727 . -309) (undo-tree-id1728 . -5743) (undo-tree-id1729 . -16163) (undo-tree-id1730 . -13684) (undo-tree-id1731 . -14341) (undo-tree-id1732 . -16163) (undo-tree-id1733 . -15486) (undo-tree-id1734 . -16163) (undo-tree-id1735 . -10382) (undo-tree-id1736 . -16026) (undo-tree-id1737 . -9513) (undo-tree-id1738 . -16163) (undo-tree-id1739 . -10695) (undo-tree-id1740 . -10717) (undo-tree-id1741 . -9981) (undo-tree-id1742 . -10798) (undo-tree-id1743 . -10798) (undo-tree-id1744 . -9981) (undo-tree-id1745 . -10798) (undo-tree-id1746 . -10798) (undo-tree-id1747 . -10798) (undo-tree-id1748 . -10798) (undo-tree-id1749 . -10798) (undo-tree-id1750 . -10798) (undo-tree-id1751 . -10798) (undo-tree-id1752 . -10798) (undo-tree-id1753 . -10695) (undo-tree-id1754 . -10798) (undo-tree-id1755 . -10798) (undo-tree-id1756 . -9981) (t 25975 7808 522838 503000)) nil (25975 7820 215898 580000) 0 nil] [nil nil ((#("import os
import gc
import numpy as np

from yaml import safe_load
from time import perf_counter

import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal

from src.utils import set_seed, get_theta
from src.activation import Activation
from src.plasticity import STP_Model

import warnings
warnings.filterwarnings(\"ignore\")


class Network(nn.Module):
    def __init__(self, conf_file, sim_name, repo_root, **kwargs):
        super().__init__()

        # load parameters
        self.loadConfig(conf_file, sim_name, repo_root, **kwargs)

        # set csts
        self.initConst()

        # scale parameters
        self.scaleParam()

        # set seed for connectivity
        set_seed(self.SEED)
        
        # We define the recurrent network with nn.linear()
        # In pytorch, y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        # so Wij means i presynaptic and j postsynaptic
        
        self.Wab = nn.Linear(self.N_NEURON, self.N_NEURON, bias=True, dtype=self.FLOAT, device=self.device)
        print(self.Wab)
                
        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                W0 = self.initWeights(j_pop, i_pop) # (pre, post)
                
                self.Wab.weight.data[self.csumNa[j_pop] : self.csumNa[j_pop + 1],
                                     self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = W0
                
        # Here we store the constant external input in the bias
        for i_pop in range(self.N_POP):
            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
        
        set_seed(0)
        
        
    def update_rec_input(self, rates):
        '''Dynamics of the recurrent inputs'''
        # rec_input = torch.zeros((self.N_POP, self.N_NEURON), dtype=self.FLOAT, device=self.device)

        # y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        rec_input = self.Wab(rates)
        
        # rec_inputs = self.EXP_DT_TAU * rates + self.DT_TAU * Activation()(net_input)
        
        return rec_input

    def update_net_input(self, rec_input):
        '''Updating the net input into the neurons'''
        
        noise = self.ff_normal.sample((self.N_NEURON,))
        net_input = noise + rec_input
        
        return net_input
    
    def update_rates(self, rates, net_input):
        '''Dynamics of the rates'''
        # using array slices is faster than indices
        if self.RATE_DYN:
            rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation()(net_input)
        else:
            rates = Activation()(net_input)
        
        return rates
    
    def forward(self, rates):
        '''This is the main function of the class'''
        rec_input = self.update_rec_input(rates)
        net_input = self.update_net_input(rec_input)
        rates = self.update_rates(rates, net_input)

        return rates
    
    def print_activity(self, step, rates):

        times = np.round((step - self.N_STEADY) / self.N_STEPS * self.DURATION, 2)
        
        activity = []
        
        activity.append(np.round(torch.mean(rates[:self.csumNa[1]]).cpu().detach().numpy(), 2))

        if self.N_POP > 1:
            activity.append(np.round(torch.mean(rates[self.csumNa[1]:self.csumNa[2]]).cpu().detach().numpy(), 2))
        
        if self.N_POP > 2:
            activity.append(np.round(torch.mean(rates[self.csumNa[2]:]).cpu().detach().numpy(), 2))

        print(
            \"times (s)\",
            np.round(times, 2),
            \"rates (Hz)\",
            activity,
        )
    
    def run(self):
        result = []
        # init rates
        hidden = self.initRates()

        start = perf_counter()
        
        self.N_STEPS = int(self.DURATION / self.DT)
        self.N_STEADY = int(self.T_STEADY / self.DT)
        self.N_WINDOW = int(self.T_WINDOW / self.DT)
        self.N_STIM_ON = int(self.T_STIM_ON / self.DT)
        self.N_STIM_OFF = int(self.T_STIM_OFF / self.DT)

        with torch.no_grad():
        
            for step in range(self.N_STEPS + self.N_STEADY):
                self.update_stim(step)
                hidden = self.forward(hidden)
            
                if step >= self.N_STEADY+1:
                    if step % self.N_WINDOW == 0:
                        if self.VERBOSE:
                            self.print_activity(step - self.N_STEADY, hidden)
                        
                        result.append(hidden.cpu().detach().numpy())
        
        result = np.array(result)
        print('result', result.shape)
        
        # self.theta = get_theta(self.ksi[1].cpu(), self.ksi[0].cpu(), GM=1, IF_NORM=1)
        # print(self.theta.shape)

        # result = result[:, self.theta.argsort()]
        # print('result', result.shape)
        
        print('Saving rates to:', self.DATA_PATH + self.FILE_NAME + '.npy')
        np.save(self.DATA_PATH + self.FILE_NAME + '.npy', result)
        
        for obj in gc.get_objects():
            if torch.is_tensor(obj):
                del obj
        
        # Manually triggering the garbage collector afterwards
        gc.collect()
        torch.cuda.empty_cache()
        
        end = perf_counter()

        print(\"Elapsed (with compilation) = {}s\".format((end - start)))

        return result

    def loadConfig(self, conf_file, sim_name, repo_root, **kwargs):
        # Loading configuration file
        conf_path = repo_root + '/conf/'+ conf_file
        print('Loading config from', conf_path)
        param = safe_load(open(conf_path, \"r\"))

        param[\"FILE_NAME\"] = sim_name
        param.update(kwargs)

        for k, v in param.items():
            setattr(self, k, v)

        self.DATA_PATH = repo_root + \"/data/simul/\"
        self.MAT_PATH = repo_root + \"/data/matrix/\"

        if not os.path.exists(self.DATA_PATH):
            os.makedirs(self.DATA_PATH)

        if not os.path.exists(self.MAT_PATH):
            os.makedirs(self.MAT_PATH)

        if self.FLOAT_PRECISION == 32:
            self.FLOAT = torch.float
        else:
            self.FLOAT = torch.float64
        
        self.device = torch.device(self.DEVICE)
    
    def initRates(self):
        return torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)
    
    def initWeights(self, i_pop, j_pop):
        
        Na = self.Na[i_pop]
        Nb = self.Na[j_pop]
        Kb = self.Ka[j_pop]
        
        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)
        
        if 'lr' in self.STRUCTURE[i_pop, j_pop]:
            
            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)
            
            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)

            
            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T
            
            # while torch.abs(self.ksi[0] @ self.ksi[1] - self.LR_COV) > .01:
            #     multivariate_normal = MultivariateNormal(mean, covariance)            
            #     self.ksi = multivariate_normal.sample((Nb,)).T
            
            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', torch.cov(self.ksi))
            
            Pij = (1.0 + self.KAPPA[i_pop, j_pop]
                   * (torch.outer(self.ksi[0], self.ksi[0])
                      + torch.outer(self.ksi[1], self.ksi[1]))
                   / torch.sqrt(self.Ka[j_pop]))
            
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0
            
            if self.VERBOSE:
                print('Pij', Pij.shape)
            
        if 'cos' in self.STRUCTURE[i_pop, j_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na),
                                 dtype=self.FLOAT, device=self.device)
            
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb),
                               dtype=self.FLOAT, device=self.device)
            
            i, j = torch.meshgrid(torch.arange(Na, device=self.device),
                                  torch.arange(Nb, device=self.device),
                                  indexing=\"ij\")
            
            theta_diff = theta[i] - phi[j]
            
            if 'spec' in self.STRUCTURE[i_pop, j_pop]:
                self.KAPPA[i_pop, j_pop] = self.KAPPA[i_pop, j_pop] / torch.sqrt(Kb)
                
            Pij = (1.0 + 2.0 * self.KAPPA[i_pop, j_pop]
                   * torch.cos(theta_diff - self.PHASE))

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')
            
            Cij = (self.Jab[i_pop, j_pop]
                   * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij))

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')
                
            Cij = self.Jab[i_pop, j_pop] * Pij / float(Nb)
            
            if self.SIGMA[i_pop, j_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[i_pop, j_pop])
                
                Hij = torch.normal(0, self.SIGMA[i_pop, j_pop],
                                   size=(Na, Nb), dtype=self.FLOAT, device=self.device)
                Cij = Cij + Hij / float(Nb)
                
        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[i_pop, j_pop]:
                if \"spec\" in self.STRUCTURE[i_pop, j_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[i_pop, j_pop])
            elif \"lr\" in self.STRUCTURE[i_pop, j_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                
        return Cij

    def initConst(self):
        self.Na = []
        self.Ka = []

        if 'all2all' in self.CONNECTIVITY:
            self.K = 1.0
        
        for i_pop in range(self.N_POP):
            self.Na.append(int(self.N_NEURON * self.frac[i_pop]))
            self.Ka.append(self.K * self.frac[i_pop])
            # self.Ka.append(self.K)
        
        self.Na = torch.tensor(self.Na, dtype=torch.int, device=self.device)
        self.Ka = torch.tensor(self.Ka, dtype=self.FLOAT, device=self.device)
        self.csumNa = torch.cat((torch.tensor([0], device=self.device), torch.cumsum(self.Na, dim=0)))
        
        if self.VERBOSE:
            print(\"Na\", self.Na, \"Ka\", self.Ka, \"csumNa\", self.csumNa)

        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)
        
        self.EXP_DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        self.DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        
        for i_pop in range(self.N_POP):
            self.EXP_DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.exp(-self.DT / self.TAU[i_pop])
            self.DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = self.DT / self.TAU[i_pop]
        
        # self.EXP_DT_TAU = []
        # self.DT_TAU = []
        
        # for i_pop in range(self.N_POP):
        #     self.EXP_DT_TAU.append(np.exp(-self.DT / self.TAU[i_pop]))
        #     self.DT_TAU.append(self.DT / self.TAU[i_pop])
        
        # self.DT_TAU = torch.tensor(self.DT_TAU, dtype=self.FLOAT, device=self.device)
        # self.EXP_DT_TAU = torch.tensor(self.EXP_DT_TAU, dtype=self.FLOAT, device=self.device)

        
        if self.VERBOSE:
            print(\"DT\", self.DT, \"TAU\", self.TAU)
        
        # if self.VERBOSE:
        #     print(\"EXP_DT_TAU\", self.EXP_DT_TAU, \"DT_TAU\", self.DT_TAU)
        
        self.STRUCTURE = np.array(self.STRUCTURE).reshape(self.N_POP, self.N_POP)
        self.SIGMA = torch.tensor(self.SIGMA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.KAPPA = torch.tensor(self.KAPPA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.PHASE = torch.tensor(self.PHASE * torch.pi / 180.0, dtype=self.FLOAT, device=self.device)
        
        # if self.VERBOSE:
        #     print(self.STRUCTURE)
        #     print(self.SIGMA)
        #     print(self.KAPPA)
        #     print(self.PHASE)


    def scaleParam(self):

        # scaling recurrent weights Jab
        if self.VERBOSE:
            print(\"Jab\", self.Jab)
            
        self.Jab = torch.tensor(self.Jab, dtype=self.FLOAT, device=self.device).reshape(self.N_POP, self.N_POP) * self.GAIN

        for i_pop in range(self.N_POP):
            self.Jab[:, i_pop] = self.Jab[:, i_pop] / torch.sqrt(self.Ka[i_pop])

        # if self.VERBOSE:
        #     print(\"scaled Jab\", self.Jab)

        # scaling FF weights
        if self.VERBOSE:
            print(\"Ja0\", self.Ja0)
        
        self.Ja0 = torch.tensor(self.Ja0, dtype=self.FLOAT, device=self.device)
        self.Ja0 = self.Ja0 * torch.sqrt(self.Ka[0]) * self.M0
        
        # if self.VERBOSE:
        #     print(\"scaled Ja0\", self.Ja0)
        
        self.VAR_FF = torch.sqrt(torch.tensor(self.VAR_FF, dtype=self.FLOAT, device=self.device))
        ff_mean = torch.tensor(0.0, dtype=self.FLOAT, device=self.device)
        self.ff_normal = Normal(ff_mean, self.VAR_FF[0])
        
    def update_stim(self, step):
        \"\"\"Perturb the inputs based on the simulus parameters.\"\"\"
        
        if step == 0:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(0.0)
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(0.0)
                if self.K !=1 and self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
        
        if step == self.N_STIM_ON:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i])
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i])
        
        if step == self.N_STIM_ON and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM ON\")
            
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
            
            # if self.PHI0 == 0:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[0] * self.I0[0] * self.M0)
            # if self.PHI0 == 180:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[0] * self.I0[0] * self.M0)
            
            # if self.PHI0 == 90:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[1] * self.I0[0] * self.M0)
            # if self.PHI0 == 270:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[1] * self.I0[0] * self.M0)
                            
            
        if step == self.N_STIM_OFF and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM OFF\")
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0]

            # for i in range(self.N_POP):
            #     self.Wab[i, i].bias.data.fill_(self.Ja0[i])
        
    def stimFunc(self, i_pop):
        \"\"\"Stimulus shape\"\"\"
        theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(self.Na[i_pop]), dtype=self.FLOAT, device=self.device)
        return self.I0[i_pop] * (1.0 + self.SIGMA0 * torch.cos(theta - self.PHI0 * torch.pi / 180.0)) * torch.sqrt(self.Ka[0]) * self.M0
" 0 6 (face tree-sitter-hl-face:keyword fontified nil) 6 10 (fontified nil) 10 16 (face tree-sitter-hl-face:keyword fontified nil) 16 20 (fontified nil) 20 26 (face tree-sitter-hl-face:keyword fontified nil) 26 33 (fontified nil) 33 35 (face tree-sitter-hl-face:keyword fontified nil) 35 40 (fontified nil) 40 44 (face tree-sitter-hl-face:keyword fontified nil) 44 50 (fontified nil) 50 56 (face tree-sitter-hl-face:keyword fontified nil) 56 67 (fontified nil) 67 71 (face tree-sitter-hl-face:keyword fontified nil) 71 77 (fontified nil) 77 83 (face tree-sitter-hl-face:keyword fontified nil) 83 98 (fontified nil) 98 104 (face tree-sitter-hl-face:keyword fontified nil) 104 111 (fontified nil) 111 115 (face tree-sitter-hl-face:keyword fontified nil) 115 122 (fontified nil) 122 128 (face tree-sitter-hl-face:keyword fontified nil) 128 132 (fontified nil) 132 136 (face tree-sitter-hl-face:keyword fontified nil) 136 157 (fontified nil) 157 163 (face tree-sitter-hl-face:keyword fontified nil) 163 164 (fontified nil) 164 170 (face tree-sitter-hl-face:constructor fontified nil) 170 172 (fontified nil) 172 190 (face tree-sitter-hl-face:constructor fontified nil) 190 192 (fontified nil) 192 196 (face tree-sitter-hl-face:keyword fontified nil) 196 207 (fontified nil) 207 213 (face tree-sitter-hl-face:keyword fontified nil) 213 234 (fontified nil) 234 238 (face tree-sitter-hl-face:keyword fontified nil) 238 254 (fontified nil) 254 260 (face tree-sitter-hl-face:keyword fontified nil) 260 261 (fontified nil) 261 271 (face tree-sitter-hl-face:constructor fontified nil) 271 272 (fontified nil) 272 276 (face tree-sitter-hl-face:keyword fontified nil) 276 292 (fontified nil) 292 298 (face tree-sitter-hl-face:keyword fontified nil) 298 299 (fontified nil) 299 308 (face tree-sitter-hl-face:constructor fontified nil) 308 310 (fontified nil) 310 316 (face tree-sitter-hl-face:keyword fontified nil) 316 335 (fontified nil) 335 349 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 349 350 (face (rainbow-delimiters-depth-1-face) fontified nil) 350 351 (face tree-sitter-hl-face:string fontified nil) 351 357 (face tree-sitter-hl-face:string fontified nil) 357 358 (face tree-sitter-hl-face:string fontified nil) 358 359 (face (rainbow-delimiters-depth-1-face) fontified nil) 359 362 (fontified nil) 362 367 (face tree-sitter-hl-face:keyword fontified nil) 367 368 (fontified nil) 368 375 (face tree-sitter-hl-face:constructor fontified nil) 375 376 (face (rainbow-delimiters-depth-1-face) fontified nil) 376 379 (fontified nil) 379 385 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 385 386 (face (rainbow-delimiters-depth-1-face) fontified nil) 386 392 (fontified nil) 392 395 (face tree-sitter-hl-face:keyword fontified nil) 395 396 (fontified nil) 396 404 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 404 405 (face (rainbow-delimiters-depth-1-face) fontified nil) 405 409 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 409 411 (fontified nil) 411 420 (face tree-sitter-hl-face:variable.parameter fontified nil) 420 422 (fontified nil) 422 430 (face tree-sitter-hl-face:variable.parameter fontified nil) 430 432 (fontified nil) 432 441 (face tree-sitter-hl-face:variable.parameter fontified nil) 441 443 (fontified nil) 443 445 (face tree-sitter-hl-face:operator fontified nil) 445 451 (face tree-sitter-hl-face:variable.parameter fontified nil) 451 452 (face (rainbow-delimiters-depth-1-face) fontified nil) 452 462 (fontified nil) 462 467 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 467 468 (face (rainbow-delimiters-depth-1-face) fontified nil) 468 469 (face (rainbow-delimiters-depth-1-face) fontified nil) 469 470 (fontified nil) 470 478 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 478 479 (face (rainbow-delimiters-depth-1-face) fontified nil) 479 480 (face (rainbow-delimiters-depth-1-face) fontified nil) 480 490 (fontified nil) 490 507 (face tree-sitter-hl-face:comment fontified nil) 507 516 (fontified nil) 516 520 (face tree-sitter-hl-face:keyword fontified nil) 520 521 (fontified nil) 521 531 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 531 532 (face (rainbow-delimiters-depth-1-face) fontified nil) 532 564 (fontified nil) 564 566 (face tree-sitter-hl-face:operator fontified nil) 566 572 (fontified nil) 572 573 (face (rainbow-delimiters-depth-1-face) fontified nil) 573 574 (fontified nil) 574 583 (fontified nil) 583 593 (face tree-sitter-hl-face:comment fontified nil) 593 602 (fontified nil) 602 606 (face tree-sitter-hl-face:keyword fontified nil) 606 607 (fontified nil) 607 616 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 616 617 (face (rainbow-delimiters-depth-1-face) fontified nil) 617 618 (face (rainbow-delimiters-depth-1-face) fontified nil) 618 628 (fontified nil) 628 646 (face tree-sitter-hl-face:comment fontified nil) 646 655 (fontified nil) 655 659 (face tree-sitter-hl-face:keyword fontified nil) 659 660 (fontified nil) 660 670 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 670 671 (face (rainbow-delimiters-depth-1-face) fontified nil) 671 672 (face (rainbow-delimiters-depth-1-face) fontified nil) 672 682 (fontified nil) 682 709 (face tree-sitter-hl-face:comment fontified nil) 709 718 (fontified nil) 718 726 (face tree-sitter-hl-face:function.call fontified nil) 726 727 (face (rainbow-delimiters-depth-1-face) fontified nil) 727 731 (face tree-sitter-hl-face:keyword fontified nil) 731 732 (fontified nil) 732 736 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 736 737 (face (rainbow-delimiters-depth-1-face) fontified nil) 737 755 (fontified nil) 755 805 (face tree-sitter-hl-face:comment fontified nil) 805 814 (fontified nil) 814 873 (face tree-sitter-hl-face:comment fontified nil) 873 882 (fontified nil) 882 929 (face tree-sitter-hl-face:comment fontified nil) 929 947 (fontified nil) 947 951 (face tree-sitter-hl-face:keyword fontified nil) 951 952 (fontified nil) 952 955 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 955 956 (fontified nil) 956 957 (face tree-sitter-hl-face:operator fontified nil) 957 961 (fontified nil) 961 967 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 967 968 (face (rainbow-delimiters-depth-1-face) fontified nil) 968 972 (face tree-sitter-hl-face:keyword fontified nil) 972 973 (fontified nil) 973 981 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 981 983 (fontified nil) 983 987 (face tree-sitter-hl-face:keyword fontified nil) 987 988 (fontified nil) 988 996 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 996 998 (fontified nil) 998 1002 (face tree-sitter-hl-face:label fontified nil) 1002 1003 (face tree-sitter-hl-face:operator fontified nil) 1003 1007 (face tree-sitter-hl-face:constant.builtin fontified nil) 1007 1009 (fontified nil) 1009 1014 (face tree-sitter-hl-face:label fontified nil) 1014 1015 (face tree-sitter-hl-face:operator fontified nil) 1015 1019 (face tree-sitter-hl-face:keyword fontified nil) 1019 1020 (fontified nil) 1020 1025 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1025 1027 (fontified nil) 1027 1033 (face tree-sitter-hl-face:label fontified nil) 1033 1034 (face tree-sitter-hl-face:operator fontified nil) 1034 1038 (face tree-sitter-hl-face:keyword fontified nil) 1038 1039 (fontified nil) 1039 1045 (face tree-sitter-hl-face:property fontified nil) 1045 1046 (face (rainbow-delimiters-depth-1-face) fontified nil) 1046 1055 (fontified nil) 1055 1060 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1060 1061 (face (rainbow-delimiters-depth-1-face) fontified nil) 1061 1065 (face tree-sitter-hl-face:keyword fontified nil) 1065 1066 (fontified nil) 1066 1069 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1069 1070 (face (rainbow-delimiters-depth-1-face) fontified nil) 1070 1096 (fontified nil) 1096 1099 (face tree-sitter-hl-face:keyword fontified nil) 1099 1100 (fontified nil) 1100 1105 (face tree-sitter-hl-face:variable fontified nil) 1105 1106 (fontified nil) 1106 1108 (face tree-sitter-hl-face:operator fontified nil) 1108 1109 (fontified nil) 1109 1114 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1114 1115 (face (rainbow-delimiters-depth-1-face) fontified nil) 1115 1119 (face tree-sitter-hl-face:keyword fontified nil) 1119 1120 (fontified nil) 1120 1125 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1125 1126 (face (rainbow-delimiters-depth-1-face) fontified nil) 1126 1140 (fontified nil) 1140 1143 (face tree-sitter-hl-face:keyword fontified nil) 1143 1144 (fontified nil) 1144 1149 (face tree-sitter-hl-face:variable fontified nil) 1149 1150 (fontified nil) 1150 1152 (face tree-sitter-hl-face:operator fontified nil) 1152 1153 (fontified nil) 1153 1158 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1158 1159 (face (rainbow-delimiters-depth-1-face) fontified nil) 1159 1163 (face tree-sitter-hl-face:keyword fontified nil) 1163 1164 (fontified nil) 1164 1169 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1169 1170 (face (rainbow-delimiters-depth-1-face) fontified nil) 1170 1172 (fontified nil) 1172 1188 (fontified nil) 1188 1190 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 1190 1191 (fontified nil) 1191 1192 (face tree-sitter-hl-face:operator fontified nil) 1192 1193 (fontified nil) 1193 1197 (face tree-sitter-hl-face:keyword fontified nil) 1197 1198 (fontified nil) 1198 1209 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1209 1210 (face (rainbow-delimiters-depth-1-face) fontified nil) 1210 1211 (fontified nil) 1211 1217 (fontified nil) 1217 1218 (fontified nil) 1218 1222 (fontified nil) 1222 1223 (face (rainbow-delimiters-depth-1-face) fontified nil) 1223 1224 (fontified nil) 1224 1237 (face tree-sitter-hl-face:comment fontified nil) 1237 1238 (fontified nil) 1238 1241 (fontified nil) 1241 1249 (fontified nil) 1249 1254 (fontified nil) 1254 1255 (fontified nil) 1255 1271 (fontified nil) 1271 1275 (face tree-sitter-hl-face:keyword fontified nil) 1275 1276 (fontified nil) 1276 1279 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1279 1280 (fontified nil) 1280 1286 (face tree-sitter-hl-face:property fontified nil) 1286 1287 (fontified nil) 1287 1291 (face tree-sitter-hl-face:property fontified nil) 1291 1292 (face (rainbow-delimiters-depth-1-face) fontified nil) 1292 1296 (face tree-sitter-hl-face:keyword fontified nil) 1296 1297 (fontified nil) 1297 1303 (face tree-sitter-hl-face:property fontified nil) 1303 1304 (face (rainbow-delimiters-depth-2-face) fontified nil) 1304 1305 (fontified nil) 1305 1309 (fontified nil) 1309 1310 (face (rainbow-delimiters-depth-2-face) fontified nil) 1310 1313 (fontified nil) 1313 1317 (face tree-sitter-hl-face:keyword fontified nil) 1317 1318 (fontified nil) 1318 1324 (face tree-sitter-hl-face:property fontified nil) 1324 1325 (face (rainbow-delimiters-depth-2-face) fontified nil) 1325 1326 (fontified nil) 1326 1331 (fontified nil) 1331 1332 (face tree-sitter-hl-face:operator fontified nil) 1332 1333 (fontified nil) 1333 1334 (face tree-sitter-hl-face:number fontified nil) 1334 1335 (face (rainbow-delimiters-depth-2-face) fontified nil) 1335 1337 (fontified nil) 1337 1374 (fontified nil) 1374 1378 (face tree-sitter-hl-face:keyword fontified nil) 1378 1379 (fontified nil) 1379 1385 (face tree-sitter-hl-face:property fontified nil) 1385 1386 (face (rainbow-delimiters-depth-2-face) fontified nil) 1386 1387 (fontified nil) 1387 1391 (fontified nil) 1391 1392 (face (rainbow-delimiters-depth-2-face) fontified nil) 1392 1395 (fontified nil) 1395 1399 (face tree-sitter-hl-face:keyword fontified nil) 1399 1400 (fontified nil) 1400 1406 (face tree-sitter-hl-face:property fontified nil) 1406 1407 (face (rainbow-delimiters-depth-2-face) fontified nil) 1407 1408 (fontified nil) 1408 1413 (fontified nil) 1413 1414 (face tree-sitter-hl-face:operator fontified nil) 1414 1415 (fontified nil) 1415 1416 (face tree-sitter-hl-face:number fontified nil) 1416 1417 (face (rainbow-delimiters-depth-2-face) fontified nil) 1417 1418 (face (rainbow-delimiters-depth-1-face) fontified nil) 1418 1419 (fontified nil) 1419 1420 (face tree-sitter-hl-face:operator fontified nil) 1420 1421 (fontified nil) 1421 1423 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 1423 1424 (fontified nil) 1424 1449 (fontified nil) 1449 1483 (face tree-sitter-hl-face:comment fontified nil) 1483 1500 (face tree-sitter-hl-face:comment fontified nil) 1500 1504 (fontified nil face tree-sitter-hl-face:comment) 1504 1513 (fontified nil) 1513 1516 (fontified nil face tree-sitter-hl-face:keyword) 1516 1517 (fontified nil) 1517 1522 (fontified nil face tree-sitter-hl-face:variable) 1522 1523 (fontified nil) 1523 1525 (fontified nil face tree-sitter-hl-face:operator) 1525 1526 (fontified nil) 1526 1531 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 1531 1532 (fontified nil face (rainbow-delimiters-depth-1-face)) 1532 1536 (fontified nil face tree-sitter-hl-face:keyword) 1536 1537 (fontified nil) 1537 1542 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1542 1543 (fontified nil face (rainbow-delimiters-depth-1-face)) 1543 1557 (fontified nil) 1557 1561 (fontified nil face tree-sitter-hl-face:keyword) 1561 1562 (fontified nil) 1562 1565 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1565 1566 (fontified nil) 1566 1570 (fontified nil face tree-sitter-hl-face:property) 1570 1571 (fontified nil) 1571 1575 (fontified nil face tree-sitter-hl-face:property) 1575 1576 (fontified nil face (rainbow-delimiters-depth-1-face)) 1576 1580 (fontified nil face tree-sitter-hl-face:keyword) 1580 1581 (fontified nil) 1581 1587 (fontified nil face tree-sitter-hl-face:property) 1587 1588 (fontified nil face (rainbow-delimiters-depth-2-face)) 1588 1593 (fontified nil) 1593 1594 (fontified nil face (rainbow-delimiters-depth-2-face)) 1594 1597 (fontified nil) 1597 1601 (fontified nil face tree-sitter-hl-face:keyword) 1601 1602 (fontified nil) 1602 1608 (fontified nil face tree-sitter-hl-face:property) 1608 1609 (fontified nil face (rainbow-delimiters-depth-2-face)) 1609 1615 (fontified nil) 1615 1616 (fontified nil face tree-sitter-hl-face:operator) 1616 1617 (fontified nil) 1617 1618 (fontified nil face tree-sitter-hl-face:number) 1618 1619 (fontified nil face (rainbow-delimiters-depth-2-face)) 1619 1620 (fontified nil face (rainbow-delimiters-depth-1-face)) 1620 1621 (fontified nil) 1621 1626 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1626 1627 (fontified nil face (rainbow-delimiters-depth-1-face)) 1627 1631 (fontified nil face tree-sitter-hl-face:keyword) 1631 1632 (fontified nil) 1632 1635 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1635 1636 (fontified nil face (rainbow-delimiters-depth-2-face)) 1636 1641 (fontified nil) 1641 1642 (fontified nil face (rainbow-delimiters-depth-2-face)) 1642 1643 (fontified nil face (rainbow-delimiters-depth-1-face)) 1643 1661 (fontified nil) 1661 1669 (fontified nil face tree-sitter-hl-face:function.call) 1669 1670 (fontified nil face (rainbow-delimiters-depth-1-face)) 1670 1671 (fontified nil face tree-sitter-hl-face:number) 1671 1672 (fontified nil face (rainbow-delimiters-depth-1-face)) 1672 1695 (fontified nil) 1695 1698 (fontified nil face tree-sitter-hl-face:keyword) 1698 1699 (fontified nil) 1699 1715 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 1715 1716 (fontified nil face (rainbow-delimiters-depth-1-face)) 1716 1720 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 1720 1722 (fontified nil) 1722 1727 (fontified nil face tree-sitter-hl-face:variable.parameter) 1727 1728 (fontified nil face (rainbow-delimiters-depth-1-face)) 1728 1738 (fontified nil) 1738 1740 (fontified nil face tree-sitter-hl-face:string) 1740 1741 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 1741 1773 (fontified nil face tree-sitter-hl-face:string) 1773 1774 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 1774 1776 (fontified nil face tree-sitter-hl-face:string) 1776 1785 (fontified nil) 1785 1877 (fontified nil face tree-sitter-hl-face:comment) 1877 1887 (fontified nil) 1887 1934 (fontified nil face tree-sitter-hl-face:comment) 1934 1943 (fontified nil) 1943 1952 (fontified nil face tree-sitter-hl-face:variable) 1952 1953 (fontified nil) 1953 1954 (fontified nil face tree-sitter-hl-face:operator) 1954 1955 (fontified nil) 1955 1959 (fontified nil face tree-sitter-hl-face:keyword) 1959 1960 (fontified nil) 1960 1963 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1963 1964 (fontified nil face (rainbow-delimiters-depth-1-face)) 1964 1969 (fontified nil) 1969 1970 (fontified nil face (rainbow-delimiters-depth-1-face)) 1970 1988 (fontified nil) 1988 2057 (fontified nil face tree-sitter-hl-face:comment) 2057 2066 (fontified nil face tree-sitter-hl-face:comment) 2066 2084 (fontified nil) 2084 2090 (fontified nil face tree-sitter-hl-face:keyword) 2090 2106 (fontified nil) 2106 2109 (fontified nil face tree-sitter-hl-face:keyword) 2109 2110 (fontified nil) 2110 2126 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 2126 2127 (fontified nil face (rainbow-delimiters-depth-1-face)) 2127 2131 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 2131 2133 (fontified nil) 2133 2142 (fontified nil face tree-sitter-hl-face:variable.parameter) 2142 2143 (fontified nil face (rainbow-delimiters-depth-1-face)) 2143 2153 (fontified nil) 2153 2155 (fontified nil face tree-sitter-hl-face:string) 2155 2156 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 2156 2195 (fontified nil face tree-sitter-hl-face:string) 2195 2196 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 2196 2198 (fontified nil face tree-sitter-hl-face:string) 2198 2216 (fontified nil) 2216 2221 (fontified nil face tree-sitter-hl-face:variable) 2221 2222 (fontified nil) 2222 2223 (fontified nil face tree-sitter-hl-face:operator) 2223 2224 (fontified nil) 2224 2228 (fontified nil face tree-sitter-hl-face:keyword) 2228 2229 (fontified nil) 2229 2238 (fontified nil face tree-sitter-hl-face:property) 2238 2239 (fontified nil) 2239 2245 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2245 2246 (fontified nil face (rainbow-delimiters-depth-1-face)) 2246 2247 (fontified nil face (rainbow-delimiters-depth-2-face)) 2247 2251 (fontified nil face tree-sitter-hl-face:keyword) 2251 2252 (fontified nil) 2252 2260 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2260 2261 (fontified nil) 2261 2262 (fontified nil face (rainbow-delimiters-depth-2-face)) 2262 2263 (fontified nil face (rainbow-delimiters-depth-1-face)) 2263 2272 (fontified nil) 2272 2281 (fontified nil face tree-sitter-hl-face:variable) 2281 2282 (fontified nil) 2282 2283 (fontified nil face tree-sitter-hl-face:operator) 2283 2290 (fontified nil) 2290 2291 (fontified nil face tree-sitter-hl-face:operator) 2291 2319 (fontified nil) 2319 2325 (fontified nil face tree-sitter-hl-face:keyword) 2325 2345 (fontified nil) 2345 2348 (fontified nil face tree-sitter-hl-face:keyword) 2348 2349 (fontified nil) 2349 2361 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 2361 2362 (fontified nil face (rainbow-delimiters-depth-1-face)) 2362 2366 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 2366 2368 (fontified nil) 2368 2373 (fontified nil face tree-sitter-hl-face:variable.parameter) 2373 2375 (fontified nil) 2375 2384 (fontified nil face tree-sitter-hl-face:variable.parameter) 2384 2385 (fontified nil face (rainbow-delimiters-depth-1-face)) 2385 2395 (fontified nil) 2395 2397 (fontified nil face tree-sitter-hl-face:string) 2397 2398 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 2398 2419 (fontified nil face tree-sitter-hl-face:string) 2419 2420 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 2420 2422 (fontified nil face tree-sitter-hl-face:string) 2422 2431 (fontified nil) 2431 2474 (fontified nil face tree-sitter-hl-face:comment) 2474 2483 (fontified nil) 2483 2485 (fontified nil face tree-sitter-hl-face:keyword) 2485 2486 (fontified nil) 2486 2490 (fontified nil face tree-sitter-hl-face:keyword) 2490 2491 (fontified nil) 2491 2499 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2499 2501 (fontified nil) 2501 2513 (fontified nil) 2513 2518 (fontified nil face tree-sitter-hl-face:variable) 2518 2519 (fontified nil) 2519 2520 (fontified nil face tree-sitter-hl-face:operator) 2520 2521 (fontified nil) 2521 2525 (fontified nil face tree-sitter-hl-face:keyword) 2525 2526 (fontified nil) 2526 2536 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2536 2537 (fontified nil) 2537 2538 (fontified nil face tree-sitter-hl-face:operator) 2538 2545 (fontified nil) 2545 2546 (fontified nil face tree-sitter-hl-face:operator) 2546 2547 (fontified nil) 2547 2551 (fontified nil face tree-sitter-hl-face:keyword) 2551 2552 (fontified nil) 2552 2558 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2558 2559 (fontified nil) 2559 2560 (fontified nil face tree-sitter-hl-face:operator) 2560 2561 (fontified nil) 2561 2571 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call)) 2571 2572 (fontified nil face (rainbow-delimiters-depth-1-face)) 2572 2573 (fontified nil face (rainbow-delimiters-depth-1-face)) 2573 2574 (fontified nil face (rainbow-delimiters-depth-1-face)) 2574 2583 (fontified nil) 2583 2584 (fontified nil face (rainbow-delimiters-depth-1-face)) 2584 2585 (fontified nil) 2585 2586 (fontified nil) 2586 2593 (fontified nil) 2593 2597 (fontified nil face tree-sitter-hl-face:keyword) 2597 2599 (fontified nil) 2599 2611 (fontified nil) 2611 2616 (fontified nil face tree-sitter-hl-face:variable) 2616 2617 (fontified nil) 2617 2618 (fontified nil face tree-sitter-hl-face:operator) 2618 2619 (fontified nil) 2619 2629 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call)) 2629 2630 (fontified nil face (rainbow-delimiters-depth-1-face)) 2630 2631 (fontified nil face (rainbow-delimiters-depth-1-face)) 2631 2632 (fontified nil face (rainbow-delimiters-depth-1-face)) 2632 2641 (fontified nil) 2641 2642 (fontified nil face (rainbow-delimiters-depth-1-face)) 2642 2660 (fontified nil) 2660 2666 (fontified nil face tree-sitter-hl-face:keyword) 2666 2682 (fontified nil) 2682 2685 (fontified nil face tree-sitter-hl-face:keyword) 2685 2686 (fontified nil) 2686 2693 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 2693 2694 (fontified nil face (rainbow-delimiters-depth-1-face)) 2694 2698 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 2698 2700 (fontified nil) 2700 2705 (fontified nil face tree-sitter-hl-face:variable.parameter) 2705 2706 (fontified nil face (rainbow-delimiters-depth-1-face)) 2706 2707 (fontified nil) 2707 2716 (fontified nil) 2716 2718 (fontified nil face tree-sitter-hl-face:string) 2718 2719 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 2719 2757 (fontified nil face tree-sitter-hl-face:string) 2757 2758 (fontified nil syntax-table (15) face tree-sitter-hl-face:string) 2758 2760 (fontified nil face tree-sitter-hl-face:string) 2760 2769 (fontified nil) 2769 2778 (fontified nil face tree-sitter-hl-face:variable) 2778 2779 (fontified nil) 2779 2780 (fontified nil face tree-sitter-hl-face:operator) 2780 2781 (fontified nil) 2781 2785 (fontified nil face tree-sitter-hl-face:keyword) 2785 2786 (fontified nil) 2786 2792 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2792 2793 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2793 2802 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2802 2803 (fontified nil face (rainbow-delimiters-depth-1-face)) 2803 2808 (fontified nil) 2808 2809 (fontified nil face (rainbow-delimiters-depth-1-face)) 2809 2818 (fontified nil) 2818 2827 (fontified nil face tree-sitter-hl-face:variable) 2827 2828 (fontified nil) 2828 2829 (fontified nil face tree-sitter-hl-face:operator) 2829 2830 (fontified nil) 2830 2834 (fontified nil face tree-sitter-hl-face:keyword) 2834 2835 (fontified nil) 2835 2851 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2851 2852 (fontified nil face (rainbow-delimiters-depth-1-face)) 2852 2861 (fontified nil) 2861 2862 (fontified nil face (rainbow-delimiters-depth-1-face)) 2862 2871 (fontified nil) 2871 2876 (fontified nil face tree-sitter-hl-face:variable) 2876 2877 (fontified nil) 2877 2878 (fontified nil face tree-sitter-hl-face:operator) 2878 2879 (fontified nil) 2879 2883 (fontified nil face tree-sitter-hl-face:keyword) 2883 2884 (fontified nil) 2884 2896 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2896 2897 (fontified nil face (rainbow-delimiters-depth-1-face)) 2897 2913 (fontified nil) 2913 2914 (fontified nil face (rainbow-delimiters-depth-1-face)) 2914 2924 (fontified nil) 2924 2930 (fontified nil face tree-sitter-hl-face:keyword) 2930 2946 (fontified nil) 2946 2949 (fontified nil face tree-sitter-hl-face:keyword) 2949 2950 (fontified nil) 2950 2964 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 2964 2965 (fontified nil face (rainbow-delimiters-depth-1-face)) 2965 2969 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 2969 2971 (fontified nil) 2971 2975 (fontified nil face tree-sitter-hl-face:variable.parameter) 2975 2977 (fontified nil) 2977 2982 (fontified nil face tree-sitter-hl-face:variable.parameter) 2982 2983 (fontified nil face (rainbow-delimiters-depth-1-face)) 2983 2994 (fontified nil) 2994 2999 (fontified nil face tree-sitter-hl-face:variable) 2999 3000 (fontified nil) 3000 3001 (fontified nil face tree-sitter-hl-face:operator) 3001 3005 (fontified nil) 3005 3010 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3010 3011 (fontified nil face (rainbow-delimiters-depth-1-face)) 3011 3012 (fontified nil face (rainbow-delimiters-depth-2-face)) 3012 3017 (fontified nil) 3017 3018 (fontified nil face tree-sitter-hl-face:operator) 3018 3019 (fontified nil) 3019 3023 (fontified nil face tree-sitter-hl-face:keyword) 3023 3024 (fontified nil) 3024 3032 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3032 3033 (fontified nil face (rainbow-delimiters-depth-2-face)) 3033 3034 (fontified nil) 3034 3035 (fontified nil face tree-sitter-hl-face:operator) 3035 3036 (fontified nil) 3036 3040 (fontified nil face tree-sitter-hl-face:keyword) 3040 3041 (fontified nil) 3041 3048 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3048 3049 (fontified nil) 3049 3050 (fontified nil face tree-sitter-hl-face:operator) 3050 3051 (fontified nil) 3051 3055 (fontified nil face tree-sitter-hl-face:keyword) 3055 3056 (fontified nil) 3056 3064 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3064 3066 (fontified nil) 3066 3067 (fontified nil face tree-sitter-hl-face:number) 3067 3068 (fontified nil face (rainbow-delimiters-depth-1-face)) 3068 3078 (fontified nil) 3078 3086 (fontified nil) 3086 3094 (fontified nil face tree-sitter-hl-face:variable) 3094 3095 (fontified nil) 3095 3096 (fontified nil face tree-sitter-hl-face:operator) 3096 3097 (fontified nil) 3097 3098 (fontified nil face (rainbow-delimiters-depth-1-face)) 3098 3099 (fontified nil face (rainbow-delimiters-depth-1-face)) 3099 3100 (fontified nil) 3100 3126 (fontified nil) 3126 3132 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3132 3133 (fontified nil face (rainbow-delimiters-depth-1-face)) 3133 3136 (fontified nil) 3136 3141 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3141 3142 (fontified nil face (rainbow-delimiters-depth-2-face)) 3142 3148 (fontified nil) 3148 3152 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3152 3153 (fontified nil face (rainbow-delimiters-depth-3-face)) 3153 3158 (fontified nil) 3158 3159 (fontified nil face (rainbow-delimiters-depth-4-face)) 3159 3160 (fontified nil) 3160 3164 (fontified nil face tree-sitter-hl-face:keyword) 3164 3165 (fontified nil) 3165 3171 (fontified nil face tree-sitter-hl-face:property) 3171 3172 (fontified nil face (rainbow-delimiters-depth-5-face)) 3172 3173 (fontified nil face tree-sitter-hl-face:number) 3173 3174 (fontified nil face (rainbow-delimiters-depth-5-face)) 3174 3175 (fontified nil face (rainbow-delimiters-depth-4-face)) 3175 3176 (fontified nil face (rainbow-delimiters-depth-3-face)) 3176 3177 (fontified nil) 3177 3180 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3180 3181 (fontified nil face (rainbow-delimiters-depth-3-face)) 3181 3182 (fontified nil face (rainbow-delimiters-depth-3-face)) 3182 3183 (fontified nil) 3183 3189 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3189 3190 (fontified nil face (rainbow-delimiters-depth-3-face)) 3190 3191 (fontified nil face (rainbow-delimiters-depth-3-face)) 3191 3192 (fontified nil) 3192 3197 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3197 3198 (fontified nil face (rainbow-delimiters-depth-3-face)) 3198 3199 (fontified nil face (rainbow-delimiters-depth-3-face)) 3199 3201 (fontified nil) 3201 3202 (fontified nil face tree-sitter-hl-face:number) 3202 3203 (fontified nil face (rainbow-delimiters-depth-2-face)) 3203 3204 (fontified nil face (rainbow-delimiters-depth-1-face)) 3204 3214 (fontified nil) 3214 3216 (fontified nil face tree-sitter-hl-face:keyword) 3216 3217 (fontified nil) 3217 3221 (fontified nil face tree-sitter-hl-face:keyword) 3221 3222 (fontified nil) 3222 3227 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3227 3228 (fontified nil) 3228 3229 (fontified nil face tree-sitter-hl-face:operator) 3229 3230 (fontified nil) 3230 3231 (fontified nil face tree-sitter-hl-face:number) 3231 3254 (fontified nil) 3254 3260 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3260 3261 (fontified nil face (rainbow-delimiters-depth-1-face)) 3261 3264 (fontified nil) 3264 3269 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3269 3270 (fontified nil face (rainbow-delimiters-depth-2-face)) 3270 3276 (fontified nil) 3276 3280 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3280 3281 (fontified nil face (rainbow-delimiters-depth-3-face)) 3281 3286 (fontified nil) 3286 3287 (fontified nil face (rainbow-delimiters-depth-4-face)) 3287 3291 (fontified nil face tree-sitter-hl-face:keyword) 3291 3292 (fontified nil) 3292 3298 (fontified nil face tree-sitter-hl-face:property) 3298 3299 (fontified nil face (rainbow-delimiters-depth-5-face)) 3299 3300 (fontified nil face tree-sitter-hl-face:number) 3300 3301 (fontified nil face (rainbow-delimiters-depth-5-face)) 3301 3302 (fontified nil) 3302 3306 (fontified nil face tree-sitter-hl-face:keyword) 3306 3307 (fontified nil) 3307 3313 (fontified nil face tree-sitter-hl-face:property) 3313 3314 (fontified nil face (rainbow-delimiters-depth-5-face)) 3314 3315 (fontified nil face tree-sitter-hl-face:number) 3315 3316 (fontified nil face (rainbow-delimiters-depth-5-face)) 3316 3317 (fontified nil face (rainbow-delimiters-depth-4-face)) 3317 3318 (fontified nil face (rainbow-delimiters-depth-3-face)) 3318 3319 (fontified nil) 3319 3322 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3322 3323 (fontified nil face (rainbow-delimiters-depth-3-face)) 3323 3324 (fontified nil face (rainbow-delimiters-depth-3-face)) 3324 3325 (fontified nil) 3325 3331 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3331 3332 (fontified nil face (rainbow-delimiters-depth-3-face)) 3332 3333 (fontified nil face (rainbow-delimiters-depth-3-face)) 3333 3334 (fontified nil) 3334 3339 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3339 3340 (fontified nil face (rainbow-delimiters-depth-3-face)) 3340 3341 (fontified nil face (rainbow-delimiters-depth-3-face)) 3341 3343 (fontified nil) 3343 3344 (fontified nil face tree-sitter-hl-face:number) 3344 3345 (fontified nil face (rainbow-delimiters-depth-2-face)) 3345 3346 (fontified nil face (rainbow-delimiters-depth-1-face)) 3346 3364 (fontified nil) 3364 3366 (fontified nil face tree-sitter-hl-face:keyword) 3366 3367 (fontified nil) 3367 3371 (fontified nil face tree-sitter-hl-face:keyword) 3371 3372 (fontified nil) 3372 3377 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3377 3378 (fontified nil) 3378 3379 (fontified nil face tree-sitter-hl-face:operator) 3379 3380 (fontified nil) 3380 3381 (fontified nil face tree-sitter-hl-face:number) 3381 3404 (fontified nil) 3404 3410 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3410 3411 (fontified nil face (rainbow-delimiters-depth-1-face)) 3411 3414 (fontified nil) 3414 3419 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3419 3420 (fontified nil face (rainbow-delimiters-depth-2-face)) 3420 3426 (fontified nil) 3426 3430 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3430 3431 (fontified nil face (rainbow-delimiters-depth-3-face)) 3431 3436 (fontified nil) 3436 3437 (fontified nil face (rainbow-delimiters-depth-4-face)) 3437 3441 (fontified nil face tree-sitter-hl-face:keyword) 3441 3442 (fontified nil) 3442 3448 (fontified nil face tree-sitter-hl-face:property) 3448 3449 (fontified nil face (rainbow-delimiters-depth-5-face)) 3449 3450 (fontified nil face tree-sitter-hl-face:number) 3450 3451 (fontified nil face (rainbow-delimiters-depth-5-face)) 3451 3452 (fontified nil) 3452 3453 (fontified nil face (rainbow-delimiters-depth-4-face)) 3453 3454 (fontified nil face (rainbow-delimiters-depth-3-face)) 3454 3455 (fontified nil) 3455 3458 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3458 3459 (fontified nil face (rainbow-delimiters-depth-3-face)) 3459 3460 (fontified nil face (rainbow-delimiters-depth-3-face)) 3460 3461 (fontified nil) 3461 3467 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3467 3468 (fontified nil face (rainbow-delimiters-depth-3-face)) 3468 3469 (fontified nil face (rainbow-delimiters-depth-3-face)) 3469 3470 (fontified nil) 3470 3475 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3475 3476 (fontified nil face (rainbow-delimiters-depth-3-face)) 3476 3477 (fontified nil face (rainbow-delimiters-depth-3-face)) 3477 3479 (fontified nil) 3479 3480 (fontified nil face tree-sitter-hl-face:number) 3480 3481 (fontified nil face (rainbow-delimiters-depth-2-face)) 3481 3482 (fontified nil face (rainbow-delimiters-depth-1-face)) 3482 3492 (fontified nil) 3492 3497 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3497 3498 (fontified nil face (rainbow-delimiters-depth-1-face)) 3498 3511 (fontified nil) 3511 3512 (fontified nil face tree-sitter-hl-face:string) 3512 3521 (fontified nil face tree-sitter-hl-face:string) 3521 3522 (fontified nil face tree-sitter-hl-face:string) 3522 3539 (fontified nil) 3539 3544 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3544 3545 (fontified nil face (rainbow-delimiters-depth-2-face)) 3545 3552 (fontified nil) 3552 3553 (fontified nil face tree-sitter-hl-face:number) 3553 3554 (fontified nil face (rainbow-delimiters-depth-2-face)) 3554 3568 (fontified nil) 3568 3569 (fontified nil face tree-sitter-hl-face:string) 3569 3579 (fontified nil face tree-sitter-hl-face:string) 3579 3580 (fontified nil face tree-sitter-hl-face:string) 3580 3612 (fontified nil) 3612 3613 (fontified nil face (rainbow-delimiters-depth-1-face)) 3613 3623 (fontified nil) 3623 3626 (fontified nil face tree-sitter-hl-face:keyword) 3626 3627 (fontified nil) 3627 3630 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 3630 3631 (fontified nil face (rainbow-delimiters-depth-1-face)) 3631 3635 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 3635 3636 (fontified nil face (rainbow-delimiters-depth-1-face)) 3636 3638 (fontified nil) 3638 3646 (fontified nil) 3646 3652 (fontified nil face tree-sitter-hl-face:variable) 3652 3653 (fontified nil) 3653 3654 (fontified nil face tree-sitter-hl-face:operator) 3654 3655 (fontified nil) 3655 3656 (fontified nil face (rainbow-delimiters-depth-1-face)) 3656 3657 (fontified nil face (rainbow-delimiters-depth-1-face)) 3657 3658 (fontified nil) 3658 3666 (fontified nil) 3666 3678 (fontified nil face tree-sitter-hl-face:comment) 3678 3679 (fontified nil) 3679 3687 (fontified nil) 3687 3693 (fontified nil face tree-sitter-hl-face:variable) 3693 3694 (fontified nil) 3694 3695 (fontified nil face tree-sitter-hl-face:operator) 3695 3696 (fontified nil) 3696 3700 (fontified nil face tree-sitter-hl-face:keyword) 3700 3701 (fontified nil) 3701 3710 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3710 3711 (fontified nil face (rainbow-delimiters-depth-1-face)) 3711 3712 (fontified nil face (rainbow-delimiters-depth-1-face)) 3712 3713 (fontified nil) 3713 3714 (fontified nil) 3714 3722 (fontified nil) 3722 3727 (fontified nil face tree-sitter-hl-face:variable) 3727 3728 (fontified nil) 3728 3729 (fontified nil face tree-sitter-hl-face:operator) 3729 3730 (fontified nil) 3730 3742 (fontified nil face tree-sitter-hl-face:function.call) 3742 3743 (fontified nil face (rainbow-delimiters-depth-1-face)) 3743 3744 (fontified nil face (rainbow-delimiters-depth-1-face)) 3744 3762 (fontified nil) 3762 3766 (fontified nil face tree-sitter-hl-face:keyword) 3766 3767 (fontified nil) 3767 3774 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3774 3775 (fontified nil) 3775 3776 (fontified nil face tree-sitter-hl-face:operator) 3776 3777 (fontified nil) 3777 3780 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3780 3781 (fontified nil face (rainbow-delimiters-depth-1-face)) 3781 3785 (fontified nil face tree-sitter-hl-face:keyword) 3785 3786 (fontified nil) 3786 3794 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3794 3795 (fontified nil) 3795 3796 (fontified nil face tree-sitter-hl-face:operator) 3796 3797 (fontified nil) 3797 3801 (fontified nil face tree-sitter-hl-face:keyword) 3801 3802 (fontified nil) 3802 3804 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3804 3805 (fontified nil face (rainbow-delimiters-depth-1-face)) 3805 3814 (fontified nil) 3814 3818 (fontified nil face tree-sitter-hl-face:keyword) 3818 3819 (fontified nil) 3819 3827 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3827 3828 (fontified nil) 3828 3829 (fontified nil face tree-sitter-hl-face:operator) 3829 3830 (fontified nil) 3830 3833 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3833 3834 (fontified nil face (rainbow-delimiters-depth-1-face)) 3834 3838 (fontified nil face tree-sitter-hl-face:keyword) 3838 3839 (fontified nil) 3839 3847 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3847 3848 (fontified nil) 3848 3849 (fontified nil face tree-sitter-hl-face:operator) 3849 3850 (fontified nil) 3850 3854 (fontified nil face tree-sitter-hl-face:keyword) 3854 3855 (fontified nil) 3855 3857 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3857 3858 (fontified nil face (rainbow-delimiters-depth-1-face)) 3858 3867 (fontified nil) 3867 3871 (fontified nil face tree-sitter-hl-face:keyword) 3871 3872 (fontified nil) 3872 3880 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3880 3881 (fontified nil) 3881 3882 (fontified nil face tree-sitter-hl-face:operator) 3882 3883 (fontified nil) 3883 3886 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3886 3887 (fontified nil face (rainbow-delimiters-depth-1-face)) 3887 3891 (fontified nil face tree-sitter-hl-face:keyword) 3891 3892 (fontified nil) 3892 3900 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3900 3901 (fontified nil) 3901 3902 (fontified nil face tree-sitter-hl-face:operator) 3902 3903 (fontified nil) 3903 3907 (fontified nil face tree-sitter-hl-face:keyword) 3907 3908 (fontified nil) 3908 3910 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3910 3911 (fontified nil face (rainbow-delimiters-depth-1-face)) 3911 3920 (fontified nil) 3920 3924 (fontified nil face tree-sitter-hl-face:keyword) 3924 3925 (fontified nil) 3925 3934 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3934 3935 (fontified nil) 3935 3936 (fontified nil face tree-sitter-hl-face:operator) 3936 3937 (fontified nil) 3937 3940 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3940 3941 (fontified nil face (rainbow-delimiters-depth-1-face)) 3941 3945 (fontified nil face tree-sitter-hl-face:keyword) 3945 3946 (fontified nil) 3946 3955 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3955 3956 (fontified nil) 3956 3957 (fontified nil face tree-sitter-hl-face:operator) 3957 3958 (fontified nil) 3958 3962 (fontified nil face tree-sitter-hl-face:keyword) 3962 3963 (fontified nil) 3963 3965 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3965 3966 (fontified nil face (rainbow-delimiters-depth-1-face)) 3966 3975 (fontified nil) 3975 3979 (fontified nil face tree-sitter-hl-face:keyword) 3979 3980 (fontified nil) 3980 3990 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3990 3991 (fontified nil) 3991 3992 (fontified nil face tree-sitter-hl-face:operator) 3992 3993 (fontified nil) 3993 3996 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3996 3997 (fontified nil face (rainbow-delimiters-depth-1-face)) 3997 4001 (fontified nil face tree-sitter-hl-face:keyword) 4001 4002 (fontified nil) 4002 4012 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4012 4013 (fontified nil) 4013 4014 (fontified nil face tree-sitter-hl-face:operator) 4014 4015 (fontified nil) 4015 4019 (fontified nil face tree-sitter-hl-face:keyword) 4019 4020 (fontified nil) 4020 4022 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4022 4023 (fontified nil face (rainbow-delimiters-depth-1-face)) 4023 4033 (fontified nil) 4033 4037 (fontified nil face tree-sitter-hl-face:keyword) 4037 4044 (fontified nil) 4044 4051 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4051 4052 (fontified nil face (rainbow-delimiters-depth-1-face)) 4052 4053 (fontified nil face (rainbow-delimiters-depth-1-face)) 4053 4054 (fontified nil) 4054 4055 (fontified nil) 4055 4064 (fontified nil) 4064 4076 (fontified nil) 4076 4079 (fontified nil face tree-sitter-hl-face:keyword) 4079 4080 (fontified nil) 4080 4081 (fontified nil face tree-sitter-hl-face:variable) 4081 4084 (fontified nil face tree-sitter-hl-face:variable) 4084 4085 (fontified nil) 4085 4087 (fontified nil face tree-sitter-hl-face:operator) 4087 4088 (fontified nil) 4088 4093 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 4093 4094 (fontified nil face (rainbow-delimiters-depth-1-face)) 4094 4098 (fontified nil face tree-sitter-hl-face:keyword) 4098 4099 (fontified nil) 4099 4106 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4106 4107 (fontified nil) 4107 4108 (fontified nil face tree-sitter-hl-face:operator) 4108 4109 (fontified nil) 4109 4113 (fontified nil face tree-sitter-hl-face:keyword) 4113 4114 (fontified nil) 4114 4122 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4122 4123 (fontified nil face (rainbow-delimiters-depth-1-face)) 4123 4125 (fontified nil) 4125 4141 (fontified nil) 4141 4145 (fontified nil face tree-sitter-hl-face:keyword) 4145 4146 (fontified nil) 4146 4157 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4157 4158 (fontified nil face (rainbow-delimiters-depth-1-face)) 4158 4162 (fontified nil) 4162 4163 (fontified nil face (rainbow-delimiters-depth-1-face)) 4163 4180 (fontified nil) 4180 4186 (fontified nil face tree-sitter-hl-face:variable) 4186 4187 (fontified nil) 4187 4188 (fontified nil face tree-sitter-hl-face:operator) 4188 4189 (fontified nil) 4189 4193 (fontified nil face tree-sitter-hl-face:keyword) 4193 4194 (fontified nil) 4194 4201 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4201 4202 (fontified nil face (rainbow-delimiters-depth-1-face)) 4202 4208 (fontified nil) 4208 4209 (fontified nil face (rainbow-delimiters-depth-1-face)) 4209 4239 (fontified nil) 4239 4241 (fontified nil face tree-sitter-hl-face:keyword) 4241 4247 (fontified nil) 4247 4249 (fontified nil face tree-sitter-hl-face:operator) 4249 4250 (fontified nil) 4250 4254 (fontified nil face tree-sitter-hl-face:keyword) 4254 4255 (fontified nil) 4255 4263 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4263 4264 (fontified nil face tree-sitter-hl-face:operator) 4264 4265 (fontified nil face tree-sitter-hl-face:number) 4265 4287 (fontified nil) 4287 4289 (fontified nil face tree-sitter-hl-face:keyword) 4289 4295 (fontified nil) 4295 4296 (fontified nil face tree-sitter-hl-face:operator) 4296 4297 (fontified nil) 4297 4301 (fontified nil face tree-sitter-hl-face:keyword) 4301 4302 (fontified nil) 4302 4310 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4310 4311 (fontified nil) 4311 4313 (fontified nil face tree-sitter-hl-face:operator) 4313 4314 (fontified nil) 4314 4315 (fontified nil face tree-sitter-hl-face:number) 4315 4341 (fontified nil) 4341 4343 (fontified nil face tree-sitter-hl-face:keyword) 4343 4344 (fontified nil) 4344 4348 (fontified nil face tree-sitter-hl-face:keyword) 4348 4349 (fontified nil) 4349 4356 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4356 4386 (fontified nil) 4386 4390 (fontified nil face tree-sitter-hl-face:keyword) 4390 4391 (fontified nil) 4391 4405 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4405 4406 (fontified nil face (rainbow-delimiters-depth-1-face)) 4406 4411 (fontified nil) 4411 4412 (fontified nil face tree-sitter-hl-face:operator) 4412 4413 (fontified nil) 4413 4417 (fontified nil face tree-sitter-hl-face:keyword) 4417 4418 (fontified nil) 4418 4426 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4426 4434 (fontified nil) 4434 4435 (fontified nil face (rainbow-delimiters-depth-1-face)) 4435 4492 (fontified nil) 4492 4498 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4498 4499 (fontified nil face (rainbow-delimiters-depth-1-face)) 4499 4506 (fontified nil) 4506 4509 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4509 4510 (fontified nil face (rainbow-delimiters-depth-2-face)) 4510 4511 (fontified nil face (rainbow-delimiters-depth-2-face)) 4511 4512 (fontified nil) 4512 4518 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4518 4519 (fontified nil face (rainbow-delimiters-depth-2-face)) 4519 4520 (fontified nil face (rainbow-delimiters-depth-2-face)) 4520 4521 (fontified nil) 4521 4526 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4526 4527 (fontified nil face (rainbow-delimiters-depth-2-face)) 4527 4528 (fontified nil face (rainbow-delimiters-depth-2-face)) 4528 4529 (fontified nil face (rainbow-delimiters-depth-1-face)) 4529 4547 (fontified nil) 4547 4553 (fontified nil face tree-sitter-hl-face:variable) 4553 4554 (fontified nil) 4554 4555 (fontified nil face tree-sitter-hl-face:operator) 4555 4559 (fontified nil) 4559 4564 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4564 4565 (fontified nil face (rainbow-delimiters-depth-1-face)) 4565 4571 (fontified nil) 4571 4572 (fontified nil face (rainbow-delimiters-depth-1-face)) 4572 4581 (fontified nil) 4581 4586 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 4586 4587 (fontified nil face (rainbow-delimiters-depth-1-face)) 4587 4588 (fontified nil face tree-sitter-hl-face:string) 4588 4594 (fontified nil face tree-sitter-hl-face:string) 4594 4595 (fontified nil face tree-sitter-hl-face:string) 4595 4604 (fontified nil) 4604 4609 (fontified nil face tree-sitter-hl-face:property) 4609 4610 (fontified nil face (rainbow-delimiters-depth-1-face)) 4610 4628 (fontified nil) 4628 4707 (fontified nil face tree-sitter-hl-face:comment) 4707 4716 (fontified nil) 4716 4741 (fontified nil face tree-sitter-hl-face:comment) 4741 4751 (fontified nil) 4751 4793 (fontified nil face tree-sitter-hl-face:comment) 4793 4802 (fontified nil) 4802 4833 (fontified nil face tree-sitter-hl-face:comment) 4833 4851 (fontified nil) 4851 4856 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 4856 4857 (fontified nil face (rainbow-delimiters-depth-1-face)) 4857 4858 (fontified nil face tree-sitter-hl-face:string) 4858 4874 (fontified nil face tree-sitter-hl-face:string) 4874 4875 (fontified nil face tree-sitter-hl-face:string) 4875 4877 (fontified nil) 4877 4881 (fontified nil face tree-sitter-hl-face:keyword) 4881 4882 (fontified nil) 4882 4891 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4891 4892 (fontified nil) 4892 4893 (fontified nil face tree-sitter-hl-face:operator) 4893 4894 (fontified nil) 4894 4898 (fontified nil face tree-sitter-hl-face:keyword) 4898 4899 (fontified nil) 4899 4908 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4908 4909 (fontified nil) 4909 4910 (fontified nil face tree-sitter-hl-face:operator) 4910 4911 (fontified nil) 4911 4912 (fontified nil face tree-sitter-hl-face:string) 4912 4916 (fontified nil face tree-sitter-hl-face:string) 4916 4917 (fontified nil face tree-sitter-hl-face:string) 4917 4918 (fontified nil face (rainbow-delimiters-depth-1-face)) 4918 4930 (fontified nil) 4930 4934 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4934 4935 (fontified nil face (rainbow-delimiters-depth-1-face)) 4935 4939 (fontified nil face tree-sitter-hl-face:keyword) 4939 4940 (fontified nil) 4940 4949 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4949 4950 (fontified nil) 4950 4951 (fontified nil face tree-sitter-hl-face:operator) 4951 4952 (fontified nil) 4952 4956 (fontified nil face tree-sitter-hl-face:keyword) 4956 4957 (fontified nil) 4957 4966 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 4966 4967 (fontified nil) 4967 4968 (fontified nil face tree-sitter-hl-face:operator) 4968 4969 (fontified nil) 4969 4970 (fontified nil face tree-sitter-hl-face:string) 4970 4974 (fontified nil face tree-sitter-hl-face:string) 4974 4975 (fontified nil face tree-sitter-hl-face:string) 4975 4983 (fontified nil) 4983 4984 (fontified nil face (rainbow-delimiters-depth-1-face)) 4984 5002 (fontified nil) 5002 5005 (fontified nil face tree-sitter-hl-face:keyword) 5005 5006 (fontified nil) 5006 5009 (fontified nil face tree-sitter-hl-face:variable) 5009 5010 (fontified nil) 5010 5012 (fontified nil face tree-sitter-hl-face:operator) 5012 5016 (fontified nil) 5016 5027 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5027 5028 (fontified nil face (rainbow-delimiters-depth-1-face)) 5028 5029 (fontified nil face (rainbow-delimiters-depth-1-face)) 5029 5043 (fontified nil) 5043 5045 (fontified nil face tree-sitter-hl-face:keyword) 5045 5052 (fontified nil) 5052 5061 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5061 5062 (fontified nil face (rainbow-delimiters-depth-1-face)) 5062 5065 (fontified nil) 5065 5066 (fontified nil face (rainbow-delimiters-depth-1-face)) 5066 5084 (fontified nil) 5084 5087 (fontified nil face tree-sitter-hl-face:keyword) 5087 5109 (fontified nil) 5109 5138 (fontified nil face tree-sitter-hl-face:comment) 5138 5147 (fontified nil face tree-sitter-hl-face:comment) 5147 5155 (fontified nil face tree-sitter-hl-face:comment) 5155 5163 (fontified nil face tree-sitter-hl-face:comment) 5163 5175 (fontified nil) 5175 5182 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5182 5183 (fontified nil face (rainbow-delimiters-depth-1-face)) 5183 5184 (fontified nil face (rainbow-delimiters-depth-1-face)) 5184 5199 (fontified nil) 5199 5203 (fontified nil face tree-sitter-hl-face:property) 5203 5204 (fontified nil) 5204 5215 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5215 5216 (fontified nil face (rainbow-delimiters-depth-1-face)) 5216 5217 (fontified nil face (rainbow-delimiters-depth-1-face)) 5217 5235 (fontified nil) 5235 5238 (fontified nil face tree-sitter-hl-face:variable) 5238 5239 (fontified nil) 5239 5240 (fontified nil face tree-sitter-hl-face:operator) 5240 5241 (fontified nil) 5241 5253 (fontified nil face tree-sitter-hl-face:function.call) 5253 5254 (fontified nil face (rainbow-delimiters-depth-1-face)) 5254 5255 (fontified nil face (rainbow-delimiters-depth-1-face)) 5255 5265 (fontified nil) 5265 5270 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 5270 5271 (fontified nil face (rainbow-delimiters-depth-1-face)) 5271 5272 (fontified nil face tree-sitter-hl-face:string) 5272 5304 (fontified nil face tree-sitter-hl-face:string) 5304 5305 (fontified nil face tree-sitter-hl-face:string) 5305 5306 (fontified nil) 5306 5312 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5312 5313 (fontified nil face (rainbow-delimiters-depth-2-face)) 5313 5314 (fontified nil face (rainbow-delimiters-depth-3-face)) 5314 5318 (fontified nil) 5318 5319 (fontified nil face tree-sitter-hl-face:operator) 5319 5325 (fontified nil) 5325 5326 (fontified nil face (rainbow-delimiters-depth-3-face)) 5326 5327 (fontified nil face (rainbow-delimiters-depth-2-face)) 5327 5328 (fontified nil face (rainbow-delimiters-depth-1-face)) 5328 5329 (fontified nil) 5329 5330 (fontified nil) 5330 5338 (fontified nil) 5338 5344 (fontified nil face tree-sitter-hl-face:keyword) 5344 5351 (fontified nil) 5351 5357 (fontified nil) 5357 5360 (fontified nil face tree-sitter-hl-face:keyword) 5360 5361 (fontified nil) 5361 5371 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 5371 5372 (fontified nil face (rainbow-delimiters-depth-1-face)) 5372 5376 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 5376 5378 (fontified nil) 5378 5387 (fontified nil face tree-sitter-hl-face:variable.parameter) 5387 5389 (fontified nil) 5389 5397 (fontified nil face tree-sitter-hl-face:variable.parameter) 5397 5399 (fontified nil) 5399 5408 (fontified nil face tree-sitter-hl-face:variable.parameter) 5408 5410 (fontified nil) 5410 5412 (fontified nil face tree-sitter-hl-face:operator) 5412 5418 (fontified nil face tree-sitter-hl-face:variable.parameter) 5418 5419 (fontified nil face (rainbow-delimiters-depth-1-face)) 5419 5429 (fontified nil) 5429 5457 (fontified nil face tree-sitter-hl-face:comment) 5457 5466 (fontified nil) 5466 5475 (fontified nil face tree-sitter-hl-face:variable) 5475 5476 (fontified nil) 5476 5477 (fontified nil face tree-sitter-hl-face:operator) 5477 5488 (fontified nil) 5488 5489 (fontified nil face tree-sitter-hl-face:operator) 5489 5490 (fontified nil) 5490 5491 (fontified nil face tree-sitter-hl-face:string) 5491 5497 (fontified nil face tree-sitter-hl-face:string) 5497 5498 (fontified nil face tree-sitter-hl-face:string) 5498 5499 (fontified nil face tree-sitter-hl-face:operator) 5499 5518 (fontified nil) 5518 5523 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 5523 5524 (fontified nil face (rainbow-delimiters-depth-1-face)) 5524 5525 (fontified nil face tree-sitter-hl-face:string) 5525 5544 (fontified nil face tree-sitter-hl-face:string) 5544 5545 (fontified nil face tree-sitter-hl-face:string) 5545 5556 (fontified nil) 5556 5557 (fontified nil face (rainbow-delimiters-depth-1-face)) 5557 5566 (fontified nil) 5566 5571 (fontified nil face tree-sitter-hl-face:variable) 5571 5572 (fontified nil) 5572 5573 (fontified nil face tree-sitter-hl-face:operator) 5573 5574 (fontified nil) 5574 5583 (fontified nil face tree-sitter-hl-face:function.call) 5583 5584 (fontified nil face (rainbow-delimiters-depth-1-face)) 5584 5588 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 5588 5589 (fontified nil face (rainbow-delimiters-depth-2-face)) 5589 5600 (fontified nil) 5600 5601 (fontified nil face tree-sitter-hl-face:string) 5601 5602 (fontified nil face tree-sitter-hl-face:string) 5602 5603 (fontified nil face tree-sitter-hl-face:string) 5603 5604 (fontified nil face (rainbow-delimiters-depth-2-face)) 5604 5605 (fontified nil face (rainbow-delimiters-depth-1-face)) 5605 5620 (fontified nil) 5620 5621 (fontified nil face (rainbow-delimiters-depth-1-face)) 5621 5622 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:string)) 5622 5631 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:string)) 5631 5632 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:string)) 5632 5633 (fontified nil face (rainbow-delimiters-depth-1-face)) 5633 5634 (fontified nil) 5634 5635 (fontified nil face tree-sitter-hl-face:operator) 5635 5659 (fontified nil) 5659 5665 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5665 5666 (fontified nil face (rainbow-delimiters-depth-1-face)) 5666 5672 (fontified nil) 5672 5673 (fontified nil face (rainbow-delimiters-depth-1-face)) 5673 5683 (fontified nil) 5683 5686 (fontified nil face tree-sitter-hl-face:keyword) 5686 5687 (fontified nil) 5687 5688 (fontified nil face tree-sitter-hl-face:variable) 5688 5690 (fontified nil) 5690 5691 (fontified nil face tree-sitter-hl-face:variable) 5691 5692 (fontified nil) 5692 5694 (fontified nil face tree-sitter-hl-face:operator) 5694 5701 (fontified nil) 5701 5706 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5706 5707 (fontified nil face (rainbow-delimiters-depth-1-face)) 5707 5708 (fontified nil face (rainbow-delimiters-depth-1-face)) 5708 5722 (fontified nil) 5722 5729 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 5729 5730 (fontified nil face (rainbow-delimiters-depth-1-face)) 5730 5734 (fontified nil face tree-sitter-hl-face:keyword) 5734 5740 (fontified nil) 5740 5741 (fontified nil face (rainbow-delimiters-depth-1-face)) 5741 5743 (fontified nil) 5743 5751 (fontified nil) 5751 5755 (fontified nil face tree-sitter-hl-face:keyword) 5755 5756 (fontified nil) 5756 5765 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 5765 5766 (fontified nil) 5766 5767 (fontified nil face tree-sitter-hl-face:operator) 5767 5778 (fontified nil) 5778 5779 (fontified nil face tree-sitter-hl-face:operator) 5779 5780 (fontified nil) 5780 5781 (fontified nil face tree-sitter-hl-face:string) 5781 5793 (fontified nil face tree-sitter-hl-face:string) 5793 5794 (fontified nil face tree-sitter-hl-face:string) 5794 5795 (fontified nil) 5795 5803 (fontified nil) 5803 5807 (fontified nil face tree-sitter-hl-face:keyword) 5807 5808 (fontified nil) 5808 5816 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 5816 5817 (fontified nil) 5817 5818 (fontified nil face tree-sitter-hl-face:operator) 5818 5829 (fontified nil) 5829 5830 (fontified nil face tree-sitter-hl-face:operator) 5830 5831 (fontified nil) 5831 5832 (fontified nil face tree-sitter-hl-face:string) 5832 5845 (fontified nil face tree-sitter-hl-face:string) 5845 5846 (fontified nil face tree-sitter-hl-face:string) 5846 5847 (fontified nil) 5847 5856 (fontified nil) 5856 5858 (fontified nil face tree-sitter-hl-face:keyword) 5858 5859 (fontified nil) 5859 5862 (fontified nil face tree-sitter-hl-face:operator) 5862 5866 (fontified nil) 5866 5870 (fontified nil face tree-sitter-hl-face:property) 5870 5871 (fontified nil) 5871 5877 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5877 5878 (fontified nil face (rainbow-delimiters-depth-1-face)) 5878 5882 (fontified nil face tree-sitter-hl-face:keyword) 5882 5883 (fontified nil) 5883 5892 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 5892 5893 (fontified nil face (rainbow-delimiters-depth-1-face)) 5893 5910 (fontified nil) 5910 5918 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5918 5919 (fontified nil face (rainbow-delimiters-depth-1-face)) 5919 5923 (fontified nil face tree-sitter-hl-face:keyword) 5923 5924 (fontified nil) 5924 5933 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 5933 5934 (fontified nil face (rainbow-delimiters-depth-1-face)) 5934 5944 (fontified nil) 5944 5946 (fontified nil face tree-sitter-hl-face:keyword) 5946 5947 (fontified nil) 5947 5950 (fontified nil face tree-sitter-hl-face:operator) 5950 5954 (fontified nil) 5954 5958 (fontified nil face tree-sitter-hl-face:property) 5958 5959 (fontified nil) 5959 5965 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 5965 5966 (fontified nil face (rainbow-delimiters-depth-1-face)) 5966 5970 (fontified nil face tree-sitter-hl-face:keyword) 5970 5971 (fontified nil) 5971 5979 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 5979 5980 (fontified nil face (rainbow-delimiters-depth-1-face)) 5980 5997 (fontified nil) 5997 6005 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 6005 6006 (fontified nil face (rainbow-delimiters-depth-1-face)) 6006 6010 (fontified nil face tree-sitter-hl-face:keyword) 6010 6011 (fontified nil) 6011 6019 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6019 6020 (fontified nil face (rainbow-delimiters-depth-1-face)) 6020 6030 (fontified nil) 6030 6032 (fontified nil face tree-sitter-hl-face:keyword) 6032 6033 (fontified nil) 6033 6037 (fontified nil face tree-sitter-hl-face:keyword) 6037 6038 (fontified nil) 6038 6053 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6053 6054 (fontified nil) 6054 6056 (fontified nil face tree-sitter-hl-face:operator) 6056 6057 (fontified nil) 6057 6059 (fontified nil face tree-sitter-hl-face:number) 6059 6073 (fontified nil) 6073 6077 (fontified nil face tree-sitter-hl-face:keyword) 6077 6078 (fontified nil) 6078 6083 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6083 6084 (fontified nil) 6084 6085 (fontified nil face tree-sitter-hl-face:operator) 6085 6092 (fontified nil) 6092 6097 (fontified nil face tree-sitter-hl-face:property) 6097 6106 (fontified nil) 6106 6110 (fontified nil face tree-sitter-hl-face:keyword) 6110 6124 (fontified nil) 6124 6128 (fontified nil face tree-sitter-hl-face:keyword) 6128 6129 (fontified nil) 6129 6134 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6134 6135 (fontified nil) 6135 6136 (fontified nil face tree-sitter-hl-face:operator) 6136 6143 (fontified nil) 6143 6150 (fontified nil face tree-sitter-hl-face:property) 6150 6168 (fontified nil) 6168 6172 (fontified nil face tree-sitter-hl-face:keyword) 6172 6173 (fontified nil) 6173 6179 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 6179 6180 (fontified nil) 6180 6181 (fontified nil face tree-sitter-hl-face:operator) 6181 6188 (fontified nil) 6188 6194 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 6194 6195 (fontified nil face (rainbow-delimiters-depth-1-face)) 6195 6199 (fontified nil face tree-sitter-hl-face:keyword) 6199 6200 (fontified nil) 6200 6206 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6206 6207 (fontified nil face (rainbow-delimiters-depth-1-face)) 6207 6217 (fontified nil) 6217 6220 (fontified nil face tree-sitter-hl-face:keyword) 6220 6221 (fontified nil) 6221 6230 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 6230 6231 (fontified nil face (rainbow-delimiters-depth-1-face)) 6231 6235 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 6235 6236 (fontified nil face (rainbow-delimiters-depth-1-face)) 6236 6246 (fontified nil) 6246 6252 (fontified nil face tree-sitter-hl-face:keyword) 6252 6259 (fontified nil) 6259 6264 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 6264 6265 (fontified nil face (rainbow-delimiters-depth-1-face)) 6265 6269 (fontified nil face tree-sitter-hl-face:keyword) 6269 6270 (fontified nil) 6270 6278 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6278 6280 (fontified nil) 6280 6285 (fontified nil face tree-sitter-hl-face:label) 6285 6286 (fontified nil face tree-sitter-hl-face:operator) 6286 6290 (fontified nil face tree-sitter-hl-face:keyword) 6290 6291 (fontified nil) 6291 6296 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6296 6298 (fontified nil) 6298 6304 (fontified nil face tree-sitter-hl-face:label) 6304 6305 (fontified nil face tree-sitter-hl-face:operator) 6305 6309 (fontified nil face tree-sitter-hl-face:keyword) 6309 6310 (fontified nil) 6310 6316 (fontified nil face tree-sitter-hl-face:property) 6316 6317 (fontified nil face (rainbow-delimiters-depth-1-face)) 6317 6318 (fontified nil) 6318 6323 (fontified nil) 6323 6327 (fontified nil) 6327 6330 (fontified nil face tree-sitter-hl-face:keyword) 6330 6331 (fontified nil) 6331 6342 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 6342 6343 (fontified nil face (rainbow-delimiters-depth-1-face)) 6343 6347 (fontified nil face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 6347 6349 (fontified nil) 6349 6354 (fontified nil face tree-sitter-hl-face:variable.parameter) 6354 6356 (fontified nil) 6356 6361 (fontified nil face tree-sitter-hl-face:variable.parameter) 6361 6362 (fontified nil face (rainbow-delimiters-depth-1-face)) 6362 6364 (fontified nil) 6364 6373 (fontified nil) 6373 6381 (fontified nil) 6381 6383 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 6383 6384 (fontified nil) 6384 6385 (fontified nil face tree-sitter-hl-face:operator) 6385 6386 (fontified nil) 6386 6390 (fontified nil face tree-sitter-hl-face:keyword) 6390 6391 (fontified nil) 6391 6393 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6393 6394 (fontified nil face (rainbow-delimiters-depth-1-face)) 6394 6399 (fontified nil) 6399 6400 (fontified nil face (rainbow-delimiters-depth-1-face)) 6400 6401 (fontified nil) 6401 6409 (fontified nil) 6409 6411 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 6411 6412 (fontified nil) 6412 6413 (fontified nil face tree-sitter-hl-face:operator) 6413 6414 (fontified nil) 6414 6418 (fontified nil face tree-sitter-hl-face:keyword) 6418 6419 (fontified nil) 6419 6421 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6421 6422 (fontified nil face (rainbow-delimiters-depth-1-face)) 6422 6427 (fontified nil) 6427 6428 (fontified nil face (rainbow-delimiters-depth-1-face)) 6428 6437 (fontified nil) 6437 6439 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 6439 6440 (fontified nil) 6440 6441 (fontified nil face tree-sitter-hl-face:operator) 6441 6442 (fontified nil) 6442 6446 (fontified nil face tree-sitter-hl-face:keyword) 6446 6447 (fontified nil) 6447 6449 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6449 6450 (fontified nil face (rainbow-delimiters-depth-1-face)) 6450 6455 (fontified nil) 6455 6456 (fontified nil face (rainbow-delimiters-depth-1-face)) 6456 6474 (fontified nil) 6474 6477 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 6477 6478 (fontified nil) 6478 6479 (fontified nil face tree-sitter-hl-face:operator) 6479 6486 (fontified nil) 6486 6492 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 6492 6493 (fontified nil face (rainbow-delimiters-depth-1-face)) 6493 6496 (fontified nil face tree-sitter-hl-face:number) 6496 6498 (fontified nil) 6498 6503 (fontified nil face tree-sitter-hl-face:label) 6503 6504 (fontified nil face tree-sitter-hl-face:operator) 6504 6508 (fontified nil face tree-sitter-hl-face:keyword) 6508 6509 (fontified nil) 6509 6514 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6514 6516 (fontified nil) 6516 6522 (fontified nil face tree-sitter-hl-face:label) 6522 6523 (fontified nil face tree-sitter-hl-face:operator) 6523 6527 (fontified nil face tree-sitter-hl-face:keyword) 6527 6528 (fontified nil) 6528 6534 (fontified nil face tree-sitter-hl-face:property) 6534 6535 (fontified nil face (rainbow-delimiters-depth-1-face)) 6535 6545 (fontified nil) 6545 6553 (fontified nil) 6553 6555 (fontified nil face tree-sitter-hl-face:keyword) 6555 6556 (fontified nil) 6556 6557 (fontified nil face tree-sitter-hl-face:string) 6557 6559 (fontified nil face tree-sitter-hl-face:string) 6559 6560 (fontified nil face tree-sitter-hl-face:string) 6560 6561 (fontified nil) 6561 6563 (fontified nil face tree-sitter-hl-face:operator) 6563 6564 (fontified nil) 6564 6568 (fontified nil face tree-sitter-hl-face:keyword) 6568 6569 (fontified nil) 6569 6578 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6578 6579 (fontified nil face (rainbow-delimiters-depth-1-face)) 6579 6584 (fontified nil) 6584 6586 (fontified nil) 6586 6591 (fontified nil) 6591 6592 (fontified nil face (rainbow-delimiters-depth-1-face)) 6592 6594 (fontified nil) 6594 6619 (fontified nil) 6619 6623 (fontified nil face tree-sitter-hl-face:variable) 6623 6624 (fontified nil) 6624 6625 (fontified nil face tree-sitter-hl-face:operator) 6625 6632 (fontified nil) 6632 6638 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 6638 6639 (fontified nil face (rainbow-delimiters-depth-1-face)) 6639 6640 (fontified nil face (rainbow-delimiters-depth-2-face)) 6640 6643 (fontified nil face tree-sitter-hl-face:number) 6643 6645 (fontified nil) 6645 6648 (fontified nil face tree-sitter-hl-face:number) 6648 6649 (fontified nil face (rainbow-delimiters-depth-2-face)) 6649 6651 (fontified nil) 6651 6656 (fontified nil face tree-sitter-hl-face:label) 6656 6657 (fontified nil face tree-sitter-hl-face:operator) 6657 6661 (fontified nil face tree-sitter-hl-face:keyword) 6661 6662 (fontified nil) 6662 6667 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6667 6669 (fontified nil) 6669 6675 (fontified nil face tree-sitter-hl-face:label) 6675 6676 (fontified nil face tree-sitter-hl-face:operator) 6676 6680 (fontified nil face tree-sitter-hl-face:keyword) 6680 6681 (fontified nil) 6681 6687 (fontified nil face tree-sitter-hl-face:property) 6687 6688 (fontified nil face (rainbow-delimiters-depth-1-face)) 6688 6714 (fontified nil) 6714 6744 (fontified nil face tree-sitter-hl-face:comment) 6744 6757 (fontified nil) 6757 6767 (fontified nil face tree-sitter-hl-face:variable) 6767 6768 (fontified nil) 6768 6769 (fontified nil face tree-sitter-hl-face:operator) 6769 6776 (fontified nil) 6776 6782 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 6782 6783 (fontified nil face (rainbow-delimiters-depth-1-face)) 6783 6784 (fontified nil face (rainbow-delimiters-depth-2-face)) 6784 6785 (fontified nil face (rainbow-delimiters-depth-3-face)) 6785 6788 (fontified nil face tree-sitter-hl-face:number) 6788 6790 (fontified nil) 6790 6794 (fontified nil face tree-sitter-hl-face:keyword) 6794 6795 (fontified nil) 6795 6801 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6801 6802 (fontified nil face (rainbow-delimiters-depth-3-face)) 6802 6843 (fontified nil) 6843 6844 (fontified nil face (rainbow-delimiters-depth-3-face)) 6844 6848 (fontified nil face tree-sitter-hl-face:keyword) 6848 6849 (fontified nil) 6849 6855 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6855 6857 (fontified nil) 6857 6860 (fontified nil face tree-sitter-hl-face:number) 6860 6861 (fontified nil face (rainbow-delimiters-depth-3-face)) 6861 6862 (fontified nil) 6862 6863 (fontified nil face (rainbow-delimiters-depth-2-face)) 6863 6865 (fontified nil) 6865 6870 (fontified nil face tree-sitter-hl-face:label) 6870 6871 (fontified nil face tree-sitter-hl-face:operator) 6871 6875 (fontified nil face tree-sitter-hl-face:keyword) 6875 6876 (fontified nil) 6876 6881 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 6881 6883 (fontified nil) 6883 6889 (fontified nil face tree-sitter-hl-face:label) 6889 6890 (fontified nil face tree-sitter-hl-face:operator) 6890 6894 (fontified nil face tree-sitter-hl-face:keyword) 6894 6895 (fontified nil) 6895 6901 (fontified nil face tree-sitter-hl-face:property) 6901 6902 (fontified nil face (rainbow-delimiters-depth-1-face)) 6902 6929 (fontified nil) 6929 6948 (fontified nil face tree-sitter-hl-face:variable) 6948 6949 (fontified nil) 6949 6950 (fontified nil face tree-sitter-hl-face:operator) 6950 6951 (fontified nil) 6951 6969 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call)) 6969 6970 (fontified nil face (rainbow-delimiters-depth-1-face)) 6970 6986 (fontified nil) 6986 6987 (fontified nil face (rainbow-delimiters-depth-1-face)) 6987 7000 (fontified nil) 7000 7004 (fontified nil face tree-sitter-hl-face:keyword) 7004 7005 (fontified nil) 7005 7008 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 7008 7009 (fontified nil) 7009 7010 (fontified nil face tree-sitter-hl-face:operator) 7010 7031 (fontified nil) 7031 7037 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 7037 7038 (fontified nil face (rainbow-delimiters-depth-1-face)) 7038 7039 (fontified nil face (rainbow-delimiters-depth-2-face)) 7039 7041 (fontified nil face tree-sitter-hl-face:constructor) 7041 7042 (fontified nil) 7042 7043 (fontified nil face (rainbow-delimiters-depth-2-face)) 7043 7044 (fontified nil face (rainbow-delimiters-depth-1-face)) 7044 7045 (fontified nil) 7045 7046 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 7046 7072 (fontified nil) 7072 7137 (fontified nil face tree-sitter-hl-face:comment) 7137 7150 (fontified nil) 7150 7226 (fontified nil face tree-sitter-hl-face:comment) 7226 7239 (fontified nil) 7239 7291 (fontified nil face tree-sitter-hl-face:comment) 7291 7317 (fontified nil) 7317 7319 (fontified nil face tree-sitter-hl-face:keyword) 7319 7320 (fontified nil) 7320 7324 (fontified nil face tree-sitter-hl-face:keyword) 7324 7325 (fontified nil) 7325 7332 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 7332 7350 (fontified nil) 7350 7355 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 7355 7356 (fontified nil face (rainbow-delimiters-depth-1-face)) 7356 7357 (fontified nil face tree-sitter-hl-face:string) 7357 7360 (fontified nil face tree-sitter-hl-face:string) 7360 7361 (fontified nil face tree-sitter-hl-face:string) 7361 7363 (fontified nil) 7363 7367 (fontified nil face tree-sitter-hl-face:keyword) 7367 7368 (fontified nil) 7368 7371 (fontified nil face tree-sitter-hl-face:property) 7371 7372 (fontified nil) 7372 7377 (fontified nil face tree-sitter-hl-face:property) 7377 7378 (fontified nil face (rainbow-delimiters-depth-1-face)) 7378 7395 (fontified nil) 7395 7400 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 7400 7401 (fontified nil face (rainbow-delimiters-depth-1-face)) 7401 7402 (fontified nil face tree-sitter-hl-face:string) 7402 7412 (fontified nil face tree-sitter-hl-face:string) 7412 7413 (fontified nil face tree-sitter-hl-face:string) 7413 7421 (fontified nil) 7421 7424 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 7424 7425 (fontified nil face (rainbow-delimiters-depth-2-face)) 7425 7429 (fontified nil face tree-sitter-hl-face:keyword) 7429 7430 (fontified nil) 7430 7433 (fontified nil face tree-sitter-hl-face:property) 7433 7434 (fontified nil face (rainbow-delimiters-depth-2-face)) 7434 7435 (fontified nil face (rainbow-delimiters-depth-1-face)) 7435 7449 (fontified nil) 7449 7461 (fontified nil) 7461 7464 (fontified nil face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 7464 7465 (fontified nil) 7465 7466 (fontified nil face tree-sitter-hl-face:operator) 7466 7467 (fontified nil) 7467 7468 (fontified nil face (rainbow-delimiters-depth-1-face)) 7468 7471 (fontified nil face tree-sitter-hl-face:number) 7471 7472 (fontified nil) 7472 7473 (fontified nil face tree-sitter-hl-face:operator) 7473 7474 (fontified nil) 7474 7478 (fontified nil face tree-sitter-hl-face:keyword) 7478 7479 (fontified nil) 7479 7484 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 7484 7485 (fontified nil face (rainbow-delimiters-depth-2-face)) 7485 7490 (fontified nil) 7490 7492 (fontified nil) 7492 7497 (fontified nil) 7497 7498 (fontified nil face (rainbow-delimiters-depth-2-face)) 7498 7499 (fontified nil) 7499 7518 (fontified nil) 7518 7519 (fontified nil face tree-sitter-hl-face:operator) 7519 7520 (fontified nil) 7520 7521 (fontified nil face (rainbow-delimiters-depth-2-face)) 7521 7527 (fontified nil) 7527 7532 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 7532 7533 (fontified nil face (rainbow-delimiters-depth-3-face)) 7533 7537 (fontified nil face tree-sitter-hl-face:keyword) 7537 7538 (fontified nil) 7538 7541 (fontified nil face tree-sitter-hl-face:property) 7541 7542 (fontified nil face (rainbow-delimiters-depth-4-face)) 7542 7543 (fontified nil face tree-sitter-hl-face:number) 7543 7544 (fontified nil face (rainbow-delimiters-depth-4-face)) 7544 7546 (fontified nil) 7546 7550 (fontified nil face tree-sitter-hl-face:keyword) 7550 7551 (fontified nil) 7551 7554 (fontified nil face tree-sitter-hl-face:property) 7554 7555 (fontified nil face (rainbow-delimiters-depth-4-face)) 7555 7556 (fontified nil face tree-sitter-hl-face:number) 7556 7557 (fontified nil face (rainbow-delimiters-depth-4-face)) 7557 7558 (fontified nil face (rainbow-delimiters-depth-3-face)) 7558 7581 (fontified nil) 7581 7582 (fontified nil face tree-sitter-hl-face:operator) 7582 7589 (fontified nil) 7589 7594 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 7594 7595 (fontified nil face (rainbow-delimiters-depth-3-face)) 7595 7599 (fontified nil face tree-sitter-hl-face:keyword) 7599 7600 (fontified nil) 7600 7603 (fontified nil face tree-sitter-hl-face:property) 7603 7604 (fontified nil face (rainbow-delimiters-depth-4-face)) 7604 7605 (fontified nil face tree-sitter-hl-face:number) 7605 7606 (fontified nil face (rainbow-delimiters-depth-4-face)) 7606 7608 (fontified nil) 7608 7612 (fontified nil face tree-sitter-hl-face:keyword) 7612 7613 (fontified nil) 7613 7616 (fontified nil face tree-sitter-hl-face:property) 7616 7617 (fontified nil face (rainbow-delimiters-depth-4-face)) 7617 7618 (fontified nil face tree-sitter-hl-face:number) 7618 7619 (fontified nil face (rainbow-delimiters-depth-4-face)) 7619 7620 (fontified nil face (rainbow-delimiters-depth-3-face)) 7620 7621 (fontified nil face (rainbow-delimiters-depth-2-face)) 7621 7641 (fontified nil) 7641 7642 (fontified nil face tree-sitter-hl-face:operator) 7642 7649 (fontified nil) 7649 7653 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 7653 7654 (fontified nil face (rainbow-delimiters-depth-2-face)) 7654 7658 (fontified nil face tree-sitter-hl-face:keyword) 7658 7659 (fontified nil) 7659 7661 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 7661 7662 (fontified nil face (rainbow-delimiters-depth-3-face)) 7662 7667 (fontified nil) 7667 7668 (fontified nil face (rainbow-delimiters-depth-3-face)) 7668 7669 (fontified nil face (rainbow-delimiters-depth-2-face)) 7669 7670 (fontified nil face (rainbow-delimiters-depth-1-face)) 7670 7696 (fontified nil) 7696 7712 (fontified nil face tree-sitter-hl-face:comment) 7712 7725 (fontified nil) 7725 7741 (fontified nil face tree-sitter-hl-face:comment) 7741 7755 (fontified nil) 7755 7767 (fontified t) 7767 7769 (face tree-sitter-hl-face:keyword fontified t) 7769 7770 (fontified t) 7770 7774 (face tree-sitter-hl-face:keyword fontified t) 7774 7775 (fontified t) 7775 7782 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7782 7784 (fontified t) 7784 7794 (fontified t) 7794 7799 (fontified t) 7799 7800 (fontified t) 7800 7805 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7805 7806 (face (rainbow-delimiters-depth-1-face) fontified t) 7806 7807 (face tree-sitter-hl-face:string fontified t) 7807 7810 (face tree-sitter-hl-face:string fontified t) 7810 7811 (face tree-sitter-hl-face:string fontified t) 7811 7813 (fontified t) 7813 7816 (face tree-sitter-hl-face:constructor fontified t) 7816 7817 (fontified t) 7817 7822 (face tree-sitter-hl-face:property fontified t) 7822 7823 (face (rainbow-delimiters-depth-1-face) fontified t) 7823 7824 (fontified t) 7824 7837 (fontified t) 7837 7845 (fontified t) 7845 7847 (face tree-sitter-hl-face:keyword fontified t) 7847 7848 (fontified t) 7848 7849 (face tree-sitter-hl-face:string fontified t) 7849 7852 (face tree-sitter-hl-face:string fontified t) 7852 7853 (face tree-sitter-hl-face:string fontified t) 7853 7854 (fontified t) 7854 7856 (face tree-sitter-hl-face:operator fontified t) 7856 7857 (fontified t) 7857 7861 (face tree-sitter-hl-face:keyword fontified t) 7861 7862 (fontified t) 7862 7871 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7871 7872 (face (rainbow-delimiters-depth-1-face) fontified t) 7872 7877 (fontified t) 7877 7879 (fontified t) 7879 7884 (fontified t) 7884 7885 (face (rainbow-delimiters-depth-1-face) fontified t) 7885 7899 (fontified t) 7899 7904 (face tree-sitter-hl-face:variable fontified t) 7904 7905 (fontified t) 7905 7906 (face tree-sitter-hl-face:operator fontified t) 7906 7913 (fontified t) 7913 7919 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7919 7920 (face (rainbow-delimiters-depth-1-face) fontified t) 7920 7921 (face tree-sitter-hl-face:number fontified t) 7921 7923 (fontified t) 7923 7926 (face tree-sitter-hl-face:number fontified t) 7926 7927 (fontified t) 7927 7928 (face tree-sitter-hl-face:operator fontified t) 7928 7935 (fontified t) 7935 7937 (face tree-sitter-hl-face:property fontified t) 7937 7939 (fontified t) 7939 7942 (face tree-sitter-hl-face:number fontified t) 7942 7943 (fontified t) 7943 7944 (face tree-sitter-hl-face:operator fontified t) 7944 7951 (fontified t) 7951 7953 (face tree-sitter-hl-face:property fontified t) 7953 7954 (fontified t) 7954 7955 (face tree-sitter-hl-face:operator fontified t) 7955 7956 (fontified t) 7956 7961 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7961 7962 (face (rainbow-delimiters-depth-2-face) fontified t) 7962 7964 (face tree-sitter-hl-face:constructor fontified t) 7964 7965 (face (rainbow-delimiters-depth-2-face) fontified t) 7965 8000 (fontified t) 8000 8005 (face tree-sitter-hl-face:label fontified t) 8005 8006 (face tree-sitter-hl-face:operator fontified t) 8006 8010 (face tree-sitter-hl-face:keyword fontified t) 8010 8011 (fontified t) 8011 8016 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8016 8018 (fontified t) 8018 8024 (face tree-sitter-hl-face:label fontified t) 8024 8025 (face tree-sitter-hl-face:operator fontified t) 8025 8029 (face tree-sitter-hl-face:keyword fontified t) 8029 8030 (fontified t) 8030 8036 (face tree-sitter-hl-face:property fontified t) 8036 8037 (face (rainbow-delimiters-depth-1-face) fontified t) 8037 8063 (fontified t) 8063 8066 (face tree-sitter-hl-face:variable fontified t) 8066 8067 (fontified t) 8067 8068 (face tree-sitter-hl-face:operator fontified t) 8068 8075 (fontified t) 8075 8081 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8081 8082 (face (rainbow-delimiters-depth-1-face) fontified t) 8082 8083 (face tree-sitter-hl-face:number fontified t) 8083 8085 (fontified t) 8085 8088 (face tree-sitter-hl-face:number fontified t) 8088 8089 (fontified t) 8089 8090 (face tree-sitter-hl-face:operator fontified t) 8090 8097 (fontified t) 8097 8099 (face tree-sitter-hl-face:property fontified t) 8099 8101 (fontified t) 8101 8104 (face tree-sitter-hl-face:number fontified t) 8104 8105 (fontified t) 8105 8106 (face tree-sitter-hl-face:operator fontified t) 8106 8113 (fontified t) 8113 8115 (face tree-sitter-hl-face:property fontified t) 8115 8116 (fontified t) 8116 8117 (face tree-sitter-hl-face:operator fontified t) 8117 8118 (fontified t) 8118 8123 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8123 8124 (face (rainbow-delimiters-depth-2-face) fontified t) 8124 8126 (face tree-sitter-hl-face:constructor fontified t) 8126 8127 (face (rainbow-delimiters-depth-2-face) fontified t) 8127 8160 (fontified t) 8160 8165 (face tree-sitter-hl-face:label fontified t) 8165 8166 (face tree-sitter-hl-face:operator fontified t) 8166 8170 (face tree-sitter-hl-face:keyword fontified t) 8170 8171 (fontified t) 8171 8176 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8176 8178 (fontified t) 8178 8184 (face tree-sitter-hl-face:label fontified t) 8184 8185 (face tree-sitter-hl-face:operator fontified t) 8185 8189 (face tree-sitter-hl-face:keyword fontified t) 8189 8190 (fontified t) 8190 8196 (face tree-sitter-hl-face:property fontified t) 8196 8197 (face (rainbow-delimiters-depth-1-face) fontified t) 8197 8223 (fontified t) 8223 8224 (face tree-sitter-hl-face:variable fontified t) 8224 8226 (fontified t) 8226 8227 (face tree-sitter-hl-face:variable fontified t) 8227 8228 (fontified t) 8228 8229 (face tree-sitter-hl-face:operator fontified t) 8229 8236 (fontified t) 8236 8244 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8244 8245 (face (rainbow-delimiters-depth-1-face) fontified t) 8245 8251 (fontified t) 8251 8257 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8257 8258 (face (rainbow-delimiters-depth-2-face) fontified t) 8258 8260 (face tree-sitter-hl-face:constructor fontified t) 8260 8262 (fontified t) 8262 8268 (face tree-sitter-hl-face:label fontified t) 8268 8269 (face tree-sitter-hl-face:operator fontified t) 8269 8273 (face tree-sitter-hl-face:keyword fontified t) 8273 8274 (fontified t) 8274 8280 (face tree-sitter-hl-face:property fontified t) 8280 8281 (face (rainbow-delimiters-depth-2-face) fontified t) 8281 8323 (fontified t) 8323 8329 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8329 8330 (face (rainbow-delimiters-depth-2-face) fontified t) 8330 8332 (face tree-sitter-hl-face:constructor fontified t) 8332 8334 (fontified t) 8334 8340 (face tree-sitter-hl-face:label fontified t) 8340 8341 (face tree-sitter-hl-face:operator fontified t) 8341 8345 (face tree-sitter-hl-face:keyword fontified t) 8345 8346 (fontified t) 8346 8352 (face tree-sitter-hl-face:property fontified t) 8352 8353 (face (rainbow-delimiters-depth-2-face) fontified t) 8353 8389 (fontified t) 8389 8397 (face tree-sitter-hl-face:label fontified t) 8397 8398 (face tree-sitter-hl-face:operator fontified t) 8398 8399 (face tree-sitter-hl-face:string fontified t) 8399 8401 (face tree-sitter-hl-face:string fontified t) 8401 8402 (face tree-sitter-hl-face:string fontified t) 8402 8403 (face (rainbow-delimiters-depth-1-face) fontified t) 8403 8429 (fontified t) 8429 8439 (face tree-sitter-hl-face:variable fontified t) 8439 8440 (fontified t) 8440 8441 (face tree-sitter-hl-face:operator fontified t) 8441 8447 (fontified t) 8447 8448 (face (rainbow-delimiters-depth-1-face) fontified t) 8448 8449 (fontified t) 8449 8450 (face (rainbow-delimiters-depth-1-face) fontified t) 8450 8451 (fontified t) 8451 8452 (face tree-sitter-hl-face:operator fontified t) 8452 8456 (fontified t) 8456 8457 (face (rainbow-delimiters-depth-1-face) fontified t) 8457 8458 (fontified t) 8458 8459 (face (rainbow-delimiters-depth-1-face) fontified t) 8459 8485 (fontified t) 8485 8487 (face tree-sitter-hl-face:keyword fontified t) 8487 8488 (fontified t) 8488 8489 (face tree-sitter-hl-face:string fontified t) 8489 8493 (face tree-sitter-hl-face:string fontified t) 8493 8494 (face tree-sitter-hl-face:string fontified t) 8494 8495 (fontified t) 8495 8497 (face tree-sitter-hl-face:operator fontified t) 8497 8498 (fontified t) 8498 8502 (face tree-sitter-hl-face:keyword fontified t) 8502 8503 (fontified t) 8503 8512 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8512 8513 (face (rainbow-delimiters-depth-1-face) fontified t) 8513 8518 (fontified t) 8518 8520 (fontified t) 8520 8525 (fontified t) 8525 8526 (face (rainbow-delimiters-depth-1-face) fontified t) 8526 8544 (fontified t) 8544 8548 (face tree-sitter-hl-face:keyword fontified t) 8548 8549 (fontified t) 8549 8554 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8554 8555 (face (rainbow-delimiters-depth-1-face) fontified t) 8555 8560 (face tree-sitter-hl-face:variable fontified t) 8560 8562 (fontified t) 8562 8567 (face tree-sitter-hl-face:variable fontified t) 8567 8568 (face (rainbow-delimiters-depth-1-face) fontified t) 8568 8569 (fontified t) 8569 8570 (face tree-sitter-hl-face:operator fontified t) 8570 8571 (fontified t) 8571 8575 (face tree-sitter-hl-face:keyword fontified t) 8575 8576 (fontified t) 8576 8581 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8581 8582 (face (rainbow-delimiters-depth-1-face) fontified t) 8582 8587 (fontified t) 8587 8589 (fontified t) 8589 8594 (fontified t) 8594 8595 (face (rainbow-delimiters-depth-1-face) fontified t) 8595 8596 (fontified t) 8596 8597 (face tree-sitter-hl-face:operator fontified t) 8597 8604 (fontified t) 8604 8608 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8608 8609 (face (rainbow-delimiters-depth-1-face) fontified t) 8609 8611 (face tree-sitter-hl-face:constructor fontified t) 8611 8612 (face (rainbow-delimiters-depth-1-face) fontified t) 8612 8630 (fontified t) 8630 8642 (fontified t) 8642 8645 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8645 8646 (fontified t) 8646 8647 (face tree-sitter-hl-face:operator fontified t) 8647 8648 (fontified t) 8648 8649 (face (rainbow-delimiters-depth-1-face) fontified t) 8649 8652 (face tree-sitter-hl-face:number fontified t) 8652 8653 (fontified t) 8653 8654 (face tree-sitter-hl-face:operator fontified t) 8654 8655 (fontified t) 8655 8658 (face tree-sitter-hl-face:number fontified t) 8658 8659 (fontified t) 8659 8660 (face tree-sitter-hl-face:operator fontified t) 8660 8661 (fontified t) 8661 8665 (face tree-sitter-hl-face:keyword fontified t) 8665 8666 (fontified t) 8666 8671 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8671 8672 (face (rainbow-delimiters-depth-2-face) fontified t) 8672 8677 (fontified t) 8677 8679 (fontified t) 8679 8684 (fontified t) 8684 8685 (face (rainbow-delimiters-depth-2-face) fontified t) 8685 8686 (fontified t) 8686 8705 (fontified t) 8705 8706 (face tree-sitter-hl-face:operator fontified t) 8706 8713 (fontified t) 8713 8716 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8716 8717 (face (rainbow-delimiters-depth-2-face) fontified t) 8717 8728 (fontified t) 8728 8729 (face tree-sitter-hl-face:operator fontified t) 8729 8730 (fontified t) 8730 8734 (face tree-sitter-hl-face:keyword fontified t) 8734 8735 (fontified t) 8735 8740 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8740 8741 (face (rainbow-delimiters-depth-2-face) fontified t) 8741 8742 (face (rainbow-delimiters-depth-1-face) fontified t) 8742 8743 (fontified t) 8743 8744 (fontified t) 8744 8752 (fontified t) 8752 8754 (face tree-sitter-hl-face:keyword fontified t) 8754 8755 (fontified t) 8755 8756 (face tree-sitter-hl-face:string fontified t) 8756 8762 (face tree-sitter-hl-face:string fontified t) 8762 8763 (face tree-sitter-hl-face:string fontified t) 8763 8764 (fontified t) 8764 8766 (face tree-sitter-hl-face:operator fontified t) 8766 8767 (fontified t) 8767 8771 (face tree-sitter-hl-face:keyword fontified t) 8771 8772 (fontified t) 8772 8784 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8784 8786 (fontified t) 8786 8798 (fontified t) 8798 8800 (face tree-sitter-hl-face:keyword fontified t) 8800 8801 (fontified t) 8801 8805 (face tree-sitter-hl-face:keyword fontified t) 8805 8806 (fontified t) 8806 8813 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8813 8815 (fontified t) 8815 8831 (fontified t) 8831 8836 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8836 8837 (face (rainbow-delimiters-depth-1-face) fontified t) 8837 8838 (face tree-sitter-hl-face:string fontified t) 8838 8865 (face tree-sitter-hl-face:string fontified t) 8865 8866 (face tree-sitter-hl-face:string fontified t) 8866 8867 (face (rainbow-delimiters-depth-1-face) fontified t) 8867 8868 (fontified t) 8868 8881 (fontified t) 8881 8893 (fontified t) 8893 8896 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8896 8897 (fontified t) 8897 8898 (face tree-sitter-hl-face:operator fontified t) 8898 8899 (fontified t) 8899 8900 (face (rainbow-delimiters-depth-1-face) fontified t) 8900 8904 (face tree-sitter-hl-face:keyword fontified t) 8904 8905 (fontified t) 8905 8908 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8908 8909 (face (rainbow-delimiters-depth-2-face) fontified t) 8909 8914 (fontified t) 8914 8916 (fontified t) 8916 8921 (fontified t) 8921 8922 (face (rainbow-delimiters-depth-2-face) fontified t) 8922 8923 (fontified t) 8923 8942 (fontified t) 8942 8943 (face tree-sitter-hl-face:operator fontified t) 8943 8944 (fontified t) 8944 8945 (face (rainbow-delimiters-depth-2-face) fontified t) 8945 8951 (fontified t) 8951 8955 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8955 8956 (face (rainbow-delimiters-depth-3-face) fontified t) 8956 8958 (face tree-sitter-hl-face:constructor fontified t) 8958 8960 (fontified t) 8960 8962 (face tree-sitter-hl-face:constructor fontified t) 8962 8964 (fontified t) 8964 8970 (face tree-sitter-hl-face:label fontified t) 8970 8971 (face tree-sitter-hl-face:operator fontified t) 8971 8975 (face tree-sitter-hl-face:keyword fontified t) 8975 8976 (fontified t) 8976 8982 (face tree-sitter-hl-face:property fontified t) 8982 8983 (face (rainbow-delimiters-depth-3-face) fontified t) 8983 8984 (fontified t) 8984 8985 (face tree-sitter-hl-face:operator fontified t) 8985 8986 (fontified t) 8986 8988 (face tree-sitter-hl-face:constructor fontified t) 8988 8989 (fontified t) 8989 8990 (face tree-sitter-hl-face:operator fontified t) 8990 8991 (fontified t) 8991 8996 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8996 8997 (face (rainbow-delimiters-depth-3-face) fontified t) 8997 8999 (face tree-sitter-hl-face:constructor fontified t) 8999 9000 (face (rainbow-delimiters-depth-3-face) fontified t) 9000 9001 (fontified t) 9001 9002 (face tree-sitter-hl-face:operator fontified t) 9002 9003 (fontified t) 9003 9006 (face tree-sitter-hl-face:constructor fontified t) 9006 9007 (face (rainbow-delimiters-depth-2-face) fontified t) 9007 9008 (face (rainbow-delimiters-depth-1-face) fontified t) 9008 9009 (fontified t) 9009 9018 (fontified t) 9018 9020 (face tree-sitter-hl-face:keyword fontified t) 9020 9021 (fontified t) 9021 9022 (face tree-sitter-hl-face:string fontified t) 9022 9029 (face tree-sitter-hl-face:string fontified t) 9029 9030 (face tree-sitter-hl-face:string fontified t) 9030 9031 (fontified t) 9031 9033 (face tree-sitter-hl-face:operator fontified t) 9033 9034 (fontified t) 9034 9038 (face tree-sitter-hl-face:keyword fontified t) 9038 9039 (fontified t) 9039 9051 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9051 9065 (fontified t) 9065 9067 (face tree-sitter-hl-face:keyword fontified t) 9067 9068 (fontified t) 9068 9072 (face tree-sitter-hl-face:keyword fontified t) 9072 9073 (fontified t) 9073 9080 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9080 9098 (fontified t) 9098 9103 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9103 9104 (face (rainbow-delimiters-depth-1-face) fontified t) 9104 9105 (face tree-sitter-hl-face:string fontified t) 9105 9129 (face tree-sitter-hl-face:string fontified t) 9129 9130 (face tree-sitter-hl-face:string fontified t) 9130 9131 (face (rainbow-delimiters-depth-1-face) fontified t) 9131 9161 (fontified t) 9161 9164 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9164 9165 (fontified t) 9165 9166 (face tree-sitter-hl-face:operator fontified t) 9166 9167 (fontified t) 9167 9171 (face tree-sitter-hl-face:keyword fontified t) 9171 9172 (fontified t) 9172 9175 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9175 9176 (face (rainbow-delimiters-depth-1-face) fontified t) 9176 9181 (fontified t) 9181 9183 (fontified t) 9183 9188 (fontified t) 9188 9189 (face (rainbow-delimiters-depth-1-face) fontified t) 9189 9190 (fontified t) 9190 9191 (face tree-sitter-hl-face:operator fontified t) 9191 9192 (fontified t) 9192 9195 (face tree-sitter-hl-face:constructor fontified t) 9195 9196 (fontified t) 9196 9197 (face tree-sitter-hl-face:operator fontified t) 9197 9198 (fontified t) 9198 9203 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9203 9204 (face (rainbow-delimiters-depth-1-face) fontified t) 9204 9206 (face tree-sitter-hl-face:constructor fontified t) 9206 9207 (face (rainbow-delimiters-depth-1-face) fontified t) 9207 9233 (fontified t) 9233 9235 (face tree-sitter-hl-face:keyword fontified t) 9235 9236 (fontified t) 9236 9240 (face tree-sitter-hl-face:keyword fontified t) 9240 9241 (fontified t) 9241 9246 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9246 9247 (face (rainbow-delimiters-depth-1-face) fontified t) 9247 9252 (fontified t) 9252 9254 (fontified t) 9254 9259 (fontified t) 9259 9260 (face (rainbow-delimiters-depth-1-face) fontified t) 9260 9261 (fontified t) 9261 9262 (face tree-sitter-hl-face:operator fontified t) 9262 9263 (fontified t) 9263 9266 (face tree-sitter-hl-face:number fontified t) 9266 9274 (fontified t) 9274 9275 (fontified t) 9275 9284 (fontified t) 9284 9286 (face tree-sitter-hl-face:keyword fontified t) 9286 9287 (fontified t) 9287 9291 (face tree-sitter-hl-face:keyword fontified t) 9291 9292 (fontified t) 9292 9295 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9295 9299 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9299 9301 (fontified t) 9301 9321 (fontified t) 9321 9326 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9326 9327 (face (rainbow-delimiters-depth-1-face) fontified t) 9327 9328 (face tree-sitter-hl-face:string fontified t) 9328 9353 (face tree-sitter-hl-face:string fontified t) 9353 9354 (face tree-sitter-hl-face:string fontified t) 9354 9356 (fontified t) 9356 9360 (face tree-sitter-hl-face:keyword fontified t) 9360 9361 (fontified t) 9361 9366 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9366 9367 (face (rainbow-delimiters-depth-2-face) fontified t) 9367 9372 (fontified t) 9372 9374 (fontified t) 9374 9379 (fontified t) 9379 9380 (face (rainbow-delimiters-depth-2-face) fontified t) 9380 9381 (face (rainbow-delimiters-depth-1-face) fontified t) 9381 9382 (fontified t) 9382 9399 (fontified t) 9399 9415 (fontified t) 9415 9418 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9418 9419 (fontified t) 9419 9420 (face tree-sitter-hl-face:operator fontified t) 9420 9427 (fontified t) 9427 9433 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9433 9434 (face (rainbow-delimiters-depth-1-face) fontified t) 9434 9435 (face tree-sitter-hl-face:number fontified t) 9435 9437 (fontified t) 9437 9441 (face tree-sitter-hl-face:keyword fontified t) 9441 9442 (fontified t) 9442 9447 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9447 9448 (face (rainbow-delimiters-depth-2-face) fontified t) 9448 9453 (fontified t) 9453 9455 (fontified t) 9455 9460 (fontified t) 9460 9461 (face (rainbow-delimiters-depth-2-face) fontified t) 9461 9462 (fontified t) 9462 9463 (fontified t) 9463 9498 (fontified t) 9498 9502 (face tree-sitter-hl-face:label fontified t) 9502 9503 (face tree-sitter-hl-face:operator fontified t) 9503 9504 (face (rainbow-delimiters-depth-2-face) fontified t) 9504 9506 (face tree-sitter-hl-face:constructor fontified t) 9506 9508 (fontified t) 9508 9510 (face tree-sitter-hl-face:constructor fontified t) 9510 9511 (face (rainbow-delimiters-depth-2-face) fontified t) 9511 9512 (fontified t) 9512 9513 (fontified t) 9513 9518 (face tree-sitter-hl-face:label fontified t) 9518 9519 (face tree-sitter-hl-face:operator fontified t) 9519 9523 (face tree-sitter-hl-face:keyword fontified t) 9523 9524 (fontified t) 9524 9529 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9529 9530 (fontified t) 9530 9531 (fontified t) 9531 9537 (face tree-sitter-hl-face:label fontified t) 9537 9538 (face tree-sitter-hl-face:operator fontified t) 9538 9542 (face tree-sitter-hl-face:keyword fontified t) 9542 9543 (fontified t) 9543 9549 (face tree-sitter-hl-face:property fontified t) 9549 9550 (face (rainbow-delimiters-depth-1-face) fontified t) 9550 9551 (fontified t) 9551 9567 (fontified t) 9567 9570 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9570 9571 (fontified t) 9571 9572 (face tree-sitter-hl-face:operator fontified t) 9572 9573 (fontified t) 9573 9576 (face tree-sitter-hl-face:constructor fontified t) 9576 9577 (fontified t) 9577 9578 (face tree-sitter-hl-face:operator fontified t) 9578 9579 (fontified t) 9579 9582 (face tree-sitter-hl-face:constructor fontified t) 9582 9583 (fontified t) 9583 9584 (face tree-sitter-hl-face:operator fontified t) 9584 9585 (fontified t) 9585 9590 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9590 9591 (face (rainbow-delimiters-depth-1-face) fontified t) 9591 9593 (face tree-sitter-hl-face:constructor fontified t) 9593 9594 (face (rainbow-delimiters-depth-1-face) fontified t) 9594 9620 (fontified t) 9620 9622 (face tree-sitter-hl-face:keyword fontified t) 9622 9623 (fontified t) 9623 9627 (face tree-sitter-hl-face:keyword fontified t) 9627 9628 (fontified t) 9628 9635 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9635 9649 (fontified t) 9649 9651 (face tree-sitter-hl-face:keyword fontified t) 9651 9652 (fontified t) 9652 9653 (face tree-sitter-hl-face:string fontified t) 9653 9656 (face tree-sitter-hl-face:string fontified t) 9656 9657 (face tree-sitter-hl-face:string fontified t) 9657 9658 (fontified t) 9658 9660 (face tree-sitter-hl-face:operator fontified t) 9660 9661 (fontified t) 9661 9665 (face tree-sitter-hl-face:keyword fontified t) 9665 9666 (fontified t) 9666 9675 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9675 9676 (face (rainbow-delimiters-depth-1-face) fontified t) 9676 9681 (fontified t) 9681 9683 (fontified t) 9683 9688 (fontified t) 9688 9689 (face (rainbow-delimiters-depth-1-face) fontified t) 9689 9707 (fontified t) 9707 9708 (face tree-sitter-hl-face:keyword fontified t) 9708 9709 (face tree-sitter-hl-face:keyword fontified t) 9709 9710 (fontified t) 9710 9711 (face tree-sitter-hl-face:string fontified t) 9711 9715 (face tree-sitter-hl-face:string fontified t) 9715 9716 (face tree-sitter-hl-face:string fontified t) 9716 9717 (fontified t) 9717 9719 (face tree-sitter-hl-face:operator fontified t) 9719 9720 (fontified t) 9720 9724 (face tree-sitter-hl-face:keyword fontified t) 9724 9725 (fontified t) 9725 9734 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9734 9735 (face (rainbow-delimiters-depth-1-face) fontified t) 9735 9740 (fontified t) 9740 9742 (fontified t) 9742 9747 (fontified t) 9747 9748 (face (rainbow-delimiters-depth-1-face) fontified t) 9748 9770 (fontified t) 9770 9775 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9775 9776 (face (rainbow-delimiters-depth-1-face) fontified t) 9776 9777 (face tree-sitter-hl-face:string fontified t) 9777 9815 (face tree-sitter-hl-face:string fontified t) 9815 9816 (face tree-sitter-hl-face:string fontified t) 9816 9817 (fontified t) 9817 9818 (face tree-sitter-hl-face:operator fontified t) 9818 9819 (fontified t) 9819 9823 (face tree-sitter-hl-face:keyword fontified t) 9823 9824 (fontified t) 9824 9829 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9829 9830 (face (rainbow-delimiters-depth-2-face) fontified t) 9830 9835 (fontified t) 9835 9837 (fontified t) 9837 9842 (fontified t) 9842 9843 (face (rainbow-delimiters-depth-2-face) fontified t) 9843 9844 (fontified t) 9844 9847 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9847 9848 (face (rainbow-delimiters-depth-2-face) fontified t) 9848 9849 (face (rainbow-delimiters-depth-2-face) fontified t) 9849 9850 (fontified t) 9850 9856 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9856 9857 (face (rainbow-delimiters-depth-2-face) fontified t) 9857 9858 (face (rainbow-delimiters-depth-2-face) fontified t) 9858 9859 (fontified t) 9859 9864 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9864 9865 (face (rainbow-delimiters-depth-2-face) fontified t) 9865 9866 (face (rainbow-delimiters-depth-2-face) fontified t) 9866 9867 (face (rainbow-delimiters-depth-1-face) fontified t) 9867 9884 (fontified t) 9884 9888 (face tree-sitter-hl-face:keyword fontified t) 9888 9910 (fontified t) 9910 9915 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9915 9916 (face (rainbow-delimiters-depth-1-face) fontified t) 9916 9917 (face tree-sitter-hl-face:string fontified t) 9917 9952 (face tree-sitter-hl-face:string fontified t) 9952 9953 (face tree-sitter-hl-face:string fontified t) 9953 9955 (fontified t) 9955 9959 (face tree-sitter-hl-face:keyword fontified t) 9959 9960 (fontified t) 9960 9965 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9965 9966 (face (rainbow-delimiters-depth-2-face) fontified t) 9966 9971 (fontified t) 9971 9973 (fontified t) 9973 9978 (fontified t) 9978 9979 (face (rainbow-delimiters-depth-2-face) fontified t) 9979 9980 (face (rainbow-delimiters-depth-1-face) fontified t) 9980 9993 (fontified t) 9993 9997 (face tree-sitter-hl-face:keyword fontified t) 9997 9998 (fontified t) 9998 9999 (face tree-sitter-hl-face:string fontified t) 9999 10001 (face tree-sitter-hl-face:string fontified t) 10001 10002 (face tree-sitter-hl-face:string fontified t) 10002 10003 (fontified t) 10003 10005 (face tree-sitter-hl-face:operator fontified t) 10005 10006 (fontified t) 10006 10010 (face tree-sitter-hl-face:keyword fontified t) 10010 10011 (fontified t) 10011 10020 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10020 10021 (face (rainbow-delimiters-depth-1-face) fontified t) 10021 10026 (fontified t) 10026 10028 (fontified t) 10028 10033 (fontified t) 10033 10034 (face (rainbow-delimiters-depth-1-face) fontified t) 10034 10052 (fontified t) 10052 10057 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10057 10058 (face (rainbow-delimiters-depth-1-face) fontified t) 10058 10059 (face tree-sitter-hl-face:string fontified t) 10059 10099 (face tree-sitter-hl-face:string fontified t) 10099 10100 (face tree-sitter-hl-face:string fontified t) 10100 10101 (fontified t) 10101 10102 (face tree-sitter-hl-face:operator fontified t) 10102 10103 (fontified t) 10103 10107 (face tree-sitter-hl-face:keyword fontified t) 10107 10108 (fontified t) 10108 10113 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10113 10114 (face (rainbow-delimiters-depth-2-face) fontified t) 10114 10119 (fontified t) 10119 10121 (fontified t) 10121 10126 (fontified t) 10126 10127 (face (rainbow-delimiters-depth-2-face) fontified t) 10127 10128 (fontified t) 10128 10131 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10131 10132 (face (rainbow-delimiters-depth-2-face) fontified t) 10132 10133 (face (rainbow-delimiters-depth-2-face) fontified t) 10133 10134 (fontified t) 10134 10140 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10140 10141 (face (rainbow-delimiters-depth-2-face) fontified t) 10141 10142 (face (rainbow-delimiters-depth-2-face) fontified t) 10142 10143 (fontified t) 10143 10148 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10148 10149 (face (rainbow-delimiters-depth-2-face) fontified t) 10149 10150 (face (rainbow-delimiters-depth-2-face) fontified t) 10150 10151 (face (rainbow-delimiters-depth-1-face) fontified t) 10151 10177 (fontified t) 10177 10183 (face tree-sitter-hl-face:keyword fontified t) 10183 10184 (fontified t) 10184 10187 (face tree-sitter-hl-face:constructor fontified t) 10187 10188 (fontified t) 10188 10189 (fontified t) 10189 10193 (fontified t) 10193 10196 (face tree-sitter-hl-face:keyword fontified t) 10196 10197 (fontified t) 10197 10206 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 10206 10207 (face (rainbow-delimiters-depth-1-face) fontified t) 10207 10211 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 10211 10212 (face (rainbow-delimiters-depth-1-face) fontified t) 10212 10222 (fontified t) 10222 10226 (face tree-sitter-hl-face:keyword fontified t) 10226 10227 (fontified t) 10227 10229 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10229 10230 (fontified t) 10230 10231 (face tree-sitter-hl-face:operator fontified t) 10231 10232 (fontified t) 10232 10233 (face (rainbow-delimiters-depth-1-face) fontified t) 10233 10234 (face (rainbow-delimiters-depth-1-face) fontified t) 10234 10240 (fontified t) 10240 10241 (fontified t) 10241 10242 (fontified t) 10242 10243 (fontified t) 10243 10247 (face tree-sitter-hl-face:keyword fontified t) 10247 10248 (fontified t) 10248 10250 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10250 10251 (fontified t) 10251 10252 (face tree-sitter-hl-face:operator fontified t) 10252 10253 (fontified t) 10253 10254 (face (rainbow-delimiters-depth-1-face) fontified t) 10254 10255 (face (rainbow-delimiters-depth-1-face) fontified t) 10255 10265 (fontified t) 10265 10267 (face tree-sitter-hl-face:keyword fontified t) 10267 10268 (fontified t) 10268 10269 (face tree-sitter-hl-face:string fontified t) 10269 10276 (face tree-sitter-hl-face:string fontified t) 10276 10277 (face tree-sitter-hl-face:string fontified t) 10277 10278 (fontified t) 10278 10280 (face tree-sitter-hl-face:operator fontified t) 10280 10281 (fontified t) 10281 10285 (face tree-sitter-hl-face:keyword fontified t) 10285 10286 (fontified t) 10286 10298 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10298 10312 (fontified t) 10312 10316 (face tree-sitter-hl-face:keyword fontified t) 10316 10317 (fontified t) 10317 10318 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10318 10319 (fontified t) 10319 10320 (face tree-sitter-hl-face:operator fontified t) 10320 10321 (fontified t) 10321 10324 (face tree-sitter-hl-face:number fontified t) 10324 10342 (fontified t) 10342 10345 (face tree-sitter-hl-face:keyword fontified t) 10345 10346 (fontified t) 10346 10351 (face tree-sitter-hl-face:variable fontified t) 10351 10352 (fontified t) 10352 10354 (face tree-sitter-hl-face:operator fontified t) 10354 10355 (fontified t) 10355 10360 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10360 10361 (face (rainbow-delimiters-depth-1-face) fontified t) 10361 10365 (face tree-sitter-hl-face:keyword fontified t) 10365 10366 (fontified t) 10366 10371 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10371 10372 (face (rainbow-delimiters-depth-1-face) fontified t) 10372 10386 (fontified t) 10386 10390 (face tree-sitter-hl-face:keyword fontified t) 10390 10391 (fontified t) 10391 10393 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10393 10394 (fontified t) 10394 10400 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10400 10401 (face (rainbow-delimiters-depth-1-face) fontified t) 10401 10404 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10404 10405 (face (rainbow-delimiters-depth-2-face) fontified t) 10405 10409 (face tree-sitter-hl-face:keyword fontified t) 10409 10410 (fontified t) 10410 10418 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10418 10419 (fontified t) 10419 10420 (face tree-sitter-hl-face:operator fontified t) 10420 10421 (fontified t) 10421 10425 (face tree-sitter-hl-face:keyword fontified t) 10425 10426 (fontified t) 10426 10430 (face tree-sitter-hl-face:property fontified t) 10430 10431 (face (rainbow-delimiters-depth-3-face) fontified t) 10431 10436 (fontified t) 10436 10437 (face (rainbow-delimiters-depth-3-face) fontified t) 10437 10438 (face (rainbow-delimiters-depth-2-face) fontified t) 10438 10439 (face (rainbow-delimiters-depth-1-face) fontified t) 10439 10452 (fontified t) 10452 10456 (face tree-sitter-hl-face:keyword fontified t) 10456 10457 (fontified t) 10457 10459 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10459 10460 (fontified t) 10460 10466 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10466 10467 (face (rainbow-delimiters-depth-1-face) fontified t) 10467 10471 (face tree-sitter-hl-face:keyword fontified t) 10471 10472 (fontified t) 10472 10473 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10473 10474 (fontified t) 10474 10475 (face tree-sitter-hl-face:operator fontified t) 10475 10476 (fontified t) 10476 10480 (face tree-sitter-hl-face:keyword fontified t) 10480 10481 (fontified t) 10481 10485 (face tree-sitter-hl-face:property fontified t) 10485 10486 (face (rainbow-delimiters-depth-2-face) fontified t) 10486 10491 (fontified t) 10491 10492 (face (rainbow-delimiters-depth-2-face) fontified t) 10492 10493 (face (rainbow-delimiters-depth-1-face) fontified t) 10493 10506 (fontified t) 10506 10509 (face tree-sitter-hl-face:comment fontified t) 10509 10530 (face tree-sitter-hl-face:comment) 10548 10552 (face tree-sitter-hl-face:keyword) 10553 10555 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10556 10557 (face tree-sitter-hl-face:operator) 10564 10570 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 10570 10571 (face (rainbow-delimiters-depth-1-face)) 10571 10575 (face tree-sitter-hl-face:keyword) 10576 10578 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10580 10585 (face tree-sitter-hl-face:label) 10585 10586 (face tree-sitter-hl-face:operator) 10592 10595 (face tree-sitter-hl-face:property) 10597 10603 (face tree-sitter-hl-face:label) 10603 10604 (face tree-sitter-hl-face:operator) 10604 10608 (face tree-sitter-hl-face:keyword) 10609 10615 (face tree-sitter-hl-face:property) 10615 10616 (face (rainbow-delimiters-depth-1-face)) 10625 10629 (face tree-sitter-hl-face:keyword) 10630 10632 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10633 10634 (face tree-sitter-hl-face:operator) 10641 10647 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 10647 10648 (face (rainbow-delimiters-depth-1-face)) 10648 10652 (face tree-sitter-hl-face:keyword) 10653 10655 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10657 10662 (face tree-sitter-hl-face:label) 10662 10663 (face tree-sitter-hl-face:operator) 10663 10667 (face tree-sitter-hl-face:keyword) 10668 10673 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10675 10681 (face tree-sitter-hl-face:label) 10681 10682 (face tree-sitter-hl-face:operator) 10682 10686 (face tree-sitter-hl-face:keyword) 10687 10693 (face tree-sitter-hl-face:property) 10693 10694 (face (rainbow-delimiters-depth-1-face)) 10703 10707 (face tree-sitter-hl-face:keyword) 10708 10714 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 10715 10716 (face tree-sitter-hl-face:operator) 10723 10726 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 10726 10727 (face (rainbow-delimiters-depth-1-face)) 10727 10728 (face (rainbow-delimiters-depth-2-face)) 10734 10740 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 10740 10741 (face (rainbow-delimiters-depth-3-face)) 10741 10742 (face (rainbow-delimiters-depth-4-face)) 10742 10743 (face tree-sitter-hl-face:number) 10743 10744 (face (rainbow-delimiters-depth-4-face)) 10746 10752 (face tree-sitter-hl-face:label) 10752 10753 (face tree-sitter-hl-face:operator) 10753 10757 (face tree-sitter-hl-face:keyword) 10758 10764 (face tree-sitter-hl-face:property) 10764 10765 (face (rainbow-delimiters-depth-3-face)) 10773 10779 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 10779 10780 (face (rainbow-delimiters-depth-3-face)) 10780 10784 (face tree-sitter-hl-face:keyword) 10785 10787 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10789 10792 (face tree-sitter-hl-face:label) 10792 10793 (face tree-sitter-hl-face:operator) 10793 10794 (face tree-sitter-hl-face:number) 10794 10795 (face (rainbow-delimiters-depth-3-face)) 10795 10796 (face (rainbow-delimiters-depth-2-face)) 10796 10797 (face (rainbow-delimiters-depth-1-face)) 10815 10817 (face tree-sitter-hl-face:keyword) 10818 10822 (face tree-sitter-hl-face:keyword) 10823 10830 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10844 10849 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 10849 10850 (face (rainbow-delimiters-depth-1-face)) 10850 10851 (face tree-sitter-hl-face:string) 10851 10853 (face tree-sitter-hl-face:string) 10853 10854 (face tree-sitter-hl-face:string) 10856 10860 (face tree-sitter-hl-face:keyword) 10861 10863 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10865 10866 (face tree-sitter-hl-face:string) 10866 10868 (face tree-sitter-hl-face:string) 10868 10869 (face tree-sitter-hl-face:string) 10871 10875 (face tree-sitter-hl-face:keyword) 10876 10878 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10880 10881 (face tree-sitter-hl-face:string) 10881 10887 (face tree-sitter-hl-face:string) 10887 10888 (face tree-sitter-hl-face:string) 10890 10894 (face tree-sitter-hl-face:keyword) 10895 10899 (face tree-sitter-hl-face:property) 10899 10901 (face tree-sitter-hl-face:property) 10901 10902 (face (rainbow-delimiters-depth-1-face)) 10912 10916 (face tree-sitter-hl-face:keyword) 10917 10920 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10921 10922 (face tree-sitter-hl-face:operator) 10929 10935 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 10935 10936 (face (rainbow-delimiters-depth-1-face)) 10936 10940 (face tree-sitter-hl-face:keyword) 10941 10944 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10946 10951 (face tree-sitter-hl-face:label) 10951 10952 (face tree-sitter-hl-face:operator) 10952 10956 (face tree-sitter-hl-face:keyword) 10957 10962 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 10964 10970 (face tree-sitter-hl-face:label) 10970 10971 (face tree-sitter-hl-face:operator) 10971 10975 (face tree-sitter-hl-face:keyword) 10976 10982 (face tree-sitter-hl-face:property) 10982 10983 (face (rainbow-delimiters-depth-1-face)) 11001 11005 (face tree-sitter-hl-face:keyword) 11006 11016 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11017 11018 (face tree-sitter-hl-face:operator) 11025 11029 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 11029 11030 (face (rainbow-delimiters-depth-1-face)) 11030 11034 (face tree-sitter-hl-face:keyword) 11035 11043 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11045 11050 (face tree-sitter-hl-face:label) 11050 11051 (face tree-sitter-hl-face:operator) 11051 11055 (face tree-sitter-hl-face:keyword) 11056 11061 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11063 11069 (face tree-sitter-hl-face:label) 11069 11070 (face tree-sitter-hl-face:operator) 11070 11074 (face tree-sitter-hl-face:keyword) 11075 11081 (face tree-sitter-hl-face:property) 11081 11082 (face (rainbow-delimiters-depth-1-face)) 11091 11095 (face tree-sitter-hl-face:keyword) 11096 11102 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11103 11104 (face tree-sitter-hl-face:operator) 11111 11115 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 11115 11116 (face (rainbow-delimiters-depth-1-face)) 11116 11120 (face tree-sitter-hl-face:keyword) 11121 11129 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11131 11136 (face tree-sitter-hl-face:label) 11136 11137 (face tree-sitter-hl-face:operator) 11137 11141 (face tree-sitter-hl-face:keyword) 11142 11147 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11149 11155 (face tree-sitter-hl-face:label) 11155 11156 (face tree-sitter-hl-face:operator) 11156 11160 (face tree-sitter-hl-face:keyword) 11161 11167 (face tree-sitter-hl-face:property) 11167 11168 (face (rainbow-delimiters-depth-1-face)) 11186 11189 (face tree-sitter-hl-face:keyword) 11190 11195 (face tree-sitter-hl-face:variable) 11196 11198 (face tree-sitter-hl-face:operator) 11199 11204 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 11204 11205 (face (rainbow-delimiters-depth-1-face)) 11205 11209 (face tree-sitter-hl-face:keyword) 11210 11215 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11215 11216 (face (rainbow-delimiters-depth-1-face)) 11230 11234 (face tree-sitter-hl-face:keyword) 11235 11245 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11245 11246 (face (rainbow-delimiters-depth-1-face)) 11246 11250 (face tree-sitter-hl-face:keyword) 11251 11257 (face tree-sitter-hl-face:property) 11257 11258 (face (rainbow-delimiters-depth-2-face)) 11263 11264 (face (rainbow-delimiters-depth-2-face)) 11267 11271 (face tree-sitter-hl-face:keyword) 11272 11278 (face tree-sitter-hl-face:property) 11278 11279 (face (rainbow-delimiters-depth-2-face)) 11285 11286 (face tree-sitter-hl-face:operator) 11287 11288 (face tree-sitter-hl-face:number) 11288 11289 (face (rainbow-delimiters-depth-2-face)) 11289 11290 (face (rainbow-delimiters-depth-1-face)) 11291 11292 (face tree-sitter-hl-face:operator) 11299 11302 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 11302 11303 (face (rainbow-delimiters-depth-1-face)) 11303 11304 (face tree-sitter-hl-face:operator) 11304 11308 (face tree-sitter-hl-face:keyword) 11309 11311 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11312 11313 (face tree-sitter-hl-face:operator) 11314 11318 (face tree-sitter-hl-face:keyword) 11319 11322 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11322 11323 (face (rainbow-delimiters-depth-2-face)) 11328 11329 (face (rainbow-delimiters-depth-2-face)) 11329 11330 (face (rainbow-delimiters-depth-1-face)) 11343 11347 (face tree-sitter-hl-face:keyword) 11348 11354 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11354 11355 (face (rainbow-delimiters-depth-1-face)) 11355 11359 (face tree-sitter-hl-face:keyword) 11360 11366 (face tree-sitter-hl-face:property) 11366 11367 (face (rainbow-delimiters-depth-2-face)) 11372 11373 (face (rainbow-delimiters-depth-2-face)) 11376 11380 (face tree-sitter-hl-face:keyword) 11381 11387 (face tree-sitter-hl-face:property) 11387 11388 (face (rainbow-delimiters-depth-2-face)) 11394 11395 (face tree-sitter-hl-face:operator) 11396 11397 (face tree-sitter-hl-face:number) 11397 11398 (face (rainbow-delimiters-depth-2-face)) 11398 11399 (face (rainbow-delimiters-depth-1-face)) 11400 11401 (face tree-sitter-hl-face:operator) 11402 11406 (face tree-sitter-hl-face:keyword) 11407 11409 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11410 11411 (face tree-sitter-hl-face:operator) 11412 11416 (face tree-sitter-hl-face:keyword) 11417 11420 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11420 11421 (face (rainbow-delimiters-depth-1-face)) 11426 11427 (face (rainbow-delimiters-depth-1-face)) 11445 11467 (face tree-sitter-hl-face:comment) 11476 11494 (face tree-sitter-hl-face:comment) 11512 11545 (face tree-sitter-hl-face:comment) 11554 11618 (face tree-sitter-hl-face:comment) 11627 11678 (face tree-sitter-hl-face:comment) 11696 11740 (face tree-sitter-hl-face:comment) 11740 11741 (face tree-sitter-hl-face:comment) 11741 11742 (face tree-sitter-hl-face:comment) 11742 11775 (face tree-sitter-hl-face:comment) 11784 11871 (face tree-sitter-hl-face:comment) 11890 11892 (face tree-sitter-hl-face:keyword) 11893 11897 (face tree-sitter-hl-face:keyword) 11898 11905 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11919 11924 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 11924 11925 (face (rainbow-delimiters-depth-1-face)) 11925 11926 (face tree-sitter-hl-face:string) 11926 11928 (face tree-sitter-hl-face:string) 11928 11929 (face tree-sitter-hl-face:string) 11931 11935 (face tree-sitter-hl-face:keyword) 11936 11938 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11940 11941 (face tree-sitter-hl-face:string) 11941 11944 (face tree-sitter-hl-face:string) 11944 11945 (face tree-sitter-hl-face:string) 11947 11951 (face tree-sitter-hl-face:keyword) 11952 11955 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 11955 11956 (face (rainbow-delimiters-depth-1-face)) 11974 11992 (face tree-sitter-hl-face:comment) 12001 12066 (face tree-sitter-hl-face:comment) 12084 12088 (face tree-sitter-hl-face:keyword) 12089 12098 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12099 12100 (face tree-sitter-hl-face:operator) 12104 12109 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12109 12110 (face (rainbow-delimiters-depth-1-face)) 12110 12114 (face tree-sitter-hl-face:keyword) 12115 12124 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12124 12125 (face (rainbow-delimiters-depth-1-face)) 12126 12133 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12133 12134 (face (rainbow-delimiters-depth-1-face)) 12134 12138 (face tree-sitter-hl-face:keyword) 12139 12144 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12146 12150 (face tree-sitter-hl-face:keyword) 12151 12156 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12156 12157 (face (rainbow-delimiters-depth-1-face)) 12166 12170 (face tree-sitter-hl-face:keyword) 12171 12174 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12174 12176 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12177 12178 (face tree-sitter-hl-face:operator) 12185 12191 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12191 12192 (face (rainbow-delimiters-depth-1-face)) 12192 12196 (face tree-sitter-hl-face:keyword) 12197 12202 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12204 12209 (face tree-sitter-hl-face:label) 12209 12210 (face tree-sitter-hl-face:operator) 12210 12214 (face tree-sitter-hl-face:keyword) 12215 12220 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12222 12228 (face tree-sitter-hl-face:label) 12228 12229 (face tree-sitter-hl-face:operator) 12229 12233 (face tree-sitter-hl-face:keyword) 12234 12240 (face tree-sitter-hl-face:property) 12240 12241 (face (rainbow-delimiters-depth-1-face)) 12242 12246 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12246 12247 (face (rainbow-delimiters-depth-1-face)) 12247 12251 (face tree-sitter-hl-face:keyword) 12252 12257 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12259 12263 (face tree-sitter-hl-face:keyword) 12264 12269 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12269 12270 (face (rainbow-delimiters-depth-1-face)) 12279 12283 (face tree-sitter-hl-face:keyword) 12284 12289 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12290 12291 (face tree-sitter-hl-face:operator) 12298 12304 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12304 12305 (face (rainbow-delimiters-depth-1-face)) 12305 12309 (face tree-sitter-hl-face:keyword) 12310 12315 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12317 12322 (face tree-sitter-hl-face:label) 12322 12323 (face tree-sitter-hl-face:operator) 12323 12327 (face tree-sitter-hl-face:keyword) 12328 12333 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12335 12341 (face tree-sitter-hl-face:label) 12341 12342 (face tree-sitter-hl-face:operator) 12342 12346 (face tree-sitter-hl-face:keyword) 12347 12353 (face tree-sitter-hl-face:property) 12353 12354 (face (rainbow-delimiters-depth-1-face)) 12355 12359 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12359 12360 (face (rainbow-delimiters-depth-1-face)) 12360 12364 (face tree-sitter-hl-face:keyword) 12365 12370 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12372 12376 (face tree-sitter-hl-face:keyword) 12377 12382 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12382 12383 (face (rainbow-delimiters-depth-1-face)) 12392 12396 (face tree-sitter-hl-face:keyword) 12397 12402 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12403 12404 (face tree-sitter-hl-face:operator) 12411 12417 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12417 12418 (face (rainbow-delimiters-depth-1-face)) 12418 12422 (face tree-sitter-hl-face:keyword) 12423 12428 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12429 12430 (face tree-sitter-hl-face:operator) 12437 12439 (face tree-sitter-hl-face:property) 12440 12441 (face tree-sitter-hl-face:operator) 12442 12447 (face tree-sitter-hl-face:number) 12449 12454 (face tree-sitter-hl-face:label) 12454 12455 (face tree-sitter-hl-face:operator) 12455 12459 (face tree-sitter-hl-face:keyword) 12460 12465 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12467 12473 (face tree-sitter-hl-face:label) 12473 12474 (face tree-sitter-hl-face:operator) 12474 12478 (face tree-sitter-hl-face:keyword) 12479 12485 (face tree-sitter-hl-face:property) 12485 12486 (face (rainbow-delimiters-depth-1-face)) 12504 12522 (face tree-sitter-hl-face:comment) 12531 12558 (face tree-sitter-hl-face:comment) 12567 12590 (face tree-sitter-hl-face:comment) 12599 12622 (face tree-sitter-hl-face:comment) 12631 12654 (face tree-sitter-hl-face:comment) 12661 12664 (face tree-sitter-hl-face:keyword) 12665 12675 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 12675 12676 (face (rainbow-delimiters-depth-1-face)) 12676 12680 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 12680 12681 (face (rainbow-delimiters-depth-1-face)) 12692 12723 (face tree-sitter-hl-face:comment) 12732 12734 (face tree-sitter-hl-face:keyword) 12735 12739 (face tree-sitter-hl-face:keyword) 12740 12747 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12761 12766 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 12766 12767 (face (rainbow-delimiters-depth-1-face)) 12767 12768 (face tree-sitter-hl-face:string) 12768 12771 (face tree-sitter-hl-face:string) 12771 12772 (face tree-sitter-hl-face:string) 12774 12778 (face tree-sitter-hl-face:keyword) 12779 12782 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12782 12783 (face (rainbow-delimiters-depth-1-face)) 12805 12809 (face tree-sitter-hl-face:keyword) 12810 12813 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12814 12815 (face tree-sitter-hl-face:operator) 12822 12828 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12828 12829 (face (rainbow-delimiters-depth-1-face)) 12829 12833 (face tree-sitter-hl-face:keyword) 12834 12837 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12839 12844 (face tree-sitter-hl-face:label) 12844 12845 (face tree-sitter-hl-face:operator) 12845 12849 (face tree-sitter-hl-face:keyword) 12850 12855 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12857 12863 (face tree-sitter-hl-face:label) 12863 12864 (face tree-sitter-hl-face:operator) 12864 12868 (face tree-sitter-hl-face:keyword) 12869 12875 (face tree-sitter-hl-face:property) 12875 12876 (face (rainbow-delimiters-depth-1-face)) 12877 12884 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 12884 12885 (face (rainbow-delimiters-depth-1-face)) 12885 12889 (face tree-sitter-hl-face:keyword) 12890 12895 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12897 12901 (face tree-sitter-hl-face:keyword) 12902 12907 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12907 12908 (face (rainbow-delimiters-depth-1-face)) 12909 12910 (face tree-sitter-hl-face:operator) 12911 12915 (face tree-sitter-hl-face:keyword) 12916 12920 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12930 12933 (face tree-sitter-hl-face:keyword) 12934 12939 (face tree-sitter-hl-face:variable) 12940 12942 (face tree-sitter-hl-face:operator) 12943 12948 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 12948 12949 (face (rainbow-delimiters-depth-1-face)) 12949 12953 (face tree-sitter-hl-face:keyword) 12954 12959 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12959 12960 (face (rainbow-delimiters-depth-1-face)) 12974 12978 (face tree-sitter-hl-face:keyword) 12979 12982 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 12982 12983 (face (rainbow-delimiters-depth-1-face)) 12986 12991 (face tree-sitter-hl-face:variable) 12991 12992 (face (rainbow-delimiters-depth-1-face)) 12993 12994 (face tree-sitter-hl-face:operator) 12995 12999 (face tree-sitter-hl-face:keyword) 13000 13003 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13003 13004 (face (rainbow-delimiters-depth-1-face)) 13012 13013 (face (rainbow-delimiters-depth-1-face)) 13014 13015 (face tree-sitter-hl-face:operator) 13022 13026 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13026 13027 (face (rainbow-delimiters-depth-1-face)) 13027 13031 (face tree-sitter-hl-face:keyword) 13032 13034 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13034 13035 (face (rainbow-delimiters-depth-2-face)) 13040 13041 (face (rainbow-delimiters-depth-2-face)) 13041 13042 (face (rainbow-delimiters-depth-1-face)) 13052 13070 (face tree-sitter-hl-face:comment) 13079 13114 (face tree-sitter-hl-face:comment) 13124 13144 (face tree-sitter-hl-face:comment) 13153 13155 (face tree-sitter-hl-face:keyword) 13156 13160 (face tree-sitter-hl-face:keyword) 13161 13168 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13182 13187 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 13187 13188 (face (rainbow-delimiters-depth-1-face)) 13188 13189 (face tree-sitter-hl-face:string) 13189 13192 (face tree-sitter-hl-face:string) 13192 13193 (face tree-sitter-hl-face:string) 13195 13199 (face tree-sitter-hl-face:keyword) 13200 13203 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13203 13204 (face (rainbow-delimiters-depth-1-face)) 13222 13226 (face tree-sitter-hl-face:keyword) 13227 13230 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13231 13232 (face tree-sitter-hl-face:operator) 13239 13245 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13245 13246 (face (rainbow-delimiters-depth-1-face)) 13246 13250 (face tree-sitter-hl-face:keyword) 13251 13254 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13256 13261 (face tree-sitter-hl-face:label) 13261 13262 (face tree-sitter-hl-face:operator) 13262 13266 (face tree-sitter-hl-face:keyword) 13267 13272 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13274 13280 (face tree-sitter-hl-face:label) 13280 13281 (face tree-sitter-hl-face:operator) 13281 13285 (face tree-sitter-hl-face:keyword) 13286 13292 (face tree-sitter-hl-face:property) 13292 13293 (face (rainbow-delimiters-depth-1-face)) 13302 13306 (face tree-sitter-hl-face:keyword) 13307 13310 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13311 13312 (face tree-sitter-hl-face:operator) 13313 13317 (face tree-sitter-hl-face:keyword) 13318 13321 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13322 13323 (face tree-sitter-hl-face:operator) 13330 13334 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13334 13335 (face (rainbow-delimiters-depth-1-face)) 13335 13339 (face tree-sitter-hl-face:keyword) 13340 13342 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13342 13343 (face (rainbow-delimiters-depth-2-face)) 13343 13344 (face tree-sitter-hl-face:number) 13344 13345 (face (rainbow-delimiters-depth-2-face)) 13345 13346 (face (rainbow-delimiters-depth-1-face)) 13347 13348 (face tree-sitter-hl-face:operator) 13349 13353 (face tree-sitter-hl-face:keyword) 13354 13356 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13374 13392 (face tree-sitter-hl-face:comment) 13401 13436 (face tree-sitter-hl-face:comment) 13454 13458 (face tree-sitter-hl-face:keyword) 13459 13465 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13466 13467 (face tree-sitter-hl-face:operator) 13474 13478 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13478 13479 (face (rainbow-delimiters-depth-1-face)) 13485 13491 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13491 13492 (face (rainbow-delimiters-depth-2-face)) 13492 13496 (face tree-sitter-hl-face:keyword) 13497 13503 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13505 13510 (face tree-sitter-hl-face:label) 13510 13511 (face tree-sitter-hl-face:operator) 13511 13515 (face tree-sitter-hl-face:keyword) 13516 13521 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13523 13529 (face tree-sitter-hl-face:label) 13529 13530 (face tree-sitter-hl-face:operator) 13530 13534 (face tree-sitter-hl-face:keyword) 13535 13541 (face tree-sitter-hl-face:property) 13541 13542 (face (rainbow-delimiters-depth-2-face)) 13542 13543 (face (rainbow-delimiters-depth-1-face)) 13552 13559 (face tree-sitter-hl-face:variable) 13560 13561 (face tree-sitter-hl-face:operator) 13568 13574 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13574 13575 (face (rainbow-delimiters-depth-1-face)) 13575 13578 (face tree-sitter-hl-face:number) 13580 13585 (face tree-sitter-hl-face:label) 13585 13586 (face tree-sitter-hl-face:operator) 13586 13590 (face tree-sitter-hl-face:keyword) 13591 13596 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13598 13604 (face tree-sitter-hl-face:label) 13604 13605 (face tree-sitter-hl-face:operator) 13605 13609 (face tree-sitter-hl-face:keyword) 13610 13616 (face tree-sitter-hl-face:property) 13616 13617 (face (rainbow-delimiters-depth-1-face)) 13626 13630 (face tree-sitter-hl-face:keyword) 13631 13640 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 13641 13642 (face tree-sitter-hl-face:operator) 13643 13649 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call)) 13649 13650 (face (rainbow-delimiters-depth-1-face)) 13659 13663 (face tree-sitter-hl-face:keyword) 13664 13670 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13670 13671 (face (rainbow-delimiters-depth-2-face)) 13671 13672 (face tree-sitter-hl-face:number) 13672 13673 (face (rainbow-delimiters-depth-2-face)) 13673 13674 (face (rainbow-delimiters-depth-1-face)) 13688 13691 (face tree-sitter-hl-face:keyword) 13692 13703 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 13703 13704 (face (rainbow-delimiters-depth-1-face)) 13704 13708 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 13710 13714 (face tree-sitter-hl-face:variable.parameter) 13714 13715 (face (rainbow-delimiters-depth-1-face)) 13725 13727 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 13727 13728 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 13728 13779 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string)) 13779 13780 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 13780 13782 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 13800 13802 (face tree-sitter-hl-face:keyword) 13808 13810 (face tree-sitter-hl-face:operator) 13811 13812 (face tree-sitter-hl-face:number) 13826 13829 (face tree-sitter-hl-face:keyword) 13830 13831 (face tree-sitter-hl-face:variable) 13832 13834 (face tree-sitter-hl-face:operator) 13835 13840 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 13840 13841 (face (rainbow-delimiters-depth-1-face)) 13841 13845 (face tree-sitter-hl-face:keyword) 13846 13851 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13851 13852 (face (rainbow-delimiters-depth-1-face)) 13870 13872 (face tree-sitter-hl-face:keyword) 13873 13877 (face tree-sitter-hl-face:keyword) 13878 13889 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13889 13890 (face (rainbow-delimiters-depth-1-face)) 13891 13892 (face (rainbow-delimiters-depth-1-face)) 13914 13951 (face tree-sitter-hl-face:comment) 13972 13976 (face tree-sitter-hl-face:keyword) 13977 13980 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13981 13985 (face tree-sitter-hl-face:property) 13986 13990 (face tree-sitter-hl-face:property) 13990 13991 (face (rainbow-delimiters-depth-1-face)) 13991 13995 (face tree-sitter-hl-face:keyword) 13996 14002 (face tree-sitter-hl-face:property) 14002 14003 (face (rainbow-delimiters-depth-2-face)) 14004 14005 (face (rainbow-delimiters-depth-2-face)) 14006 14010 (face tree-sitter-hl-face:keyword) 14011 14017 (face tree-sitter-hl-face:property) 14017 14018 (face (rainbow-delimiters-depth-2-face)) 14019 14020 (face tree-sitter-hl-face:operator) 14020 14021 (face tree-sitter-hl-face:number) 14021 14022 (face (rainbow-delimiters-depth-2-face)) 14022 14023 (face (rainbow-delimiters-depth-1-face)) 14024 14029 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 14029 14030 (face (rainbow-delimiters-depth-1-face)) 14030 14033 (face tree-sitter-hl-face:number) 14033 14034 (face (rainbow-delimiters-depth-1-face)) 14051 14053 (face tree-sitter-hl-face:keyword) 14054 14058 (face tree-sitter-hl-face:keyword) 14059 14060 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14061 14063 (face tree-sitter-hl-face:operator) 14063 14064 (face tree-sitter-hl-face:number) 14065 14068 (face tree-sitter-hl-face:operator) 14069 14073 (face tree-sitter-hl-face:keyword) 14074 14085 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14085 14086 (face (rainbow-delimiters-depth-1-face)) 14087 14088 (face (rainbow-delimiters-depth-1-face)) 14110 14180 (face tree-sitter-hl-face:comment) 14201 14205 (face tree-sitter-hl-face:keyword) 14206 14209 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14210 14214 (face tree-sitter-hl-face:property) 14215 14219 (face tree-sitter-hl-face:property) 14219 14220 (face (rainbow-delimiters-depth-1-face)) 14220 14224 (face tree-sitter-hl-face:keyword) 14225 14231 (face tree-sitter-hl-face:property) 14231 14232 (face (rainbow-delimiters-depth-2-face)) 14233 14234 (face (rainbow-delimiters-depth-2-face)) 14235 14239 (face tree-sitter-hl-face:keyword) 14240 14246 (face tree-sitter-hl-face:property) 14246 14247 (face (rainbow-delimiters-depth-2-face)) 14248 14249 (face tree-sitter-hl-face:operator) 14249 14250 (face tree-sitter-hl-face:number) 14250 14251 (face (rainbow-delimiters-depth-2-face)) 14251 14252 (face (rainbow-delimiters-depth-1-face)) 14253 14258 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 14258 14259 (face (rainbow-delimiters-depth-1-face)) 14259 14263 (face tree-sitter-hl-face:keyword) 14264 14267 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14267 14268 (face (rainbow-delimiters-depth-2-face)) 14269 14270 (face (rainbow-delimiters-depth-2-face)) 14271 14272 (face tree-sitter-hl-face:operator) 14279 14283 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 14283 14284 (face (rainbow-delimiters-depth-2-face)) 14284 14288 (face tree-sitter-hl-face:keyword) 14289 14291 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14291 14292 (face (rainbow-delimiters-depth-3-face)) 14292 14293 (face tree-sitter-hl-face:number) 14293 14294 (face (rainbow-delimiters-depth-3-face)) 14294 14295 (face (rainbow-delimiters-depth-2-face)) 14295 14296 (face (rainbow-delimiters-depth-1-face)) 14314 14316 (face tree-sitter-hl-face:keyword) 14322 14324 (face tree-sitter-hl-face:operator) 14325 14329 (face tree-sitter-hl-face:keyword) 14330 14339 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14353 14356 (face tree-sitter-hl-face:keyword) 14357 14358 (face tree-sitter-hl-face:variable) 14359 14361 (face tree-sitter-hl-face:operator) 14362 14367 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 14367 14368 (face (rainbow-delimiters-depth-1-face)) 14368 14372 (face tree-sitter-hl-face:keyword) 14373 14378 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14378 14379 (face (rainbow-delimiters-depth-1-face)) 14397 14399 (face tree-sitter-hl-face:keyword) 14400 14404 (face tree-sitter-hl-face:keyword) 14405 14416 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14416 14417 (face (rainbow-delimiters-depth-1-face)) 14418 14419 (face (rainbow-delimiters-depth-1-face)) 14441 14486 (face tree-sitter-hl-face:comment) 14507 14511 (face tree-sitter-hl-face:keyword) 14512 14515 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14516 14520 (face tree-sitter-hl-face:property) 14521 14525 (face tree-sitter-hl-face:property) 14525 14526 (face (rainbow-delimiters-depth-1-face)) 14526 14530 (face tree-sitter-hl-face:keyword) 14531 14537 (face tree-sitter-hl-face:property) 14537 14538 (face (rainbow-delimiters-depth-2-face)) 14539 14540 (face (rainbow-delimiters-depth-2-face)) 14541 14545 (face tree-sitter-hl-face:keyword) 14546 14552 (face tree-sitter-hl-face:property) 14552 14553 (face (rainbow-delimiters-depth-2-face)) 14554 14555 (face tree-sitter-hl-face:operator) 14555 14556 (face tree-sitter-hl-face:number) 14556 14557 (face (rainbow-delimiters-depth-2-face)) 14557 14558 (face (rainbow-delimiters-depth-1-face)) 14559 14564 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 14564 14565 (face (rainbow-delimiters-depth-1-face)) 14565 14569 (face tree-sitter-hl-face:keyword) 14570 14573 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14573 14574 (face (rainbow-delimiters-depth-2-face)) 14575 14576 (face (rainbow-delimiters-depth-2-face)) 14576 14577 (face (rainbow-delimiters-depth-1-face)) 14595 14597 (face tree-sitter-hl-face:keyword) 14603 14605 (face tree-sitter-hl-face:operator) 14606 14610 (face tree-sitter-hl-face:keyword) 14611 14620 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14621 14624 (face tree-sitter-hl-face:operator) 14628 14631 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 14631 14632 (face (rainbow-delimiters-depth-1-face)) 14632 14636 (face tree-sitter-hl-face:keyword) 14637 14639 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14639 14641 (face tree-sitter-hl-face:operator) 14641 14642 (face tree-sitter-hl-face:number) 14642 14643 (face (rainbow-delimiters-depth-1-face)) 14657 14659 (face tree-sitter-hl-face:keyword) 14660 14664 (face tree-sitter-hl-face:keyword) 14665 14672 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14690 14695 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 14695 14696 (face (rainbow-delimiters-depth-1-face)) 14696 14697 (face tree-sitter-hl-face:string) 14697 14704 (face tree-sitter-hl-face:string) 14704 14705 (face tree-sitter-hl-face:string) 14705 14706 (face (rainbow-delimiters-depth-1-face)) 14732 14736 (face tree-sitter-hl-face:keyword) 14737 14740 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14741 14745 (face tree-sitter-hl-face:property) 14746 14750 (face tree-sitter-hl-face:property) 14750 14751 (face (rainbow-delimiters-depth-1-face)) 14751 14755 (face tree-sitter-hl-face:keyword) 14756 14762 (face tree-sitter-hl-face:property) 14762 14763 (face (rainbow-delimiters-depth-2-face)) 14763 14764 (face tree-sitter-hl-face:number) 14764 14765 (face (rainbow-delimiters-depth-2-face)) 14766 14770 (face tree-sitter-hl-face:keyword) 14771 14777 (face tree-sitter-hl-face:property) 14777 14778 (face (rainbow-delimiters-depth-2-face)) 14778 14779 (face tree-sitter-hl-face:number) 14779 14780 (face (rainbow-delimiters-depth-2-face)) 14780 14781 (face (rainbow-delimiters-depth-1-face)) 14782 14783 (face tree-sitter-hl-face:operator) 14784 14788 (face tree-sitter-hl-face:keyword) 14789 14792 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 14792 14793 (face (rainbow-delimiters-depth-1-face)) 14793 14794 (face tree-sitter-hl-face:number) 14794 14795 (face (rainbow-delimiters-depth-1-face)) 14796 14797 (face tree-sitter-hl-face:operator) 14798 14802 (face tree-sitter-hl-face:keyword) 14803 14811 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 14811 14812 (face (rainbow-delimiters-depth-1-face)) 14812 14813 (face tree-sitter-hl-face:number) 14813 14814 (face (rainbow-delimiters-depth-1-face)) 14840 14860 (face tree-sitter-hl-face:comment) 14873 14987 (face tree-sitter-hl-face:comment) 15000 15022 (face tree-sitter-hl-face:comment) 15035 15149 (face tree-sitter-hl-face:comment) 15175 15196 (face tree-sitter-hl-face:comment) 15209 15323 (face tree-sitter-hl-face:comment) 15336 15358 (face tree-sitter-hl-face:comment) 15371 15485 (face tree-sitter-hl-face:comment) 15536 15538 (face tree-sitter-hl-face:keyword) 15544 15546 (face tree-sitter-hl-face:operator) 15547 15551 (face tree-sitter-hl-face:keyword) 15552 15562 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 15563 15566 (face tree-sitter-hl-face:operator) 15570 15573 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 15573 15574 (face (rainbow-delimiters-depth-1-face)) 15574 15578 (face tree-sitter-hl-face:keyword) 15579 15581 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 15581 15583 (face tree-sitter-hl-face:operator) 15583 15584 (face tree-sitter-hl-face:number) 15584 15585 (face (rainbow-delimiters-depth-1-face)) 15599 15601 (face tree-sitter-hl-face:keyword) 15602 15606 (face tree-sitter-hl-face:keyword) 15607 15614 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 15632 15637 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 15637 15638 (face (rainbow-delimiters-depth-1-face)) 15638 15639 (face tree-sitter-hl-face:string) 15639 15647 (face tree-sitter-hl-face:string) 15647 15648 (face tree-sitter-hl-face:string) 15648 15649 (face (rainbow-delimiters-depth-1-face)) 15662 15666 (face tree-sitter-hl-face:keyword) 15667 15670 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 15671 15675 (face tree-sitter-hl-face:property) 15676 15680 (face tree-sitter-hl-face:property) 15680 15681 (face (rainbow-delimiters-depth-1-face)) 15681 15685 (face tree-sitter-hl-face:keyword) 15686 15692 (face tree-sitter-hl-face:property) 15692 15693 (face (rainbow-delimiters-depth-2-face)) 15693 15694 (face tree-sitter-hl-face:number) 15694 15695 (face (rainbow-delimiters-depth-2-face)) 15696 15700 (face tree-sitter-hl-face:keyword) 15701 15707 (face tree-sitter-hl-face:property) 15707 15708 (face (rainbow-delimiters-depth-2-face)) 15708 15709 (face tree-sitter-hl-face:number) 15709 15710 (face (rainbow-delimiters-depth-2-face)) 15710 15711 (face (rainbow-delimiters-depth-1-face)) 15712 15713 (face tree-sitter-hl-face:operator) 15714 15718 (face tree-sitter-hl-face:keyword) 15719 15722 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 15722 15723 (face (rainbow-delimiters-depth-1-face)) 15723 15724 (face tree-sitter-hl-face:number) 15724 15725 (face (rainbow-delimiters-depth-1-face)) 15739 15768 (face tree-sitter-hl-face:comment) 15781 15830 (face tree-sitter-hl-face:comment) 15844 15847 (face tree-sitter-hl-face:keyword) 15848 15856 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 15856 15857 (face (rainbow-delimiters-depth-1-face)) 15857 15861 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 15863 15868 (face tree-sitter-hl-face:variable.parameter) 15868 15869 (face (rainbow-delimiters-depth-1-face)) 15879 15881 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 15881 15882 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 15882 15896 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string)) 15896 15897 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 15897 15899 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc)) 15908 15913 (face tree-sitter-hl-face:variable) 15914 15915 (face tree-sitter-hl-face:operator) 15922 15928 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 15928 15929 (face (rainbow-delimiters-depth-1-face)) 15929 15930 (face tree-sitter-hl-face:number) 15932 15935 (face tree-sitter-hl-face:number) 15936 15937 (face tree-sitter-hl-face:operator) 15944 15946 (face tree-sitter-hl-face:property) 15948 15951 (face tree-sitter-hl-face:number) 15952 15953 (face tree-sitter-hl-face:operator) 15960 15962 (face tree-sitter-hl-face:property) 15963 15964 (face tree-sitter-hl-face:operator) 15965 15970 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 15970 15971 (face (rainbow-delimiters-depth-2-face)) 15971 15975 (face tree-sitter-hl-face:keyword) 15976 15978 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 15978 15979 (face (rainbow-delimiters-depth-3-face)) 15984 15985 (face (rainbow-delimiters-depth-3-face)) 15985 15986 (face (rainbow-delimiters-depth-2-face)) 15988 15993 (face tree-sitter-hl-face:label) 15993 15994 (face tree-sitter-hl-face:operator) 15994 15998 (face tree-sitter-hl-face:keyword) 15999 16004 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 16006 16012 (face tree-sitter-hl-face:label) 16012 16013 (face tree-sitter-hl-face:operator) 16013 16017 (face tree-sitter-hl-face:keyword) 16018 16024 (face tree-sitter-hl-face:property) 16024 16025 (face (rainbow-delimiters-depth-1-face)) 16034 16040 (face tree-sitter-hl-face:keyword) 16041 16045 (face tree-sitter-hl-face:keyword) 16046 16048 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 16048 16049 (face (rainbow-delimiters-depth-1-face)) 16054 16055 (face (rainbow-delimiters-depth-1-face)) 16056 16057 (face tree-sitter-hl-face:operator) 16058 16059 (face (rainbow-delimiters-depth-1-face)) 16059 16062 (face tree-sitter-hl-face:number) 16063 16064 (face tree-sitter-hl-face:operator) 16065 16069 (face tree-sitter-hl-face:keyword) 16070 16076 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 16077 16078 (face tree-sitter-hl-face:operator) 16085 16088 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 16088 16089 (face (rainbow-delimiters-depth-2-face)) 16095 16096 (face tree-sitter-hl-face:operator) 16097 16101 (face tree-sitter-hl-face:keyword) 16102 16106 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 16107 16108 (face tree-sitter-hl-face:operator) 16115 16117 (face tree-sitter-hl-face:property) 16118 16119 (face tree-sitter-hl-face:operator) 16120 16125 (face tree-sitter-hl-face:number) 16125 16126 (face (rainbow-delimiters-depth-2-face)) 16126 16127 (face (rainbow-delimiters-depth-1-face)) 16128 16129 (face tree-sitter-hl-face:operator) 16136 16140 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 16140 16141 (face (rainbow-delimiters-depth-1-face)) 16141 16145 (face tree-sitter-hl-face:keyword) 16146 16148 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 16148 16149 (face (rainbow-delimiters-depth-2-face)) 16149 16150 (face tree-sitter-hl-face:number) 16150 16151 (face (rainbow-delimiters-depth-2-face)) 16151 16152 (face (rainbow-delimiters-depth-1-face)) 16153 16154 (face tree-sitter-hl-face:operator) 16155 16159 (face tree-sitter-hl-face:keyword) 16160 16162 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . 1) (undo-tree-id1633 . -16163) (undo-tree-id1634 . -1210) (undo-tree-id1635 . -1210) (undo-tree-id1636 . -673) (undo-tree-id1637 . -673) (undo-tree-id1638 . -1210) (undo-tree-id1639 . -1210) (undo-tree-id1640 . -1172) (undo-tree-id1641 . -234) (undo-tree-id1642 . -192) (undo-tree-id1643 . -309) (undo-tree-id1644 . -5743) (undo-tree-id1645 . -16163) (undo-tree-id1646 . -13684) (undo-tree-id1647 . -14341) (undo-tree-id1648 . -16163) (undo-tree-id1649 . -15486) (undo-tree-id1650 . -16163) (undo-tree-id1651 . -10382) (undo-tree-id1652 . -16026) (undo-tree-id1653 . -9513) (undo-tree-id1654 . -8743) (undo-tree-id1655 . -8899) (undo-tree-id1656 . -8686) (undo-tree-id1657 . -7755) (undo-tree-id1658 . -8899) (undo-tree-id1659 . -8899) (undo-tree-id1660 . -8899) (undo-tree-id1661 . -8899) (undo-tree-id1662 . -8899) (undo-tree-id1663 . -8899) (undo-tree-id1664 . -8899) (undo-tree-id1665 . -8899) (undo-tree-id1666 . -8899) (undo-tree-id1667 . -8900) (undo-tree-id1668 . -8899) (undo-tree-id1669 . -7755) (undo-tree-id1670 . -8900) (undo-tree-id1671 . -8900) (undo-tree-id1672 . -8900) (undo-tree-id1673 . -8900) (undo-tree-id1674 . -8900) (undo-tree-id1675 . -8900) (undo-tree-id1676 . -8900) (undo-tree-id1677 . -8900) (undo-tree-id1678 . -9007) (undo-tree-id1679 . -8900) (undo-tree-id1680 . -7755) (undo-tree-id1681 . -9007) (undo-tree-id1682 . -9007) (undo-tree-id1683 . -9007) (undo-tree-id1684 . -9007) (undo-tree-id1685 . -9007) (undo-tree-id1686 . -9007) (undo-tree-id1687 . -9007) (undo-tree-id1688 . -9007) (undo-tree-id1689 . -8923) (undo-tree-id1690 . -9007) (undo-tree-id1691 . -7755) (undo-tree-id1692 . -8923) (undo-tree-id1693 . -8923) (undo-tree-id1694 . -8923) (undo-tree-id1695 . -8923) (undo-tree-id1696 . -8923) (undo-tree-id1697 . -8923) (undo-tree-id1698 . -8923) (undo-tree-id1699 . -8923) (undo-tree-id1700 . -9463) (undo-tree-id1701 . -9463) (undo-tree-id1702 . -8923) (undo-tree-id1703 . -7755) (undo-tree-id1704 . -9284) (undo-tree-id1705 . -9399) (undo-tree-id1706 . -9463) (undo-tree-id1707 . -9463) (undo-tree-id1708 . -9463) (undo-tree-id1709 . -9463) (undo-tree-id1710 . -9463) (undo-tree-id1711 . -5031) (undo-tree-id1712 . -9463) (undo-tree-id1713 . -9463) (undo-tree-id1714 . -9463) (undo-tree-id1715 . -9463) (undo-tree-id1716 . -9463)) ((1 . 16164)) (25975 7802 287976 628000) 0 nil] [nil nil ((9514 . 9549) (#(" " 0 1 (fontified nil)) . 9513) (9514 . 9515)) ((#("
" 0 1 (fontified nil)) . 9514) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (9513 . 9514) (#("                                   " 0 35 (fontified t)) . 9514)) (25975 7730 715054 255000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14911 . 14912) (nil fontified nil 1 . 14912) (1 . 14912)) nil (25975 7820 215819 229000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14891 . 14892) (nil fontified nil 1 . 14892) (1 . 14892) (t 25975 7732 626836 87000)) ((#("import os
import gc
import numpy as np

import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal

from yaml import safe_load
from time import perf_counter

from src.utils import set_seed
from src.activation import Activation
#from src.plasticity import STP_Model

import warnings
warnings.filterwarnings(\"ignore\")


class Network(nn.Module):
    def __init__(self, conf_file, sim_name, repo_root, **kwargs):
        super().__init__()

        # load parameters
        self.loadConfig(conf_file, sim_name, repo_root, **kwargs)

        # set csts
        self.initConst()

        # scale parameters
        self.scaleParam()

        # set seed for Cij
        set_seed(self.SEED)

        # in pytorch, Wij is i to j.
        self.Wab = nn.Linear(self.N_NEURON, self.N_NEURON, bias=True, dtype=self.FLOAT, device=self.device)

        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                W0 = self.initWeights(j_pop, i_pop)
                
                self.Wab.weight.data[self.csumNa[j_pop] : self.csumNa[j_pop + 1],
                                     self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = W0
        
        # Here we store the constant external input in the bias
        for i_pop in range(self.N_POP):
            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
        
        # resets the seed
        set_seed(0)


    def update_rec_input(self, rates):
        '''Dynamics of the recurrent inputs'''
        rec_input = self.Wab(rates)

        return rec_input

    def update_net_input(self, rec_input):
        '''Updating the net input into the neurons'''

        # net_input = torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)        
        noise = self.ff_normal.sample((self.N_NEURON,)).squeeze(0)
        net_input = noise + rec_input

        return net_input

    def update_rates(self, rates, net_input):
        '''Dynamics of the rates'''
        # using array slices is faster than indices
        if self.RATE_DYN:
            rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation(self.TF_TYPE, self.THRESH[0])(net_input)
        else:
            rates = Activation()(net_input)

        return rates

    def forward(self, rates):
        '''This is the main function of the class'''
        rec_input = self.update_rec_input(rates)
        net_input = self.update_net_input(rec_input)
        rates = self.update_rates(rates, net_input)

        return rates

    def print_activity(self, step, rates):

        times = np.round((step - self.N_STEADY) / self.N_STEPS * self.DURATION, 2)

        activity = []

        activity.append(np.round(torch.mean(rates[:self.csumNa[1]]).cpu().detach().numpy(), 2))

        if self.N_POP > 1:
            activity.append(np.round(torch.mean(rates[self.csumNa[1]:self.csumNa[2]]).cpu().detach().numpy(), 2))

        if self.N_POP > 2:
            activity.append(np.round(torch.mean(rates[self.csumNa[2]:]).cpu().detach().numpy(), 2))

        print(
            \"times (s)\",
            np.round(times, 2),
            \"rates (Hz)\",
            activity,
        )


    def run(self):
        # init rates
        hidden = self.initRates()

        start = perf_counter()

        self.N_STEPS = int(self.DURATION / self.DT)
        self.N_STEADY = int(self.T_STEADY / self.DT)
        self.N_WINDOW = int(self.T_WINDOW / self.DT)
        self.N_STIM_ON = int(self.T_STIM_ON / self.DT)
        self.N_STIM_OFF = int(self.T_STIM_OFF / self.DT)

        result = []
        with torch.no_grad():
            for step in range(self.N_STEPS):
                self.update_stim(step)
                hidden = self.forward(hidden)

                if step > self.N_STEADY:
                    if step % self.N_WINDOW == 0:
                        if self.VERBOSE:
                            self.print_activity(step, hidden)

                        result.append(hidden.cpu().detach().numpy())

                        
        result = np.array(result)

        # self.theta = get_theta(self.ksi[1].cpu(), self.ksi[0].cpu(), GM=1, IF_NORM=1)
        # print(self.theta.shape)

        # result = result[:, self.theta.argsort()]
        # print('result', result.shape)
        
        print('Saving rates to:', self.DATA_PATH + self.FILE_NAME + '.npy')
        np.save(self.DATA_PATH + self.FILE_NAME + '.npy', result)

        for obj in gc.get_objects():
            if torch.is_tensor(obj):
                del obj

        # Manually triggering the garbage collector afterwards
        gc.collect()
        torch.cuda.empty_cache()

        end = perf_counter()

        print(\"Elapsed (with compilation) = {}s\".format((end - start)))

        return result

    def loadConfig(self, conf_file, sim_name, repo_root, **kwargs):
        # Loading configuration file
        conf_path = repo_root + '/conf/'+ conf_file
        print('Loading config from', conf_path)
        param = safe_load(open(conf_path, \"r\"))

        param[\"FILE_NAME\"] = sim_name
        param.update(kwargs)

        for k, v in param.items():
            setattr(self, k, v)

        self.DATA_PATH = repo_root + \"/data/simul/\"
        self.MAT_PATH = repo_root + \"/data/matrix/\"

        if not os.path.exists(self.DATA_PATH):
            os.makedirs(self.DATA_PATH)

        if not os.path.exists(self.MAT_PATH):
            os.makedirs(self.MAT_PATH)

        if self.FLOAT_PRECISION == 32:
            self.FLOAT = torch.float
        else:
            self.FLOAT = torch.float64

        self.device = torch.device(self.DEVICE)

    def initRates(self):
        return torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)

    def initWeights(self, i_pop, j_pop):

        Na = self.Na[i_pop]
        Nb = self.Na[j_pop]
        Kb = self.Ka[j_pop]

        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)

        if 'lr' in self.STRUCTURE[i_pop, j_pop]:

            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)

            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)


            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T

            while torch.abs(self.ksi[0] @ self.ksi[1]) > .10:
                multivariate_normal = MultivariateNormal(mean, covariance)
                self.ksi = multivariate_normal.sample((Nb,)).T

            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', self.ksi[0] @ self.ksi[1])

            Pij = 1.0 + self.KAPPA[i_pop, j_pop] * (torch.outer(self.ksi[0], self.ksi[0])
                                                    + torch.outer(self.ksi[1], self.ksi[1])) / torch.sqrt(self.Ka[j_pop])
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0

            if self.VERBOSE:
                print('Pij', Pij.shape)

        if 'cos' in self.STRUCTURE[i_pop, j_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na), dtype=self.FLOAT, device=self.device)
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb), dtype=self.FLOAT, device=self.device)

            i, j = torch.meshgrid(torch.arange(Na, device=self.device), torch.arange(Nb, device=self.device), indexing=\"ij\")

            theta_diff = theta[i] - phi[j]

            if 'spec' in self.STRUCTURE[i_pop, j_pop]:
                self.KAPPA[i_pop, j_pop] = self.KAPPA[i_pop, j_pop] / torch.sqrt(Kb)

            Pij = 1.0 + 2.0 * self.KAPPA[i_pop, j_pop] * torch.cos(theta_diff - self.PHASE)

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')

            Cij = self.Jab[i_pop, j_pop] * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij)

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')

            Cij = self.Jab[i_pop, j_pop] * Pij / float(Nb)

            if self.SIGMA[i_pop, j_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[i_pop, j_pop])

                Hij = torch.normal(0, self.SIGMA[i_pop, j_pop], size=(Na, Nb), dtype=self.FLOAT, device=self.device)
                Cij = Cij + Hij / float(Nb)

        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[i_pop, j_pop]:
                if \"spec\" in self.STRUCTURE[i_pop, j_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[i_pop, j_pop])
            elif \"lr\" in self.STRUCTURE[i_pop, j_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())

        return Cij

    def initConst(self):
        self.Na = []
        self.Ka = []

        if 'all2all' in self.CONNECTIVITY:
            self.K = 1.0

        for i_pop in range(self.N_POP):
            self.Na.append(int(self.N_NEURON * self.frac[i_pop]))
            # self.Ka.append(self.K * const.frac[i_pop])
            self.Ka.append(self.K)

        self.Na = torch.tensor(self.Na, dtype=torch.int, device=self.device)
        self.Ka = torch.tensor(self.Ka, dtype=self.FLOAT, device=self.device)
        self.csumNa = torch.cat((torch.tensor([0]), torch.cumsum(self.Na, dim=0)))

        if self.VERBOSE:
            print(\"Na\", self.Na, \"Ka\", self.Ka, \"csumNa\", self.csumNa)

        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)

        self.EXP_DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        self.DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)

        for i_pop in range(self.N_POP):
            self.EXP_DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.exp(-self.DT / self.TAU[i_pop])
            self.DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = self.DT / self.TAU[i_pop]

        # self.EXP_DT_TAU = []
        # self.DT_TAU = []

        # for i_pop in range(self.N_POP):
        #     self.EXP_DT_TAU.append(np.exp(-self.DT / self.TAU[i_pop]))
        #     self.DT_TAU.append(self.DT / self.TAU[i_pop])

        # self.DT_TAU = torch.tensor(self.DT_TAU, dtype=self.FLOAT, device=self.device)
        # self.EXP_DT_TAU = torch.tensor(self.EXP_DT_TAU, dtype=self.FLOAT, device=self.device)


        if self.VERBOSE:
            print(\"DT\", self.DT, \"TAU\", self.TAU)

        # if self.VERBOSE:
        #     print(\"EXP_DT_TAU\", self.EXP_DT_TAU, \"DT_TAU\", self.DT_TAU)

        self.STRUCTURE = np.array(self.STRUCTURE).reshape(self.N_POP, self.N_POP)
        self.SIGMA = torch.tensor(self.SIGMA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.KAPPA = torch.tensor(self.KAPPA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.PHASE = torch.tensor(self.PHASE * torch.pi / 180.0, dtype=self.FLOAT, device=self.device)

        # if self.VERBOSE:
        #     print(self.STRUCTURE)
        #     print(self.SIGMA)
        #     print(self.KAPPA)
        #     print(self.PHASE)


    def scaleParam(self):

        # scaling recurrent weights Jab
        if self.VERBOSE:
            print(\"Jab\", self.Jab)

        self.Jab = torch.tensor(self.Jab, dtype=self.FLOAT, device=self.device).reshape(self.N_POP, self.N_POP) * self.GAIN

        for i_pop in range(self.N_POP):
            self.Jab[:, i_pop] = self.Jab[:, i_pop] / torch.sqrt(self.Ka[i_pop])

        # if self.VERBOSE:
        #     print(\"scaled Jab\", self.Jab)

        # scaling FF weights
        if self.VERBOSE:
            print(\"Ja0\", self.Ja0)

        self.Ja0 = torch.tensor(self.Ja0, dtype=self.FLOAT, device=self.device)
        self.Ja0 = self.Ja0 * torch.sqrt(self.Ka[0]) * self.M0

        # if self.VERBOSE:
        #     print(\"scaled Ja0\", self.Ja0)

        self.VAR_FF = torch.sqrt(torch.tensor(self.VAR_FF, dtype=self.FLOAT, device=self.device))
        ff_mean = torch.tensor(0.0, dtype=self.FLOAT, device=self.device)
        self.ff_normal = Normal(ff_mean, self.VAR_FF[0])

    def update_stim(self, step):
        \"\"\"Perturb the inputs based on the simulus parameters.\"\"\"
        
        if step == 0:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(0.0)
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(0.0)
                if self.K !=1 and self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
        
        if step == self.N_STIM_ON:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i])
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i])
        
        if step == self.N_STIM_ON and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM ON\")
            
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
            
            # if self.PHI0 == 0:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[0] * self.I0[0] * self.M0)
            # if self.PHI0 == 180:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[0] * self.I0[0] * self.M0)
            
            # if self.PHI0 == 90:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[1] * self.I0[0] * self.M0)
            # if self.PHI0 == 270:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[1] * self.I0[0] * self.M0)
                            
            
        if step == self.N_STIM_OFF and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM OFF\")
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0]

            # for i in range(self.N_POP):
            #     self.Wab[i, i].bias.data.fill_(self.Ja0[i])
        
    def stimFunc(self, i_pop):
        \"\"\"Stimulus shape\"\"\"
        theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(self.Na[i_pop]), dtype=self.FLOAT, device=self.device)
        return self.I0[i_pop] * (1.0 + self.SIGMA0 * torch.cos(theta - self.PHI0 * torch.pi / 180.0)) * torch.sqrt(self.Ka[0]) * self.M0
" 0 6 (face tree-sitter-hl-face:keyword fontified nil) 6 10 (fontified nil) 10 16 (face tree-sitter-hl-face:keyword fontified nil) 16 20 (fontified nil) 20 26 (face tree-sitter-hl-face:keyword fontified nil) 26 33 (fontified nil) 33 35 (face tree-sitter-hl-face:keyword fontified nil) 35 40 (fontified nil) 40 46 (face tree-sitter-hl-face:keyword fontified nil) 46 53 (fontified nil) 53 57 (face tree-sitter-hl-face:keyword fontified nil) 57 64 (fontified nil) 64 70 (face tree-sitter-hl-face:keyword fontified nil) 70 74 (fontified nil) 74 78 (face tree-sitter-hl-face:keyword fontified nil) 78 99 (fontified nil) 99 105 (face tree-sitter-hl-face:keyword fontified nil) 105 106 (fontified nil) 106 112 (face tree-sitter-hl-face:constructor fontified nil) 112 114 (fontified nil) 114 132 (face tree-sitter-hl-face:constructor fontified nil) 132 134 (fontified nil) 134 138 (face tree-sitter-hl-face:keyword fontified nil) 138 144 (fontified nil) 144 150 (face tree-sitter-hl-face:keyword fontified nil) 150 161 (fontified nil) 161 165 (face tree-sitter-hl-face:keyword fontified nil) 165 171 (fontified nil) 171 177 (face tree-sitter-hl-face:keyword fontified nil) 177 192 (fontified nil) 192 196 (face tree-sitter-hl-face:keyword fontified nil) 196 207 (fontified nil) 207 213 (face tree-sitter-hl-face:keyword fontified nil) 213 223 (fontified nil) 223 227 (face tree-sitter-hl-face:keyword fontified nil) 227 243 (fontified nil) 243 249 (face tree-sitter-hl-face:keyword fontified nil) 249 250 (fontified nil) 250 260 (face tree-sitter-hl-face:constructor fontified nil) 260 261 (fontified nil) 261 298 (face tree-sitter-hl-face:comment fontified nil) 298 300 (fontified nil) 300 306 (face tree-sitter-hl-face:keyword fontified nil) 306 325 (fontified nil) 325 339 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 339 340 (face (rainbow-delimiters-depth-1-face) fontified nil) 340 341 (face tree-sitter-hl-face:string fontified nil) 341 347 (face tree-sitter-hl-face:string fontified nil) 347 348 (face tree-sitter-hl-face:string fontified nil) 348 349 (face (rainbow-delimiters-depth-1-face) fontified nil) 349 352 (fontified nil) 352 357 (face tree-sitter-hl-face:keyword fontified nil) 357 358 (fontified nil) 358 365 (face tree-sitter-hl-face:constructor fontified nil) 365 366 (face (rainbow-delimiters-depth-1-face) fontified nil) 366 369 (fontified nil) 369 375 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 375 376 (face (rainbow-delimiters-depth-1-face) fontified nil) 376 382 (fontified nil) 382 385 (face tree-sitter-hl-face:keyword fontified nil) 385 386 (fontified nil) 386 394 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 394 395 (face (rainbow-delimiters-depth-1-face) fontified nil) 395 399 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 399 401 (fontified nil) 401 410 (face tree-sitter-hl-face:variable.parameter fontified nil) 410 412 (fontified nil) 412 420 (face tree-sitter-hl-face:variable.parameter fontified nil) 420 422 (fontified nil) 422 431 (face tree-sitter-hl-face:variable.parameter fontified nil) 431 433 (fontified nil) 433 435 (face tree-sitter-hl-face:operator fontified nil) 435 441 (face tree-sitter-hl-face:variable.parameter fontified nil) 441 442 (face (rainbow-delimiters-depth-1-face) fontified nil) 442 452 (fontified nil) 452 457 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 457 458 (face (rainbow-delimiters-depth-1-face) fontified nil) 458 459 (face (rainbow-delimiters-depth-1-face) fontified nil) 459 460 (fontified nil) 460 468 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 468 469 (face (rainbow-delimiters-depth-1-face) fontified nil) 469 470 (face (rainbow-delimiters-depth-1-face) fontified nil) 470 480 (fontified nil) 480 497 (face tree-sitter-hl-face:comment fontified nil) 497 506 (fontified nil) 506 510 (face tree-sitter-hl-face:keyword fontified nil) 510 511 (fontified nil) 511 521 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 521 522 (face (rainbow-delimiters-depth-1-face) fontified nil) 522 554 (fontified nil) 554 556 (face tree-sitter-hl-face:operator fontified nil) 556 562 (fontified nil) 562 563 (face (rainbow-delimiters-depth-1-face) fontified nil) 563 573 (fontified nil) 573 583 (face tree-sitter-hl-face:comment fontified nil) 583 592 (fontified nil) 592 596 (face tree-sitter-hl-face:keyword fontified nil) 596 597 (fontified nil) 597 606 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 606 607 (face (rainbow-delimiters-depth-1-face) fontified nil) 607 608 (face (rainbow-delimiters-depth-1-face) fontified nil) 608 618 (fontified nil) 618 636 (face tree-sitter-hl-face:comment fontified nil) 636 645 (fontified nil) 645 649 (face tree-sitter-hl-face:keyword fontified nil) 649 650 (fontified nil) 650 660 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 660 661 (face (rainbow-delimiters-depth-1-face) fontified nil) 661 662 (face (rainbow-delimiters-depth-1-face) fontified nil) 662 672 (fontified nil) 672 690 (face tree-sitter-hl-face:comment fontified nil) 690 699 (fontified nil) 699 707 (face tree-sitter-hl-face:function.call fontified nil) 707 708 (face (rainbow-delimiters-depth-1-face) fontified nil) 708 712 (face tree-sitter-hl-face:keyword fontified nil) 712 713 (fontified nil) 713 717 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 717 718 (face (rainbow-delimiters-depth-1-face) fontified nil) 718 728 (fontified nil) 728 756 (face tree-sitter-hl-face:comment fontified nil) 756 765 (fontified nil) 765 769 (face tree-sitter-hl-face:keyword fontified nil) 769 770 (fontified nil) 770 773 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 773 774 (fontified nil) 774 775 (face tree-sitter-hl-face:operator fontified nil) 775 779 (fontified nil) 779 785 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 785 786 (face (rainbow-delimiters-depth-1-face) fontified nil) 786 790 (face tree-sitter-hl-face:keyword fontified nil) 790 791 (fontified nil) 791 799 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 799 801 (fontified nil) 801 805 (face tree-sitter-hl-face:keyword fontified nil) 805 806 (fontified nil) 806 814 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 814 816 (fontified nil) 816 820 (face tree-sitter-hl-face:label fontified nil) 820 821 (face tree-sitter-hl-face:operator fontified nil) 821 825 (face tree-sitter-hl-face:constant.builtin fontified nil) 825 827 (fontified nil) 827 832 (face tree-sitter-hl-face:label fontified nil) 832 833 (face tree-sitter-hl-face:operator fontified nil) 833 837 (face tree-sitter-hl-face:keyword fontified nil) 837 838 (fontified nil) 838 843 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 843 845 (fontified nil) 845 851 (face tree-sitter-hl-face:label fontified nil) 851 852 (face tree-sitter-hl-face:operator fontified nil) 852 856 (face tree-sitter-hl-face:keyword fontified nil) 856 857 (fontified nil) 857 863 (face tree-sitter-hl-face:property fontified nil) 863 864 (face (rainbow-delimiters-depth-1-face) fontified nil) 864 874 (fontified nil) 874 877 (face tree-sitter-hl-face:keyword fontified nil) 877 878 (fontified nil) 878 883 (face tree-sitter-hl-face:variable fontified nil) 883 884 (fontified nil) 884 886 (face tree-sitter-hl-face:operator fontified nil) 886 887 (fontified nil) 887 892 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 892 893 (face (rainbow-delimiters-depth-1-face) fontified nil) 893 897 (face tree-sitter-hl-face:keyword fontified nil) 897 898 (fontified nil) 898 903 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 903 904 (face (rainbow-delimiters-depth-1-face) fontified nil) 904 918 (fontified nil) 918 921 (face tree-sitter-hl-face:keyword fontified nil) 921 922 (fontified nil) 922 927 (face tree-sitter-hl-face:variable fontified nil) 927 928 (fontified nil) 928 930 (face tree-sitter-hl-face:operator fontified nil) 930 931 (fontified nil) 931 936 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 936 937 (face (rainbow-delimiters-depth-1-face) fontified nil) 937 941 (face tree-sitter-hl-face:keyword fontified nil) 941 942 (fontified nil) 942 947 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 947 948 (face (rainbow-delimiters-depth-1-face) fontified nil) 948 966 (fontified nil) 966 968 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 968 969 (fontified nil) 969 970 (face tree-sitter-hl-face:operator fontified nil) 970 971 (fontified nil) 971 975 (face tree-sitter-hl-face:keyword fontified nil) 975 976 (fontified nil) 976 987 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 987 988 (face (rainbow-delimiters-depth-1-face) fontified nil) 988 1000 (fontified nil) 1000 1001 (face (rainbow-delimiters-depth-1-face) fontified nil) 1001 1035 (fontified nil) 1035 1039 (face tree-sitter-hl-face:keyword fontified nil) 1039 1040 (fontified nil) 1040 1043 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1043 1044 (fontified nil) 1044 1050 (face tree-sitter-hl-face:property fontified nil) 1050 1051 (fontified nil) 1051 1055 (face tree-sitter-hl-face:property fontified nil) 1055 1056 (face (rainbow-delimiters-depth-1-face) fontified nil) 1056 1060 (face tree-sitter-hl-face:keyword fontified nil) 1060 1061 (fontified nil) 1061 1067 (face tree-sitter-hl-face:property fontified nil) 1067 1068 (face (rainbow-delimiters-depth-2-face) fontified nil) 1068 1073 (fontified nil) 1073 1074 (face (rainbow-delimiters-depth-2-face) fontified nil) 1074 1077 (fontified nil) 1077 1081 (face tree-sitter-hl-face:keyword fontified nil) 1081 1082 (fontified nil) 1082 1088 (face tree-sitter-hl-face:property fontified nil) 1088 1089 (face (rainbow-delimiters-depth-2-face) fontified nil) 1089 1095 (fontified nil) 1095 1096 (face tree-sitter-hl-face:operator fontified nil) 1096 1097 (fontified nil) 1097 1098 (face tree-sitter-hl-face:number fontified nil) 1098 1099 (face (rainbow-delimiters-depth-2-face) fontified nil) 1099 1138 (fontified nil) 1138 1142 (face tree-sitter-hl-face:keyword fontified nil) 1142 1143 (fontified nil) 1143 1149 (face tree-sitter-hl-face:property fontified nil) 1149 1150 (face (rainbow-delimiters-depth-2-face) fontified nil) 1150 1155 (fontified nil) 1155 1156 (face (rainbow-delimiters-depth-2-face) fontified nil) 1156 1159 (fontified nil) 1159 1163 (face tree-sitter-hl-face:keyword fontified nil) 1163 1164 (fontified nil) 1164 1170 (face tree-sitter-hl-face:property fontified nil) 1170 1171 (face (rainbow-delimiters-depth-2-face) fontified nil) 1171 1177 (fontified nil) 1177 1178 (face tree-sitter-hl-face:operator fontified nil) 1178 1179 (fontified nil) 1179 1180 (face tree-sitter-hl-face:number fontified nil) 1180 1181 (face (rainbow-delimiters-depth-2-face) fontified nil) 1181 1182 (face (rainbow-delimiters-depth-1-face) fontified nil) 1182 1183 (fontified nil) 1183 1184 (face tree-sitter-hl-face:operator fontified nil) 1184 1185 (fontified nil) 1185 1187 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 1187 1205 (fontified nil) 1205 1260 (face tree-sitter-hl-face:comment fontified nil) 1260 1269 (fontified nil) 1269 1272 (face tree-sitter-hl-face:keyword fontified nil) 1272 1273 (fontified nil) 1273 1278 (face tree-sitter-hl-face:variable fontified nil) 1278 1279 (fontified nil) 1279 1281 (face tree-sitter-hl-face:operator fontified nil) 1281 1282 (fontified nil) 1282 1287 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1287 1288 (face (rainbow-delimiters-depth-1-face) fontified nil) 1288 1292 (face tree-sitter-hl-face:keyword fontified nil) 1292 1293 (fontified nil) 1293 1298 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1298 1299 (face (rainbow-delimiters-depth-1-face) fontified nil) 1299 1313 (fontified nil) 1313 1317 (face tree-sitter-hl-face:keyword fontified nil) 1317 1318 (fontified nil) 1318 1321 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1321 1322 (fontified nil) 1322 1326 (face tree-sitter-hl-face:property fontified nil) 1326 1327 (fontified nil) 1327 1331 (face tree-sitter-hl-face:property fontified nil) 1331 1332 (face (rainbow-delimiters-depth-1-face) fontified nil) 1332 1336 (face tree-sitter-hl-face:keyword fontified nil) 1336 1337 (fontified nil) 1337 1343 (face tree-sitter-hl-face:property fontified nil) 1343 1344 (face (rainbow-delimiters-depth-2-face) fontified nil) 1344 1349 (fontified nil) 1349 1350 (face (rainbow-delimiters-depth-2-face) fontified nil) 1350 1353 (fontified nil) 1353 1357 (face tree-sitter-hl-face:keyword fontified nil) 1357 1358 (fontified nil) 1358 1364 (face tree-sitter-hl-face:property fontified nil) 1364 1365 (face (rainbow-delimiters-depth-2-face) fontified nil) 1365 1371 (fontified nil) 1371 1372 (face tree-sitter-hl-face:operator fontified nil) 1372 1373 (fontified nil) 1373 1374 (face tree-sitter-hl-face:number fontified nil) 1374 1375 (face (rainbow-delimiters-depth-2-face) fontified nil) 1375 1376 (face (rainbow-delimiters-depth-1-face) fontified nil) 1376 1377 (fontified nil) 1377 1382 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1382 1383 (face (rainbow-delimiters-depth-1-face) fontified nil) 1383 1387 (face tree-sitter-hl-face:keyword fontified nil) 1387 1388 (fontified nil) 1388 1391 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1391 1392 (face (rainbow-delimiters-depth-2-face) fontified nil) 1392 1397 (fontified nil) 1397 1398 (face (rainbow-delimiters-depth-2-face) fontified nil) 1398 1399 (face (rainbow-delimiters-depth-1-face) fontified nil) 1399 1417 (fontified nil) 1417 1434 (face tree-sitter-hl-face:comment fontified nil) 1434 1443 (fontified nil) 1443 1451 (face tree-sitter-hl-face:function.call fontified nil) 1451 1452 (face (rainbow-delimiters-depth-1-face) fontified nil) 1452 1453 (face tree-sitter-hl-face:number fontified nil) 1453 1454 (face (rainbow-delimiters-depth-1-face) fontified nil) 1454 1461 (fontified nil) 1461 1464 (face tree-sitter-hl-face:keyword fontified nil) 1464 1465 (fontified nil) 1465 1481 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 1481 1482 (face (rainbow-delimiters-depth-1-face) fontified nil) 1482 1486 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 1486 1488 (fontified nil) 1488 1493 (face tree-sitter-hl-face:variable.parameter fontified nil) 1493 1494 (face (rainbow-delimiters-depth-1-face) fontified nil) 1494 1500 (fontified nil) 1500 1506 (fontified nil) 1506 1507 (fontified nil syntax-table (15)) 1507 1539 (fontified nil) 1539 1540 (fontified nil syntax-table (15)) 1540 1614 (fontified nil) 1614 1630 (fontified nil face tree-sitter-hl-face:method) 1630 1659 (fontified nil) 1659 1660 (fontified nil syntax-table (15)) 1660 1699 (fontified nil) 1699 1700 (fontified nil syntax-table (15)) 1700 1939 (fontified nil) 1939 1951 (fontified nil face tree-sitter-hl-face:method) 1951 1987 (fontified nil) 1987 1988 (fontified nil syntax-table (15)) 1988 2009 (fontified nil) 2009 2010 (fontified nil syntax-table (15)) 2010 2292 (fontified nil) 2292 2299 (fontified nil face tree-sitter-hl-face:method) 2299 2324 (fontified nil) 2324 2325 (fontified nil syntax-table (15)) 2325 2363 (fontified nil) 2363 2364 (fontified nil syntax-table (15)) 2364 2552 (fontified nil) 2552 2566 (fontified nil face tree-sitter-hl-face:method) 2566 3202 (fontified nil) 3202 3205 (fontified nil face tree-sitter-hl-face:method) 3205 4795 (fontified nil) 4795 4805 (fontified nil face tree-sitter-hl-face:method) 4805 5643 (fontified nil) 5643 5652 (fontified nil face tree-sitter-hl-face:method) 5652 5749 (fontified nil) 5749 5760 (fontified nil face tree-sitter-hl-face:method) 5760 9084 (fontified nil) 9084 9093 (fontified nil face tree-sitter-hl-face:method) 9093 11437 (fontified nil) 11437 11447 (fontified nil face tree-sitter-hl-face:method) 11447 12420 (fontified nil) 12420 12431 (fontified nil face tree-sitter-hl-face:method) 12431 12455 (fontified nil) 12455 12456 (fontified nil syntax-table (15)) 12456 12507 (fontified nil) 12507 12508 (fontified nil syntax-table (15)) 12508 13385 (fontified nil) 13385 13387 (fontified nil face tree-sitter-hl-face:keyword) 13387 13388 (fontified nil) 13388 13392 (fontified nil face tree-sitter-hl-face:keyword) 13392 13393 (fontified nil) 13393 13400 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13400 13418 (fontified nil) 13418 13423 (fontified nil face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 13423 13424 (fontified nil face (rainbow-delimiters-depth-1-face)) 13424 13425 (fontified nil face tree-sitter-hl-face:string) 13425 13432 (fontified nil face tree-sitter-hl-face:string) 13432 13433 (fontified nil face tree-sitter-hl-face:string) 13433 13434 (fontified nil face (rainbow-delimiters-depth-1-face)) 13434 13460 (fontified nil) 13460 13464 (fontified nil face tree-sitter-hl-face:keyword) 13464 13465 (fontified nil) 13465 13468 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13468 13469 (fontified nil) 13469 13473 (fontified nil face tree-sitter-hl-face:property) 13473 13474 (fontified nil) 13474 13478 (fontified nil face tree-sitter-hl-face:property) 13478 13479 (fontified nil face (rainbow-delimiters-depth-1-face)) 13479 13483 (fontified nil face tree-sitter-hl-face:keyword) 13483 13484 (fontified nil) 13484 13490 (fontified nil face tree-sitter-hl-face:property) 13490 13491 (fontified nil face (rainbow-delimiters-depth-2-face)) 13491 13492 (fontified nil face tree-sitter-hl-face:number) 13492 13493 (fontified nil face (rainbow-delimiters-depth-2-face)) 13493 13494 (fontified nil) 13494 13498 (fontified nil face tree-sitter-hl-face:keyword) 13498 13499 (fontified nil) 13499 13505 (fontified nil face tree-sitter-hl-face:property) 13505 13506 (fontified nil face (rainbow-delimiters-depth-2-face)) 13506 13507 (fontified nil face tree-sitter-hl-face:number) 13507 13508 (fontified nil face (rainbow-delimiters-depth-2-face)) 13508 13509 (fontified nil face (rainbow-delimiters-depth-1-face)) 13509 13510 (fontified nil) 13510 13511 (fontified nil face tree-sitter-hl-face:operator) 13511 13512 (fontified nil) 13512 13516 (fontified nil face tree-sitter-hl-face:keyword) 13516 13517 (fontified nil) 13517 13520 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 13520 13521 (fontified nil face (rainbow-delimiters-depth-1-face)) 13521 13522 (fontified nil face tree-sitter-hl-face:number) 13522 13523 (fontified nil face (rainbow-delimiters-depth-1-face)) 13523 13524 (fontified nil) 13524 13525 (fontified nil face tree-sitter-hl-face:operator) 13525 13526 (fontified nil) 13526 13530 (fontified nil face tree-sitter-hl-face:keyword) 13530 13531 (fontified nil) 13531 13539 (fontified nil face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 13539 13540 (fontified nil face (rainbow-delimiters-depth-1-face)) 13540 13541 (fontified nil face tree-sitter-hl-face:number) 13541 13542 (fontified nil face (rainbow-delimiters-depth-1-face)) 13542 13568 (fontified nil) 13568 13588 (fontified nil face tree-sitter-hl-face:comment) 13588 13601 (fontified nil) 13601 13715 (fontified nil face tree-sitter-hl-face:comment) 13715 13728 (fontified nil) 13728 13750 (fontified nil face tree-sitter-hl-face:comment) 13750 13763 (fontified nil) 13763 13877 (fontified nil face tree-sitter-hl-face:comment) 13877 13878 (fontified nil) 13878 13891 (fontified nil) 13891 13903 (fontified nil) 13903 13924 (face tree-sitter-hl-face:comment fontified nil) 13924 13937 (fontified nil) 13937 14051 (face tree-sitter-hl-face:comment fontified nil) 14051 14064 (fontified nil) 14064 14086 (face tree-sitter-hl-face:comment fontified nil) 14086 14099 (fontified nil) 14099 14213 (face tree-sitter-hl-face:comment fontified nil) 14213 14264 (fontified nil) 14264 14266 (face tree-sitter-hl-face:keyword fontified nil) 14266 14272 (fontified nil) 14272 14274 (face tree-sitter-hl-face:operator fontified nil) 14274 14275 (fontified nil) 14275 14279 (face tree-sitter-hl-face:keyword fontified nil) 14279 14280 (fontified nil) 14280 14290 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14290 14291 (fontified nil) 14291 14294 (face tree-sitter-hl-face:operator fontified nil) 14294 14298 (fontified nil) 14298 14301 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14301 14302 (face (rainbow-delimiters-depth-1-face) fontified nil) 14302 14306 (face tree-sitter-hl-face:keyword fontified nil) 14306 14307 (fontified nil) 14307 14309 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14309 14311 (face tree-sitter-hl-face:operator fontified nil) 14311 14312 (face tree-sitter-hl-face:number fontified nil) 14312 14313 (face (rainbow-delimiters-depth-1-face) fontified nil) 14313 14327 (fontified nil) 14327 14329 (face tree-sitter-hl-face:keyword fontified nil) 14329 14330 (fontified nil) 14330 14334 (face tree-sitter-hl-face:keyword fontified nil) 14334 14335 (fontified nil) 14335 14342 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14342 14360 (fontified nil) 14360 14365 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 14365 14366 (face (rainbow-delimiters-depth-1-face) fontified nil) 14366 14367 (face tree-sitter-hl-face:string fontified nil) 14367 14375 (face tree-sitter-hl-face:string fontified nil) 14375 14376 (face tree-sitter-hl-face:string fontified nil) 14376 14377 (face (rainbow-delimiters-depth-1-face) fontified nil) 14377 14390 (fontified nil) 14390 14394 (face tree-sitter-hl-face:keyword fontified nil) 14394 14395 (fontified nil) 14395 14398 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14398 14399 (fontified nil) 14399 14403 (face tree-sitter-hl-face:property fontified nil) 14403 14404 (fontified nil) 14404 14408 (face tree-sitter-hl-face:property fontified nil) 14408 14409 (face (rainbow-delimiters-depth-1-face) fontified nil) 14409 14413 (face tree-sitter-hl-face:keyword fontified nil) 14413 14414 (fontified nil) 14414 14420 (face tree-sitter-hl-face:property fontified nil) 14420 14421 (face (rainbow-delimiters-depth-2-face) fontified nil) 14421 14422 (face tree-sitter-hl-face:number fontified nil) 14422 14423 (face (rainbow-delimiters-depth-2-face) fontified nil) 14423 14424 (fontified nil) 14424 14428 (face tree-sitter-hl-face:keyword fontified nil) 14428 14429 (fontified nil) 14429 14435 (face tree-sitter-hl-face:property fontified nil) 14435 14436 (face (rainbow-delimiters-depth-2-face) fontified nil) 14436 14437 (face tree-sitter-hl-face:number fontified nil) 14437 14438 (face (rainbow-delimiters-depth-2-face) fontified nil) 14438 14439 (face (rainbow-delimiters-depth-1-face) fontified nil) 14439 14440 (fontified nil) 14440 14441 (face tree-sitter-hl-face:operator fontified nil) 14441 14442 (fontified nil) 14442 14446 (face tree-sitter-hl-face:keyword fontified nil) 14446 14447 (fontified nil) 14447 14450 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14450 14451 (face (rainbow-delimiters-depth-1-face) fontified nil) 14451 14452 (face tree-sitter-hl-face:number fontified nil) 14452 14453 (face (rainbow-delimiters-depth-1-face) fontified nil) 14453 14467 (fontified nil) 14467 14496 (face tree-sitter-hl-face:comment fontified nil) 14496 14509 (fontified nil) 14509 14558 (face tree-sitter-hl-face:comment fontified nil) 14558 14572 (fontified nil) 14572 14575 (face tree-sitter-hl-face:keyword fontified nil) 14575 14576 (fontified nil) 14576 14584 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 14584 14585 (face (rainbow-delimiters-depth-1-face) fontified nil) 14585 14589 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 14589 14591 (fontified nil) 14591 14596 (face tree-sitter-hl-face:variable.parameter fontified nil) 14596 14597 (face (rainbow-delimiters-depth-1-face) fontified nil) 14597 14607 (fontified nil) 14607 14609 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil) 14609 14610 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil syntax-table (15)) 14610 14624 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified nil) 14624 14625 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil syntax-table (15)) 14625 14627 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil) 14627 14636 (fontified nil) 14636 14641 (face tree-sitter-hl-face:variable fontified nil) 14641 14642 (fontified nil) 14642 14643 (face tree-sitter-hl-face:operator fontified nil) 14643 14650 (fontified nil) 14650 14656 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14656 14657 (face (rainbow-delimiters-depth-1-face) fontified nil) 14657 14658 (face tree-sitter-hl-face:number fontified nil) 14658 14660 (fontified nil) 14660 14663 (face tree-sitter-hl-face:number fontified nil) 14663 14664 (fontified nil) 14664 14665 (face tree-sitter-hl-face:operator fontified nil) 14665 14672 (fontified nil) 14672 14674 (face tree-sitter-hl-face:property fontified nil) 14674 14676 (fontified nil) 14676 14679 (face tree-sitter-hl-face:number fontified nil) 14679 14680 (fontified nil) 14680 14681 (face tree-sitter-hl-face:operator fontified nil) 14681 14688 (fontified nil) 14688 14690 (face tree-sitter-hl-face:property fontified nil) 14690 14691 (fontified nil) 14691 14692 (face tree-sitter-hl-face:operator fontified nil) 14692 14693 (fontified nil) 14693 14698 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 14698 14699 (face (rainbow-delimiters-depth-2-face) fontified nil) 14699 14703 (face tree-sitter-hl-face:keyword fontified nil) 14703 14704 (fontified nil) 14704 14706 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14706 14707 (face (rainbow-delimiters-depth-3-face) fontified nil) 14707 14712 (fontified nil) 14712 14713 (face (rainbow-delimiters-depth-3-face) fontified nil) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified nil) 14714 14716 (fontified nil) 14716 14721 (face tree-sitter-hl-face:label fontified nil) 14721 14722 (face tree-sitter-hl-face:operator fontified nil) 14722 14726 (face tree-sitter-hl-face:keyword fontified nil) 14726 14727 (fontified nil) 14727 14732 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14732 14734 (fontified nil) 14734 14740 (face tree-sitter-hl-face:label fontified nil) 14740 14741 (face tree-sitter-hl-face:operator fontified nil) 14741 14745 (face tree-sitter-hl-face:keyword fontified nil) 14745 14746 (fontified nil) 14746 14752 (face tree-sitter-hl-face:property fontified nil) 14752 14753 (face (rainbow-delimiters-depth-1-face) fontified nil) 14753 14754 (fontified nil) 14754 14762 (fontified nil) 14762 14768 (face tree-sitter-hl-face:keyword fontified nil) 14768 14769 (fontified nil) 14769 14773 (face tree-sitter-hl-face:keyword fontified nil) 14773 14774 (fontified nil) 14774 14776 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14776 14777 (face (rainbow-delimiters-depth-1-face) fontified nil) 14777 14782 (fontified nil) 14782 14783 (face (rainbow-delimiters-depth-1-face) fontified nil) 14783 14784 (fontified nil) 14784 14785 (face tree-sitter-hl-face:operator fontified nil) 14785 14786 (fontified nil) 14786 14787 (face (rainbow-delimiters-depth-1-face) fontified nil) 14787 14790 (face tree-sitter-hl-face:number fontified nil) 14790 14791 (fontified nil) 14791 14792 (face tree-sitter-hl-face:operator fontified nil) 14792 14793 (fontified nil) 14793 14797 (face tree-sitter-hl-face:keyword fontified nil) 14797 14798 (fontified nil) 14798 14804 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14804 14805 (fontified nil) 14805 14806 (face tree-sitter-hl-face:operator fontified nil) 14806 14813 (fontified nil) 14813 14816 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14816 14817 (face (rainbow-delimiters-depth-2-face) fontified nil) 14817 14823 (fontified nil) 14823 14824 (face tree-sitter-hl-face:operator fontified nil) 14824 14825 (fontified nil) 14825 14829 (face tree-sitter-hl-face:keyword fontified nil) 14829 14830 (fontified nil) 14830 14834 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14834 14835 (fontified nil) 14835 14836 (face tree-sitter-hl-face:operator fontified nil) 14836 14843 (fontified nil) 14843 14845 (face tree-sitter-hl-face:property fontified nil) 14845 14846 (fontified nil) 14846 14847 (face tree-sitter-hl-face:operator fontified nil) 14847 14848 (fontified nil) 14848 14853 (face tree-sitter-hl-face:number fontified nil) 14853 14854 (face (rainbow-delimiters-depth-2-face) fontified nil) 14854 14855 (face (rainbow-delimiters-depth-1-face) fontified nil) 14855 14856 (fontified nil) 14856 14857 (face tree-sitter-hl-face:operator fontified nil) 14857 14864 (fontified nil) 14864 14868 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14868 14869 (face (rainbow-delimiters-depth-1-face) fontified nil) 14869 14873 (face tree-sitter-hl-face:keyword fontified nil) 14873 14874 (fontified nil) 14874 14876 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14876 14877 (face (rainbow-delimiters-depth-2-face) fontified nil) 14877 14878 (face tree-sitter-hl-face:number fontified nil) 14878 14879 (face (rainbow-delimiters-depth-2-face) fontified nil) 14879 14880 (face (rainbow-delimiters-depth-1-face) fontified nil) 14880 14881 (fontified nil) 14881 14882 (face tree-sitter-hl-face:operator fontified nil) 14882 14883 (fontified nil) 14883 14887 (face tree-sitter-hl-face:keyword fontified nil) 14887 14888 (fontified nil) 14888 14890 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14890 14891 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id1564 . -74) (undo-tree-id1565 . -74) (undo-tree-id1566 . -74) (undo-tree-id1567 . -74) (undo-tree-id1568 . -14891) (undo-tree-id1569 . -74) (undo-tree-id1570 . -74) (undo-tree-id1571 . -74) (undo-tree-id1572 . -74) (undo-tree-id1573 . -74) (undo-tree-id1574 . -74) (undo-tree-id1575 . -74) (undo-tree-id1576 . -74) (undo-tree-id1577 . -74) (undo-tree-id1578 . -74) (undo-tree-id1579 . -74) (undo-tree-id1580 . -74) (undo-tree-id1581 . -74) (undo-tree-id1582 . -74) (undo-tree-id1583 . -74) (undo-tree-id1584 . -74) (undo-tree-id1585 . -74) (undo-tree-id1586 . -74) (undo-tree-id1587 . -74) (undo-tree-id1588 . -74) (undo-tree-id1589 . -74) (undo-tree-id1590 . -74) (undo-tree-id1591 . -74) (undo-tree-id1592 . -74) (undo-tree-id1593 . -74) (undo-tree-id1594 . -74) (undo-tree-id1595 . -74) (undo-tree-id1596 . -74) (undo-tree-id1597 . -74) (undo-tree-id1598 . -74) (undo-tree-id1599 . -74) (undo-tree-id1600 . -74) (undo-tree-id1601 . -74) (undo-tree-id1602 . -74) (undo-tree-id1603 . -74) (undo-tree-id1604 . -74) (nil fontified t 14754 . 14755) (nil fontified t 14753 . 14754) (nil fontified t 14747 . 14753) (nil fontified t 14746 . 14747) (nil fontified t 14742 . 14746) (nil fontified t 14741 . 14742) (nil fontified t 14735 . 14741) (nil fontified t 14733 . 14735) (nil fontified t 14728 . 14733) (nil fontified t 14727 . 14728) (nil fontified t 14723 . 14727) (nil fontified t 14722 . 14723) (nil fontified t 14717 . 14722) (nil fontified t 14715 . 14717) (nil fontified t 14714 . 14715) (nil fontified t 14713 . 14714) (nil fontified t 14708 . 14713) (nil fontified t 14707 . 14708) (nil fontified t 14705 . 14707) (nil fontified t 14704 . 14705) (nil fontified t 14700 . 14704) (nil fontified t 14699 . 14700) (nil fontified t 14694 . 14699) (nil fontified t 14693 . 14694) (nil fontified t 14692 . 14693) (nil fontified t 14691 . 14692) (nil fontified t 14689 . 14691) (nil fontified t 14682 . 14689) (nil fontified t 14681 . 14682) (nil fontified t 14680 . 14681) (nil fontified t 14677 . 14680) (nil fontified t 14675 . 14677) (nil fontified t 14673 . 14675) (nil fontified t 14666 . 14673) (nil fontified t 14665 . 14666) (nil fontified t 14664 . 14665) (nil fontified t 14661 . 14664) (nil fontified t 14659 . 14661) (nil fontified t 14658 . 14659) (nil fontified t 14657 . 14658) (nil fontified t 14651 . 14657) (nil fontified t 14644 . 14651) (nil fontified t 14643 . 14644) (nil fontified t 14642 . 14643) (nil fontified t 14637 . 14642) (nil fontified t 14628 . 14637) (nil fontified t 14626 . 14628) (nil fontified t 14625 . 14626) (nil fontified t 14611 . 14625) (nil fontified t 14610 . 14611) (nil fontified t 14608 . 14610) (nil fontified t 14598 . 14608) (nil fontified t 14597 . 14598) (nil fontified t 14592 . 14597) (nil fontified t 14590 . 14592) (nil fontified t 14586 . 14590) (nil fontified t 14585 . 14586) (nil fontified t 14577 . 14585) (nil fontified t 14576 . 14577) (nil fontified t 14573 . 14576) (nil fontified t 14559 . 14573) (nil fontified t 14510 . 14559) (nil fontified t 14497 . 14510) (nil fontified t 14468 . 14497) (nil fontified t 14454 . 14468) (nil fontified t 14453 . 14454) (nil fontified t 14452 . 14453) (nil fontified t 14451 . 14452) (nil fontified t 14448 . 14451) (nil fontified t 14447 . 14448) (nil fontified t 14443 . 14447) (nil fontified t 14442 . 14443) (nil fontified t 14441 . 14442) (nil fontified t 14440 . 14441) (nil fontified t 14439 . 14440) (nil fontified t 14438 . 14439) (nil fontified t 14437 . 14438) (nil fontified t 14436 . 14437) (nil fontified t 14430 . 14436) (nil fontified t 14429 . 14430) (nil fontified t 14425 . 14429) (nil fontified t 14424 . 14425) (nil fontified t 14423 . 14424) (nil fontified t 14422 . 14423) (nil fontified t 14421 . 14422) (nil fontified t 14415 . 14421) (nil fontified t 14414 . 14415) (nil fontified t 14410 . 14414) (nil fontified t 14409 . 14410) (nil fontified t 14405 . 14409) (nil fontified t 14404 . 14405) (nil fontified t 14400 . 14404) (nil fontified t 14399 . 14400) (nil fontified t 14396 . 14399) (nil fontified t 14395 . 14396) (nil fontified t 14391 . 14395) (nil fontified t 14378 . 14391) (nil fontified t 14377 . 14378) (nil fontified t 14376 . 14377) (nil fontified t 14368 . 14376) (nil fontified t 14367 . 14368) (nil fontified t 14366 . 14367) (nil fontified t 14361 . 14366) (nil fontified t 14343 . 14361) (nil fontified t 14336 . 14343) (nil fontified t 14335 . 14336) (nil fontified t 14331 . 14335) (nil fontified t 14330 . 14331) (nil fontified t 14328 . 14330) (nil fontified t 14314 . 14328) (nil fontified t 14313 . 14314) (nil fontified t 14312 . 14313) (nil fontified t 14310 . 14312) (nil fontified t 14308 . 14310) (nil fontified t 14307 . 14308) (nil fontified t 14303 . 14307) (nil fontified t 14302 . 14303) (nil fontified t 14299 . 14302) (nil fontified t 14295 . 14299) (nil fontified t 14292 . 14295) (nil fontified t 14291 . 14292) (nil fontified t 14281 . 14291) (nil fontified t 14280 . 14281) (nil fontified t 14276 . 14280) (nil fontified t 14275 . 14276) (nil fontified t 14273 . 14275) (nil fontified t 14267 . 14273) (nil fontified t 14265 . 14267) (nil fontified t 14214 . 14265) (nil fontified t 14100 . 14214) (nil fontified t 14087 . 14100) (nil fontified t 14065 . 14087) (nil fontified t 14052 . 14065) (nil fontified t 13938 . 14052) (nil fontified t 13925 . 13938) (nil fontified t 13904 . 13925) (nil fontified t 13892 . 13904) (nil fontified t 13879 . 13892) (nil fontified nil 13878 . 13879) (nil fontified nil 13764 . 13878) (nil fontified nil 13751 . 13764) (nil fontified nil 13729 . 13751) (nil fontified nil 13716 . 13729) (nil fontified nil 13602 . 13716) (nil fontified nil 13589 . 13602) (nil fontified nil 13569 . 13589) (nil fontified nil 13543 . 13569) (nil fontified nil 13542 . 13543) (nil fontified nil 13541 . 13542) (nil fontified nil 13540 . 13541) (nil fontified nil 13532 . 13540) (nil fontified nil 13531 . 13532) (nil fontified nil 13527 . 13531) (nil fontified nil 13526 . 13527) (nil fontified nil 13525 . 13526) (nil fontified nil 13524 . 13525) (nil fontified nil 13523 . 13524) (nil fontified nil 13522 . 13523) (nil fontified nil 13521 . 13522) (nil fontified nil 13518 . 13521) (nil fontified nil 13517 . 13518) (nil fontified nil 13513 . 13517) (nil fontified nil 13512 . 13513) (nil fontified nil 13511 . 13512) (nil fontified nil 13510 . 13511) (nil fontified nil 13509 . 13510) (nil fontified nil 13508 . 13509) (nil fontified nil 13507 . 13508) (nil fontified nil 13506 . 13507) (nil fontified nil 13500 . 13506) (nil fontified nil 13499 . 13500) (nil fontified nil 13495 . 13499) (nil fontified nil 13494 . 13495) (nil fontified nil 13493 . 13494) (nil fontified nil 13492 . 13493) (nil fontified nil 13491 . 13492) (nil fontified nil 13485 . 13491) (nil fontified nil 13484 . 13485) (nil fontified nil 13480 . 13484) (nil fontified nil 13479 . 13480) (nil fontified nil 13475 . 13479) (nil fontified nil 13474 . 13475) (nil fontified nil 13470 . 13474) (nil fontified nil 13469 . 13470) (nil fontified nil 13466 . 13469) (nil fontified nil 13465 . 13466) (nil fontified nil 13461 . 13465) (nil fontified nil 13435 . 13461) (nil fontified nil 13434 . 13435) (nil fontified nil 13433 . 13434) (nil fontified nil 13426 . 13433) (nil fontified nil 13425 . 13426) (nil fontified nil 13424 . 13425) (nil fontified nil 13419 . 13424) (nil fontified nil 13401 . 13419) (nil fontified nil 13394 . 13401) (nil fontified nil 13393 . 13394) (nil fontified nil 13389 . 13393) (nil fontified nil 13388 . 13389) (nil fontified nil 13386 . 13388) (nil fontified nil 12509 . 13386) (nil fontified nil 12508 . 12509) (nil fontified nil 12457 . 12508) (nil fontified nil 12456 . 12457) (nil fontified nil 12432 . 12456) (nil fontified nil 12421 . 12432) (nil fontified nil 11448 . 12421) (nil fontified nil 11438 . 11448) (nil fontified nil 9094 . 11438) (nil fontified nil 9085 . 9094) (nil fontified nil 5761 . 9085) (nil fontified nil 5750 . 5761) (nil fontified nil 5653 . 5750) (nil fontified nil 5644 . 5653) (nil fontified nil 4806 . 5644) (nil fontified nil 4796 . 4806) (nil fontified nil 3206 . 4796) (nil fontified nil 3203 . 3206) (nil fontified nil 2567 . 3203) (nil fontified nil 2553 . 2567) (nil fontified nil 2365 . 2553) (nil fontified nil 2364 . 2365) (nil fontified nil 2326 . 2364) (nil fontified nil 2325 . 2326) (nil fontified nil 2300 . 2325) (nil fontified nil 2293 . 2300) (nil fontified nil 2011 . 2293) (nil fontified nil 2010 . 2011) (nil fontified nil 1989 . 2010) (nil fontified nil 1988 . 1989) (nil fontified nil 1952 . 1988) (nil fontified nil 1940 . 1952) (nil fontified nil 1701 . 1940) (nil fontified nil 1700 . 1701) (nil fontified nil 1661 . 1700) (nil fontified nil 1660 . 1661) (nil fontified nil 1631 . 1660) (nil fontified nil 1615 . 1631) (nil fontified nil 1541 . 1615) (nil fontified nil 1540 . 1541) (nil fontified nil 1508 . 1540) (nil fontified nil 1507 . 1508) (nil fontified nil 1501 . 1507) (nil fontified t 1495 . 1501) (nil fontified t 1494 . 1495) (nil fontified t 1489 . 1494) (nil fontified t 1487 . 1489) (nil fontified t 1483 . 1487) (nil fontified t 1482 . 1483) (nil fontified t 1466 . 1482) (nil fontified t 1465 . 1466) (nil fontified t 1462 . 1465) (nil fontified t 1455 . 1462) (nil fontified t 1454 . 1455) (nil fontified t 1453 . 1454) (nil fontified t 1452 . 1453) (nil fontified t 1444 . 1452) (nil fontified t 1435 . 1444) (nil fontified t 1418 . 1435) (nil fontified t 1400 . 1418) (nil fontified t 1399 . 1400) (nil fontified t 1398 . 1399) (nil fontified t 1393 . 1398) (nil fontified t 1392 . 1393) (nil fontified t 1389 . 1392) (nil fontified t 1388 . 1389) (nil fontified t 1384 . 1388) (nil fontified t 1383 . 1384) (nil fontified t 1378 . 1383) (nil fontified t 1377 . 1378) (nil fontified t 1376 . 1377) (nil fontified t 1375 . 1376) (nil fontified t 1374 . 1375) (nil fontified t 1373 . 1374) (nil fontified t 1372 . 1373) (nil fontified t 1366 . 1372) (nil fontified t 1365 . 1366) (nil fontified t 1359 . 1365) (nil fontified t 1358 . 1359) (nil fontified t 1354 . 1358) (nil fontified t 1351 . 1354) (nil fontified t 1350 . 1351) (nil fontified t 1345 . 1350) (nil fontified t 1344 . 1345) (nil fontified t 1338 . 1344) (nil fontified t 1337 . 1338) (nil fontified t 1333 . 1337) (nil fontified t 1332 . 1333) (nil fontified t 1328 . 1332) (nil fontified t 1327 . 1328) (nil fontified t 1323 . 1327) (nil fontified t 1322 . 1323) (nil fontified t 1319 . 1322) (nil fontified t 1318 . 1319) (nil fontified t 1314 . 1318) (nil fontified t 1300 . 1314) (nil fontified t 1299 . 1300) (nil fontified t 1294 . 1299) (nil fontified t 1293 . 1294) (nil fontified t 1289 . 1293) (nil fontified t 1288 . 1289) (nil fontified t 1283 . 1288) (nil fontified t 1282 . 1283) (nil fontified t 1280 . 1282) (nil fontified t 1279 . 1280) (nil fontified t 1274 . 1279) (nil fontified t 1273 . 1274) (nil fontified t 1270 . 1273) (nil fontified t 1261 . 1270) (nil fontified t 1206 . 1261) (nil fontified t 1188 . 1206) (nil fontified t 1186 . 1188) (nil fontified t 1185 . 1186) (nil fontified t 1184 . 1185) (nil fontified t 1183 . 1184) (nil fontified t 1182 . 1183) (nil fontified t 1181 . 1182) (nil fontified t 1180 . 1181) (nil fontified t 1179 . 1180) (nil fontified t 1178 . 1179) (nil fontified t 1172 . 1178) (nil fontified t 1171 . 1172) (nil fontified t 1165 . 1171) (nil fontified t 1164 . 1165) (nil fontified t 1160 . 1164) (nil fontified t 1157 . 1160) (nil fontified t 1156 . 1157) (nil fontified t 1151 . 1156) (nil fontified t 1150 . 1151) (nil fontified t 1144 . 1150) (nil fontified t 1143 . 1144) (nil fontified t 1139 . 1143) (nil fontified t 1100 . 1139) (nil fontified t 1099 . 1100) (nil fontified t 1098 . 1099) (nil fontified t 1097 . 1098) (nil fontified t 1096 . 1097) (nil fontified t 1090 . 1096) (nil fontified t 1089 . 1090) (nil fontified t 1083 . 1089) (nil fontified t 1082 . 1083) (nil fontified t 1078 . 1082) (nil fontified t 1075 . 1078) (nil fontified t 1074 . 1075) (nil fontified t 1069 . 1074) (nil fontified t 1068 . 1069) (nil fontified t 1062 . 1068) (nil fontified t 1061 . 1062) (nil fontified t 1057 . 1061) (nil fontified t 1056 . 1057) (nil fontified t 1052 . 1056) (nil fontified t 1051 . 1052) (nil fontified t 1045 . 1051) (nil fontified t 1044 . 1045) (nil fontified t 1041 . 1044) (nil fontified t 1040 . 1041) (nil fontified t 1036 . 1040) (nil fontified t 1002 . 1036) (nil fontified t 1001 . 1002) (nil fontified t 989 . 1001) (nil fontified t 988 . 989) (nil fontified t 977 . 988) (nil fontified t 976 . 977) (nil fontified t 972 . 976) (nil fontified t 971 . 972) (nil fontified t 970 . 971) (nil fontified t 969 . 970) (nil fontified t 967 . 969) (nil fontified t 949 . 967) (nil fontified t 948 . 949) (nil fontified t 943 . 948) (nil fontified t 942 . 943) (nil fontified t 938 . 942) (nil fontified t 937 . 938) (nil fontified t 932 . 937) (nil fontified t 931 . 932) (nil fontified t 929 . 931) (nil fontified t 928 . 929) (nil fontified t 923 . 928) (nil fontified t 922 . 923) (nil fontified t 919 . 922) (nil fontified t 905 . 919) (nil fontified t 904 . 905) (nil fontified t 899 . 904) (nil fontified t 898 . 899) (nil fontified t 894 . 898) (nil fontified t 893 . 894) (nil fontified t 888 . 893) (nil fontified t 887 . 888) (nil fontified t 885 . 887) (nil fontified t 884 . 885) (nil fontified t 879 . 884) (nil fontified t 878 . 879) (nil fontified t 875 . 878) (nil fontified t 865 . 875) (nil fontified t 864 . 865) (nil fontified t 858 . 864) (nil fontified t 857 . 858) (nil fontified t 853 . 857) (nil fontified t 852 . 853) (nil fontified t 846 . 852) (nil fontified t 844 . 846) (nil fontified t 839 . 844) (nil fontified t 838 . 839) (nil fontified t 834 . 838) (nil fontified t 833 . 834) (nil fontified t 828 . 833) (nil fontified t 826 . 828) (nil fontified t 822 . 826) (nil fontified t 821 . 822) (nil fontified t 817 . 821) (nil fontified t 815 . 817) (nil fontified t 807 . 815) (nil fontified t 806 . 807) (nil fontified t 802 . 806) (nil fontified t 800 . 802) (nil fontified t 792 . 800) (nil fontified t 791 . 792) (nil fontified t 787 . 791) (nil fontified t 786 . 787) (nil fontified t 780 . 786) (nil fontified t 776 . 780) (nil fontified t 775 . 776) (nil fontified t 774 . 775) (nil fontified t 771 . 774) (nil fontified t 770 . 771) (nil fontified t 766 . 770) (nil fontified t 757 . 766) (nil fontified t 729 . 757) (nil fontified t 719 . 729) (nil fontified t 718 . 719) (nil fontified t 714 . 718) (nil fontified t 713 . 714) (nil fontified t 709 . 713) (nil fontified t 708 . 709) (nil fontified t 700 . 708) (nil fontified t 691 . 700) (nil fontified t 673 . 691) (nil fontified t 663 . 673) (nil fontified t 662 . 663) (nil fontified t 661 . 662) (nil fontified t 651 . 661) (nil fontified t 650 . 651) (nil fontified t 646 . 650) (nil fontified t 637 . 646) (nil fontified t 619 . 637) (nil fontified t 609 . 619) (nil fontified t 608 . 609) (nil fontified t 607 . 608) (nil fontified t 598 . 607) (nil fontified t 597 . 598) (nil fontified t 593 . 597) (nil fontified t 584 . 593) (nil fontified t 574 . 584) (nil fontified t 564 . 574) (nil fontified t 563 . 564) (nil fontified t 557 . 563) (nil fontified t 555 . 557) (nil fontified t 523 . 555) (nil fontified t 522 . 523) (nil fontified t 512 . 522) (nil fontified t 511 . 512) (nil fontified t 507 . 511) (nil fontified t 498 . 507) (nil fontified t 481 . 498) (nil fontified t 471 . 481) (nil fontified t 470 . 471) (nil fontified t 469 . 470) (nil fontified t 461 . 469) (nil fontified t 460 . 461) (nil fontified t 459 . 460) (nil fontified t 458 . 459) (nil fontified t 453 . 458) (nil fontified t 443 . 453) (nil fontified t 442 . 443) (nil fontified t 436 . 442) (nil fontified t 434 . 436) (nil fontified t 432 . 434) (nil fontified t 423 . 432) (nil fontified t 421 . 423) (nil fontified t 413 . 421) (nil fontified t 411 . 413) (nil fontified t 402 . 411) (nil fontified t 400 . 402) (nil fontified t 396 . 400) (nil fontified t 395 . 396) (nil fontified t 387 . 395) (nil fontified t 386 . 387) (nil fontified t 383 . 386) (nil fontified t 377 . 383) (nil fontified t 376 . 377) (nil fontified t 370 . 376) (nil fontified t 367 . 370) (nil fontified t 366 . 367) (nil fontified t 359 . 366) (nil fontified t 358 . 359) (nil fontified t 353 . 358) (nil fontified t 350 . 353) (nil fontified t 349 . 350) (nil fontified t 348 . 349) (nil fontified t 342 . 348) (nil fontified t 341 . 342) (nil fontified t 340 . 341) (nil fontified t 326 . 340) (nil fontified t 307 . 326) (nil fontified t 301 . 307) (nil fontified t 299 . 301) (nil fontified t 262 . 299) (nil fontified t 261 . 262) (nil fontified t 251 . 261) (nil fontified t 250 . 251) (nil fontified t 244 . 250) (nil fontified t 228 . 244) (nil fontified t 224 . 228) (nil fontified t 214 . 224) (nil fontified t 208 . 214) (nil fontified t 197 . 208) (nil fontified t 193 . 197) (nil fontified t 178 . 193) (nil fontified t 172 . 178) (nil fontified t 166 . 172) (nil fontified t 162 . 166) (nil fontified t 151 . 162) (nil fontified t 145 . 151) (nil fontified t 139 . 145) (nil fontified t 135 . 139) (nil fontified t 133 . 135) (nil fontified t 115 . 133) (nil fontified t 113 . 115) (nil fontified t 107 . 113) (nil fontified t 106 . 107) (nil fontified t 100 . 106) (nil fontified t 79 . 100) (nil fontified t 75 . 79) (nil fontified t 71 . 75) (nil fontified t 65 . 71) (nil fontified t 58 . 65) (nil fontified t 54 . 58) (nil fontified t 47 . 54) (nil fontified t 41 . 47) (nil fontified t 36 . 41) (nil fontified t 34 . 36) (nil fontified t 27 . 34) (nil fontified t 21 . 27) (nil fontified t 17 . 21) (nil fontified t 11 . 17) (nil fontified t 7 . 11) (nil fontified t 1 . 7) (nil rear-nonsticky t 14891 . 14892) (t 25975 7736 742836 218000)) (25975 7736 446901 268000) 0 nil])
([nil nil ((9567 . 9602) (#(" " 0 1 (fontified nil)) . 9566) (9567 . 9568)) ((#("
" 0 1 (fontified nil)) . 9567) (undo-tree-id1378 . -1) (9566 . 9567) (#("                                   " 0 35 (fontified t)) . 9567)) (25975 7730 674143 64000) 0 nil])
([nil nil ((11896 . 11904) (t 25975 7820 454838 882000)) nil (25975 8165 821621 4000) 0 nil])
nil
([nil nil ((9621 . 9638)) ((#("
                " 0 17 (fontified nil)) . 9621)) (25975 7730 660182 350000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 262) (t 25975 8166 142849 883000)) nil (25975 8169 651721 346000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 2585) (2584 . 2585) (2583 . 2585) (#("'" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -2583) (2573 . 2584) (t 25975 4940 994747 252000)) ((#("func_name='" 0 9 (face tree-sitter-hl-face:label fontified nil) 9 10 (face tree-sitter-hl-face:operator fontified nil) 10 11 (face tree-sitter-hl-face:operator fontified nil)) . 2573) (undo-tree-id1284 . -10) (undo-tree-id1285 . -10) (undo-tree-id1286 . -10) (undo-tree-id1287 . -10) (undo-tree-id1288 . -10) (undo-tree-id1289 . -10) (undo-tree-id1290 . -10) (undo-tree-id1291 . -10) (undo-tree-id1292 . -10) (undo-tree-id1293 . -10) (undo-tree-id1294 . -10) (undo-tree-id1295 . -10) (undo-tree-id1296 . -10) (undo-tree-id1297 . -10) (undo-tree-id1298 . -10) (undo-tree-id1299 . -10) (undo-tree-id1300 . -10) (undo-tree-id1301 . -10) (undo-tree-id1302 . -10) (undo-tree-id1303 . -10) (undo-tree-id1304 . -10) (undo-tree-id1305 . -10) (undo-tree-id1306 . -10) (undo-tree-id1307 . -10) (undo-tree-id1308 . -10) (undo-tree-id1309 . -10) (undo-tree-id1310 . -10) (undo-tree-id1311 . -10) (undo-tree-id1312 . -10) (undo-tree-id1313 . -10) (undo-tree-id1314 . -10) (undo-tree-id1315 . -10) (undo-tree-id1316 . -10) (undo-tree-id1317 . -10) (undo-tree-id1318 . -10) (undo-tree-id1319 . -10) (undo-tree-id1320 . -10) (undo-tree-id1321 . -10) (undo-tree-id1322 . -10) (undo-tree-id1323 . -10) (undo-tree-id1324 . -10) (undo-tree-id1325 . -10) (undo-tree-id1326 . -10) (undo-tree-id1327 . -10) (undo-tree-id1328 . -10) (undo-tree-id1329 . -10) (undo-tree-id1330 . -10) (undo-tree-id1331 . -10) (undo-tree-id1332 . -10) (undo-tree-id1333 . -10) (undo-tree-id1334 . -10) (undo-tree-id1335 . -10) (undo-tree-id1336 . -10) (undo-tree-id1337 . -10) (undo-tree-id1338 . -10) (undo-tree-id1339 . -10) (undo-tree-id1340 . -10) (undo-tree-id1341 . -10) (undo-tree-id1342 . -10) (undo-tree-id1343 . -10) (undo-tree-id1344 . -10) (undo-tree-id1345 . -10) (undo-tree-id1346 . -10) (undo-tree-id1347 . -10) (undo-tree-id1348 . -10) (undo-tree-id1349 . -10) (undo-tree-id1350 . -10) (undo-tree-id1351 . -10) (undo-tree-id1352 . -10) (undo-tree-id1353 . -10) (undo-tree-id1354 . -10) (undo-tree-id1355 . -10) (2583 . 2584) (#("''" 0 1 (face tree-sitter-hl-face:string fontified nil) 1 2 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 2583) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("'" 0 1 (face tree-sitter-hl-face:string fontified nil)) . 2584) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (2585 . 2586)) (25975 7730 619773 831000) 0 nil])
([nil nil ((223 . 228) (t 25975 8169 898850 2000)) nil (25975 8174 607591 756000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . -2583) (undo-tree-id596 . -1) (undo-tree-id598 . -1) (undo-tree-id600 . -1) (undo-tree-id602 . -1) (undo-tree-id604 . -1) (undo-tree-id606 . -1) (undo-tree-id608 . -1) (undo-tree-id610 . -1) (undo-tree-id612 . -1) (undo-tree-id614 . -1) (undo-tree-id616 . -1) (#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . -2584) (undo-tree-id619 . -1) (undo-tree-id621 . -1) (undo-tree-id623 . -1) 2585) ((2583 . 2585)) (25975 7730 581780 680000) 0 nil])
([nil nil ((228 . 233)) nil (25975 8174 607589 903000) 0 nil])
([nil nil ((2583 . 2595)) ((#("self.TF_TYPE" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 12 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2583) (undo-tree-id1232 . -12) (undo-tree-id1233 . -12) (undo-tree-id1234 . -12) (undo-tree-id1235 . -12) (undo-tree-id1236 . -12) (undo-tree-id1237 . -12) (undo-tree-id1238 . -12) (undo-tree-id1239 . -12) (undo-tree-id1240 . -12) (undo-tree-id1241 . -12) (undo-tree-id1242 . -12) (undo-tree-id1243 . -12) (undo-tree-id1244 . -12) (undo-tree-id1245 . -12) (undo-tree-id1246 . -12) (undo-tree-id1247 . -12) (undo-tree-id1248 . -12) (undo-tree-id1249 . -12) (undo-tree-id1250 . -12) (undo-tree-id1251 . -12) (undo-tree-id1252 . -12) (undo-tree-id1253 . -12) (undo-tree-id1254 . -12) (undo-tree-id1255 . -12) (undo-tree-id1256 . -12) (undo-tree-id1257 . -12) (undo-tree-id1258 . -12) (undo-tree-id1259 . -12) (undo-tree-id1260 . -12) (undo-tree-id1261 . -12) (undo-tree-id1262 . -12) (undo-tree-id1263 . -12) (undo-tree-id1264 . -12) (undo-tree-id1265 . -12) (undo-tree-id1266 . -12) (undo-tree-id1267 . -12) (undo-tree-id1268 . -12) (undo-tree-id1269 . -12) (undo-tree-id1270 . -12) (undo-tree-id1271 . -12) (undo-tree-id1272 . -12) (undo-tree-id1273 . -12) (undo-tree-id1274 . -12) (undo-tree-id1275 . -12) (undo-tree-id1276 . -12) (undo-tree-id1277 . -12) (undo-tree-id1278 . -12) (undo-tree-id1279 . -12) (undo-tree-id1280 . -12) (undo-tree-id1281 . -12) (undo-tree-id1282 . -12) (undo-tree-id1283 . -12)) (25975 7730 551089 976000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -230) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (#("h" 0 1 (fontified t)) . -231) (undo-tree-id1761 . -1) (#("e" 0 1 (fontified t)) . -232) (undo-tree-id1762 . -1) 233) nil (25975 9117 39365 467000) 0 nil])
([nil nil ((2595 . 2597) (t 25975 5287 46758 264000)) ((#(", " 0 1 (fontified t) 1 2 (fontified t)) . 2595) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -2) (undo-tree-id1221 . -1) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2)) (25975 7730 520838 871000) 0 nil])
([nil nil ((230 . 234)) ((#("heta" 0 4 (fontified t)) . 230) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4)) (25975 9117 734651 348000) 0 nil])
([nil nil ((2597 . 2668) (#(" " 0 1 (fontified nil)) . 2596) (2597 . 2598)) ((#("
" 0 1 (fontified nil)) . 2597) (2596 . 2597) (#("                                                                       " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t)) . 2597)) (25975 7730 489223 331000) 0 nil])
([nil nil ((1012 . 1014)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1012) (undo-tree-id1816 . -2) (undo-tree-id1817 . -2) (undo-tree-id1818 . -2) (undo-tree-id1819 . -2) (undo-tree-id1820 . -2) (undo-tree-id1821 . -2) (undo-tree-id1822 . -2) (undo-tree-id1823 . -2) (undo-tree-id1824 . -2) (undo-tree-id1825 . -2) (undo-tree-id1826 . -2)) (25975 9118 254937 501000) 0 nil])
([nil nil ((2596 . 2668)) ((#("
                                                                       " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t)) . 2596) (undo-tree-id1177 . -72) (undo-tree-id1178 . -1) (undo-tree-id1179 . -72) (undo-tree-id1180 . -72) (undo-tree-id1181 . -72) (undo-tree-id1182 . -72) (undo-tree-id1183 . -72) (undo-tree-id1184 . -72) (undo-tree-id1185 . -72) (undo-tree-id1186 . -72) (undo-tree-id1187 . -72) (undo-tree-id1188 . -72) (undo-tree-id1189 . -72)) (25975 7730 466457 88000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 1012) (#("." 0 1 (fontified t)) . 1012)) nil (25975 9127 75786 953000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -1012) (undo-tree-id1764 . -1) (undo-tree-id1766 . -1) (undo-tree-id1768 . -1) (undo-tree-id1770 . -1) (undo-tree-id1772 . -1) (undo-tree-id1774 . -1) (undo-tree-id1776 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1781 . -1) (undo-tree-id1783 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1013) (undo-tree-id1785 . -1) (undo-tree-id1787 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1792 . -1) (undo-tree-id1794 . -1) 1014) ((1012 . 1014)) (25975 9115 732630 915000) 0 nil])
([nil nil ((2668 . 2687)) ((#("thresh=self.THRESH," 0 6 (face tree-sitter-hl-face:label fontified nil) 6 7 (face tree-sitter-hl-face:operator fontified nil) 7 11 (face tree-sitter-hl-face:keyword fontified nil) 11 12 (fontified nil) 12 18 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 18 19 (fontified nil)) . 2668) (undo-tree-id1175 . -19) (undo-tree-id1176 . -19)) (25975 7730 465574 878000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -999) (undo-tree-id1831 . -1) 1000) nil (25975 9127 75784 747000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1079) (undo-tree-id1795 . -1) 1080 (t 25975 9077 386878 881000)) ((1079 . 1080)) (25975 9115 238349 321000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2686) (undo-tree-id625 . -1) (undo-tree-id627 . -1) (undo-tree-id629 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -1) 2687) ((2686 . 2687)) (25975 7730 464642 401000) 0 nil])
([nil nil ((999 . 1000)) nil (25975 9127 75765 377000) 0 nil])
([nil nil ((1079 . 1080)) ((#("i" 0 1 (fontified t)) . 1079)) (25975 9115 80191 259000) 0 nil] [nil nil ((1079 . 1080)) ((#("
" 0 1 (fontified t)) . 1079)) (25975 9089 778793 42000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#("
" 0 1 (fontified t)) . 2596) (t 25975 5306 970758 898000)) ((2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597)) (25975 7730 461479 832000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1006)) nil (25975 9127 75762 102000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1100)) ((1100 . 1101)) (25975 9114 921441 93000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596)) ((2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597)) (25975 7730 447405 536000) 0 nil])
([nil nil ((1006 . 1007)) nil (25975 9127 75756 930000) 0 nil])
([nil nil ((1100 . 1101)) ((#("i" 0 1 (fontified t)) . 1100)) (25975 9114 756262 421000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596)) ((2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597)) (25975 7730 307552 455000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1079) (t 25975 9127 346880 470000)) nil (25975 9136 871977 378000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1182) (undo-tree-id1797 . -1) 1183) ((1182 . 1183)) (25975 9114 597263 559000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596)) ((2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597) (2596 . 2597)) (25975 7730 273623 962000) 0 nil])
([nil nil ((1079 . 1080)) nil (25975 9136 871975 566000) 0 nil])
([nil nil ((1182 . 1183)) ((#("j" 0 1 (fontified t)) . 1182)) (25975 9114 442554 507000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified t)) . 2596) (#(" " 0 1 (fontified nil)) . 2596)) ((2596 . 2597) (2596 . 2597) (2596 . 2597)) (25975 7730 244235 732000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1100) (undo-tree-id1844 . -1) 1101) nil (25975 9136 871973 819000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1161) (undo-tree-id1796 . -1) 1162) ((1161 . 1162)) (25975 9114 289671 62000) 0 nil])
([nil nil ((2596 . 2597)) ((#(" " 0 1 (fontified t)) . 2596)) (25975 7730 217502 436000) 0 nil])
([nil nil ((1100 . 1101)) nil (25975 9136 871970 110000) 0 nil])
([nil nil ((1161 . 1162)) ((#("j" 0 1 (fontified t)) . 1161)) (25975 9114 116878 65000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#("
" 0 1 (fontified t)) . 2615)) ((2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616)) (25975 7730 187469 235000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1182) (undo-tree-id1843 . -1) 1183) nil (25975 9136 871968 315000) 0 nil])
([nil nil ((1012 . 1014)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1012) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -2) (undo-tree-id1801 . -2) (undo-tree-id1802 . -2) (undo-tree-id1803 . -2) (undo-tree-id1804 . -2) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) (undo-tree-id1808 . -2) (undo-tree-id1809 . -2) (undo-tree-id1810 . -2) (undo-tree-id1811 . -2) (undo-tree-id1812 . -2) (undo-tree-id1813 . -2) (undo-tree-id1814 . -2) (undo-tree-id1815 . -2) (t 25975 9098 690879 559000)) (25975 9098 354007 878000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified nil)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615)) ((2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616)) (25975 7730 152331 944000) 0 nil])
([nil nil ((1182 . 1183)) nil (25975 9136 871964 650000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615)) ((2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616)) (25975 7730 120592 960000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1161) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) 1162) nil (25975 9136 871960 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2615) (undo-tree-id637 . -1) (undo-tree-id639 . -1) (undo-tree-id641 . -1) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615) (#(" " 0 1 (fontified t)) . 2615)) ((2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616) (2615 . 2616)) (25975 7730 90759 164000) 0 nil])
([nil nil ((1161 . 1162)) nil (25975 9136 871923 13000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2617) (2616 . 2617) (2615 . 2617) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2615) (2615 . 2616) (t 25975 5335 274759 798000)) ((#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 2615) (2615 . 2616) (#("[]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2615) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2616) (2617 . 2618)) (25975 7730 59237 559000) 0 nil])
([nil nil ((#("_" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2180) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2181) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (#("Y" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2182) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2183) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2184) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (#("," 0 1 (fontified t)) . -2185) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (#(" " 0 1 (fontified t)) . -2186) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (#("s" 0 1 (fontified t)) . -2187) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -2188) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -2189) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -2190) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (#("." 0 1 (fontified t)) . -2191) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2192) (undo-tree-id3381 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2193) (undo-tree-id3382 . -1) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2194) (undo-tree-id3383 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2195) (undo-tree-id3384 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2196) (undo-tree-id3385 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2197) (undo-tree-id3386 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2198) (undo-tree-id3387 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -2199) (undo-tree-id3388 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2200) (undo-tree-id3389 . -1) 2201 (t 25975 9137 194880 784000)) nil (25975 9419 684491 99000) 0 nil])
([nil nil ((2616 . 2617)) ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 2616)) (25975 7730 29118 60000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2173) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (#("e" 0 1 (fontified t)) . -2174) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (#("l" 0 1 (fontified t)) . -2175) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -2176) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (#("." 0 1 (fontified t)) . -2177) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2178) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (#("F" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2179) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) 2180) nil (25975 9419 683566 217000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1211) 1212 (t 25975 5364 826760 739000)) ((1211 . 1212)) (25975 7729 999127 237000) 0 nil])
([nil nil ((2244 . 2256) (t 25975 9420 2889 783000)) nil (25975 9422 436215 914000) 0 nil])
([nil nil ((1211 . 1212)) ((#("j" 0 1 (fontified t)) . 1211)) (25975 7729 969039 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2252) (undo-tree-id3390 . -4) (undo-tree-id3391 . -4) (undo-tree-id3392 . -4) (undo-tree-id3393 . -4) (undo-tree-id3394 . -4) (undo-tree-id3395 . -4) (undo-tree-id3396 . -4) (undo-tree-id3397 . -4) (undo-tree-id3398 . -4) (undo-tree-id3399 . -4) (undo-tree-id3400 . -4) (undo-tree-id3401 . -4) (undo-tree-id3402 . -4) (undo-tree-id3403 . -4) 2256) nil (25975 9422 436209 612000) 0 nil])
([nil nil ((1211 . 1218) (t 25975 5758 770773 275000)) ((#("i_pop= " 0 1 (face tree-sitter-hl-face:label fontified t) 1 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:label fontified t) 3 4 (face tree-sitter-hl-face:label fontified t) 4 5 (face tree-sitter-hl-face:label fontified t) 5 6 (face tree-sitter-hl-face:operator fontified t) 6 7 (fontified t)) . 1211) (undo-tree-id1152 . -7) (undo-tree-id1153 . -7) (undo-tree-id1154 . -7) (undo-tree-id1155 . -7) (undo-tree-id1156 . -7) (undo-tree-id1157 . -7) (undo-tree-id1158 . -7) (undo-tree-id1159 . -7) (undo-tree-id1160 . -7) (undo-tree-id1161 . -7) (undo-tree-id1162 . -7)) (25975 7729 938130 759000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -1211) (undo-tree-id647 . -1) 1212) ((1211 . 1212)) (25975 5757 556830 577000) 0 nil])
([nil nil ((2173 . 2176) (t 25975 9422 766889 871000)) nil (25975 17273 329954 857000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1217) (undo-tree-id733 . -1) (undo-tree-id735 . -1) (undo-tree-id737 . -1) (undo-tree-id739 . -1) (undo-tree-id741 . -1) 1218) ((1217 . 1218)) (25975 7729 907128 619000) 0 nil])
([nil nil ((1211 . 1212)) ((#("i" 0 1 (fontified t)) . 1211)) (25975 5757 229755 419000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2175) (undo-tree-id3408 . -1) 2176) nil (25975 17273 329952 247000) 0 nil])
([nil nil ((1224 . 1230)) ((#("j_pop)" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1224) (undo-tree-id1130 . -5) (undo-tree-id1131 . -5) (undo-tree-id1132 . -5) (undo-tree-id1133 . -5) (undo-tree-id1134 . -5) (undo-tree-id1135 . -5) (undo-tree-id1136 . -5) (undo-tree-id1137 . -5) (undo-tree-id1138 . -5) (undo-tree-id1139 . -5) (undo-tree-id1140 . -6) (undo-tree-id1141 . -5) (undo-tree-id1142 . -6) (undo-tree-id1143 . -6) (undo-tree-id1144 . -6) (undo-tree-id1145 . -6) (undo-tree-id1146 . -6) (undo-tree-id1147 . -6) (undo-tree-id1148 . -6) (undo-tree-id1149 . -6) (undo-tree-id1150 . -6) (undo-tree-id1151 . -6)) (25975 7729 885755 729000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1218)) ((1218 . 1219)) (25975 5756 937259 496000) 0 nil])
([nil nil ((2175 . 2179)) nil (25975 17273 329948 178000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1229) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) 1230) ((1229 . 1230)) (25975 7729 860105 640000) 0 nil])
([nil nil ((1218 . 1219)) ((#("h" 0 1 (fontified t)) . 1218) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1)) (25975 5756 642236 954000) 0 nil])
([nil nil ((2179 . 2191)) nil (25975 17273 329946 294000) 0 nil])
([nil nil ((1229 . 1230)) ((#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 1229)) (25975 7729 823105 40000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1218) (undo-tree-id646 . -1) 1219) ((1218 . 1219)) (25975 5756 327281 316000) 0 nil])
([nil nil ((#("è" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2190) (undo-tree-id3407 . -1) 2191) nil (25975 17273 329944 204000) 0 nil])
([nil nil ((5387 . 5395) (t 25975 5791 386774 313000)) ((#("        " 0 8 (fontified t)) . 5387)) (25975 7729 794912 771000) 0 nil])
([nil nil ((1218 . 1219)) ((#("k" 0 1 (fontified t)) . 1218) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1)) (25975 5756 111318 836000) 0 nil])
([nil nil ((2190 . 2199)) nil (25975 17273 329940 154000) 0 nil])
([nil nil ((#("        result = []
" 0 8 (fontified t) 8 14 (face tree-sitter-hl-face:variable fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t)) . 3696) 3716) ((3696 . 3716)) (25975 7729 767907 308000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1218) (undo-tree-id644 . -1) 1219) ((1218 . 1219)) (25975 5755 768888 26000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2197) (undo-tree-id3405 . -1) (#("e" 0 1 (fontified t)) . -2198) (undo-tree-id3406 . -1) 2199) nil (25975 17273 329937 862000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4121 . 4122) (nil fontified nil 4121 . 4122) (nil fontified nil 4120 . 4121) (nil fontified nil 4119 . 4120) (nil fontified nil 4118 . 4119) (nil fontified nil 4117 . 4118) (nil fontified nil 4116 . 4117) (nil fontified nil 4110 . 4116) (nil fontified nil 4102 . 4110) (4102 . 4122)) ((#("        result = []
" 0 8 (fontified nil) 8 14 (face tree-sitter-hl-face:variable fontified nil) 14 15 (fontified nil) 15 16 (face tree-sitter-hl-face:operator fontified nil) 16 17 (fontified nil) 17 18 (face (rainbow-delimiters-depth-1-face) fontified nil) 18 19 (face (rainbow-delimiters-depth-1-face) fontified nil) 19 20 (rear-nonsticky nil fontified nil)) . 4102) (undo-tree-id1128 . -20) (undo-tree-id1129 . -20) (nil rear-nonsticky nil 4121 . 4122)) (25975 7729 739695 542000) 0 nil])
([nil nil ((1218 . 1219)) ((#("j" 0 1 (fontified t)) . 1218)) (25975 5755 386852 868000) 0 nil])
([nil nil ((2197 . 2198)) nil (25975 17273 329930 764000) 0 nil])
([nil nil ((4110 . 4114) 4102) ((#("    " 0 4 (fontified t)) . 4110)) (25975 7729 723212 92000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1305) (undo-tree-id671 . -1) 1306 (t 25975 5692 566771 168000)) ((1305 . 1306)) (25975 5755 180987 376000) 0 nil])
([nil nil ((2198 . 2210)) nil (25975 17273 329928 648000) 0 nil])
([nil nil ((#("        hidden = self.initRates()
" 0 8 (fontified t) 8 14 (face tree-sitter-hl-face:variable fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 21 (face tree-sitter-hl-face:keyword fontified t) 21 22 (fontified t) 22 31 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 34 (fontified t)) . 3717) 3751) ((3717 . 3751)) (25975 7729 722496 783000) 0 nil])
([nil nil ((1305 . 1306)) ((#("i" 0 1 (fontified t)) . 1305)) (25975 5754 918701 288000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -2209) (undo-tree-id3404 . -1) 2210) nil (25975 17273 329926 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4125 . 4126) (nil fontified nil 4125 . 4126) (nil fontified nil 4124 . 4125) (nil fontified nil 4123 . 4124) (nil fontified nil 4114 . 4123) (nil fontified nil 4113 . 4114) (nil fontified nil 4109 . 4113) (nil fontified nil 4108 . 4109) (nil fontified nil 4107 . 4108) (nil fontified nil 4106 . 4107) (nil fontified nil 4100 . 4106) (nil fontified nil 4092 . 4100) (4092 . 4126)) ((#("        hidden = self.initRates()
" 0 8 (fontified nil) 8 14 (face tree-sitter-hl-face:variable fontified nil) 14 15 (fontified nil) 15 16 (face tree-sitter-hl-face:operator fontified nil) 16 17 (fontified nil) 17 21 (face tree-sitter-hl-face:keyword fontified nil) 21 22 (fontified nil) 22 31 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 31 32 (face (rainbow-delimiters-depth-1-face) fontified nil) 32 33 (face (rainbow-delimiters-depth-1-face) fontified nil) 33 34 (rear-nonsticky nil fontified nil)) . 4092) (nil rear-nonsticky t 4125 . 4126)) (25975 7729 721414 162000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1326)) ((1326 . 1327)) (25975 5754 632933 256000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2217) (2216 . 2217) (2215 . 2217) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2215) (2209 . 2216)) nil (25975 17273 329904 885000) 0 nil])
([nil nil ((#("        hidden = self.initRates()
" 0 8 (fontified t) 8 14 (face tree-sitter-hl-face:variable fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 21 (face tree-sitter-hl-face:keyword fontified t) 21 22 (fontified t) 22 31 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 34 (rear-nonsticky t fontified t)) . 4092) (undo-tree-id744 . -34) (undo-tree-id746 . -34) (undo-tree-id748 . -34) (undo-tree-id750 . -34) (undo-tree-id752 . -34)) ((4092 . 4126)) (25975 7729 720510 115000) 0 nil])
([nil nil ((1326 . 1327)) ((#("i" 0 1 (fontified t)) . 1326)) (25975 5754 350782 297000) 0 nil])
([nil nil ((2216 . 2217)) nil (25975 17273 329896 190000) 0 nil])
([nil nil ((nil fontified nil 4092 . 4093) (nil fontified nil 4091 . 4092) (nil fontified nil 4090 . 4091) (nil fontified nil 4081 . 4090) (nil fontified nil 4080 . 4081) (nil fontified nil 4076 . 4080) (nil fontified nil 4075 . 4076) (nil fontified nil 4074 . 4075) (nil fontified nil 4073 . 4074) (nil fontified nil 4067 . 4073) (nil fontified nil 4059 . 4067) (4059 . 4093)) ((#("        hidden = self.initRates()
" 0 8 (fontified nil) 8 14 (face tree-sitter-hl-face:variable fontified nil) 14 15 (fontified nil) 15 16 (face tree-sitter-hl-face:operator fontified nil) 16 17 (fontified nil) 17 21 (face tree-sitter-hl-face:keyword fontified nil) 21 22 (fontified nil) 22 31 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 31 32 (face (rainbow-delimiters-depth-1-face) fontified nil) 32 33 (face (rainbow-delimiters-depth-1-face) fontified nil) 33 34 (fontified nil rear-nonsticky t)) . 4059) (undo-tree-id1125 . -34) (undo-tree-id1126 . -33) (undo-tree-id1127 . -34) (nil fontified t 4092 . 4093)) (25975 7729 703839 759000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1408) (undo-tree-id670 . -1) 1409) ((1408 . 1409)) (25975 5754 20787 916000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2197) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (#("h" 0 1 (fontified t)) . -2198) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (#("r" 0 1 (fontified t)) . -2199) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (#("e" 0 1 (fontified t)) . -2200) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (#("s" 0 1 (fontified t)) . -2201) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (#("h" 0 1 (fontified t)) . -2202) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2203) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (#("s" 0 1 (fontified t)) . -2204) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (#("e" 0 1 (fontified t)) . -2205) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (#("l" 0 1 (fontified t)) . -2206) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -2207) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (#("." 0 1 (fontified nil)) . -2208) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2209) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2210) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2211) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2212) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2213) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2214) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2215) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -2216) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2217) (undo-tree-id5556 . -1) 2218 (t 25975 17274 239139 723000)) nil (25975 17314 517986 576000) 0 nil])
([nil nil ((4067 . 4071) 4059) ((#("    " 0 4 (fontified t)) . 4067)) (25975 7729 549177 126000) 0 nil])
([nil nil ((1408 . 1409)) ((#("j" 0 1 (fontified t)) . 1408) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1)) (25975 5753 655147 728000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2176) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (#("_" 0 1 (fontified t)) . -2177) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (#("n" 0 1 (fontified t)) . -2178) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (#("a" 0 1 (fontified t)) . -2179) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (#("m" 0 1 (fontified t)) . -2180) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (#("e" 0 1 (fontified t)) . -2181) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2182) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (#("s" 0 1 (fontified t)) . -2183) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (#("e" 0 1 (fontified t)) . -2184) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (#("l" 0 1 (fontified t)) . -2185) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -2186) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (#("." 0 1 (fontified t)) . -2187) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2188) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (#("F" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2189) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (#("_" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2190) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2191) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (#("Y" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2192) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2193) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2194) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (#("," 0 1 (fontified nil)) . -2195) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (#(" " 0 1 (fontified nil)) . -2196) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) 2197) nil (25975 17314 517439 558000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -4096) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id764 . -1) (undo-tree-id766 . -1) 4097 (t 25975 5895 986777 641000)) ((4096 . 4097)) (25975 7729 520673 473000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1387) (undo-tree-id650 . -1) (undo-tree-id652 . -1) (undo-tree-id654 . -1) (undo-tree-id656 . -1) (undo-tree-id658 . -1) (undo-tree-id660 . -1) (undo-tree-id662 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id667 . -1) (undo-tree-id669 . -1) 1388) ((1387 . 1388)) (25975 5753 481340 625000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2173) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (#("u" 0 1 (fontified t)) . -2174) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (#("n" 0 1 (fontified t)) . -2175) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) 2176) nil (25975 17314 514153 311000) 0 nil])
([nil nil ((4105 . 4109) (4096 . 4097) (t 25975 5897 202777 680000)) ((#("
" 0 1 (fontified t)) . 4096) (#("    " 0 4 (fontified t)) . 4105)) (25975 7729 495882 460000) 0 nil])
([nil nil ((1387 . 1388)) ((#("j" 0 1 (fontified t)) . 1387) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (t 25975 5700 398771 417000)) (25975 5700 253826 295000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1865) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1866) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (#("q" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1867) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1868) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1869) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1870) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (#("z" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1871) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1872) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1873) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1874) (undo-tree-id5891 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1875) (undo-tree-id5892 . -1) 1876 (t 25975 17314 999141 20000)) nil (25975 18508 815234 878000) 0 nil])
([nil nil ((#("        # init rates
" 0 8 (fontified t) 8 20 (face tree-sitter-hl-face:comment fontified t) 20 21 (fontified t)) . -3696) (undo-tree-id768 . -21) (undo-tree-id770 . -21) 3717 (t 25975 5898 922777 735000)) ((3696 . 3717)) (25975 7729 476610 648000) 0 nil])
nil
([nil nil ((1865 . 1874) (t 25975 18509 155179 20000)) nil (25975 18623 828105 5000) 0 nil])
([nil nil ((#("i_pop" 0 5 (fontified t)) . -10315) (10320 . 10328) (#("i_pop" 0 5 (fontified t)) . -10219) (10224 . 10232) (#("i_pop" 0 5 (fontified t)) . -10161) (10166 . 10174) (#("i_pop" 0 5 (fontified t)) . -10022) (10027 . 10035) (#("i_pop" 0 5 (fontified t)) . -9924) (9929 . 9937) (#("i_pop" 0 5 (fontified t)) . -9862) (9867 . 9875) (#("i_pop" 0 5 (fontified t)) . -9544) (9549 . 9557) (#("i_pop" 0 5 (fontified t)) . -9460) (9465 . 9473) (#("i_pop" 0 5 (fontified t)) . -9337) (9342 . 9350) (#("i_pop" 0 5 (fontified t)) . -9263) (9268 . 9276) (#("i_pop" 0 5 (fontified t)) . -8993) (8998 . 9006) (#("i_pop" 0 5 (fontified t)) . -8753) (8758 . 8766) (#("i_pop" 0 5 (fontified nil)) . -8660) (8665 . 8673) (nil fontified t 8633 . 8638) (nil face tree-sitter-hl-face:variable 8633 . 8638) (#("i_pop" 0 5 (face tree-sitter-hl-face:variable fontified t)) . -8630) (8635 . 8643) (#("i_pop" 0 5 (fontified t)) . -8585) (8590 . 8598) (#("i_pop" 0 5 (fontified t)) . -7941) (7946 . 7954) (#("i_pop" 0 5 (fontified t)) . -7551) (7556 . 7564) (#("i_pop" 0 5 (fontified t)) . -6642) (6647 . 6655) (nil fontified t 6457 . 6462) (#("i_pop" 0 5 (fontified t)) . -6454) (6459 . 6467) (nil fontified t 6409 . 6414) (t 25975 5902 54777 835000) (nil face tree-sitter-hl-face:variable.parameter 6409 . 6414) (t 25975 5902 54777 835000) (#("i_pop" 0 5 (face tree-sitter-hl-face:variable.parameter fontified t)) . -6406) (t 25975 5902 54777 835000) (6411 . 6419) (t 25975 5902 54777 835000)) ((#("post_pop" 0 8 (face tree-sitter-hl-face:variable.parameter fontified nil)) . 6411) (6406 . 6411) (#("post_pop" 0 8 (fontified nil)) . 6459) (6454 . 6459) (#("post_pop" 0 8 (fontified nil)) . 6647) (6642 . 6647) (#("post_pop" 0 8 (fontified nil)) . 7556) (7551 . 7556) (#("post_pop" 0 8 (fontified nil)) . 7946) (7941 . 7946) (#("post_pop" 0 8 (fontified nil)) . 8590) (8585 . 8590) (#("post_pop" 0 3 (fontified nil face tree-sitter-hl-face:variable) 3 8 (fontified nil face tree-sitter-hl-face:variable)) . 8635) (8630 . 8635) (nil fontified nil 8633 . 8638) (#("post_pop" 0 8 (fontified nil)) . 8665) (8660 . 8665) (#("post_pop" 0 8 (fontified nil)) . 8758) (8753 . 8758) (#("post_pop" 0 8 (fontified nil)) . 8998) (8993 . 8998) (#("post_pop" 0 8 (fontified nil)) . 9268) (9263 . 9268) (#("post_pop" 0 8 (fontified nil)) . 9342) (9337 . 9342) (#("post_pop" 0 8 (fontified nil)) . 9465) (9460 . 9465) (#("post_pop" 0 8 (fontified nil)) . 9549) (9544 . 9549) (#("post_pop" 0 8 (fontified nil)) . 9867) (9862 . 9867) (#("post_pop" 0 8 (fontified nil)) . 9929) (9924 . 9929) (#("post_pop" 0 8 (fontified nil)) . 10027) (10022 . 10027) (#("post_pop" 0 8 (fontified nil)) . 10166) (10161 . 10166) (#("post_pop" 0 8 (fontified nil)) . 10224) (10219 . 10224) (#("post_pop" 0 8 (fontified nil)) . 10320) (10315 . 10320)) (25975 7729 430441 240000) 0 nil])
([nil nil ((1880 . 1881) (1879 . 1881) (#("(" 0 1 (fontified nil)) . -1879) (1874 . 1880)) nil (25975 18623 828102 500000) 0 nil])
([nil nil ((#("j_pop" 0 5 (fontified t)) . -10367) (10372 . 10379) (#("j_pop" 0 5 (fontified t)) . -10269) (10274 . 10281) (#("j_pop" 0 5 (fontified t)) . -10209) (10214 . 10221) (#("j_pop" 0 5 (fontified t)) . -10068) (10073 . 10080) (#("j_pop" 0 5 (fontified t)) . -9968) (9973 . 9980) (#("j_pop" 0 5 (fontified t)) . -9904) (9909 . 9916) (#("j_pop" 0 5 (fontified t)) . -9584) (9589 . 9596) (#("j_pop" 0 5 (fontified t)) . -9498) (9503 . 9510) (#("j_pop" 0 5 (fontified t)) . -9373) (9378 . 9385) (#("j_pop" 0 5 (fontified t)) . -9297) (9302 . 9309) (#("j_pop" 0 5 (fontified t)) . -9025) (9030 . 9037) (#("j_pop" 0 5 (fontified t)) . -8783) (8788 . 8795) (#("j_pop" 0 5 (fontified nil)) . -8688) (8693 . 8700) (nil face tree-sitter-hl-face:variable 8658 . 8663) (nil fontified t 8658 . 8663) (#("j_pop" 0 5 (fontified t face tree-sitter-hl-face:variable)) . -8656) (8661 . 8668) (#("j_pop" 0 5 (fontified t)) . -8609) (8614 . 8621) (#("j_pop" 0 5 (fontified t)) . -7963) (7968 . 7975) (nil fontified t 7743 . 7748) (#("j_pop" 0 5 (fontified t)) . -7741) (7746 . 7753) (#("j_pop" 0 5 (fontified t)) . -7569) (7574 . 7581) (#("j_pop" 0 5 (fontified t)) . -6658) (6663 . 6670) (nil fontified t 6519 . 6524) (#("j_pop" 0 5 (fontified t)) . -6517) (6522 . 6529) (nil fontified t 6489 . 6494) (#("j_pop" 0 5 (fontified t)) . -6487) (6492 . 6499) (nil fontified t 6418 . 6423) (nil face tree-sitter-hl-face:variable.parameter 6418 . 6423) (#("j_pop" 0 5 (face tree-sitter-hl-face:variable.parameter fontified t)) . -6416) (6421 . 6428)) ((#("pre_pop" 0 2 (fontified nil face tree-sitter-hl-face:variable.parameter) 2 7 (fontified nil face tree-sitter-hl-face:variable.parameter)) . 6421) (6416 . 6421) (nil fontified nil 6418 . 6423) (#("pre_pop" 0 2 (fontified nil) 2 7 (fontified nil)) . 6492) (6487 . 6492) (nil fontified nil 6489 . 6494) (#("pre_pop" 0 2 (fontified nil) 2 7 (fontified nil)) . 6522) (6517 . 6522) (nil fontified nil 6519 . 6524) (#("pre_pop" 0 7 (fontified nil)) . 6663) (6658 . 6663) (#("pre_pop" 0 7 (fontified nil)) . 7574) (7569 . 7574) (#("pre_pop" 0 2 (fontified nil) 2 7 (fontified nil)) . 7746) (7741 . 7746) (nil fontified nil 7743 . 7748) (#("pre_pop" 0 7 (fontified nil)) . 7968) (7963 . 7968) (#("pre_pop" 0 7 (fontified nil)) . 8614) (8609 . 8614) (#("pre_pop" 0 2 (fontified nil face tree-sitter-hl-face:variable) 2 7 (fontified nil face tree-sitter-hl-face:variable)) . 8661) (8656 . 8661) (nil fontified nil 8658 . 8663) (#("pre_pop" 0 7 (fontified nil)) . 8693) (8688 . 8693) (#("pre_pop" 0 7 (fontified nil)) . 8788) (8783 . 8788) (#("pre_pop" 0 7 (fontified nil)) . 9030) (9025 . 9030) (#("pre_pop" 0 7 (fontified nil)) . 9302) (9297 . 9302) (#("pre_pop" 0 7 (fontified nil)) . 9378) (9373 . 9378) (#("pre_pop" 0 7 (fontified nil)) . 9503) (9498 . 9503) (#("pre_pop" 0 7 (fontified nil)) . 9589) (9584 . 9589) (#("pre_pop" 0 7 (fontified nil)) . 9909) (9904 . 9909) (#("pre_pop" 0 7 (fontified nil)) . 9973) (9968 . 9973) (#("pre_pop" 0 7 (fontified nil)) . 10073) (10068 . 10073) (#("pre_pop" 0 7 (fontified nil)) . 10214) (10209 . 10214) (#("pre_pop" 0 7 (fontified nil)) . 10274) (10269 . 10274) (#("pre_pop" 0 7 (fontified nil)) . 10372) (10367 . 10372)) (25975 7729 390005 121000) 0 nil])
([nil nil ((#("à" 0 1 (fontified t)) . -1880) (undo-tree-id5895 . -1) 1881) nil (25975 18623 828099 258000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:label fontified t)) . -1211) 1212 (t 25975 6026 426781 792000)) ((1211 . 1212)) (25975 7729 359347 939000) 0 nil])
([nil nil ((1880 . 1885)) nil (25975 18623 828094 499000) 0 nil])
([nil nil ((1211 . 1213)) ((#("pr" 0 1 (face tree-sitter-hl-face:label fontified t) 1 2 (face tree-sitter-hl-face:label fontified t)) . 1211) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -2) (undo-tree-id1114 . -1) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2) (undo-tree-id1124 . -2)) (25975 7729 329183 119000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1887) (1886 . 1887) (1885 . 1887) (#("[" 0 1 (fontified nil)) . -1885) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (1885 . 1886)) nil (25975 18623 828090 181000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:label fontified t)) . -1212) (undo-tree-id827 . -1) (undo-tree-id829 . -1) (undo-tree-id831 . -1) 1213) ((1212 . 1213)) (25975 7729 299215 261000) 0 nil])
([nil nil ((1886 . 1887)) nil (25975 18623 828064 281000) 0 nil])
([nil nil ((1212 . 1213)) ((#("s" 0 1 (face tree-sitter-hl-face:label fontified t)) . 1212) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1)) (25975 7729 268118 918000) 0 nil])
([nil nil ((#("        print(noise[0])
" 0 8 (fontified t) 8 13 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-2-face) fontified t) 20 21 (face tree-sitter-hl-face:number fontified t) 21 22 (face (rainbow-delimiters-depth-2-face) fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t)) . -1866) (undo-tree-id5896 . -21) (undo-tree-id5897 . -21) (undo-tree-id5898 . -21) (undo-tree-id5899 . -21) (undo-tree-id5900 . -21) (undo-tree-id5901 . -21) (undo-tree-id5902 . -21) (undo-tree-id5903 . -21) (undo-tree-id5904 . -21) (undo-tree-id5905 . -21) (undo-tree-id5906 . -21) (undo-tree-id5907 . -21) (undo-tree-id5908 . -21) (undo-tree-id5909 . -21) (undo-tree-id5910 . -21) (undo-tree-id5911 . -21) (undo-tree-id5912 . -21) (undo-tree-id5913 . -21) (undo-tree-id5914 . -21) (undo-tree-id5915 . -21) (undo-tree-id5916 . -21) (undo-tree-id5917 . -24) (undo-tree-id5918 . -24) (undo-tree-id5919 . -24) (undo-tree-id5920 . -24) (undo-tree-id5921 . -24) (undo-tree-id5922 . -24) (undo-tree-id5923 . -24) (undo-tree-id5924 . -24) (undo-tree-id5925 . -21) (undo-tree-id5926 . -24) (undo-tree-id5927 . -24) (undo-tree-id5928 . -24) (undo-tree-id5929 . -24) (undo-tree-id5930 . -24) 1890 (t 25975 18624 211182 682000)) nil (25975 18664 783921 637000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:label fontified t)) . -1212) 1213) ((1212 . 1213)) (25975 7729 238438 400000) 0 nil])
([nil nil ((1467 . 1475) (t 25975 18665 151183 984000)) nil (25975 18746 380660 582000) 0 nil])
([nil nil ((1212 . 1215)) ((#("ost" 0 1 (face tree-sitter-hl-face:label fontified t) 1 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:label fontified t)) . 1212)) (25975 7729 207699 280000) 0 nil])
([nil nil ((1598 . 1606)) nil (25975 18746 380658 376000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:label fontified t)) . -1227) (undo-tree-id784 . -1) (undo-tree-id786 . -1) (undo-tree-id788 . -1) (undo-tree-id790 . -1) (undo-tree-id792 . -1) (undo-tree-id794 . -1) (undo-tree-id796 . -1) (undo-tree-id798 . -1) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1) (undo-tree-id808 . -1) (undo-tree-id810 . -1) (undo-tree-id812 . -1) (#("_" 0 1 (face tree-sitter-hl-face:label fontified t)) . -1228) (undo-tree-id815 . -1) (undo-tree-id817 . -1) (undo-tree-id819 . -1) (undo-tree-id821 . -1) (undo-tree-id823 . -1) 1229) ((1227 . 1229)) (25975 7729 177289 36000) 0 nil])
([nil nil ((1920 . 1928)) nil (25975 18746 380653 799000) 0 nil])
([nil nil ((1227 . 1231)) ((#("preç" 0 1 (face tree-sitter-hl-face:label fontified t) 1 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:label fontified t) 3 4 (face tree-sitter-hl-face:label fontified t)) . 1227) (undo-tree-id1052 . -3) (undo-tree-id1053 . -3) (undo-tree-id1054 . -3) (undo-tree-id1055 . -3) (undo-tree-id1056 . -3) (undo-tree-id1057 . -3) (undo-tree-id1058 . -3) (undo-tree-id1059 . -3) (undo-tree-id1060 . -3) (undo-tree-id1061 . -4) (undo-tree-id1062 . -3) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4)) (25975 7729 146231 362000) 0 nil])
([nil nil ((1954 . 1958) (t 25975 18746 627186 577000)) nil (25975 18801 13667 150000) 0 nil])
([nil nil ((#("ç" 0 1 (face tree-sitter-hl-face:label fontified t)) . -1230) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) 1231) ((1230 . 1231)) (25975 7729 122126 106000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1954) (undo-tree-id5931 . -4) (undo-tree-id5932 . -4) (undo-tree-id5933 . -4) (undo-tree-id5934 . -4) (undo-tree-id5935 . -4) (undo-tree-id5936 . -4) (undo-tree-id5937 . -4) (undo-tree-id5938 . -4) (undo-tree-id5939 . -4) (undo-tree-id5940 . -4) (undo-tree-id5941 . -4) (undo-tree-id5942 . -4) (undo-tree-id5943 . -4) (undo-tree-id5944 . -4) 1958) nil (25975 18801 13663 727000) 0 nil])
([nil nil ((1230 . 1231)) ((#("_" 0 1 (face tree-sitter-hl-face:label fontified t)) . 1230)) (25975 7729 110389 226000) 0 nil])
([nil nil ((1954 . 1958)) nil (25975 18801 13636 31000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1220) 1221 (t 25975 6053 106782 641000)) ((1220 . 1221)) (25975 7729 109795 316000) 0 nil])
([nil nil ((apply -2 3600 3677 undo--wrap-and-run-primitive-undo 3600 3677 ((3608 . 3610) 3630))) nil (25975 18828 15764 712000) 0 nil])
([nil nil ((1220 . 1221)) ((#("i" 0 1 (fontified nil)) . 1220) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1)) (25975 7729 109136 201000) 0 nil])
([nil nil ((3631 . 3640)) nil (25975 18828 15763 456000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1220) 1221) ((1220 . 1221)) (25975 7729 97212 563000) 0 nil])
([nil nil ((3640 . 3646)) nil (25975 18828 15761 778000) 0 nil])
([nil nil ((1220 . 1221)) ((#("i" 0 1 (fontified t)) . 1220)) (25975 7728 964151 333000) 0 nil])
([nil nil ((3646 . 3648)) nil (25975 18828 15757 258000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1235) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) 1236) ((1235 . 1236)) (25975 7728 934271 890000) 0 nil])
([nil nil ((#("        if 0==0:
" 0 8 (fontified t) 8 10 (face tree-sitter-hl-face:keyword fontified t) 10 11 (fontified t) 11 12 (face tree-sitter-hl-face:number fontified t) 12 14 (face tree-sitter-hl-face:operator fontified t) 14 15 (face tree-sitter-hl-face:number fontified t) 15 16 (fontified t) 16 17 (fontified t)) . -3632) (undo-tree-id5945 . -16) (undo-tree-id5946 . -16) (undo-tree-id5947 . -16) (undo-tree-id5948 . -16) (undo-tree-id5949 . -16) (undo-tree-id5950 . -16) (undo-tree-id5951 . -17) 3649 (t 25975 18828 255189 175000)) nil (25975 18848 471070 254000) 0 nil])
([nil nil ((1235 . 1236)) ((#("j" 0 1 (fontified t)) . 1235) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1)) (25975 7728 904423 607000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3608) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 3608)) nil (25975 18848 471039 923000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1322) 1323 (t 25975 6086 446783 702000)) ((1322 . 1323)) (25975 7728 874307 210000) 0 nil])
([nil nil ((3955 . 3983) (t 25975 18848 719189 826000)) nil (25975 18851 915649 135000) 0 nil])
([nil nil ((1322 . 1323)) ((#("i" 0 1 (fontified t)) . 1322)) (25975 7728 843972 37000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3979) (undo-tree-id5952 . -4) (undo-tree-id5953 . -4) (undo-tree-id5954 . -4) (undo-tree-id5955 . -4) (undo-tree-id5956 . -4) (undo-tree-id5957 . -4) (undo-tree-id5958 . -4) (undo-tree-id5959 . -4) (undo-tree-id5960 . -4) (undo-tree-id5961 . -4) (undo-tree-id5962 . -4) (undo-tree-id5963 . -4) (undo-tree-id5964 . -4) (undo-tree-id5965 . -4) 3983) nil (25975 18851 915642 615000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1343)) ((1343 . 1344)) (25975 7728 814300 174000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4048) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) 4049 (t 25975 18852 163189 936000)) nil (25975 18856 994396 587000) 0 nil])
([nil nil ((1343 . 1344)) ((#("i" 0 1 (fontified t)) . 1343)) (25975 7728 784423 899000) 0 nil])
([nil nil ((4108 . 4116)) nil (25975 18856 994364 468000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1235) 1236) ((1235 . 1236)) (25975 7728 753343 989000) 0 nil])
([nil nil ((12478 . 12486) (t 25975 18857 239190 97000)) nil (25976 14560 720383 136000) 0 nil])
([nil nil ((1235 . 1236)) ((#("i" 0 1 (fontified t)) . 1235)) (25975 7728 723265 283000) 0 nil])
([nil nil ((apply -6 6445 6652 undo--wrap-and-run-primitive-undo 6445 6652 ((6598 . 6600) (6521 . 6523) (6457 . 6459) 6645))) nil (25976 14560 720381 213000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1220) 1221) ((1220 . 1221)) (25975 7728 692176 685000) 0 nil])
([nil nil ((6651 . 6663)) nil (25976 14560 720377 99000) 0 nil])
([nil nil ((1220 . 1221)) ((#("j" 0 1 (fontified t)) . 1220) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1)) (25975 7728 662110 543000) 0 nil])
([nil nil ((1730 . 1738) (t 25976 14561 17138 882000)) nil (25976 14973 237721 113000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1404)) ((1404 . 1405)) (25975 7728 640193 596000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1894) (1893 . 1894) (1892 . 1894) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1892) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (1889 . 1893) (t 25976 14973 465152 7000)) nil (25976 14985 923531 951000) 0 nil])
([nil nil ((1404 . 1405)) ((#("j" 0 1 (fontified t)) . 1404)) (25975 7728 603058 414000) 0 nil])
([nil nil ((1893 . 1899)) nil (25976 14985 923495 83000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1425)) ((1425 . 1426)) (25975 7728 574032 571000) 0 nil])
([nil nil ((1893 . 1898) (t 25976 14986 145152 410000)) nil (25976 14990 200796 382000) 0 nil])
([nil nil ((1425 . 1426)) ((#("j" 0 1 (fontified t)) . 1425)) (25975 7728 560101 319000) 0 nil])
([nil nil ((469 . 471) (t 25976 14990 429152 547000)) nil (25976 15250 580873 146000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1279) (1278 . 1279) (1277 . 1279) (#("(" 0 1 (fontified nil)) . -1277) (1272 . 1278) (t 25975 6109 550784 438000)) ((#("print(" 0 5 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 5 6 (fontified nil)) . 1272) (undo-tree-id1008 . -5) (undo-tree-id1009 . -5) (undo-tree-id1010 . -5) (undo-tree-id1011 . -5) (undo-tree-id1012 . -5) (undo-tree-id1013 . -5) (undo-tree-id1014 . -5) (undo-tree-id1015 . -5) (undo-tree-id1016 . -5) (undo-tree-id1017 . -5) (undo-tree-id1018 . -5) (1277 . 1278) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1277) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1278) (1279 . 1280)) (25975 7728 513063 17000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -469) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t)) . -470) (undo-tree-id24 . -1) 471) nil (25976 15250 580871 535000) 0 nil])
([nil nil ((1278 . 1286)) ((#("W0.shape" 0 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 2 3 (fontified t) 3 8 (face tree-sitter-hl-face:property fontified t)) . 1278)) (25975 7728 482124 868000) 0 nil])
([nil nil ((469 . 472)) nil (25976 15250 580868 49000) 0 nil])
([nil nil ((1241 . 1243) (t 25975 6216 202787 831000)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1241)) (25975 7728 452026 444000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -471) (undo-tree-id22 . -1) 472) nil (25976 15250 580866 703000) 0 nil])
([nil nil ((#("                print(W0.shape)
" 0 3 (fontified t) 3 11 (fontified t) 11 16 (fontified t) 16 21 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 24 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 24 25 (fontified t) 25 30 (face tree-sitter-hl-face:property fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t)) . -1258) (undo-tree-id850 . -16) (undo-tree-id852 . -30) (undo-tree-id854 . -30) (undo-tree-id856 . -30) (undo-tree-id858 . -32) (undo-tree-id860 . -32) (undo-tree-id862 . -32) (undo-tree-id864 . -32) (undo-tree-id866 . -32) (undo-tree-id868 . -32) 1290 (t 25975 6265 718789 407000)) ((1258 . 1290)) (25975 7728 421152 943000) 0 nil])
([nil nil ((471 . 476)) nil (25976 15250 580864 230000) 0 nil])
([nil nil ((1257 . 1274)) ((#("
                " 0 1 (fontified t) 1 17 (fontified t)) . 1257)) (25975 7728 389725 270000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -475) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 476) nil (25976 15250 580861 193000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1220) 1221 (t 25975 6299 686790 488000)) ((1220 . 1221)) (25975 7728 365004 269000) 0 nil])
([nil nil ((475 . 482)) nil (25976 15250 580825 232000) 0 nil])
([nil nil ((1220 . 1221)) ((#("i" 0 1 (fontified nil)) . 1220)) (25975 7728 364330 107000) 0 nil])
([nil nil ((#("        # self.EXP_DT_TAU = []
        # self.DT_TAU = []

        # for i_pop in range(self.N_POP):
        #     self.EXP_DT_TAU.append(np.exp(-self.DT / self.TAU[i_pop]))
        #     self.DT_TAU.append(self.DT / self.TAU[i_pop])

        # self.DT_TAU = torch.tensor(self.DT_TAU, dtype=self.FLOAT, device=self.device)
        # self.EXP_DT_TAU = torch.tensor(self.EXP_DT_TAU, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 30 (face tree-sitter-hl-face:comment fontified t) 30 39 (fontified t) 39 57 (face tree-sitter-hl-face:comment fontified t) 57 67 (fontified t) 67 100 (face tree-sitter-hl-face:comment fontified t) 100 109 (fontified t) 109 173 (face tree-sitter-hl-face:comment fontified t) 173 182 (fontified t) 182 233 (face tree-sitter-hl-face:comment fontified t) 233 243 (fontified t) 243 322 (face tree-sitter-hl-face:comment fontified t) 322 331 (fontified t) 331 418 (face tree-sitter-hl-face:comment fontified t) 418 419 (fontified t)) . 10371) (undo-tree-id45 . -419) (undo-tree-id46 . -31) (undo-tree-id47 . -101) (undo-tree-id48 . -174) (undo-tree-id49 . -235) (undo-tree-id50 . -323) (undo-tree-id51 . -342) (undo-tree-id52 . -342) (t 25976 15250 801160 832000)) nil (25976 15514 909979 565000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1235)) ((1235 . 1236)) (25975 7728 363772 80000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10369) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("
" 0 1 (fontified t)) . -10370) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 10371) nil (25976 15514 909967 165000) 0 nil])
([nil nil ((1235 . 1236)) ((#("j" 0 1 (fontified nil)) . 1235)) (25975 7728 363170 927000) 0 nil])
([nil nil ((10960 . 10968) (t 25976 15515 177169 245000)) nil (25976 15517 469014 765000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 1241) (undo-tree-id871 . -1) (undo-tree-id873 . -1) (#("." 0 1 (fontified t)) . 1241)) ((1241 . 1242) (1241 . 1242)) (25975 7728 350086 454000) 0 nil])
([nil nil ((11382 . 11390) (t 25976 15517 713169 326000)) nil (25976 15520 884854 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2776 . 2777) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2766 . 2775) (nil fontified nil 2765 . 2766) (nil fontified nil 2764 . 2765) (nil fontified nil 2763 . 2764) (nil fontified nil 2762 . 2763) (nil fontified nil 2761 . 2762) (nil fontified nil 2755 . 2761) (nil fontified nil 2754 . 2755) (nil fontified nil 2750 . 2754) (nil fontified nil 2749 . 2750) (nil fontified nil 2743 . 2749) (nil fontified nil 2741 . 2743) (nil fontified nil 2734 . 2741) (nil fontified nil 2733 . 2734) (nil fontified nil 2729 . 2733) (nil fontified nil 2728 . 2729) (nil fontified nil 2719 . 2728) (nil fontified nil 2718 . 2719) (nil fontified nil 2708 . 2718) (nil fontified nil 2707 . 2708) (nil fontified nil 2706 . 2707) (nil fontified nil 2705 . 2706) (nil fontified nil 2699 . 2705) (nil fontified nil 2698 . 2699) (nil fontified nil 2694 . 2698) (nil fontified nil 2693 . 2694) (nil fontified nil 2692 . 2693) (nil fontified nil 2685 . 2692) (nil fontified nil 2684 . 2685) (nil fontified nil 2683 . 2684) (nil fontified nil 2673 . 2683) (nil fontified nil 2672 . 2673) (nil fontified nil 2668 . 2672) (nil fontified nil 2667 . 2668) (nil fontified nil 2666 . 2667) (nil fontified nil 2665 . 2666) (nil fontified nil 2660 . 2665) (nil fontified nil 2648 . 2660) (2648 . 2777) (t 25975 6330 430791 466000)) ((#("            rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation(func_name=self.TF_TYPE, thresh=self.THRESH[0])(net_input)
" 0 12 (fontified nil) 12 17 (face tree-sitter-hl-face:variable fontified nil) 17 18 (fontified nil) 18 19 (face tree-sitter-hl-face:operator fontified nil) 19 20 (fontified nil) 20 24 (face tree-sitter-hl-face:keyword fontified nil) 24 25 (fontified nil) 25 31 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 31 35 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 35 36 (fontified nil) 36 37 (face tree-sitter-hl-face:operator fontified nil) 37 44 (fontified nil) 44 45 (face tree-sitter-hl-face:operator fontified nil) 45 46 (fontified nil) 46 50 (face tree-sitter-hl-face:keyword fontified nil) 50 51 (fontified nil) 51 57 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 57 58 (fontified nil) 58 59 (face tree-sitter-hl-face:operator fontified nil) 59 60 (fontified nil) 60 70 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 70 71 (face (rainbow-delimiters-depth-1-face) fontified nil) 71 72 (face tree-sitter-hl-face:label fontified nil) 72 73 (face tree-sitter-hl-face:label fontified nil) 73 74 (face tree-sitter-hl-face:label fontified nil) 74 75 (face tree-sitter-hl-face:label fontified nil) 75 76 (face tree-sitter-hl-face:label fontified nil) 76 77 (face tree-sitter-hl-face:label fontified nil) 77 78 (face tree-sitter-hl-face:label fontified nil) 78 79 (face tree-sitter-hl-face:label fontified nil) 79 80 (face tree-sitter-hl-face:label fontified nil) 80 81 (face tree-sitter-hl-face:operator fontified nil) 81 82 (face tree-sitter-hl-face:keyword fontified nil) 82 83 (face tree-sitter-hl-face:keyword fontified nil) 83 84 (face tree-sitter-hl-face:keyword fontified nil) 84 85 (face tree-sitter-hl-face:keyword fontified nil) 85 86 (fontified nil) 86 87 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 87 88 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 88 89 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 89 90 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 90 91 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 91 92 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 92 93 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 93 94 (fontified nil) 94 95 (fontified nil) 95 96 (face tree-sitter-hl-face:label fontified nil) 96 97 (face tree-sitter-hl-face:label fontified nil) 97 98 (face tree-sitter-hl-face:label fontified nil) 98 99 (face tree-sitter-hl-face:label fontified nil) 99 100 (face tree-sitter-hl-face:label fontified nil) 100 101 (face tree-sitter-hl-face:label fontified nil) 101 102 (face tree-sitter-hl-face:operator fontified nil) 102 103 (face tree-sitter-hl-face:keyword fontified nil) 103 104 (face tree-sitter-hl-face:keyword fontified nil) 104 105 (face tree-sitter-hl-face:keyword fontified nil) 105 106 (face tree-sitter-hl-face:keyword fontified nil) 106 107 (fontified nil) 107 108 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 108 109 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 109 110 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 110 111 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 111 112 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 112 113 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 113 114 (face (rainbow-delimiters-depth-2-face) fontified nil) 114 115 (face tree-sitter-hl-face:number fontified nil) 115 116 (face (rainbow-delimiters-depth-2-face) fontified nil) 116 117 (face (rainbow-delimiters-depth-1-face) fontified nil) 117 118 (face (rainbow-delimiters-depth-1-face) fontified nil) 118 127 (fontified nil) 127 128 (face (rainbow-delimiters-depth-1-face) fontified nil) 128 129 (rear-nonsticky nil fontified nil)) . 2648) (undo-tree-id1007 . -116) (nil rear-nonsticky nil 2776 . 2777)) (25975 7728 205388 994000) 0 nil])
([nil nil ((#("        noise = self.ff_normal.sample((self.N_NEURON,)).to(self.device)
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 30 (face tree-sitter-hl-face:property fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 43 (face tree-sitter-hl-face:keyword fontified t) 43 44 (fontified t) 44 52 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (fontified t) 56 58 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 58 59 (face (rainbow-delimiters-depth-1-face) fontified t) 59 63 (face tree-sitter-hl-face:keyword fontified t) 63 64 (fontified t) 64 70 (face tree-sitter-hl-face:property fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t)) . 1847) (undo-tree-id78 . -8) (undo-tree-id79 . -70) (undo-tree-id80 . -70) (undo-tree-id81 . -70) (undo-tree-id82 . -64) (undo-tree-id83 . -64) (undo-tree-id84 . -64) (undo-tree-id85 . -64) (undo-tree-id86 . -64) (undo-tree-id87 . -64) (undo-tree-id88 . -64) (undo-tree-id89 . -72) 1919 (t 25976 15521 101169 434000)) nil (25976 15655 431385 684000) 0 nil])
([nil nil ((apply -2 2519 2779 undo--wrap-and-run-primitive-undo 2519 2779 ((2531 . 2533) 2648))) ((apply 2 2519 2777 undo--wrap-and-run-primitive-undo 2519 2777 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2531) 2766))) (25975 7728 179253 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1646 . 1647) (nil fontified nil 1646 . 1647) (nil fontified nil 1645 . 1646) (nil fontified nil 1639 . 1645) (nil fontified nil 1638 . 1639) (nil fontified nil 1634 . 1638) (nil fontified nil 1633 . 1634) (nil fontified nil 1631 . 1633) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1619 . 1627) (nil fontified nil 1618 . 1619) (nil fontified nil 1614 . 1618) (nil fontified nil 1613 . 1614) (nil fontified nil 1612 . 1613) (nil fontified nil 1606 . 1612) (nil fontified nil 1605 . 1606) (nil fontified nil 1596 . 1605) (nil fontified nil 1595 . 1596) (nil fontified nil 1591 . 1595) (nil fontified nil 1590 . 1591) (nil fontified nil 1589 . 1590) (nil fontified nil 1588 . 1589) (nil fontified nil 1583 . 1588) (nil fontified nil 1575 . 1583) (1575 . 1647)) nil (25976 15655 431371 337000) 0 nil])
([nil nil ((#("t" 0 1 (fontified nil)) . -2745) (undo-tree-id2485 . -1) (undo-tree-id2487 . -1) (undo-tree-id2489 . -1) (undo-tree-id2491 . -1) (undo-tree-id2493 . -1) (undo-tree-id2495 . -1) (undo-tree-id2497 . -1) (undo-tree-id2499 . -1) (#("h" 0 1 (fontified nil)) . -2746) (undo-tree-id2501 . -1) (undo-tree-id2503 . -1) (undo-tree-id2505 . -1) (undo-tree-id2507 . -1) (undo-tree-id2509 . -1) (undo-tree-id2511 . -1) (undo-tree-id2513 . -1) (#("r" 0 1 (fontified t)) . -2747) (undo-tree-id2515 . -1) (undo-tree-id2517 . -1) (undo-tree-id2519 . -1) (undo-tree-id2521 . -1) (undo-tree-id2523 . -1) (undo-tree-id2525 . -1) (#("e" 0 1 (fontified t)) . -2748) (#("s" 0 1 (fontified t)) . -2749) (#("h" 0 1 (fontified t)) . -2750) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2751) (#("s" 0 1 (fontified t)) . -2752) (#("e" 0 1 (fontified t)) . -2753) (#("l" 0 1 (fontified t)) . -2754) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -2755) (#("." 0 1 (fontified t)) . -2756) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2757) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2758) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2759) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2760) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2761) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2762) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2763) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -2764) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2765) 2766) ((2745 . 2766)) (25975 7728 153734 499000) 0 nil])
([nil nil ((#("        noise = self.ff_normal.sample((self.N_NEURON,)).to(self.device)
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 30 (face tree-sitter-hl-face:property fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 43 (face tree-sitter-hl-face:keyword fontified t) 43 44 (fontified t) 44 52 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (fontified t) 56 58 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 58 59 (face (rainbow-delimiters-depth-1-face) fontified t) 59 63 (face tree-sitter-hl-face:keyword fontified t) 63 64 (fontified t) 64 70 (face tree-sitter-hl-face:property fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (rear-nonsticky t fontified t)) . 1575) (undo-tree-id76 . -71) (undo-tree-id77 . -72) 1647) nil (25976 15655 431364 516000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2724) (undo-tree-id1327 . -1) (undo-tree-id1329 . -1) (undo-tree-id1331 . -1) (undo-tree-id1333 . -1) (undo-tree-id1335 . -1) (undo-tree-id1337 . -1) (undo-tree-id1339 . -1) (undo-tree-id1341 . -1) (undo-tree-id1343 . -1) (undo-tree-id1345 . -1) (undo-tree-id1347 . -1) (undo-tree-id1349 . -1) (undo-tree-id1351 . -1) (undo-tree-id1353 . -1) (undo-tree-id1355 . -1) (undo-tree-id1357 . -1) (undo-tree-id1359 . -1) (undo-tree-id1361 . -1) (undo-tree-id1363 . -1) (undo-tree-id1365 . -1) (undo-tree-id1367 . -1) (undo-tree-id1369 . -1) (undo-tree-id1371 . -1) (undo-tree-id1373 . -1) (undo-tree-id1375 . -1) (undo-tree-id1377 . -1) (undo-tree-id1379 . -1) (undo-tree-id1381 . -1) (undo-tree-id1383 . -1) (undo-tree-id1385 . -1) (undo-tree-id1387 . -1) (undo-tree-id1389 . -1) (undo-tree-id1391 . -1) (undo-tree-id1393 . -1) (undo-tree-id1395 . -1) (undo-tree-id1397 . -1) (undo-tree-id1399 . -1) (undo-tree-id1401 . -1) (undo-tree-id1403 . -1) (undo-tree-id1405 . -1) (undo-tree-id1407 . -1) (undo-tree-id1409 . -1) (undo-tree-id1411 . -1) (undo-tree-id1413 . -1) (undo-tree-id1415 . -1) (undo-tree-id1417 . -1) (undo-tree-id1419 . -1) (undo-tree-id1421 . -1) (undo-tree-id1423 . -1) (undo-tree-id1425 . -1) (undo-tree-id1427 . -1) (undo-tree-id1429 . -1) (undo-tree-id1431 . -1) (undo-tree-id1433 . -1) (undo-tree-id1435 . -1) (undo-tree-id1437 . -1) (undo-tree-id1439 . -1) (undo-tree-id1441 . -1) (undo-tree-id1443 . -1) (undo-tree-id1445 . -1) (undo-tree-id1447 . -1) (undo-tree-id1449 . -1) (undo-tree-id1451 . -1) (undo-tree-id1453 . -1) (undo-tree-id1455 . -1) (#("_" 0 1 (fontified t)) . -2725) (undo-tree-id1457 . -1) (undo-tree-id1459 . -1) (undo-tree-id1461 . -1) (undo-tree-id1463 . -1) (undo-tree-id1465 . -1) (undo-tree-id1467 . -1) (undo-tree-id1469 . -1) (undo-tree-id1471 . -1) (undo-tree-id1473 . -1) (undo-tree-id1475 . -1) (undo-tree-id1477 . -1) (undo-tree-id1479 . -1) (undo-tree-id1481 . -1) (undo-tree-id1483 . -1) (undo-tree-id1485 . -1) (undo-tree-id1487 . -1) (undo-tree-id1489 . -1) (undo-tree-id1491 . -1) (undo-tree-id1493 . -1) (undo-tree-id1495 . -1) (undo-tree-id1497 . -1) (undo-tree-id1499 . -1) (undo-tree-id1501 . -1) (undo-tree-id1503 . -1) (undo-tree-id1505 . -1) (undo-tree-id1507 . -1) (undo-tree-id1509 . -1) (undo-tree-id1511 . -1) (undo-tree-id1513 . -1) (undo-tree-id1515 . -1) (undo-tree-id1517 . -1) (undo-tree-id1519 . -1) (undo-tree-id1521 . -1) (undo-tree-id1523 . -1) (undo-tree-id1525 . -1) (undo-tree-id1527 . -1) (undo-tree-id1529 . -1) (undo-tree-id1531 . -1) (undo-tree-id1533 . -1) (undo-tree-id1535 . -1) (undo-tree-id1537 . -1) (undo-tree-id1539 . -1) (undo-tree-id1541 . -1) (undo-tree-id1543 . -1) (undo-tree-id1545 . -1) (undo-tree-id1547 . -1) (undo-tree-id1549 . -1) (undo-tree-id1551 . -1) (undo-tree-id1553 . -1) (undo-tree-id1555 . -1) (undo-tree-id1557 . -1) (undo-tree-id1559 . -1) (undo-tree-id1561 . -1) (undo-tree-id1563 . -1) (undo-tree-id1565 . -1) (undo-tree-id1567 . -1) (undo-tree-id1569 . -1) (undo-tree-id1571 . -1) (undo-tree-id1573 . -1) (undo-tree-id1575 . -1) (#("n" 0 1 (fontified t)) . -2726) (undo-tree-id1577 . -1) (undo-tree-id1579 . -1) (undo-tree-id1581 . -1) (undo-tree-id1583 . -1) (undo-tree-id1585 . -1) (undo-tree-id1587 . -1) (undo-tree-id1589 . -1) (undo-tree-id1591 . -1) (undo-tree-id1593 . -1) (undo-tree-id1595 . -1) (undo-tree-id1597 . -1) (undo-tree-id1599 . -1) (undo-tree-id1601 . -1) (undo-tree-id1603 . -1) (undo-tree-id1605 . -1) (undo-tree-id1607 . -1) (undo-tree-id1609 . -1) (undo-tree-id1611 . -1) (undo-tree-id1613 . -1) (undo-tree-id1615 . -1) (undo-tree-id1617 . -1) (undo-tree-id1619 . -1) (undo-tree-id1621 . -1) (undo-tree-id1623 . -1) (undo-tree-id1625 . -1) (undo-tree-id1627 . -1) (undo-tree-id1629 . -1) (undo-tree-id1631 . -1) (undo-tree-id1633 . -1) (undo-tree-id1635 . -1) (undo-tree-id1637 . -1) (undo-tree-id1639 . -1) (undo-tree-id1641 . -1) (undo-tree-id1643 . -1) (undo-tree-id1645 . -1) (undo-tree-id1647 . -1) (undo-tree-id1649 . -1) (undo-tree-id1651 . -1) (undo-tree-id1653 . -1) (undo-tree-id1655 . -1) (undo-tree-id1657 . -1) (undo-tree-id1659 . -1) (undo-tree-id1661 . -1) (undo-tree-id1663 . -1) (undo-tree-id1665 . -1) (undo-tree-id1667 . -1) (undo-tree-id1669 . -1) (undo-tree-id1671 . -1) (undo-tree-id1673 . -1) (undo-tree-id1675 . -1) (undo-tree-id1677 . -1) (undo-tree-id1679 . -1) (undo-tree-id1681 . -1) (undo-tree-id1683 . -1) (undo-tree-id1685 . -1) (#("a" 0 1 (fontified t)) . -2727) (undo-tree-id1687 . -1) (undo-tree-id1689 . -1) (undo-tree-id1691 . -1) (undo-tree-id1693 . -1) (undo-tree-id1695 . -1) (undo-tree-id1697 . -1) (undo-tree-id1699 . -1) (undo-tree-id1701 . -1) (undo-tree-id1703 . -1) (undo-tree-id1705 . -1) (undo-tree-id1707 . -1) (undo-tree-id1709 . -1) (undo-tree-id1711 . -1) (undo-tree-id1713 . -1) (undo-tree-id1715 . -1) (undo-tree-id1717 . -1) (undo-tree-id1719 . -1) (undo-tree-id1721 . -1) (undo-tree-id1723 . -1) (undo-tree-id1725 . -1) (undo-tree-id1727 . -1) (undo-tree-id1729 . -1) (undo-tree-id1731 . -1) (undo-tree-id1733 . -1) (undo-tree-id1735 . -1) (undo-tree-id1737 . -1) (undo-tree-id1739 . -1) (undo-tree-id1741 . -1) (undo-tree-id1743 . -1) (undo-tree-id1745 . -1) (undo-tree-id1747 . -1) (undo-tree-id1749 . -1) (undo-tree-id1751 . -1) (undo-tree-id1753 . -1) (undo-tree-id1755 . -1) (undo-tree-id1757 . -1) (undo-tree-id1759 . -1) (undo-tree-id1761 . -1) (undo-tree-id1763 . -1) (undo-tree-id1765 . -1) (undo-tree-id1767 . -1) (undo-tree-id1769 . -1) (undo-tree-id1771 . -1) (undo-tree-id1773 . -1) (undo-tree-id1775 . -1) (undo-tree-id1777 . -1) (undo-tree-id1779 . -1) (undo-tree-id1781 . -1) (undo-tree-id1783 . -1) (undo-tree-id1785 . -1) (#("m" 0 1 (fontified t)) . -2728) (undo-tree-id1787 . -1) (undo-tree-id1789 . -1) (undo-tree-id1791 . -1) (undo-tree-id1793 . -1) (undo-tree-id1795 . -1) (undo-tree-id1797 . -1) (undo-tree-id1799 . -1) (undo-tree-id1801 . -1) (undo-tree-id1803 . -1) (undo-tree-id1805 . -1) (undo-tree-id1807 . -1) (undo-tree-id1809 . -1) (undo-tree-id1811 . -1) (undo-tree-id1813 . -1) (undo-tree-id1815 . -1) (undo-tree-id1817 . -1) (undo-tree-id1819 . -1) (undo-tree-id1821 . -1) (undo-tree-id1823 . -1) (undo-tree-id1825 . -1) (undo-tree-id1827 . -1) (undo-tree-id1829 . -1) (undo-tree-id1831 . -1) (undo-tree-id1833 . -1) (undo-tree-id1835 . -1) (undo-tree-id1837 . -1) (undo-tree-id1839 . -1) (undo-tree-id1841 . -1) (undo-tree-id1843 . -1) (undo-tree-id1845 . -1) (undo-tree-id1847 . -1) (undo-tree-id1849 . -1) (undo-tree-id1851 . -1) (undo-tree-id1853 . -1) (undo-tree-id1855 . -1) (undo-tree-id1857 . -1) (undo-tree-id1859 . -1) (undo-tree-id1861 . -1) (undo-tree-id1863 . -1) (undo-tree-id1865 . -1) (undo-tree-id1867 . -1) (undo-tree-id1869 . -1) (undo-tree-id1871 . -1) (undo-tree-id1873 . -1) (undo-tree-id1875 . -1) (#("e" 0 1 (fontified t)) . -2729) (undo-tree-id1877 . -1) (undo-tree-id1879 . -1) (undo-tree-id1881 . -1) (undo-tree-id1883 . -1) (undo-tree-id1885 . -1) (undo-tree-id1887 . -1) (undo-tree-id1889 . -1) (undo-tree-id1891 . -1) (undo-tree-id1893 . -1) (undo-tree-id1895 . -1) (undo-tree-id1897 . -1) (undo-tree-id1899 . -1) (undo-tree-id1901 . -1) (undo-tree-id1903 . -1) (undo-tree-id1905 . -1) (undo-tree-id1907 . -1) (undo-tree-id1909 . -1) (undo-tree-id1911 . -1) (undo-tree-id1913 . -1) (undo-tree-id1915 . -1) (undo-tree-id1917 . -1) (undo-tree-id1919 . -1) (undo-tree-id1921 . -1) (undo-tree-id1923 . -1) (undo-tree-id1925 . -1) (undo-tree-id1927 . -1) (undo-tree-id1929 . -1) (undo-tree-id1931 . -1) (undo-tree-id1933 . -1) (undo-tree-id1935 . -1) (undo-tree-id1937 . -1) (undo-tree-id1939 . -1) (undo-tree-id1941 . -1) (undo-tree-id1943 . -1) (undo-tree-id1945 . -1) (undo-tree-id1947 . -1) (undo-tree-id1949 . -1) (undo-tree-id1951 . -1) (undo-tree-id1953 . -1) (undo-tree-id1955 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2730) (undo-tree-id1957 . -1) (undo-tree-id1959 . -1) (undo-tree-id1961 . -1) (undo-tree-id1963 . -1) (undo-tree-id1965 . -1) (undo-tree-id1967 . -1) (undo-tree-id1969 . -1) (undo-tree-id1971 . -1) (undo-tree-id1973 . -1) (undo-tree-id1975 . -1) (undo-tree-id1977 . -1) (undo-tree-id1979 . -1) (undo-tree-id1981 . -1) (undo-tree-id1983 . -1) (undo-tree-id1985 . -1) (undo-tree-id1987 . -1) (undo-tree-id1989 . -1) (undo-tree-id1991 . -1) (undo-tree-id1993 . -1) (undo-tree-id1995 . -1) (undo-tree-id1997 . -1) (undo-tree-id1999 . -1) (undo-tree-id2001 . -1) (undo-tree-id2003 . -1) (undo-tree-id2005 . -1) (undo-tree-id2007 . -1) (undo-tree-id2009 . -1) (undo-tree-id2011 . -1) (undo-tree-id2013 . -1) (undo-tree-id2015 . -1) (undo-tree-id2017 . -1) (undo-tree-id2019 . -1) (undo-tree-id2021 . -1) (undo-tree-id2023 . -1) (undo-tree-id2025 . -1) (#("s" 0 1 (fontified t)) . -2731) (undo-tree-id2027 . -1) (undo-tree-id2029 . -1) (undo-tree-id2031 . -1) (undo-tree-id2033 . -1) (undo-tree-id2035 . -1) (undo-tree-id2037 . -1) (undo-tree-id2039 . -1) (undo-tree-id2041 . -1) (undo-tree-id2043 . -1) (undo-tree-id2045 . -1) (undo-tree-id2047 . -1) (undo-tree-id2049 . -1) (undo-tree-id2051 . -1) (undo-tree-id2053 . -1) (undo-tree-id2055 . -1) (undo-tree-id2057 . -1) (undo-tree-id2059 . -1) (undo-tree-id2061 . -1) (undo-tree-id2063 . -1) (undo-tree-id2065 . -1) (undo-tree-id2067 . -1) (undo-tree-id2069 . -1) (undo-tree-id2071 . -1) (undo-tree-id2073 . -1) (undo-tree-id2075 . -1) (undo-tree-id2077 . -1) (undo-tree-id2079 . -1) (undo-tree-id2081 . -1) (undo-tree-id2083 . -1) (undo-tree-id2085 . -1) (#("e" 0 1 (fontified t)) . -2732) (undo-tree-id2087 . -1) (undo-tree-id2089 . -1) (undo-tree-id2091 . -1) (undo-tree-id2093 . -1) (undo-tree-id2095 . -1) (undo-tree-id2097 . -1) (undo-tree-id2099 . -1) (undo-tree-id2101 . -1) (undo-tree-id2103 . -1) (undo-tree-id2105 . -1) (undo-tree-id2107 . -1) (undo-tree-id2109 . -1) (undo-tree-id2111 . -1) (undo-tree-id2113 . -1) (undo-tree-id2115 . -1) (undo-tree-id2117 . -1) (undo-tree-id2119 . -1) (undo-tree-id2121 . -1) (undo-tree-id2123 . -1) (undo-tree-id2125 . -1) (undo-tree-id2127 . -1) (undo-tree-id2129 . -1) (undo-tree-id2131 . -1) (undo-tree-id2133 . -1) (undo-tree-id2135 . -1) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -2733) (undo-tree-id2137 . -1) (undo-tree-id2139 . -1) (undo-tree-id2141 . -1) (undo-tree-id2143 . -1) (undo-tree-id2145 . -1) (undo-tree-id2147 . -1) (undo-tree-id2149 . -1) (undo-tree-id2151 . -1) (undo-tree-id2153 . -1) (undo-tree-id2155 . -1) (undo-tree-id2157 . -1) (undo-tree-id2159 . -1) (undo-tree-id2161 . -1) (undo-tree-id2163 . -1) (undo-tree-id2165 . -1) (undo-tree-id2167 . -1) (undo-tree-id2169 . -1) (undo-tree-id2171 . -1) (undo-tree-id2173 . -1) (undo-tree-id2175 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -2734) (undo-tree-id2177 . -1) (undo-tree-id2179 . -1) (undo-tree-id2181 . -1) (undo-tree-id2183 . -1) (undo-tree-id2185 . -1) (undo-tree-id2187 . -1) (undo-tree-id2189 . -1) (undo-tree-id2191 . -1) (undo-tree-id2193 . -1) (undo-tree-id2195 . -1) (undo-tree-id2197 . -1) (undo-tree-id2199 . -1) (undo-tree-id2201 . -1) (undo-tree-id2203 . -1) (undo-tree-id2205 . -1) (undo-tree-id2207 . -1) (undo-tree-id2209 . -1) (undo-tree-id2211 . -1) (undo-tree-id2213 . -1) (#("." 0 1 (fontified nil)) . -2735) (undo-tree-id2215 . -1) (undo-tree-id2217 . -1) (undo-tree-id2219 . -1) (undo-tree-id2221 . -1) (undo-tree-id2223 . -1) (undo-tree-id2225 . -1) (undo-tree-id2227 . -1) (undo-tree-id2229 . -1) (undo-tree-id2231 . -1) (undo-tree-id2233 . -1) (undo-tree-id2235 . -1) (undo-tree-id2237 . -1) (undo-tree-id2239 . -1) (undo-tree-id2241 . -1) (undo-tree-id2243 . -1) (undo-tree-id2245 . -1) (undo-tree-id2247 . -1) (undo-tree-id2249 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2736) (undo-tree-id2251 . -1) (undo-tree-id2253 . -1) (undo-tree-id2255 . -1) (undo-tree-id2257 . -1) (undo-tree-id2259 . -1) (undo-tree-id2261 . -1) (undo-tree-id2263 . -1) (undo-tree-id2265 . -1) (undo-tree-id2267 . -1) (undo-tree-id2269 . -1) (undo-tree-id2271 . -1) (undo-tree-id2273 . -1) (undo-tree-id2275 . -1) (undo-tree-id2277 . -1) (undo-tree-id2279 . -1) (undo-tree-id2281 . -1) (undo-tree-id2283 . -1) (#("F" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2737) (undo-tree-id2285 . -1) (undo-tree-id2287 . -1) (undo-tree-id2289 . -1) (undo-tree-id2291 . -1) (undo-tree-id2293 . -1) (undo-tree-id2295 . -1) (undo-tree-id2297 . -1) (undo-tree-id2299 . -1) (undo-tree-id2301 . -1) (undo-tree-id2303 . -1) (undo-tree-id2305 . -1) (undo-tree-id2307 . -1) (undo-tree-id2309 . -1) (undo-tree-id2311 . -1) (undo-tree-id2313 . -1) (undo-tree-id2315 . -1) (#("_" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2738) (undo-tree-id2317 . -1) (undo-tree-id2319 . -1) (undo-tree-id2321 . -1) (undo-tree-id2323 . -1) (undo-tree-id2325 . -1) (undo-tree-id2327 . -1) (undo-tree-id2329 . -1) (undo-tree-id2331 . -1) (undo-tree-id2333 . -1) (undo-tree-id2335 . -1) (undo-tree-id2337 . -1) (undo-tree-id2339 . -1) (undo-tree-id2341 . -1) (undo-tree-id2343 . -1) (undo-tree-id2345 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2739) (undo-tree-id2347 . -1) (undo-tree-id2349 . -1) (undo-tree-id2351 . -1) (undo-tree-id2353 . -1) (undo-tree-id2355 . -1) (undo-tree-id2357 . -1) (undo-tree-id2359 . -1) (undo-tree-id2361 . -1) (undo-tree-id2363 . -1) (undo-tree-id2365 . -1) (undo-tree-id2367 . -1) (undo-tree-id2369 . -1) (undo-tree-id2371 . -1) (undo-tree-id2373 . -1) (#("Y" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2740) (undo-tree-id2375 . -1) (undo-tree-id2377 . -1) (undo-tree-id2379 . -1) (undo-tree-id2381 . -1) (undo-tree-id2383 . -1) (undo-tree-id2385 . -1) (undo-tree-id2387 . -1) (undo-tree-id2389 . -1) (undo-tree-id2391 . -1) (undo-tree-id2393 . -1) (undo-tree-id2395 . -1) (undo-tree-id2397 . -1) (undo-tree-id2399 . -1) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2741) (undo-tree-id2401 . -1) (undo-tree-id2403 . -1) (undo-tree-id2405 . -1) (undo-tree-id2407 . -1) (undo-tree-id2409 . -1) (undo-tree-id2411 . -1) (undo-tree-id2413 . -1) (undo-tree-id2415 . -1) (undo-tree-id2417 . -1) (undo-tree-id2419 . -1) (undo-tree-id2421 . -1) (undo-tree-id2423 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2742) (undo-tree-id2425 . -1) (undo-tree-id2427 . -1) (undo-tree-id2429 . -1) (undo-tree-id2431 . -1) (undo-tree-id2433 . -1) (undo-tree-id2435 . -1) (undo-tree-id2437 . -1) (undo-tree-id2439 . -1) (undo-tree-id2441 . -1) (undo-tree-id2443 . -1) (undo-tree-id2445 . -1) (#("," 0 1 (fontified nil)) . -2743) (undo-tree-id2447 . -1) (undo-tree-id2449 . -1) (undo-tree-id2451 . -1) (undo-tree-id2453 . -1) (undo-tree-id2455 . -1) (undo-tree-id2457 . -1) (undo-tree-id2459 . -1) (undo-tree-id2461 . -1) (undo-tree-id2463 . -1) (undo-tree-id2465 . -1) (#(" " 0 1 (fontified nil)) . -2744) (undo-tree-id2467 . -1) (undo-tree-id2469 . -1) (undo-tree-id2471 . -1) (undo-tree-id2473 . -1) (undo-tree-id2475 . -1) (undo-tree-id2477 . -1) (undo-tree-id2479 . -1) (undo-tree-id2481 . -1) (undo-tree-id2483 . -1) 2745) ((2724 . 2745)) (25975 7728 115914 647000) 0 nil])
([nil nil ((nil fontified nil 1956 . 1957) (nil fontified nil 1955 . 1956) (nil fontified nil 1949 . 1955) (nil fontified nil 1948 . 1949) (nil fontified nil 1944 . 1948) (nil fontified nil 1943 . 1944) (nil fontified nil 1941 . 1943) (nil fontified nil 1940 . 1941) (nil fontified nil 1939 . 1940) (nil fontified nil 1938 . 1939) (nil fontified nil 1937 . 1938) (nil fontified nil 1929 . 1937) (nil fontified nil 1928 . 1929) (nil fontified nil 1924 . 1928) (nil fontified nil 1923 . 1924) (nil fontified nil 1922 . 1923) (nil fontified nil 1916 . 1922) (nil fontified nil 1915 . 1916) (nil fontified nil 1906 . 1915) (nil fontified nil 1905 . 1906) (nil fontified nil 1901 . 1905) (nil fontified nil 1900 . 1901) (nil fontified nil 1899 . 1900) (nil fontified nil 1898 . 1899) (nil fontified nil 1893 . 1898) (nil fontified nil 1885 . 1893) (1885 . 1957)) nil (25976 15655 431360 328000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2721) (undo-tree-id877 . -1) (undo-tree-id879 . -1) (undo-tree-id881 . -1) (undo-tree-id883 . -1) (undo-tree-id885 . -1) (undo-tree-id887 . -1) (undo-tree-id889 . -1) (undo-tree-id891 . -1) (undo-tree-id893 . -1) (undo-tree-id895 . -1) (undo-tree-id897 . -1) (undo-tree-id899 . -1) (undo-tree-id901 . -1) (undo-tree-id903 . -1) (undo-tree-id905 . -1) (undo-tree-id907 . -1) (undo-tree-id909 . -1) (undo-tree-id911 . -1) (undo-tree-id913 . -1) (undo-tree-id915 . -1) (undo-tree-id917 . -1) (undo-tree-id919 . -1) (undo-tree-id921 . -1) (undo-tree-id923 . -1) (undo-tree-id925 . -1) (undo-tree-id927 . -1) (undo-tree-id929 . -1) (undo-tree-id931 . -1) (undo-tree-id933 . -1) (undo-tree-id935 . -1) (undo-tree-id937 . -1) (undo-tree-id939 . -1) (undo-tree-id941 . -1) (undo-tree-id943 . -1) (undo-tree-id945 . -1) (undo-tree-id947 . -1) (undo-tree-id949 . -1) (undo-tree-id951 . -1) (undo-tree-id953 . -1) (undo-tree-id955 . -1) (undo-tree-id957 . -1) (undo-tree-id959 . -1) (undo-tree-id961 . -1) (undo-tree-id963 . -1) (undo-tree-id965 . -1) (undo-tree-id967 . -1) (undo-tree-id969 . -1) (undo-tree-id971 . -1) (undo-tree-id973 . -1) (undo-tree-id975 . -1) (undo-tree-id977 . -1) (undo-tree-id979 . -1) (undo-tree-id981 . -1) (undo-tree-id983 . -1) (undo-tree-id985 . -1) (undo-tree-id987 . -1) (undo-tree-id989 . -1) (undo-tree-id991 . -1) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1023 . -1) (undo-tree-id1025 . -1) (undo-tree-id1027 . -1) (undo-tree-id1029 . -1) (undo-tree-id1031 . -1) (undo-tree-id1033 . -1) (undo-tree-id1035 . -1) (#("u" 0 1 (fontified t)) . -2722) (undo-tree-id1037 . -1) (undo-tree-id1039 . -1) (undo-tree-id1041 . -1) (undo-tree-id1043 . -1) (undo-tree-id1045 . -1) (undo-tree-id1047 . -1) (undo-tree-id1049 . -1) (undo-tree-id1051 . -1) (undo-tree-id1053 . -1) (undo-tree-id1055 . -1) (undo-tree-id1057 . -1) (undo-tree-id1059 . -1) (undo-tree-id1061 . -1) (undo-tree-id1063 . -1) (undo-tree-id1065 . -1) (undo-tree-id1067 . -1) (undo-tree-id1069 . -1) (undo-tree-id1071 . -1) (undo-tree-id1073 . -1) (undo-tree-id1075 . -1) (undo-tree-id1077 . -1) (undo-tree-id1079 . -1) (undo-tree-id1081 . -1) (undo-tree-id1083 . -1) (undo-tree-id1085 . -1) (undo-tree-id1087 . -1) (undo-tree-id1089 . -1) (undo-tree-id1091 . -1) (undo-tree-id1093 . -1) (undo-tree-id1095 . -1) (undo-tree-id1097 . -1) (undo-tree-id1099 . -1) (undo-tree-id1101 . -1) (undo-tree-id1103 . -1) (undo-tree-id1105 . -1) (undo-tree-id1107 . -1) (undo-tree-id1109 . -1) (undo-tree-id1111 . -1) (undo-tree-id1113 . -1) (undo-tree-id1115 . -1) (undo-tree-id1117 . -1) (undo-tree-id1119 . -1) (undo-tree-id1121 . -1) (undo-tree-id1123 . -1) (undo-tree-id1125 . -1) (undo-tree-id1127 . -1) (undo-tree-id1129 . -1) (undo-tree-id1131 . -1) (undo-tree-id1133 . -1) (undo-tree-id1135 . -1) (undo-tree-id1137 . -1) (undo-tree-id1139 . -1) (undo-tree-id1141 . -1) (undo-tree-id1143 . -1) (undo-tree-id1145 . -1) (undo-tree-id1147 . -1) (undo-tree-id1149 . -1) (undo-tree-id1151 . -1) (undo-tree-id1153 . -1) (undo-tree-id1155 . -1) (undo-tree-id1157 . -1) (undo-tree-id1159 . -1) (undo-tree-id1161 . -1) (undo-tree-id1163 . -1) (undo-tree-id1165 . -1) (undo-tree-id1167 . -1) (undo-tree-id1169 . -1) (undo-tree-id1171 . -1) (undo-tree-id1173 . -1) (undo-tree-id1175 . -1) (undo-tree-id1177 . -1) (undo-tree-id1179 . -1) (undo-tree-id1181 . -1) (undo-tree-id1183 . -1) (undo-tree-id1185 . -1) (#("n" 0 1 (fontified t)) . -2723) (undo-tree-id1187 . -1) (undo-tree-id1189 . -1) (undo-tree-id1191 . -1) (undo-tree-id1193 . -1) (undo-tree-id1195 . -1) (undo-tree-id1197 . -1) (undo-tree-id1199 . -1) (undo-tree-id1201 . -1) (undo-tree-id1203 . -1) (undo-tree-id1205 . -1) (undo-tree-id1207 . -1) (undo-tree-id1209 . -1) (undo-tree-id1211 . -1) (undo-tree-id1213 . -1) (undo-tree-id1215 . -1) (undo-tree-id1217 . -1) (undo-tree-id1219 . -1) (undo-tree-id1221 . -1) (undo-tree-id1223 . -1) (undo-tree-id1225 . -1) (undo-tree-id1227 . -1) (undo-tree-id1229 . -1) (undo-tree-id1231 . -1) (undo-tree-id1233 . -1) (undo-tree-id1235 . -1) (undo-tree-id1237 . -1) (undo-tree-id1239 . -1) (undo-tree-id1241 . -1) (undo-tree-id1243 . -1) (undo-tree-id1245 . -1) (undo-tree-id1247 . -1) (undo-tree-id1249 . -1) (undo-tree-id1251 . -1) (undo-tree-id1253 . -1) (undo-tree-id1255 . -1) (undo-tree-id1257 . -1) (undo-tree-id1259 . -1) (undo-tree-id1261 . -1) (undo-tree-id1263 . -1) (undo-tree-id1265 . -1) (undo-tree-id1267 . -1) (undo-tree-id1269 . -1) (undo-tree-id1271 . -1) (undo-tree-id1273 . -1) (undo-tree-id1275 . -1) (undo-tree-id1277 . -1) (undo-tree-id1279 . -1) (undo-tree-id1281 . -1) (undo-tree-id1283 . -1) (undo-tree-id1285 . -1) (undo-tree-id1287 . -1) (undo-tree-id1289 . -1) (undo-tree-id1291 . -1) (undo-tree-id1293 . -1) (undo-tree-id1295 . -1) (undo-tree-id1297 . -1) (undo-tree-id1299 . -1) (undo-tree-id1301 . -1) (undo-tree-id1303 . -1) (undo-tree-id1305 . -1) (undo-tree-id1307 . -1) (undo-tree-id1309 . -1) (undo-tree-id1311 . -1) (undo-tree-id1313 . -1) (undo-tree-id1315 . -1) (undo-tree-id1317 . -1) (undo-tree-id1319 . -1) (undo-tree-id1321 . -1) (undo-tree-id1323 . -1) (undo-tree-id1325 . -1) 2724) ((2721 . 2724)) (25975 7728 84039 847000) 0 nil])
([nil nil ((#("        noise = self.ff_normal.sample((self.N_NEURON,)).to(self.device)
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 30 (face tree-sitter-hl-face:property fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 43 (face tree-sitter-hl-face:keyword fontified t) 43 44 (fontified t) 44 52 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (fontified t) 56 58 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 58 59 (face (rainbow-delimiters-depth-1-face) fontified t) 59 63 (face tree-sitter-hl-face:keyword fontified t) 63 64 (fontified t) 64 70 (face tree-sitter-hl-face:property fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t rear-nonsticky t)) . 1885) (undo-tree-id75 . -72) 1957) nil (25976 15655 431353 860000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1220) (undo-tree-id2547 . -1) (undo-tree-id2549 . -1) (undo-tree-id2551 . -1) (undo-tree-id2553 . -1) 1221 (t 25975 6414 866794 153000)) ((1220 . 1221)) (25975 7728 55281 470000) 0 nil])
([nil nil ((nil fontified nil 1918 . 1919) (nil fontified nil 1917 . 1918) (nil fontified nil 1911 . 1917) (nil fontified nil 1910 . 1911) (nil fontified nil 1906 . 1910) (nil fontified nil 1905 . 1906) (nil fontified nil 1903 . 1905) (nil fontified nil 1902 . 1903) (nil fontified nil 1901 . 1902) (nil fontified nil 1900 . 1901) (nil fontified nil 1899 . 1900) (nil fontified nil 1891 . 1899) (nil fontified nil 1890 . 1891) (nil fontified nil 1886 . 1890) (nil fontified nil 1885 . 1886) (nil fontified nil 1884 . 1885) (nil fontified nil 1878 . 1884) (nil fontified nil 1877 . 1878) (nil fontified nil 1868 . 1877) (nil fontified nil 1867 . 1868) (nil fontified nil 1863 . 1867) (nil fontified nil 1862 . 1863) (nil fontified nil 1861 . 1862) (nil fontified nil 1860 . 1861) (nil fontified nil 1855 . 1860) (nil fontified nil 1847 . 1855) (1847 . 1919)) nil (25976 15655 431350 135000) 0 nil])
([nil nil ((1220 . 1221)) ((#("j" 0 1 (fontified t)) . 1220)) (25975 7728 24293 729000) 0 nil])
([nil nil ((#("        # net_input = torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)        
" 0 8 (fontified t) 8 94 (face tree-sitter-hl-face:comment fontified t) 94 95 (fontified t)) . -1752) (undo-tree-id53 . -95) (undo-tree-id54 . -95) (undo-tree-id55 . -95) (undo-tree-id56 . -95) (undo-tree-id57 . -95) (undo-tree-id58 . -95) (undo-tree-id59 . -95) (undo-tree-id60 . -95) (undo-tree-id61 . -95) (undo-tree-id62 . -95) (undo-tree-id63 . -95) (undo-tree-id64 . -95) (undo-tree-id65 . -95) (undo-tree-id66 . -95) (undo-tree-id67 . -95) (undo-tree-id68 . -95) (undo-tree-id69 . -95) (undo-tree-id70 . -95) (undo-tree-id71 . -95) (undo-tree-id72 . -95) (undo-tree-id73 . -95) (undo-tree-id74 . -95) 1847) nil (25976 15655 431338 597000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1235) 1236) ((1235 . 1236)) (25975 7727 993315 666000) 0 nil])
([nil nil ((1743 . 1744) (t 25976 15655 649173 715000)) nil (25976 15666 992587 968000) 0 nil])
([nil nil ((1235 . 1236)) ((#("i" 0 1 (fontified t)) . 1235)) (25975 7727 963285 94000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1743) (undo-tree-id90 . -1) 1744) nil (25976 15666 992585 709000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1321) 1322) ((1321 . 1322)) (25975 7727 933981 907000) 0 nil])
([nil nil ((1575 . 1576)) nil (25976 15666 992574 401000) 0 nil])
([nil nil ((1321 . 1323) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1321) (1321 . 1322)) ((#("[" 0 1 (face tree-sitter-hl-face:property fontified nil)) . 1321) (1321 . 1322) (#("[]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1321) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1)) (25975 7727 901938 698000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1699 . 1700) (nil fontified nil 1698 . 1700) (nil fontified nil 1694 . 1698) (nil fontified nil 1685 . 1694) (nil fontified nil 1684 . 1685) (nil fontified nil 1675 . 1684) (nil fontified nil 1674 . 1675) (nil fontified nil 1673 . 1674) (nil fontified nil 1672 . 1673) (nil fontified nil 1662 . 1672) (nil fontified nil 1661 . 1662) (nil fontified nil 1660 . 1661) (nil fontified nil 1659 . 1660) (nil fontified nil 1653 . 1659) (nil fontified nil 1652 . 1653) (nil fontified nil 1648 . 1652) (nil fontified nil 1647 . 1648) (nil fontified nil 1646 . 1647) (nil fontified nil 1639 . 1646) (nil fontified nil 1638 . 1639) (nil fontified nil 1637 . 1638) (nil fontified nil 1627 . 1637) (nil fontified nil 1626 . 1627) (nil fontified nil 1622 . 1626) (nil fontified nil 1621 . 1622) (nil fontified nil 1620 . 1621) (nil fontified nil 1619 . 1620) (nil fontified nil 1614 . 1619) (nil fontified nil 1600 . 1614) (nil fontified nil 1592 . 1600) (nil fontified nil 1591 . 1592) (nil fontified nil 1587 . 1591) (nil fontified nil 1586 . 1587) (nil fontified nil 1584 . 1586) (nil fontified nil 1576 . 1584) (1576 . 1700)) nil (25976 15666 992571 245000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1322)) ((1322 . 1323)) (25975 7727 873128 60000) 0 nil])
([nil nil ((1708 . 1712) 1700) nil (25976 15666 992559 842000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1322) (t 25975 6454 358795 410000)) ((1322 . 1323)) (25975 7727 842837 511000) 0 nil])
([nil nil ((#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1592) (undo-tree-id102 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1593) (undo-tree-id103 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1594) (undo-tree-id104 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1595) (undo-tree-id105 . -1) 1596 (t 25976 15667 225174 84000)) nil (25976 15672 666521 528000) 0 nil])
([nil nil ((1322 . 1323)) ((#("j" 0 1 (fontified t)) . 1322)) (25975 7727 812085 649000) 0 nil])
([nil nil ((1592 . 1593)) nil (25976 15672 666515 367000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1404) 1405) ((1404 . 1405)) (25975 7727 782340 190000) 0 nil])
([nil nil ((#("I" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1592) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 1593) nil (25976 15672 666512 351000) 0 nil])
([nil nil ((1404 . 1405)) ((#("i" 0 1 (fontified t)) . 1404)) (25975 7727 752220 157000) 0 nil])
([nil nil ((1592 . 1595)) nil (25976 15672 666487 814000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1425)) ((1425 . 1426)) (25975 7727 720936 775000) 0 nil])
([nil nil ((1636 . 1639) (t 25976 15672 885174 264000)) nil (25976 15713 203834 850000) 0 nil])
([nil nil ((1425 . 1426)) ((#("i" 0 1 (fontified t)) . 1425)) (25975 7727 691546 146000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1638) (undo-tree-id131 . -1) 1639) nil (25976 15713 203833 484000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1343) (undo-tree-id2556 . -1) 1344) ((1343 . 1344)) (25975 7727 691017 299000) 0 nil])
([nil nil ((1638 . 1640)) nil (25976 15713 203831 159000) 0 nil])
([nil nil ((1343 . 1344)) ((#("j" 0 1 (fontified t)) . 1343)) (25975 7727 690451 734000) 0 nil])
([nil nil ((#("rates" 0 5 (fontified t)) . 1643)) nil (25976 15713 203829 916000) 0 nil])
([nil nil ((6466 . 6467)) ((#("
" 0 1 (fontified nil)) . 6466) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1)) (25975 7727 686366 710000) 0 nil])
([nil nil ((1643 . 1647)) nil (25976 15713 203828 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9800 . 9801) (6467 . 9801)) ((#("    def initWeights(self, i_pop, j_pop):

        Na = self.Na[i_pop]
        Nb = self.Na[j_pop]
        Kb = self.Ka[j_pop]

        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)

        if 'lr' in self.STRUCTURE[i_pop, j_pop]:

            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)

            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)


            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T

            while torch.abs(self.ksi[0] @ self.ksi[1]) > .10:
                multivariate_normal = MultivariateNormal(mean, covariance)
                self.ksi = multivariate_normal.sample((Nb,)).T

            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', self.ksi[0] @ self.ksi[1])

            Pij = 1.0 + self.KAPPA[i_pop, j_pop] * (torch.outer(self.ksi[0], self.ksi[0])
                                                    + torch.outer(self.ksi[1], self.ksi[1])) / torch.sqrt(self.Ka[j_pop])
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0

            if self.VERBOSE:
                print('Pij', Pij.shape)

        if 'cos' in self.STRUCTURE[i_pop, j_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na), dtype=self.FLOAT, device=self.device)
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb), dtype=self.FLOAT, device=self.device)

            i, j = torch.meshgrid(torch.arange(Na, device=self.device), torch.arange(Nb, device=self.device), indexing=\"ij\")

            theta_diff = theta[i] - phi[j]

            if 'spec' in self.STRUCTURE[i_pop, j_pop]:
                self.KAPPA[i_pop, j_pop] = self.KAPPA[i_pop, j_pop] / torch.sqrt(Kb)

            Pij = 1.0 + 2.0 * self.KAPPA[i_pop, j_pop] * torch.cos(theta_diff - self.PHASE)

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')

            Cij = self.Jab[i_pop, j_pop] * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij)

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')

            Cij = self.Jab[i_pop, j_pop] * Pij / float(Nb)

            if self.SIGMA[i_pop, j_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[i_pop, j_pop])

                Hij = torch.normal(0, self.SIGMA[i_pop, j_pop], size=(Na, Nb), dtype=self.FLOAT, device=self.device)
                Cij = Cij + Hij / float(Nb)

        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[i_pop, j_pop]:
                if \"spec\" in self.STRUCTURE[i_pop, j_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[i_pop, j_pop])
            elif \"lr\" in self.STRUCTURE[i_pop, j_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())

        return Cij
" 0 4 (fontified nil) 4 7 (face tree-sitter-hl-face:keyword fontified nil) 7 8 (fontified nil) 8 19 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 19 20 (face (rainbow-delimiters-depth-1-face) fontified nil) 20 24 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 24 26 (fontified nil) 26 31 (face tree-sitter-hl-face:variable.parameter fontified nil) 31 33 (fontified nil) 33 38 (face tree-sitter-hl-face:variable.parameter fontified nil) 38 39 (face (rainbow-delimiters-depth-1-face) fontified nil) 39 50 (fontified nil) 50 52 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 52 53 (fontified nil) 53 54 (face tree-sitter-hl-face:operator fontified nil) 54 55 (fontified nil) 55 59 (face tree-sitter-hl-face:keyword fontified nil) 59 60 (fontified nil) 60 62 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 62 63 (face (rainbow-delimiters-depth-1-face) fontified nil) 63 68 (fontified nil) 68 69 (face (rainbow-delimiters-depth-1-face) fontified nil) 69 78 (fontified nil) 78 80 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 80 81 (fontified nil) 81 82 (face tree-sitter-hl-face:operator fontified nil) 82 83 (fontified nil) 83 87 (face tree-sitter-hl-face:keyword fontified nil) 87 88 (fontified nil) 88 90 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 90 91 (face (rainbow-delimiters-depth-1-face) fontified nil) 91 96 (fontified nil) 96 97 (face (rainbow-delimiters-depth-1-face) fontified nil) 97 106 (fontified nil) 106 108 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 108 109 (fontified nil) 109 110 (face tree-sitter-hl-face:operator fontified nil) 110 111 (fontified nil) 111 115 (face tree-sitter-hl-face:keyword fontified nil) 115 116 (fontified nil) 116 118 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 118 119 (face (rainbow-delimiters-depth-1-face) fontified nil) 119 124 (fontified nil) 124 125 (face (rainbow-delimiters-depth-1-face) fontified nil) 125 135 (fontified nil) 135 138 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 138 139 (fontified nil) 139 140 (face tree-sitter-hl-face:operator fontified nil) 140 147 (fontified nil) 147 153 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 153 154 (face (rainbow-delimiters-depth-1-face) fontified nil) 154 157 (face tree-sitter-hl-face:number fontified nil) 157 159 (fontified nil) 159 164 (face tree-sitter-hl-face:label fontified nil) 164 165 (face tree-sitter-hl-face:operator fontified nil) 165 169 (face tree-sitter-hl-face:keyword fontified nil) 169 170 (fontified nil) 170 175 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 175 177 (fontified nil) 177 183 (face tree-sitter-hl-face:label fontified nil) 183 184 (face tree-sitter-hl-face:operator fontified nil) 184 188 (face tree-sitter-hl-face:keyword fontified nil) 188 189 (fontified nil) 189 195 (face tree-sitter-hl-face:property fontified nil) 195 196 (face (rainbow-delimiters-depth-1-face) fontified nil) 196 206 (fontified nil) 206 208 (face tree-sitter-hl-face:keyword fontified nil) 208 209 (fontified nil) 209 210 (face tree-sitter-hl-face:string fontified nil) 210 212 (face tree-sitter-hl-face:string fontified nil) 212 213 (face tree-sitter-hl-face:string fontified nil) 213 214 (fontified nil) 214 216 (face tree-sitter-hl-face:operator fontified nil) 216 217 (fontified nil) 217 221 (face tree-sitter-hl-face:keyword fontified nil) 221 222 (fontified nil) 222 231 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 231 232 (face (rainbow-delimiters-depth-1-face) fontified nil) 232 244 (fontified nil) 244 245 (face (rainbow-delimiters-depth-1-face) fontified nil) 245 260 (fontified nil) 260 264 (face tree-sitter-hl-face:variable fontified nil) 264 265 (fontified nil) 265 266 (face tree-sitter-hl-face:operator fontified nil) 266 273 (fontified nil) 273 279 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 279 280 (face (rainbow-delimiters-depth-1-face) fontified nil) 280 281 (face (rainbow-delimiters-depth-2-face) fontified nil) 281 284 (face tree-sitter-hl-face:number fontified nil) 284 286 (fontified nil) 286 289 (face tree-sitter-hl-face:number fontified nil) 289 290 (face (rainbow-delimiters-depth-2-face) fontified nil) 290 292 (fontified nil) 292 297 (face tree-sitter-hl-face:label fontified nil) 297 298 (face tree-sitter-hl-face:operator fontified nil) 298 302 (face tree-sitter-hl-face:keyword fontified nil) 302 303 (fontified nil) 303 308 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 308 310 (fontified nil) 310 316 (face tree-sitter-hl-face:label fontified nil) 316 317 (face tree-sitter-hl-face:operator fontified nil) 317 321 (face tree-sitter-hl-face:keyword fontified nil) 321 322 (fontified nil) 322 328 (face tree-sitter-hl-face:property fontified nil) 328 329 (face (rainbow-delimiters-depth-1-face) fontified nil) 329 343 (fontified nil) 343 373 (face tree-sitter-hl-face:comment fontified nil) 373 386 (fontified nil) 386 396 (face tree-sitter-hl-face:variable fontified nil) 396 397 (fontified nil) 397 398 (face tree-sitter-hl-face:operator fontified nil) 398 405 (fontified nil) 405 411 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 411 412 (face (rainbow-delimiters-depth-1-face) fontified nil) 412 413 (face (rainbow-delimiters-depth-2-face) fontified nil) 413 414 (face (rainbow-delimiters-depth-3-face) fontified nil) 414 417 (face tree-sitter-hl-face:number fontified nil) 417 419 (fontified nil) 419 423 (face tree-sitter-hl-face:keyword fontified nil) 423 424 (fontified nil) 424 430 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 430 431 (face (rainbow-delimiters-depth-3-face) fontified nil) 431 472 (fontified nil) 472 473 (face (rainbow-delimiters-depth-3-face) fontified nil) 473 477 (face tree-sitter-hl-face:keyword fontified nil) 477 478 (fontified nil) 478 484 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 484 486 (fontified nil) 486 489 (face tree-sitter-hl-face:number fontified nil) 489 490 (face (rainbow-delimiters-depth-3-face) fontified nil) 490 491 (fontified nil) 491 492 (face (rainbow-delimiters-depth-2-face) fontified nil) 492 494 (fontified nil) 494 499 (face tree-sitter-hl-face:label fontified nil) 499 500 (face tree-sitter-hl-face:operator fontified nil) 500 504 (face tree-sitter-hl-face:keyword fontified nil) 504 505 (fontified nil) 505 510 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 510 512 (fontified nil) 512 518 (face tree-sitter-hl-face:label fontified nil) 518 519 (face tree-sitter-hl-face:operator fontified nil) 519 523 (face tree-sitter-hl-face:keyword fontified nil) 523 524 (fontified nil) 524 530 (face tree-sitter-hl-face:property fontified nil) 530 531 (face (rainbow-delimiters-depth-1-face) fontified nil) 531 546 (fontified nil) 546 565 (face tree-sitter-hl-face:variable fontified nil) 565 566 (fontified nil) 566 567 (face tree-sitter-hl-face:operator fontified nil) 567 568 (fontified nil) 568 586 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 586 587 (face (rainbow-delimiters-depth-1-face) fontified nil) 587 603 (fontified nil) 603 604 (face (rainbow-delimiters-depth-1-face) fontified nil) 604 617 (fontified nil) 617 621 (face tree-sitter-hl-face:keyword fontified nil) 621 622 (fontified nil) 622 625 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 625 626 (fontified nil) 626 627 (face tree-sitter-hl-face:operator fontified nil) 627 648 (fontified nil) 648 654 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 654 655 (face (rainbow-delimiters-depth-1-face) fontified nil) 655 656 (face (rainbow-delimiters-depth-2-face) fontified nil) 656 658 (face tree-sitter-hl-face:constructor fontified nil) 658 659 (fontified nil) 659 660 (face (rainbow-delimiters-depth-2-face) fontified nil) 660 661 (face (rainbow-delimiters-depth-1-face) fontified nil) 661 662 (fontified nil) 662 663 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 663 677 (fontified nil) 677 682 (face tree-sitter-hl-face:keyword fontified nil) 682 689 (fontified nil) 689 692 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 692 693 (face (rainbow-delimiters-depth-1-face) fontified nil) 693 697 (face tree-sitter-hl-face:keyword fontified nil) 697 698 (fontified nil) 698 701 (face tree-sitter-hl-face:property fontified nil) 701 702 (face (rainbow-delimiters-depth-2-face) fontified nil) 702 703 (face tree-sitter-hl-face:number fontified nil) 703 704 (face (rainbow-delimiters-depth-2-face) fontified nil) 704 705 (fontified nil) 705 706 (face tree-sitter-hl-face:operator fontified nil) 706 707 (fontified nil) 707 711 (face tree-sitter-hl-face:keyword fontified nil) 711 712 (fontified nil) 712 715 (face tree-sitter-hl-face:property fontified nil) 715 716 (face (rainbow-delimiters-depth-2-face) fontified nil) 716 717 (face tree-sitter-hl-face:number fontified nil) 717 718 (face (rainbow-delimiters-depth-2-face) fontified nil) 718 719 (face (rainbow-delimiters-depth-1-face) fontified nil) 719 720 (fontified nil) 720 721 (face tree-sitter-hl-face:operator fontified nil) 721 722 (fontified nil) 722 725 (face tree-sitter-hl-face:number fontified nil) 725 743 (fontified nil) 743 762 (face tree-sitter-hl-face:variable fontified nil) 762 763 (fontified nil) 763 764 (face tree-sitter-hl-face:operator fontified nil) 764 765 (fontified nil) 765 783 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 783 784 (face (rainbow-delimiters-depth-1-face) fontified nil) 784 800 (fontified nil) 800 801 (face (rainbow-delimiters-depth-1-face) fontified nil) 801 818 (fontified nil) 818 822 (face tree-sitter-hl-face:keyword fontified nil) 822 823 (fontified nil) 823 826 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 826 827 (fontified nil) 827 828 (face tree-sitter-hl-face:operator fontified nil) 828 849 (fontified nil) 849 855 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 855 856 (face (rainbow-delimiters-depth-1-face) fontified nil) 856 857 (face (rainbow-delimiters-depth-2-face) fontified nil) 857 859 (face tree-sitter-hl-face:constructor fontified nil) 859 860 (fontified nil) 860 861 (face (rainbow-delimiters-depth-2-face) fontified nil) 861 862 (face (rainbow-delimiters-depth-1-face) fontified nil) 862 863 (fontified nil) 863 864 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 864 878 (fontified nil) 878 880 (face tree-sitter-hl-face:keyword fontified nil) 880 881 (fontified nil) 881 885 (face tree-sitter-hl-face:keyword fontified nil) 885 886 (fontified nil) 886 893 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 893 911 (fontified nil) 911 916 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 916 917 (face (rainbow-delimiters-depth-1-face) fontified nil) 917 918 (face tree-sitter-hl-face:string fontified nil) 918 921 (face tree-sitter-hl-face:string fontified nil) 921 922 (face tree-sitter-hl-face:string fontified nil) 922 924 (fontified nil) 924 928 (face tree-sitter-hl-face:keyword fontified nil) 928 929 (fontified nil) 929 932 (face tree-sitter-hl-face:property fontified nil) 932 933 (fontified nil) 933 938 (face tree-sitter-hl-face:property fontified nil) 938 939 (face (rainbow-delimiters-depth-1-face) fontified nil) 939 956 (fontified nil) 956 961 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 961 962 (face (rainbow-delimiters-depth-1-face) fontified nil) 962 963 (face tree-sitter-hl-face:string fontified nil) 963 973 (face tree-sitter-hl-face:string fontified nil) 973 974 (face tree-sitter-hl-face:string fontified nil) 974 976 (fontified nil) 976 980 (face tree-sitter-hl-face:keyword fontified nil) 980 981 (fontified nil) 981 984 (face tree-sitter-hl-face:property fontified nil) 984 985 (face (rainbow-delimiters-depth-2-face) fontified nil) 985 986 (face tree-sitter-hl-face:number fontified nil) 986 987 (face (rainbow-delimiters-depth-2-face) fontified nil) 987 988 (fontified nil) 988 989 (face tree-sitter-hl-face:operator fontified nil) 989 990 (fontified nil) 990 994 (face tree-sitter-hl-face:keyword fontified nil) 994 995 (fontified nil) 995 998 (face tree-sitter-hl-face:property fontified nil) 998 999 (face (rainbow-delimiters-depth-2-face) fontified nil) 999 1000 (face tree-sitter-hl-face:number fontified nil) 1000 1001 (face (rainbow-delimiters-depth-2-face) fontified nil) 1001 1002 (face (rainbow-delimiters-depth-1-face) fontified nil) 1002 1016 (fontified nil) 1016 1019 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 1019 1020 (fontified nil) 1020 1021 (face tree-sitter-hl-face:operator fontified nil) 1021 1022 (fontified nil) 1022 1025 (face tree-sitter-hl-face:number fontified nil) 1025 1026 (fontified nil) 1026 1027 (face tree-sitter-hl-face:operator fontified nil) 1027 1028 (fontified nil) 1028 1032 (face tree-sitter-hl-face:keyword fontified nil) 1032 1033 (fontified nil) 1033 1038 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1038 1039 (face (rainbow-delimiters-depth-1-face) fontified nil) 1039 1051 (fontified nil) 1051 1052 (face (rainbow-delimiters-depth-1-face) fontified nil) 1052 1053 (fontified nil) 1053 1054 (face tree-sitter-hl-face:operator fontified nil) 1054 1055 (fontified nil) 1055 1056 (face (rainbow-delimiters-depth-1-face) fontified nil) 1056 1062 (fontified nil) 1062 1067 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1067 1068 (face (rainbow-delimiters-depth-2-face) fontified nil) 1068 1072 (face tree-sitter-hl-face:keyword fontified nil) 1072 1073 (fontified nil) 1073 1076 (face tree-sitter-hl-face:property fontified nil) 1076 1077 (face (rainbow-delimiters-depth-3-face) fontified nil) 1077 1078 (face tree-sitter-hl-face:number fontified nil) 1078 1079 (face (rainbow-delimiters-depth-3-face) fontified nil) 1079 1081 (fontified nil) 1081 1085 (face tree-sitter-hl-face:keyword fontified nil) 1085 1086 (fontified nil) 1086 1089 (face tree-sitter-hl-face:property fontified nil) 1089 1090 (face (rainbow-delimiters-depth-3-face) fontified nil) 1090 1091 (face tree-sitter-hl-face:number fontified nil) 1091 1092 (face (rainbow-delimiters-depth-3-face) fontified nil) 1092 1093 (face (rainbow-delimiters-depth-2-face) fontified nil) 1093 1146 (fontified nil) 1146 1147 (face tree-sitter-hl-face:operator fontified nil) 1147 1154 (fontified nil) 1154 1159 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1159 1160 (face (rainbow-delimiters-depth-2-face) fontified nil) 1160 1164 (face tree-sitter-hl-face:keyword fontified nil) 1164 1165 (fontified nil) 1165 1168 (face tree-sitter-hl-face:property fontified nil) 1168 1169 (face (rainbow-delimiters-depth-3-face) fontified nil) 1169 1170 (face tree-sitter-hl-face:number fontified nil) 1170 1171 (face (rainbow-delimiters-depth-3-face) fontified nil) 1171 1173 (fontified nil) 1173 1177 (face tree-sitter-hl-face:keyword fontified nil) 1177 1178 (fontified nil) 1178 1181 (face tree-sitter-hl-face:property fontified nil) 1181 1182 (face (rainbow-delimiters-depth-3-face) fontified nil) 1182 1183 (face tree-sitter-hl-face:number fontified nil) 1183 1184 (face (rainbow-delimiters-depth-3-face) fontified nil) 1184 1185 (face (rainbow-delimiters-depth-2-face) fontified nil) 1185 1186 (face (rainbow-delimiters-depth-1-face) fontified nil) 1186 1187 (fontified nil) 1187 1188 (face tree-sitter-hl-face:operator fontified nil) 1188 1195 (fontified nil) 1195 1199 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1199 1200 (face (rainbow-delimiters-depth-1-face) fontified nil) 1200 1204 (face tree-sitter-hl-face:keyword fontified nil) 1204 1205 (fontified nil) 1205 1207 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1207 1208 (face (rainbow-delimiters-depth-2-face) fontified nil) 1208 1213 (fontified nil) 1213 1214 (face (rainbow-delimiters-depth-2-face) fontified nil) 1214 1215 (face (rainbow-delimiters-depth-1-face) fontified nil) 1215 1228 (fontified nil) 1228 1244 (face tree-sitter-hl-face:comment fontified nil) 1244 1257 (fontified nil) 1257 1273 (face tree-sitter-hl-face:comment fontified nil) 1273 1287 (fontified nil) 1287 1289 (face tree-sitter-hl-face:keyword fontified nil) 1289 1290 (fontified nil) 1290 1294 (face tree-sitter-hl-face:keyword fontified nil) 1294 1295 (fontified nil) 1295 1302 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1302 1320 (fontified nil) 1320 1325 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1325 1326 (face (rainbow-delimiters-depth-1-face) fontified nil) 1326 1327 (face tree-sitter-hl-face:string fontified nil) 1327 1330 (face tree-sitter-hl-face:string fontified nil) 1330 1331 (face tree-sitter-hl-face:string fontified nil) 1331 1333 (fontified nil) 1333 1336 (face tree-sitter-hl-face:constructor fontified nil) 1336 1337 (fontified nil) 1337 1342 (face tree-sitter-hl-face:property fontified nil) 1342 1343 (face (rainbow-delimiters-depth-1-face) fontified nil) 1343 1353 (fontified nil) 1353 1355 (face tree-sitter-hl-face:keyword fontified nil) 1355 1356 (fontified nil) 1356 1357 (face tree-sitter-hl-face:string fontified nil) 1357 1360 (face tree-sitter-hl-face:string fontified nil) 1360 1361 (face tree-sitter-hl-face:string fontified nil) 1361 1362 (fontified nil) 1362 1364 (face tree-sitter-hl-face:operator fontified nil) 1364 1365 (fontified nil) 1365 1369 (face tree-sitter-hl-face:keyword fontified nil) 1369 1370 (fontified nil) 1370 1379 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1379 1380 (face (rainbow-delimiters-depth-1-face) fontified nil) 1380 1392 (fontified nil) 1392 1393 (face (rainbow-delimiters-depth-1-face) fontified nil) 1393 1407 (fontified nil) 1407 1412 (face tree-sitter-hl-face:variable fontified nil) 1412 1413 (fontified nil) 1413 1414 (face tree-sitter-hl-face:operator fontified nil) 1414 1421 (fontified nil) 1421 1427 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1427 1428 (face (rainbow-delimiters-depth-1-face) fontified nil) 1428 1429 (face tree-sitter-hl-face:number fontified nil) 1429 1431 (fontified nil) 1431 1434 (face tree-sitter-hl-face:number fontified nil) 1434 1435 (fontified nil) 1435 1436 (face tree-sitter-hl-face:operator fontified nil) 1436 1443 (fontified nil) 1443 1445 (face tree-sitter-hl-face:property fontified nil) 1445 1447 (fontified nil) 1447 1450 (face tree-sitter-hl-face:number fontified nil) 1450 1451 (fontified nil) 1451 1452 (face tree-sitter-hl-face:operator fontified nil) 1452 1459 (fontified nil) 1459 1461 (face tree-sitter-hl-face:property fontified nil) 1461 1462 (fontified nil) 1462 1463 (face tree-sitter-hl-face:operator fontified nil) 1463 1464 (fontified nil) 1464 1469 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1469 1470 (face (rainbow-delimiters-depth-2-face) fontified nil) 1470 1472 (face tree-sitter-hl-face:constructor fontified nil) 1472 1473 (face (rainbow-delimiters-depth-2-face) fontified nil) 1473 1475 (fontified nil) 1475 1480 (face tree-sitter-hl-face:label fontified nil) 1480 1481 (face tree-sitter-hl-face:operator fontified nil) 1481 1485 (face tree-sitter-hl-face:keyword fontified nil) 1485 1486 (fontified nil) 1486 1491 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1491 1493 (fontified nil) 1493 1499 (face tree-sitter-hl-face:label fontified nil) 1499 1500 (face tree-sitter-hl-face:operator fontified nil) 1500 1504 (face tree-sitter-hl-face:keyword fontified nil) 1504 1505 (fontified nil) 1505 1511 (face tree-sitter-hl-face:property fontified nil) 1511 1512 (face (rainbow-delimiters-depth-1-face) fontified nil) 1512 1525 (fontified nil) 1525 1528 (face tree-sitter-hl-face:variable fontified nil) 1528 1529 (fontified nil) 1529 1530 (face tree-sitter-hl-face:operator fontified nil) 1530 1537 (fontified nil) 1537 1543 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1543 1544 (face (rainbow-delimiters-depth-1-face) fontified nil) 1544 1545 (face tree-sitter-hl-face:number fontified nil) 1545 1547 (fontified nil) 1547 1550 (face tree-sitter-hl-face:number fontified nil) 1550 1551 (fontified nil) 1551 1552 (face tree-sitter-hl-face:operator fontified nil) 1552 1559 (fontified nil) 1559 1561 (face tree-sitter-hl-face:property fontified nil) 1561 1563 (fontified nil) 1563 1566 (face tree-sitter-hl-face:number fontified nil) 1566 1567 (fontified nil) 1567 1568 (face tree-sitter-hl-face:operator fontified nil) 1568 1575 (fontified nil) 1575 1577 (face tree-sitter-hl-face:property fontified nil) 1577 1578 (fontified nil) 1578 1579 (face tree-sitter-hl-face:operator fontified nil) 1579 1580 (fontified nil) 1580 1585 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1585 1586 (face (rainbow-delimiters-depth-2-face) fontified nil) 1586 1588 (face tree-sitter-hl-face:constructor fontified nil) 1588 1589 (face (rainbow-delimiters-depth-2-face) fontified nil) 1589 1591 (fontified nil) 1591 1596 (face tree-sitter-hl-face:label fontified nil) 1596 1597 (face tree-sitter-hl-face:operator fontified nil) 1597 1601 (face tree-sitter-hl-face:keyword fontified nil) 1601 1602 (fontified nil) 1602 1607 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1607 1609 (fontified nil) 1609 1615 (face tree-sitter-hl-face:label fontified nil) 1615 1616 (face tree-sitter-hl-face:operator fontified nil) 1616 1620 (face tree-sitter-hl-face:keyword fontified nil) 1620 1621 (fontified nil) 1621 1627 (face tree-sitter-hl-face:property fontified nil) 1627 1628 (face (rainbow-delimiters-depth-1-face) fontified nil) 1628 1630 (fontified nil) 1630 1642 (fontified nil) 1642 1643 (face tree-sitter-hl-face:variable fontified nil) 1643 1645 (fontified nil) 1645 1646 (face tree-sitter-hl-face:variable fontified nil) 1646 1647 (fontified nil) 1647 1648 (face tree-sitter-hl-face:operator fontified nil) 1648 1655 (fontified nil) 1655 1663 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1663 1664 (face (rainbow-delimiters-depth-1-face) fontified nil) 1664 1670 (fontified nil) 1670 1676 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1676 1677 (face (rainbow-delimiters-depth-2-face) fontified nil) 1677 1679 (face tree-sitter-hl-face:constructor fontified nil) 1679 1681 (fontified nil) 1681 1687 (face tree-sitter-hl-face:label fontified nil) 1687 1688 (face tree-sitter-hl-face:operator fontified nil) 1688 1692 (face tree-sitter-hl-face:keyword fontified nil) 1692 1693 (fontified nil) 1693 1699 (face tree-sitter-hl-face:property fontified nil) 1699 1700 (face (rainbow-delimiters-depth-2-face) fontified nil) 1700 1708 (fontified nil) 1708 1714 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1714 1715 (face (rainbow-delimiters-depth-2-face) fontified nil) 1715 1717 (face tree-sitter-hl-face:constructor fontified nil) 1717 1719 (fontified nil) 1719 1725 (face tree-sitter-hl-face:label fontified nil) 1725 1726 (face tree-sitter-hl-face:operator fontified nil) 1726 1730 (face tree-sitter-hl-face:keyword fontified nil) 1730 1731 (fontified nil) 1731 1737 (face tree-sitter-hl-face:property fontified nil) 1737 1738 (face (rainbow-delimiters-depth-2-face) fontified nil) 1738 1740 (fontified nil) 1740 1748 (face tree-sitter-hl-face:label fontified nil) 1748 1749 (face tree-sitter-hl-face:operator fontified nil) 1749 1750 (face tree-sitter-hl-face:string fontified nil) 1750 1752 (face tree-sitter-hl-face:string fontified nil) 1752 1753 (face tree-sitter-hl-face:string fontified nil) 1753 1754 (face (rainbow-delimiters-depth-1-face) fontified nil) 1754 1755 (fontified nil) 1755 1768 (fontified nil) 1768 1778 (face tree-sitter-hl-face:variable fontified nil) 1778 1779 (fontified nil) 1779 1780 (face tree-sitter-hl-face:operator fontified nil) 1780 1786 (fontified nil) 1786 1787 (face (rainbow-delimiters-depth-1-face) fontified nil) 1787 1788 (fontified nil) 1788 1789 (face (rainbow-delimiters-depth-1-face) fontified nil) 1789 1790 (fontified nil) 1790 1791 (face tree-sitter-hl-face:operator fontified nil) 1791 1795 (fontified nil) 1795 1796 (face (rainbow-delimiters-depth-1-face) fontified nil) 1796 1797 (fontified nil) 1797 1798 (face (rainbow-delimiters-depth-1-face) fontified nil) 1798 1812 (fontified nil) 1812 1814 (face tree-sitter-hl-face:keyword fontified nil) 1814 1815 (fontified nil) 1815 1816 (face tree-sitter-hl-face:string fontified nil) 1816 1820 (face tree-sitter-hl-face:string fontified nil) 1820 1821 (face tree-sitter-hl-face:string fontified nil) 1821 1822 (fontified nil) 1822 1824 (face tree-sitter-hl-face:operator fontified nil) 1824 1825 (fontified nil) 1825 1829 (face tree-sitter-hl-face:keyword fontified nil) 1829 1830 (fontified nil) 1830 1839 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1839 1840 (face (rainbow-delimiters-depth-1-face) fontified nil) 1840 1852 (fontified nil) 1852 1853 (face (rainbow-delimiters-depth-1-face) fontified nil) 1853 1871 (fontified nil) 1871 1875 (face tree-sitter-hl-face:keyword fontified nil) 1875 1876 (fontified nil) 1876 1881 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1881 1882 (face (rainbow-delimiters-depth-1-face) fontified nil) 1882 1887 (face tree-sitter-hl-face:variable fontified nil) 1887 1889 (fontified nil) 1889 1894 (face tree-sitter-hl-face:variable fontified nil) 1894 1895 (face (rainbow-delimiters-depth-1-face) fontified nil) 1895 1896 (fontified nil) 1896 1897 (face tree-sitter-hl-face:operator fontified nil) 1897 1898 (fontified nil) 1898 1902 (face tree-sitter-hl-face:keyword fontified nil) 1902 1903 (fontified nil) 1903 1908 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1908 1909 (face (rainbow-delimiters-depth-1-face) fontified nil) 1909 1921 (fontified nil) 1921 1922 (face (rainbow-delimiters-depth-1-face) fontified nil) 1922 1923 (fontified nil) 1923 1924 (face tree-sitter-hl-face:operator fontified nil) 1924 1931 (fontified nil) 1931 1935 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1935 1936 (face (rainbow-delimiters-depth-1-face) fontified nil) 1936 1938 (face tree-sitter-hl-face:constructor fontified nil) 1938 1939 (face (rainbow-delimiters-depth-1-face) fontified nil) 1939 1953 (fontified nil) 1953 1956 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 1956 1957 (fontified nil) 1957 1958 (face tree-sitter-hl-face:operator fontified nil) 1958 1959 (fontified nil) 1959 1962 (face tree-sitter-hl-face:number fontified nil) 1962 1963 (fontified nil) 1963 1964 (face tree-sitter-hl-face:operator fontified nil) 1964 1965 (fontified nil) 1965 1968 (face tree-sitter-hl-face:number fontified nil) 1968 1969 (fontified nil) 1969 1970 (face tree-sitter-hl-face:operator fontified nil) 1970 1971 (fontified nil) 1971 1975 (face tree-sitter-hl-face:keyword fontified nil) 1975 1976 (fontified nil) 1976 1981 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1981 1982 (face (rainbow-delimiters-depth-1-face) fontified nil) 1982 1994 (fontified nil) 1994 1995 (face (rainbow-delimiters-depth-1-face) fontified nil) 1995 1996 (fontified nil) 1996 1997 (face tree-sitter-hl-face:operator fontified nil) 1997 2004 (fontified nil) 2004 2007 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2007 2008 (face (rainbow-delimiters-depth-1-face) fontified nil) 2008 2019 (fontified nil) 2019 2020 (face tree-sitter-hl-face:operator fontified nil) 2020 2021 (fontified nil) 2021 2025 (face tree-sitter-hl-face:keyword fontified nil) 2025 2026 (fontified nil) 2026 2031 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2031 2032 (face (rainbow-delimiters-depth-1-face) fontified nil) 2032 2042 (fontified nil) 2042 2044 (face tree-sitter-hl-face:keyword fontified nil) 2044 2045 (fontified nil) 2045 2046 (face tree-sitter-hl-face:string fontified nil) 2046 2052 (face tree-sitter-hl-face:string fontified nil) 2052 2053 (face tree-sitter-hl-face:string fontified nil) 2053 2054 (fontified nil) 2054 2056 (face tree-sitter-hl-face:operator fontified nil) 2056 2057 (fontified nil) 2057 2061 (face tree-sitter-hl-face:keyword fontified nil) 2061 2062 (fontified nil) 2062 2074 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2074 2088 (fontified nil) 2088 2090 (face tree-sitter-hl-face:keyword fontified nil) 2090 2091 (fontified nil) 2091 2095 (face tree-sitter-hl-face:keyword fontified nil) 2095 2096 (fontified nil) 2096 2103 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2103 2121 (fontified nil) 2121 2126 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2126 2127 (face (rainbow-delimiters-depth-1-face) fontified nil) 2127 2128 (face tree-sitter-hl-face:string fontified nil) 2128 2155 (face tree-sitter-hl-face:string fontified nil) 2155 2156 (face tree-sitter-hl-face:string fontified nil) 2156 2157 (face (rainbow-delimiters-depth-1-face) fontified nil) 2157 2171 (fontified nil) 2171 2174 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 2174 2175 (fontified nil) 2175 2176 (face tree-sitter-hl-face:operator fontified nil) 2176 2177 (fontified nil) 2177 2181 (face tree-sitter-hl-face:keyword fontified nil) 2181 2182 (fontified nil) 2182 2185 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2185 2186 (face (rainbow-delimiters-depth-1-face) fontified nil) 2186 2198 (fontified nil) 2198 2199 (face (rainbow-delimiters-depth-1-face) fontified nil) 2199 2200 (fontified nil) 2200 2201 (face tree-sitter-hl-face:operator fontified nil) 2201 2202 (fontified nil) 2202 2203 (face (rainbow-delimiters-depth-1-face) fontified nil) 2203 2209 (fontified nil) 2209 2213 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2213 2214 (face (rainbow-delimiters-depth-2-face) fontified nil) 2214 2216 (face tree-sitter-hl-face:constructor fontified nil) 2216 2218 (fontified nil) 2218 2220 (face tree-sitter-hl-face:constructor fontified nil) 2220 2222 (fontified nil) 2222 2228 (face tree-sitter-hl-face:label fontified nil) 2228 2229 (face tree-sitter-hl-face:operator fontified nil) 2229 2233 (face tree-sitter-hl-face:keyword fontified nil) 2233 2234 (fontified nil) 2234 2240 (face tree-sitter-hl-face:property fontified nil) 2240 2241 (face (rainbow-delimiters-depth-2-face) fontified nil) 2241 2242 (fontified nil) 2242 2243 (face tree-sitter-hl-face:operator fontified nil) 2243 2244 (fontified nil) 2244 2246 (face tree-sitter-hl-face:constructor fontified nil) 2246 2247 (fontified nil) 2247 2248 (face tree-sitter-hl-face:operator fontified nil) 2248 2249 (fontified nil) 2249 2254 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2254 2255 (face (rainbow-delimiters-depth-2-face) fontified nil) 2255 2257 (face tree-sitter-hl-face:constructor fontified nil) 2257 2258 (face (rainbow-delimiters-depth-2-face) fontified nil) 2258 2259 (fontified nil) 2259 2260 (face tree-sitter-hl-face:operator fontified nil) 2260 2261 (fontified nil) 2261 2264 (face tree-sitter-hl-face:constructor fontified nil) 2264 2265 (face (rainbow-delimiters-depth-1-face) fontified nil) 2265 2275 (fontified nil) 2275 2277 (face tree-sitter-hl-face:keyword fontified nil) 2277 2278 (fontified nil) 2278 2279 (face tree-sitter-hl-face:string fontified nil) 2279 2286 (face tree-sitter-hl-face:string fontified nil) 2286 2287 (face tree-sitter-hl-face:string fontified nil) 2287 2288 (fontified nil) 2288 2290 (face tree-sitter-hl-face:operator fontified nil) 2290 2291 (fontified nil) 2291 2295 (face tree-sitter-hl-face:keyword fontified nil) 2295 2296 (fontified nil) 2296 2308 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2308 2322 (fontified nil) 2322 2324 (face tree-sitter-hl-face:keyword fontified nil) 2324 2325 (fontified nil) 2325 2329 (face tree-sitter-hl-face:keyword fontified nil) 2329 2330 (fontified nil) 2330 2337 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2337 2355 (fontified nil) 2355 2360 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2360 2361 (face (rainbow-delimiters-depth-1-face) fontified nil) 2361 2362 (face tree-sitter-hl-face:string fontified nil) 2362 2386 (face tree-sitter-hl-face:string fontified nil) 2386 2387 (face tree-sitter-hl-face:string fontified nil) 2387 2388 (face (rainbow-delimiters-depth-1-face) fontified nil) 2388 2389 (fontified nil) 2389 2390 (fontified nil) 2390 2402 (fontified nil) 2402 2405 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 2405 2406 (fontified nil) 2406 2407 (face tree-sitter-hl-face:operator fontified nil) 2407 2408 (fontified nil) 2408 2412 (face tree-sitter-hl-face:keyword fontified nil) 2412 2413 (fontified nil) 2413 2416 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2416 2417 (face (rainbow-delimiters-depth-1-face) fontified nil) 2417 2429 (fontified nil) 2429 2430 (face (rainbow-delimiters-depth-1-face) fontified nil) 2430 2431 (fontified nil) 2431 2432 (face tree-sitter-hl-face:operator fontified nil) 2432 2433 (fontified nil) 2433 2436 (face tree-sitter-hl-face:constructor fontified nil) 2436 2437 (fontified nil) 2437 2438 (face tree-sitter-hl-face:operator fontified nil) 2438 2439 (fontified nil) 2439 2444 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2444 2445 (face (rainbow-delimiters-depth-1-face) fontified nil) 2445 2447 (face tree-sitter-hl-face:constructor fontified nil) 2447 2448 (face (rainbow-delimiters-depth-1-face) fontified nil) 2448 2449 (fontified nil) 2449 2462 (fontified nil) 2462 2464 (face tree-sitter-hl-face:keyword fontified nil) 2464 2465 (fontified nil) 2465 2469 (face tree-sitter-hl-face:keyword fontified nil) 2469 2470 (fontified nil) 2470 2475 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2475 2476 (face (rainbow-delimiters-depth-1-face) fontified nil) 2476 2488 (fontified nil) 2488 2489 (face (rainbow-delimiters-depth-1-face) fontified nil) 2489 2490 (fontified nil) 2490 2491 (face tree-sitter-hl-face:operator fontified nil) 2491 2492 (fontified nil) 2492 2495 (face tree-sitter-hl-face:number fontified nil) 2495 2513 (fontified nil) 2513 2515 (face tree-sitter-hl-face:keyword fontified nil) 2515 2516 (fontified nil) 2516 2520 (face tree-sitter-hl-face:keyword fontified nil) 2520 2521 (fontified nil) 2521 2528 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2528 2550 (fontified nil) 2550 2555 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2555 2556 (face (rainbow-delimiters-depth-1-face) fontified nil) 2556 2557 (face tree-sitter-hl-face:string fontified nil) 2557 2582 (face tree-sitter-hl-face:string fontified nil) 2582 2583 (face tree-sitter-hl-face:string fontified nil) 2583 2585 (fontified nil) 2585 2589 (face tree-sitter-hl-face:keyword fontified nil) 2589 2590 (fontified nil) 2590 2595 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2595 2596 (face (rainbow-delimiters-depth-2-face) fontified nil) 2596 2608 (fontified nil) 2608 2609 (face (rainbow-delimiters-depth-2-face) fontified nil) 2609 2610 (face (rainbow-delimiters-depth-1-face) fontified nil) 2610 2628 (fontified nil) 2628 2631 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 2631 2632 (fontified nil) 2632 2633 (face tree-sitter-hl-face:operator fontified nil) 2633 2640 (fontified nil) 2640 2646 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2646 2647 (face (rainbow-delimiters-depth-1-face) fontified nil) 2647 2648 (face tree-sitter-hl-face:number fontified nil) 2648 2650 (fontified nil) 2650 2654 (face tree-sitter-hl-face:keyword fontified nil) 2654 2655 (fontified nil) 2655 2660 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2660 2661 (face (rainbow-delimiters-depth-2-face) fontified nil) 2661 2673 (fontified nil) 2673 2674 (face (rainbow-delimiters-depth-2-face) fontified nil) 2674 2676 (fontified nil) 2676 2680 (face tree-sitter-hl-face:label fontified nil) 2680 2681 (face tree-sitter-hl-face:operator fontified nil) 2681 2682 (face (rainbow-delimiters-depth-2-face) fontified nil) 2682 2684 (face tree-sitter-hl-face:constructor fontified nil) 2684 2686 (fontified nil) 2686 2688 (face tree-sitter-hl-face:constructor fontified nil) 2688 2689 (face (rainbow-delimiters-depth-2-face) fontified nil) 2689 2691 (fontified nil) 2691 2696 (face tree-sitter-hl-face:label fontified nil) 2696 2697 (face tree-sitter-hl-face:operator fontified nil) 2697 2701 (face tree-sitter-hl-face:keyword fontified nil) 2701 2702 (fontified nil) 2702 2707 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2707 2709 (fontified nil) 2709 2715 (face tree-sitter-hl-face:label fontified nil) 2715 2716 (face tree-sitter-hl-face:operator fontified nil) 2716 2720 (face tree-sitter-hl-face:keyword fontified nil) 2720 2721 (fontified nil) 2721 2727 (face tree-sitter-hl-face:property fontified nil) 2727 2728 (face (rainbow-delimiters-depth-1-face) fontified nil) 2728 2745 (fontified nil) 2745 2748 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 2748 2749 (fontified nil) 2749 2750 (face tree-sitter-hl-face:operator fontified nil) 2750 2751 (fontified nil) 2751 2754 (face tree-sitter-hl-face:constructor fontified nil) 2754 2755 (fontified nil) 2755 2756 (face tree-sitter-hl-face:operator fontified nil) 2756 2757 (fontified nil) 2757 2760 (face tree-sitter-hl-face:constructor fontified nil) 2760 2761 (fontified nil) 2761 2762 (face tree-sitter-hl-face:operator fontified nil) 2762 2763 (fontified nil) 2763 2768 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2768 2769 (face (rainbow-delimiters-depth-1-face) fontified nil) 2769 2771 (face tree-sitter-hl-face:constructor fontified nil) 2771 2772 (face (rainbow-delimiters-depth-1-face) fontified nil) 2772 2782 (fontified nil) 2782 2784 (face tree-sitter-hl-face:keyword fontified nil) 2784 2785 (fontified nil) 2785 2789 (face tree-sitter-hl-face:keyword fontified nil) 2789 2790 (fontified nil) 2790 2797 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2797 2811 (fontified nil) 2811 2813 (face tree-sitter-hl-face:keyword fontified nil) 2813 2814 (fontified nil) 2814 2815 (face tree-sitter-hl-face:string fontified nil) 2815 2818 (face tree-sitter-hl-face:string fontified nil) 2818 2819 (face tree-sitter-hl-face:string fontified nil) 2819 2820 (fontified nil) 2820 2822 (face tree-sitter-hl-face:operator fontified nil) 2822 2823 (fontified nil) 2823 2827 (face tree-sitter-hl-face:keyword fontified nil) 2827 2828 (fontified nil) 2828 2837 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2837 2838 (face (rainbow-delimiters-depth-1-face) fontified nil) 2838 2850 (fontified nil) 2850 2851 (face (rainbow-delimiters-depth-1-face) fontified nil) 2851 2869 (fontified nil) 2869 2871 (face tree-sitter-hl-face:keyword fontified nil) 2871 2872 (fontified nil) 2872 2873 (face tree-sitter-hl-face:string fontified nil) 2873 2877 (face tree-sitter-hl-face:string fontified nil) 2877 2878 (face tree-sitter-hl-face:string fontified nil) 2878 2879 (fontified nil) 2879 2881 (face tree-sitter-hl-face:operator fontified nil) 2881 2882 (fontified nil) 2882 2886 (face tree-sitter-hl-face:keyword fontified nil) 2886 2887 (fontified nil) 2887 2896 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2896 2897 (face (rainbow-delimiters-depth-1-face) fontified nil) 2897 2909 (fontified nil) 2909 2910 (face (rainbow-delimiters-depth-1-face) fontified nil) 2910 2932 (fontified nil) 2932 2937 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2937 2938 (face (rainbow-delimiters-depth-1-face) fontified nil) 2938 2939 (face tree-sitter-hl-face:string fontified nil) 2939 2977 (face tree-sitter-hl-face:string fontified nil) 2977 2978 (face tree-sitter-hl-face:string fontified nil) 2978 2979 (fontified nil) 2979 2980 (face tree-sitter-hl-face:operator fontified nil) 2980 2981 (fontified nil) 2981 2985 (face tree-sitter-hl-face:keyword fontified nil) 2985 2986 (fontified nil) 2986 2991 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2991 2992 (face (rainbow-delimiters-depth-2-face) fontified nil) 2992 3004 (fontified nil) 3004 3005 (face (rainbow-delimiters-depth-2-face) fontified nil) 3005 3006 (fontified nil) 3006 3009 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3009 3010 (face (rainbow-delimiters-depth-2-face) fontified nil) 3010 3011 (face (rainbow-delimiters-depth-2-face) fontified nil) 3011 3012 (fontified nil) 3012 3018 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3018 3019 (face (rainbow-delimiters-depth-2-face) fontified nil) 3019 3020 (face (rainbow-delimiters-depth-2-face) fontified nil) 3020 3021 (fontified nil) 3021 3026 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3026 3027 (face (rainbow-delimiters-depth-2-face) fontified nil) 3027 3028 (face (rainbow-delimiters-depth-2-face) fontified nil) 3028 3029 (face (rainbow-delimiters-depth-1-face) fontified nil) 3029 3046 (fontified nil) 3046 3050 (face tree-sitter-hl-face:keyword fontified nil) 3050 3072 (fontified nil) 3072 3077 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3077 3078 (face (rainbow-delimiters-depth-1-face) fontified nil) 3078 3079 (face tree-sitter-hl-face:string fontified nil) 3079 3114 (face tree-sitter-hl-face:string fontified nil) 3114 3115 (face tree-sitter-hl-face:string fontified nil) 3115 3117 (fontified nil) 3117 3121 (face tree-sitter-hl-face:keyword fontified nil) 3121 3122 (fontified nil) 3122 3127 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3127 3128 (face (rainbow-delimiters-depth-2-face) fontified nil) 3128 3140 (fontified nil) 3140 3141 (face (rainbow-delimiters-depth-2-face) fontified nil) 3141 3142 (face (rainbow-delimiters-depth-1-face) fontified nil) 3142 3155 (fontified nil) 3155 3159 (face tree-sitter-hl-face:keyword fontified nil) 3159 3160 (fontified nil) 3160 3161 (face tree-sitter-hl-face:string fontified nil) 3161 3163 (face tree-sitter-hl-face:string fontified nil) 3163 3164 (face tree-sitter-hl-face:string fontified nil) 3164 3165 (fontified nil) 3165 3167 (face tree-sitter-hl-face:operator fontified nil) 3167 3168 (fontified nil) 3168 3172 (face tree-sitter-hl-face:keyword fontified nil) 3172 3173 (fontified nil) 3173 3182 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3182 3183 (face (rainbow-delimiters-depth-1-face) fontified nil) 3183 3195 (fontified nil) 3195 3196 (face (rainbow-delimiters-depth-1-face) fontified nil) 3196 3214 (fontified nil) 3214 3219 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3219 3220 (face (rainbow-delimiters-depth-1-face) fontified nil) 3220 3221 (face tree-sitter-hl-face:string fontified nil) 3221 3261 (face tree-sitter-hl-face:string fontified nil) 3261 3262 (face tree-sitter-hl-face:string fontified nil) 3262 3263 (fontified nil) 3263 3264 (face tree-sitter-hl-face:operator fontified nil) 3264 3265 (fontified nil) 3265 3269 (face tree-sitter-hl-face:keyword fontified nil) 3269 3270 (fontified nil) 3270 3275 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3275 3276 (face (rainbow-delimiters-depth-2-face) fontified nil) 3276 3288 (fontified nil) 3288 3289 (face (rainbow-delimiters-depth-2-face) fontified nil) 3289 3290 (fontified nil) 3290 3293 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3293 3294 (face (rainbow-delimiters-depth-2-face) fontified nil) 3294 3295 (face (rainbow-delimiters-depth-2-face) fontified nil) 3295 3296 (fontified nil) 3296 3302 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3302 3303 (face (rainbow-delimiters-depth-2-face) fontified nil) 3303 3304 (face (rainbow-delimiters-depth-2-face) fontified nil) 3304 3305 (fontified nil) 3305 3310 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3310 3311 (face (rainbow-delimiters-depth-2-face) fontified nil) 3311 3312 (face (rainbow-delimiters-depth-2-face) fontified nil) 3312 3313 (face (rainbow-delimiters-depth-1-face) fontified nil) 3313 3315 (fontified nil) 3315 3323 (fontified nil) 3323 3329 (face tree-sitter-hl-face:keyword fontified nil) 3329 3330 (fontified nil) 3330 3333 (face tree-sitter-hl-face:constructor fontified nil) 3333 3334 (fontified nil rear-nonsticky nil)) . 6467) (undo-tree-id985 . -3334) (undo-tree-id986 . -3334) (undo-tree-id987 . -3334) (nil rear-nonsticky t 9800 . 9801)) (25975 7727 679937 835000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -1646) (undo-tree-id130 . -1) 1647) nil (25976 15713 203827 931000) 0 nil])
([nil nil ((#("    
    def initWeights(self, post_pop, pre_pop):
        
        Na = self.Na[post_pop]
        Nb = self.Na[pre_pop]
        Kb = self.Ka[pre_pop]
        
        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)
        
        if 'lr' in self.STRUCTURE[post_pop, pre_pop]:
            
            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)
            
            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)

            
            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T
            
            # while torch.abs(self.ksi[0] @ self.ksi[1] - self.LR_COV) > .01:
            #     multivariate_normal = MultivariateNormal(mean, covariance)            
            #     self.ksi = multivariate_normal.sample((Nb,)).T
            
            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', torch.cov(self.ksi))
            
            Pij = (1.0 + self.KAPPA[post_pop, pre_pop]
                   * (torch.outer(self.ksi[0], self.ksi[0])
                      + torch.outer(self.ksi[1], self.ksi[1]))
                   / torch.sqrt(self.Ka[pre_pop]))
            
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0
            
            if self.VERBOSE:
                print('Pij', Pij.shape)
            
        if 'cos' in self.STRUCTURE[post_pop, pre_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na),
                                 dtype=self.FLOAT, device=self.device)
            
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb),
                               dtype=self.FLOAT, device=self.device)
            
            i, j = torch.meshgrid(torch.arange(Na, device=self.device),
                                  torch.arange(Nb, device=self.device),
                                  indexing=\"ij\")
            
            theta_diff = theta[i] - phi[j]
            
            if 'spec' in self.STRUCTURE[post_pop, pre_pop]:
                self.KAPPA[post_pop, pre_pop] = self.KAPPA[post_pop, pre_pop] / torch.sqrt(Kb)
                
            Pij = (1.0 + 2.0 * self.KAPPA[post_pop, pre_pop]
                   * torch.cos(theta_diff - self.PHASE))

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')
            
            Cij = (self.Jab[post_pop, pre_pop]
                   * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij))

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')
                
            Cij = self.Jab[post_pop, pre_pop] * Pij / float(Nb)
            
            if self.SIGMA[post_pop, pre_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[post_pop, pre_pop])
                
                Hij = torch.normal(0, self.SIGMA[post_pop, pre_pop],
                                   size=(Na, Nb),
                                   dtype=self.FLOAT,
                                   device=self.device)
                
                Cij = Cij + Hij / float(Nb)
                
        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[post_pop, pre_pop]:
                if \"spec\" in self.STRUCTURE[post_pop, pre_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[post_pop, pre_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[post_pop, pre_pop])
            elif \"lr\" in self.STRUCTURE[post_pop, pre_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[post_pop, pre_pop].cpu().detach().numpy())
                
        return Cij
" 9 12 (face tree-sitter-hl-face:keyword) 13 24 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function)) 24 25 (face (rainbow-delimiters-depth-1-face)) 25 29 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter)) 31 39 (face tree-sitter-hl-face:variable.parameter) 41 48 (face tree-sitter-hl-face:variable.parameter) 48 49 (face (rainbow-delimiters-depth-1-face)) 68 70 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 71 72 (face tree-sitter-hl-face:operator) 73 77 (face tree-sitter-hl-face:keyword) 78 80 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 80 81 (face (rainbow-delimiters-depth-1-face)) 89 90 (face (rainbow-delimiters-depth-1-face)) 99 101 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 102 103 (face tree-sitter-hl-face:operator) 104 108 (face tree-sitter-hl-face:keyword) 109 111 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 111 112 (face (rainbow-delimiters-depth-1-face)) 119 120 (face (rainbow-delimiters-depth-1-face)) 129 131 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 132 133 (face tree-sitter-hl-face:operator) 134 138 (face tree-sitter-hl-face:keyword) 139 141 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 141 142 (face (rainbow-delimiters-depth-1-face)) 149 150 (face (rainbow-delimiters-depth-1-face)) 168 171 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 172 173 (face tree-sitter-hl-face:operator) 180 186 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 186 187 (face (rainbow-delimiters-depth-1-face)) 187 190 (face tree-sitter-hl-face:number) 192 197 (face tree-sitter-hl-face:label) 197 198 (face tree-sitter-hl-face:operator) 198 202 (face tree-sitter-hl-face:keyword) 203 208 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 210 216 (face tree-sitter-hl-face:label) 216 217 (face tree-sitter-hl-face:operator) 217 221 (face tree-sitter-hl-face:keyword) 222 228 (face tree-sitter-hl-face:property) 228 229 (face (rainbow-delimiters-depth-1-face)) 247 249 (face tree-sitter-hl-face:keyword) 250 251 (face tree-sitter-hl-face:string) 251 253 (face tree-sitter-hl-face:string) 253 254 (face tree-sitter-hl-face:string) 255 257 (face tree-sitter-hl-face:operator) 258 262 (face tree-sitter-hl-face:keyword) 263 272 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 272 273 (face (rainbow-delimiters-depth-1-face)) 290 291 (face (rainbow-delimiters-depth-1-face)) 318 322 (face tree-sitter-hl-face:variable) 323 324 (face tree-sitter-hl-face:operator) 331 337 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 337 338 (face (rainbow-delimiters-depth-1-face)) 338 339 (face (rainbow-delimiters-depth-2-face)) 339 342 (face tree-sitter-hl-face:number) 344 347 (face tree-sitter-hl-face:number) 347 348 (face (rainbow-delimiters-depth-2-face)) 350 355 (face tree-sitter-hl-face:label) 355 356 (face tree-sitter-hl-face:operator) 356 360 (face tree-sitter-hl-face:keyword) 361 366 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 368 374 (face tree-sitter-hl-face:label) 374 375 (face tree-sitter-hl-face:operator) 375 379 (face tree-sitter-hl-face:keyword) 380 386 (face tree-sitter-hl-face:property) 386 387 (face (rainbow-delimiters-depth-1-face)) 413 443 (face tree-sitter-hl-face:comment) 456 466 (face tree-sitter-hl-face:variable) 467 468 (face tree-sitter-hl-face:operator) 475 481 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 481 482 (face (rainbow-delimiters-depth-1-face)) 482 483 (face (rainbow-delimiters-depth-2-face)) 483 484 (face (rainbow-delimiters-depth-3-face)) 484 487 (face tree-sitter-hl-face:number) 489 493 (face tree-sitter-hl-face:keyword) 494 500 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 500 501 (face (rainbow-delimiters-depth-3-face)) 542 543 (face (rainbow-delimiters-depth-3-face)) 543 547 (face tree-sitter-hl-face:keyword) 548 554 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 556 559 (face tree-sitter-hl-face:number) 559 560 (face (rainbow-delimiters-depth-3-face)) 561 562 (face (rainbow-delimiters-depth-2-face)) 564 569 (face tree-sitter-hl-face:label) 569 570 (face tree-sitter-hl-face:operator) 570 574 (face tree-sitter-hl-face:keyword) 575 580 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 582 588 (face tree-sitter-hl-face:label) 588 589 (face tree-sitter-hl-face:operator) 589 593 (face tree-sitter-hl-face:keyword) 594 600 (face tree-sitter-hl-face:property) 600 601 (face (rainbow-delimiters-depth-1-face)) 628 647 (face tree-sitter-hl-face:variable) 648 649 (face tree-sitter-hl-face:operator) 650 668 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call)) 668 669 (face (rainbow-delimiters-depth-1-face)) 685 686 (face (rainbow-delimiters-depth-1-face)) 699 703 (face tree-sitter-hl-face:keyword) 704 707 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 708 709 (face tree-sitter-hl-face:operator) 730 736 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 736 737 (face (rainbow-delimiters-depth-1-face)) 737 738 (face (rainbow-delimiters-depth-2-face)) 738 740 (face tree-sitter-hl-face:constructor) 741 742 (face (rainbow-delimiters-depth-2-face)) 742 743 (face (rainbow-delimiters-depth-1-face)) 744 745 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 771 836 (face tree-sitter-hl-face:comment) 849 925 (face tree-sitter-hl-face:comment) 938 990 (face tree-sitter-hl-face:comment) 1016 1018 (face tree-sitter-hl-face:keyword) 1019 1023 (face tree-sitter-hl-face:keyword) 1024 1031 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1049 1054 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 1054 1055 (face (rainbow-delimiters-depth-1-face)) 1055 1056 (face tree-sitter-hl-face:string) 1056 1059 (face tree-sitter-hl-face:string) 1059 1060 (face tree-sitter-hl-face:string) 1062 1066 (face tree-sitter-hl-face:keyword) 1067 1070 (face tree-sitter-hl-face:property) 1071 1076 (face tree-sitter-hl-face:property) 1076 1077 (face (rainbow-delimiters-depth-1-face)) 1094 1099 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 1099 1100 (face (rainbow-delimiters-depth-1-face)) 1100 1101 (face tree-sitter-hl-face:string) 1101 1111 (face tree-sitter-hl-face:string) 1111 1112 (face tree-sitter-hl-face:string) 1120 1123 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1123 1124 (face (rainbow-delimiters-depth-2-face)) 1124 1128 (face tree-sitter-hl-face:keyword) 1129 1132 (face tree-sitter-hl-face:property) 1132 1133 (face (rainbow-delimiters-depth-2-face)) 1133 1134 (face (rainbow-delimiters-depth-1-face)) 1160 1163 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 1164 1165 (face tree-sitter-hl-face:operator) 1166 1167 (face (rainbow-delimiters-depth-1-face)) 1167 1170 (face tree-sitter-hl-face:number) 1171 1172 (face tree-sitter-hl-face:operator) 1173 1177 (face tree-sitter-hl-face:keyword) 1178 1183 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1183 1184 (face (rainbow-delimiters-depth-2-face)) 1201 1202 (face (rainbow-delimiters-depth-2-face)) 1222 1223 (face tree-sitter-hl-face:operator) 1224 1225 (face (rainbow-delimiters-depth-2-face)) 1231 1236 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1236 1237 (face (rainbow-delimiters-depth-3-face)) 1237 1241 (face tree-sitter-hl-face:keyword) 1242 1245 (face tree-sitter-hl-face:property) 1245 1246 (face (rainbow-delimiters-depth-4-face)) 1246 1247 (face tree-sitter-hl-face:number) 1247 1248 (face (rainbow-delimiters-depth-4-face)) 1250 1254 (face tree-sitter-hl-face:keyword) 1255 1258 (face tree-sitter-hl-face:property) 1258 1259 (face (rainbow-delimiters-depth-4-face)) 1259 1260 (face tree-sitter-hl-face:number) 1260 1261 (face (rainbow-delimiters-depth-4-face)) 1261 1262 (face (rainbow-delimiters-depth-3-face)) 1285 1286 (face tree-sitter-hl-face:operator) 1293 1298 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1298 1299 (face (rainbow-delimiters-depth-3-face)) 1299 1303 (face tree-sitter-hl-face:keyword) 1304 1307 (face tree-sitter-hl-face:property) 1307 1308 (face (rainbow-delimiters-depth-4-face)) 1308 1309 (face tree-sitter-hl-face:number) 1309 1310 (face (rainbow-delimiters-depth-4-face)) 1312 1316 (face tree-sitter-hl-face:keyword) 1317 1320 (face tree-sitter-hl-face:property) 1320 1321 (face (rainbow-delimiters-depth-4-face)) 1321 1322 (face tree-sitter-hl-face:number) 1322 1323 (face (rainbow-delimiters-depth-4-face)) 1323 1324 (face (rainbow-delimiters-depth-3-face)) 1324 1325 (face (rainbow-delimiters-depth-2-face)) 1345 1346 (face tree-sitter-hl-face:operator) 1353 1357 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1357 1358 (face (rainbow-delimiters-depth-2-face)) 1358 1362 (face tree-sitter-hl-face:keyword) 1363 1365 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1365 1366 (face (rainbow-delimiters-depth-3-face)) 1373 1374 (face (rainbow-delimiters-depth-3-face)) 1374 1375 (face (rainbow-delimiters-depth-2-face)) 1375 1376 (face (rainbow-delimiters-depth-1-face)) 1402 1418 (face tree-sitter-hl-face:comment) 1431 1447 (face tree-sitter-hl-face:comment) 1473 1475 (face tree-sitter-hl-face:keyword) 1476 1480 (face tree-sitter-hl-face:keyword) 1481 1488 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1506 1511 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 1511 1512 (face (rainbow-delimiters-depth-1-face)) 1512 1513 (face tree-sitter-hl-face:string) 1513 1516 (face tree-sitter-hl-face:string) 1516 1517 (face tree-sitter-hl-face:string) 1519 1522 (face tree-sitter-hl-face:constructor) 1523 1528 (face tree-sitter-hl-face:property) 1528 1529 (face (rainbow-delimiters-depth-1-face)) 1551 1553 (face tree-sitter-hl-face:keyword) 1554 1555 (face tree-sitter-hl-face:string) 1555 1558 (face tree-sitter-hl-face:string) 1558 1559 (face tree-sitter-hl-face:string) 1560 1562 (face tree-sitter-hl-face:operator) 1563 1567 (face tree-sitter-hl-face:keyword) 1568 1577 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1577 1578 (face (rainbow-delimiters-depth-1-face)) 1595 1596 (face (rainbow-delimiters-depth-1-face)) 1610 1615 (face tree-sitter-hl-face:variable) 1616 1617 (face tree-sitter-hl-face:operator) 1624 1630 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1630 1631 (face (rainbow-delimiters-depth-1-face)) 1631 1632 (face tree-sitter-hl-face:number) 1634 1637 (face tree-sitter-hl-face:number) 1638 1639 (face tree-sitter-hl-face:operator) 1646 1648 (face tree-sitter-hl-face:property) 1650 1653 (face tree-sitter-hl-face:number) 1654 1655 (face tree-sitter-hl-face:operator) 1662 1664 (face tree-sitter-hl-face:property) 1665 1666 (face tree-sitter-hl-face:operator) 1667 1672 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 1672 1673 (face (rainbow-delimiters-depth-2-face)) 1673 1675 (face tree-sitter-hl-face:constructor) 1675 1676 (face (rainbow-delimiters-depth-2-face)) 1711 1716 (face tree-sitter-hl-face:label) 1716 1717 (face tree-sitter-hl-face:operator) 1717 1721 (face tree-sitter-hl-face:keyword) 1722 1727 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1729 1735 (face tree-sitter-hl-face:label) 1735 1736 (face tree-sitter-hl-face:operator) 1736 1740 (face tree-sitter-hl-face:keyword) 1741 1747 (face tree-sitter-hl-face:property) 1747 1748 (face (rainbow-delimiters-depth-1-face)) 1774 1777 (face tree-sitter-hl-face:variable) 1778 1779 (face tree-sitter-hl-face:operator) 1786 1792 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1792 1793 (face (rainbow-delimiters-depth-1-face)) 1793 1794 (face tree-sitter-hl-face:number) 1796 1799 (face tree-sitter-hl-face:number) 1800 1801 (face tree-sitter-hl-face:operator) 1808 1810 (face tree-sitter-hl-face:property) 1812 1815 (face tree-sitter-hl-face:number) 1816 1817 (face tree-sitter-hl-face:operator) 1824 1826 (face tree-sitter-hl-face:property) 1827 1828 (face tree-sitter-hl-face:operator) 1829 1834 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 1834 1835 (face (rainbow-delimiters-depth-2-face)) 1835 1837 (face tree-sitter-hl-face:constructor) 1837 1838 (face (rainbow-delimiters-depth-2-face)) 1871 1876 (face tree-sitter-hl-face:label) 1876 1877 (face tree-sitter-hl-face:operator) 1877 1881 (face tree-sitter-hl-face:keyword) 1882 1887 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 1889 1895 (face tree-sitter-hl-face:label) 1895 1896 (face tree-sitter-hl-face:operator) 1896 1900 (face tree-sitter-hl-face:keyword) 1901 1907 (face tree-sitter-hl-face:property) 1907 1908 (face (rainbow-delimiters-depth-1-face)) 1934 1935 (face tree-sitter-hl-face:variable) 1937 1938 (face tree-sitter-hl-face:variable) 1939 1940 (face tree-sitter-hl-face:operator) 1947 1955 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1955 1956 (face (rainbow-delimiters-depth-1-face)) 1962 1968 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 1968 1969 (face (rainbow-delimiters-depth-2-face)) 1969 1971 (face tree-sitter-hl-face:constructor) 1973 1979 (face tree-sitter-hl-face:label) 1979 1980 (face tree-sitter-hl-face:operator) 1980 1984 (face tree-sitter-hl-face:keyword) 1985 1991 (face tree-sitter-hl-face:property) 1991 1992 (face (rainbow-delimiters-depth-2-face)) 2034 2040 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2040 2041 (face (rainbow-delimiters-depth-2-face)) 2041 2043 (face tree-sitter-hl-face:constructor) 2045 2051 (face tree-sitter-hl-face:label) 2051 2052 (face tree-sitter-hl-face:operator) 2052 2056 (face tree-sitter-hl-face:keyword) 2057 2063 (face tree-sitter-hl-face:property) 2063 2064 (face (rainbow-delimiters-depth-2-face)) 2100 2108 (face tree-sitter-hl-face:label) 2108 2109 (face tree-sitter-hl-face:operator) 2109 2110 (face tree-sitter-hl-face:string) 2110 2112 (face tree-sitter-hl-face:string) 2112 2113 (face tree-sitter-hl-face:string) 2113 2114 (face (rainbow-delimiters-depth-1-face)) 2140 2150 (face tree-sitter-hl-face:variable) 2151 2152 (face tree-sitter-hl-face:operator) 2158 2159 (face (rainbow-delimiters-depth-1-face)) 2160 2161 (face (rainbow-delimiters-depth-1-face)) 2162 2163 (face tree-sitter-hl-face:operator) 2167 2168 (face (rainbow-delimiters-depth-1-face)) 2169 2170 (face (rainbow-delimiters-depth-1-face)) 2196 2198 (face tree-sitter-hl-face:keyword) 2199 2200 (face tree-sitter-hl-face:string) 2200 2204 (face tree-sitter-hl-face:string) 2204 2205 (face tree-sitter-hl-face:string) 2206 2208 (face tree-sitter-hl-face:operator) 2209 2213 (face tree-sitter-hl-face:keyword) 2214 2223 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2223 2224 (face (rainbow-delimiters-depth-1-face)) 2241 2242 (face (rainbow-delimiters-depth-1-face)) 2260 2264 (face tree-sitter-hl-face:keyword) 2265 2270 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2270 2271 (face (rainbow-delimiters-depth-1-face)) 2271 2279 (face tree-sitter-hl-face:variable) 2281 2288 (face tree-sitter-hl-face:variable) 2288 2289 (face (rainbow-delimiters-depth-1-face)) 2290 2291 (face tree-sitter-hl-face:operator) 2292 2296 (face tree-sitter-hl-face:keyword) 2297 2302 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2302 2303 (face (rainbow-delimiters-depth-1-face)) 2320 2321 (face (rainbow-delimiters-depth-1-face)) 2322 2323 (face tree-sitter-hl-face:operator) 2330 2334 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2334 2335 (face (rainbow-delimiters-depth-1-face)) 2335 2337 (face tree-sitter-hl-face:constructor) 2337 2338 (face (rainbow-delimiters-depth-1-face)) 2368 2371 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 2372 2373 (face tree-sitter-hl-face:operator) 2374 2375 (face (rainbow-delimiters-depth-1-face)) 2375 2378 (face tree-sitter-hl-face:number) 2379 2380 (face tree-sitter-hl-face:operator) 2381 2384 (face tree-sitter-hl-face:number) 2385 2386 (face tree-sitter-hl-face:operator) 2387 2391 (face tree-sitter-hl-face:keyword) 2392 2397 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2397 2398 (face (rainbow-delimiters-depth-2-face)) 2415 2416 (face (rainbow-delimiters-depth-2-face)) 2436 2437 (face tree-sitter-hl-face:operator) 2444 2447 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2447 2448 (face (rainbow-delimiters-depth-2-face)) 2459 2460 (face tree-sitter-hl-face:operator) 2461 2465 (face tree-sitter-hl-face:keyword) 2466 2471 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2471 2472 (face (rainbow-delimiters-depth-2-face)) 2472 2473 (face (rainbow-delimiters-depth-1-face)) 2483 2485 (face tree-sitter-hl-face:keyword) 2486 2487 (face tree-sitter-hl-face:string) 2487 2493 (face tree-sitter-hl-face:string) 2493 2494 (face tree-sitter-hl-face:string) 2495 2497 (face tree-sitter-hl-face:operator) 2498 2502 (face tree-sitter-hl-face:keyword) 2503 2515 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2529 2531 (face tree-sitter-hl-face:keyword) 2532 2536 (face tree-sitter-hl-face:keyword) 2537 2544 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2562 2567 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 2567 2568 (face (rainbow-delimiters-depth-1-face)) 2568 2569 (face tree-sitter-hl-face:string) 2569 2596 (face tree-sitter-hl-face:string) 2596 2597 (face tree-sitter-hl-face:string) 2597 2598 (face (rainbow-delimiters-depth-1-face)) 2624 2627 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 2628 2629 (face tree-sitter-hl-face:operator) 2630 2631 (face (rainbow-delimiters-depth-1-face)) 2631 2635 (face tree-sitter-hl-face:keyword) 2636 2639 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2639 2640 (face (rainbow-delimiters-depth-2-face)) 2657 2658 (face (rainbow-delimiters-depth-2-face)) 2678 2679 (face tree-sitter-hl-face:operator) 2680 2681 (face (rainbow-delimiters-depth-2-face)) 2687 2691 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 2691 2692 (face (rainbow-delimiters-depth-3-face)) 2692 2694 (face tree-sitter-hl-face:constructor) 2696 2698 (face tree-sitter-hl-face:constructor) 2700 2706 (face tree-sitter-hl-face:label) 2706 2707 (face tree-sitter-hl-face:operator) 2707 2711 (face tree-sitter-hl-face:keyword) 2712 2718 (face tree-sitter-hl-face:property) 2718 2719 (face (rainbow-delimiters-depth-3-face)) 2720 2721 (face tree-sitter-hl-face:operator) 2722 2724 (face tree-sitter-hl-face:constructor) 2725 2726 (face tree-sitter-hl-face:operator) 2727 2732 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 2732 2733 (face (rainbow-delimiters-depth-3-face)) 2733 2735 (face tree-sitter-hl-face:constructor) 2735 2736 (face (rainbow-delimiters-depth-3-face)) 2737 2738 (face tree-sitter-hl-face:operator) 2739 2742 (face tree-sitter-hl-face:constructor) 2742 2743 (face (rainbow-delimiters-depth-2-face)) 2743 2744 (face (rainbow-delimiters-depth-1-face)) 2754 2756 (face tree-sitter-hl-face:keyword) 2757 2758 (face tree-sitter-hl-face:string) 2758 2765 (face tree-sitter-hl-face:string) 2765 2766 (face tree-sitter-hl-face:string) 2767 2769 (face tree-sitter-hl-face:operator) 2770 2774 (face tree-sitter-hl-face:keyword) 2775 2787 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2801 2803 (face tree-sitter-hl-face:keyword) 2804 2808 (face tree-sitter-hl-face:keyword) 2809 2816 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2834 2839 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 2839 2840 (face (rainbow-delimiters-depth-1-face)) 2840 2841 (face tree-sitter-hl-face:string) 2841 2865 (face tree-sitter-hl-face:string) 2865 2866 (face tree-sitter-hl-face:string) 2866 2867 (face (rainbow-delimiters-depth-1-face)) 2897 2900 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 2901 2902 (face tree-sitter-hl-face:operator) 2903 2907 (face tree-sitter-hl-face:keyword) 2908 2911 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2911 2912 (face (rainbow-delimiters-depth-1-face)) 2929 2930 (face (rainbow-delimiters-depth-1-face)) 2931 2932 (face tree-sitter-hl-face:operator) 2933 2936 (face tree-sitter-hl-face:constructor) 2937 2938 (face tree-sitter-hl-face:operator) 2939 2944 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 2944 2945 (face (rainbow-delimiters-depth-1-face)) 2945 2947 (face tree-sitter-hl-face:constructor) 2947 2948 (face (rainbow-delimiters-depth-1-face)) 2974 2976 (face tree-sitter-hl-face:keyword) 2977 2981 (face tree-sitter-hl-face:keyword) 2982 2987 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 2987 2988 (face (rainbow-delimiters-depth-1-face)) 3005 3006 (face (rainbow-delimiters-depth-1-face)) 3007 3008 (face tree-sitter-hl-face:operator) 3009 3012 (face tree-sitter-hl-face:number) 3030 3032 (face tree-sitter-hl-face:keyword) 3033 3037 (face tree-sitter-hl-face:keyword) 3038 3045 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3067 3072 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3072 3073 (face (rainbow-delimiters-depth-1-face)) 3073 3074 (face tree-sitter-hl-face:string) 3074 3099 (face tree-sitter-hl-face:string) 3099 3100 (face tree-sitter-hl-face:string) 3102 3106 (face tree-sitter-hl-face:keyword) 3107 3112 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3112 3113 (face (rainbow-delimiters-depth-2-face)) 3130 3131 (face (rainbow-delimiters-depth-2-face)) 3131 3132 (face (rainbow-delimiters-depth-1-face)) 3166 3169 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 3170 3171 (face tree-sitter-hl-face:operator) 3178 3184 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3184 3185 (face (rainbow-delimiters-depth-1-face)) 3185 3186 (face tree-sitter-hl-face:number) 3188 3192 (face tree-sitter-hl-face:keyword) 3193 3198 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3198 3199 (face (rainbow-delimiters-depth-2-face)) 3216 3217 (face (rainbow-delimiters-depth-2-face)) 3254 3258 (face tree-sitter-hl-face:label) 3258 3259 (face tree-sitter-hl-face:operator) 3259 3260 (face (rainbow-delimiters-depth-2-face)) 3260 3262 (face tree-sitter-hl-face:constructor) 3264 3266 (face tree-sitter-hl-face:constructor) 3266 3267 (face (rainbow-delimiters-depth-2-face)) 3304 3309 (face tree-sitter-hl-face:label) 3309 3310 (face tree-sitter-hl-face:operator) 3310 3314 (face tree-sitter-hl-face:keyword) 3315 3320 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3357 3363 (face tree-sitter-hl-face:label) 3363 3364 (face tree-sitter-hl-face:operator) 3364 3368 (face tree-sitter-hl-face:keyword) 3369 3375 (face tree-sitter-hl-face:property) 3375 3376 (face (rainbow-delimiters-depth-1-face)) 3410 3413 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor)) 3414 3415 (face tree-sitter-hl-face:operator) 3416 3419 (face tree-sitter-hl-face:constructor) 3420 3421 (face tree-sitter-hl-face:operator) 3422 3425 (face tree-sitter-hl-face:constructor) 3426 3427 (face tree-sitter-hl-face:operator) 3428 3433 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3433 3434 (face (rainbow-delimiters-depth-1-face)) 3434 3436 (face tree-sitter-hl-face:constructor) 3436 3437 (face (rainbow-delimiters-depth-1-face)) 3463 3465 (face tree-sitter-hl-face:keyword) 3466 3470 (face tree-sitter-hl-face:keyword) 3471 3478 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3492 3494 (face tree-sitter-hl-face:keyword) 3495 3496 (face tree-sitter-hl-face:string) 3496 3499 (face tree-sitter-hl-face:string) 3499 3500 (face tree-sitter-hl-face:string) 3501 3503 (face tree-sitter-hl-face:operator) 3504 3508 (face tree-sitter-hl-face:keyword) 3509 3518 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3518 3519 (face (rainbow-delimiters-depth-1-face)) 3536 3537 (face (rainbow-delimiters-depth-1-face)) 3555 3556 (face tree-sitter-hl-face:keyword) 3556 3557 (face tree-sitter-hl-face:keyword) 3558 3559 (face tree-sitter-hl-face:string) 3559 3563 (face tree-sitter-hl-face:string) 3563 3564 (face tree-sitter-hl-face:string) 3565 3567 (face tree-sitter-hl-face:operator) 3568 3572 (face tree-sitter-hl-face:keyword) 3573 3582 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3582 3583 (face (rainbow-delimiters-depth-1-face)) 3600 3601 (face (rainbow-delimiters-depth-1-face)) 3623 3628 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3628 3629 (face (rainbow-delimiters-depth-1-face)) 3629 3630 (face tree-sitter-hl-face:string) 3630 3668 (face tree-sitter-hl-face:string) 3668 3669 (face tree-sitter-hl-face:string) 3670 3671 (face tree-sitter-hl-face:operator) 3672 3676 (face tree-sitter-hl-face:keyword) 3677 3682 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3682 3683 (face (rainbow-delimiters-depth-2-face)) 3700 3701 (face (rainbow-delimiters-depth-2-face)) 3702 3705 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3705 3706 (face (rainbow-delimiters-depth-2-face)) 3706 3707 (face (rainbow-delimiters-depth-2-face)) 3708 3714 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3714 3715 (face (rainbow-delimiters-depth-2-face)) 3715 3716 (face (rainbow-delimiters-depth-2-face)) 3717 3722 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 3722 3723 (face (rainbow-delimiters-depth-2-face)) 3723 3724 (face (rainbow-delimiters-depth-2-face)) 3724 3725 (face (rainbow-delimiters-depth-1-face)) 3742 3746 (face tree-sitter-hl-face:keyword) 3768 3773 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3773 3774 (face (rainbow-delimiters-depth-1-face)) 3774 3775 (face tree-sitter-hl-face:string) 3775 3810 (face tree-sitter-hl-face:string) 3810 3811 (face tree-sitter-hl-face:string) 3813 3817 (face tree-sitter-hl-face:keyword) 3818 3823 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3823 3824 (face (rainbow-delimiters-depth-2-face)) 3841 3842 (face (rainbow-delimiters-depth-2-face)) 3842 3843 (face (rainbow-delimiters-depth-1-face)) 3856 3860 (face tree-sitter-hl-face:keyword) 3861 3862 (face tree-sitter-hl-face:string) 3862 3864 (face tree-sitter-hl-face:string) 3864 3865 (face tree-sitter-hl-face:string) 3866 3868 (face tree-sitter-hl-face:operator) 3869 3873 (face tree-sitter-hl-face:keyword) 3874 3883 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3883 3884 (face (rainbow-delimiters-depth-1-face)) 3901 3902 (face (rainbow-delimiters-depth-1-face)) 3920 3925 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call)) 3925 3926 (face (rainbow-delimiters-depth-1-face)) 3926 3927 (face tree-sitter-hl-face:string) 3927 3967 (face tree-sitter-hl-face:string) 3967 3968 (face tree-sitter-hl-face:string) 3969 3970 (face tree-sitter-hl-face:operator) 3971 3975 (face tree-sitter-hl-face:keyword) 3976 3981 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 3981 3982 (face (rainbow-delimiters-depth-2-face)) 3999 4000 (face (rainbow-delimiters-depth-2-face)) 4001 4004 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4004 4005 (face (rainbow-delimiters-depth-2-face)) 4005 4006 (face (rainbow-delimiters-depth-2-face)) 4007 4013 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4013 4014 (face (rainbow-delimiters-depth-2-face)) 4014 4015 (face (rainbow-delimiters-depth-2-face)) 4016 4021 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property)) 4021 4022 (face (rainbow-delimiters-depth-2-face)) 4022 4023 (face (rainbow-delimiters-depth-2-face)) 4023 4024 (face (rainbow-delimiters-depth-1-face)) 4050 4056 (face tree-sitter-hl-face:keyword) 4057 4060 (face tree-sitter-hl-face:constructor)) . 9801) (undo-tree-id838 . -4061)) ((9801 . 13862)) (25975 7727 675499 741000) 0 nil])
([nil nil ((1646 . 1647)) nil (25976 15713 203825 909000) 0 nil])
([nil nil ((#("pre_pop=" 0 1 (face tree-sitter-hl-face:label fontified t) 1 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:label fontified t) 3 4 (face tree-sitter-hl-face:label fontified t) 4 5 (face tree-sitter-hl-face:label fontified t) 5 6 (face tree-sitter-hl-face:label fontified t) 6 7 (face tree-sitter-hl-face:label fontified t) 7 8 (face tree-sitter-hl-face:operator fontified t)) . 1227)) ((1227 . 1235)) (25975 7727 509356 805000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -1646) (undo-tree-id129 . -1) 1647) nil (25976 15713 203824 863000) 0 nil])
([nil nil ((#("post_pop=" 0 1 (face tree-sitter-hl-face:label fontified t) 1 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:label fontified t) 3 4 (face tree-sitter-hl-face:label fontified t) 4 5 (face tree-sitter-hl-face:label fontified t) 5 6 (face tree-sitter-hl-face:label fontified t) 6 7 (face tree-sitter-hl-face:label fontified t) 7 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t)) . 1211)) ((1211 . 1220) (t 25975 7661 378833 820000)) (25975 7727 16641 587000) 0 nil])
([nil nil ((1646 . 1652)) nil (25976 15713 203822 772000) 0 nil])
([nil nil ((#("import os
import gc
import numpy as np

from yaml import safe_load
from time import perf_counter

import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal

from src.utils import set_seed, get_theta
from src.activation import Activation
from src.plasticity import STP_Model

import warnings
warnings.filterwarnings(\"ignore\")


class Network(nn.Module):
    def __init__(self, conf_file, sim_name, repo_root, **kwargs):
        super().__init__()

        # load parameters
        self.loadConfig(conf_file, sim_name, repo_root, **kwargs)

        # set csts
        self.initConst()

        # scale parameters
        self.scaleParam()

        # set seed for connectivity
        set_seed(self.SEED)
        
        # We define the recurrent network with nn.linear()
        # In pytorch, y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        # so Wij means i presynaptic and j postsynaptic
        
        self.Wab = nn.Linear(self.N_NEURON, self.N_NEURON, bias=True, dtype=self.FLOAT, device=self.device)
        print(self.Wab)
                
        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                W0 = self.initWeights(j_pop, i_pop) # (pre, post)
                
                self.Wab.weight.data[self.csumNa[j_pop] : self.csumNa[j_pop + 1],
                                     self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = W0
                
        # Here we store the constant external input in the bias
        for i_pop in range(self.N_POP):
            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
        
        set_seed(0)
        
        
    def update_rec_input(self, rates):
        '''Dynamics of the recurrent inputs'''
        # rec_input = torch.zeros((self.N_POP, self.N_NEURON), dtype=self.FLOAT, device=self.device)

        # y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        rec_input = self.Wab(rates)
        
        # rec_inputs = self.EXP_DT_TAU * rates + self.DT_TAU * Activation()(net_input)
        
        return rec_input

    def update_net_input(self, rec_input):
        '''Updating the net input into the neurons'''
        
        noise = self.ff_normal.sample((self.N_NEURON,))
        net_input = noise + rec_input
        
        return net_input
    
    def update_rates(self, rates, net_input):
        '''Dynamics of the rates'''
        # using array slices is faster than indices
        if self.RATE_DYN:
            # rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation(func_name=self.TF_TYPE, thresh=self.THRESH[0])(net_input)
            rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation()(net_input)
        else:
            rates = Activation()(net_input)
        
        return rates
    
    def forward(self, rates):
        '''This is the main function of the class'''
        rec_input = self.update_rec_input(rates)
        net_input = self.update_net_input(rec_input)
        rates = self.update_rates(rates, net_input)

        return rates
    
    def print_activity(self, step, rates):

        times = np.round((step - self.N_STEADY) / self.N_STEPS * self.DURATION, 2)
        
        activity = []
        
        activity.append(np.round(torch.mean(rates[:self.csumNa[1]]).cpu().detach().numpy(), 2))

        if self.N_POP > 1:
            activity.append(np.round(torch.mean(rates[self.csumNa[1]:self.csumNa[2]]).cpu().detach().numpy(), 2))
        
        if self.N_POP > 2:
            activity.append(np.round(torch.mean(rates[self.csumNa[2]:]).cpu().detach().numpy(), 2))

        print(
            \"times (s)\",
            np.round(times, 2),
            \"rates (Hz)\",
            activity,
        )
    
    def run(self):

        start = perf_counter()
        
        self.N_STEPS = int(self.DURATION / self.DT)
        self.N_STEADY = int(self.T_STEADY / self.DT)
        self.N_WINDOW = int(self.T_WINDOW / self.DT)
        self.N_STIM_ON = int(self.T_STIM_ON / self.DT)
        self.N_STIM_OFF = int(self.T_STIM_OFF / self.DT)

        with torch.no_grad():
            hidden = self.initRates()
            
            result = []
            for step in range(self.N_STEPS + self.N_STEADY):
                self.update_stim(step)
                hidden = self.forward(hidden)
            
                if step >= self.N_STEADY+1:
                    if step % self.N_WINDOW == 0:
                        if self.VERBOSE:
                            self.print_activity(step - self.N_STEADY, hidden)
                        
                        result.append(hidden.cpu().detach().numpy())
        
        result = np.array(result)
        print('result', result.shape)
        
        # self.theta = get_theta(self.ksi[1].cpu(), self.ksi[0].cpu(), GM=1, IF_NORM=1)
        # print(self.theta.shape)

        # result = result[:, self.theta.argsort()]
        # print('result', result.shape)
        
        print('Saving rates to:', self.DATA_PATH + self.FILE_NAME + '.npy')
        np.save(self.DATA_PATH + self.FILE_NAME + '.npy', result)
        
        for obj in gc.get_objects():
            if torch.is_tensor(obj):
                del obj
        
        # Manually triggering the garbage collector afterwards
        gc.collect()
        torch.cuda.empty_cache()
        
        end = perf_counter()

        print(\"Elapsed (with compilation) = {}s\".format((end - start)))
        
        return result

    def loadConfig(self, conf_file, sim_name, repo_root, **kwargs):
        # Loading configuration file
        conf_path = repo_root + '/conf/'+ conf_file
        print('Loading config from', conf_path)
        param = safe_load(open(conf_path, \"r\"))

        param[\"FILE_NAME\"] = sim_name
        param.update(kwargs)

        for k, v in param.items():
            setattr(self, k, v)

        self.DATA_PATH = repo_root + \"/data/simul/\"
        self.MAT_PATH = repo_root + \"/data/matrix/\"

        if not os.path.exists(self.DATA_PATH):
            os.makedirs(self.DATA_PATH)

        if not os.path.exists(self.MAT_PATH):
            os.makedirs(self.MAT_PATH)

        if self.FLOAT_PRECISION == 32:
            self.FLOAT = torch.float
        else:
            self.FLOAT = torch.float64
        
        self.device = torch.device(self.DEVICE)
    
    def initRates(self):
        return torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)

    def initWeights(self, i_pop, j_pop):

        Na = self.Na[i_pop]
        Nb = self.Na[j_pop]
        Kb = self.Ka[j_pop]

        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)

        if 'lr' in self.STRUCTURE[i_pop, j_pop]:

            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)

            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)


            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T

            while torch.abs(self.ksi[0] @ self.ksi[1]) > .10:
                multivariate_normal = MultivariateNormal(mean, covariance)
                self.ksi = multivariate_normal.sample((Nb,)).T

            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', self.ksi[0] @ self.ksi[1])

            Pij = 1.0 + self.KAPPA[i_pop, j_pop] * (torch.outer(self.ksi[0], self.ksi[0])
                                                    + torch.outer(self.ksi[1], self.ksi[1])) / torch.sqrt(self.Ka[j_pop])
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0

            if self.VERBOSE:
                print('Pij', Pij.shape)

        if 'cos' in self.STRUCTURE[i_pop, j_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na), dtype=self.FLOAT, device=self.device)
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb), dtype=self.FLOAT, device=self.device)

            i, j = torch.meshgrid(torch.arange(Na, device=self.device), torch.arange(Nb, device=self.device), indexing=\"ij\")

            theta_diff = theta[i] - phi[j]

            if 'spec' in self.STRUCTURE[i_pop, j_pop]:
                self.KAPPA[i_pop, j_pop] = self.KAPPA[i_pop, j_pop] / torch.sqrt(Kb)

            Pij = 1.0 + 2.0 * self.KAPPA[i_pop, j_pop] * torch.cos(theta_diff - self.PHASE)

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')

            Cij = self.Jab[i_pop, j_pop] * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij)

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')

            Cij = self.Jab[i_pop, j_pop] * Pij / float(Nb)

            if self.SIGMA[i_pop, j_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[i_pop, j_pop])

                Hij = torch.normal(0, self.SIGMA[i_pop, j_pop], size=(Na, Nb), dtype=self.FLOAT, device=self.device)
                Cij = Cij + Hij / float(Nb)

        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[i_pop, j_pop]:
                if \"spec\" in self.STRUCTURE[i_pop, j_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[i_pop, j_pop])
            elif \"lr\" in self.STRUCTURE[i_pop, j_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())

        return Cij

    def initConst(self):
        self.Na = []
        self.Ka = []

        if 'all2all' in self.CONNECTIVITY:
            self.K = 1.0
        
        for i_pop in range(self.N_POP):
            self.Na.append(int(self.N_NEURON * self.frac[i_pop]))
            self.Ka.append(self.K * self.frac[i_pop])
            # self.Ka.append(self.K)
        
        self.Na = torch.tensor(self.Na, dtype=torch.int, device=self.device)
        self.Ka = torch.tensor(self.Ka, dtype=self.FLOAT, device=self.device)
        self.csumNa = torch.cat((torch.tensor([0], device=self.device), torch.cumsum(self.Na, dim=0)))
        
        if self.VERBOSE:
            print(\"Na\", self.Na, \"Ka\", self.Ka, \"csumNa\", self.csumNa)

        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)
        
        self.EXP_DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        self.DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        
        for i_pop in range(self.N_POP):
            self.EXP_DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.exp(-self.DT / self.TAU[i_pop])
            self.DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = self.DT / self.TAU[i_pop]
        
        # self.EXP_DT_TAU = []
        # self.DT_TAU = []
        
        # for i_pop in range(self.N_POP):
        #     self.EXP_DT_TAU.append(np.exp(-self.DT / self.TAU[i_pop]))
        #     self.DT_TAU.append(self.DT / self.TAU[i_pop])
        
        # self.DT_TAU = torch.tensor(self.DT_TAU, dtype=self.FLOAT, device=self.device)
        # self.EXP_DT_TAU = torch.tensor(self.EXP_DT_TAU, dtype=self.FLOAT, device=self.device)

        
        if self.VERBOSE:
            print(\"DT\", self.DT, \"TAU\", self.TAU)
        
        # if self.VERBOSE:
        #     print(\"EXP_DT_TAU\", self.EXP_DT_TAU, \"DT_TAU\", self.DT_TAU)
        
        self.STRUCTURE = np.array(self.STRUCTURE).reshape(self.N_POP, self.N_POP)
        self.SIGMA = torch.tensor(self.SIGMA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.KAPPA = torch.tensor(self.KAPPA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.PHASE = torch.tensor(self.PHASE * torch.pi / 180.0, dtype=self.FLOAT, device=self.device)
        
        # if self.VERBOSE:
        #     print(self.STRUCTURE)
        #     print(self.SIGMA)
        #     print(self.KAPPA)
        #     print(self.PHASE)


    def scaleParam(self):

        # scaling recurrent weights Jab
        if self.VERBOSE:
            print(\"Jab\", self.Jab)
            
        self.Jab = torch.tensor(self.Jab, dtype=self.FLOAT, device=self.device).reshape(self.N_POP, self.N_POP) * self.GAIN

        for i_pop in range(self.N_POP):
            self.Jab[:, i_pop] = self.Jab[:, i_pop] / torch.sqrt(self.Ka[i_pop])

        # if self.VERBOSE:
        #     print(\"scaled Jab\", self.Jab)

        # scaling FF weights
        if self.VERBOSE:
            print(\"Ja0\", self.Ja0)
        
        self.Ja0 = torch.tensor(self.Ja0, dtype=self.FLOAT, device=self.device)
        self.Ja0 = self.Ja0 * torch.sqrt(self.Ka[0]) * self.M0
        
        # if self.VERBOSE:
        #     print(\"scaled Ja0\", self.Ja0)
        
        self.VAR_FF = torch.sqrt(torch.tensor(self.VAR_FF, dtype=self.FLOAT, device=self.device))
        ff_mean = torch.tensor(0.0, dtype=self.FLOAT, device=self.device)
        self.ff_normal = Normal(ff_mean, self.VAR_FF[0])
        
    def update_stim(self, step):
        \"\"\"Perturb the inputs based on the simulus parameters.\"\"\"
        
        if step == 0:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(0.0)
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(0.0)
                if self.K !=1 and self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
        
        if step == self.N_STIM_ON:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i])
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i])
        
        if step == self.N_STIM_ON and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM ON\")
            
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
            
            # if self.PHI0 == 0:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[0] * self.I0[0] * self.M0)
            # if self.PHI0 == 180:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[0] * self.I0[0] * self.M0)
            
            # if self.PHI0 == 90:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[1] * self.I0[0] * self.M0)
            # if self.PHI0 == 270:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[1] * self.I0[0] * self.M0)
                            
            
        if step == self.N_STIM_OFF and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM OFF\")
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0]

            # for i in range(self.N_POP):
            #     self.Wab[i, i].bias.data.fill_(self.Ja0[i])
        
    def stimFunc(self, i_pop):
        \"\"\"Stimulus shape\"\"\"
        theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(self.Na[i_pop]), dtype=self.FLOAT, device=self.device)
        return self.I0[i_pop] * (1.0 + self.SIGMA0 * torch.cos(theta - self.PHI0 * torch.pi / 180.0)) * torch.sqrt(self.Ka[0]) * self.M0
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 10 (fontified t) 10 16 (face tree-sitter-hl-face:keyword fontified t) 16 20 (fontified t) 20 26 (face tree-sitter-hl-face:keyword fontified t) 26 33 (fontified t) 33 35 (face tree-sitter-hl-face:keyword fontified t) 35 40 (fontified t) 40 44 (face tree-sitter-hl-face:keyword fontified t) 44 50 (fontified t) 50 56 (face tree-sitter-hl-face:keyword fontified t) 56 67 (fontified t) 67 71 (face tree-sitter-hl-face:keyword fontified t) 71 77 (fontified t) 77 83 (face tree-sitter-hl-face:keyword fontified t) 83 98 (fontified t) 98 104 (face tree-sitter-hl-face:keyword fontified t) 104 111 (fontified t) 111 115 (face tree-sitter-hl-face:keyword fontified t) 115 122 (fontified t) 122 128 (face tree-sitter-hl-face:keyword fontified t) 128 132 (fontified t) 132 136 (face tree-sitter-hl-face:keyword fontified t) 136 157 (fontified t) 157 163 (face tree-sitter-hl-face:keyword fontified t) 163 164 (fontified t) 164 170 (face tree-sitter-hl-face:constructor fontified t) 170 172 (fontified t) 172 190 (face tree-sitter-hl-face:constructor fontified t) 190 192 (fontified t) 192 196 (face tree-sitter-hl-face:keyword fontified t) 196 207 (fontified t) 207 213 (face tree-sitter-hl-face:keyword fontified t) 213 234 (fontified t) 234 238 (face tree-sitter-hl-face:keyword fontified t) 238 254 (fontified t) 254 260 (face tree-sitter-hl-face:keyword fontified t) 260 261 (fontified t) 261 271 (face tree-sitter-hl-face:constructor fontified t) 271 272 (fontified t) 272 276 (face tree-sitter-hl-face:keyword fontified t) 276 292 (fontified t) 292 298 (face tree-sitter-hl-face:keyword fontified t) 298 299 (fontified t) 299 308 (face tree-sitter-hl-face:constructor fontified t) 308 310 (fontified t) 310 316 (face tree-sitter-hl-face:keyword fontified t) 316 335 (fontified t) 335 349 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 349 350 (face (rainbow-delimiters-depth-1-face) fontified t) 350 351 (face tree-sitter-hl-face:string fontified t) 351 357 (face tree-sitter-hl-face:string fontified t) 357 358 (face tree-sitter-hl-face:string fontified t) 358 359 (face (rainbow-delimiters-depth-1-face) fontified t) 359 362 (fontified t) 362 367 (face tree-sitter-hl-face:keyword fontified t) 367 368 (fontified t) 368 375 (face tree-sitter-hl-face:constructor fontified t) 375 376 (face (rainbow-delimiters-depth-1-face) fontified t) 376 379 (fontified t) 379 385 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 385 386 (face (rainbow-delimiters-depth-1-face) fontified t) 386 392 (fontified t) 392 395 (face tree-sitter-hl-face:keyword fontified t) 395 396 (fontified t) 396 404 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 404 405 (face (rainbow-delimiters-depth-1-face) fontified t) 405 409 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 409 411 (fontified t) 411 420 (face tree-sitter-hl-face:variable.parameter fontified t) 420 422 (fontified t) 422 430 (face tree-sitter-hl-face:variable.parameter fontified t) 430 432 (fontified t) 432 441 (face tree-sitter-hl-face:variable.parameter fontified t) 441 443 (fontified t) 443 445 (face tree-sitter-hl-face:operator fontified t) 445 451 (face tree-sitter-hl-face:variable.parameter fontified t) 451 452 (face (rainbow-delimiters-depth-1-face) fontified t) 452 462 (fontified t) 462 467 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 467 468 (face (rainbow-delimiters-depth-1-face) fontified t) 468 469 (face (rainbow-delimiters-depth-1-face) fontified t) 469 470 (fontified t) 470 478 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 478 479 (face (rainbow-delimiters-depth-1-face) fontified t) 479 480 (face (rainbow-delimiters-depth-1-face) fontified t) 480 490 (fontified t) 490 507 (face tree-sitter-hl-face:comment fontified t) 507 516 (fontified t) 516 520 (face tree-sitter-hl-face:keyword fontified t) 520 521 (fontified t) 521 531 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 531 532 (face (rainbow-delimiters-depth-1-face) fontified t) 532 564 (fontified t) 564 566 (face tree-sitter-hl-face:operator fontified t) 566 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-1-face) fontified t) 573 583 (fontified t) 583 593 (face tree-sitter-hl-face:comment fontified t) 593 602 (fontified t) 602 606 (face tree-sitter-hl-face:keyword fontified t) 606 607 (fontified t) 607 616 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 616 617 (face (rainbow-delimiters-depth-1-face) fontified t) 617 618 (face (rainbow-delimiters-depth-1-face) fontified t) 618 628 (fontified t) 628 646 (face tree-sitter-hl-face:comment fontified t) 646 655 (fontified t) 655 659 (face tree-sitter-hl-face:keyword fontified t) 659 660 (fontified t) 660 670 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 670 671 (face (rainbow-delimiters-depth-1-face) fontified t) 671 672 (face (rainbow-delimiters-depth-1-face) fontified t) 672 682 (fontified t) 682 709 (face tree-sitter-hl-face:comment fontified t) 709 718 (fontified t) 718 726 (face tree-sitter-hl-face:function.call fontified t) 726 727 (face (rainbow-delimiters-depth-1-face) fontified t) 727 731 (face tree-sitter-hl-face:keyword fontified t) 731 732 (fontified t) 732 736 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 736 737 (face (rainbow-delimiters-depth-1-face) fontified t) 737 755 (fontified t) 755 805 (face tree-sitter-hl-face:comment fontified t) 805 814 (fontified t) 814 873 (face tree-sitter-hl-face:comment fontified t) 873 882 (fontified t) 882 929 (face tree-sitter-hl-face:comment fontified t) 929 947 (fontified t) 947 951 (face tree-sitter-hl-face:keyword fontified t) 951 952 (fontified t) 952 955 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 955 956 (fontified t) 956 957 (face tree-sitter-hl-face:operator fontified t) 957 961 (fontified t) 961 967 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 967 968 (face (rainbow-delimiters-depth-1-face) fontified t) 968 972 (face tree-sitter-hl-face:keyword fontified t) 972 973 (fontified t) 973 981 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 981 983 (fontified t) 983 987 (face tree-sitter-hl-face:keyword fontified t) 987 988 (fontified t) 988 996 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 996 998 (fontified t) 998 1002 (face tree-sitter-hl-face:label fontified t) 1002 1003 (face tree-sitter-hl-face:operator fontified t) 1003 1007 (face tree-sitter-hl-face:constant.builtin fontified t) 1007 1009 (fontified t) 1009 1014 (face tree-sitter-hl-face:label fontified t) 1014 1015 (face tree-sitter-hl-face:operator fontified t) 1015 1019 (face tree-sitter-hl-face:keyword fontified t) 1019 1020 (fontified t) 1020 1025 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1025 1027 (fontified t) 1027 1033 (face tree-sitter-hl-face:label fontified t) 1033 1034 (face tree-sitter-hl-face:operator fontified t) 1034 1038 (face tree-sitter-hl-face:keyword fontified t) 1038 1039 (fontified t) 1039 1045 (face tree-sitter-hl-face:property fontified t) 1045 1046 (face (rainbow-delimiters-depth-1-face) fontified t) 1046 1055 (fontified t) 1055 1060 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1060 1061 (face (rainbow-delimiters-depth-1-face) fontified t) 1061 1065 (face tree-sitter-hl-face:keyword fontified t) 1065 1066 (fontified t) 1066 1069 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1069 1070 (face (rainbow-delimiters-depth-1-face) fontified t) 1070 1096 (fontified t) 1096 1099 (face tree-sitter-hl-face:keyword fontified t) 1099 1100 (fontified t) 1100 1105 (face tree-sitter-hl-face:variable fontified t) 1105 1106 (fontified t) 1106 1108 (face tree-sitter-hl-face:operator fontified t) 1108 1109 (fontified t) 1109 1114 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1114 1115 (face (rainbow-delimiters-depth-1-face) fontified t) 1115 1119 (face tree-sitter-hl-face:keyword fontified t) 1119 1120 (fontified t) 1120 1125 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1125 1126 (face (rainbow-delimiters-depth-1-face) fontified t) 1126 1140 (fontified t) 1140 1143 (face tree-sitter-hl-face:keyword fontified t) 1143 1144 (fontified t) 1144 1149 (face tree-sitter-hl-face:variable fontified t) 1149 1150 (fontified t) 1150 1152 (face tree-sitter-hl-face:operator fontified t) 1152 1153 (fontified t) 1153 1158 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1158 1159 (face (rainbow-delimiters-depth-1-face) fontified t) 1159 1163 (face tree-sitter-hl-face:keyword fontified t) 1163 1164 (fontified t) 1164 1169 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1169 1170 (face (rainbow-delimiters-depth-1-face) fontified t) 1170 1172 (fontified t) 1172 1188 (fontified t) 1188 1190 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 1190 1191 (fontified t) 1191 1192 (face tree-sitter-hl-face:operator fontified t) 1192 1193 (fontified t) 1193 1197 (face tree-sitter-hl-face:keyword fontified t) 1197 1198 (fontified t) 1198 1209 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 1209 1210 (face (rainbow-delimiters-depth-1-face) fontified t) 1210 1217 (fontified t) 1217 1222 (fontified t) 1222 1223 (face (rainbow-delimiters-depth-1-face) fontified t) 1223 1224 (fontified t) 1224 1237 (face tree-sitter-hl-face:comment fontified t) 1237 1238 (fontified t) 1238 1271 (fontified t) 1271 1275 (face tree-sitter-hl-face:keyword fontified t) 1275 1276 (fontified t) 1276 1279 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1279 1280 (fontified t) 1280 1286 (face tree-sitter-hl-face:property fontified t) 1286 1287 (fontified t) 1287 1291 (face tree-sitter-hl-face:property fontified t) 1291 1292 (face (rainbow-delimiters-depth-1-face) fontified t) 1292 1296 (face tree-sitter-hl-face:keyword fontified t) 1296 1297 (fontified t) 1297 1303 (face tree-sitter-hl-face:property fontified t) 1303 1304 (face (rainbow-delimiters-depth-2-face) fontified t) 1304 1309 (fontified t) 1309 1310 (face (rainbow-delimiters-depth-2-face) fontified t) 1310 1313 (fontified t) 1313 1317 (face tree-sitter-hl-face:keyword fontified t) 1317 1318 (fontified t) 1318 1324 (face tree-sitter-hl-face:property fontified t) 1324 1325 (face (rainbow-delimiters-depth-2-face) fontified t) 1325 1331 (fontified t) 1331 1332 (face tree-sitter-hl-face:operator fontified t) 1332 1333 (fontified t) 1333 1334 (face tree-sitter-hl-face:number fontified t) 1334 1335 (face (rainbow-delimiters-depth-2-face) fontified t) 1335 1374 (fontified t) 1374 1378 (face tree-sitter-hl-face:keyword fontified t) 1378 1379 (fontified t) 1379 1385 (face tree-sitter-hl-face:property fontified t) 1385 1386 (face (rainbow-delimiters-depth-2-face) fontified t) 1386 1391 (fontified t) 1391 1392 (face (rainbow-delimiters-depth-2-face) fontified t) 1392 1395 (fontified t) 1395 1399 (face tree-sitter-hl-face:keyword fontified t) 1399 1400 (fontified t) 1400 1406 (face tree-sitter-hl-face:property fontified t) 1406 1407 (face (rainbow-delimiters-depth-2-face) fontified t) 1407 1413 (fontified t) 1413 1414 (face tree-sitter-hl-face:operator fontified t) 1414 1415 (fontified t) 1415 1416 (face tree-sitter-hl-face:number fontified t) 1416 1417 (face (rainbow-delimiters-depth-2-face) fontified t) 1417 1418 (face (rainbow-delimiters-depth-1-face) fontified t) 1418 1419 (fontified t) 1419 1420 (face tree-sitter-hl-face:operator fontified t) 1420 1421 (fontified t) 1421 1423 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 1423 1449 (fontified t) 1449 1483 (face tree-sitter-hl-face:comment fontified t) 1483 1500 (face tree-sitter-hl-face:comment fontified t) 1500 1504 (face tree-sitter-hl-face:comment fontified t) 1504 1513 (fontified t) 1513 1516 (face tree-sitter-hl-face:keyword fontified t) 1516 1517 (fontified t) 1517 1522 (face tree-sitter-hl-face:variable fontified t) 1522 1523 (fontified t) 1523 1525 (face tree-sitter-hl-face:operator fontified t) 1525 1526 (fontified t) 1526 1531 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 1531 1532 (face (rainbow-delimiters-depth-1-face) fontified t) 1532 1536 (face tree-sitter-hl-face:keyword fontified t) 1536 1537 (fontified t) 1537 1542 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1542 1543 (face (rainbow-delimiters-depth-1-face) fontified t) 1543 1557 (fontified t) 1557 1561 (face tree-sitter-hl-face:keyword fontified t) 1561 1562 (fontified t) 1562 1565 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1565 1566 (fontified t) 1566 1570 (face tree-sitter-hl-face:property fontified t) 1570 1571 (fontified t) 1571 1575 (face tree-sitter-hl-face:property fontified t) 1575 1576 (face (rainbow-delimiters-depth-1-face) fontified t) 1576 1580 (face tree-sitter-hl-face:keyword fontified t) 1580 1581 (fontified t) 1581 1587 (face tree-sitter-hl-face:property fontified t) 1587 1588 (face (rainbow-delimiters-depth-2-face) fontified t) 1588 1593 (fontified t) 1593 1594 (face (rainbow-delimiters-depth-2-face) fontified t) 1594 1597 (fontified t) 1597 1601 (face tree-sitter-hl-face:keyword fontified t) 1601 1602 (fontified t) 1602 1608 (face tree-sitter-hl-face:property fontified t) 1608 1609 (face (rainbow-delimiters-depth-2-face) fontified t) 1609 1615 (fontified t) 1615 1616 (face tree-sitter-hl-face:operator fontified t) 1616 1617 (fontified t) 1617 1618 (face tree-sitter-hl-face:number fontified t) 1618 1619 (face (rainbow-delimiters-depth-2-face) fontified t) 1619 1620 (face (rainbow-delimiters-depth-1-face) fontified t) 1620 1621 (fontified t) 1621 1626 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 1626 1627 (face (rainbow-delimiters-depth-1-face) fontified t) 1627 1631 (face tree-sitter-hl-face:keyword fontified t) 1631 1632 (fontified t) 1632 1635 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1635 1636 (face (rainbow-delimiters-depth-2-face) fontified t) 1636 1641 (fontified t) 1641 1642 (face (rainbow-delimiters-depth-2-face) fontified t) 1642 1643 (face (rainbow-delimiters-depth-1-face) fontified t) 1643 1661 (fontified t) 1661 1669 (face tree-sitter-hl-face:function.call fontified t) 1669 1670 (face (rainbow-delimiters-depth-1-face) fontified t) 1670 1671 (face tree-sitter-hl-face:number fontified t) 1671 1672 (face (rainbow-delimiters-depth-1-face) fontified t) 1672 1695 (fontified t) 1695 1698 (face tree-sitter-hl-face:keyword fontified t) 1698 1699 (fontified t) 1699 1715 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 1715 1716 (face (rainbow-delimiters-depth-1-face) fontified t) 1716 1720 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 1720 1722 (fontified t) 1722 1727 (face tree-sitter-hl-face:variable.parameter fontified t) 1727 1728 (face (rainbow-delimiters-depth-1-face) fontified t) 1728 1738 (fontified t) 1738 1740 (face tree-sitter-hl-face:string fontified t) 1740 1741 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 1741 1773 (face tree-sitter-hl-face:string fontified t) 1773 1774 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 1774 1776 (face tree-sitter-hl-face:string fontified t) 1776 1785 (fontified t) 1785 1877 (face tree-sitter-hl-face:comment fontified t) 1877 1887 (fontified t) 1887 1934 (face tree-sitter-hl-face:comment fontified t) 1934 1943 (fontified t) 1943 1952 (face tree-sitter-hl-face:variable fontified t) 1952 1953 (fontified t) 1953 1954 (face tree-sitter-hl-face:operator fontified t) 1954 1955 (fontified t) 1955 1959 (face tree-sitter-hl-face:keyword fontified t) 1959 1960 (fontified t) 1960 1963 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 1963 1964 (face (rainbow-delimiters-depth-1-face) fontified t) 1964 1969 (fontified t) 1969 1970 (face (rainbow-delimiters-depth-1-face) fontified t) 1970 1988 (fontified t) 1988 2066 (face tree-sitter-hl-face:comment fontified t) 2066 2084 (fontified t) 2084 2090 (face tree-sitter-hl-face:keyword fontified t) 2090 2106 (fontified t) 2106 2109 (face tree-sitter-hl-face:keyword fontified t) 2109 2110 (fontified t) 2110 2126 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2126 2127 (face (rainbow-delimiters-depth-1-face) fontified t) 2127 2131 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2131 2133 (fontified t) 2133 2142 (face tree-sitter-hl-face:variable.parameter fontified t) 2142 2143 (face (rainbow-delimiters-depth-1-face) fontified t) 2143 2153 (fontified t) 2153 2155 (face tree-sitter-hl-face:string fontified t) 2155 2156 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2156 2195 (face tree-sitter-hl-face:string fontified t) 2195 2196 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2196 2198 (face tree-sitter-hl-face:string fontified t) 2198 2216 (fontified t) 2216 2221 (face tree-sitter-hl-face:variable fontified t) 2221 2222 (fontified t) 2222 2223 (face tree-sitter-hl-face:operator fontified t) 2223 2224 (fontified t) 2224 2228 (face tree-sitter-hl-face:keyword fontified t) 2228 2229 (fontified t) 2229 2238 (face tree-sitter-hl-face:property fontified t) 2238 2239 (fontified t) 2239 2245 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2245 2246 (face (rainbow-delimiters-depth-1-face) fontified t) 2246 2247 (face (rainbow-delimiters-depth-2-face) fontified t) 2247 2251 (face tree-sitter-hl-face:keyword fontified t) 2251 2252 (fontified t) 2252 2260 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2260 2261 (fontified t) 2261 2262 (face (rainbow-delimiters-depth-2-face) fontified t) 2262 2263 (face (rainbow-delimiters-depth-1-face) fontified t) 2263 2272 (fontified t) 2272 2281 (face tree-sitter-hl-face:variable fontified t) 2281 2282 (fontified t) 2282 2283 (face tree-sitter-hl-face:operator fontified t) 2283 2290 (fontified t) 2290 2291 (face tree-sitter-hl-face:operator fontified t) 2291 2319 (fontified t) 2319 2325 (face tree-sitter-hl-face:keyword fontified t) 2325 2345 (fontified t) 2345 2348 (face tree-sitter-hl-face:keyword fontified t) 2348 2349 (fontified t) 2349 2361 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2361 2362 (face (rainbow-delimiters-depth-1-face) fontified t) 2362 2366 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2366 2368 (fontified t) 2368 2373 (face tree-sitter-hl-face:variable.parameter fontified t) 2373 2375 (fontified t) 2375 2384 (face tree-sitter-hl-face:variable.parameter fontified t) 2384 2385 (face (rainbow-delimiters-depth-1-face) fontified t) 2385 2395 (fontified t) 2395 2397 (face tree-sitter-hl-face:string fontified t) 2397 2398 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2398 2419 (face tree-sitter-hl-face:string fontified t) 2419 2420 (face tree-sitter-hl-face:string fontified t syntax-table (15)) 2420 2422 (face tree-sitter-hl-face:string fontified t) 2422 2431 (fontified t) 2431 2474 (face tree-sitter-hl-face:comment fontified t) 2474 2483 (fontified t) 2483 2485 (face tree-sitter-hl-face:keyword fontified t) 2485 2486 (fontified t) 2486 2490 (face tree-sitter-hl-face:keyword fontified t) 2490 2491 (fontified t) 2491 2499 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2499 2513 (fontified t) 2513 2631 (face tree-sitter-hl-face:comment fontified t) 2631 2644 (fontified t) 2644 2649 (face tree-sitter-hl-face:variable fontified t) 2649 2650 (fontified t) 2650 2651 (face tree-sitter-hl-face:operator fontified t) 2651 2652 (fontified t) 2652 2656 (face tree-sitter-hl-face:keyword fontified t) 2656 2657 (fontified t) 2657 2663 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2663 2667 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2667 2668 (fontified t) 2668 2669 (face tree-sitter-hl-face:operator fontified t) 2669 2676 (fontified t) 2676 2677 (face tree-sitter-hl-face:operator fontified t) 2677 2678 (fontified t) 2678 2682 (face tree-sitter-hl-face:keyword fontified t) 2682 2683 (fontified t) 2683 2689 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2689 2690 (fontified t) 2690 2691 (face tree-sitter-hl-face:operator fontified t) 2691 2692 (fontified t) 2692 2702 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 2702 2703 (face (rainbow-delimiters-depth-1-face) fontified t) 2703 2704 (face (rainbow-delimiters-depth-1-face) fontified t) 2704 2705 (face (rainbow-delimiters-depth-1-face) fontified t) 2705 2714 (fontified t) 2714 2715 (face (rainbow-delimiters-depth-1-face) fontified t) 2715 2717 (fontified t) 2717 2724 (fontified t) 2724 2728 (face tree-sitter-hl-face:keyword fontified t) 2728 2742 (fontified t) 2742 2747 (face tree-sitter-hl-face:variable fontified t) 2747 2748 (fontified t) 2748 2749 (face tree-sitter-hl-face:operator fontified t) 2749 2750 (fontified t) 2750 2760 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 2760 2761 (face (rainbow-delimiters-depth-1-face) fontified t) 2761 2762 (face (rainbow-delimiters-depth-1-face) fontified t) 2762 2763 (face (rainbow-delimiters-depth-1-face) fontified t) 2763 2772 (fontified t) 2772 2773 (face (rainbow-delimiters-depth-1-face) fontified t) 2773 2791 (fontified t) 2791 2797 (face tree-sitter-hl-face:keyword fontified t) 2797 2813 (fontified t) 2813 2816 (face tree-sitter-hl-face:keyword fontified t) 2816 2817 (fontified t) 2817 2824 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 2824 2825 (face (rainbow-delimiters-depth-1-face) fontified t) 2825 2829 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 2829 2831 (fontified t) 2831 2836 (face tree-sitter-hl-face:variable.parameter fontified t) 2836 2837 (face (rainbow-delimiters-depth-1-face) fontified t) 2837 2847 (fontified t) 2847 2849 (face tree-sitter-hl-face:string fontified t) 2849 2850 (syntax-table (15) face tree-sitter-hl-face:string fontified t) 2850 2888 (face tree-sitter-hl-face:string fontified t) 2888 2889 (syntax-table (15) face tree-sitter-hl-face:string fontified t) 2889 2891 (face tree-sitter-hl-face:string fontified t) 2891 2900 (fontified t) 2900 2909 (face tree-sitter-hl-face:variable fontified t) 2909 2910 (fontified t) 2910 2911 (face tree-sitter-hl-face:operator fontified t) 2911 2912 (fontified t) 2912 2916 (face tree-sitter-hl-face:keyword fontified t) 2916 2917 (fontified t) 2917 2923 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2923 2933 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2933 2934 (face (rainbow-delimiters-depth-1-face) fontified t) 2934 2939 (fontified t) 2939 2940 (face (rainbow-delimiters-depth-1-face) fontified t) 2940 2949 (fontified t) 2949 2958 (face tree-sitter-hl-face:variable fontified t) 2958 2959 (fontified t) 2959 2960 (face tree-sitter-hl-face:operator fontified t) 2960 2961 (fontified t) 2961 2965 (face tree-sitter-hl-face:keyword fontified t) 2965 2966 (fontified t) 2966 2982 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 2982 2983 (face (rainbow-delimiters-depth-1-face) fontified t) 2983 2992 (fontified t) 2992 2993 (face (rainbow-delimiters-depth-1-face) fontified t) 2993 3002 (fontified t) 3002 3007 (face tree-sitter-hl-face:variable fontified t) 3007 3008 (fontified t) 3008 3009 (face tree-sitter-hl-face:operator fontified t) 3009 3010 (fontified t) 3010 3014 (face tree-sitter-hl-face:keyword fontified t) 3014 3015 (fontified t) 3015 3027 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3027 3028 (face (rainbow-delimiters-depth-1-face) fontified t) 3028 3044 (fontified t) 3044 3045 (face (rainbow-delimiters-depth-1-face) fontified t) 3045 3055 (fontified t) 3055 3061 (face tree-sitter-hl-face:keyword fontified t) 3061 3077 (fontified t) 3077 3080 (face tree-sitter-hl-face:keyword fontified t) 3080 3081 (fontified t) 3081 3095 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 3095 3096 (face (rainbow-delimiters-depth-1-face) fontified t) 3096 3100 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 3100 3102 (fontified t) 3102 3106 (face tree-sitter-hl-face:variable.parameter fontified t) 3106 3108 (fontified t) 3108 3113 (face tree-sitter-hl-face:variable.parameter fontified t) 3113 3114 (face (rainbow-delimiters-depth-1-face) fontified t) 3114 3125 (fontified t) 3125 3130 (face tree-sitter-hl-face:variable fontified t) 3130 3131 (fontified t) 3131 3132 (face tree-sitter-hl-face:operator fontified t) 3132 3136 (fontified t) 3136 3141 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3141 3142 (face (rainbow-delimiters-depth-1-face) fontified t) 3142 3143 (face (rainbow-delimiters-depth-2-face) fontified t) 3143 3148 (fontified t) 3148 3149 (face tree-sitter-hl-face:operator fontified t) 3149 3150 (fontified t) 3150 3154 (face tree-sitter-hl-face:keyword fontified t) 3154 3155 (fontified t) 3155 3163 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3163 3164 (face (rainbow-delimiters-depth-2-face) fontified t) 3164 3165 (fontified t) 3165 3166 (face tree-sitter-hl-face:operator fontified t) 3166 3167 (fontified t) 3167 3171 (face tree-sitter-hl-face:keyword fontified t) 3171 3172 (fontified t) 3172 3179 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3179 3180 (fontified t) 3180 3181 (face tree-sitter-hl-face:operator fontified t) 3181 3182 (fontified t) 3182 3186 (face tree-sitter-hl-face:keyword fontified t) 3186 3187 (fontified t) 3187 3195 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3195 3197 (fontified t) 3197 3198 (face tree-sitter-hl-face:number fontified t) 3198 3199 (face (rainbow-delimiters-depth-1-face) fontified t) 3199 3217 (fontified t) 3217 3225 (face tree-sitter-hl-face:variable fontified t) 3225 3226 (fontified t) 3226 3227 (face tree-sitter-hl-face:operator fontified t) 3227 3228 (fontified t) 3228 3229 (face (rainbow-delimiters-depth-1-face) fontified t) 3229 3230 (face (rainbow-delimiters-depth-1-face) fontified t) 3230 3257 (fontified t) 3257 3263 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3263 3264 (face (rainbow-delimiters-depth-1-face) fontified t) 3264 3267 (fontified t) 3267 3272 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3272 3273 (face (rainbow-delimiters-depth-2-face) fontified t) 3273 3279 (fontified t) 3279 3283 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3283 3284 (face (rainbow-delimiters-depth-3-face) fontified t) 3284 3289 (fontified t) 3289 3290 (face (rainbow-delimiters-depth-4-face) fontified t) 3290 3291 (fontified t) 3291 3295 (face tree-sitter-hl-face:keyword fontified t) 3295 3296 (fontified t) 3296 3302 (face tree-sitter-hl-face:property fontified t) 3302 3303 (face (rainbow-delimiters-depth-5-face) fontified t) 3303 3304 (face tree-sitter-hl-face:number fontified t) 3304 3305 (face (rainbow-delimiters-depth-5-face) fontified t) 3305 3306 (face (rainbow-delimiters-depth-4-face) fontified t) 3306 3307 (face (rainbow-delimiters-depth-3-face) fontified t) 3307 3308 (fontified t) 3308 3311 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3311 3312 (face (rainbow-delimiters-depth-3-face) fontified t) 3312 3313 (face (rainbow-delimiters-depth-3-face) fontified t) 3313 3314 (fontified t) 3314 3320 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3320 3321 (face (rainbow-delimiters-depth-3-face) fontified t) 3321 3322 (face (rainbow-delimiters-depth-3-face) fontified t) 3322 3323 (fontified t) 3323 3328 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3328 3329 (face (rainbow-delimiters-depth-3-face) fontified t) 3329 3330 (face (rainbow-delimiters-depth-3-face) fontified t) 3330 3332 (fontified t) 3332 3333 (face tree-sitter-hl-face:number fontified t) 3333 3334 (face (rainbow-delimiters-depth-2-face) fontified t) 3334 3335 (face (rainbow-delimiters-depth-1-face) fontified t) 3335 3345 (fontified t) 3345 3347 (face tree-sitter-hl-face:keyword fontified t) 3347 3348 (fontified t) 3348 3352 (face tree-sitter-hl-face:keyword fontified t) 3352 3353 (fontified t) 3353 3358 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3358 3359 (fontified t) 3359 3360 (face tree-sitter-hl-face:operator fontified t) 3360 3361 (fontified t) 3361 3362 (face tree-sitter-hl-face:number fontified t) 3362 3385 (fontified t) 3385 3391 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3391 3392 (face (rainbow-delimiters-depth-1-face) fontified t) 3392 3395 (fontified t) 3395 3400 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3400 3401 (face (rainbow-delimiters-depth-2-face) fontified t) 3401 3407 (fontified t) 3407 3411 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3411 3412 (face (rainbow-delimiters-depth-3-face) fontified t) 3412 3417 (fontified t) 3417 3418 (face (rainbow-delimiters-depth-4-face) fontified t) 3418 3422 (face tree-sitter-hl-face:keyword fontified t) 3422 3423 (fontified t) 3423 3429 (face tree-sitter-hl-face:property fontified t) 3429 3430 (face (rainbow-delimiters-depth-5-face) fontified t) 3430 3431 (face tree-sitter-hl-face:number fontified t) 3431 3432 (face (rainbow-delimiters-depth-5-face) fontified t) 3432 3433 (fontified t) 3433 3437 (face tree-sitter-hl-face:keyword fontified t) 3437 3438 (fontified t) 3438 3444 (face tree-sitter-hl-face:property fontified t) 3444 3445 (face (rainbow-delimiters-depth-5-face) fontified t) 3445 3446 (face tree-sitter-hl-face:number fontified t) 3446 3447 (face (rainbow-delimiters-depth-5-face) fontified t) 3447 3448 (face (rainbow-delimiters-depth-4-face) fontified t) 3448 3449 (face (rainbow-delimiters-depth-3-face) fontified t) 3449 3450 (fontified t) 3450 3453 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3453 3454 (face (rainbow-delimiters-depth-3-face) fontified t) 3454 3455 (face (rainbow-delimiters-depth-3-face) fontified t) 3455 3456 (fontified t) 3456 3462 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3462 3463 (face (rainbow-delimiters-depth-3-face) fontified t) 3463 3464 (face (rainbow-delimiters-depth-3-face) fontified t) 3464 3465 (fontified t) 3465 3470 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3470 3471 (face (rainbow-delimiters-depth-3-face) fontified t) 3471 3472 (face (rainbow-delimiters-depth-3-face) fontified t) 3472 3474 (fontified t) 3474 3475 (face tree-sitter-hl-face:number fontified t) 3475 3476 (face (rainbow-delimiters-depth-2-face) fontified t) 3476 3477 (face (rainbow-delimiters-depth-1-face) fontified t) 3477 3495 (fontified t) 3495 3497 (face tree-sitter-hl-face:keyword fontified t) 3497 3498 (fontified t) 3498 3502 (face tree-sitter-hl-face:keyword fontified t) 3502 3503 (fontified t) 3503 3508 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3508 3509 (fontified t) 3509 3510 (face tree-sitter-hl-face:operator fontified t) 3510 3511 (fontified t) 3511 3512 (face tree-sitter-hl-face:number fontified t) 3512 3535 (fontified t) 3535 3541 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3541 3542 (face (rainbow-delimiters-depth-1-face) fontified t) 3542 3545 (fontified t) 3545 3550 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3550 3551 (face (rainbow-delimiters-depth-2-face) fontified t) 3551 3557 (fontified t) 3557 3561 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3561 3562 (face (rainbow-delimiters-depth-3-face) fontified t) 3562 3567 (fontified t) 3567 3568 (face (rainbow-delimiters-depth-4-face) fontified t) 3568 3572 (face tree-sitter-hl-face:keyword fontified t) 3572 3573 (fontified t) 3573 3579 (face tree-sitter-hl-face:property fontified t) 3579 3580 (face (rainbow-delimiters-depth-5-face) fontified t) 3580 3581 (face tree-sitter-hl-face:number fontified t) 3581 3582 (face (rainbow-delimiters-depth-5-face) fontified t) 3582 3583 (fontified t) 3583 3584 (face (rainbow-delimiters-depth-4-face) fontified t) 3584 3585 (face (rainbow-delimiters-depth-3-face) fontified t) 3585 3586 (fontified t) 3586 3589 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3589 3590 (face (rainbow-delimiters-depth-3-face) fontified t) 3590 3591 (face (rainbow-delimiters-depth-3-face) fontified t) 3591 3592 (fontified t) 3592 3598 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3598 3599 (face (rainbow-delimiters-depth-3-face) fontified t) 3599 3600 (face (rainbow-delimiters-depth-3-face) fontified t) 3600 3601 (fontified t) 3601 3606 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3606 3607 (face (rainbow-delimiters-depth-3-face) fontified t) 3607 3608 (face (rainbow-delimiters-depth-3-face) fontified t) 3608 3610 (fontified t) 3610 3611 (face tree-sitter-hl-face:number fontified t) 3611 3612 (face (rainbow-delimiters-depth-2-face) fontified t) 3612 3613 (face (rainbow-delimiters-depth-1-face) fontified t) 3613 3623 (fontified t) 3623 3628 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3628 3629 (face (rainbow-delimiters-depth-1-face) fontified t) 3629 3642 (fontified t) 3642 3643 (face tree-sitter-hl-face:string fontified t) 3643 3652 (face tree-sitter-hl-face:string fontified t) 3652 3653 (face tree-sitter-hl-face:string fontified t) 3653 3670 (fontified t) 3670 3675 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 3675 3676 (face (rainbow-delimiters-depth-2-face) fontified t) 3676 3683 (fontified t) 3683 3684 (face tree-sitter-hl-face:number fontified t) 3684 3685 (face (rainbow-delimiters-depth-2-face) fontified t) 3685 3699 (fontified t) 3699 3700 (face tree-sitter-hl-face:string fontified t) 3700 3710 (face tree-sitter-hl-face:string fontified t) 3710 3711 (face tree-sitter-hl-face:string fontified t) 3711 3743 (fontified t) 3743 3744 (face (rainbow-delimiters-depth-1-face) fontified t) 3744 3754 (fontified t) 3754 3757 (face tree-sitter-hl-face:keyword fontified t) 3757 3758 (fontified t) 3758 3761 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 3761 3762 (face (rainbow-delimiters-depth-1-face) fontified t) 3762 3766 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 3766 3767 (face (rainbow-delimiters-depth-1-face) fontified t) 3767 3778 (fontified t) 3778 3783 (face tree-sitter-hl-face:variable fontified t) 3783 3784 (fontified t) 3784 3785 (face tree-sitter-hl-face:operator fontified t) 3785 3786 (fontified t) 3786 3798 (face tree-sitter-hl-face:function.call fontified t) 3798 3799 (face (rainbow-delimiters-depth-1-face) fontified t) 3799 3800 (face (rainbow-delimiters-depth-1-face) fontified t) 3800 3818 (fontified t) 3818 3822 (face tree-sitter-hl-face:keyword fontified t) 3822 3823 (fontified t) 3823 3830 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3830 3831 (fontified t) 3831 3832 (face tree-sitter-hl-face:operator fontified t) 3832 3833 (fontified t) 3833 3836 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3836 3837 (face (rainbow-delimiters-depth-1-face) fontified t) 3837 3841 (face tree-sitter-hl-face:keyword fontified t) 3841 3842 (fontified t) 3842 3850 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3850 3851 (fontified t) 3851 3852 (face tree-sitter-hl-face:operator fontified t) 3852 3853 (fontified t) 3853 3857 (face tree-sitter-hl-face:keyword fontified t) 3857 3858 (fontified t) 3858 3860 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3860 3861 (face (rainbow-delimiters-depth-1-face) fontified t) 3861 3870 (fontified t) 3870 3874 (face tree-sitter-hl-face:keyword fontified t) 3874 3875 (fontified t) 3875 3883 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3883 3884 (fontified t) 3884 3885 (face tree-sitter-hl-face:operator fontified t) 3885 3886 (fontified t) 3886 3889 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3889 3890 (face (rainbow-delimiters-depth-1-face) fontified t) 3890 3894 (face tree-sitter-hl-face:keyword fontified t) 3894 3895 (fontified t) 3895 3903 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3903 3904 (fontified t) 3904 3905 (face tree-sitter-hl-face:operator fontified t) 3905 3906 (fontified t) 3906 3910 (face tree-sitter-hl-face:keyword fontified t) 3910 3911 (fontified t) 3911 3913 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3913 3914 (face (rainbow-delimiters-depth-1-face) fontified t) 3914 3923 (fontified t) 3923 3927 (face tree-sitter-hl-face:keyword fontified t) 3927 3928 (fontified t) 3928 3936 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3936 3937 (fontified t) 3937 3938 (face tree-sitter-hl-face:operator fontified t) 3938 3939 (fontified t) 3939 3942 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3942 3943 (face (rainbow-delimiters-depth-1-face) fontified t) 3943 3947 (face tree-sitter-hl-face:keyword fontified t) 3947 3948 (fontified t) 3948 3956 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3956 3957 (fontified t) 3957 3958 (face tree-sitter-hl-face:operator fontified t) 3958 3959 (fontified t) 3959 3963 (face tree-sitter-hl-face:keyword fontified t) 3963 3964 (fontified t) 3964 3966 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3966 3967 (face (rainbow-delimiters-depth-1-face) fontified t) 3967 3976 (fontified t) 3976 3980 (face tree-sitter-hl-face:keyword fontified t) 3980 3981 (fontified t) 3981 3990 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 3990 3991 (fontified t) 3991 3992 (face tree-sitter-hl-face:operator fontified t) 3992 3993 (fontified t) 3993 3996 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 3996 3997 (face (rainbow-delimiters-depth-1-face) fontified t) 3997 4001 (face tree-sitter-hl-face:keyword fontified t) 4001 4002 (fontified t) 4002 4011 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4011 4012 (fontified t) 4012 4013 (face tree-sitter-hl-face:operator fontified t) 4013 4014 (fontified t) 4014 4018 (face tree-sitter-hl-face:keyword fontified t) 4018 4019 (fontified t) 4019 4021 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4021 4022 (face (rainbow-delimiters-depth-1-face) fontified t) 4022 4031 (fontified t) 4031 4035 (face tree-sitter-hl-face:keyword fontified t) 4035 4036 (fontified t) 4036 4046 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4046 4047 (fontified t) 4047 4048 (face tree-sitter-hl-face:operator fontified t) 4048 4049 (fontified t) 4049 4052 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4052 4053 (face (rainbow-delimiters-depth-1-face) fontified t) 4053 4057 (face tree-sitter-hl-face:keyword fontified t) 4057 4058 (fontified t) 4058 4068 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4068 4069 (fontified t) 4069 4070 (face tree-sitter-hl-face:operator fontified t) 4070 4071 (fontified t) 4071 4075 (face tree-sitter-hl-face:keyword fontified t) 4075 4076 (fontified t) 4076 4078 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4078 4079 (face (rainbow-delimiters-depth-1-face) fontified t) 4079 4089 (fontified t) 4089 4093 (face tree-sitter-hl-face:keyword fontified t) 4093 4100 (fontified t) 4100 4107 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4107 4108 (face (rainbow-delimiters-depth-1-face) fontified t) 4108 4109 (face (rainbow-delimiters-depth-1-face) fontified t) 4109 4123 (fontified t) 4123 4129 (face tree-sitter-hl-face:variable fontified t) 4129 4130 (fontified t) 4130 4131 (face tree-sitter-hl-face:operator fontified t) 4131 4132 (fontified t) 4132 4136 (face tree-sitter-hl-face:keyword fontified t) 4136 4137 (fontified t) 4137 4146 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4146 4147 (face (rainbow-delimiters-depth-1-face) fontified t) 4147 4148 (face (rainbow-delimiters-depth-1-face) fontified t) 4148 4174 (fontified t) 4174 4180 (face tree-sitter-hl-face:variable fontified t) 4180 4181 (fontified t) 4181 4182 (face tree-sitter-hl-face:operator fontified t) 4182 4183 (fontified t) 4183 4184 (face (rainbow-delimiters-depth-1-face) fontified t) 4184 4185 (face (rainbow-delimiters-depth-1-face) fontified t) 4185 4198 (fontified t) 4198 4201 (face tree-sitter-hl-face:keyword fontified t) 4201 4202 (fontified t) 4202 4206 (face tree-sitter-hl-face:variable fontified t) 4206 4207 (fontified t) 4207 4209 (face tree-sitter-hl-face:operator fontified t) 4209 4210 (fontified t) 4210 4215 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4215 4216 (face (rainbow-delimiters-depth-1-face) fontified t) 4216 4220 (face tree-sitter-hl-face:keyword fontified t) 4220 4221 (fontified t) 4221 4228 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4228 4229 (fontified t) 4229 4230 (face tree-sitter-hl-face:operator fontified t) 4230 4231 (fontified t) 4231 4235 (face tree-sitter-hl-face:keyword fontified t) 4235 4236 (fontified t) 4236 4244 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4244 4245 (face (rainbow-delimiters-depth-1-face) fontified t) 4245 4263 (fontified t) 4263 4267 (face tree-sitter-hl-face:keyword fontified t) 4267 4268 (fontified t) 4268 4279 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4279 4280 (face (rainbow-delimiters-depth-1-face) fontified t) 4280 4284 (fontified t) 4284 4285 (face (rainbow-delimiters-depth-1-face) fontified t) 4285 4302 (fontified t) 4302 4308 (face tree-sitter-hl-face:variable fontified t) 4308 4309 (fontified t) 4309 4310 (face tree-sitter-hl-face:operator fontified t) 4310 4311 (fontified t) 4311 4315 (face tree-sitter-hl-face:keyword fontified t) 4315 4316 (fontified t) 4316 4323 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4323 4324 (face (rainbow-delimiters-depth-1-face) fontified t) 4324 4330 (fontified t) 4330 4331 (face (rainbow-delimiters-depth-1-face) fontified t) 4331 4361 (fontified t) 4361 4363 (face tree-sitter-hl-face:keyword fontified t) 4363 4369 (fontified t) 4369 4371 (face tree-sitter-hl-face:operator fontified t) 4371 4372 (fontified t) 4372 4376 (face tree-sitter-hl-face:keyword fontified t) 4376 4377 (fontified t) 4377 4385 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4385 4386 (face tree-sitter-hl-face:operator fontified t) 4386 4387 (face tree-sitter-hl-face:number fontified t) 4387 4409 (fontified t) 4409 4411 (face tree-sitter-hl-face:keyword fontified t) 4411 4417 (fontified t) 4417 4418 (face tree-sitter-hl-face:operator fontified t) 4418 4419 (fontified t) 4419 4423 (face tree-sitter-hl-face:keyword fontified t) 4423 4424 (fontified t) 4424 4432 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4432 4433 (fontified t) 4433 4435 (face tree-sitter-hl-face:operator fontified t) 4435 4436 (fontified t) 4436 4437 (face tree-sitter-hl-face:number fontified t) 4437 4463 (fontified t) 4463 4465 (face tree-sitter-hl-face:keyword fontified t) 4465 4466 (fontified t) 4466 4470 (face tree-sitter-hl-face:keyword fontified t) 4470 4471 (fontified t) 4471 4478 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4478 4508 (fontified t) 4508 4512 (face tree-sitter-hl-face:keyword fontified t) 4512 4513 (fontified t) 4513 4527 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4527 4528 (face (rainbow-delimiters-depth-1-face) fontified t) 4528 4533 (fontified t) 4533 4534 (face tree-sitter-hl-face:operator fontified t) 4534 4535 (fontified t) 4535 4539 (face tree-sitter-hl-face:keyword fontified t) 4539 4540 (fontified t) 4540 4548 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4548 4556 (fontified t) 4556 4557 (face (rainbow-delimiters-depth-1-face) fontified t) 4557 4614 (fontified t) 4614 4620 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4620 4621 (face (rainbow-delimiters-depth-1-face) fontified t) 4621 4628 (fontified t) 4628 4631 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4631 4632 (face (rainbow-delimiters-depth-2-face) fontified t) 4632 4633 (face (rainbow-delimiters-depth-2-face) fontified t) 4633 4634 (fontified t) 4634 4640 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4640 4641 (face (rainbow-delimiters-depth-2-face) fontified t) 4641 4642 (face (rainbow-delimiters-depth-2-face) fontified t) 4642 4643 (fontified t) 4643 4648 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4648 4649 (face (rainbow-delimiters-depth-2-face) fontified t) 4649 4650 (face (rainbow-delimiters-depth-2-face) fontified t) 4650 4651 (face (rainbow-delimiters-depth-1-face) fontified t) 4651 4669 (fontified t) 4669 4675 (face tree-sitter-hl-face:variable fontified t) 4675 4676 (fontified t) 4676 4677 (face tree-sitter-hl-face:operator fontified t) 4677 4681 (fontified t) 4681 4686 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 4686 4687 (face (rainbow-delimiters-depth-1-face) fontified t) 4687 4693 (fontified t) 4693 4694 (face (rainbow-delimiters-depth-1-face) fontified t) 4694 4703 (fontified t) 4703 4708 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4708 4709 (face (rainbow-delimiters-depth-1-face) fontified t) 4709 4710 (face tree-sitter-hl-face:string fontified t) 4710 4716 (face tree-sitter-hl-face:string fontified t) 4716 4717 (face tree-sitter-hl-face:string fontified t) 4717 4726 (fontified t) 4726 4731 (face tree-sitter-hl-face:property fontified t) 4731 4732 (face (rainbow-delimiters-depth-1-face) fontified t) 4732 4750 (fontified t) 4750 4829 (face tree-sitter-hl-face:comment fontified t) 4829 4838 (fontified t) 4838 4863 (face tree-sitter-hl-face:comment fontified t) 4863 4873 (fontified t) 4873 4915 (face tree-sitter-hl-face:comment fontified t) 4915 4924 (fontified t) 4924 4955 (face tree-sitter-hl-face:comment fontified t) 4955 4973 (fontified t) 4973 4978 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 4978 4979 (face (rainbow-delimiters-depth-1-face) fontified t) 4979 4980 (face tree-sitter-hl-face:string fontified t) 4980 4996 (face tree-sitter-hl-face:string fontified t) 4996 4997 (face tree-sitter-hl-face:string fontified t) 4997 4999 (fontified t) 4999 5003 (face tree-sitter-hl-face:keyword fontified t) 5003 5004 (fontified t) 5004 5013 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5013 5014 (fontified t) 5014 5015 (face tree-sitter-hl-face:operator fontified t) 5015 5016 (fontified t) 5016 5020 (face tree-sitter-hl-face:keyword fontified t) 5020 5021 (fontified t) 5021 5030 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5030 5031 (fontified t) 5031 5032 (face tree-sitter-hl-face:operator fontified t) 5032 5033 (fontified t) 5033 5034 (face tree-sitter-hl-face:string fontified t) 5034 5038 (face tree-sitter-hl-face:string fontified t) 5038 5039 (face tree-sitter-hl-face:string fontified t) 5039 5040 (face (rainbow-delimiters-depth-1-face) fontified t) 5040 5052 (fontified t) 5052 5056 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5056 5057 (face (rainbow-delimiters-depth-1-face) fontified t) 5057 5061 (face tree-sitter-hl-face:keyword fontified t) 5061 5062 (fontified t) 5062 5071 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5071 5072 (fontified t) 5072 5073 (face tree-sitter-hl-face:operator fontified t) 5073 5074 (fontified t) 5074 5078 (face tree-sitter-hl-face:keyword fontified t) 5078 5079 (fontified t) 5079 5088 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5088 5089 (fontified t) 5089 5090 (face tree-sitter-hl-face:operator fontified t) 5090 5091 (fontified t) 5091 5092 (face tree-sitter-hl-face:string fontified t) 5092 5096 (face tree-sitter-hl-face:string fontified t) 5096 5097 (face tree-sitter-hl-face:string fontified t) 5097 5105 (fontified t) 5105 5106 (face (rainbow-delimiters-depth-1-face) fontified t) 5106 5124 (fontified t) 5124 5127 (face tree-sitter-hl-face:keyword fontified t) 5127 5128 (fontified t) 5128 5131 (face tree-sitter-hl-face:variable fontified t) 5131 5132 (fontified t) 5132 5134 (face tree-sitter-hl-face:operator fontified t) 5134 5138 (fontified t) 5138 5149 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5149 5150 (face (rainbow-delimiters-depth-1-face) fontified t) 5150 5151 (face (rainbow-delimiters-depth-1-face) fontified t) 5151 5165 (fontified t) 5165 5167 (face tree-sitter-hl-face:keyword fontified t) 5167 5174 (fontified t) 5174 5183 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5183 5184 (face (rainbow-delimiters-depth-1-face) fontified t) 5184 5187 (fontified t) 5187 5188 (face (rainbow-delimiters-depth-1-face) fontified t) 5188 5206 (fontified t) 5206 5209 (face tree-sitter-hl-face:keyword fontified t) 5209 5231 (fontified t) 5231 5285 (face tree-sitter-hl-face:comment fontified t) 5285 5297 (fontified t) 5297 5304 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5304 5305 (face (rainbow-delimiters-depth-1-face) fontified t) 5305 5306 (face (rainbow-delimiters-depth-1-face) fontified t) 5306 5321 (fontified t) 5321 5325 (face tree-sitter-hl-face:property fontified t) 5325 5326 (fontified t) 5326 5337 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5337 5338 (face (rainbow-delimiters-depth-1-face) fontified t) 5338 5339 (face (rainbow-delimiters-depth-1-face) fontified t) 5339 5357 (fontified t) 5357 5360 (face tree-sitter-hl-face:variable fontified t) 5360 5361 (fontified t) 5361 5362 (face tree-sitter-hl-face:operator fontified t) 5362 5363 (fontified t) 5363 5375 (face tree-sitter-hl-face:function.call fontified t) 5375 5376 (face (rainbow-delimiters-depth-1-face) fontified t) 5376 5377 (face (rainbow-delimiters-depth-1-face) fontified t) 5377 5387 (fontified t) 5387 5392 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5392 5393 (face (rainbow-delimiters-depth-1-face) fontified t) 5393 5394 (face tree-sitter-hl-face:string fontified t) 5394 5426 (face tree-sitter-hl-face:string fontified t) 5426 5427 (face tree-sitter-hl-face:string fontified t) 5427 5428 (fontified t) 5428 5434 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5434 5435 (face (rainbow-delimiters-depth-2-face) fontified t) 5435 5436 (face (rainbow-delimiters-depth-3-face) fontified t) 5436 5440 (fontified t) 5440 5441 (face tree-sitter-hl-face:operator fontified t) 5441 5447 (fontified t) 5447 5448 (face (rainbow-delimiters-depth-3-face) fontified t) 5448 5449 (face (rainbow-delimiters-depth-2-face) fontified t) 5449 5450 (face (rainbow-delimiters-depth-1-face) fontified t) 5450 5468 (fontified t) 5468 5474 (face tree-sitter-hl-face:keyword fontified t) 5474 5487 (fontified t) 5487 5490 (face tree-sitter-hl-face:keyword fontified t) 5490 5491 (fontified t) 5491 5501 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 5501 5502 (face (rainbow-delimiters-depth-1-face) fontified t) 5502 5506 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 5506 5508 (fontified t) 5508 5517 (face tree-sitter-hl-face:variable.parameter fontified t) 5517 5519 (fontified t) 5519 5527 (face tree-sitter-hl-face:variable.parameter fontified t) 5527 5529 (fontified t) 5529 5538 (face tree-sitter-hl-face:variable.parameter fontified t) 5538 5540 (fontified t) 5540 5542 (face tree-sitter-hl-face:operator fontified t) 5542 5548 (face tree-sitter-hl-face:variable.parameter fontified t) 5548 5549 (face (rainbow-delimiters-depth-1-face) fontified t) 5549 5559 (fontified t) 5559 5587 (face tree-sitter-hl-face:comment fontified t) 5587 5596 (fontified t) 5596 5605 (face tree-sitter-hl-face:variable fontified t) 5605 5606 (fontified t) 5606 5607 (face tree-sitter-hl-face:operator fontified t) 5607 5618 (fontified t) 5618 5619 (face tree-sitter-hl-face:operator fontified t) 5619 5620 (fontified t) 5620 5621 (face tree-sitter-hl-face:string fontified t) 5621 5627 (face tree-sitter-hl-face:string fontified t) 5627 5628 (face tree-sitter-hl-face:string fontified t) 5628 5629 (face tree-sitter-hl-face:operator fontified t) 5629 5648 (fontified t) 5648 5653 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5653 5654 (face (rainbow-delimiters-depth-1-face) fontified t) 5654 5655 (face tree-sitter-hl-face:string fontified t) 5655 5674 (face tree-sitter-hl-face:string fontified t) 5674 5675 (face tree-sitter-hl-face:string fontified t) 5675 5686 (fontified t) 5686 5687 (face (rainbow-delimiters-depth-1-face) fontified t) 5687 5696 (fontified t) 5696 5701 (face tree-sitter-hl-face:variable fontified t) 5701 5702 (fontified t) 5702 5703 (face tree-sitter-hl-face:operator fontified t) 5703 5704 (fontified t) 5704 5713 (face tree-sitter-hl-face:function.call fontified t) 5713 5714 (face (rainbow-delimiters-depth-1-face) fontified t) 5714 5718 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5718 5719 (face (rainbow-delimiters-depth-2-face) fontified t) 5719 5730 (fontified t) 5730 5731 (face tree-sitter-hl-face:string fontified t) 5731 5732 (face tree-sitter-hl-face:string fontified t) 5732 5733 (face tree-sitter-hl-face:string fontified t) 5733 5734 (face (rainbow-delimiters-depth-2-face) fontified t) 5734 5735 (face (rainbow-delimiters-depth-1-face) fontified t) 5735 5750 (fontified t) 5750 5751 (face (rainbow-delimiters-depth-1-face) fontified t) 5751 5752 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified t) 5752 5761 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified t) 5761 5762 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified t) 5762 5763 (face (rainbow-delimiters-depth-1-face) fontified t) 5763 5764 (fontified t) 5764 5765 (face tree-sitter-hl-face:operator fontified t) 5765 5789 (fontified t) 5789 5795 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5795 5796 (face (rainbow-delimiters-depth-1-face) fontified t) 5796 5802 (fontified t) 5802 5803 (face (rainbow-delimiters-depth-1-face) fontified t) 5803 5813 (fontified t) 5813 5816 (face tree-sitter-hl-face:keyword fontified t) 5816 5817 (fontified t) 5817 5818 (face tree-sitter-hl-face:variable fontified t) 5818 5820 (fontified t) 5820 5821 (face tree-sitter-hl-face:variable fontified t) 5821 5822 (fontified t) 5822 5824 (face tree-sitter-hl-face:operator fontified t) 5824 5831 (fontified t) 5831 5836 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 5836 5837 (face (rainbow-delimiters-depth-1-face) fontified t) 5837 5838 (face (rainbow-delimiters-depth-1-face) fontified t) 5838 5852 (fontified t) 5852 5859 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 5859 5860 (face (rainbow-delimiters-depth-1-face) fontified t) 5860 5864 (face tree-sitter-hl-face:keyword fontified t) 5864 5870 (fontified t) 5870 5871 (face (rainbow-delimiters-depth-1-face) fontified t) 5871 5873 (fontified t) 5873 5881 (fontified t) 5881 5885 (face tree-sitter-hl-face:keyword fontified t) 5885 5886 (fontified t) 5886 5895 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5895 5896 (fontified t) 5896 5897 (face tree-sitter-hl-face:operator fontified t) 5897 5908 (fontified t) 5908 5909 (face tree-sitter-hl-face:operator fontified t) 5909 5910 (fontified t) 5910 5911 (face tree-sitter-hl-face:string fontified t) 5911 5923 (face tree-sitter-hl-face:string fontified t) 5923 5924 (face tree-sitter-hl-face:string fontified t) 5924 5925 (fontified t) 5925 5933 (fontified t) 5933 5937 (face tree-sitter-hl-face:keyword fontified t) 5937 5938 (fontified t) 5938 5946 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 5946 5947 (fontified t) 5947 5948 (face tree-sitter-hl-face:operator fontified t) 5948 5959 (fontified t) 5959 5960 (face tree-sitter-hl-face:operator fontified t) 5960 5961 (fontified t) 5961 5962 (face tree-sitter-hl-face:string fontified t) 5962 5975 (face tree-sitter-hl-face:string fontified t) 5975 5976 (face tree-sitter-hl-face:string fontified t) 5976 5986 (fontified t) 5986 5988 (face tree-sitter-hl-face:keyword fontified t) 5988 5989 (fontified t) 5989 5992 (face tree-sitter-hl-face:operator fontified t) 5992 5996 (fontified t) 5996 6000 (face tree-sitter-hl-face:property fontified t) 6000 6001 (fontified t) 6001 6007 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6007 6008 (face (rainbow-delimiters-depth-1-face) fontified t) 6008 6012 (face tree-sitter-hl-face:keyword fontified t) 6012 6013 (fontified t) 6013 6022 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6022 6023 (face (rainbow-delimiters-depth-1-face) fontified t) 6023 6040 (fontified t) 6040 6048 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6048 6049 (face (rainbow-delimiters-depth-1-face) fontified t) 6049 6053 (face tree-sitter-hl-face:keyword fontified t) 6053 6054 (fontified t) 6054 6063 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6063 6064 (face (rainbow-delimiters-depth-1-face) fontified t) 6064 6074 (fontified t) 6074 6076 (face tree-sitter-hl-face:keyword fontified t) 6076 6077 (fontified t) 6077 6080 (face tree-sitter-hl-face:operator fontified t) 6080 6084 (fontified t) 6084 6088 (face tree-sitter-hl-face:property fontified t) 6088 6089 (fontified t) 6089 6095 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6095 6096 (face (rainbow-delimiters-depth-1-face) fontified t) 6096 6100 (face tree-sitter-hl-face:keyword fontified t) 6100 6101 (fontified t) 6101 6109 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6109 6110 (face (rainbow-delimiters-depth-1-face) fontified t) 6110 6127 (fontified t) 6127 6135 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6135 6136 (face (rainbow-delimiters-depth-1-face) fontified t) 6136 6140 (face tree-sitter-hl-face:keyword fontified t) 6140 6141 (fontified t) 6141 6149 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6149 6150 (face (rainbow-delimiters-depth-1-face) fontified t) 6150 6160 (fontified t) 6160 6162 (face tree-sitter-hl-face:keyword fontified t) 6162 6163 (fontified t) 6163 6167 (face tree-sitter-hl-face:keyword fontified t) 6167 6168 (fontified t) 6168 6183 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6183 6184 (fontified t) 6184 6186 (face tree-sitter-hl-face:operator fontified t) 6186 6187 (fontified t) 6187 6189 (face tree-sitter-hl-face:number fontified t) 6189 6203 (fontified t) 6203 6207 (face tree-sitter-hl-face:keyword fontified t) 6207 6208 (fontified t) 6208 6213 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6213 6214 (fontified t) 6214 6215 (face tree-sitter-hl-face:operator fontified t) 6215 6222 (fontified t) 6222 6227 (face tree-sitter-hl-face:property fontified t) 6227 6236 (fontified t) 6236 6240 (face tree-sitter-hl-face:keyword fontified t) 6240 6254 (fontified t) 6254 6258 (face tree-sitter-hl-face:keyword fontified t) 6258 6259 (fontified t) 6259 6264 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6264 6265 (fontified t) 6265 6266 (face tree-sitter-hl-face:operator fontified t) 6266 6273 (fontified t) 6273 6280 (face tree-sitter-hl-face:property fontified t) 6280 6298 (fontified t) 6298 6302 (face tree-sitter-hl-face:keyword fontified t) 6302 6303 (fontified t) 6303 6309 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 6309 6310 (fontified t) 6310 6311 (face tree-sitter-hl-face:operator fontified t) 6311 6318 (fontified t) 6318 6324 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6324 6325 (face (rainbow-delimiters-depth-1-face) fontified t) 6325 6329 (face tree-sitter-hl-face:keyword fontified t) 6329 6330 (fontified t) 6330 6336 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6336 6337 (face (rainbow-delimiters-depth-1-face) fontified t) 6337 6347 (fontified t) 6347 6350 (face tree-sitter-hl-face:keyword fontified t) 6350 6351 (fontified t) 6351 6360 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 6360 6361 (face (rainbow-delimiters-depth-1-face) fontified t) 6361 6365 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 6365 6366 (face (rainbow-delimiters-depth-1-face) fontified t) 6366 6376 (fontified t) 6376 6382 (face tree-sitter-hl-face:keyword fontified t) 6382 6389 (fontified t) 6389 6394 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6394 6395 (face (rainbow-delimiters-depth-1-face) fontified t) 6395 6399 (face tree-sitter-hl-face:keyword fontified t) 6399 6400 (fontified t) 6400 6408 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6408 6410 (fontified t) 6410 6415 (face tree-sitter-hl-face:label fontified t) 6415 6416 (face tree-sitter-hl-face:operator fontified t) 6416 6420 (face tree-sitter-hl-face:keyword fontified t) 6420 6421 (fontified t) 6421 6426 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6426 6428 (fontified t) 6428 6434 (face tree-sitter-hl-face:label fontified t) 6434 6435 (face tree-sitter-hl-face:operator fontified t) 6435 6439 (face tree-sitter-hl-face:keyword fontified t) 6439 6440 (fontified t) 6440 6446 (face tree-sitter-hl-face:property fontified t) 6446 6447 (face (rainbow-delimiters-depth-1-face) fontified t) 6447 6448 (fontified t) 6448 6449 (fontified t) 6449 6453 (fontified t) 6453 6456 (face tree-sitter-hl-face:keyword fontified t) 6456 6457 (fontified t) 6457 6468 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 6468 6469 (face (rainbow-delimiters-depth-1-face) fontified t) 6469 6473 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 6473 6475 (fontified t) 6475 6480 (face tree-sitter-hl-face:variable.parameter fontified t) 6480 6482 (fontified t) 6482 6487 (face tree-sitter-hl-face:variable.parameter fontified t) 6487 6488 (face (rainbow-delimiters-depth-1-face) fontified t) 6488 6499 (fontified t) 6499 6501 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6501 6502 (fontified t) 6502 6503 (face tree-sitter-hl-face:operator fontified t) 6503 6504 (fontified t) 6504 6508 (face tree-sitter-hl-face:keyword fontified t) 6508 6509 (fontified t) 6509 6511 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6511 6512 (face (rainbow-delimiters-depth-1-face) fontified t) 6512 6517 (fontified t) 6517 6518 (face (rainbow-delimiters-depth-1-face) fontified t) 6518 6527 (fontified t) 6527 6529 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6529 6530 (fontified t) 6530 6531 (face tree-sitter-hl-face:operator fontified t) 6531 6532 (fontified t) 6532 6536 (face tree-sitter-hl-face:keyword fontified t) 6536 6537 (fontified t) 6537 6539 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6539 6540 (face (rainbow-delimiters-depth-1-face) fontified t) 6540 6545 (fontified t) 6545 6546 (face (rainbow-delimiters-depth-1-face) fontified t) 6546 6555 (fontified t) 6555 6557 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6557 6558 (fontified t) 6558 6559 (face tree-sitter-hl-face:operator fontified t) 6559 6560 (fontified t) 6560 6564 (face tree-sitter-hl-face:keyword fontified t) 6564 6565 (fontified t) 6565 6567 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6567 6568 (face (rainbow-delimiters-depth-1-face) fontified t) 6568 6573 (fontified t) 6573 6574 (face (rainbow-delimiters-depth-1-face) fontified t) 6574 6584 (fontified t) 6584 6587 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 6587 6588 (fontified t) 6588 6589 (face tree-sitter-hl-face:operator fontified t) 6589 6596 (fontified t) 6596 6602 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6602 6603 (face (rainbow-delimiters-depth-1-face) fontified t) 6603 6606 (face tree-sitter-hl-face:number fontified t) 6606 6608 (fontified t) 6608 6613 (face tree-sitter-hl-face:label fontified t) 6613 6614 (face tree-sitter-hl-face:operator fontified t) 6614 6618 (face tree-sitter-hl-face:keyword fontified t) 6618 6619 (fontified t) 6619 6624 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6624 6626 (fontified t) 6626 6632 (face tree-sitter-hl-face:label fontified t) 6632 6633 (face tree-sitter-hl-face:operator fontified t) 6633 6637 (face tree-sitter-hl-face:keyword fontified t) 6637 6638 (fontified t) 6638 6644 (face tree-sitter-hl-face:property fontified t) 6644 6645 (face (rainbow-delimiters-depth-1-face) fontified t) 6645 6655 (fontified t) 6655 6657 (face tree-sitter-hl-face:keyword fontified t) 6657 6658 (fontified t) 6658 6659 (face tree-sitter-hl-face:string fontified t) 6659 6661 (face tree-sitter-hl-face:string fontified t) 6661 6662 (face tree-sitter-hl-face:string fontified t) 6662 6663 (fontified t) 6663 6665 (face tree-sitter-hl-face:operator fontified t) 6665 6666 (fontified t) 6666 6670 (face tree-sitter-hl-face:keyword fontified t) 6670 6671 (fontified t) 6671 6680 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6680 6681 (face (rainbow-delimiters-depth-1-face) fontified t) 6681 6693 (fontified t) 6693 6694 (face (rainbow-delimiters-depth-1-face) fontified t) 6694 6709 (fontified t) 6709 6713 (face tree-sitter-hl-face:variable fontified t) 6713 6714 (fontified t) 6714 6715 (face tree-sitter-hl-face:operator fontified t) 6715 6722 (fontified t) 6722 6728 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6728 6729 (face (rainbow-delimiters-depth-1-face) fontified t) 6729 6730 (face (rainbow-delimiters-depth-2-face) fontified t) 6730 6733 (face tree-sitter-hl-face:number fontified t) 6733 6735 (fontified t) 6735 6738 (face tree-sitter-hl-face:number fontified t) 6738 6739 (face (rainbow-delimiters-depth-2-face) fontified t) 6739 6741 (fontified t) 6741 6746 (face tree-sitter-hl-face:label fontified t) 6746 6747 (face tree-sitter-hl-face:operator fontified t) 6747 6751 (face tree-sitter-hl-face:keyword fontified t) 6751 6752 (fontified t) 6752 6757 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6757 6759 (fontified t) 6759 6765 (face tree-sitter-hl-face:label fontified t) 6765 6766 (face tree-sitter-hl-face:operator fontified t) 6766 6770 (face tree-sitter-hl-face:keyword fontified t) 6770 6771 (fontified t) 6771 6777 (face tree-sitter-hl-face:property fontified t) 6777 6778 (face (rainbow-delimiters-depth-1-face) fontified t) 6778 6792 (fontified t) 6792 6822 (face tree-sitter-hl-face:comment fontified t) 6822 6835 (fontified t) 6835 6845 (face tree-sitter-hl-face:variable fontified t) 6845 6846 (fontified t) 6846 6847 (face tree-sitter-hl-face:operator fontified t) 6847 6854 (fontified t) 6854 6860 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 6860 6861 (face (rainbow-delimiters-depth-1-face) fontified t) 6861 6862 (face (rainbow-delimiters-depth-2-face) fontified t) 6862 6863 (face (rainbow-delimiters-depth-3-face) fontified t) 6863 6866 (face tree-sitter-hl-face:number fontified t) 6866 6868 (fontified t) 6868 6872 (face tree-sitter-hl-face:keyword fontified t) 6872 6873 (fontified t) 6873 6879 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6879 6880 (face (rainbow-delimiters-depth-3-face) fontified t) 6880 6921 (fontified t) 6921 6922 (face (rainbow-delimiters-depth-3-face) fontified t) 6922 6926 (face tree-sitter-hl-face:keyword fontified t) 6926 6927 (fontified t) 6927 6933 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6933 6935 (fontified t) 6935 6938 (face tree-sitter-hl-face:number fontified t) 6938 6939 (face (rainbow-delimiters-depth-3-face) fontified t) 6939 6940 (fontified t) 6940 6941 (face (rainbow-delimiters-depth-2-face) fontified t) 6941 6943 (fontified t) 6943 6948 (face tree-sitter-hl-face:label fontified t) 6948 6949 (face tree-sitter-hl-face:operator fontified t) 6949 6953 (face tree-sitter-hl-face:keyword fontified t) 6953 6954 (fontified t) 6954 6959 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 6959 6961 (fontified t) 6961 6967 (face tree-sitter-hl-face:label fontified t) 6967 6968 (face tree-sitter-hl-face:operator fontified t) 6968 6972 (face tree-sitter-hl-face:keyword fontified t) 6972 6973 (fontified t) 6973 6979 (face tree-sitter-hl-face:property fontified t) 6979 6980 (face (rainbow-delimiters-depth-1-face) fontified t) 6980 6995 (fontified t) 6995 7014 (face tree-sitter-hl-face:variable fontified t) 7014 7015 (fontified t) 7015 7016 (face tree-sitter-hl-face:operator fontified t) 7016 7017 (fontified t) 7017 7035 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 7035 7036 (face (rainbow-delimiters-depth-1-face) fontified t) 7036 7052 (fontified t) 7052 7053 (face (rainbow-delimiters-depth-1-face) fontified t) 7053 7066 (fontified t) 7066 7070 (face tree-sitter-hl-face:keyword fontified t) 7070 7071 (fontified t) 7071 7074 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 7074 7075 (fontified t) 7075 7076 (face tree-sitter-hl-face:operator fontified t) 7076 7097 (fontified t) 7097 7103 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7103 7104 (face (rainbow-delimiters-depth-1-face) fontified t) 7104 7105 (face (rainbow-delimiters-depth-2-face) fontified t) 7105 7107 (face tree-sitter-hl-face:constructor fontified t) 7107 7108 (fontified t) 7108 7109 (face (rainbow-delimiters-depth-2-face) fontified t) 7109 7110 (face (rainbow-delimiters-depth-1-face) fontified t) 7110 7111 (fontified t) 7111 7112 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7112 7126 (fontified t) 7126 7131 (face tree-sitter-hl-face:keyword fontified t) 7131 7138 (fontified t) 7138 7141 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7141 7142 (face (rainbow-delimiters-depth-1-face) fontified t) 7142 7146 (face tree-sitter-hl-face:keyword fontified t) 7146 7147 (fontified t) 7147 7150 (face tree-sitter-hl-face:property fontified t) 7150 7151 (face (rainbow-delimiters-depth-2-face) fontified t) 7151 7152 (face tree-sitter-hl-face:number fontified t) 7152 7153 (face (rainbow-delimiters-depth-2-face) fontified t) 7153 7154 (fontified t) 7154 7155 (face tree-sitter-hl-face:operator fontified t) 7155 7156 (fontified t) 7156 7160 (face tree-sitter-hl-face:keyword fontified t) 7160 7161 (fontified t) 7161 7164 (face tree-sitter-hl-face:property fontified t) 7164 7165 (face (rainbow-delimiters-depth-2-face) fontified t) 7165 7166 (face tree-sitter-hl-face:number fontified t) 7166 7167 (face (rainbow-delimiters-depth-2-face) fontified t) 7167 7168 (face (rainbow-delimiters-depth-1-face) fontified t) 7168 7169 (fontified t) 7169 7170 (face tree-sitter-hl-face:operator fontified t) 7170 7171 (fontified t) 7171 7174 (face tree-sitter-hl-face:number fontified t) 7174 7192 (fontified t) 7192 7211 (face tree-sitter-hl-face:variable fontified t) 7211 7212 (fontified t) 7212 7213 (face tree-sitter-hl-face:operator fontified t) 7213 7214 (fontified t) 7214 7232 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 7232 7233 (face (rainbow-delimiters-depth-1-face) fontified t) 7233 7249 (fontified t) 7249 7250 (face (rainbow-delimiters-depth-1-face) fontified t) 7250 7267 (fontified t) 7267 7271 (face tree-sitter-hl-face:keyword fontified t) 7271 7272 (fontified t) 7272 7275 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 7275 7276 (fontified t) 7276 7277 (face tree-sitter-hl-face:operator fontified t) 7277 7298 (fontified t) 7298 7304 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7304 7305 (face (rainbow-delimiters-depth-1-face) fontified t) 7305 7306 (face (rainbow-delimiters-depth-2-face) fontified t) 7306 7308 (face tree-sitter-hl-face:constructor fontified t) 7308 7309 (fontified t) 7309 7310 (face (rainbow-delimiters-depth-2-face) fontified t) 7310 7311 (face (rainbow-delimiters-depth-1-face) fontified t) 7311 7312 (fontified t) 7312 7313 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7313 7327 (fontified t) 7327 7329 (face tree-sitter-hl-face:keyword fontified t) 7329 7330 (fontified t) 7330 7334 (face tree-sitter-hl-face:keyword fontified t) 7334 7335 (fontified t) 7335 7342 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7342 7360 (fontified t) 7360 7365 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7365 7366 (face (rainbow-delimiters-depth-1-face) fontified t) 7366 7367 (face tree-sitter-hl-face:string fontified t) 7367 7370 (face tree-sitter-hl-face:string fontified t) 7370 7371 (face tree-sitter-hl-face:string fontified t) 7371 7373 (fontified t) 7373 7377 (face tree-sitter-hl-face:keyword fontified t) 7377 7378 (fontified t) 7378 7381 (face tree-sitter-hl-face:property fontified t) 7381 7382 (fontified t) 7382 7387 (face tree-sitter-hl-face:property fontified t) 7387 7388 (face (rainbow-delimiters-depth-1-face) fontified t) 7388 7405 (fontified t) 7405 7410 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7410 7411 (face (rainbow-delimiters-depth-1-face) fontified t) 7411 7412 (face tree-sitter-hl-face:string fontified t) 7412 7422 (face tree-sitter-hl-face:string fontified t) 7422 7423 (face tree-sitter-hl-face:string fontified t) 7423 7425 (fontified t) 7425 7429 (face tree-sitter-hl-face:keyword fontified t) 7429 7430 (fontified t) 7430 7433 (face tree-sitter-hl-face:property fontified t) 7433 7434 (face (rainbow-delimiters-depth-2-face) fontified t) 7434 7435 (face tree-sitter-hl-face:number fontified t) 7435 7436 (face (rainbow-delimiters-depth-2-face) fontified t) 7436 7437 (fontified t) 7437 7438 (face tree-sitter-hl-face:operator fontified t) 7438 7439 (fontified t) 7439 7443 (face tree-sitter-hl-face:keyword fontified t) 7443 7444 (fontified t) 7444 7447 (face tree-sitter-hl-face:property fontified t) 7447 7448 (face (rainbow-delimiters-depth-2-face) fontified t) 7448 7449 (face tree-sitter-hl-face:number fontified t) 7449 7450 (face (rainbow-delimiters-depth-2-face) fontified t) 7450 7451 (face (rainbow-delimiters-depth-1-face) fontified t) 7451 7465 (fontified t) 7465 7468 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 7468 7469 (fontified t) 7469 7470 (face tree-sitter-hl-face:operator fontified t) 7470 7471 (fontified t) 7471 7474 (face tree-sitter-hl-face:number fontified t) 7474 7475 (fontified t) 7475 7476 (face tree-sitter-hl-face:operator fontified t) 7476 7477 (fontified t) 7477 7481 (face tree-sitter-hl-face:keyword fontified t) 7481 7482 (fontified t) 7482 7487 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7487 7488 (face (rainbow-delimiters-depth-1-face) fontified t) 7488 7500 (fontified t) 7500 7501 (face (rainbow-delimiters-depth-1-face) fontified t) 7501 7502 (fontified t) 7502 7503 (face tree-sitter-hl-face:operator fontified t) 7503 7504 (fontified t) 7504 7505 (face (rainbow-delimiters-depth-1-face) fontified t) 7505 7511 (fontified t) 7511 7516 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7516 7517 (face (rainbow-delimiters-depth-2-face) fontified t) 7517 7521 (face tree-sitter-hl-face:keyword fontified t) 7521 7522 (fontified t) 7522 7525 (face tree-sitter-hl-face:property fontified t) 7525 7526 (face (rainbow-delimiters-depth-3-face) fontified t) 7526 7527 (face tree-sitter-hl-face:number fontified t) 7527 7528 (face (rainbow-delimiters-depth-3-face) fontified t) 7528 7530 (fontified t) 7530 7534 (face tree-sitter-hl-face:keyword fontified t) 7534 7535 (fontified t) 7535 7538 (face tree-sitter-hl-face:property fontified t) 7538 7539 (face (rainbow-delimiters-depth-3-face) fontified t) 7539 7540 (face tree-sitter-hl-face:number fontified t) 7540 7541 (face (rainbow-delimiters-depth-3-face) fontified t) 7541 7542 (face (rainbow-delimiters-depth-2-face) fontified t) 7542 7595 (fontified t) 7595 7596 (face tree-sitter-hl-face:operator fontified t) 7596 7603 (fontified t) 7603 7608 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7608 7609 (face (rainbow-delimiters-depth-2-face) fontified t) 7609 7613 (face tree-sitter-hl-face:keyword fontified t) 7613 7614 (fontified t) 7614 7617 (face tree-sitter-hl-face:property fontified t) 7617 7618 (face (rainbow-delimiters-depth-3-face) fontified t) 7618 7619 (face tree-sitter-hl-face:number fontified t) 7619 7620 (face (rainbow-delimiters-depth-3-face) fontified t) 7620 7622 (fontified t) 7622 7626 (face tree-sitter-hl-face:keyword fontified t) 7626 7627 (fontified t) 7627 7630 (face tree-sitter-hl-face:property fontified t) 7630 7631 (face (rainbow-delimiters-depth-3-face) fontified t) 7631 7632 (face tree-sitter-hl-face:number fontified t) 7632 7633 (face (rainbow-delimiters-depth-3-face) fontified t) 7633 7634 (face (rainbow-delimiters-depth-2-face) fontified t) 7634 7635 (face (rainbow-delimiters-depth-1-face) fontified t) 7635 7636 (fontified t) 7636 7637 (face tree-sitter-hl-face:operator fontified t) 7637 7644 (fontified t) 7644 7648 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7648 7649 (face (rainbow-delimiters-depth-1-face) fontified t) 7649 7653 (face tree-sitter-hl-face:keyword fontified t) 7653 7654 (fontified t) 7654 7656 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7656 7657 (face (rainbow-delimiters-depth-2-face) fontified t) 7657 7662 (fontified t) 7662 7663 (face (rainbow-delimiters-depth-2-face) fontified t) 7663 7664 (face (rainbow-delimiters-depth-1-face) fontified t) 7664 7677 (fontified t) 7677 7693 (face tree-sitter-hl-face:comment fontified t) 7693 7706 (fontified t) 7706 7722 (face tree-sitter-hl-face:comment fontified t) 7722 7736 (fontified t) 7736 7738 (face tree-sitter-hl-face:keyword fontified t) 7738 7739 (fontified t) 7739 7743 (face tree-sitter-hl-face:keyword fontified t) 7743 7744 (fontified t) 7744 7751 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7751 7769 (fontified t) 7769 7774 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7774 7775 (face (rainbow-delimiters-depth-1-face) fontified t) 7775 7776 (face tree-sitter-hl-face:string fontified t) 7776 7779 (face tree-sitter-hl-face:string fontified t) 7779 7780 (face tree-sitter-hl-face:string fontified t) 7780 7782 (fontified t) 7782 7785 (face tree-sitter-hl-face:constructor fontified t) 7785 7786 (fontified t) 7786 7791 (face tree-sitter-hl-face:property fontified t) 7791 7792 (face (rainbow-delimiters-depth-1-face) fontified t) 7792 7802 (fontified t) 7802 7804 (face tree-sitter-hl-face:keyword fontified t) 7804 7805 (fontified t) 7805 7806 (face tree-sitter-hl-face:string fontified t) 7806 7809 (face tree-sitter-hl-face:string fontified t) 7809 7810 (face tree-sitter-hl-face:string fontified t) 7810 7811 (fontified t) 7811 7813 (face tree-sitter-hl-face:operator fontified t) 7813 7814 (fontified t) 7814 7818 (face tree-sitter-hl-face:keyword fontified t) 7818 7819 (fontified t) 7819 7828 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7828 7829 (face (rainbow-delimiters-depth-1-face) fontified t) 7829 7841 (fontified t) 7841 7842 (face (rainbow-delimiters-depth-1-face) fontified t) 7842 7856 (fontified t) 7856 7861 (face tree-sitter-hl-face:variable fontified t) 7861 7862 (fontified t) 7862 7863 (face tree-sitter-hl-face:operator fontified t) 7863 7870 (fontified t) 7870 7876 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7876 7877 (face (rainbow-delimiters-depth-1-face) fontified t) 7877 7878 (face tree-sitter-hl-face:number fontified t) 7878 7880 (fontified t) 7880 7883 (face tree-sitter-hl-face:number fontified t) 7883 7884 (fontified t) 7884 7885 (face tree-sitter-hl-face:operator fontified t) 7885 7892 (fontified t) 7892 7894 (face tree-sitter-hl-face:property fontified t) 7894 7896 (fontified t) 7896 7899 (face tree-sitter-hl-face:number fontified t) 7899 7900 (fontified t) 7900 7901 (face tree-sitter-hl-face:operator fontified t) 7901 7908 (fontified t) 7908 7910 (face tree-sitter-hl-face:property fontified t) 7910 7911 (fontified t) 7911 7912 (face tree-sitter-hl-face:operator fontified t) 7912 7913 (fontified t) 7913 7918 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 7918 7919 (face (rainbow-delimiters-depth-2-face) fontified t) 7919 7921 (face tree-sitter-hl-face:constructor fontified t) 7921 7922 (face (rainbow-delimiters-depth-2-face) fontified t) 7922 7924 (fontified t) 7924 7929 (face tree-sitter-hl-face:label fontified t) 7929 7930 (face tree-sitter-hl-face:operator fontified t) 7930 7934 (face tree-sitter-hl-face:keyword fontified t) 7934 7935 (fontified t) 7935 7940 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7940 7942 (fontified t) 7942 7948 (face tree-sitter-hl-face:label fontified t) 7948 7949 (face tree-sitter-hl-face:operator fontified t) 7949 7953 (face tree-sitter-hl-face:keyword fontified t) 7953 7954 (fontified t) 7954 7960 (face tree-sitter-hl-face:property fontified t) 7960 7961 (face (rainbow-delimiters-depth-1-face) fontified t) 7961 7974 (fontified t) 7974 7977 (face tree-sitter-hl-face:variable fontified t) 7977 7978 (fontified t) 7978 7979 (face tree-sitter-hl-face:operator fontified t) 7979 7986 (fontified t) 7986 7992 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 7992 7993 (face (rainbow-delimiters-depth-1-face) fontified t) 7993 7994 (face tree-sitter-hl-face:number fontified t) 7994 7996 (fontified t) 7996 7999 (face tree-sitter-hl-face:number fontified t) 7999 8000 (fontified t) 8000 8001 (face tree-sitter-hl-face:operator fontified t) 8001 8008 (fontified t) 8008 8010 (face tree-sitter-hl-face:property fontified t) 8010 8012 (fontified t) 8012 8015 (face tree-sitter-hl-face:number fontified t) 8015 8016 (fontified t) 8016 8017 (face tree-sitter-hl-face:operator fontified t) 8017 8024 (fontified t) 8024 8026 (face tree-sitter-hl-face:property fontified t) 8026 8027 (fontified t) 8027 8028 (face tree-sitter-hl-face:operator fontified t) 8028 8029 (fontified t) 8029 8034 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8034 8035 (face (rainbow-delimiters-depth-2-face) fontified t) 8035 8037 (face tree-sitter-hl-face:constructor fontified t) 8037 8038 (face (rainbow-delimiters-depth-2-face) fontified t) 8038 8040 (fontified t) 8040 8045 (face tree-sitter-hl-face:label fontified t) 8045 8046 (face tree-sitter-hl-face:operator fontified t) 8046 8050 (face tree-sitter-hl-face:keyword fontified t) 8050 8051 (fontified t) 8051 8056 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8056 8058 (fontified t) 8058 8064 (face tree-sitter-hl-face:label fontified t) 8064 8065 (face tree-sitter-hl-face:operator fontified t) 8065 8069 (face tree-sitter-hl-face:keyword fontified t) 8069 8070 (fontified t) 8070 8076 (face tree-sitter-hl-face:property fontified t) 8076 8077 (face (rainbow-delimiters-depth-1-face) fontified t) 8077 8079 (fontified t) 8079 8091 (fontified t) 8091 8092 (face tree-sitter-hl-face:variable fontified t) 8092 8094 (fontified t) 8094 8095 (face tree-sitter-hl-face:variable fontified t) 8095 8096 (fontified t) 8096 8097 (face tree-sitter-hl-face:operator fontified t) 8097 8104 (fontified t) 8104 8112 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8112 8113 (face (rainbow-delimiters-depth-1-face) fontified t) 8113 8119 (fontified t) 8119 8125 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8125 8126 (face (rainbow-delimiters-depth-2-face) fontified t) 8126 8128 (face tree-sitter-hl-face:constructor fontified t) 8128 8130 (fontified t) 8130 8136 (face tree-sitter-hl-face:label fontified t) 8136 8137 (face tree-sitter-hl-face:operator fontified t) 8137 8141 (face tree-sitter-hl-face:keyword fontified t) 8141 8142 (fontified t) 8142 8148 (face tree-sitter-hl-face:property fontified t) 8148 8149 (face (rainbow-delimiters-depth-2-face) fontified t) 8149 8157 (fontified t) 8157 8163 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8163 8164 (face (rainbow-delimiters-depth-2-face) fontified t) 8164 8166 (face tree-sitter-hl-face:constructor fontified t) 8166 8168 (fontified t) 8168 8174 (face tree-sitter-hl-face:label fontified t) 8174 8175 (face tree-sitter-hl-face:operator fontified t) 8175 8179 (face tree-sitter-hl-face:keyword fontified t) 8179 8180 (fontified t) 8180 8186 (face tree-sitter-hl-face:property fontified t) 8186 8187 (face (rainbow-delimiters-depth-2-face) fontified t) 8187 8189 (fontified t) 8189 8197 (face tree-sitter-hl-face:label fontified t) 8197 8198 (face tree-sitter-hl-face:operator fontified t) 8198 8199 (face tree-sitter-hl-face:string fontified t) 8199 8201 (face tree-sitter-hl-face:string fontified t) 8201 8202 (face tree-sitter-hl-face:string fontified t) 8202 8203 (face (rainbow-delimiters-depth-1-face) fontified t) 8203 8204 (fontified t) 8204 8217 (fontified t) 8217 8227 (face tree-sitter-hl-face:variable fontified t) 8227 8228 (fontified t) 8228 8229 (face tree-sitter-hl-face:operator fontified t) 8229 8235 (fontified t) 8235 8236 (face (rainbow-delimiters-depth-1-face) fontified t) 8236 8237 (fontified t) 8237 8238 (face (rainbow-delimiters-depth-1-face) fontified t) 8238 8239 (fontified t) 8239 8240 (face tree-sitter-hl-face:operator fontified t) 8240 8244 (fontified t) 8244 8245 (face (rainbow-delimiters-depth-1-face) fontified t) 8245 8246 (fontified t) 8246 8247 (face (rainbow-delimiters-depth-1-face) fontified t) 8247 8261 (fontified t) 8261 8263 (face tree-sitter-hl-face:keyword fontified t) 8263 8264 (fontified t) 8264 8265 (face tree-sitter-hl-face:string fontified t) 8265 8269 (face tree-sitter-hl-face:string fontified t) 8269 8270 (face tree-sitter-hl-face:string fontified t) 8270 8271 (fontified t) 8271 8273 (face tree-sitter-hl-face:operator fontified t) 8273 8274 (fontified t) 8274 8278 (face tree-sitter-hl-face:keyword fontified t) 8278 8279 (fontified t) 8279 8288 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8288 8289 (face (rainbow-delimiters-depth-1-face) fontified t) 8289 8301 (fontified t) 8301 8302 (face (rainbow-delimiters-depth-1-face) fontified t) 8302 8320 (fontified t) 8320 8324 (face tree-sitter-hl-face:keyword fontified t) 8324 8325 (fontified t) 8325 8330 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8330 8331 (face (rainbow-delimiters-depth-1-face) fontified t) 8331 8336 (face tree-sitter-hl-face:variable fontified t) 8336 8338 (fontified t) 8338 8343 (face tree-sitter-hl-face:variable fontified t) 8343 8344 (face (rainbow-delimiters-depth-1-face) fontified t) 8344 8345 (fontified t) 8345 8346 (face tree-sitter-hl-face:operator fontified t) 8346 8347 (fontified t) 8347 8351 (face tree-sitter-hl-face:keyword fontified t) 8351 8352 (fontified t) 8352 8357 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8357 8358 (face (rainbow-delimiters-depth-1-face) fontified t) 8358 8370 (fontified t) 8370 8371 (face (rainbow-delimiters-depth-1-face) fontified t) 8371 8372 (fontified t) 8372 8373 (face tree-sitter-hl-face:operator fontified t) 8373 8380 (fontified t) 8380 8384 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8384 8385 (face (rainbow-delimiters-depth-1-face) fontified t) 8385 8387 (face tree-sitter-hl-face:constructor fontified t) 8387 8388 (face (rainbow-delimiters-depth-1-face) fontified t) 8388 8402 (fontified t) 8402 8405 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8405 8406 (fontified t) 8406 8407 (face tree-sitter-hl-face:operator fontified t) 8407 8408 (fontified t) 8408 8411 (face tree-sitter-hl-face:number fontified t) 8411 8412 (fontified t) 8412 8413 (face tree-sitter-hl-face:operator fontified t) 8413 8414 (fontified t) 8414 8417 (face tree-sitter-hl-face:number fontified t) 8417 8418 (fontified t) 8418 8419 (face tree-sitter-hl-face:operator fontified t) 8419 8420 (fontified t) 8420 8424 (face tree-sitter-hl-face:keyword fontified t) 8424 8425 (fontified t) 8425 8430 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8430 8431 (face (rainbow-delimiters-depth-1-face) fontified t) 8431 8443 (fontified t) 8443 8444 (face (rainbow-delimiters-depth-1-face) fontified t) 8444 8445 (fontified t) 8445 8446 (face tree-sitter-hl-face:operator fontified t) 8446 8453 (fontified t) 8453 8456 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8456 8457 (face (rainbow-delimiters-depth-1-face) fontified t) 8457 8468 (fontified t) 8468 8469 (face tree-sitter-hl-face:operator fontified t) 8469 8470 (fontified t) 8470 8474 (face tree-sitter-hl-face:keyword fontified t) 8474 8475 (fontified t) 8475 8480 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8480 8481 (face (rainbow-delimiters-depth-1-face) fontified t) 8481 8491 (fontified t) 8491 8493 (face tree-sitter-hl-face:keyword fontified t) 8493 8494 (fontified t) 8494 8495 (face tree-sitter-hl-face:string fontified t) 8495 8501 (face tree-sitter-hl-face:string fontified t) 8501 8502 (face tree-sitter-hl-face:string fontified t) 8502 8503 (fontified t) 8503 8505 (face tree-sitter-hl-face:operator fontified t) 8505 8506 (fontified t) 8506 8510 (face tree-sitter-hl-face:keyword fontified t) 8510 8511 (fontified t) 8511 8523 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8523 8537 (fontified t) 8537 8539 (face tree-sitter-hl-face:keyword fontified t) 8539 8540 (fontified t) 8540 8544 (face tree-sitter-hl-face:keyword fontified t) 8544 8545 (fontified t) 8545 8552 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8552 8570 (fontified t) 8570 8575 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8575 8576 (face (rainbow-delimiters-depth-1-face) fontified t) 8576 8577 (face tree-sitter-hl-face:string fontified t) 8577 8604 (face tree-sitter-hl-face:string fontified t) 8604 8605 (face tree-sitter-hl-face:string fontified t) 8605 8606 (face (rainbow-delimiters-depth-1-face) fontified t) 8606 8620 (fontified t) 8620 8623 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8623 8624 (fontified t) 8624 8625 (face tree-sitter-hl-face:operator fontified t) 8625 8626 (fontified t) 8626 8630 (face tree-sitter-hl-face:keyword fontified t) 8630 8631 (fontified t) 8631 8634 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8634 8635 (face (rainbow-delimiters-depth-1-face) fontified t) 8635 8647 (fontified t) 8647 8648 (face (rainbow-delimiters-depth-1-face) fontified t) 8648 8649 (fontified t) 8649 8650 (face tree-sitter-hl-face:operator fontified t) 8650 8651 (fontified t) 8651 8652 (face (rainbow-delimiters-depth-1-face) fontified t) 8652 8658 (fontified t) 8658 8662 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 8662 8663 (face (rainbow-delimiters-depth-2-face) fontified t) 8663 8665 (face tree-sitter-hl-face:constructor fontified t) 8665 8667 (fontified t) 8667 8669 (face tree-sitter-hl-face:constructor fontified t) 8669 8671 (fontified t) 8671 8677 (face tree-sitter-hl-face:label fontified t) 8677 8678 (face tree-sitter-hl-face:operator fontified t) 8678 8682 (face tree-sitter-hl-face:keyword fontified t) 8682 8683 (fontified t) 8683 8689 (face tree-sitter-hl-face:property fontified t) 8689 8690 (face (rainbow-delimiters-depth-2-face) fontified t) 8690 8691 (fontified t) 8691 8692 (face tree-sitter-hl-face:operator fontified t) 8692 8693 (fontified t) 8693 8695 (face tree-sitter-hl-face:constructor fontified t) 8695 8696 (fontified t) 8696 8697 (face tree-sitter-hl-face:operator fontified t) 8697 8698 (fontified t) 8698 8703 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8703 8704 (face (rainbow-delimiters-depth-2-face) fontified t) 8704 8706 (face tree-sitter-hl-face:constructor fontified t) 8706 8707 (face (rainbow-delimiters-depth-2-face) fontified t) 8707 8708 (fontified t) 8708 8709 (face tree-sitter-hl-face:operator fontified t) 8709 8710 (fontified t) 8710 8713 (face tree-sitter-hl-face:constructor fontified t) 8713 8714 (face (rainbow-delimiters-depth-1-face) fontified t) 8714 8724 (fontified t) 8724 8726 (face tree-sitter-hl-face:keyword fontified t) 8726 8727 (fontified t) 8727 8728 (face tree-sitter-hl-face:string fontified t) 8728 8735 (face tree-sitter-hl-face:string fontified t) 8735 8736 (face tree-sitter-hl-face:string fontified t) 8736 8737 (fontified t) 8737 8739 (face tree-sitter-hl-face:operator fontified t) 8739 8740 (fontified t) 8740 8744 (face tree-sitter-hl-face:keyword fontified t) 8744 8745 (fontified t) 8745 8757 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8757 8771 (fontified t) 8771 8773 (face tree-sitter-hl-face:keyword fontified t) 8773 8774 (fontified t) 8774 8778 (face tree-sitter-hl-face:keyword fontified t) 8778 8779 (fontified t) 8779 8786 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8786 8804 (fontified t) 8804 8809 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8809 8810 (face (rainbow-delimiters-depth-1-face) fontified t) 8810 8811 (face tree-sitter-hl-face:string fontified t) 8811 8835 (face tree-sitter-hl-face:string fontified t) 8835 8836 (face tree-sitter-hl-face:string fontified t) 8836 8837 (face (rainbow-delimiters-depth-1-face) fontified t) 8837 8838 (fontified t) 8838 8839 (fontified t) 8839 8851 (fontified t) 8851 8854 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 8854 8855 (fontified t) 8855 8856 (face tree-sitter-hl-face:operator fontified t) 8856 8857 (fontified t) 8857 8861 (face tree-sitter-hl-face:keyword fontified t) 8861 8862 (fontified t) 8862 8865 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8865 8866 (face (rainbow-delimiters-depth-1-face) fontified t) 8866 8878 (fontified t) 8878 8879 (face (rainbow-delimiters-depth-1-face) fontified t) 8879 8880 (fontified t) 8880 8881 (face tree-sitter-hl-face:operator fontified t) 8881 8882 (fontified t) 8882 8885 (face tree-sitter-hl-face:constructor fontified t) 8885 8886 (fontified t) 8886 8887 (face tree-sitter-hl-face:operator fontified t) 8887 8888 (fontified t) 8888 8893 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 8893 8894 (face (rainbow-delimiters-depth-1-face) fontified t) 8894 8896 (face tree-sitter-hl-face:constructor fontified t) 8896 8897 (face (rainbow-delimiters-depth-1-face) fontified t) 8897 8898 (fontified t) 8898 8911 (fontified t) 8911 8913 (face tree-sitter-hl-face:keyword fontified t) 8913 8914 (fontified t) 8914 8918 (face tree-sitter-hl-face:keyword fontified t) 8918 8919 (fontified t) 8919 8924 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8924 8925 (face (rainbow-delimiters-depth-1-face) fontified t) 8925 8937 (fontified t) 8937 8938 (face (rainbow-delimiters-depth-1-face) fontified t) 8938 8939 (fontified t) 8939 8940 (face tree-sitter-hl-face:operator fontified t) 8940 8941 (fontified t) 8941 8944 (face tree-sitter-hl-face:number fontified t) 8944 8962 (fontified t) 8962 8964 (face tree-sitter-hl-face:keyword fontified t) 8964 8965 (fontified t) 8965 8969 (face tree-sitter-hl-face:keyword fontified t) 8969 8970 (fontified t) 8970 8977 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 8977 8999 (fontified t) 8999 9004 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9004 9005 (face (rainbow-delimiters-depth-1-face) fontified t) 9005 9006 (face tree-sitter-hl-face:string fontified t) 9006 9031 (face tree-sitter-hl-face:string fontified t) 9031 9032 (face tree-sitter-hl-face:string fontified t) 9032 9034 (fontified t) 9034 9038 (face tree-sitter-hl-face:keyword fontified t) 9038 9039 (fontified t) 9039 9044 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9044 9045 (face (rainbow-delimiters-depth-2-face) fontified t) 9045 9057 (fontified t) 9057 9058 (face (rainbow-delimiters-depth-2-face) fontified t) 9058 9059 (face (rainbow-delimiters-depth-1-face) fontified t) 9059 9077 (fontified t) 9077 9080 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9080 9081 (fontified t) 9081 9082 (face tree-sitter-hl-face:operator fontified t) 9082 9089 (fontified t) 9089 9095 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9095 9096 (face (rainbow-delimiters-depth-1-face) fontified t) 9096 9097 (face tree-sitter-hl-face:number fontified t) 9097 9099 (fontified t) 9099 9103 (face tree-sitter-hl-face:keyword fontified t) 9103 9104 (fontified t) 9104 9109 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9109 9110 (face (rainbow-delimiters-depth-2-face) fontified t) 9110 9122 (fontified t) 9122 9123 (face (rainbow-delimiters-depth-2-face) fontified t) 9123 9125 (fontified t) 9125 9129 (face tree-sitter-hl-face:label fontified t) 9129 9130 (face tree-sitter-hl-face:operator fontified t) 9130 9131 (face (rainbow-delimiters-depth-2-face) fontified t) 9131 9133 (face tree-sitter-hl-face:constructor fontified t) 9133 9135 (fontified t) 9135 9137 (face tree-sitter-hl-face:constructor fontified t) 9137 9138 (face (rainbow-delimiters-depth-2-face) fontified t) 9138 9140 (fontified t) 9140 9145 (face tree-sitter-hl-face:label fontified t) 9145 9146 (face tree-sitter-hl-face:operator fontified t) 9146 9150 (face tree-sitter-hl-face:keyword fontified t) 9150 9151 (fontified t) 9151 9156 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9156 9158 (fontified t) 9158 9164 (face tree-sitter-hl-face:label fontified t) 9164 9165 (face tree-sitter-hl-face:operator fontified t) 9165 9169 (face tree-sitter-hl-face:keyword fontified t) 9169 9170 (fontified t) 9170 9176 (face tree-sitter-hl-face:property fontified t) 9176 9177 (face (rainbow-delimiters-depth-1-face) fontified t) 9177 9194 (fontified t) 9194 9197 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 9197 9198 (fontified t) 9198 9199 (face tree-sitter-hl-face:operator fontified t) 9199 9200 (fontified t) 9200 9203 (face tree-sitter-hl-face:constructor fontified t) 9203 9204 (fontified t) 9204 9205 (face tree-sitter-hl-face:operator fontified t) 9205 9206 (fontified t) 9206 9209 (face tree-sitter-hl-face:constructor fontified t) 9209 9210 (fontified t) 9210 9211 (face tree-sitter-hl-face:operator fontified t) 9211 9212 (fontified t) 9212 9217 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9217 9218 (face (rainbow-delimiters-depth-1-face) fontified t) 9218 9220 (face tree-sitter-hl-face:constructor fontified t) 9220 9221 (face (rainbow-delimiters-depth-1-face) fontified t) 9221 9231 (fontified t) 9231 9233 (face tree-sitter-hl-face:keyword fontified t) 9233 9234 (fontified t) 9234 9238 (face tree-sitter-hl-face:keyword fontified t) 9238 9239 (fontified t) 9239 9246 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9246 9260 (fontified t) 9260 9262 (face tree-sitter-hl-face:keyword fontified t) 9262 9263 (fontified t) 9263 9264 (face tree-sitter-hl-face:string fontified t) 9264 9267 (face tree-sitter-hl-face:string fontified t) 9267 9268 (face tree-sitter-hl-face:string fontified t) 9268 9269 (fontified t) 9269 9271 (face tree-sitter-hl-face:operator fontified t) 9271 9272 (fontified t) 9272 9276 (face tree-sitter-hl-face:keyword fontified t) 9276 9277 (fontified t) 9277 9286 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9286 9287 (face (rainbow-delimiters-depth-1-face) fontified t) 9287 9299 (fontified t) 9299 9300 (face (rainbow-delimiters-depth-1-face) fontified t) 9300 9318 (fontified t) 9318 9320 (face tree-sitter-hl-face:keyword fontified t) 9320 9321 (fontified t) 9321 9322 (face tree-sitter-hl-face:string fontified t) 9322 9326 (face tree-sitter-hl-face:string fontified t) 9326 9327 (face tree-sitter-hl-face:string fontified t) 9327 9328 (fontified t) 9328 9330 (face tree-sitter-hl-face:operator fontified t) 9330 9331 (fontified t) 9331 9335 (face tree-sitter-hl-face:keyword fontified t) 9335 9336 (fontified t) 9336 9345 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9345 9346 (face (rainbow-delimiters-depth-1-face) fontified t) 9346 9358 (fontified t) 9358 9359 (face (rainbow-delimiters-depth-1-face) fontified t) 9359 9381 (fontified t) 9381 9386 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9386 9387 (face (rainbow-delimiters-depth-1-face) fontified t) 9387 9388 (face tree-sitter-hl-face:string fontified t) 9388 9426 (face tree-sitter-hl-face:string fontified t) 9426 9427 (face tree-sitter-hl-face:string fontified t) 9427 9428 (fontified t) 9428 9429 (face tree-sitter-hl-face:operator fontified t) 9429 9430 (fontified t) 9430 9434 (face tree-sitter-hl-face:keyword fontified t) 9434 9435 (fontified t) 9435 9440 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9440 9441 (face (rainbow-delimiters-depth-2-face) fontified t) 9441 9453 (fontified t) 9453 9454 (face (rainbow-delimiters-depth-2-face) fontified t) 9454 9455 (fontified t) 9455 9458 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9458 9459 (face (rainbow-delimiters-depth-2-face) fontified t) 9459 9460 (face (rainbow-delimiters-depth-2-face) fontified t) 9460 9461 (fontified t) 9461 9467 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9467 9468 (face (rainbow-delimiters-depth-2-face) fontified t) 9468 9469 (face (rainbow-delimiters-depth-2-face) fontified t) 9469 9470 (fontified t) 9470 9475 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9475 9476 (face (rainbow-delimiters-depth-2-face) fontified t) 9476 9477 (face (rainbow-delimiters-depth-2-face) fontified t) 9477 9478 (face (rainbow-delimiters-depth-1-face) fontified t) 9478 9495 (fontified t) 9495 9499 (face tree-sitter-hl-face:keyword fontified t) 9499 9521 (fontified t) 9521 9526 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9526 9527 (face (rainbow-delimiters-depth-1-face) fontified t) 9527 9528 (face tree-sitter-hl-face:string fontified t) 9528 9563 (face tree-sitter-hl-face:string fontified t) 9563 9564 (face tree-sitter-hl-face:string fontified t) 9564 9566 (fontified t) 9566 9570 (face tree-sitter-hl-face:keyword fontified t) 9570 9571 (fontified t) 9571 9576 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9576 9577 (face (rainbow-delimiters-depth-2-face) fontified t) 9577 9589 (fontified t) 9589 9590 (face (rainbow-delimiters-depth-2-face) fontified t) 9590 9591 (face (rainbow-delimiters-depth-1-face) fontified t) 9591 9604 (fontified t) 9604 9608 (face tree-sitter-hl-face:keyword fontified t) 9608 9609 (fontified t) 9609 9610 (face tree-sitter-hl-face:string fontified t) 9610 9612 (face tree-sitter-hl-face:string fontified t) 9612 9613 (face tree-sitter-hl-face:string fontified t) 9613 9614 (fontified t) 9614 9616 (face tree-sitter-hl-face:operator fontified t) 9616 9617 (fontified t) 9617 9621 (face tree-sitter-hl-face:keyword fontified t) 9621 9622 (fontified t) 9622 9631 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9631 9632 (face (rainbow-delimiters-depth-1-face) fontified t) 9632 9644 (fontified t) 9644 9645 (face (rainbow-delimiters-depth-1-face) fontified t) 9645 9663 (fontified t) 9663 9668 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9668 9669 (face (rainbow-delimiters-depth-1-face) fontified t) 9669 9670 (face tree-sitter-hl-face:string fontified t) 9670 9710 (face tree-sitter-hl-face:string fontified t) 9710 9711 (face tree-sitter-hl-face:string fontified t) 9711 9712 (fontified t) 9712 9713 (face tree-sitter-hl-face:operator fontified t) 9713 9714 (fontified t) 9714 9718 (face tree-sitter-hl-face:keyword fontified t) 9718 9719 (fontified t) 9719 9724 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9724 9725 (face (rainbow-delimiters-depth-2-face) fontified t) 9725 9737 (fontified t) 9737 9738 (face (rainbow-delimiters-depth-2-face) fontified t) 9738 9739 (fontified t) 9739 9742 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9742 9743 (face (rainbow-delimiters-depth-2-face) fontified t) 9743 9744 (face (rainbow-delimiters-depth-2-face) fontified t) 9744 9745 (fontified t) 9745 9751 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9751 9752 (face (rainbow-delimiters-depth-2-face) fontified t) 9752 9753 (face (rainbow-delimiters-depth-2-face) fontified t) 9753 9754 (fontified t) 9754 9759 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9759 9760 (face (rainbow-delimiters-depth-2-face) fontified t) 9760 9761 (face (rainbow-delimiters-depth-2-face) fontified t) 9761 9762 (face (rainbow-delimiters-depth-1-face) fontified t) 9762 9764 (fontified t) 9764 9772 (fontified t) 9772 9778 (face tree-sitter-hl-face:keyword fontified t) 9778 9779 (fontified t) 9779 9782 (face tree-sitter-hl-face:constructor fontified t) 9782 9783 (fontified t rear-nonsticky t) 9783 9784 (fontified t) 9784 9788 (fontified t) 9788 9791 (face tree-sitter-hl-face:keyword fontified t) 9791 9792 (fontified t) 9792 9801 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 9801 9802 (face (rainbow-delimiters-depth-1-face) fontified t) 9802 9806 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 9806 9807 (face (rainbow-delimiters-depth-1-face) fontified t) 9807 9817 (fontified t) 9817 9821 (face tree-sitter-hl-face:keyword fontified t) 9821 9822 (fontified t) 9822 9824 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9824 9825 (fontified t) 9825 9826 (face tree-sitter-hl-face:operator fontified t) 9826 9827 (fontified t) 9827 9828 (face (rainbow-delimiters-depth-1-face) fontified t) 9828 9829 (face (rainbow-delimiters-depth-1-face) fontified t) 9829 9838 (fontified t) 9838 9842 (face tree-sitter-hl-face:keyword fontified t) 9842 9843 (fontified t) 9843 9845 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9845 9846 (fontified t) 9846 9847 (face tree-sitter-hl-face:operator fontified t) 9847 9848 (fontified t) 9848 9849 (face (rainbow-delimiters-depth-1-face) fontified t) 9849 9850 (face (rainbow-delimiters-depth-1-face) fontified t) 9850 9860 (fontified t) 9860 9862 (face tree-sitter-hl-face:keyword fontified t) 9862 9863 (fontified t) 9863 9864 (face tree-sitter-hl-face:string fontified t) 9864 9871 (face tree-sitter-hl-face:string fontified t) 9871 9872 (face tree-sitter-hl-face:string fontified t) 9872 9873 (fontified t) 9873 9875 (face tree-sitter-hl-face:operator fontified t) 9875 9876 (fontified t) 9876 9880 (face tree-sitter-hl-face:keyword fontified t) 9880 9881 (fontified t) 9881 9893 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9893 9907 (fontified t) 9907 9911 (face tree-sitter-hl-face:keyword fontified t) 9911 9912 (fontified t) 9912 9913 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9913 9914 (fontified t) 9914 9915 (face tree-sitter-hl-face:operator fontified t) 9915 9916 (fontified t) 9916 9919 (face tree-sitter-hl-face:number fontified t) 9919 9937 (fontified t) 9937 9940 (face tree-sitter-hl-face:keyword fontified t) 9940 9941 (fontified t) 9941 9946 (face tree-sitter-hl-face:variable fontified t) 9946 9947 (fontified t) 9947 9949 (face tree-sitter-hl-face:operator fontified t) 9949 9950 (fontified t) 9950 9955 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9955 9956 (face (rainbow-delimiters-depth-1-face) fontified t) 9956 9960 (face tree-sitter-hl-face:keyword fontified t) 9960 9961 (fontified t) 9961 9966 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9966 9967 (face (rainbow-delimiters-depth-1-face) fontified t) 9967 9981 (fontified t) 9981 9985 (face tree-sitter-hl-face:keyword fontified t) 9985 9986 (fontified t) 9986 9988 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 9988 9989 (fontified t) 9989 9995 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 9995 9996 (face (rainbow-delimiters-depth-1-face) fontified t) 9996 9999 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 9999 10000 (face (rainbow-delimiters-depth-2-face) fontified t) 10000 10004 (face tree-sitter-hl-face:keyword fontified t) 10004 10005 (fontified t) 10005 10013 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10013 10014 (fontified t) 10014 10015 (face tree-sitter-hl-face:operator fontified t) 10015 10016 (fontified t) 10016 10020 (face tree-sitter-hl-face:keyword fontified t) 10020 10021 (fontified t) 10021 10025 (face tree-sitter-hl-face:property fontified t) 10025 10026 (face (rainbow-delimiters-depth-3-face) fontified t) 10026 10031 (fontified t) 10031 10032 (face (rainbow-delimiters-depth-3-face) fontified t) 10032 10033 (face (rainbow-delimiters-depth-2-face) fontified t) 10033 10034 (face (rainbow-delimiters-depth-1-face) fontified t) 10034 10047 (fontified t) 10047 10051 (face tree-sitter-hl-face:keyword fontified t) 10051 10052 (fontified t) 10052 10054 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10054 10055 (fontified t) 10055 10061 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10061 10062 (face (rainbow-delimiters-depth-1-face) fontified t) 10062 10066 (face tree-sitter-hl-face:keyword fontified t) 10066 10067 (fontified t) 10067 10068 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10068 10069 (fontified t) 10069 10070 (face tree-sitter-hl-face:operator fontified t) 10070 10071 (fontified t) 10071 10075 (face tree-sitter-hl-face:keyword fontified t) 10075 10076 (fontified t) 10076 10080 (face tree-sitter-hl-face:property fontified t) 10080 10081 (face (rainbow-delimiters-depth-2-face) fontified t) 10081 10086 (fontified t) 10086 10087 (face (rainbow-delimiters-depth-2-face) fontified t) 10087 10088 (face (rainbow-delimiters-depth-1-face) fontified t) 10088 10101 (fontified t) 10101 10125 (face tree-sitter-hl-face:comment fontified t) 10125 10143 (fontified t) 10143 10147 (face tree-sitter-hl-face:keyword fontified t) 10147 10148 (fontified t) 10148 10150 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10150 10151 (fontified t) 10151 10152 (face tree-sitter-hl-face:operator fontified t) 10152 10159 (fontified t) 10159 10165 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10165 10166 (face (rainbow-delimiters-depth-1-face) fontified t) 10166 10170 (face tree-sitter-hl-face:keyword fontified t) 10170 10171 (fontified t) 10171 10173 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10173 10175 (fontified t) 10175 10180 (face tree-sitter-hl-face:label fontified t) 10180 10181 (face tree-sitter-hl-face:operator fontified t) 10181 10187 (fontified t) 10187 10190 (face tree-sitter-hl-face:property fontified t) 10190 10192 (fontified t) 10192 10198 (face tree-sitter-hl-face:label fontified t) 10198 10199 (face tree-sitter-hl-face:operator fontified t) 10199 10203 (face tree-sitter-hl-face:keyword fontified t) 10203 10204 (fontified t) 10204 10210 (face tree-sitter-hl-face:property fontified t) 10210 10211 (face (rainbow-delimiters-depth-1-face) fontified t) 10211 10220 (fontified t) 10220 10224 (face tree-sitter-hl-face:keyword fontified t) 10224 10225 (fontified t) 10225 10227 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10227 10228 (fontified t) 10228 10229 (face tree-sitter-hl-face:operator fontified t) 10229 10236 (fontified t) 10236 10242 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10242 10243 (face (rainbow-delimiters-depth-1-face) fontified t) 10243 10247 (face tree-sitter-hl-face:keyword fontified t) 10247 10248 (fontified t) 10248 10250 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10250 10252 (fontified t) 10252 10257 (face tree-sitter-hl-face:label fontified t) 10257 10258 (face tree-sitter-hl-face:operator fontified t) 10258 10262 (face tree-sitter-hl-face:keyword fontified t) 10262 10263 (fontified t) 10263 10268 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10268 10269 (fontified t) 10269 10270 (fontified t) 10270 10276 (face tree-sitter-hl-face:label fontified t) 10276 10277 (face tree-sitter-hl-face:operator fontified t) 10277 10281 (face tree-sitter-hl-face:keyword fontified t) 10281 10282 (fontified t) 10282 10288 (face tree-sitter-hl-face:property fontified t) 10288 10289 (face (rainbow-delimiters-depth-1-face) fontified t) 10289 10298 (fontified t) 10298 10302 (face tree-sitter-hl-face:keyword fontified t) 10302 10303 (fontified t) 10303 10309 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 10309 10310 (fontified t) 10310 10311 (face tree-sitter-hl-face:operator fontified t) 10311 10318 (fontified t) 10318 10321 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10321 10322 (face (rainbow-delimiters-depth-1-face) fontified t) 10322 10323 (face (rainbow-delimiters-depth-2-face) fontified t) 10323 10329 (fontified t) 10329 10335 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10335 10336 (face (rainbow-delimiters-depth-3-face) fontified t) 10336 10337 (face (rainbow-delimiters-depth-4-face) fontified t) 10337 10338 (face tree-sitter-hl-face:number fontified t) 10338 10339 (face (rainbow-delimiters-depth-4-face) fontified t) 10339 10341 (fontified t) 10341 10347 (face tree-sitter-hl-face:label fontified t) 10347 10348 (face tree-sitter-hl-face:operator fontified t) 10348 10352 (face tree-sitter-hl-face:keyword fontified t) 10352 10353 (fontified t) 10353 10359 (face tree-sitter-hl-face:property fontified t) 10359 10360 (face (rainbow-delimiters-depth-3-face) fontified t) 10360 10368 (fontified t) 10368 10374 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10374 10375 (face (rainbow-delimiters-depth-3-face) fontified t) 10375 10379 (face tree-sitter-hl-face:keyword fontified t) 10379 10380 (fontified t) 10380 10382 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10382 10384 (fontified t) 10384 10387 (face tree-sitter-hl-face:label fontified t) 10387 10388 (face tree-sitter-hl-face:operator fontified t) 10388 10389 (face tree-sitter-hl-face:number fontified t) 10389 10390 (face (rainbow-delimiters-depth-3-face) fontified t) 10390 10391 (face (rainbow-delimiters-depth-2-face) fontified t) 10391 10392 (face (rainbow-delimiters-depth-1-face) fontified t) 10392 10410 (fontified t) 10410 10412 (face tree-sitter-hl-face:keyword fontified t) 10412 10413 (fontified t) 10413 10417 (face tree-sitter-hl-face:keyword fontified t) 10417 10418 (fontified t) 10418 10425 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10425 10439 (fontified t) 10439 10444 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10444 10445 (face (rainbow-delimiters-depth-1-face) fontified t) 10445 10446 (face tree-sitter-hl-face:string fontified t) 10446 10448 (face tree-sitter-hl-face:string fontified t) 10448 10449 (face tree-sitter-hl-face:string fontified t) 10449 10451 (fontified t) 10451 10455 (face tree-sitter-hl-face:keyword fontified t) 10455 10456 (fontified t) 10456 10458 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10458 10460 (fontified t) 10460 10461 (face tree-sitter-hl-face:string fontified t) 10461 10463 (face tree-sitter-hl-face:string fontified t) 10463 10464 (face tree-sitter-hl-face:string fontified t) 10464 10466 (fontified t) 10466 10470 (face tree-sitter-hl-face:keyword fontified t) 10470 10471 (fontified t) 10471 10473 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10473 10475 (fontified t) 10475 10476 (face tree-sitter-hl-face:string fontified t) 10476 10482 (face tree-sitter-hl-face:string fontified t) 10482 10483 (face tree-sitter-hl-face:string fontified t) 10483 10485 (fontified t) 10485 10489 (face tree-sitter-hl-face:keyword fontified t) 10489 10490 (fontified t) 10490 10496 (face tree-sitter-hl-face:property fontified t) 10496 10497 (face (rainbow-delimiters-depth-1-face) fontified t) 10497 10507 (fontified t) 10507 10511 (face tree-sitter-hl-face:keyword fontified t) 10511 10512 (fontified t) 10512 10515 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10515 10516 (fontified t) 10516 10517 (face tree-sitter-hl-face:operator fontified t) 10517 10524 (fontified t) 10524 10530 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10530 10531 (face (rainbow-delimiters-depth-1-face) fontified t) 10531 10535 (face tree-sitter-hl-face:keyword fontified t) 10535 10536 (fontified t) 10536 10539 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10539 10541 (fontified t) 10541 10546 (face tree-sitter-hl-face:label fontified t) 10546 10547 (face tree-sitter-hl-face:operator fontified t) 10547 10551 (face tree-sitter-hl-face:keyword fontified t) 10551 10552 (fontified t) 10552 10557 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10557 10559 (fontified t) 10559 10565 (face tree-sitter-hl-face:label fontified t) 10565 10566 (face tree-sitter-hl-face:operator fontified t) 10566 10570 (face tree-sitter-hl-face:keyword fontified t) 10570 10571 (fontified t) 10571 10577 (face tree-sitter-hl-face:property fontified t) 10577 10578 (face (rainbow-delimiters-depth-1-face) fontified t) 10578 10596 (fontified t) 10596 10600 (face tree-sitter-hl-face:keyword fontified t) 10600 10601 (fontified t) 10601 10611 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10611 10612 (fontified t) 10612 10613 (face tree-sitter-hl-face:operator fontified t) 10613 10620 (fontified t) 10620 10624 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10624 10625 (face (rainbow-delimiters-depth-1-face) fontified t) 10625 10629 (face tree-sitter-hl-face:keyword fontified t) 10629 10630 (fontified t) 10630 10638 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10638 10640 (fontified t) 10640 10645 (face tree-sitter-hl-face:label fontified t) 10645 10646 (face tree-sitter-hl-face:operator fontified t) 10646 10650 (face tree-sitter-hl-face:keyword fontified t) 10650 10651 (fontified t) 10651 10656 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10656 10658 (fontified t) 10658 10664 (face tree-sitter-hl-face:label fontified t) 10664 10665 (face tree-sitter-hl-face:operator fontified t) 10665 10669 (face tree-sitter-hl-face:keyword fontified t) 10669 10670 (fontified t) 10670 10676 (face tree-sitter-hl-face:property fontified t) 10676 10677 (face (rainbow-delimiters-depth-1-face) fontified t) 10677 10686 (fontified t) 10686 10690 (face tree-sitter-hl-face:keyword fontified t) 10690 10691 (fontified t) 10691 10697 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10697 10698 (fontified t) 10698 10699 (face tree-sitter-hl-face:operator fontified t) 10699 10706 (fontified t) 10706 10710 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10710 10711 (face (rainbow-delimiters-depth-1-face) fontified t) 10711 10715 (face tree-sitter-hl-face:keyword fontified t) 10715 10716 (fontified t) 10716 10724 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10724 10726 (fontified t) 10726 10731 (face tree-sitter-hl-face:label fontified t) 10731 10732 (face tree-sitter-hl-face:operator fontified t) 10732 10736 (face tree-sitter-hl-face:keyword fontified t) 10736 10737 (fontified t) 10737 10742 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10742 10744 (fontified t) 10744 10750 (face tree-sitter-hl-face:label fontified t) 10750 10751 (face tree-sitter-hl-face:operator fontified t) 10751 10755 (face tree-sitter-hl-face:keyword fontified t) 10755 10756 (fontified t) 10756 10762 (face tree-sitter-hl-face:property fontified t) 10762 10763 (face (rainbow-delimiters-depth-1-face) fontified t) 10763 10778 (fontified t) 10778 10781 (fontified t) 10781 10784 (face tree-sitter-hl-face:keyword fontified t) 10784 10785 (fontified t) 10785 10790 (face tree-sitter-hl-face:variable fontified t) 10790 10791 (fontified t) 10791 10793 (face tree-sitter-hl-face:operator fontified t) 10793 10794 (fontified t) 10794 10799 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10799 10800 (face (rainbow-delimiters-depth-1-face) fontified t) 10800 10804 (face tree-sitter-hl-face:keyword fontified t) 10804 10805 (fontified t) 10805 10810 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10810 10811 (face (rainbow-delimiters-depth-1-face) fontified t) 10811 10825 (fontified t) 10825 10829 (face tree-sitter-hl-face:keyword fontified t) 10829 10830 (fontified t) 10830 10840 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10840 10841 (face (rainbow-delimiters-depth-1-face) fontified t) 10841 10845 (face tree-sitter-hl-face:keyword fontified t) 10845 10846 (fontified t) 10846 10852 (face tree-sitter-hl-face:property fontified t) 10852 10853 (face (rainbow-delimiters-depth-2-face) fontified t) 10853 10858 (fontified t) 10858 10859 (face (rainbow-delimiters-depth-2-face) fontified t) 10859 10862 (fontified t) 10862 10866 (face tree-sitter-hl-face:keyword fontified t) 10866 10867 (fontified t) 10867 10873 (face tree-sitter-hl-face:property fontified t) 10873 10874 (face (rainbow-delimiters-depth-2-face) fontified t) 10874 10880 (fontified t) 10880 10881 (face tree-sitter-hl-face:operator fontified t) 10881 10882 (fontified t) 10882 10883 (face tree-sitter-hl-face:number fontified t) 10883 10884 (face (rainbow-delimiters-depth-2-face) fontified t) 10884 10885 (face (rainbow-delimiters-depth-1-face) fontified t) 10885 10886 (fontified t) 10886 10887 (face tree-sitter-hl-face:operator fontified t) 10887 10894 (fontified t) 10894 10897 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 10897 10898 (face (rainbow-delimiters-depth-1-face) fontified t) 10898 10899 (face tree-sitter-hl-face:operator fontified t) 10899 10903 (face tree-sitter-hl-face:keyword fontified t) 10903 10904 (fontified t) 10904 10906 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10906 10907 (fontified t) 10907 10908 (face tree-sitter-hl-face:operator fontified t) 10908 10909 (fontified t) 10909 10913 (face tree-sitter-hl-face:keyword fontified t) 10913 10914 (fontified t) 10914 10917 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10917 10918 (face (rainbow-delimiters-depth-2-face) fontified t) 10918 10923 (fontified t) 10923 10924 (face (rainbow-delimiters-depth-2-face) fontified t) 10924 10925 (face (rainbow-delimiters-depth-1-face) fontified t) 10925 10938 (fontified t) 10938 10942 (face tree-sitter-hl-face:keyword fontified t) 10942 10943 (fontified t) 10943 10949 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 10949 10950 (face (rainbow-delimiters-depth-1-face) fontified t) 10950 10954 (face tree-sitter-hl-face:keyword fontified t) 10954 10955 (fontified t) 10955 10961 (face tree-sitter-hl-face:property fontified t) 10961 10962 (face (rainbow-delimiters-depth-2-face) fontified t) 10962 10967 (fontified t) 10967 10968 (face (rainbow-delimiters-depth-2-face) fontified t) 10968 10971 (fontified t) 10971 10975 (face tree-sitter-hl-face:keyword fontified t) 10975 10976 (fontified t) 10976 10982 (face tree-sitter-hl-face:property fontified t) 10982 10983 (face (rainbow-delimiters-depth-2-face) fontified t) 10983 10989 (fontified t) 10989 10990 (face tree-sitter-hl-face:operator fontified t) 10990 10991 (fontified t) 10991 10992 (face tree-sitter-hl-face:number fontified t) 10992 10993 (face (rainbow-delimiters-depth-2-face) fontified t) 10993 10994 (face (rainbow-delimiters-depth-1-face) fontified t) 10994 10995 (fontified t) 10995 10996 (face tree-sitter-hl-face:operator fontified t) 10996 10997 (fontified t) 10997 11001 (face tree-sitter-hl-face:keyword fontified t) 11001 11002 (fontified t) 11002 11004 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11004 11005 (fontified t) 11005 11006 (face tree-sitter-hl-face:operator fontified t) 11006 11007 (fontified t) 11007 11011 (face tree-sitter-hl-face:keyword fontified t) 11011 11012 (fontified t) 11012 11015 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11015 11016 (face (rainbow-delimiters-depth-1-face) fontified t) 11016 11021 (fontified t) 11021 11022 (face (rainbow-delimiters-depth-1-face) fontified t) 11022 11040 (fontified t) 11040 11062 (face tree-sitter-hl-face:comment fontified t) 11062 11071 (fontified t) 11071 11089 (face tree-sitter-hl-face:comment fontified t) 11089 11107 (fontified t) 11107 11140 (face tree-sitter-hl-face:comment fontified t) 11140 11149 (fontified t) 11149 11213 (face tree-sitter-hl-face:comment fontified t) 11213 11222 (fontified t) 11222 11273 (face tree-sitter-hl-face:comment fontified t) 11273 11283 (fontified t) 11283 11284 (fontified t) 11284 11291 (fontified t) 11291 11370 (face tree-sitter-hl-face:comment fontified t) 11370 11379 (fontified t) 11379 11466 (face tree-sitter-hl-face:comment fontified t) 11466 11485 (fontified t) 11485 11487 (face tree-sitter-hl-face:keyword fontified t) 11487 11488 (fontified t) 11488 11492 (face tree-sitter-hl-face:keyword fontified t) 11492 11493 (fontified t) 11493 11500 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11500 11514 (fontified t) 11514 11519 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 11519 11520 (face (rainbow-delimiters-depth-1-face) fontified t) 11520 11521 (face tree-sitter-hl-face:string fontified t) 11521 11523 (face tree-sitter-hl-face:string fontified t) 11523 11524 (face tree-sitter-hl-face:string fontified t) 11524 11526 (fontified t) 11526 11530 (face tree-sitter-hl-face:keyword fontified t) 11530 11531 (fontified t) 11531 11533 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11533 11535 (fontified t) 11535 11536 (face tree-sitter-hl-face:string fontified t) 11536 11539 (face tree-sitter-hl-face:string fontified t) 11539 11540 (face tree-sitter-hl-face:string fontified t) 11540 11542 (fontified t) 11542 11546 (face tree-sitter-hl-face:keyword fontified t) 11546 11547 (fontified t) 11547 11550 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11550 11551 (face (rainbow-delimiters-depth-1-face) fontified t) 11551 11569 (fontified t) 11569 11587 (face tree-sitter-hl-face:comment fontified t) 11587 11596 (fontified t) 11596 11661 (face tree-sitter-hl-face:comment fontified t) 11661 11679 (fontified t) 11679 11683 (face tree-sitter-hl-face:keyword fontified t) 11683 11684 (fontified t) 11684 11693 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11693 11694 (fontified t) 11694 11695 (face tree-sitter-hl-face:operator fontified t) 11695 11699 (fontified t) 11699 11704 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11704 11705 (face (rainbow-delimiters-depth-1-face) fontified t) 11705 11709 (face tree-sitter-hl-face:keyword fontified t) 11709 11710 (fontified t) 11710 11719 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11719 11720 (face (rainbow-delimiters-depth-1-face) fontified t) 11720 11721 (fontified t) 11721 11728 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11728 11729 (face (rainbow-delimiters-depth-1-face) fontified t) 11729 11733 (face tree-sitter-hl-face:keyword fontified t) 11733 11734 (fontified t) 11734 11739 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11739 11741 (fontified t) 11741 11745 (face tree-sitter-hl-face:keyword fontified t) 11745 11746 (fontified t) 11746 11751 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11751 11752 (face (rainbow-delimiters-depth-1-face) fontified t) 11752 11761 (fontified t) 11761 11765 (face tree-sitter-hl-face:keyword fontified t) 11765 11766 (fontified t) 11766 11769 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11769 11771 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11771 11772 (fontified t) 11772 11773 (face tree-sitter-hl-face:operator fontified t) 11773 11780 (fontified t) 11780 11786 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11786 11787 (face (rainbow-delimiters-depth-1-face) fontified t) 11787 11791 (face tree-sitter-hl-face:keyword fontified t) 11791 11792 (fontified t) 11792 11797 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11797 11799 (fontified t) 11799 11804 (face tree-sitter-hl-face:label fontified t) 11804 11805 (face tree-sitter-hl-face:operator fontified t) 11805 11809 (face tree-sitter-hl-face:keyword fontified t) 11809 11810 (fontified t) 11810 11815 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11815 11817 (fontified t) 11817 11823 (face tree-sitter-hl-face:label fontified t) 11823 11824 (face tree-sitter-hl-face:operator fontified t) 11824 11828 (face tree-sitter-hl-face:keyword fontified t) 11828 11829 (fontified t) 11829 11835 (face tree-sitter-hl-face:property fontified t) 11835 11836 (face (rainbow-delimiters-depth-1-face) fontified t) 11836 11837 (fontified t) 11837 11841 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11841 11842 (face (rainbow-delimiters-depth-1-face) fontified t) 11842 11846 (face tree-sitter-hl-face:keyword fontified t) 11846 11847 (fontified t) 11847 11852 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11852 11854 (fontified t) 11854 11858 (face tree-sitter-hl-face:keyword fontified t) 11858 11859 (fontified t) 11859 11864 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11864 11865 (face (rainbow-delimiters-depth-1-face) fontified t) 11865 11874 (fontified t) 11874 11878 (face tree-sitter-hl-face:keyword fontified t) 11878 11879 (fontified t) 11879 11884 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11884 11885 (fontified t) 11885 11886 (face tree-sitter-hl-face:operator fontified t) 11886 11893 (fontified t) 11893 11899 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11899 11900 (face (rainbow-delimiters-depth-1-face) fontified t) 11900 11904 (face tree-sitter-hl-face:keyword fontified t) 11904 11905 (fontified t) 11905 11910 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11910 11912 (fontified t) 11912 11917 (face tree-sitter-hl-face:label fontified t) 11917 11918 (face tree-sitter-hl-face:operator fontified t) 11918 11922 (face tree-sitter-hl-face:keyword fontified t) 11922 11923 (fontified t) 11923 11928 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11928 11930 (fontified t) 11930 11936 (face tree-sitter-hl-face:label fontified t) 11936 11937 (face tree-sitter-hl-face:operator fontified t) 11937 11941 (face tree-sitter-hl-face:keyword fontified t) 11941 11942 (fontified t) 11942 11948 (face tree-sitter-hl-face:property fontified t) 11948 11949 (face (rainbow-delimiters-depth-1-face) fontified t) 11949 11950 (fontified t) 11950 11954 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 11954 11955 (face (rainbow-delimiters-depth-1-face) fontified t) 11955 11959 (face tree-sitter-hl-face:keyword fontified t) 11959 11960 (fontified t) 11960 11965 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11965 11967 (fontified t) 11967 11971 (face tree-sitter-hl-face:keyword fontified t) 11971 11972 (fontified t) 11972 11977 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11977 11978 (face (rainbow-delimiters-depth-1-face) fontified t) 11978 11987 (fontified t) 11987 11991 (face tree-sitter-hl-face:keyword fontified t) 11991 11992 (fontified t) 11992 11997 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 11997 11998 (fontified t) 11998 11999 (face tree-sitter-hl-face:operator fontified t) 11999 12006 (fontified t) 12006 12012 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12012 12013 (face (rainbow-delimiters-depth-1-face) fontified t) 12013 12017 (face tree-sitter-hl-face:keyword fontified t) 12017 12018 (fontified t) 12018 12023 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12023 12024 (fontified t) 12024 12025 (face tree-sitter-hl-face:operator fontified t) 12025 12032 (fontified t) 12032 12034 (face tree-sitter-hl-face:property fontified t) 12034 12035 (fontified t) 12035 12036 (face tree-sitter-hl-face:operator fontified t) 12036 12037 (fontified t) 12037 12042 (face tree-sitter-hl-face:number fontified t) 12042 12044 (fontified t) 12044 12049 (face tree-sitter-hl-face:label fontified t) 12049 12050 (face tree-sitter-hl-face:operator fontified t) 12050 12054 (face tree-sitter-hl-face:keyword fontified t) 12054 12055 (fontified t) 12055 12060 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12060 12062 (fontified t) 12062 12068 (face tree-sitter-hl-face:label fontified t) 12068 12069 (face tree-sitter-hl-face:operator fontified t) 12069 12073 (face tree-sitter-hl-face:keyword fontified t) 12073 12074 (fontified t) 12074 12080 (face tree-sitter-hl-face:property fontified t) 12080 12081 (face (rainbow-delimiters-depth-1-face) fontified t) 12081 12099 (fontified t) 12099 12117 (face tree-sitter-hl-face:comment fontified t) 12117 12126 (fontified t) 12126 12153 (face tree-sitter-hl-face:comment fontified t) 12153 12162 (fontified t) 12162 12185 (face tree-sitter-hl-face:comment fontified t) 12185 12194 (fontified t) 12194 12217 (face tree-sitter-hl-face:comment fontified t) 12217 12226 (fontified t) 12226 12249 (face tree-sitter-hl-face:comment fontified t) 12249 12256 (fontified t) 12256 12259 (face tree-sitter-hl-face:keyword fontified t) 12259 12260 (fontified t) 12260 12270 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 12270 12271 (face (rainbow-delimiters-depth-1-face) fontified t) 12271 12275 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 12275 12276 (face (rainbow-delimiters-depth-1-face) fontified t) 12276 12287 (fontified t) 12287 12318 (face tree-sitter-hl-face:comment fontified t) 12318 12327 (fontified t) 12327 12329 (face tree-sitter-hl-face:keyword fontified t) 12329 12330 (fontified t) 12330 12334 (face tree-sitter-hl-face:keyword fontified t) 12334 12335 (fontified t) 12335 12342 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12342 12356 (fontified t) 12356 12361 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 12361 12362 (face (rainbow-delimiters-depth-1-face) fontified t) 12362 12363 (face tree-sitter-hl-face:string fontified t) 12363 12366 (face tree-sitter-hl-face:string fontified t) 12366 12367 (face tree-sitter-hl-face:string fontified t) 12367 12369 (fontified t) 12369 12373 (face tree-sitter-hl-face:keyword fontified t) 12373 12374 (fontified t) 12374 12377 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12377 12378 (face (rainbow-delimiters-depth-1-face) fontified t) 12378 12400 (fontified t) 12400 12404 (face tree-sitter-hl-face:keyword fontified t) 12404 12405 (fontified t) 12405 12408 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12408 12409 (fontified t) 12409 12410 (face tree-sitter-hl-face:operator fontified t) 12410 12417 (fontified t) 12417 12423 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12423 12424 (face (rainbow-delimiters-depth-1-face) fontified t) 12424 12428 (face tree-sitter-hl-face:keyword fontified t) 12428 12429 (fontified t) 12429 12432 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12432 12434 (fontified t) 12434 12439 (face tree-sitter-hl-face:label fontified t) 12439 12440 (face tree-sitter-hl-face:operator fontified t) 12440 12444 (face tree-sitter-hl-face:keyword fontified t) 12444 12445 (fontified t) 12445 12450 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12450 12452 (fontified t) 12452 12458 (face tree-sitter-hl-face:label fontified t) 12458 12459 (face tree-sitter-hl-face:operator fontified t) 12459 12463 (face tree-sitter-hl-face:keyword fontified t) 12463 12464 (fontified t) 12464 12470 (face tree-sitter-hl-face:property fontified t) 12470 12471 (face (rainbow-delimiters-depth-1-face) fontified t) 12471 12472 (fontified t) 12472 12479 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12479 12480 (face (rainbow-delimiters-depth-1-face) fontified t) 12480 12484 (face tree-sitter-hl-face:keyword fontified t) 12484 12485 (fontified t) 12485 12490 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12490 12492 (fontified t) 12492 12496 (face tree-sitter-hl-face:keyword fontified t) 12496 12497 (fontified t) 12497 12502 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12502 12503 (face (rainbow-delimiters-depth-1-face) fontified t) 12503 12504 (fontified t) 12504 12505 (face tree-sitter-hl-face:operator fontified t) 12505 12506 (fontified t) 12506 12510 (face tree-sitter-hl-face:keyword fontified t) 12510 12511 (fontified t) 12511 12515 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12515 12525 (fontified t) 12525 12528 (face tree-sitter-hl-face:keyword fontified t) 12528 12529 (fontified t) 12529 12534 (face tree-sitter-hl-face:variable fontified t) 12534 12535 (fontified t) 12535 12537 (face tree-sitter-hl-face:operator fontified t) 12537 12538 (fontified t) 12538 12543 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 12543 12544 (face (rainbow-delimiters-depth-1-face) fontified t) 12544 12548 (face tree-sitter-hl-face:keyword fontified t) 12548 12549 (fontified t) 12549 12554 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12554 12555 (face (rainbow-delimiters-depth-1-face) fontified t) 12555 12569 (fontified t) 12569 12573 (face tree-sitter-hl-face:keyword fontified t) 12573 12574 (fontified t) 12574 12577 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12577 12578 (face (rainbow-delimiters-depth-1-face) fontified t) 12578 12581 (fontified t) 12581 12586 (face tree-sitter-hl-face:variable fontified t) 12586 12587 (face (rainbow-delimiters-depth-1-face) fontified t) 12587 12588 (fontified t) 12588 12589 (face tree-sitter-hl-face:operator fontified t) 12589 12590 (fontified t) 12590 12594 (face tree-sitter-hl-face:keyword fontified t) 12594 12595 (fontified t) 12595 12598 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12598 12599 (face (rainbow-delimiters-depth-1-face) fontified t) 12599 12607 (fontified t) 12607 12608 (face (rainbow-delimiters-depth-1-face) fontified t) 12608 12609 (fontified t) 12609 12610 (face tree-sitter-hl-face:operator fontified t) 12610 12617 (fontified t) 12617 12621 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12621 12622 (face (rainbow-delimiters-depth-1-face) fontified t) 12622 12626 (face tree-sitter-hl-face:keyword fontified t) 12626 12627 (fontified t) 12627 12629 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12629 12630 (face (rainbow-delimiters-depth-2-face) fontified t) 12630 12635 (fontified t) 12635 12636 (face (rainbow-delimiters-depth-2-face) fontified t) 12636 12637 (face (rainbow-delimiters-depth-1-face) fontified t) 12637 12647 (fontified t) 12647 12665 (face tree-sitter-hl-face:comment fontified t) 12665 12674 (fontified t) 12674 12709 (face tree-sitter-hl-face:comment fontified t) 12709 12719 (fontified t) 12719 12739 (face tree-sitter-hl-face:comment fontified t) 12739 12748 (fontified t) 12748 12750 (face tree-sitter-hl-face:keyword fontified t) 12750 12751 (fontified t) 12751 12755 (face tree-sitter-hl-face:keyword fontified t) 12755 12756 (fontified t) 12756 12763 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12763 12777 (fontified t) 12777 12782 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 12782 12783 (face (rainbow-delimiters-depth-1-face) fontified t) 12783 12784 (face tree-sitter-hl-face:string fontified t) 12784 12787 (face tree-sitter-hl-face:string fontified t) 12787 12788 (face tree-sitter-hl-face:string fontified t) 12788 12790 (fontified t) 12790 12794 (face tree-sitter-hl-face:keyword fontified t) 12794 12795 (fontified t) 12795 12798 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12798 12799 (face (rainbow-delimiters-depth-1-face) fontified t) 12799 12817 (fontified t) 12817 12821 (face tree-sitter-hl-face:keyword fontified t) 12821 12822 (fontified t) 12822 12825 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12825 12826 (fontified t) 12826 12827 (face tree-sitter-hl-face:operator fontified t) 12827 12834 (fontified t) 12834 12840 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12840 12841 (face (rainbow-delimiters-depth-1-face) fontified t) 12841 12845 (face tree-sitter-hl-face:keyword fontified t) 12845 12846 (fontified t) 12846 12849 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12849 12851 (fontified t) 12851 12856 (face tree-sitter-hl-face:label fontified t) 12856 12857 (face tree-sitter-hl-face:operator fontified t) 12857 12861 (face tree-sitter-hl-face:keyword fontified t) 12861 12862 (fontified t) 12862 12867 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12867 12869 (fontified t) 12869 12875 (face tree-sitter-hl-face:label fontified t) 12875 12876 (face tree-sitter-hl-face:operator fontified t) 12876 12880 (face tree-sitter-hl-face:keyword fontified t) 12880 12881 (fontified t) 12881 12887 (face tree-sitter-hl-face:property fontified t) 12887 12888 (face (rainbow-delimiters-depth-1-face) fontified t) 12888 12897 (fontified t) 12897 12901 (face tree-sitter-hl-face:keyword fontified t) 12901 12902 (fontified t) 12902 12905 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12905 12906 (fontified t) 12906 12907 (face tree-sitter-hl-face:operator fontified t) 12907 12908 (fontified t) 12908 12912 (face tree-sitter-hl-face:keyword fontified t) 12912 12913 (fontified t) 12913 12916 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12916 12917 (fontified t) 12917 12918 (face tree-sitter-hl-face:operator fontified t) 12918 12925 (fontified t) 12925 12929 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 12929 12930 (face (rainbow-delimiters-depth-1-face) fontified t) 12930 12934 (face tree-sitter-hl-face:keyword fontified t) 12934 12935 (fontified t) 12935 12937 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12937 12938 (face (rainbow-delimiters-depth-2-face) fontified t) 12938 12939 (face tree-sitter-hl-face:number fontified t) 12939 12940 (face (rainbow-delimiters-depth-2-face) fontified t) 12940 12941 (face (rainbow-delimiters-depth-1-face) fontified t) 12941 12942 (fontified t) 12942 12943 (face tree-sitter-hl-face:operator fontified t) 12943 12944 (fontified t) 12944 12948 (face tree-sitter-hl-face:keyword fontified t) 12948 12949 (fontified t) 12949 12951 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 12951 12969 (fontified t) 12969 12987 (face tree-sitter-hl-face:comment fontified t) 12987 12996 (fontified t) 12996 13031 (face tree-sitter-hl-face:comment fontified t) 13031 13049 (fontified t) 13049 13053 (face tree-sitter-hl-face:keyword fontified t) 13053 13054 (fontified t) 13054 13060 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13060 13061 (fontified t) 13061 13062 (face tree-sitter-hl-face:operator fontified t) 13062 13069 (fontified t) 13069 13073 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13073 13074 (face (rainbow-delimiters-depth-1-face) fontified t) 13074 13080 (fontified t) 13080 13086 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13086 13087 (face (rainbow-delimiters-depth-2-face) fontified t) 13087 13091 (face tree-sitter-hl-face:keyword fontified t) 13091 13092 (fontified t) 13092 13098 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13098 13100 (fontified t) 13100 13105 (face tree-sitter-hl-face:label fontified t) 13105 13106 (face tree-sitter-hl-face:operator fontified t) 13106 13110 (face tree-sitter-hl-face:keyword fontified t) 13110 13111 (fontified t) 13111 13116 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13116 13118 (fontified t) 13118 13124 (face tree-sitter-hl-face:label fontified t) 13124 13125 (face tree-sitter-hl-face:operator fontified t) 13125 13129 (face tree-sitter-hl-face:keyword fontified t) 13129 13130 (fontified t) 13130 13136 (face tree-sitter-hl-face:property fontified t) 13136 13137 (face (rainbow-delimiters-depth-2-face) fontified t) 13137 13138 (face (rainbow-delimiters-depth-1-face) fontified t) 13138 13147 (fontified t) 13147 13154 (face tree-sitter-hl-face:variable fontified t) 13154 13155 (fontified t) 13155 13156 (face tree-sitter-hl-face:operator fontified t) 13156 13163 (fontified t) 13163 13169 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13169 13170 (face (rainbow-delimiters-depth-1-face) fontified t) 13170 13173 (face tree-sitter-hl-face:number fontified t) 13173 13175 (fontified t) 13175 13180 (face tree-sitter-hl-face:label fontified t) 13180 13181 (face tree-sitter-hl-face:operator fontified t) 13181 13185 (face tree-sitter-hl-face:keyword fontified t) 13185 13186 (fontified t) 13186 13191 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13191 13193 (fontified t) 13193 13199 (face tree-sitter-hl-face:label fontified t) 13199 13200 (face tree-sitter-hl-face:operator fontified t) 13200 13204 (face tree-sitter-hl-face:keyword fontified t) 13204 13205 (fontified t) 13205 13211 (face tree-sitter-hl-face:property fontified t) 13211 13212 (face (rainbow-delimiters-depth-1-face) fontified t) 13212 13221 (fontified t) 13221 13225 (face tree-sitter-hl-face:keyword fontified t) 13225 13226 (fontified t) 13226 13235 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 13235 13236 (fontified t) 13236 13237 (face tree-sitter-hl-face:operator fontified t) 13237 13238 (fontified t) 13238 13244 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 13244 13245 (face (rainbow-delimiters-depth-1-face) fontified t) 13245 13254 (fontified t) 13254 13258 (face tree-sitter-hl-face:keyword fontified t) 13258 13259 (fontified t) 13259 13265 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13265 13266 (face (rainbow-delimiters-depth-2-face) fontified t) 13266 13267 (face tree-sitter-hl-face:number fontified t) 13267 13268 (face (rainbow-delimiters-depth-2-face) fontified t) 13268 13269 (face (rainbow-delimiters-depth-1-face) fontified t) 13269 13283 (fontified t) 13283 13286 (face tree-sitter-hl-face:keyword fontified t) 13286 13287 (fontified t) 13287 13298 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 13298 13299 (face (rainbow-delimiters-depth-1-face) fontified t) 13299 13303 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 13303 13305 (fontified t) 13305 13309 (face tree-sitter-hl-face:variable.parameter fontified t) 13309 13310 (face (rainbow-delimiters-depth-1-face) fontified t) 13310 13320 (fontified t) 13320 13322 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13322 13323 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13323 13374 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified t) 13374 13375 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13375 13377 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 13377 13395 (fontified t) 13395 13397 (face tree-sitter-hl-face:keyword fontified t) 13397 13403 (fontified t) 13403 13405 (face tree-sitter-hl-face:operator fontified t) 13405 13406 (fontified t) 13406 13407 (face tree-sitter-hl-face:number fontified t) 13407 13421 (fontified t) 13421 13424 (face tree-sitter-hl-face:keyword fontified t) 13424 13425 (fontified t) 13425 13426 (face tree-sitter-hl-face:variable fontified t) 13426 13427 (fontified t) 13427 13429 (face tree-sitter-hl-face:operator fontified t) 13429 13430 (fontified t) 13430 13435 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13435 13436 (face (rainbow-delimiters-depth-1-face) fontified t) 13436 13440 (face tree-sitter-hl-face:keyword fontified t) 13440 13441 (fontified t) 13441 13446 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13446 13447 (face (rainbow-delimiters-depth-1-face) fontified t) 13447 13465 (fontified t) 13465 13467 (face tree-sitter-hl-face:keyword fontified t) 13467 13468 (fontified t) 13468 13472 (face tree-sitter-hl-face:keyword fontified t) 13472 13473 (fontified t) 13473 13484 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13484 13485 (face (rainbow-delimiters-depth-1-face) fontified t) 13485 13486 (fontified t) 13486 13487 (face (rainbow-delimiters-depth-1-face) fontified t) 13487 13509 (fontified t) 13509 13546 (face tree-sitter-hl-face:comment fontified t) 13546 13567 (fontified t) 13567 13571 (face tree-sitter-hl-face:keyword fontified t) 13571 13572 (fontified t) 13572 13575 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13575 13576 (fontified t) 13576 13580 (face tree-sitter-hl-face:property fontified t) 13580 13581 (fontified t) 13581 13585 (face tree-sitter-hl-face:property fontified t) 13585 13586 (face (rainbow-delimiters-depth-1-face) fontified t) 13586 13590 (face tree-sitter-hl-face:keyword fontified t) 13590 13591 (fontified t) 13591 13597 (face tree-sitter-hl-face:property fontified t) 13597 13598 (face (rainbow-delimiters-depth-2-face) fontified t) 13598 13599 (fontified t) 13599 13600 (face (rainbow-delimiters-depth-2-face) fontified t) 13600 13601 (fontified t) 13601 13605 (face tree-sitter-hl-face:keyword fontified t) 13605 13606 (fontified t) 13606 13612 (face tree-sitter-hl-face:property fontified t) 13612 13613 (face (rainbow-delimiters-depth-2-face) fontified t) 13613 13614 (fontified t) 13614 13615 (face tree-sitter-hl-face:operator fontified t) 13615 13616 (face tree-sitter-hl-face:number fontified t) 13616 13617 (face (rainbow-delimiters-depth-2-face) fontified t) 13617 13618 (face (rainbow-delimiters-depth-1-face) fontified t) 13618 13619 (fontified t) 13619 13624 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13624 13625 (face (rainbow-delimiters-depth-1-face) fontified t) 13625 13628 (face tree-sitter-hl-face:number fontified t) 13628 13629 (face (rainbow-delimiters-depth-1-face) fontified t) 13629 13646 (fontified t) 13646 13648 (face tree-sitter-hl-face:keyword fontified t) 13648 13649 (fontified t) 13649 13653 (face tree-sitter-hl-face:keyword fontified t) 13653 13654 (fontified t) 13654 13655 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13655 13656 (fontified t) 13656 13658 (face tree-sitter-hl-face:operator fontified t) 13658 13659 (face tree-sitter-hl-face:number fontified t) 13659 13660 (fontified t) 13660 13663 (face tree-sitter-hl-face:operator fontified t) 13663 13664 (fontified t) 13664 13668 (face tree-sitter-hl-face:keyword fontified t) 13668 13669 (fontified t) 13669 13680 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13680 13681 (face (rainbow-delimiters-depth-1-face) fontified t) 13681 13682 (fontified t) 13682 13683 (face (rainbow-delimiters-depth-1-face) fontified t) 13683 13705 (fontified t) 13705 13775 (face tree-sitter-hl-face:comment fontified t) 13775 13796 (fontified t) 13796 13800 (face tree-sitter-hl-face:keyword fontified t) 13800 13801 (fontified t) 13801 13804 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13804 13805 (fontified t) 13805 13809 (face tree-sitter-hl-face:property fontified t) 13809 13810 (fontified t) 13810 13814 (face tree-sitter-hl-face:property fontified t) 13814 13815 (face (rainbow-delimiters-depth-1-face) fontified t) 13815 13819 (face tree-sitter-hl-face:keyword fontified t) 13819 13820 (fontified t) 13820 13826 (face tree-sitter-hl-face:property fontified t) 13826 13827 (face (rainbow-delimiters-depth-2-face) fontified t) 13827 13828 (fontified t) 13828 13829 (face (rainbow-delimiters-depth-2-face) fontified t) 13829 13830 (fontified t) 13830 13834 (face tree-sitter-hl-face:keyword fontified t) 13834 13835 (fontified t) 13835 13841 (face tree-sitter-hl-face:property fontified t) 13841 13842 (face (rainbow-delimiters-depth-2-face) fontified t) 13842 13843 (fontified t) 13843 13844 (face tree-sitter-hl-face:operator fontified t) 13844 13845 (face tree-sitter-hl-face:number fontified t) 13845 13846 (face (rainbow-delimiters-depth-2-face) fontified t) 13846 13847 (face (rainbow-delimiters-depth-1-face) fontified t) 13847 13848 (fontified t) 13848 13853 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13853 13854 (face (rainbow-delimiters-depth-1-face) fontified t) 13854 13858 (face tree-sitter-hl-face:keyword fontified t) 13858 13859 (fontified t) 13859 13862 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13862 13863 (face (rainbow-delimiters-depth-2-face) fontified t) 13863 13864 (fontified t) 13864 13865 (face (rainbow-delimiters-depth-2-face) fontified t) 13865 13866 (fontified t) 13866 13867 (face tree-sitter-hl-face:operator fontified t) 13867 13874 (fontified t) 13874 13878 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 13878 13879 (face (rainbow-delimiters-depth-2-face) fontified t) 13879 13883 (face tree-sitter-hl-face:keyword fontified t) 13883 13884 (fontified t) 13884 13886 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13886 13887 (face (rainbow-delimiters-depth-3-face) fontified t) 13887 13888 (face tree-sitter-hl-face:number fontified t) 13888 13889 (face (rainbow-delimiters-depth-3-face) fontified t) 13889 13890 (face (rainbow-delimiters-depth-2-face) fontified t) 13890 13891 (face (rainbow-delimiters-depth-1-face) fontified t) 13891 13909 (fontified t) 13909 13911 (face tree-sitter-hl-face:keyword fontified t) 13911 13917 (fontified t) 13917 13919 (face tree-sitter-hl-face:operator fontified t) 13919 13920 (fontified t) 13920 13924 (face tree-sitter-hl-face:keyword fontified t) 13924 13925 (fontified t) 13925 13934 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13934 13948 (fontified t) 13948 13951 (face tree-sitter-hl-face:keyword fontified t) 13951 13952 (fontified t) 13952 13953 (face tree-sitter-hl-face:variable fontified t) 13953 13954 (fontified t) 13954 13956 (face tree-sitter-hl-face:operator fontified t) 13956 13957 (fontified t) 13957 13962 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13962 13963 (face (rainbow-delimiters-depth-1-face) fontified t) 13963 13967 (face tree-sitter-hl-face:keyword fontified t) 13967 13968 (fontified t) 13968 13973 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 13973 13974 (face (rainbow-delimiters-depth-1-face) fontified t) 13974 13992 (fontified t) 13992 13994 (face tree-sitter-hl-face:keyword fontified t) 13994 13995 (fontified t) 13995 13999 (face tree-sitter-hl-face:keyword fontified t) 13999 14000 (fontified t) 14000 14011 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14011 14012 (face (rainbow-delimiters-depth-1-face) fontified t) 14012 14013 (fontified t) 14013 14014 (face (rainbow-delimiters-depth-1-face) fontified t) 14014 14036 (fontified t) 14036 14081 (face tree-sitter-hl-face:comment fontified t) 14081 14102 (fontified t) 14102 14106 (face tree-sitter-hl-face:keyword fontified t) 14106 14107 (fontified t) 14107 14110 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14110 14111 (fontified t) 14111 14115 (face tree-sitter-hl-face:property fontified t) 14115 14116 (fontified t) 14116 14120 (face tree-sitter-hl-face:property fontified t) 14120 14121 (face (rainbow-delimiters-depth-1-face) fontified t) 14121 14125 (face tree-sitter-hl-face:keyword fontified t) 14125 14126 (fontified t) 14126 14132 (face tree-sitter-hl-face:property fontified t) 14132 14133 (face (rainbow-delimiters-depth-2-face) fontified t) 14133 14134 (fontified t) 14134 14135 (face (rainbow-delimiters-depth-2-face) fontified t) 14135 14136 (fontified t) 14136 14140 (face tree-sitter-hl-face:keyword fontified t) 14140 14141 (fontified t) 14141 14147 (face tree-sitter-hl-face:property fontified t) 14147 14148 (face (rainbow-delimiters-depth-2-face) fontified t) 14148 14149 (fontified t) 14149 14150 (face tree-sitter-hl-face:operator fontified t) 14150 14151 (face tree-sitter-hl-face:number fontified t) 14151 14152 (face (rainbow-delimiters-depth-2-face) fontified t) 14152 14153 (face (rainbow-delimiters-depth-1-face) fontified t) 14153 14154 (fontified t) 14154 14159 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14159 14160 (face (rainbow-delimiters-depth-1-face) fontified t) 14160 14164 (face tree-sitter-hl-face:keyword fontified t) 14164 14165 (fontified t) 14165 14168 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14168 14169 (face (rainbow-delimiters-depth-2-face) fontified t) 14169 14170 (fontified t) 14170 14171 (face (rainbow-delimiters-depth-2-face) fontified t) 14171 14172 (face (rainbow-delimiters-depth-1-face) fontified t) 14172 14190 (fontified t) 14190 14192 (face tree-sitter-hl-face:keyword fontified t) 14192 14198 (fontified t) 14198 14200 (face tree-sitter-hl-face:operator fontified t) 14200 14201 (fontified t) 14201 14205 (face tree-sitter-hl-face:keyword fontified t) 14205 14206 (fontified t) 14206 14215 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14215 14216 (fontified t) 14216 14219 (face tree-sitter-hl-face:operator fontified t) 14219 14223 (fontified t) 14223 14226 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14226 14227 (face (rainbow-delimiters-depth-1-face) fontified t) 14227 14231 (face tree-sitter-hl-face:keyword fontified t) 14231 14232 (fontified t) 14232 14234 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14234 14236 (face tree-sitter-hl-face:operator fontified t) 14236 14237 (face tree-sitter-hl-face:number fontified t) 14237 14238 (face (rainbow-delimiters-depth-1-face) fontified t) 14238 14252 (fontified t) 14252 14254 (face tree-sitter-hl-face:keyword fontified t) 14254 14255 (fontified t) 14255 14259 (face tree-sitter-hl-face:keyword fontified t) 14259 14260 (fontified t) 14260 14267 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14267 14285 (fontified t) 14285 14290 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 14290 14291 (face (rainbow-delimiters-depth-1-face) fontified t) 14291 14292 (face tree-sitter-hl-face:string fontified t) 14292 14299 (face tree-sitter-hl-face:string fontified t) 14299 14300 (face tree-sitter-hl-face:string fontified t) 14300 14301 (face (rainbow-delimiters-depth-1-face) fontified t) 14301 14327 (fontified t) 14327 14331 (face tree-sitter-hl-face:keyword fontified t) 14331 14332 (fontified t) 14332 14335 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14335 14336 (fontified t) 14336 14340 (face tree-sitter-hl-face:property fontified t) 14340 14341 (fontified t) 14341 14345 (face tree-sitter-hl-face:property fontified t) 14345 14346 (face (rainbow-delimiters-depth-1-face) fontified t) 14346 14350 (face tree-sitter-hl-face:keyword fontified t) 14350 14351 (fontified t) 14351 14357 (face tree-sitter-hl-face:property fontified t) 14357 14358 (face (rainbow-delimiters-depth-2-face) fontified t) 14358 14359 (face tree-sitter-hl-face:number fontified t) 14359 14360 (face (rainbow-delimiters-depth-2-face) fontified t) 14360 14361 (fontified t) 14361 14365 (face tree-sitter-hl-face:keyword fontified t) 14365 14366 (fontified t) 14366 14372 (face tree-sitter-hl-face:property fontified t) 14372 14373 (face (rainbow-delimiters-depth-2-face) fontified t) 14373 14374 (face tree-sitter-hl-face:number fontified t) 14374 14375 (face (rainbow-delimiters-depth-2-face) fontified t) 14375 14376 (face (rainbow-delimiters-depth-1-face) fontified t) 14376 14377 (fontified t) 14377 14378 (face tree-sitter-hl-face:operator fontified t) 14378 14379 (fontified t) 14379 14383 (face tree-sitter-hl-face:keyword fontified t) 14383 14384 (fontified t) 14384 14387 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 14387 14388 (face (rainbow-delimiters-depth-1-face) fontified t) 14388 14389 (face tree-sitter-hl-face:number fontified t) 14389 14390 (face (rainbow-delimiters-depth-1-face) fontified t) 14390 14391 (fontified t) 14391 14392 (face tree-sitter-hl-face:operator fontified t) 14392 14393 (fontified t) 14393 14397 (face tree-sitter-hl-face:keyword fontified t) 14397 14398 (fontified t) 14398 14406 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 14406 14407 (face (rainbow-delimiters-depth-1-face) fontified t) 14407 14408 (face tree-sitter-hl-face:number fontified t) 14408 14409 (face (rainbow-delimiters-depth-1-face) fontified t) 14409 14435 (fontified t) 14435 14455 (face tree-sitter-hl-face:comment fontified t) 14455 14468 (fontified t) 14468 14582 (face tree-sitter-hl-face:comment fontified t) 14582 14595 (fontified t) 14595 14617 (face tree-sitter-hl-face:comment fontified t) 14617 14630 (fontified t) 14630 14744 (face tree-sitter-hl-face:comment fontified t) 14744 14770 (fontified t) 14770 14791 (face tree-sitter-hl-face:comment fontified t) 14791 14804 (fontified t) 14804 14918 (face tree-sitter-hl-face:comment fontified t) 14918 14931 (fontified t) 14931 14953 (face tree-sitter-hl-face:comment fontified t) 14953 14966 (fontified t) 14966 15080 (face tree-sitter-hl-face:comment fontified t) 15080 15131 (fontified t) 15131 15133 (face tree-sitter-hl-face:keyword fontified t) 15133 15139 (fontified t) 15139 15141 (face tree-sitter-hl-face:operator fontified t) 15141 15142 (fontified t) 15142 15146 (face tree-sitter-hl-face:keyword fontified t) 15146 15147 (fontified t) 15147 15157 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15157 15158 (fontified t) 15158 15161 (face tree-sitter-hl-face:operator fontified t) 15161 15165 (fontified t) 15165 15168 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 15168 15169 (face (rainbow-delimiters-depth-1-face) fontified t) 15169 15173 (face tree-sitter-hl-face:keyword fontified t) 15173 15174 (fontified t) 15174 15176 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15176 15178 (face tree-sitter-hl-face:operator fontified t) 15178 15179 (face tree-sitter-hl-face:number fontified t) 15179 15180 (face (rainbow-delimiters-depth-1-face) fontified t) 15180 15194 (fontified t) 15194 15196 (face tree-sitter-hl-face:keyword fontified t) 15196 15197 (fontified t) 15197 15201 (face tree-sitter-hl-face:keyword fontified t) 15201 15202 (fontified t) 15202 15209 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15209 15227 (fontified t) 15227 15232 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 15232 15233 (face (rainbow-delimiters-depth-1-face) fontified t) 15233 15234 (face tree-sitter-hl-face:string fontified t) 15234 15242 (face tree-sitter-hl-face:string fontified t) 15242 15243 (face tree-sitter-hl-face:string fontified t) 15243 15244 (face (rainbow-delimiters-depth-1-face) fontified t) 15244 15257 (fontified t) 15257 15261 (face tree-sitter-hl-face:keyword fontified t) 15261 15262 (fontified t) 15262 15265 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15265 15266 (fontified t) 15266 15270 (face tree-sitter-hl-face:property fontified t) 15270 15271 (fontified t) 15271 15275 (face tree-sitter-hl-face:property fontified t) 15275 15276 (face (rainbow-delimiters-depth-1-face) fontified t) 15276 15280 (face tree-sitter-hl-face:keyword fontified t) 15280 15281 (fontified t) 15281 15287 (face tree-sitter-hl-face:property fontified t) 15287 15288 (face (rainbow-delimiters-depth-2-face) fontified t) 15288 15289 (face tree-sitter-hl-face:number fontified t) 15289 15290 (face (rainbow-delimiters-depth-2-face) fontified t) 15290 15291 (fontified t) 15291 15295 (face tree-sitter-hl-face:keyword fontified t) 15295 15296 (fontified t) 15296 15302 (face tree-sitter-hl-face:property fontified t) 15302 15303 (face (rainbow-delimiters-depth-2-face) fontified t) 15303 15304 (face tree-sitter-hl-face:number fontified t) 15304 15305 (face (rainbow-delimiters-depth-2-face) fontified t) 15305 15306 (face (rainbow-delimiters-depth-1-face) fontified t) 15306 15307 (fontified t) 15307 15308 (face tree-sitter-hl-face:operator fontified t) 15308 15309 (fontified t) 15309 15313 (face tree-sitter-hl-face:keyword fontified t) 15313 15314 (fontified t) 15314 15317 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15317 15318 (face (rainbow-delimiters-depth-1-face) fontified t) 15318 15319 (face tree-sitter-hl-face:number fontified t) 15319 15320 (face (rainbow-delimiters-depth-1-face) fontified t) 15320 15334 (fontified t) 15334 15363 (face tree-sitter-hl-face:comment fontified t) 15363 15376 (fontified t) 15376 15425 (face tree-sitter-hl-face:comment fontified t) 15425 15439 (fontified t) 15439 15442 (face tree-sitter-hl-face:keyword fontified t) 15442 15443 (fontified t) 15443 15451 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 15451 15452 (face (rainbow-delimiters-depth-1-face) fontified t) 15452 15456 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 15456 15458 (fontified t) 15458 15463 (face tree-sitter-hl-face:variable.parameter fontified t) 15463 15464 (face (rainbow-delimiters-depth-1-face) fontified t) 15464 15474 (fontified t) 15474 15476 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15476 15477 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15477 15491 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified t) 15491 15492 (syntax-table (15) face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15492 15494 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified t) 15494 15503 (fontified t) 15503 15508 (face tree-sitter-hl-face:variable fontified t) 15508 15509 (fontified t) 15509 15510 (face tree-sitter-hl-face:operator fontified t) 15510 15517 (fontified t) 15517 15523 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 15523 15524 (face (rainbow-delimiters-depth-1-face) fontified t) 15524 15525 (face tree-sitter-hl-face:number fontified t) 15525 15527 (fontified t) 15527 15530 (face tree-sitter-hl-face:number fontified t) 15530 15531 (fontified t) 15531 15532 (face tree-sitter-hl-face:operator fontified t) 15532 15539 (fontified t) 15539 15541 (face tree-sitter-hl-face:property fontified t) 15541 15543 (fontified t) 15543 15546 (face tree-sitter-hl-face:number fontified t) 15546 15547 (fontified t) 15547 15548 (face tree-sitter-hl-face:operator fontified t) 15548 15555 (fontified t) 15555 15557 (face tree-sitter-hl-face:property fontified t) 15557 15558 (fontified t) 15558 15559 (face tree-sitter-hl-face:operator fontified t) 15559 15560 (fontified t) 15560 15565 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 15565 15566 (face (rainbow-delimiters-depth-2-face) fontified t) 15566 15570 (face tree-sitter-hl-face:keyword fontified t) 15570 15571 (fontified t) 15571 15573 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15573 15574 (face (rainbow-delimiters-depth-3-face) fontified t) 15574 15579 (fontified t) 15579 15580 (face (rainbow-delimiters-depth-3-face) fontified t) 15580 15581 (face (rainbow-delimiters-depth-2-face) fontified t) 15581 15583 (fontified t) 15583 15588 (face tree-sitter-hl-face:label fontified t) 15588 15589 (face tree-sitter-hl-face:operator fontified t) 15589 15593 (face tree-sitter-hl-face:keyword fontified t) 15593 15594 (fontified t) 15594 15599 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15599 15601 (fontified t) 15601 15607 (face tree-sitter-hl-face:label fontified t) 15607 15608 (face tree-sitter-hl-face:operator fontified t) 15608 15612 (face tree-sitter-hl-face:keyword fontified t) 15612 15613 (fontified t) 15613 15619 (face tree-sitter-hl-face:property fontified t) 15619 15620 (face (rainbow-delimiters-depth-1-face) fontified t) 15620 15629 (fontified t) 15629 15635 (face tree-sitter-hl-face:keyword fontified t) 15635 15636 (fontified t) 15636 15640 (face tree-sitter-hl-face:keyword fontified t) 15640 15641 (fontified t) 15641 15643 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15643 15644 (face (rainbow-delimiters-depth-1-face) fontified t) 15644 15649 (fontified t) 15649 15650 (face (rainbow-delimiters-depth-1-face) fontified t) 15650 15651 (fontified t) 15651 15652 (face tree-sitter-hl-face:operator fontified t) 15652 15653 (fontified t) 15653 15654 (face (rainbow-delimiters-depth-1-face) fontified t) 15654 15657 (face tree-sitter-hl-face:number fontified t) 15657 15658 (fontified t) 15658 15659 (face tree-sitter-hl-face:operator fontified t) 15659 15660 (fontified t) 15660 15664 (face tree-sitter-hl-face:keyword fontified t) 15664 15665 (fontified t) 15665 15671 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15671 15672 (fontified t) 15672 15673 (face tree-sitter-hl-face:operator fontified t) 15673 15680 (fontified t) 15680 15683 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 15683 15684 (face (rainbow-delimiters-depth-2-face) fontified t) 15684 15690 (fontified t) 15690 15691 (face tree-sitter-hl-face:operator fontified t) 15691 15692 (fontified t) 15692 15696 (face tree-sitter-hl-face:keyword fontified t) 15696 15697 (fontified t) 15697 15701 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15701 15702 (fontified t) 15702 15703 (face tree-sitter-hl-face:operator fontified t) 15703 15710 (fontified t) 15710 15712 (face tree-sitter-hl-face:property fontified t) 15712 15713 (fontified t) 15713 15714 (face tree-sitter-hl-face:operator fontified t) 15714 15715 (fontified t) 15715 15720 (face tree-sitter-hl-face:number fontified t) 15720 15721 (face (rainbow-delimiters-depth-2-face) fontified t) 15721 15722 (face (rainbow-delimiters-depth-1-face) fontified t) 15722 15723 (fontified t) 15723 15724 (face tree-sitter-hl-face:operator fontified t) 15724 15731 (fontified t) 15731 15735 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 15735 15736 (face (rainbow-delimiters-depth-1-face) fontified t) 15736 15740 (face tree-sitter-hl-face:keyword fontified t) 15740 15741 (fontified t) 15741 15743 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15743 15744 (face (rainbow-delimiters-depth-2-face) fontified t) 15744 15745 (face tree-sitter-hl-face:number fontified t) 15745 15746 (face (rainbow-delimiters-depth-2-face) fontified t) 15746 15747 (face (rainbow-delimiters-depth-1-face) fontified t) 15747 15748 (fontified t) 15748 15749 (face tree-sitter-hl-face:operator fontified t) 15749 15750 (fontified t) 15750 15754 (face tree-sitter-hl-face:keyword fontified t) 15754 15755 (fontified t) 15755 15757 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15757 15758 (fontified t)) . 1) (undo-tree-id905 . -15621) (undo-tree-id906 . -1210) (undo-tree-id907 . -1210) (undo-tree-id908 . -673) (undo-tree-id909 . -673) (undo-tree-id910 . -1210) (undo-tree-id911 . -1210) (undo-tree-id912 . -1172) (undo-tree-id913 . -234) (undo-tree-id914 . -192) (undo-tree-id915 . -309) (undo-tree-id916 . -5873) (undo-tree-id917 . -15758) (undo-tree-id918 . -13279) (undo-tree-id919 . -13936) (undo-tree-id920 . -15758) (undo-tree-id921 . -15758) (undo-tree-id922 . -15081) (undo-tree-id923 . -15758) (undo-tree-id924 . -594) (undo-tree-id925 . -9784) (undo-tree-id926 . -4652) (undo-tree-id928 . -8898) (undo-tree-id929 . -9977) (undo-tree-id931 . -5116) (undo-tree-id933 . -8899) (undo-tree-id935 . -5153) (undo-tree-id937 . -5153) (undo-tree-id939 . -5153) (undo-tree-id941 . -5153) (undo-tree-id943 . -5153) (undo-tree-id945 . -5153) (undo-tree-id946 . -5153) (undo-tree-id947 . -4652) (undo-tree-id949 . -5153) (undo-tree-id951 . -5153) (undo-tree-id953 . -5153) (undo-tree-id955 . -5153) (undo-tree-id957 . -5153) (undo-tree-id959 . -5153) (undo-tree-id961 . -5153) (undo-tree-id963 . -5153) (undo-tree-id964 . -5153) (undo-tree-id966 . -5153) (undo-tree-id968 . -5153) (t 25975 7661 378833 820000)) ((1 . 15759)) (25975 7726 723908 468000) 0 nil] [nil nil ((nil rear-nonsticky nil 1410 . 1411) (nil fontified nil 1173 . 1411) (1173 . 1411) (t 25975 7354 510824 55000)) ((#("                W0 = self.initWeights(j_pop, i_pop)
                
                self.Wab.weight.data[self.csumNa[j_pop] : self.csumNa[j_pop + 1],
                                     self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = W0
" 0 16 (fontified nil) 16 18 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 18 19 (fontified nil) 19 20 (face tree-sitter-hl-face:operator fontified nil) 20 21 (fontified nil) 21 25 (face tree-sitter-hl-face:keyword fontified nil) 25 26 (fontified nil) 26 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 37 38 (face (rainbow-delimiters-depth-1-face) fontified nil) 38 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 85 (fontified nil) 85 89 (face tree-sitter-hl-face:keyword fontified nil) 89 90 (fontified nil) 90 93 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 93 94 (fontified nil) 94 100 (face tree-sitter-hl-face:property fontified nil) 100 101 (fontified nil) 101 105 (face tree-sitter-hl-face:property fontified nil) 105 106 (face (rainbow-delimiters-depth-1-face) fontified nil) 106 110 (face tree-sitter-hl-face:keyword fontified nil) 110 111 (fontified nil) 111 117 (face tree-sitter-hl-face:property fontified nil) 117 118 (face (rainbow-delimiters-depth-2-face) fontified nil) 118 123 (fontified nil) 123 124 (face (rainbow-delimiters-depth-2-face) fontified nil) 124 127 (fontified nil) 127 131 (face tree-sitter-hl-face:keyword fontified nil) 131 132 (fontified nil) 132 138 (face tree-sitter-hl-face:property fontified nil) 138 139 (face (rainbow-delimiters-depth-2-face) fontified nil) 139 145 (fontified nil) 145 146 (face tree-sitter-hl-face:operator fontified nil) 146 147 (fontified nil) 147 148 (face tree-sitter-hl-face:number fontified nil) 148 149 (face (rainbow-delimiters-depth-2-face) fontified nil) 149 151 (fontified nil) 151 188 (fontified nil) 188 192 (face tree-sitter-hl-face:keyword fontified nil) 192 193 (fontified nil) 193 199 (face tree-sitter-hl-face:property fontified nil) 199 200 (face (rainbow-delimiters-depth-2-face) fontified nil) 200 205 (fontified nil) 205 206 (face (rainbow-delimiters-depth-2-face) fontified nil) 206 209 (fontified nil) 209 213 (face tree-sitter-hl-face:keyword fontified nil) 213 214 (fontified nil) 214 220 (face tree-sitter-hl-face:property fontified nil) 220 221 (face (rainbow-delimiters-depth-2-face) fontified nil) 221 227 (fontified nil) 227 228 (face tree-sitter-hl-face:operator fontified nil) 228 229 (fontified nil) 229 230 (face tree-sitter-hl-face:number fontified nil) 230 231 (face (rainbow-delimiters-depth-2-face) fontified nil) 231 232 (face (rainbow-delimiters-depth-1-face) fontified nil) 232 233 (fontified nil) 233 234 (face tree-sitter-hl-face:operator fontified nil) 234 235 (fontified nil) 235 237 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 237 238 (rear-nonsticky nil fontified nil)) . 1173) (undo-tree-id733 . -238) (undo-tree-id734 . -238) (undo-tree-id735 . -238) (undo-tree-id736 . -238) (nil fontified t 1322 . 1324) (nil fontified t 1321 . 1322) (nil fontified t 1320 . 1321) (nil fontified t 1319 . 1320) (nil fontified t 1318 . 1319) (nil fontified t 1312 . 1318) (nil fontified t 1311 . 1312) (nil fontified t 1305 . 1311) (nil fontified t 1304 . 1305) (nil fontified t 1300 . 1304) (nil fontified t 1297 . 1300) (nil fontified t 1296 . 1297) (nil fontified t 1291 . 1296) (nil fontified t 1290 . 1291) (nil fontified t 1284 . 1290) (nil fontified t 1283 . 1284) (nil fontified t 1279 . 1283) (nil fontified t 1278 . 1279) (nil fontified t 1274 . 1278) (nil fontified t 1273 . 1274) (nil fontified t 1267 . 1273) (nil fontified t 1266 . 1267) (nil fontified t 1263 . 1266) (nil fontified t 1262 . 1263) (nil fontified t 1258 . 1262) (nil fontified t 1224 . 1258) (nil fontified t 1223 . 1224) (nil fontified t 1211 . 1223) (nil fontified t 1210 . 1211) (nil fontified t 1199 . 1210) (nil fontified t 1198 . 1199) (nil fontified t 1194 . 1198) (nil fontified t 1193 . 1194) (nil fontified t 1192 . 1193) (nil fontified t 1191 . 1192) (nil fontified t 1189 . 1191) (nil fontified t 1173 . 1189) (nil rear-nonsticky t 1410 . 1411)) (25975 7488 699751 630000) 0 nil])
([nil nil ((1666 . 1670)) nil (25976 15713 203821 828000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14891 . 14892) (nil fontified nil 1 . 7) (nil fontified nil 7 . 11) (nil fontified nil 11 . 17) (nil fontified nil 17 . 21) (nil fontified nil 21 . 27) (nil fontified nil 27 . 34) (nil fontified nil 34 . 36) (nil fontified nil 36 . 41) (nil fontified nil 41 . 47) (nil fontified nil 47 . 54) (nil fontified nil 54 . 58) (nil fontified nil 58 . 65) (nil fontified nil 65 . 71) (nil fontified nil 71 . 75) (nil fontified nil 75 . 79) (nil fontified nil 79 . 100) (nil fontified nil 100 . 106) (nil fontified nil 106 . 107) (nil fontified nil 107 . 113) (nil fontified nil 113 . 115) (nil fontified nil 115 . 133) (nil fontified nil 133 . 135) (nil fontified nil 135 . 139) (nil fontified nil 139 . 145) (nil fontified nil 145 . 151) (nil fontified nil 151 . 162) (nil fontified nil 162 . 166) (nil fontified nil 166 . 172) (nil fontified nil 172 . 178) (nil fontified nil 178 . 193) (nil fontified nil 193 . 197) (nil fontified nil 197 . 208) (nil fontified nil 208 . 214) (nil fontified nil 214 . 224) (nil fontified nil 224 . 228) (nil fontified nil 228 . 244) (nil fontified nil 244 . 250) (nil fontified nil 250 . 251) (nil fontified nil 251 . 261) (nil fontified nil 261 . 262) (nil fontified nil 262 . 299) (nil fontified nil 299 . 301) (nil fontified nil 301 . 307) (nil fontified nil 307 . 326) (nil fontified nil 326 . 340) (nil fontified nil 340 . 341) (nil fontified nil 341 . 342) (nil fontified nil 342 . 348) (nil fontified nil 348 . 349) (nil fontified nil 349 . 350) (nil fontified nil 350 . 353) (nil fontified nil 353 . 358) (nil fontified nil 358 . 359) (nil fontified nil 359 . 366) (nil fontified nil 366 . 367) (nil fontified nil 367 . 370) (nil fontified nil 370 . 376) (nil fontified nil 376 . 377) (nil fontified nil 377 . 383) (nil fontified nil 383 . 386) (nil fontified nil 386 . 387) (nil fontified nil 387 . 395) (nil fontified nil 395 . 396) (nil fontified nil 396 . 400) (nil fontified nil 400 . 402) (nil fontified nil 402 . 411) (nil fontified nil 411 . 413) (nil fontified nil 413 . 421) (nil fontified nil 421 . 423) (nil fontified nil 423 . 432) (nil fontified nil 432 . 434) (nil fontified nil 434 . 436) (nil fontified nil 436 . 442) (nil fontified nil 442 . 443) (nil fontified nil 443 . 453) (nil fontified nil 453 . 458) (nil fontified nil 458 . 459) (nil fontified nil 459 . 460) (nil fontified nil 460 . 461) (nil fontified nil 461 . 469) (nil fontified nil 469 . 470) (nil fontified nil 470 . 471) (nil fontified nil 471 . 481) (nil fontified nil 481 . 498) (nil fontified nil 498 . 507) (nil fontified nil 507 . 511) (nil fontified nil 511 . 512) (nil fontified nil 512 . 522) (nil fontified nil 522 . 523) (nil fontified nil 523 . 555) (nil fontified nil 555 . 557) (nil fontified nil 557 . 563) (nil fontified nil 563 . 564) (nil fontified nil 564 . 574) (nil fontified nil 574 . 584) (nil fontified nil 584 . 593) (nil fontified nil 593 . 597) (nil fontified nil 597 . 598) (nil fontified nil 598 . 607) (nil fontified nil 607 . 608) (nil fontified nil 608 . 609) (nil fontified nil 609 . 619) (nil fontified nil 619 . 637) (nil fontified nil 637 . 646) (nil fontified nil 646 . 650) (nil fontified nil 650 . 651) (nil fontified nil 651 . 661) (nil fontified nil 661 . 662) (nil fontified nil 662 . 663) (nil fontified nil 663 . 673) (nil fontified nil 673 . 691) (nil fontified nil 691 . 700) (nil fontified nil 700 . 708) (nil fontified nil 708 . 709) (nil fontified nil 709 . 713) (nil fontified nil 713 . 714) (nil fontified nil 714 . 718) (nil fontified nil 718 . 719) (nil fontified nil 719 . 729) (nil fontified nil 729 . 757) (nil fontified nil 757 . 766) (nil fontified nil 766 . 770) (nil fontified nil 770 . 771) (nil fontified nil 771 . 774) (nil fontified nil 774 . 775) (nil fontified nil 775 . 776) (nil fontified nil 776 . 780) (nil fontified nil 780 . 786) (nil fontified nil 786 . 787) (nil fontified nil 787 . 791) (nil fontified nil 791 . 792) (nil fontified nil 792 . 800) (nil fontified nil 800 . 802) (nil fontified nil 802 . 806) (nil fontified nil 806 . 807) (nil fontified nil 807 . 815) (nil fontified nil 815 . 817) (nil fontified nil 817 . 821) (nil fontified nil 821 . 822) (nil fontified nil 822 . 826) (nil fontified nil 826 . 828) (nil fontified nil 828 . 833) (nil fontified nil 833 . 834) (nil fontified nil 834 . 838) (nil fontified nil 838 . 839) (nil fontified nil 839 . 844) (nil fontified nil 844 . 846) (nil fontified nil 846 . 852) (nil fontified nil 852 . 853) (nil fontified nil 853 . 857) (nil fontified nil 857 . 858) (nil fontified nil 858 . 864) (nil fontified nil 864 . 865) (nil fontified nil 865 . 875) (nil fontified nil 875 . 878) (nil fontified nil 878 . 879) (nil fontified nil 879 . 884) (nil fontified nil 884 . 885) (nil fontified nil 885 . 887) (nil fontified nil 887 . 888) (nil fontified nil 888 . 893) (nil fontified nil 893 . 894) (nil fontified nil 894 . 898) (nil fontified nil 898 . 899) (nil fontified nil 899 . 904) (nil fontified nil 904 . 905) (nil fontified nil 905 . 919) (nil fontified nil 919 . 922) (nil fontified nil 922 . 923) (nil fontified nil 923 . 928) (nil fontified nil 928 . 929) (nil fontified nil 929 . 931) (nil fontified nil 931 . 932) (nil fontified nil 932 . 937) (nil fontified nil 937 . 938) (nil fontified nil 938 . 942) (nil fontified nil 942 . 943) (nil fontified nil 943 . 948) (nil fontified nil 948 . 949) (nil fontified nil 949 . 967) (nil fontified nil 967 . 969) (nil fontified nil 969 . 970) (nil fontified nil 970 . 971) (nil fontified nil 971 . 972) (nil fontified nil 972 . 976) (nil fontified nil 976 . 977) (nil fontified nil 977 . 988) (nil fontified nil 988 . 989) (nil fontified nil 989 . 1001) (nil fontified nil 1001 . 1002) (nil fontified nil 1002 . 1036) (nil fontified nil 1036 . 1040) (nil fontified nil 1040 . 1041) (nil fontified nil 1041 . 1044) (nil fontified nil 1044 . 1045) (nil fontified nil 1045 . 1051) (nil fontified nil 1051 . 1052) (nil fontified nil 1052 . 1056) (nil fontified nil 1056 . 1057) (nil fontified nil 1057 . 1061) (nil fontified nil 1061 . 1062) (nil fontified nil 1062 . 1068) (nil fontified nil 1068 . 1069) (nil fontified nil 1069 . 1074) (nil fontified nil 1074 . 1075) (nil fontified nil 1075 . 1078) (nil fontified nil 1078 . 1082) (nil fontified nil 1082 . 1083) (nil fontified nil 1083 . 1089) (nil fontified nil 1089 . 1090) (nil fontified nil 1090 . 1096) (nil fontified nil 1096 . 1097) (nil fontified nil 1097 . 1098) (nil fontified nil 1098 . 1099) (nil fontified nil 1099 . 1100) (nil fontified nil 1100 . 1139) (nil fontified nil 1139 . 1143) (nil fontified nil 1143 . 1144) (nil fontified nil 1144 . 1150) (nil fontified nil 1150 . 1151) (nil fontified nil 1151 . 1156) (nil fontified nil 1156 . 1157) (nil fontified nil 1157 . 1160) (nil fontified nil 1160 . 1164) (nil fontified nil 1164 . 1165) (nil fontified nil 1165 . 1171) (nil fontified nil 1171 . 1172) (nil fontified nil 1172 . 1178) (nil fontified nil 1178 . 1179) (nil fontified nil 1179 . 1180) (nil fontified nil 1180 . 1181) (nil fontified nil 1181 . 1182) (nil fontified nil 1182 . 1183) (nil fontified nil 1183 . 1184) (nil fontified nil 1184 . 1185) (nil fontified nil 1185 . 1186) (nil fontified nil 1186 . 1188) (nil fontified nil 1188 . 1206) (nil fontified nil 1206 . 1261) (nil fontified nil 1261 . 1270) (nil fontified nil 1270 . 1273) (nil fontified nil 1273 . 1274) (nil fontified nil 1274 . 1279) (nil fontified nil 1279 . 1280) (nil fontified nil 1280 . 1282) (nil fontified nil 1282 . 1283) (nil fontified nil 1283 . 1288) (nil fontified nil 1288 . 1289) (nil fontified nil 1289 . 1293) (nil fontified nil 1293 . 1294) (nil fontified nil 1294 . 1299) (nil fontified nil 1299 . 1300) (nil fontified nil 1300 . 1314) (nil fontified nil 1314 . 1318) (nil fontified nil 1318 . 1319) (nil fontified nil 1319 . 1322) (nil fontified nil 1322 . 1323) (nil fontified nil 1323 . 1327) (nil fontified nil 1327 . 1328) (nil fontified nil 1328 . 1332) (nil fontified nil 1332 . 1333) (nil fontified nil 1333 . 1337) (nil fontified nil 1337 . 1338) (nil fontified nil 1338 . 1344) (nil fontified nil 1344 . 1345) (nil fontified nil 1345 . 1350) (nil fontified nil 1350 . 1351) (nil fontified nil 1351 . 1354) (nil fontified nil 1354 . 1358) (nil fontified nil 1358 . 1359) (nil fontified nil 1359 . 1365) (nil fontified nil 1365 . 1366) (nil fontified nil 1366 . 1372) (nil fontified nil 1372 . 1373) (nil fontified nil 1373 . 1374) (nil fontified nil 1374 . 1375) (nil fontified nil 1375 . 1376) (nil fontified nil 1376 . 1377) (nil fontified nil 1377 . 1378) (nil fontified nil 1378 . 1383) (nil fontified nil 1383 . 1384) (nil fontified nil 1384 . 1388) (nil fontified nil 1388 . 1389) (nil fontified nil 1389 . 1392) (nil fontified nil 1392 . 1393) (nil fontified nil 1393 . 1398) (nil fontified nil 1398 . 1399) (nil fontified nil 1399 . 1400) (nil fontified nil 1400 . 1418) (nil fontified nil 1418 . 1435) (nil fontified nil 1435 . 1444) (nil fontified nil 1444 . 1452) (nil fontified nil 1452 . 1453) (nil fontified nil 1453 . 1454) (nil fontified nil 1454 . 1455) (nil fontified nil 1455 . 1462) (nil fontified nil 1462 . 1465) (nil fontified nil 1465 . 1466) (nil fontified nil 1466 . 1482) (nil fontified nil 1482 . 1483) (nil fontified nil 1483 . 1487) (nil fontified nil 1487 . 1489) (nil fontified nil 1489 . 1494) (nil fontified nil 1494 . 1495) (nil fontified nil 1495 . 1501) (nil fontified nil 1501 . 1505) (nil fontified nil 1505 . 1507) (nil fontified nil 1507 . 1508) (nil fontified nil 1508 . 1540) (nil fontified nil 1540 . 1541) (nil fontified nil 1541 . 1543) (nil fontified nil 1543 . 1552) (nil fontified nil 1552 . 1561) (nil fontified nil 1561 . 1562) (nil fontified nil 1562 . 1563) (nil fontified nil 1563 . 1564) (nil fontified nil 1564 . 1568) (nil fontified nil 1568 . 1569) (nil fontified nil 1569 . 1572) (nil fontified nil 1572 . 1573) (nil fontified nil 1573 . 1578) (nil fontified nil 1578 . 1579) (nil fontified nil 1579 . 1589) (nil fontified nil 1589 . 1595) (nil fontified nil 1595 . 1611) (nil fontified nil 1611 . 1614) (nil fontified nil 1614 . 1615) (nil fontified nil 1615 . 1631) (nil fontified nil 1631 . 1632) (nil fontified nil 1632 . 1636) (nil fontified nil 1636 . 1638) (nil fontified nil 1638 . 1647) (nil fontified nil 1647 . 1648) (nil fontified nil 1648 . 1658) (nil fontified nil 1658 . 1660) (nil fontified nil 1660 . 1661) (nil fontified nil 1661 . 1700) (nil fontified nil 1700 . 1701) (nil fontified nil 1701 . 1703) (nil fontified nil 1703 . 1713) (nil fontified nil 1713 . 1799) (nil fontified nil 1799 . 1808) (nil fontified nil 1808 . 1813) (nil fontified nil 1813 . 1814) (nil fontified nil 1814 . 1815) (nil fontified nil 1815 . 1816) (nil fontified nil 1816 . 1820) (nil fontified nil 1820 . 1821) (nil fontified nil 1821 . 1830) (nil fontified nil 1830 . 1831) (nil fontified nil 1831 . 1837) (nil fontified nil 1837 . 1838) (nil fontified nil 1838 . 1839) (nil fontified nil 1839 . 1843) (nil fontified nil 1843 . 1844) (nil fontified nil 1844 . 1852) (nil fontified nil 1852 . 1853) (nil fontified nil 1853 . 1854) (nil fontified nil 1854 . 1855) (nil fontified nil 1855 . 1856) (nil fontified nil 1856 . 1863) (nil fontified nil 1863 . 1864) (nil fontified nil 1864 . 1865) (nil fontified nil 1865 . 1866) (nil fontified nil 1866 . 1875) (nil fontified nil 1875 . 1884) (nil fontified nil 1884 . 1885) (nil fontified nil 1885 . 1886) (nil fontified nil 1886 . 1893) (nil fontified nil 1893 . 1894) (nil fontified nil 1894 . 1914) (nil fontified nil 1914 . 1920) (nil fontified nil 1920 . 1936) (nil fontified nil 1936 . 1939) (nil fontified nil 1939 . 1940) (nil fontified nil 1940 . 1952) (nil fontified nil 1952 . 1953) (nil fontified nil 1953 . 1957) (nil fontified nil 1957 . 1959) (nil fontified nil 1959 . 1964) (nil fontified nil 1964 . 1966) (nil fontified nil 1966 . 1975) (nil fontified nil 1975 . 1976) (nil fontified nil 1976 . 1986) (nil fontified nil 1986 . 1988) (nil fontified nil 1988 . 1989) (nil fontified nil 1989 . 2010) (nil fontified nil 2010 . 2011) (nil fontified nil 2011 . 2013) (nil fontified nil 2013 . 2022) (nil fontified nil 2022 . 2065) (nil fontified nil 2065 . 2074) (nil fontified nil 2074 . 2076) (nil fontified nil 2076 . 2077) (nil fontified nil 2077 . 2081) (nil fontified nil 2081 . 2082) (nil fontified nil 2082 . 2090) (nil fontified nil 2090 . 2104) (nil fontified nil 2104 . 2109) (nil fontified nil 2109 . 2110) (nil fontified nil 2110 . 2111) (nil fontified nil 2111 . 2112) (nil fontified nil 2112 . 2116) (nil fontified nil 2116 . 2117) (nil fontified nil 2117 . 2127) (nil fontified nil 2127 . 2128) (nil fontified nil 2128 . 2129) (nil fontified nil 2129 . 2136) (nil fontified nil 2136 . 2137) (nil fontified nil 2137 . 2138) (nil fontified nil 2138 . 2142) (nil fontified nil 2142 . 2143) (nil fontified nil 2143 . 2149) (nil fontified nil 2149 . 2150) (nil fontified nil 2150 . 2151) (nil fontified nil 2151 . 2152) (nil fontified nil 2152 . 2162) (nil fontified nil 2162 . 2163) (nil fontified nil 2163 . 2167) (nil fontified nil 2167 . 2168) (nil fontified nil 2168 . 2175) (nil fontified nil 2175 . 2177) (nil fontified nil 2177 . 2181) (nil fontified nil 2181 . 2182) (nil fontified nil 2182 . 2188) (nil fontified nil 2188 . 2189) (nil fontified nil 2189 . 2190) (nil fontified nil 2190 . 2191) (nil fontified nil 2191 . 2192) (nil fontified nil 2192 . 2193) (nil fontified nil 2193 . 2202) (nil fontified nil 2202 . 2203) (nil fontified nil 2203 . 2212) (nil fontified nil 2212 . 2216) (nil fontified nil 2216 . 2230) (nil fontified nil 2230 . 2235) (nil fontified nil 2235 . 2236) (nil fontified nil 2236 . 2237) (nil fontified nil 2237 . 2238) (nil fontified nil 2238 . 2248) (nil fontified nil 2248 . 2249) (nil fontified nil 2249 . 2250) (nil fontified nil 2250 . 2251) (nil fontified nil 2251 . 2260) (nil fontified nil 2260 . 2261) (nil fontified nil 2261 . 2271) (nil fontified nil 2271 . 2277) (nil fontified nil 2277 . 2289) (nil fontified nil 2289 . 2292) (nil fontified nil 2292 . 2293) (nil fontified nil 2293 . 2300) (nil fontified nil 2300 . 2301) (nil fontified nil 2301 . 2305) (nil fontified nil 2305 . 2307) (nil fontified nil 2307 . 2312) (nil fontified nil 2312 . 2313) (nil fontified nil 2313 . 2323) (nil fontified nil 2323 . 2325) (nil fontified nil 2325 . 2326) (nil fontified nil 2326 . 2364) (nil fontified nil 2364 . 2365) (nil fontified nil 2365 . 2367) (nil fontified nil 2367 . 2376) (nil fontified nil 2376 . 2385) (nil fontified nil 2385 . 2386) (nil fontified nil 2386 . 2387) (nil fontified nil 2387 . 2388) (nil fontified nil 2388 . 2392) (nil fontified nil 2392 . 2393) (nil fontified nil 2393 . 2409) (nil fontified nil 2409 . 2410) (nil fontified nil 2410 . 2415) (nil fontified nil 2415 . 2416) (nil fontified nil 2416 . 2425) (nil fontified nil 2425 . 2434) (nil fontified nil 2434 . 2435) (nil fontified nil 2435 . 2436) (nil fontified nil 2436 . 2437) (nil fontified nil 2437 . 2441) (nil fontified nil 2441 . 2442) (nil fontified nil 2442 . 2458) (nil fontified nil 2458 . 2459) (nil fontified nil 2459 . 2468) (nil fontified nil 2468 . 2469) (nil fontified nil 2469 . 2478) (nil fontified nil 2478 . 2483) (nil fontified nil 2483 . 2484) (nil fontified nil 2484 . 2485) (nil fontified nil 2485 . 2486) (nil fontified nil 2486 . 2490) (nil fontified nil 2490 . 2491) (nil fontified nil 2491 . 2503) (nil fontified nil 2503 . 2504) (nil fontified nil 2504 . 2520) (nil fontified nil 2520 . 2521) (nil fontified nil 2521 . 2531) (nil fontified nil 2531 . 2537) (nil fontified nil 2537 . 2549) (nil fontified nil 2549 . 2552) (nil fontified nil 2552 . 2553) (nil fontified nil 2553 . 2567) (nil fontified nil 2567 . 2568) (nil fontified nil 2568 . 2572) (nil fontified nil 2572 . 2574) (nil fontified nil 2574 . 2578) (nil fontified nil 2578 . 2580) (nil fontified nil 2580 . 2585) (nil fontified nil 2585 . 2586) (nil fontified nil 2586 . 2597) (nil fontified nil 2597 . 2602) (nil fontified nil 2602 . 2603) (nil fontified nil 2603 . 2604) (nil fontified nil 2604 . 2608) (nil fontified nil 2608 . 2613) (nil fontified nil 2613 . 2614) (nil fontified nil 2614 . 2615) (nil fontified nil 2615 . 2620) (nil fontified nil 2620 . 2621) (nil fontified nil 2621 . 2622) (nil fontified nil 2622 . 2626) (nil fontified nil 2626 . 2627) (nil fontified nil 2627 . 2635) (nil fontified nil 2635 . 2636) (nil fontified nil 2636 . 2637) (nil fontified nil 2637 . 2638) (nil fontified nil 2638 . 2639) (nil fontified nil 2639 . 2643) (nil fontified nil 2643 . 2644) (nil fontified nil 2644 . 2651) (nil fontified nil 2651 . 2652) (nil fontified nil 2652 . 2653) (nil fontified nil 2653 . 2654) (nil fontified nil 2654 . 2658) (nil fontified nil 2658 . 2659) (nil fontified nil 2659 . 2667) (nil fontified nil 2667 . 2669) (nil fontified nil 2669 . 2670) (nil fontified nil 2670 . 2671) (nil fontified nil 2671 . 2681) (nil fontified nil 2681 . 2689) (nil fontified nil 2689 . 2690) (nil fontified nil 2690 . 2691) (nil fontified nil 2691 . 2692) (nil fontified nil 2692 . 2693) (nil fontified nil 2693 . 2694) (nil fontified nil 2694 . 2713) (nil fontified nil 2713 . 2719) (nil fontified nil 2719 . 2720) (nil fontified nil 2720 . 2723) (nil fontified nil 2723 . 2728) (nil fontified nil 2728 . 2729) (nil fontified nil 2729 . 2735) (nil fontified nil 2735 . 2739) (nil fontified nil 2739 . 2740) (nil fontified nil 2740 . 2745) (nil fontified nil 2745 . 2746) (nil fontified nil 2746 . 2747) (nil fontified nil 2747 . 2751) (nil fontified nil 2751 . 2752) (nil fontified nil 2752 . 2758) (nil fontified nil 2758 . 2759) (nil fontified nil 2759 . 2760) (nil fontified nil 2760 . 2761) (nil fontified nil 2761 . 2762) (nil fontified nil 2762 . 2763) (nil fontified nil 2763 . 2764) (nil fontified nil 2764 . 2767) (nil fontified nil 2767 . 2768) (nil fontified nil 2768 . 2769) (nil fontified nil 2769 . 2770) (nil fontified nil 2770 . 2776) (nil fontified nil 2776 . 2777) (nil fontified nil 2777 . 2778) (nil fontified nil 2778 . 2779) (nil fontified nil 2779 . 2784) (nil fontified nil 2784 . 2785) (nil fontified nil 2785 . 2786) (nil fontified nil 2786 . 2788) (nil fontified nil 2788 . 2789) (nil fontified nil 2789 . 2790) (nil fontified nil 2790 . 2791) (nil fontified nil 2791 . 2801) (nil fontified nil 2801 . 2803) (nil fontified nil 2803 . 2804) (nil fontified nil 2804 . 2808) (nil fontified nil 2808 . 2809) (nil fontified nil 2809 . 2814) (nil fontified nil 2814 . 2815) (nil fontified nil 2815 . 2816) (nil fontified nil 2816 . 2817) (nil fontified nil 2817 . 2818) (nil fontified nil 2818 . 2841) (nil fontified nil 2841 . 2847) (nil fontified nil 2847 . 2848) (nil fontified nil 2848 . 2851) (nil fontified nil 2851 . 2856) (nil fontified nil 2856 . 2857) (nil fontified nil 2857 . 2863) (nil fontified nil 2863 . 2867) (nil fontified nil 2867 . 2868) (nil fontified nil 2868 . 2873) (nil fontified nil 2873 . 2874) (nil fontified nil 2874 . 2878) (nil fontified nil 2878 . 2879) (nil fontified nil 2879 . 2885) (nil fontified nil 2885 . 2886) (nil fontified nil 2886 . 2887) (nil fontified nil 2887 . 2888) (nil fontified nil 2888 . 2889) (nil fontified nil 2889 . 2893) (nil fontified nil 2893 . 2894) (nil fontified nil 2894 . 2900) (nil fontified nil 2900 . 2901) (nil fontified nil 2901 . 2902) (nil fontified nil 2902 . 2903) (nil fontified nil 2903 . 2904) (nil fontified nil 2904 . 2905) (nil fontified nil 2905 . 2906) (nil fontified nil 2906 . 2909) (nil fontified nil 2909 . 2910) (nil fontified nil 2910 . 2911) (nil fontified nil 2911 . 2912) (nil fontified nil 2912 . 2918) (nil fontified nil 2918 . 2919) (nil fontified nil 2919 . 2920) (nil fontified nil 2920 . 2921) (nil fontified nil 2921 . 2926) (nil fontified nil 2926 . 2927) (nil fontified nil 2927 . 2928) (nil fontified nil 2928 . 2930) (nil fontified nil 2930 . 2931) (nil fontified nil 2931 . 2932) (nil fontified nil 2932 . 2933) (nil fontified nil 2933 . 2943) (nil fontified nil 2943 . 2945) (nil fontified nil 2945 . 2946) (nil fontified nil 2946 . 2950) (nil fontified nil 2950 . 2951) (nil fontified nil 2951 . 2956) (nil fontified nil 2956 . 2957) (nil fontified nil 2957 . 2958) (nil fontified nil 2958 . 2959) (nil fontified nil 2959 . 2960) (nil fontified nil 2960 . 2983) (nil fontified nil 2983 . 2989) (nil fontified nil 2989 . 2990) (nil fontified nil 2990 . 2993) (nil fontified nil 2993 . 2998) (nil fontified nil 2998 . 2999) (nil fontified nil 2999 . 3001) (nil fontified nil 3001 . 3005) (nil fontified nil 3005 . 3009) (nil fontified nil 3009 . 3010) (nil fontified nil 3010 . 3015) (nil fontified nil 3015 . 3016) (nil fontified nil 3016 . 3020) (nil fontified nil 3020 . 3021) (nil fontified nil 3021 . 3027) (nil fontified nil 3027 . 3028) (nil fontified nil 3028 . 3029) (nil fontified nil 3029 . 3030) (nil fontified nil 3030 . 3031) (nil fontified nil 3031 . 3032) (nil fontified nil 3032 . 3033) (nil fontified nil 3033 . 3034) (nil fontified nil 3034 . 3037) (nil fontified nil 3037 . 3038) (nil fontified nil 3038 . 3039) (nil fontified nil 3039 . 3040) (nil fontified nil 3040 . 3046) (nil fontified nil 3046 . 3047) (nil fontified nil 3047 . 3048) (nil fontified nil 3048 . 3049) (nil fontified nil 3049 . 3054) (nil fontified nil 3054 . 3055) (nil fontified nil 3055 . 3056) (nil fontified nil 3056 . 3058) (nil fontified nil 3058 . 3059) (nil fontified nil 3059 . 3060) (nil fontified nil 3060 . 3061) (nil fontified nil 3061 . 3071) (nil fontified nil 3071 . 3076) (nil fontified nil 3076 . 3077) (nil fontified nil 3077 . 3090) (nil fontified nil 3090 . 3091) (nil fontified nil 3091 . 3100) (nil fontified nil 3100 . 3101) (nil fontified nil 3101 . 3118) (nil fontified nil 3118 . 3123) (nil fontified nil 3123 . 3124) (nil fontified nil 3124 . 3131) (nil fontified nil 3131 . 3132) (nil fontified nil 3132 . 3133) (nil fontified nil 3133 . 3147) (nil fontified nil 3147 . 3148) (nil fontified nil 3148 . 3158) (nil fontified nil 3158 . 3159) (nil fontified nil 3159 . 3191) (nil fontified nil 3191 . 3192) (nil fontified nil 3192 . 3199) (nil fontified nil 3199 . 3202) (nil fontified nil 3202 . 3203) (nil fontified nil 3203 . 3206) (nil fontified nil 3206 . 3207) (nil fontified nil 3207 . 3211) (nil fontified nil 3211 . 3212) (nil fontified nil 3212 . 3222) (nil fontified nil 3222 . 3234) (nil fontified nil 3234 . 3243) (nil fontified nil 3243 . 3249) (nil fontified nil 3249 . 3250) (nil fontified nil 3250 . 3251) (nil fontified nil 3251 . 3252) (nil fontified nil 3252 . 3256) (nil fontified nil 3256 . 3257) (nil fontified nil 3257 . 3266) (nil fontified nil 3266 . 3267) (nil fontified nil 3267 . 3268) (nil fontified nil 3268 . 3278) (nil fontified nil 3278 . 3283) (nil fontified nil 3283 . 3284) (nil fontified nil 3284 . 3285) (nil fontified nil 3285 . 3286) (nil fontified nil 3286 . 3298) (nil fontified nil 3298 . 3299) (nil fontified nil 3299 . 3300) (nil fontified nil 3300 . 3310) (nil fontified nil 3310 . 3314) (nil fontified nil 3314 . 3315) (nil fontified nil 3315 . 3322) (nil fontified nil 3322 . 3323) (nil fontified nil 3323 . 3324) (nil fontified nil 3324 . 3325) (nil fontified nil 3325 . 3328) (nil fontified nil 3328 . 3329) (nil fontified nil 3329 . 3333) (nil fontified nil 3333 . 3334) (nil fontified nil 3334 . 3342) (nil fontified nil 3342 . 3343) (nil fontified nil 3343 . 3344) (nil fontified nil 3344 . 3345) (nil fontified nil 3345 . 3349) (nil fontified nil 3349 . 3350) (nil fontified nil 3350 . 3352) (nil fontified nil 3352 . 3353) (nil fontified nil 3353 . 3362) (nil fontified nil 3362 . 3366) (nil fontified nil 3366 . 3367) (nil fontified nil 3367 . 3375) (nil fontified nil 3375 . 3376) (nil fontified nil 3376 . 3377) (nil fontified nil 3377 . 3378) (nil fontified nil 3378 . 3381) (nil fontified nil 3381 . 3382) (nil fontified nil 3382 . 3386) (nil fontified nil 3386 . 3387) (nil fontified nil 3387 . 3395) (nil fontified nil 3395 . 3396) (nil fontified nil 3396 . 3397) (nil fontified nil 3397 . 3398) (nil fontified nil 3398 . 3402) (nil fontified nil 3402 . 3403) (nil fontified nil 3403 . 3405) (nil fontified nil 3405 . 3406) (nil fontified nil 3406 . 3415) (nil fontified nil 3415 . 3419) (nil fontified nil 3419 . 3420) (nil fontified nil 3420 . 3428) (nil fontified nil 3428 . 3429) (nil fontified nil 3429 . 3430) (nil fontified nil 3430 . 3431) (nil fontified nil 3431 . 3434) (nil fontified nil 3434 . 3435) (nil fontified nil 3435 . 3439) (nil fontified nil 3439 . 3440) (nil fontified nil 3440 . 3448) (nil fontified nil 3448 . 3449) (nil fontified nil 3449 . 3450) (nil fontified nil 3450 . 3451) (nil fontified nil 3451 . 3455) (nil fontified nil 3455 . 3456) (nil fontified nil 3456 . 3458) (nil fontified nil 3458 . 3459) (nil fontified nil 3459 . 3468) (nil fontified nil 3468 . 3472) (nil fontified nil 3472 . 3473) (nil fontified nil 3473 . 3482) (nil fontified nil 3482 . 3483) (nil fontified nil 3483 . 3484) (nil fontified nil 3484 . 3485) (nil fontified nil 3485 . 3488) (nil fontified nil 3488 . 3489) (nil fontified nil 3489 . 3493) (nil fontified nil 3493 . 3494) (nil fontified nil 3494 . 3503) (nil fontified nil 3503 . 3504) (nil fontified nil 3504 . 3505) (nil fontified nil 3505 . 3506) (nil fontified nil 3506 . 3510) (nil fontified nil 3510 . 3511) (nil fontified nil 3511 . 3513) (nil fontified nil 3513 . 3514) (nil fontified nil 3514 . 3523) (nil fontified nil 3523 . 3527) (nil fontified nil 3527 . 3528) (nil fontified nil 3528 . 3538) (nil fontified nil 3538 . 3539) (nil fontified nil 3539 . 3540) (nil fontified nil 3540 . 3541) (nil fontified nil 3541 . 3544) (nil fontified nil 3544 . 3545) (nil fontified nil 3545 . 3549) (nil fontified nil 3549 . 3550) (nil fontified nil 3550 . 3560) (nil fontified nil 3560 . 3561) (nil fontified nil 3561 . 3562) (nil fontified nil 3562 . 3563) (nil fontified nil 3563 . 3567) (nil fontified nil 3567 . 3568) (nil fontified nil 3568 . 3570) (nil fontified nil 3570 . 3571) (nil fontified nil 3571 . 3581) (nil fontified nil 3581 . 3587) (nil fontified nil 3587 . 3588) (nil fontified nil 3588 . 3589) (nil fontified nil 3589 . 3590) (nil fontified nil 3590 . 3591) (nil fontified nil 3591 . 3592) (nil fontified nil 3592 . 3601) (nil fontified nil 3601 . 3605) (nil fontified nil 3605 . 3612) (nil fontified nil 3612 . 3619) (nil fontified nil 3619 . 3620) (nil fontified nil 3620 . 3621) (nil fontified nil 3621 . 3635) (nil fontified nil 3635 . 3638) (nil fontified nil 3638 . 3639) (nil fontified nil 3639 . 3643) (nil fontified nil 3643 . 3644) (nil fontified nil 3644 . 3646) (nil fontified nil 3646 . 3647) (nil fontified nil 3647 . 3652) (nil fontified nil 3652 . 3653) (nil fontified nil 3653 . 3657) (nil fontified nil 3657 . 3658) (nil fontified nil 3658 . 3665) (nil fontified nil 3665 . 3666) (nil fontified nil 3666 . 3684) (nil fontified nil 3684 . 3688) (nil fontified nil 3688 . 3689) (nil fontified nil 3689 . 3700) (nil fontified nil 3700 . 3701) (nil fontified nil 3701 . 3705) (nil fontified nil 3705 . 3706) (nil fontified nil 3706 . 3723) (nil fontified nil 3723 . 3729) (nil fontified nil 3729 . 3730) (nil fontified nil 3730 . 3731) (nil fontified nil 3731 . 3732) (nil fontified nil 3732 . 3736) (nil fontified nil 3736 . 3737) (nil fontified nil 3737 . 3744) (nil fontified nil 3744 . 3745) (nil fontified nil 3745 . 3751) (nil fontified nil 3751 . 3752) (nil fontified nil 3752 . 3770) (nil fontified nil 3770 . 3772) (nil fontified nil 3772 . 3778) (nil fontified nil 3778 . 3779) (nil fontified nil 3779 . 3780) (nil fontified nil 3780 . 3784) (nil fontified nil 3784 . 3785) (nil fontified nil 3785 . 3793) (nil fontified nil 3793 . 3815) (nil fontified nil 3815 . 3817) (nil fontified nil 3817 . 3823) (nil fontified nil 3823 . 3824) (nil fontified nil 3824 . 3825) (nil fontified nil 3825 . 3829) (nil fontified nil 3829 . 3830) (nil fontified nil 3830 . 3838) (nil fontified nil 3838 . 3839) (nil fontified nil 3839 . 3841) (nil fontified nil 3841 . 3842) (nil fontified nil 3842 . 3843) (nil fontified nil 3843 . 3869) (nil fontified nil 3869 . 3871) (nil fontified nil 3871 . 3872) (nil fontified nil 3872 . 3876) (nil fontified nil 3876 . 3877) (nil fontified nil 3877 . 3884) (nil fontified nil 3884 . 3914) (nil fontified nil 3914 . 3918) (nil fontified nil 3918 . 3919) (nil fontified nil 3919 . 3933) (nil fontified nil 3933 . 3934) (nil fontified nil 3934 . 3946) (nil fontified nil 3946 . 3947) (nil fontified nil 3947 . 3980) (nil fontified nil 3980 . 3986) (nil fontified nil 3986 . 3987) (nil fontified nil 3987 . 3994) (nil fontified nil 3994 . 3997) (nil fontified nil 3997 . 3998) (nil fontified nil 3998 . 3999) (nil fontified nil 3999 . 4000) (nil fontified nil 4000 . 4006) (nil fontified nil 4006 . 4007) (nil fontified nil 4007 . 4008) (nil fontified nil 4008 . 4009) (nil fontified nil 4009 . 4014) (nil fontified nil 4014 . 4015) (nil fontified nil 4015 . 4016) (nil fontified nil 4016 . 4017) (nil fontified nil 4017 . 4052) (nil fontified nil 4052 . 4058) (nil fontified nil 4058 . 4059) (nil fontified nil 4059 . 4060) (nil fontified nil 4060 . 4064) (nil fontified nil 4064 . 4069) (nil fontified nil 4069 . 4070) (nil fontified nil 4070 . 4076) (nil fontified nil 4076 . 4077) (nil fontified nil 4077 . 4087) (nil fontified nil 4087 . 4166) (nil fontified nil 4166 . 4175) (nil fontified nil 4175 . 4200) (nil fontified nil 4200 . 4210) (nil fontified nil 4210 . 4252) (nil fontified nil 4252 . 4261) (nil fontified nil 4261 . 4292) (nil fontified nil 4292 . 4310) (nil fontified nil 4310 . 4315) (nil fontified nil 4315 . 4316) (nil fontified nil 4316 . 4317) (nil fontified nil 4317 . 4333) (nil fontified nil 4333 . 4334) (nil fontified nil 4334 . 4336) (nil fontified nil 4336 . 4340) (nil fontified nil 4340 . 4341) (nil fontified nil 4341 . 4350) (nil fontified nil 4350 . 4351) (nil fontified nil 4351 . 4352) (nil fontified nil 4352 . 4353) (nil fontified nil 4353 . 4357) (nil fontified nil 4357 . 4358) (nil fontified nil 4358 . 4367) (nil fontified nil 4367 . 4368) (nil fontified nil 4368 . 4369) (nil fontified nil 4369 . 4370) (nil fontified nil 4370 . 4371) (nil fontified nil 4371 . 4375) (nil fontified nil 4375 . 4376) (nil fontified nil 4376 . 4377) (nil fontified nil 4377 . 4389) (nil fontified nil 4389 . 4393) (nil fontified nil 4393 . 4394) (nil fontified nil 4394 . 4398) (nil fontified nil 4398 . 4399) (nil fontified nil 4399 . 4408) (nil fontified nil 4408 . 4409) (nil fontified nil 4409 . 4410) (nil fontified nil 4410 . 4411) (nil fontified nil 4411 . 4415) (nil fontified nil 4415 . 4416) (nil fontified nil 4416 . 4425) (nil fontified nil 4425 . 4426) (nil fontified nil 4426 . 4427) (nil fontified nil 4427 . 4428) (nil fontified nil 4428 . 4429) (nil fontified nil 4429 . 4433) (nil fontified nil 4433 . 4434) (nil fontified nil 4434 . 4442) (nil fontified nil 4442 . 4443) (nil fontified nil 4443 . 4453) (nil fontified nil 4453 . 4456) (nil fontified nil 4456 . 4457) (nil fontified nil 4457 . 4460) (nil fontified nil 4460 . 4461) (nil fontified nil 4461 . 4463) (nil fontified nil 4463 . 4467) (nil fontified nil 4467 . 4478) (nil fontified nil 4478 . 4479) (nil fontified nil 4479 . 4480) (nil fontified nil 4480 . 4494) (nil fontified nil 4494 . 4496) (nil fontified nil 4496 . 4503) (nil fontified nil 4503 . 4512) (nil fontified nil 4512 . 4513) (nil fontified nil 4513 . 4516) (nil fontified nil 4516 . 4517) (nil fontified nil 4517 . 4535) (nil fontified nil 4535 . 4538) (nil fontified nil 4538 . 4552) (nil fontified nil 4552 . 4606) (nil fontified nil 4606 . 4618) (nil fontified nil 4618 . 4625) (nil fontified nil 4625 . 4626) (nil fontified nil 4626 . 4627) (nil fontified nil 4627 . 4642) (nil fontified nil 4642 . 4646) (nil fontified nil 4646 . 4647) (nil fontified nil 4647 . 4658) (nil fontified nil 4658 . 4659) (nil fontified nil 4659 . 4660) (nil fontified nil 4660 . 4670) (nil fontified nil 4670 . 4673) (nil fontified nil 4673 . 4674) (nil fontified nil 4674 . 4675) (nil fontified nil 4675 . 4676) (nil fontified nil 4676 . 4688) (nil fontified nil 4688 . 4689) (nil fontified nil 4689 . 4690) (nil fontified nil 4690 . 4700) (nil fontified nil 4700 . 4705) (nil fontified nil 4705 . 4706) (nil fontified nil 4706 . 4707) (nil fontified nil 4707 . 4739) (nil fontified nil 4739 . 4740) (nil fontified nil 4740 . 4741) (nil fontified nil 4741 . 4747) (nil fontified nil 4747 . 4748) (nil fontified nil 4748 . 4749) (nil fontified nil 4749 . 4753) (nil fontified nil 4753 . 4754) (nil fontified nil 4754 . 4760) (nil fontified nil 4760 . 4761) (nil fontified nil 4761 . 4762) (nil fontified nil 4762 . 4763) (nil fontified nil 4763 . 4773) (nil fontified nil 4773 . 4779) (nil fontified nil 4779 . 4792) (nil fontified nil 4792 . 4795) (nil fontified nil 4795 . 4796) (nil fontified nil 4796 . 4806) (nil fontified nil 4806 . 4807) (nil fontified nil 4807 . 4811) (nil fontified nil 4811 . 4813) (nil fontified nil 4813 . 4822) (nil fontified nil 4822 . 4824) (nil fontified nil 4824 . 4832) (nil fontified nil 4832 . 4834) (nil fontified nil 4834 . 4843) (nil fontified nil 4843 . 4845) (nil fontified nil 4845 . 4847) (nil fontified nil 4847 . 4853) (nil fontified nil 4853 . 4854) (nil fontified nil 4854 . 4864) (nil fontified nil 4864 . 4892) (nil fontified nil 4892 . 4901) (nil fontified nil 4901 . 4910) (nil fontified nil 4910 . 4911) (nil fontified nil 4911 . 4912) (nil fontified nil 4912 . 4923) (nil fontified nil 4923 . 4924) (nil fontified nil 4924 . 4925) (nil fontified nil 4925 . 4926) (nil fontified nil 4926 . 4932) (nil fontified nil 4932 . 4933) (nil fontified nil 4933 . 4934) (nil fontified nil 4934 . 4953) (nil fontified nil 4953 . 4958) (nil fontified nil 4958 . 4959) (nil fontified nil 4959 . 4960) (nil fontified nil 4960 . 4979) (nil fontified nil 4979 . 4980) (nil fontified nil 4980 . 4991) (nil fontified nil 4991 . 4992) (nil fontified nil 4992 . 5001) (nil fontified nil 5001 . 5006) (nil fontified nil 5006 . 5007) (nil fontified nil 5007 . 5008) (nil fontified nil 5008 . 5009) (nil fontified nil 5009 . 5018) (nil fontified nil 5018 . 5019) (nil fontified nil 5019 . 5023) (nil fontified nil 5023 . 5024) (nil fontified nil 5024 . 5035) (nil fontified nil 5035 . 5036) (nil fontified nil 5036 . 5037) (nil fontified nil 5037 . 5038) (nil fontified nil 5038 . 5039) (nil fontified nil 5039 . 5040) (nil fontified nil 5040 . 5055) (nil fontified nil 5055 . 5056) (nil fontified nil 5056 . 5057) (nil fontified nil 5057 . 5066) (nil fontified nil 5066 . 5067) (nil fontified nil 5067 . 5068) (nil fontified nil 5068 . 5069) (nil fontified nil 5069 . 5070) (nil fontified nil 5070 . 5094) (nil fontified nil 5094 . 5100) (nil fontified nil 5100 . 5101) (nil fontified nil 5101 . 5107) (nil fontified nil 5107 . 5108) (nil fontified nil 5108 . 5118) (nil fontified nil 5118 . 5121) (nil fontified nil 5121 . 5122) (nil fontified nil 5122 . 5123) (nil fontified nil 5123 . 5125) (nil fontified nil 5125 . 5126) (nil fontified nil 5126 . 5127) (nil fontified nil 5127 . 5129) (nil fontified nil 5129 . 5136) (nil fontified nil 5136 . 5141) (nil fontified nil 5141 . 5142) (nil fontified nil 5142 . 5143) (nil fontified nil 5143 . 5157) (nil fontified nil 5157 . 5164) (nil fontified nil 5164 . 5165) (nil fontified nil 5165 . 5169) (nil fontified nil 5169 . 5175) (nil fontified nil 5175 . 5176) (nil fontified nil 5176 . 5186) (nil fontified nil 5186 . 5190) (nil fontified nil 5190 . 5191) (nil fontified nil 5191 . 5200) (nil fontified nil 5200 . 5201) (nil fontified nil 5201 . 5202) (nil fontified nil 5202 . 5213) (nil fontified nil 5213 . 5214) (nil fontified nil 5214 . 5215) (nil fontified nil 5215 . 5216) (nil fontified nil 5216 . 5228) (nil fontified nil 5228 . 5229) (nil fontified nil 5229 . 5238) (nil fontified nil 5238 . 5242) (nil fontified nil 5242 . 5243) (nil fontified nil 5243 . 5251) (nil fontified nil 5251 . 5252) (nil fontified nil 5252 . 5253) (nil fontified nil 5253 . 5264) (nil fontified nil 5264 . 5265) (nil fontified nil 5265 . 5266) (nil fontified nil 5266 . 5267) (nil fontified nil 5267 . 5280) (nil fontified nil 5280 . 5281) (nil fontified nil 5281 . 5291) (nil fontified nil 5291 . 5293) (nil fontified nil 5293 . 5294) (nil fontified nil 5294 . 5297) (nil fontified nil 5297 . 5301) (nil fontified nil 5301 . 5305) (nil fontified nil 5305 . 5306) (nil fontified nil 5306 . 5312) (nil fontified nil 5312 . 5313) (nil fontified nil 5313 . 5317) (nil fontified nil 5317 . 5318) (nil fontified nil 5318 . 5327) (nil fontified nil 5327 . 5328) (nil fontified nil 5328 . 5345) (nil fontified nil 5345 . 5353) (nil fontified nil 5353 . 5354) (nil fontified nil 5354 . 5358) (nil fontified nil 5358 . 5359) (nil fontified nil 5359 . 5368) (nil fontified nil 5368 . 5369) (nil fontified nil 5369 . 5379) (nil fontified nil 5379 . 5381) (nil fontified nil 5381 . 5382) (nil fontified nil 5382 . 5385) (nil fontified nil 5385 . 5389) (nil fontified nil 5389 . 5393) (nil fontified nil 5393 . 5394) (nil fontified nil 5394 . 5400) (nil fontified nil 5400 . 5401) (nil fontified nil 5401 . 5405) (nil fontified nil 5405 . 5406) (nil fontified nil 5406 . 5414) (nil fontified nil 5414 . 5415) (nil fontified nil 5415 . 5432) (nil fontified nil 5432 . 5440) (nil fontified nil 5440 . 5441) (nil fontified nil 5441 . 5445) (nil fontified nil 5445 . 5446) (nil fontified nil 5446 . 5454) (nil fontified nil 5454 . 5455) (nil fontified nil 5455 . 5465) (nil fontified nil 5465 . 5467) (nil fontified nil 5467 . 5468) (nil fontified nil 5468 . 5472) (nil fontified nil 5472 . 5473) (nil fontified nil 5473 . 5488) (nil fontified nil 5488 . 5489) (nil fontified nil 5489 . 5491) (nil fontified nil 5491 . 5492) (nil fontified nil 5492 . 5494) (nil fontified nil 5494 . 5508) (nil fontified nil 5508 . 5512) (nil fontified nil 5512 . 5513) (nil fontified nil 5513 . 5518) (nil fontified nil 5518 . 5519) (nil fontified nil 5519 . 5520) (nil fontified nil 5520 . 5527) (nil fontified nil 5527 . 5532) (nil fontified nil 5532 . 5541) (nil fontified nil 5541 . 5545) (nil fontified nil 5545 . 5559) (nil fontified nil 5559 . 5563) (nil fontified nil 5563 . 5564) (nil fontified nil 5564 . 5569) (nil fontified nil 5569 . 5570) (nil fontified nil 5570 . 5571) (nil fontified nil 5571 . 5578) (nil fontified nil 5578 . 5585) (nil fontified nil 5585 . 5595) (nil fontified nil 5595 . 5599) (nil fontified nil 5599 . 5600) (nil fontified nil 5600 . 5606) (nil fontified nil 5606 . 5607) (nil fontified nil 5607 . 5608) (nil fontified nil 5608 . 5615) (nil fontified nil 5615 . 5621) (nil fontified nil 5621 . 5622) (nil fontified nil 5622 . 5626) (nil fontified nil 5626 . 5627) (nil fontified nil 5627 . 5633) (nil fontified nil 5633 . 5634) (nil fontified nil 5634 . 5640) (nil fontified nil 5640 . 5643) (nil fontified nil 5643 . 5644) (nil fontified nil 5644 . 5653) (nil fontified nil 5653 . 5654) (nil fontified nil 5654 . 5658) (nil fontified nil 5658 . 5659) (nil fontified nil 5659 . 5669) (nil fontified nil 5669 . 5675) (nil fontified nil 5675 . 5682) (nil fontified nil 5682 . 5687) (nil fontified nil 5687 . 5688) (nil fontified nil 5688 . 5692) (nil fontified nil 5692 . 5693) (nil fontified nil 5693 . 5701) (nil fontified nil 5701 . 5703) (nil fontified nil 5703 . 5708) (nil fontified nil 5708 . 5709) (nil fontified nil 5709 . 5713) (nil fontified nil 5713 . 5714) (nil fontified nil 5714 . 5719) (nil fontified nil 5719 . 5721) (nil fontified nil 5721 . 5727) (nil fontified nil 5727 . 5728) (nil fontified nil 5728 . 5732) (nil fontified nil 5732 . 5733) (nil fontified nil 5733 . 5739) (nil fontified nil 5739 . 5740) (nil fontified nil 5740 . 5746) (nil fontified nil 5746 . 5749) (nil fontified nil 5749 . 5750) (nil fontified nil 5750 . 5761) (nil fontified nil 5761 . 5762) (nil fontified nil 5762 . 5766) (nil fontified nil 5766 . 5768) (nil fontified nil 5768 . 5773) (nil fontified nil 5773 . 5775) (nil fontified nil 5775 . 5780) (nil fontified nil 5780 . 5781) (nil fontified nil 5781 . 5792) (nil fontified nil 5792 . 5794) (nil fontified nil 5794 . 5795) (nil fontified nil 5795 . 5796) (nil fontified nil 5796 . 5797) (nil fontified nil 5797 . 5801) (nil fontified nil 5801 . 5802) (nil fontified nil 5802 . 5804) (nil fontified nil 5804 . 5805) (nil fontified nil 5805 . 5810) (nil fontified nil 5810 . 5811) (nil fontified nil 5811 . 5820) (nil fontified nil 5820 . 5822) (nil fontified nil 5822 . 5823) (nil fontified nil 5823 . 5824) (nil fontified nil 5824 . 5825) (nil fontified nil 5825 . 5829) (nil fontified nil 5829 . 5830) (nil fontified nil 5830 . 5832) (nil fontified nil 5832 . 5833) (nil fontified nil 5833 . 5838) (nil fontified nil 5838 . 5839) (nil fontified nil 5839 . 5848) (nil fontified nil 5848 . 5850) (nil fontified nil 5850 . 5851) (nil fontified nil 5851 . 5852) (nil fontified nil 5852 . 5853) (nil fontified nil 5853 . 5857) (nil fontified nil 5857 . 5858) (nil fontified nil 5858 . 5860) (nil fontified nil 5860 . 5861) (nil fontified nil 5861 . 5866) (nil fontified nil 5866 . 5867) (nil fontified nil 5867 . 5877) (nil fontified nil 5877 . 5880) (nil fontified nil 5880 . 5881) (nil fontified nil 5881 . 5882) (nil fontified nil 5882 . 5889) (nil fontified nil 5889 . 5895) (nil fontified nil 5895 . 5896) (nil fontified nil 5896 . 5899) (nil fontified nil 5899 . 5901) (nil fontified nil 5901 . 5906) (nil fontified nil 5906 . 5907) (nil fontified nil 5907 . 5911) (nil fontified nil 5911 . 5912) (nil fontified nil 5912 . 5917) (nil fontified nil 5917 . 5919) (nil fontified nil 5919 . 5925) (nil fontified nil 5925 . 5926) (nil fontified nil 5926 . 5930) (nil fontified nil 5930 . 5931) (nil fontified nil 5931 . 5937) (nil fontified nil 5937 . 5938) (nil fontified nil 5938 . 5948) (nil fontified nil 5948 . 5950) (nil fontified nil 5950 . 5951) (nil fontified nil 5951 . 5952) (nil fontified nil 5952 . 5954) (nil fontified nil 5954 . 5955) (nil fontified nil 5955 . 5956) (nil fontified nil 5956 . 5958) (nil fontified nil 5958 . 5959) (nil fontified nil 5959 . 5963) (nil fontified nil 5963 . 5964) (nil fontified nil 5964 . 5973) (nil fontified nil 5973 . 5974) (nil fontified nil 5974 . 5986) (nil fontified nil 5986 . 5987) (nil fontified nil 5987 . 6002) (nil fontified nil 6002 . 6006) (nil fontified nil 6006 . 6007) (nil fontified nil 6007 . 6008) (nil fontified nil 6008 . 6015) (nil fontified nil 6015 . 6021) (nil fontified nil 6021 . 6022) (nil fontified nil 6022 . 6023) (nil fontified nil 6023 . 6026) (nil fontified nil 6026 . 6028) (nil fontified nil 6028 . 6031) (nil fontified nil 6031 . 6032) (nil fontified nil 6032 . 6034) (nil fontified nil 6034 . 6039) (nil fontified nil 6039 . 6040) (nil fontified nil 6040 . 6044) (nil fontified nil 6044 . 6045) (nil fontified nil 6045 . 6050) (nil fontified nil 6050 . 6052) (nil fontified nil 6052 . 6058) (nil fontified nil 6058 . 6059) (nil fontified nil 6059 . 6063) (nil fontified nil 6063 . 6064) (nil fontified nil 6064 . 6070) (nil fontified nil 6070 . 6071) (nil fontified nil 6071 . 6085) (nil fontified nil 6085 . 6115) (nil fontified nil 6115 . 6128) (nil fontified nil 6128 . 6138) (nil fontified nil 6138 . 6139) (nil fontified nil 6139 . 6140) (nil fontified nil 6140 . 6147) (nil fontified nil 6147 . 6153) (nil fontified nil 6153 . 6154) (nil fontified nil 6154 . 6155) (nil fontified nil 6155 . 6156) (nil fontified nil 6156 . 6159) (nil fontified nil 6159 . 6161) (nil fontified nil 6161 . 6165) (nil fontified nil 6165 . 6166) (nil fontified nil 6166 . 6172) (nil fontified nil 6172 . 6173) (nil fontified nil 6173 . 6214) (nil fontified nil 6214 . 6215) (nil fontified nil 6215 . 6219) (nil fontified nil 6219 . 6220) (nil fontified nil 6220 . 6226) (nil fontified nil 6226 . 6228) (nil fontified nil 6228 . 6231) (nil fontified nil 6231 . 6232) (nil fontified nil 6232 . 6233) (nil fontified nil 6233 . 6234) (nil fontified nil 6234 . 6236) (nil fontified nil 6236 . 6241) (nil fontified nil 6241 . 6242) (nil fontified nil 6242 . 6246) (nil fontified nil 6246 . 6247) (nil fontified nil 6247 . 6252) (nil fontified nil 6252 . 6254) (nil fontified nil 6254 . 6260) (nil fontified nil 6260 . 6261) (nil fontified nil 6261 . 6265) (nil fontified nil 6265 . 6266) (nil fontified nil 6266 . 6272) (nil fontified nil 6272 . 6273) (nil fontified nil 6273 . 6288) (nil fontified nil 6288 . 6307) (nil fontified nil 6307 . 6308) (nil fontified nil 6308 . 6309) (nil fontified nil 6309 . 6310) (nil fontified nil 6310 . 6328) (nil fontified nil 6328 . 6329) (nil fontified nil 6329 . 6345) (nil fontified nil 6345 . 6346) (nil fontified nil 6346 . 6359) (nil fontified nil 6359 . 6363) (nil fontified nil 6363 . 6364) (nil fontified nil 6364 . 6367) (nil fontified nil 6367 . 6368) (nil fontified nil 6368 . 6369) (nil fontified nil 6369 . 6390) (nil fontified nil 6390 . 6396) (nil fontified nil 6396 . 6397) (nil fontified nil 6397 . 6398) (nil fontified nil 6398 . 6400) (nil fontified nil 6400 . 6401) (nil fontified nil 6401 . 6402) (nil fontified nil 6402 . 6403) (nil fontified nil 6403 . 6404) (nil fontified nil 6404 . 6405) (nil fontified nil 6405 . 6419) (nil fontified nil 6419 . 6424) (nil fontified nil 6424 . 6431) (nil fontified nil 6431 . 6434) (nil fontified nil 6434 . 6435) (nil fontified nil 6435 . 6439) (nil fontified nil 6439 . 6440) (nil fontified nil 6440 . 6443) (nil fontified nil 6443 . 6444) (nil fontified nil 6444 . 6445) (nil fontified nil 6445 . 6446) (nil fontified nil 6446 . 6447) (nil fontified nil 6447 . 6448) (nil fontified nil 6448 . 6449) (nil fontified nil 6449 . 6453) (nil fontified nil 6453 . 6454) (nil fontified nil 6454 . 6457) (nil fontified nil 6457 . 6458) (nil fontified nil 6458 . 6459) (nil fontified nil 6459 . 6460) (nil fontified nil 6460 . 6461) (nil fontified nil 6461 . 6462) (nil fontified nil 6462 . 6463) (nil fontified nil 6463 . 6464) (nil fontified nil 6464 . 6467) (nil fontified nil 6467 . 6485) (nil fontified nil 6485 . 6504) (nil fontified nil 6504 . 6505) (nil fontified nil 6505 . 6506) (nil fontified nil 6506 . 6507) (nil fontified nil 6507 . 6525) (nil fontified nil 6525 . 6526) (nil fontified nil 6526 . 6542) (nil fontified nil 6542 . 6543) (nil fontified nil 6543 . 6560) (nil fontified nil 6560 . 6564) (nil fontified nil 6564 . 6565) (nil fontified nil 6565 . 6568) (nil fontified nil 6568 . 6569) (nil fontified nil 6569 . 6570) (nil fontified nil 6570 . 6591) (nil fontified nil 6591 . 6597) (nil fontified nil 6597 . 6598) (nil fontified nil 6598 . 6599) (nil fontified nil 6599 . 6601) (nil fontified nil 6601 . 6602) (nil fontified nil 6602 . 6603) (nil fontified nil 6603 . 6604) (nil fontified nil 6604 . 6605) (nil fontified nil 6605 . 6606) (nil fontified nil 6606 . 6620) (nil fontified nil 6620 . 6622) (nil fontified nil 6622 . 6623) (nil fontified nil 6623 . 6627) (nil fontified nil 6627 . 6628) (nil fontified nil 6628 . 6635) (nil fontified nil 6635 . 6653) (nil fontified nil 6653 . 6658) (nil fontified nil 6658 . 6659) (nil fontified nil 6659 . 6660) (nil fontified nil 6660 . 6663) (nil fontified nil 6663 . 6664) (nil fontified nil 6664 . 6666) (nil fontified nil 6666 . 6670) (nil fontified nil 6670 . 6671) (nil fontified nil 6671 . 6674) (nil fontified nil 6674 . 6675) (nil fontified nil 6675 . 6680) (nil fontified nil 6680 . 6681) (nil fontified nil 6681 . 6698) (nil fontified nil 6698 . 6703) (nil fontified nil 6703 . 6704) (nil fontified nil 6704 . 6705) (nil fontified nil 6705 . 6715) (nil fontified nil 6715 . 6716) (nil fontified nil 6716 . 6718) (nil fontified nil 6718 . 6722) (nil fontified nil 6722 . 6723) (nil fontified nil 6723 . 6726) (nil fontified nil 6726 . 6727) (nil fontified nil 6727 . 6728) (nil fontified nil 6728 . 6729) (nil fontified nil 6729 . 6730) (nil fontified nil 6730 . 6731) (nil fontified nil 6731 . 6732) (nil fontified nil 6732 . 6736) (nil fontified nil 6736 . 6737) (nil fontified nil 6737 . 6740) (nil fontified nil 6740 . 6741) (nil fontified nil 6741 . 6742) (nil fontified nil 6742 . 6743) (nil fontified nil 6743 . 6744) (nil fontified nil 6744 . 6758) (nil fontified nil 6758 . 6761) (nil fontified nil 6761 . 6762) (nil fontified nil 6762 . 6763) (nil fontified nil 6763 . 6764) (nil fontified nil 6764 . 6767) (nil fontified nil 6767 . 6768) (nil fontified nil 6768 . 6769) (nil fontified nil 6769 . 6770) (nil fontified nil 6770 . 6774) (nil fontified nil 6774 . 6775) (nil fontified nil 6775 . 6780) (nil fontified nil 6780 . 6781) (nil fontified nil 6781 . 6793) (nil fontified nil 6793 . 6794) (nil fontified nil 6794 . 6795) (nil fontified nil 6795 . 6796) (nil fontified nil 6796 . 6797) (nil fontified nil 6797 . 6798) (nil fontified nil 6798 . 6804) (nil fontified nil 6804 . 6809) (nil fontified nil 6809 . 6810) (nil fontified nil 6810 . 6814) (nil fontified nil 6814 . 6815) (nil fontified nil 6815 . 6818) (nil fontified nil 6818 . 6819) (nil fontified nil 6819 . 6820) (nil fontified nil 6820 . 6821) (nil fontified nil 6821 . 6823) (nil fontified nil 6823 . 6827) (nil fontified nil 6827 . 6828) (nil fontified nil 6828 . 6831) (nil fontified nil 6831 . 6832) (nil fontified nil 6832 . 6833) (nil fontified nil 6833 . 6834) (nil fontified nil 6834 . 6835) (nil fontified nil 6835 . 6888) (nil fontified nil 6888 . 6889) (nil fontified nil 6889 . 6896) (nil fontified nil 6896 . 6901) (nil fontified nil 6901 . 6902) (nil fontified nil 6902 . 6906) (nil fontified nil 6906 . 6907) (nil fontified nil 6907 . 6910) (nil fontified nil 6910 . 6911) (nil fontified nil 6911 . 6912) (nil fontified nil 6912 . 6913) (nil fontified nil 6913 . 6915) (nil fontified nil 6915 . 6919) (nil fontified nil 6919 . 6920) (nil fontified nil 6920 . 6923) (nil fontified nil 6923 . 6924) (nil fontified nil 6924 . 6925) (nil fontified nil 6925 . 6926) (nil fontified nil 6926 . 6927) (nil fontified nil 6927 . 6928) (nil fontified nil 6928 . 6929) (nil fontified nil 6929 . 6930) (nil fontified nil 6930 . 6937) (nil fontified nil 6937 . 6941) (nil fontified nil 6941 . 6942) (nil fontified nil 6942 . 6946) (nil fontified nil 6946 . 6947) (nil fontified nil 6947 . 6949) (nil fontified nil 6949 . 6950) (nil fontified nil 6950 . 6955) (nil fontified nil 6955 . 6956) (nil fontified nil 6956 . 6957) (nil fontified nil 6957 . 6970) (nil fontified nil 6970 . 6986) (nil fontified nil 6986 . 6999) (nil fontified nil 6999 . 7015) (nil fontified nil 7015 . 7029) (nil fontified nil 7029 . 7031) (nil fontified nil 7031 . 7032) (nil fontified nil 7032 . 7036) (nil fontified nil 7036 . 7037) (nil fontified nil 7037 . 7044) (nil fontified nil 7044 . 7062) (nil fontified nil 7062 . 7067) (nil fontified nil 7067 . 7068) (nil fontified nil 7068 . 7069) (nil fontified nil 7069 . 7072) (nil fontified nil 7072 . 7073) (nil fontified nil 7073 . 7075) (nil fontified nil 7075 . 7078) (nil fontified nil 7078 . 7079) (nil fontified nil 7079 . 7084) (nil fontified nil 7084 . 7085) (nil fontified nil 7085 . 7095) (nil fontified nil 7095 . 7097) (nil fontified nil 7097 . 7098) (nil fontified nil 7098 . 7099) (nil fontified nil 7099 . 7102) (nil fontified nil 7102 . 7103) (nil fontified nil 7103 . 7104) (nil fontified nil 7104 . 7106) (nil fontified nil 7106 . 7107) (nil fontified nil 7107 . 7111) (nil fontified nil 7111 . 7112) (nil fontified nil 7112 . 7121) (nil fontified nil 7121 . 7122) (nil fontified nil 7122 . 7134) (nil fontified nil 7134 . 7135) (nil fontified nil 7135 . 7149) (nil fontified nil 7149 . 7154) (nil fontified nil 7154 . 7155) (nil fontified nil 7155 . 7156) (nil fontified nil 7156 . 7163) (nil fontified nil 7163 . 7169) (nil fontified nil 7169 . 7170) (nil fontified nil 7170 . 7171) (nil fontified nil 7171 . 7173) (nil fontified nil 7173 . 7176) (nil fontified nil 7176 . 7177) (nil fontified nil 7177 . 7178) (nil fontified nil 7178 . 7185) (nil fontified nil 7185 . 7187) (nil fontified nil 7187 . 7189) (nil fontified nil 7189 . 7192) (nil fontified nil 7192 . 7193) (nil fontified nil 7193 . 7194) (nil fontified nil 7194 . 7201) (nil fontified nil 7201 . 7203) (nil fontified nil 7203 . 7204) (nil fontified nil 7204 . 7205) (nil fontified nil 7205 . 7206) (nil fontified nil 7206 . 7211) (nil fontified nil 7211 . 7212) (nil fontified nil 7212 . 7214) (nil fontified nil 7214 . 7215) (nil fontified nil 7215 . 7217) (nil fontified nil 7217 . 7222) (nil fontified nil 7222 . 7223) (nil fontified nil 7223 . 7227) (nil fontified nil 7227 . 7228) (nil fontified nil 7228 . 7233) (nil fontified nil 7233 . 7235) (nil fontified nil 7235 . 7241) (nil fontified nil 7241 . 7242) (nil fontified nil 7242 . 7246) (nil fontified nil 7246 . 7247) (nil fontified nil 7247 . 7253) (nil fontified nil 7253 . 7254) (nil fontified nil 7254 . 7267) (nil fontified nil 7267 . 7270) (nil fontified nil 7270 . 7271) (nil fontified nil 7271 . 7272) (nil fontified nil 7272 . 7279) (nil fontified nil 7279 . 7285) (nil fontified nil 7285 . 7286) (nil fontified nil 7286 . 7287) (nil fontified nil 7287 . 7289) (nil fontified nil 7289 . 7292) (nil fontified nil 7292 . 7293) (nil fontified nil 7293 . 7294) (nil fontified nil 7294 . 7301) (nil fontified nil 7301 . 7303) (nil fontified nil 7303 . 7305) (nil fontified nil 7305 . 7308) (nil fontified nil 7308 . 7309) (nil fontified nil 7309 . 7310) (nil fontified nil 7310 . 7317) (nil fontified nil 7317 . 7319) (nil fontified nil 7319 . 7320) (nil fontified nil 7320 . 7321) (nil fontified nil 7321 . 7322) (nil fontified nil 7322 . 7327) (nil fontified nil 7327 . 7328) (nil fontified nil 7328 . 7330) (nil fontified nil 7330 . 7331) (nil fontified nil 7331 . 7333) (nil fontified nil 7333 . 7338) (nil fontified nil 7338 . 7339) (nil fontified nil 7339 . 7343) (nil fontified nil 7343 . 7344) (nil fontified nil 7344 . 7349) (nil fontified nil 7349 . 7351) (nil fontified nil 7351 . 7357) (nil fontified nil 7357 . 7358) (nil fontified nil 7358 . 7362) (nil fontified nil 7362 . 7363) (nil fontified nil 7363 . 7369) (nil fontified nil 7369 . 7370) (nil fontified nil 7370 . 7384) (nil fontified nil 7384 . 7385) (nil fontified nil 7385 . 7387) (nil fontified nil 7387 . 7388) (nil fontified nil 7388 . 7389) (nil fontified nil 7389 . 7390) (nil fontified nil 7390 . 7397) (nil fontified nil 7397 . 7405) (nil fontified nil 7405 . 7406) (nil fontified nil 7406 . 7412) (nil fontified nil 7412 . 7418) (nil fontified nil 7418 . 7419) (nil fontified nil 7419 . 7421) (nil fontified nil 7421 . 7423) (nil fontified nil 7423 . 7429) (nil fontified nil 7429 . 7430) (nil fontified nil 7430 . 7434) (nil fontified nil 7434 . 7435) (nil fontified nil 7435 . 7441) (nil fontified nil 7441 . 7442) (nil fontified nil 7442 . 7450) (nil fontified nil 7450 . 7456) (nil fontified nil 7456 . 7457) (nil fontified nil 7457 . 7459) (nil fontified nil 7459 . 7461) (nil fontified nil 7461 . 7467) (nil fontified nil 7467 . 7468) (nil fontified nil 7468 . 7472) (nil fontified nil 7472 . 7473) (nil fontified nil 7473 . 7479) (nil fontified nil 7479 . 7480) (nil fontified nil 7480 . 7482) (nil fontified nil 7482 . 7490) (nil fontified nil 7490 . 7491) (nil fontified nil 7491 . 7492) (nil fontified nil 7492 . 7494) (nil fontified nil 7494 . 7495) (nil fontified nil 7495 . 7496) (nil fontified nil 7496 . 7510) (nil fontified nil 7510 . 7520) (nil fontified nil 7520 . 7521) (nil fontified nil 7521 . 7522) (nil fontified nil 7522 . 7528) (nil fontified nil 7528 . 7529) (nil fontified nil 7529 . 7530) (nil fontified nil 7530 . 7531) (nil fontified nil 7531 . 7532) (nil fontified nil 7532 . 7533) (nil fontified nil 7533 . 7537) (nil fontified nil 7537 . 7538) (nil fontified nil 7538 . 7539) (nil fontified nil 7539 . 7540) (nil fontified nil 7540 . 7554) (nil fontified nil 7554 . 7556) (nil fontified nil 7556 . 7557) (nil fontified nil 7557 . 7558) (nil fontified nil 7558 . 7562) (nil fontified nil 7562 . 7563) (nil fontified nil 7563 . 7564) (nil fontified nil 7564 . 7566) (nil fontified nil 7566 . 7567) (nil fontified nil 7567 . 7571) (nil fontified nil 7571 . 7572) (nil fontified nil 7572 . 7581) (nil fontified nil 7581 . 7582) (nil fontified nil 7582 . 7594) (nil fontified nil 7594 . 7595) (nil fontified nil 7595 . 7613) (nil fontified nil 7613 . 7617) (nil fontified nil 7617 . 7618) (nil fontified nil 7618 . 7623) (nil fontified nil 7623 . 7624) (nil fontified nil 7624 . 7629) (nil fontified nil 7629 . 7631) (nil fontified nil 7631 . 7636) (nil fontified nil 7636 . 7637) (nil fontified nil 7637 . 7638) (nil fontified nil 7638 . 7639) (nil fontified nil 7639 . 7640) (nil fontified nil 7640 . 7644) (nil fontified nil 7644 . 7645) (nil fontified nil 7645 . 7650) (nil fontified nil 7650 . 7651) (nil fontified nil 7651 . 7663) (nil fontified nil 7663 . 7664) (nil fontified nil 7664 . 7665) (nil fontified nil 7665 . 7666) (nil fontified nil 7666 . 7673) (nil fontified nil 7673 . 7677) (nil fontified nil 7677 . 7678) (nil fontified nil 7678 . 7680) (nil fontified nil 7680 . 7681) (nil fontified nil 7681 . 7695) (nil fontified nil 7695 . 7698) (nil fontified nil 7698 . 7699) (nil fontified nil 7699 . 7700) (nil fontified nil 7700 . 7701) (nil fontified nil 7701 . 7704) (nil fontified nil 7704 . 7705) (nil fontified nil 7705 . 7706) (nil fontified nil 7706 . 7707) (nil fontified nil 7707 . 7710) (nil fontified nil 7710 . 7711) (nil fontified nil 7711 . 7712) (nil fontified nil 7712 . 7713) (nil fontified nil 7713 . 7717) (nil fontified nil 7717 . 7718) (nil fontified nil 7718 . 7723) (nil fontified nil 7723 . 7724) (nil fontified nil 7724 . 7736) (nil fontified nil 7736 . 7737) (nil fontified nil 7737 . 7738) (nil fontified nil 7738 . 7739) (nil fontified nil 7739 . 7746) (nil fontified nil 7746 . 7749) (nil fontified nil 7749 . 7750) (nil fontified nil 7750 . 7761) (nil fontified nil 7761 . 7762) (nil fontified nil 7762 . 7763) (nil fontified nil 7763 . 7767) (nil fontified nil 7767 . 7768) (nil fontified nil 7768 . 7773) (nil fontified nil 7773 . 7774) (nil fontified nil 7774 . 7784) (nil fontified nil 7784 . 7786) (nil fontified nil 7786 . 7787) (nil fontified nil 7787 . 7788) (nil fontified nil 7788 . 7794) (nil fontified nil 7794 . 7795) (nil fontified nil 7795 . 7796) (nil fontified nil 7796 . 7798) (nil fontified nil 7798 . 7799) (nil fontified nil 7799 . 7803) (nil fontified nil 7803 . 7804) (nil fontified nil 7804 . 7816) (nil fontified nil 7816 . 7830) (nil fontified nil 7830 . 7832) (nil fontified nil 7832 . 7833) (nil fontified nil 7833 . 7837) (nil fontified nil 7837 . 7838) (nil fontified nil 7838 . 7845) (nil fontified nil 7845 . 7863) (nil fontified nil 7863 . 7868) (nil fontified nil 7868 . 7869) (nil fontified nil 7869 . 7870) (nil fontified nil 7870 . 7897) (nil fontified nil 7897 . 7898) (nil fontified nil 7898 . 7899) (nil fontified nil 7899 . 7913) (nil fontified nil 7913 . 7916) (nil fontified nil 7916 . 7917) (nil fontified nil 7917 . 7918) (nil fontified nil 7918 . 7919) (nil fontified nil 7919 . 7923) (nil fontified nil 7923 . 7924) (nil fontified nil 7924 . 7927) (nil fontified nil 7927 . 7928) (nil fontified nil 7928 . 7940) (nil fontified nil 7940 . 7941) (nil fontified nil 7941 . 7942) (nil fontified nil 7942 . 7943) (nil fontified nil 7943 . 7944) (nil fontified nil 7944 . 7945) (nil fontified nil 7945 . 7951) (nil fontified nil 7951 . 7955) (nil fontified nil 7955 . 7956) (nil fontified nil 7956 . 7958) (nil fontified nil 7958 . 7960) (nil fontified nil 7960 . 7962) (nil fontified nil 7962 . 7964) (nil fontified nil 7964 . 7970) (nil fontified nil 7970 . 7971) (nil fontified nil 7971 . 7975) (nil fontified nil 7975 . 7976) (nil fontified nil 7976 . 7982) (nil fontified nil 7982 . 7983) (nil fontified nil 7983 . 7984) (nil fontified nil 7984 . 7985) (nil fontified nil 7985 . 7986) (nil fontified nil 7986 . 7988) (nil fontified nil 7988 . 7989) (nil fontified nil 7989 . 7990) (nil fontified nil 7990 . 7991) (nil fontified nil 7991 . 7996) (nil fontified nil 7996 . 7997) (nil fontified nil 7997 . 7999) (nil fontified nil 7999 . 8000) (nil fontified nil 8000 . 8001) (nil fontified nil 8001 . 8002) (nil fontified nil 8002 . 8003) (nil fontified nil 8003 . 8006) (nil fontified nil 8006 . 8007) (nil fontified nil 8007 . 8017) (nil fontified nil 8017 . 8019) (nil fontified nil 8019 . 8020) (nil fontified nil 8020 . 8021) (nil fontified nil 8021 . 8028) (nil fontified nil 8028 . 8029) (nil fontified nil 8029 . 8030) (nil fontified nil 8030 . 8032) (nil fontified nil 8032 . 8033) (nil fontified nil 8033 . 8037) (nil fontified nil 8037 . 8038) (nil fontified nil 8038 . 8050) (nil fontified nil 8050 . 8064) (nil fontified nil 8064 . 8066) (nil fontified nil 8066 . 8067) (nil fontified nil 8067 . 8071) (nil fontified nil 8071 . 8072) (nil fontified nil 8072 . 8079) (nil fontified nil 8079 . 8097) (nil fontified nil 8097 . 8102) (nil fontified nil 8102 . 8103) (nil fontified nil 8103 . 8104) (nil fontified nil 8104 . 8128) (nil fontified nil 8128 . 8129) (nil fontified nil 8129 . 8130) (nil fontified nil 8130 . 8144) (nil fontified nil 8144 . 8147) (nil fontified nil 8147 . 8148) (nil fontified nil 8148 . 8149) (nil fontified nil 8149 . 8150) (nil fontified nil 8150 . 8154) (nil fontified nil 8154 . 8155) (nil fontified nil 8155 . 8158) (nil fontified nil 8158 . 8159) (nil fontified nil 8159 . 8171) (nil fontified nil 8171 . 8172) (nil fontified nil 8172 . 8173) (nil fontified nil 8173 . 8174) (nil fontified nil 8174 . 8175) (nil fontified nil 8175 . 8178) (nil fontified nil 8178 . 8179) (nil fontified nil 8179 . 8180) (nil fontified nil 8180 . 8181) (nil fontified nil 8181 . 8186) (nil fontified nil 8186 . 8187) (nil fontified nil 8187 . 8189) (nil fontified nil 8189 . 8190) (nil fontified nil 8190 . 8204) (nil fontified nil 8204 . 8206) (nil fontified nil 8206 . 8207) (nil fontified nil 8207 . 8211) (nil fontified nil 8211 . 8212) (nil fontified nil 8212 . 8217) (nil fontified nil 8217 . 8218) (nil fontified nil 8218 . 8230) (nil fontified nil 8230 . 8231) (nil fontified nil 8231 . 8232) (nil fontified nil 8232 . 8233) (nil fontified nil 8233 . 8234) (nil fontified nil 8234 . 8237) (nil fontified nil 8237 . 8255) (nil fontified nil 8255 . 8257) (nil fontified nil 8257 . 8258) (nil fontified nil 8258 . 8262) (nil fontified nil 8262 . 8263) (nil fontified nil 8263 . 8270) (nil fontified nil 8270 . 8292) (nil fontified nil 8292 . 8297) (nil fontified nil 8297 . 8298) (nil fontified nil 8298 . 8299) (nil fontified nil 8299 . 8324) (nil fontified nil 8324 . 8325) (nil fontified nil 8325 . 8327) (nil fontified nil 8327 . 8331) (nil fontified nil 8331 . 8332) (nil fontified nil 8332 . 8337) (nil fontified nil 8337 . 8338) (nil fontified nil 8338 . 8350) (nil fontified nil 8350 . 8351) (nil fontified nil 8351 . 8352) (nil fontified nil 8352 . 8370) (nil fontified nil 8370 . 8373) (nil fontified nil 8373 . 8374) (nil fontified nil 8374 . 8375) (nil fontified nil 8375 . 8382) (nil fontified nil 8382 . 8388) (nil fontified nil 8388 . 8389) (nil fontified nil 8389 . 8390) (nil fontified nil 8390 . 8392) (nil fontified nil 8392 . 8396) (nil fontified nil 8396 . 8397) (nil fontified nil 8397 . 8402) (nil fontified nil 8402 . 8403) (nil fontified nil 8403 . 8415) (nil fontified nil 8415 . 8416) (nil fontified nil 8416 . 8418) (nil fontified nil 8418 . 8422) (nil fontified nil 8422 . 8423) (nil fontified nil 8423 . 8424) (nil fontified nil 8424 . 8426) (nil fontified nil 8426 . 8428) (nil fontified nil 8428 . 8430) (nil fontified nil 8430 . 8431) (nil fontified nil 8431 . 8433) (nil fontified nil 8433 . 8438) (nil fontified nil 8438 . 8439) (nil fontified nil 8439 . 8443) (nil fontified nil 8443 . 8444) (nil fontified nil 8444 . 8449) (nil fontified nil 8449 . 8451) (nil fontified nil 8451 . 8457) (nil fontified nil 8457 . 8458) (nil fontified nil 8458 . 8462) (nil fontified nil 8462 . 8463) (nil fontified nil 8463 . 8469) (nil fontified nil 8469 . 8470) (nil fontified nil 8470 . 8487) (nil fontified nil 8487 . 8490) (nil fontified nil 8490 . 8491) (nil fontified nil 8491 . 8492) (nil fontified nil 8492 . 8493) (nil fontified nil 8493 . 8496) (nil fontified nil 8496 . 8497) (nil fontified nil 8497 . 8498) (nil fontified nil 8498 . 8499) (nil fontified nil 8499 . 8502) (nil fontified nil 8502 . 8503) (nil fontified nil 8503 . 8504) (nil fontified nil 8504 . 8505) (nil fontified nil 8505 . 8510) (nil fontified nil 8510 . 8511) (nil fontified nil 8511 . 8513) (nil fontified nil 8513 . 8514) (nil fontified nil 8514 . 8524) (nil fontified nil 8524 . 8526) (nil fontified nil 8526 . 8527) (nil fontified nil 8527 . 8531) (nil fontified nil 8531 . 8532) (nil fontified nil 8532 . 8539) (nil fontified nil 8539 . 8553) (nil fontified nil 8553 . 8555) (nil fontified nil 8555 . 8556) (nil fontified nil 8556 . 8557) (nil fontified nil 8557 . 8560) (nil fontified nil 8560 . 8561) (nil fontified nil 8561 . 8562) (nil fontified nil 8562 . 8564) (nil fontified nil 8564 . 8565) (nil fontified nil 8565 . 8569) (nil fontified nil 8569 . 8570) (nil fontified nil 8570 . 8579) (nil fontified nil 8579 . 8580) (nil fontified nil 8580 . 8592) (nil fontified nil 8592 . 8593) (nil fontified nil 8593 . 8611) (nil fontified nil 8611 . 8613) (nil fontified nil 8613 . 8614) (nil fontified nil 8614 . 8615) (nil fontified nil 8615 . 8619) (nil fontified nil 8619 . 8620) (nil fontified nil 8620 . 8621) (nil fontified nil 8621 . 8623) (nil fontified nil 8623 . 8624) (nil fontified nil 8624 . 8628) (nil fontified nil 8628 . 8629) (nil fontified nil 8629 . 8638) (nil fontified nil 8638 . 8639) (nil fontified nil 8639 . 8651) (nil fontified nil 8651 . 8652) (nil fontified nil 8652 . 8674) (nil fontified nil 8674 . 8679) (nil fontified nil 8679 . 8680) (nil fontified nil 8680 . 8681) (nil fontified nil 8681 . 8719) (nil fontified nil 8719 . 8720) (nil fontified nil 8720 . 8721) (nil fontified nil 8721 . 8722) (nil fontified nil 8722 . 8723) (nil fontified nil 8723 . 8727) (nil fontified nil 8727 . 8728) (nil fontified nil 8728 . 8733) (nil fontified nil 8733 . 8734) (nil fontified nil 8734 . 8746) (nil fontified nil 8746 . 8747) (nil fontified nil 8747 . 8748) (nil fontified nil 8748 . 8751) (nil fontified nil 8751 . 8752) (nil fontified nil 8752 . 8753) (nil fontified nil 8753 . 8754) (nil fontified nil 8754 . 8760) (nil fontified nil 8760 . 8761) (nil fontified nil 8761 . 8762) (nil fontified nil 8762 . 8763) (nil fontified nil 8763 . 8768) (nil fontified nil 8768 . 8769) (nil fontified nil 8769 . 8770) (nil fontified nil 8770 . 8771) (nil fontified nil 8771 . 8788) (nil fontified nil 8788 . 8792) (nil fontified nil 8792 . 8814) (nil fontified nil 8814 . 8819) (nil fontified nil 8819 . 8820) (nil fontified nil 8820 . 8821) (nil fontified nil 8821 . 8856) (nil fontified nil 8856 . 8857) (nil fontified nil 8857 . 8859) (nil fontified nil 8859 . 8863) (nil fontified nil 8863 . 8864) (nil fontified nil 8864 . 8869) (nil fontified nil 8869 . 8870) (nil fontified nil 8870 . 8882) (nil fontified nil 8882 . 8883) (nil fontified nil 8883 . 8884) (nil fontified nil 8884 . 8897) (nil fontified nil 8897 . 8901) (nil fontified nil 8901 . 8902) (nil fontified nil 8902 . 8903) (nil fontified nil 8903 . 8905) (nil fontified nil 8905 . 8906) (nil fontified nil 8906 . 8907) (nil fontified nil 8907 . 8909) (nil fontified nil 8909 . 8910) (nil fontified nil 8910 . 8914) (nil fontified nil 8914 . 8915) (nil fontified nil 8915 . 8924) (nil fontified nil 8924 . 8925) (nil fontified nil 8925 . 8937) (nil fontified nil 8937 . 8938) (nil fontified nil 8938 . 8956) (nil fontified nil 8956 . 8961) (nil fontified nil 8961 . 8962) (nil fontified nil 8962 . 8963) (nil fontified nil 8963 . 9003) (nil fontified nil 9003 . 9004) (nil fontified nil 9004 . 9005) (nil fontified nil 9005 . 9006) (nil fontified nil 9006 . 9007) (nil fontified nil 9007 . 9011) (nil fontified nil 9011 . 9012) (nil fontified nil 9012 . 9017) (nil fontified nil 9017 . 9018) (nil fontified nil 9018 . 9030) (nil fontified nil 9030 . 9031) (nil fontified nil 9031 . 9032) (nil fontified nil 9032 . 9035) (nil fontified nil 9035 . 9036) (nil fontified nil 9036 . 9037) (nil fontified nil 9037 . 9038) (nil fontified nil 9038 . 9044) (nil fontified nil 9044 . 9045) (nil fontified nil 9045 . 9046) (nil fontified nil 9046 . 9047) (nil fontified nil 9047 . 9052) (nil fontified nil 9052 . 9053) (nil fontified nil 9053 . 9054) (nil fontified nil 9054 . 9055) (nil fontified nil 9055 . 9065) (nil fontified nil 9065 . 9071) (nil fontified nil 9071 . 9072) (nil fontified nil 9072 . 9075) (nil fontified nil 9075 . 9081) (nil fontified nil 9081 . 9084) (nil fontified nil 9084 . 9085) (nil fontified nil 9085 . 9094) (nil fontified nil 9094 . 9095) (nil fontified nil 9095 . 9099) (nil fontified nil 9099 . 9100) (nil fontified nil 9100 . 9110) (nil fontified nil 9110 . 9114) (nil fontified nil 9114 . 9115) (nil fontified nil 9115 . 9117) (nil fontified nil 9117 . 9118) (nil fontified nil 9118 . 9119) (nil fontified nil 9119 . 9120) (nil fontified nil 9120 . 9121) (nil fontified nil 9121 . 9122) (nil fontified nil 9122 . 9131) (nil fontified nil 9131 . 9135) (nil fontified nil 9135 . 9136) (nil fontified nil 9136 . 9138) (nil fontified nil 9138 . 9139) (nil fontified nil 9139 . 9140) (nil fontified nil 9140 . 9141) (nil fontified nil 9141 . 9142) (nil fontified nil 9142 . 9143) (nil fontified nil 9143 . 9153) (nil fontified nil 9153 . 9155) (nil fontified nil 9155 . 9156) (nil fontified nil 9156 . 9157) (nil fontified nil 9157 . 9164) (nil fontified nil 9164 . 9165) (nil fontified nil 9165 . 9166) (nil fontified nil 9166 . 9168) (nil fontified nil 9168 . 9169) (nil fontified nil 9169 . 9173) (nil fontified nil 9173 . 9174) (nil fontified nil 9174 . 9186) (nil fontified nil 9186 . 9200) (nil fontified nil 9200 . 9204) (nil fontified nil 9204 . 9205) (nil fontified nil 9205 . 9206) (nil fontified nil 9206 . 9207) (nil fontified nil 9207 . 9208) (nil fontified nil 9208 . 9209) (nil fontified nil 9209 . 9212) (nil fontified nil 9212 . 9222) (nil fontified nil 9222 . 9225) (nil fontified nil 9225 . 9226) (nil fontified nil 9226 . 9231) (nil fontified nil 9231 . 9232) (nil fontified nil 9232 . 9234) (nil fontified nil 9234 . 9235) (nil fontified nil 9235 . 9240) (nil fontified nil 9240 . 9241) (nil fontified nil 9241 . 9245) (nil fontified nil 9245 . 9246) (nil fontified nil 9246 . 9251) (nil fontified nil 9251 . 9252) (nil fontified nil 9252 . 9266) (nil fontified nil 9266 . 9270) (nil fontified nil 9270 . 9271) (nil fontified nil 9271 . 9273) (nil fontified nil 9273 . 9274) (nil fontified nil 9274 . 9280) (nil fontified nil 9280 . 9281) (nil fontified nil 9281 . 9284) (nil fontified nil 9284 . 9285) (nil fontified nil 9285 . 9289) (nil fontified nil 9289 . 9290) (nil fontified nil 9290 . 9298) (nil fontified nil 9298 . 9299) (nil fontified nil 9299 . 9300) (nil fontified nil 9300 . 9301) (nil fontified nil 9301 . 9305) (nil fontified nil 9305 . 9306) (nil fontified nil 9306 . 9310) (nil fontified nil 9310 . 9311) (nil fontified nil 9311 . 9316) (nil fontified nil 9316 . 9317) (nil fontified nil 9317 . 9318) (nil fontified nil 9318 . 9319) (nil fontified nil 9319 . 9332) (nil fontified nil 9332 . 9376) (nil fontified nil 9376 . 9389) (nil fontified nil 9389 . 9393) (nil fontified nil 9393 . 9394) (nil fontified nil 9394 . 9396) (nil fontified nil 9396 . 9397) (nil fontified nil 9397 . 9403) (nil fontified nil 9403 . 9404) (nil fontified nil 9404 . 9408) (nil fontified nil 9408 . 9409) (nil fontified nil 9409 . 9410) (nil fontified nil 9410 . 9411) (nil fontified nil 9411 . 9421) (nil fontified nil 9421 . 9425) (nil fontified nil 9425 . 9426) (nil fontified nil 9426 . 9428) (nil fontified nil 9428 . 9429) (nil fontified nil 9429 . 9430) (nil fontified nil 9430 . 9437) (nil fontified nil 9437 . 9443) (nil fontified nil 9443 . 9444) (nil fontified nil 9444 . 9448) (nil fontified nil 9448 . 9449) (nil fontified nil 9449 . 9451) (nil fontified nil 9451 . 9453) (nil fontified nil 9453 . 9458) (nil fontified nil 9458 . 9459) (nil fontified nil 9459 . 9465) (nil fontified nil 9465 . 9468) (nil fontified nil 9468 . 9470) (nil fontified nil 9470 . 9476) (nil fontified nil 9476 . 9477) (nil fontified nil 9477 . 9481) (nil fontified nil 9481 . 9482) (nil fontified nil 9482 . 9488) (nil fontified nil 9488 . 9489) (nil fontified nil 9489 . 9498) (nil fontified nil 9498 . 9502) (nil fontified nil 9502 . 9503) (nil fontified nil 9503 . 9505) (nil fontified nil 9505 . 9506) (nil fontified nil 9506 . 9507) (nil fontified nil 9507 . 9514) (nil fontified nil 9514 . 9520) (nil fontified nil 9520 . 9521) (nil fontified nil 9521 . 9525) (nil fontified nil 9525 . 9526) (nil fontified nil 9526 . 9528) (nil fontified nil 9528 . 9530) (nil fontified nil 9530 . 9535) (nil fontified nil 9535 . 9536) (nil fontified nil 9536 . 9540) (nil fontified nil 9540 . 9541) (nil fontified nil 9541 . 9546) (nil fontified nil 9546 . 9548) (nil fontified nil 9548 . 9554) (nil fontified nil 9554 . 9555) (nil fontified nil 9555 . 9559) (nil fontified nil 9559 . 9560) (nil fontified nil 9560 . 9566) (nil fontified nil 9566 . 9567) (nil fontified nil 9567 . 9576) (nil fontified nil 9576 . 9580) (nil fontified nil 9580 . 9581) (nil fontified nil 9581 . 9587) (nil fontified nil 9587 . 9588) (nil fontified nil 9588 . 9589) (nil fontified nil 9589 . 9596) (nil fontified nil 9596 . 9599) (nil fontified nil 9599 . 9600) (nil fontified nil 9600 . 9601) (nil fontified nil 9601 . 9607) (nil fontified nil 9607 . 9613) (nil fontified nil 9613 . 9614) (nil fontified nil 9614 . 9615) (nil fontified nil 9615 . 9616) (nil fontified nil 9616 . 9617) (nil fontified nil 9617 . 9618) (nil fontified nil 9618 . 9626) (nil fontified nil 9626 . 9632) (nil fontified nil 9632 . 9633) (nil fontified nil 9633 . 9637) (nil fontified nil 9637 . 9638) (nil fontified nil 9638 . 9640) (nil fontified nil 9640 . 9642) (nil fontified nil 9642 . 9645) (nil fontified nil 9645 . 9646) (nil fontified nil 9646 . 9647) (nil fontified nil 9647 . 9648) (nil fontified nil 9648 . 9649) (nil fontified nil 9649 . 9650) (nil fontified nil 9650 . 9660) (nil fontified nil 9660 . 9662) (nil fontified nil 9662 . 9663) (nil fontified nil 9663 . 9667) (nil fontified nil 9667 . 9668) (nil fontified nil 9668 . 9675) (nil fontified nil 9675 . 9689) (nil fontified nil 9689 . 9694) (nil fontified nil 9694 . 9695) (nil fontified nil 9695 . 9696) (nil fontified nil 9696 . 9698) (nil fontified nil 9698 . 9699) (nil fontified nil 9699 . 9701) (nil fontified nil 9701 . 9705) (nil fontified nil 9705 . 9706) (nil fontified nil 9706 . 9708) (nil fontified nil 9708 . 9710) (nil fontified nil 9710 . 9711) (nil fontified nil 9711 . 9713) (nil fontified nil 9713 . 9714) (nil fontified nil 9714 . 9716) (nil fontified nil 9716 . 9720) (nil fontified nil 9720 . 9721) (nil fontified nil 9721 . 9723) (nil fontified nil 9723 . 9725) (nil fontified nil 9725 . 9726) (nil fontified nil 9726 . 9732) (nil fontified nil 9732 . 9733) (nil fontified nil 9733 . 9735) (nil fontified nil 9735 . 9739) (nil fontified nil 9739 . 9740) (nil fontified nil 9740 . 9746) (nil fontified nil 9746 . 9747) (nil fontified nil 9747 . 9757) (nil fontified nil 9757 . 9761) (nil fontified nil 9761 . 9762) (nil fontified nil 9762 . 9765) (nil fontified nil 9765 . 9766) (nil fontified nil 9766 . 9767) (nil fontified nil 9767 . 9774) (nil fontified nil 9774 . 9780) (nil fontified nil 9780 . 9781) (nil fontified nil 9781 . 9785) (nil fontified nil 9785 . 9786) (nil fontified nil 9786 . 9789) (nil fontified nil 9789 . 9791) (nil fontified nil 9791 . 9796) (nil fontified nil 9796 . 9797) (nil fontified nil 9797 . 9801) (nil fontified nil 9801 . 9802) (nil fontified nil 9802 . 9807) (nil fontified nil 9807 . 9809) (nil fontified nil 9809 . 9815) (nil fontified nil 9815 . 9816) (nil fontified nil 9816 . 9820) (nil fontified nil 9820 . 9821) (nil fontified nil 9821 . 9827) (nil fontified nil 9827 . 9828) (nil fontified nil 9828 . 9838) (nil fontified nil 9838 . 9842) (nil fontified nil 9842 . 9843) (nil fontified nil 9843 . 9853) (nil fontified nil 9853 . 9854) (nil fontified nil 9854 . 9855) (nil fontified nil 9855 . 9862) (nil fontified nil 9862 . 9866) (nil fontified nil 9866 . 9867) (nil fontified nil 9867 . 9871) (nil fontified nil 9871 . 9872) (nil fontified nil 9872 . 9880) (nil fontified nil 9880 . 9882) (nil fontified nil 9882 . 9887) (nil fontified nil 9887 . 9888) (nil fontified nil 9888 . 9892) (nil fontified nil 9892 . 9893) (nil fontified nil 9893 . 9898) (nil fontified nil 9898 . 9900) (nil fontified nil 9900 . 9906) (nil fontified nil 9906 . 9907) (nil fontified nil 9907 . 9911) (nil fontified nil 9911 . 9912) (nil fontified nil 9912 . 9918) (nil fontified nil 9918 . 9919) (nil fontified nil 9919 . 9928) (nil fontified nil 9928 . 9932) (nil fontified nil 9932 . 9933) (nil fontified nil 9933 . 9939) (nil fontified nil 9939 . 9940) (nil fontified nil 9940 . 9941) (nil fontified nil 9941 . 9948) (nil fontified nil 9948 . 9952) (nil fontified nil 9952 . 9953) (nil fontified nil 9953 . 9957) (nil fontified nil 9957 . 9958) (nil fontified nil 9958 . 9966) (nil fontified nil 9966 . 9968) (nil fontified nil 9968 . 9973) (nil fontified nil 9973 . 9974) (nil fontified nil 9974 . 9978) (nil fontified nil 9978 . 9979) (nil fontified nil 9979 . 9984) (nil fontified nil 9984 . 9986) (nil fontified nil 9986 . 9992) (nil fontified nil 9992 . 9993) (nil fontified nil 9993 . 9997) (nil fontified nil 9997 . 9998) (nil fontified nil 9998 . 10004) (nil fontified nil 10004 . 10005) (nil fontified nil 10005 . 10015) (nil fontified nil 10015 . 10018) (nil fontified nil 10018 . 10019) (nil fontified nil 10019 . 10024) (nil fontified nil 10024 . 10025) (nil fontified nil 10025 . 10027) (nil fontified nil 10027 . 10028) (nil fontified nil 10028 . 10033) (nil fontified nil 10033 . 10034) (nil fontified nil 10034 . 10038) (nil fontified nil 10038 . 10039) (nil fontified nil 10039 . 10044) (nil fontified nil 10044 . 10045) (nil fontified nil 10045 . 10059) (nil fontified nil 10059 . 10063) (nil fontified nil 10063 . 10064) (nil fontified nil 10064 . 10074) (nil fontified nil 10074 . 10075) (nil fontified nil 10075 . 10079) (nil fontified nil 10079 . 10080) (nil fontified nil 10080 . 10086) (nil fontified nil 10086 . 10087) (nil fontified nil 10087 . 10092) (nil fontified nil 10092 . 10093) (nil fontified nil 10093 . 10096) (nil fontified nil 10096 . 10100) (nil fontified nil 10100 . 10101) (nil fontified nil 10101 . 10107) (nil fontified nil 10107 . 10108) (nil fontified nil 10108 . 10114) (nil fontified nil 10114 . 10115) (nil fontified nil 10115 . 10116) (nil fontified nil 10116 . 10117) (nil fontified nil 10117 . 10118) (nil fontified nil 10118 . 10119) (nil fontified nil 10119 . 10120) (nil fontified nil 10120 . 10121) (nil fontified nil 10121 . 10128) (nil fontified nil 10128 . 10131) (nil fontified nil 10131 . 10132) (nil fontified nil 10132 . 10133) (nil fontified nil 10133 . 10137) (nil fontified nil 10137 . 10138) (nil fontified nil 10138 . 10140) (nil fontified nil 10140 . 10141) (nil fontified nil 10141 . 10142) (nil fontified nil 10142 . 10143) (nil fontified nil 10143 . 10147) (nil fontified nil 10147 . 10148) (nil fontified nil 10148 . 10151) (nil fontified nil 10151 . 10152) (nil fontified nil 10152 . 10157) (nil fontified nil 10157 . 10158) (nil fontified nil 10158 . 10159) (nil fontified nil 10159 . 10172) (nil fontified nil 10172 . 10176) (nil fontified nil 10176 . 10177) (nil fontified nil 10177 . 10183) (nil fontified nil 10183 . 10184) (nil fontified nil 10184 . 10188) (nil fontified nil 10188 . 10189) (nil fontified nil 10189 . 10195) (nil fontified nil 10195 . 10196) (nil fontified nil 10196 . 10201) (nil fontified nil 10201 . 10202) (nil fontified nil 10202 . 10205) (nil fontified nil 10205 . 10209) (nil fontified nil 10209 . 10210) (nil fontified nil 10210 . 10216) (nil fontified nil 10216 . 10217) (nil fontified nil 10217 . 10223) (nil fontified nil 10223 . 10224) (nil fontified nil 10224 . 10225) (nil fontified nil 10225 . 10226) (nil fontified nil 10226 . 10227) (nil fontified nil 10227 . 10228) (nil fontified nil 10228 . 10229) (nil fontified nil 10229 . 10230) (nil fontified nil 10230 . 10231) (nil fontified nil 10231 . 10235) (nil fontified nil 10235 . 10236) (nil fontified nil 10236 . 10238) (nil fontified nil 10238 . 10239) (nil fontified nil 10239 . 10240) (nil fontified nil 10240 . 10241) (nil fontified nil 10241 . 10245) (nil fontified nil 10245 . 10246) (nil fontified nil 10246 . 10249) (nil fontified nil 10249 . 10250) (nil fontified nil 10250 . 10255) (nil fontified nil 10255 . 10256) (nil fontified nil 10256 . 10266) (nil fontified nil 10266 . 10288) (nil fontified nil 10288 . 10297) (nil fontified nil 10297 . 10315) (nil fontified nil 10315 . 10325) (nil fontified nil 10325 . 10358) (nil fontified nil 10358 . 10367) (nil fontified nil 10367 . 10431) (nil fontified nil 10431 . 10440) (nil fontified nil 10440 . 10491) (nil fontified nil 10491 . 10501) (nil fontified nil 10501 . 10580) (nil fontified nil 10580 . 10589) (nil fontified nil 10589 . 10676) (nil fontified nil 10676 . 10687) (nil fontified nil 10687 . 10689) (nil fontified nil 10689 . 10690) (nil fontified nil 10690 . 10694) (nil fontified nil 10694 . 10695) (nil fontified nil 10695 . 10702) (nil fontified nil 10702 . 10716) (nil fontified nil 10716 . 10721) (nil fontified nil 10721 . 10722) (nil fontified nil 10722 . 10723) (nil fontified nil 10723 . 10725) (nil fontified nil 10725 . 10726) (nil fontified nil 10726 . 10728) (nil fontified nil 10728 . 10732) (nil fontified nil 10732 . 10733) (nil fontified nil 10733 . 10735) (nil fontified nil 10735 . 10737) (nil fontified nil 10737 . 10738) (nil fontified nil 10738 . 10741) (nil fontified nil 10741 . 10742) (nil fontified nil 10742 . 10744) (nil fontified nil 10744 . 10748) (nil fontified nil 10748 . 10749) (nil fontified nil 10749 . 10752) (nil fontified nil 10752 . 10753) (nil fontified nil 10753 . 10763) (nil fontified nil 10763 . 10781) (nil fontified nil 10781 . 10790) (nil fontified nil 10790 . 10855) (nil fontified nil 10855 . 10865) (nil fontified nil 10865 . 10869) (nil fontified nil 10869 . 10870) (nil fontified nil 10870 . 10879) (nil fontified nil 10879 . 10880) (nil fontified nil 10880 . 10881) (nil fontified nil 10881 . 10885) (nil fontified nil 10885 . 10890) (nil fontified nil 10890 . 10891) (nil fontified nil 10891 . 10895) (nil fontified nil 10895 . 10896) (nil fontified nil 10896 . 10905) (nil fontified nil 10905 . 10906) (nil fontified nil 10906 . 10907) (nil fontified nil 10907 . 10914) (nil fontified nil 10914 . 10915) (nil fontified nil 10915 . 10919) (nil fontified nil 10919 . 10920) (nil fontified nil 10920 . 10925) (nil fontified nil 10925 . 10927) (nil fontified nil 10927 . 10931) (nil fontified nil 10931 . 10932) (nil fontified nil 10932 . 10937) (nil fontified nil 10937 . 10938) (nil fontified nil 10938 . 10947) (nil fontified nil 10947 . 10951) (nil fontified nil 10951 . 10952) (nil fontified nil 10952 . 10957) (nil fontified nil 10957 . 10958) (nil fontified nil 10958 . 10959) (nil fontified nil 10959 . 10966) (nil fontified nil 10966 . 10972) (nil fontified nil 10972 . 10973) (nil fontified nil 10973 . 10977) (nil fontified nil 10977 . 10978) (nil fontified nil 10978 . 10983) (nil fontified nil 10983 . 10985) (nil fontified nil 10985 . 10990) (nil fontified nil 10990 . 10991) (nil fontified nil 10991 . 10995) (nil fontified nil 10995 . 10996) (nil fontified nil 10996 . 11001) (nil fontified nil 11001 . 11003) (nil fontified nil 11003 . 11009) (nil fontified nil 11009 . 11010) (nil fontified nil 11010 . 11014) (nil fontified nil 11014 . 11015) (nil fontified nil 11015 . 11021) (nil fontified nil 11021 . 11022) (nil fontified nil 11022 . 11023) (nil fontified nil 11023 . 11027) (nil fontified nil 11027 . 11028) (nil fontified nil 11028 . 11032) (nil fontified nil 11032 . 11033) (nil fontified nil 11033 . 11038) (nil fontified nil 11038 . 11040) (nil fontified nil 11040 . 11044) (nil fontified nil 11044 . 11045) (nil fontified nil 11045 . 11050) (nil fontified nil 11050 . 11051) (nil fontified nil 11051 . 11060) (nil fontified nil 11060 . 11064) (nil fontified nil 11064 . 11065) (nil fontified nil 11065 . 11070) (nil fontified nil 11070 . 11071) (nil fontified nil 11071 . 11072) (nil fontified nil 11072 . 11079) (nil fontified nil 11079 . 11085) (nil fontified nil 11085 . 11086) (nil fontified nil 11086 . 11090) (nil fontified nil 11090 . 11091) (nil fontified nil 11091 . 11096) (nil fontified nil 11096 . 11098) (nil fontified nil 11098 . 11103) (nil fontified nil 11103 . 11104) (nil fontified nil 11104 . 11108) (nil fontified nil 11108 . 11109) (nil fontified nil 11109 . 11114) (nil fontified nil 11114 . 11116) (nil fontified nil 11116 . 11122) (nil fontified nil 11122 . 11123) (nil fontified nil 11123 . 11127) (nil fontified nil 11127 . 11128) (nil fontified nil 11128 . 11134) (nil fontified nil 11134 . 11135) (nil fontified nil 11135 . 11136) (nil fontified nil 11136 . 11140) (nil fontified nil 11140 . 11141) (nil fontified nil 11141 . 11145) (nil fontified nil 11145 . 11146) (nil fontified nil 11146 . 11151) (nil fontified nil 11151 . 11153) (nil fontified nil 11153 . 11157) (nil fontified nil 11157 . 11158) (nil fontified nil 11158 . 11163) (nil fontified nil 11163 . 11164) (nil fontified nil 11164 . 11173) (nil fontified nil 11173 . 11177) (nil fontified nil 11177 . 11178) (nil fontified nil 11178 . 11183) (nil fontified nil 11183 . 11184) (nil fontified nil 11184 . 11185) (nil fontified nil 11185 . 11192) (nil fontified nil 11192 . 11198) (nil fontified nil 11198 . 11199) (nil fontified nil 11199 . 11203) (nil fontified nil 11203 . 11204) (nil fontified nil 11204 . 11209) (nil fontified nil 11209 . 11210) (nil fontified nil 11210 . 11211) (nil fontified nil 11211 . 11218) (nil fontified nil 11218 . 11220) (nil fontified nil 11220 . 11221) (nil fontified nil 11221 . 11222) (nil fontified nil 11222 . 11223) (nil fontified nil 11223 . 11228) (nil fontified nil 11228 . 11230) (nil fontified nil 11230 . 11235) (nil fontified nil 11235 . 11236) (nil fontified nil 11236 . 11240) (nil fontified nil 11240 . 11241) (nil fontified nil 11241 . 11246) (nil fontified nil 11246 . 11248) (nil fontified nil 11248 . 11254) (nil fontified nil 11254 . 11255) (nil fontified nil 11255 . 11259) (nil fontified nil 11259 . 11260) (nil fontified nil 11260 . 11266) (nil fontified nil 11266 . 11267) (nil fontified nil 11267 . 11277) (nil fontified nil 11277 . 11295) (nil fontified nil 11295 . 11304) (nil fontified nil 11304 . 11331) (nil fontified nil 11331 . 11340) (nil fontified nil 11340 . 11363) (nil fontified nil 11363 . 11372) (nil fontified nil 11372 . 11395) (nil fontified nil 11395 . 11404) (nil fontified nil 11404 . 11427) (nil fontified nil 11427 . 11434) (nil fontified nil 11434 . 11437) (nil fontified nil 11437 . 11438) (nil fontified nil 11438 . 11448) (nil fontified nil 11448 . 11449) (nil fontified nil 11449 . 11453) (nil fontified nil 11453 . 11454) (nil fontified nil 11454 . 11465) (nil fontified nil 11465 . 11496) (nil fontified nil 11496 . 11505) (nil fontified nil 11505 . 11507) (nil fontified nil 11507 . 11508) (nil fontified nil 11508 . 11512) (nil fontified nil 11512 . 11513) (nil fontified nil 11513 . 11520) (nil fontified nil 11520 . 11534) (nil fontified nil 11534 . 11539) (nil fontified nil 11539 . 11540) (nil fontified nil 11540 . 11541) (nil fontified nil 11541 . 11544) (nil fontified nil 11544 . 11545) (nil fontified nil 11545 . 11547) (nil fontified nil 11547 . 11551) (nil fontified nil 11551 . 11552) (nil fontified nil 11552 . 11555) (nil fontified nil 11555 . 11556) (nil fontified nil 11556 . 11566) (nil fontified nil 11566 . 11570) (nil fontified nil 11570 . 11571) (nil fontified nil 11571 . 11574) (nil fontified nil 11574 . 11575) (nil fontified nil 11575 . 11576) (nil fontified nil 11576 . 11583) (nil fontified nil 11583 . 11589) (nil fontified nil 11589 . 11590) (nil fontified nil 11590 . 11594) (nil fontified nil 11594 . 11595) (nil fontified nil 11595 . 11598) (nil fontified nil 11598 . 11600) (nil fontified nil 11600 . 11605) (nil fontified nil 11605 . 11606) (nil fontified nil 11606 . 11610) (nil fontified nil 11610 . 11611) (nil fontified nil 11611 . 11616) (nil fontified nil 11616 . 11618) (nil fontified nil 11618 . 11624) (nil fontified nil 11624 . 11625) (nil fontified nil 11625 . 11629) (nil fontified nil 11629 . 11630) (nil fontified nil 11630 . 11636) (nil fontified nil 11636 . 11637) (nil fontified nil 11637 . 11638) (nil fontified nil 11638 . 11645) (nil fontified nil 11645 . 11646) (nil fontified nil 11646 . 11650) (nil fontified nil 11650 . 11651) (nil fontified nil 11651 . 11656) (nil fontified nil 11656 . 11658) (nil fontified nil 11658 . 11662) (nil fontified nil 11662 . 11663) (nil fontified nil 11663 . 11668) (nil fontified nil 11668 . 11669) (nil fontified nil 11669 . 11670) (nil fontified nil 11670 . 11671) (nil fontified nil 11671 . 11672) (nil fontified nil 11672 . 11676) (nil fontified nil 11676 . 11677) (nil fontified nil 11677 . 11681) (nil fontified nil 11681 . 11691) (nil fontified nil 11691 . 11694) (nil fontified nil 11694 . 11695) (nil fontified nil 11695 . 11700) (nil fontified nil 11700 . 11701) (nil fontified nil 11701 . 11703) (nil fontified nil 11703 . 11704) (nil fontified nil 11704 . 11709) (nil fontified nil 11709 . 11710) (nil fontified nil 11710 . 11714) (nil fontified nil 11714 . 11715) (nil fontified nil 11715 . 11720) (nil fontified nil 11720 . 11721) (nil fontified nil 11721 . 11735) (nil fontified nil 11735 . 11739) (nil fontified nil 11739 . 11740) (nil fontified nil 11740 . 11743) (nil fontified nil 11743 . 11744) (nil fontified nil 11744 . 11747) (nil fontified nil 11747 . 11752) (nil fontified nil 11752 . 11753) (nil fontified nil 11753 . 11754) (nil fontified nil 11754 . 11755) (nil fontified nil 11755 . 11756) (nil fontified nil 11756 . 11760) (nil fontified nil 11760 . 11761) (nil fontified nil 11761 . 11764) (nil fontified nil 11764 . 11765) (nil fontified nil 11765 . 11773) (nil fontified nil 11773 . 11774) (nil fontified nil 11774 . 11775) (nil fontified nil 11775 . 11776) (nil fontified nil 11776 . 11783) (nil fontified nil 11783 . 11787) (nil fontified nil 11787 . 11788) (nil fontified nil 11788 . 11792) (nil fontified nil 11792 . 11793) (nil fontified nil 11793 . 11795) (nil fontified nil 11795 . 11796) (nil fontified nil 11796 . 11801) (nil fontified nil 11801 . 11802) (nil fontified nil 11802 . 11803) (nil fontified nil 11803 . 11813) (nil fontified nil 11813 . 11831) (nil fontified nil 11831 . 11840) (nil fontified nil 11840 . 11875) (nil fontified nil 11875 . 11885) (nil fontified nil 11885 . 11905) (nil fontified nil 11905 . 11914) (nil fontified nil 11914 . 11916) (nil fontified nil 11916 . 11917) (nil fontified nil 11917 . 11921) (nil fontified nil 11921 . 11922) (nil fontified nil 11922 . 11929) (nil fontified nil 11929 . 11943) (nil fontified nil 11943 . 11948) (nil fontified nil 11948 . 11949) (nil fontified nil 11949 . 11950) (nil fontified nil 11950 . 11953) (nil fontified nil 11953 . 11954) (nil fontified nil 11954 . 11956) (nil fontified nil 11956 . 11960) (nil fontified nil 11960 . 11961) (nil fontified nil 11961 . 11964) (nil fontified nil 11964 . 11965) (nil fontified nil 11965 . 11975) (nil fontified nil 11975 . 11979) (nil fontified nil 11979 . 11980) (nil fontified nil 11980 . 11983) (nil fontified nil 11983 . 11984) (nil fontified nil 11984 . 11985) (nil fontified nil 11985 . 11992) (nil fontified nil 11992 . 11998) (nil fontified nil 11998 . 11999) (nil fontified nil 11999 . 12003) (nil fontified nil 12003 . 12004) (nil fontified nil 12004 . 12007) (nil fontified nil 12007 . 12009) (nil fontified nil 12009 . 12014) (nil fontified nil 12014 . 12015) (nil fontified nil 12015 . 12019) (nil fontified nil 12019 . 12020) (nil fontified nil 12020 . 12025) (nil fontified nil 12025 . 12027) (nil fontified nil 12027 . 12033) (nil fontified nil 12033 . 12034) (nil fontified nil 12034 . 12038) (nil fontified nil 12038 . 12039) (nil fontified nil 12039 . 12045) (nil fontified nil 12045 . 12046) (nil fontified nil 12046 . 12055) (nil fontified nil 12055 . 12059) (nil fontified nil 12059 . 12060) (nil fontified nil 12060 . 12063) (nil fontified nil 12063 . 12064) (nil fontified nil 12064 . 12065) (nil fontified nil 12065 . 12066) (nil fontified nil 12066 . 12070) (nil fontified nil 12070 . 12071) (nil fontified nil 12071 . 12074) (nil fontified nil 12074 . 12075) (nil fontified nil 12075 . 12076) (nil fontified nil 12076 . 12083) (nil fontified nil 12083 . 12087) (nil fontified nil 12087 . 12088) (nil fontified nil 12088 . 12092) (nil fontified nil 12092 . 12093) (nil fontified nil 12093 . 12095) (nil fontified nil 12095 . 12096) (nil fontified nil 12096 . 12097) (nil fontified nil 12097 . 12098) (nil fontified nil 12098 . 12099) (nil fontified nil 12099 . 12100) (nil fontified nil 12100 . 12101) (nil fontified nil 12101 . 12102) (nil fontified nil 12102 . 12106) (nil fontified nil 12106 . 12107) (nil fontified nil 12107 . 12109) (nil fontified nil 12109 . 12119) (nil fontified nil 12119 . 12137) (nil fontified nil 12137 . 12146) (nil fontified nil 12146 . 12181) (nil fontified nil 12181 . 12191) (nil fontified nil 12191 . 12195) (nil fontified nil 12195 . 12196) (nil fontified nil 12196 . 12202) (nil fontified nil 12202 . 12203) (nil fontified nil 12203 . 12204) (nil fontified nil 12204 . 12211) (nil fontified nil 12211 . 12215) (nil fontified nil 12215 . 12216) (nil fontified nil 12216 . 12222) (nil fontified nil 12222 . 12228) (nil fontified nil 12228 . 12229) (nil fontified nil 12229 . 12233) (nil fontified nil 12233 . 12234) (nil fontified nil 12234 . 12240) (nil fontified nil 12240 . 12242) (nil fontified nil 12242 . 12247) (nil fontified nil 12247 . 12248) (nil fontified nil 12248 . 12252) (nil fontified nil 12252 . 12253) (nil fontified nil 12253 . 12258) (nil fontified nil 12258 . 12260) (nil fontified nil 12260 . 12266) (nil fontified nil 12266 . 12267) (nil fontified nil 12267 . 12271) (nil fontified nil 12271 . 12272) (nil fontified nil 12272 . 12278) (nil fontified nil 12278 . 12279) (nil fontified nil 12279 . 12280) (nil fontified nil 12280 . 12289) (nil fontified nil 12289 . 12296) (nil fontified nil 12296 . 12297) (nil fontified nil 12297 . 12298) (nil fontified nil 12298 . 12305) (nil fontified nil 12305 . 12311) (nil fontified nil 12311 . 12312) (nil fontified nil 12312 . 12315) (nil fontified nil 12315 . 12317) (nil fontified nil 12317 . 12322) (nil fontified nil 12322 . 12323) (nil fontified nil 12323 . 12327) (nil fontified nil 12327 . 12328) (nil fontified nil 12328 . 12333) (nil fontified nil 12333 . 12335) (nil fontified nil 12335 . 12341) (nil fontified nil 12341 . 12342) (nil fontified nil 12342 . 12346) (nil fontified nil 12346 . 12347) (nil fontified nil 12347 . 12353) (nil fontified nil 12353 . 12354) (nil fontified nil 12354 . 12363) (nil fontified nil 12363 . 12367) (nil fontified nil 12367 . 12368) (nil fontified nil 12368 . 12377) (nil fontified nil 12377 . 12378) (nil fontified nil 12378 . 12379) (nil fontified nil 12379 . 12380) (nil fontified nil 12380 . 12386) (nil fontified nil 12386 . 12387) (nil fontified nil 12387 . 12396) (nil fontified nil 12396 . 12400) (nil fontified nil 12400 . 12401) (nil fontified nil 12401 . 12407) (nil fontified nil 12407 . 12408) (nil fontified nil 12408 . 12409) (nil fontified nil 12409 . 12410) (nil fontified nil 12410 . 12411) (nil fontified nil 12411 . 12417) (nil fontified nil 12417 . 12420) (nil fontified nil 12420 . 12421) (nil fontified nil 12421 . 12432) (nil fontified nil 12432 . 12433) (nil fontified nil 12433 . 12437) (nil fontified nil 12437 . 12439) (nil fontified nil 12439 . 12443) (nil fontified nil 12443 . 12444) (nil fontified nil 12444 . 12454) (nil fontified nil 12454 . 12456) (nil fontified nil 12456 . 12457) (nil fontified nil 12457 . 12508) (nil fontified nil 12508 . 12509) (nil fontified nil 12509 . 12511) (nil fontified nil 12511 . 12529) (nil fontified nil 12529 . 12531) (nil fontified nil 12531 . 12537) (nil fontified nil 12537 . 12539) (nil fontified nil 12539 . 12540) (nil fontified nil 12540 . 12541) (nil fontified nil 12541 . 12555) (nil fontified nil 12555 . 12558) (nil fontified nil 12558 . 12559) (nil fontified nil 12559 . 12560) (nil fontified nil 12560 . 12561) (nil fontified nil 12561 . 12563) (nil fontified nil 12563 . 12564) (nil fontified nil 12564 . 12569) (nil fontified nil 12569 . 12570) (nil fontified nil 12570 . 12574) (nil fontified nil 12574 . 12575) (nil fontified nil 12575 . 12580) (nil fontified nil 12580 . 12581) (nil fontified nil 12581 . 12599) (nil fontified nil 12599 . 12601) (nil fontified nil 12601 . 12602) (nil fontified nil 12602 . 12606) (nil fontified nil 12606 . 12607) (nil fontified nil 12607 . 12618) (nil fontified nil 12618 . 12619) (nil fontified nil 12619 . 12620) (nil fontified nil 12620 . 12621) (nil fontified nil 12621 . 12643) (nil fontified nil 12643 . 12680) (nil fontified nil 12680 . 12701) (nil fontified nil 12701 . 12705) (nil fontified nil 12705 . 12706) (nil fontified nil 12706 . 12709) (nil fontified nil 12709 . 12710) (nil fontified nil 12710 . 12714) (nil fontified nil 12714 . 12715) (nil fontified nil 12715 . 12719) (nil fontified nil 12719 . 12720) (nil fontified nil 12720 . 12724) (nil fontified nil 12724 . 12725) (nil fontified nil 12725 . 12731) (nil fontified nil 12731 . 12732) (nil fontified nil 12732 . 12733) (nil fontified nil 12733 . 12734) (nil fontified nil 12734 . 12735) (nil fontified nil 12735 . 12739) (nil fontified nil 12739 . 12740) (nil fontified nil 12740 . 12746) (nil fontified nil 12746 . 12747) (nil fontified nil 12747 . 12748) (nil fontified nil 12748 . 12749) (nil fontified nil 12749 . 12750) (nil fontified nil 12750 . 12751) (nil fontified nil 12751 . 12752) (nil fontified nil 12752 . 12753) (nil fontified nil 12753 . 12758) (nil fontified nil 12758 . 12759) (nil fontified nil 12759 . 12762) (nil fontified nil 12762 . 12763) (nil fontified nil 12763 . 12780) (nil fontified nil 12780 . 12782) (nil fontified nil 12782 . 12783) (nil fontified nil 12783 . 12787) (nil fontified nil 12787 . 12788) (nil fontified nil 12788 . 12789) (nil fontified nil 12789 . 12790) (nil fontified nil 12790 . 12792) (nil fontified nil 12792 . 12793) (nil fontified nil 12793 . 12794) (nil fontified nil 12794 . 12797) (nil fontified nil 12797 . 12798) (nil fontified nil 12798 . 12802) (nil fontified nil 12802 . 12803) (nil fontified nil 12803 . 12814) (nil fontified nil 12814 . 12815) (nil fontified nil 12815 . 12816) (nil fontified nil 12816 . 12817) (nil fontified nil 12817 . 12839) (nil fontified nil 12839 . 12909) (nil fontified nil 12909 . 12930) (nil fontified nil 12930 . 12934) (nil fontified nil 12934 . 12935) (nil fontified nil 12935 . 12938) (nil fontified nil 12938 . 12939) (nil fontified nil 12939 . 12943) (nil fontified nil 12943 . 12944) (nil fontified nil 12944 . 12948) (nil fontified nil 12948 . 12949) (nil fontified nil 12949 . 12953) (nil fontified nil 12953 . 12954) (nil fontified nil 12954 . 12960) (nil fontified nil 12960 . 12961) (nil fontified nil 12961 . 12962) (nil fontified nil 12962 . 12963) (nil fontified nil 12963 . 12964) (nil fontified nil 12964 . 12968) (nil fontified nil 12968 . 12969) (nil fontified nil 12969 . 12975) (nil fontified nil 12975 . 12976) (nil fontified nil 12976 . 12977) (nil fontified nil 12977 . 12978) (nil fontified nil 12978 . 12979) (nil fontified nil 12979 . 12980) (nil fontified nil 12980 . 12981) (nil fontified nil 12981 . 12982) (nil fontified nil 12982 . 12987) (nil fontified nil 12987 . 12988) (nil fontified nil 12988 . 12992) (nil fontified nil 12992 . 12993) (nil fontified nil 12993 . 12996) (nil fontified nil 12996 . 12997) (nil fontified nil 12997 . 12998) (nil fontified nil 12998 . 12999) (nil fontified nil 12999 . 13000) (nil fontified nil 13000 . 13001) (nil fontified nil 13001 . 13008) (nil fontified nil 13008 . 13012) (nil fontified nil 13012 . 13013) (nil fontified nil 13013 . 13017) (nil fontified nil 13017 . 13018) (nil fontified nil 13018 . 13020) (nil fontified nil 13020 . 13021) (nil fontified nil 13021 . 13022) (nil fontified nil 13022 . 13023) (nil fontified nil 13023 . 13024) (nil fontified nil 13024 . 13025) (nil fontified nil 13025 . 13043) (nil fontified nil 13043 . 13045) (nil fontified nil 13045 . 13051) (nil fontified nil 13051 . 13053) (nil fontified nil 13053 . 13054) (nil fontified nil 13054 . 13058) (nil fontified nil 13058 . 13059) (nil fontified nil 13059 . 13068) (nil fontified nil 13068 . 13082) (nil fontified nil 13082 . 13085) (nil fontified nil 13085 . 13086) (nil fontified nil 13086 . 13087) (nil fontified nil 13087 . 13088) (nil fontified nil 13088 . 13090) (nil fontified nil 13090 . 13091) (nil fontified nil 13091 . 13096) (nil fontified nil 13096 . 13097) (nil fontified nil 13097 . 13101) (nil fontified nil 13101 . 13102) (nil fontified nil 13102 . 13107) (nil fontified nil 13107 . 13108) (nil fontified nil 13108 . 13126) (nil fontified nil 13126 . 13128) (nil fontified nil 13128 . 13129) (nil fontified nil 13129 . 13133) (nil fontified nil 13133 . 13134) (nil fontified nil 13134 . 13145) (nil fontified nil 13145 . 13146) (nil fontified nil 13146 . 13147) (nil fontified nil 13147 . 13148) (nil fontified nil 13148 . 13170) (nil fontified nil 13170 . 13215) (nil fontified nil 13215 . 13236) (nil fontified nil 13236 . 13240) (nil fontified nil 13240 . 13241) (nil fontified nil 13241 . 13244) (nil fontified nil 13244 . 13245) (nil fontified nil 13245 . 13249) (nil fontified nil 13249 . 13250) (nil fontified nil 13250 . 13254) (nil fontified nil 13254 . 13255) (nil fontified nil 13255 . 13259) (nil fontified nil 13259 . 13260) (nil fontified nil 13260 . 13266) (nil fontified nil 13266 . 13267) (nil fontified nil 13267 . 13268) (nil fontified nil 13268 . 13269) (nil fontified nil 13269 . 13270) (nil fontified nil 13270 . 13274) (nil fontified nil 13274 . 13275) (nil fontified nil 13275 . 13281) (nil fontified nil 13281 . 13282) (nil fontified nil 13282 . 13283) (nil fontified nil 13283 . 13284) (nil fontified nil 13284 . 13285) (nil fontified nil 13285 . 13286) (nil fontified nil 13286 . 13287) (nil fontified nil 13287 . 13288) (nil fontified nil 13288 . 13293) (nil fontified nil 13293 . 13294) (nil fontified nil 13294 . 13298) (nil fontified nil 13298 . 13299) (nil fontified nil 13299 . 13302) (nil fontified nil 13302 . 13303) (nil fontified nil 13303 . 13304) (nil fontified nil 13304 . 13305) (nil fontified nil 13305 . 13306) (nil fontified nil 13306 . 13324) (nil fontified nil 13324 . 13326) (nil fontified nil 13326 . 13332) (nil fontified nil 13332 . 13334) (nil fontified nil 13334 . 13335) (nil fontified nil 13335 . 13339) (nil fontified nil 13339 . 13340) (nil fontified nil 13340 . 13349) (nil fontified nil 13349 . 13350) (nil fontified nil 13350 . 13353) (nil fontified nil 13353 . 13357) (nil fontified nil 13357 . 13360) (nil fontified nil 13360 . 13361) (nil fontified nil 13361 . 13365) (nil fontified nil 13365 . 13366) (nil fontified nil 13366 . 13368) (nil fontified nil 13368 . 13370) (nil fontified nil 13370 . 13371) (nil fontified nil 13371 . 13372) (nil fontified nil 13372 . 13386) (nil fontified nil 13386 . 13388) (nil fontified nil 13388 . 13389) (nil fontified nil 13389 . 13393) (nil fontified nil 13393 . 13394) (nil fontified nil 13394 . 13401) (nil fontified nil 13401 . 13419) (nil fontified nil 13419 . 13424) (nil fontified nil 13424 . 13425) (nil fontified nil 13425 . 13426) (nil fontified nil 13426 . 13433) (nil fontified nil 13433 . 13434) (nil fontified nil 13434 . 13435) (nil fontified nil 13435 . 13461) (nil fontified nil 13461 . 13465) (nil fontified nil 13465 . 13466) (nil fontified nil 13466 . 13469) (nil fontified nil 13469 . 13470) (nil fontified nil 13470 . 13474) (nil fontified nil 13474 . 13475) (nil fontified nil 13475 . 13479) (nil fontified nil 13479 . 13480) (nil fontified nil 13480 . 13484) (nil fontified nil 13484 . 13485) (nil fontified nil 13485 . 13491) (nil fontified nil 13491 . 13492) (nil fontified nil 13492 . 13493) (nil fontified nil 13493 . 13494) (nil fontified nil 13494 . 13495) (nil fontified nil 13495 . 13499) (nil fontified nil 13499 . 13500) (nil fontified nil 13500 . 13506) (nil fontified nil 13506 . 13507) (nil fontified nil 13507 . 13508) (nil fontified nil 13508 . 13509) (nil fontified nil 13509 . 13510) (nil fontified nil 13510 . 13511) (nil fontified nil 13511 . 13512) (nil fontified nil 13512 . 13513) (nil fontified nil 13513 . 13517) (nil fontified nil 13517 . 13518) (nil fontified nil 13518 . 13521) (nil fontified nil 13521 . 13522) (nil fontified nil 13522 . 13523) (nil fontified nil 13523 . 13524) (nil fontified nil 13524 . 13525) (nil fontified nil 13525 . 13526) (nil fontified nil 13526 . 13527) (nil fontified nil 13527 . 13531) (nil fontified nil 13531 . 13532) (nil fontified nil 13532 . 13540) (nil fontified nil 13540 . 13541) (nil fontified nil 13541 . 13542) (nil fontified nil 13542 . 13543) (nil fontified nil 13543 . 13569) (nil fontified nil 13569 . 13589) (nil fontified nil 13589 . 13602) (nil fontified nil 13602 . 13716) (nil fontified nil 13716 . 13729) (nil fontified nil 13729 . 13751) (nil fontified nil 13751 . 13764) (nil fontified nil 13764 . 13878) (nil fontified nil 13878 . 13879) (nil fontified nil 13879 . 13892) (nil fontified nil 13892 . 13904) (nil fontified nil 13904 . 13925) (nil fontified nil 13925 . 13938) (nil fontified nil 13938 . 14052) (nil fontified nil 14052 . 14065) (nil fontified nil 14065 . 14087) (nil fontified nil 14087 . 14100) (nil fontified nil 14100 . 14214) (nil fontified nil 14214 . 14265) (nil fontified nil 14265 . 14267) (nil fontified nil 14267 . 14273) (nil fontified nil 14273 . 14275) (nil fontified nil 14275 . 14276) (nil fontified nil 14276 . 14280) (nil fontified nil 14280 . 14281) (nil fontified nil 14281 . 14291) (nil fontified nil 14291 . 14292) (nil fontified nil 14292 . 14295) (nil fontified nil 14295 . 14299) (nil fontified nil 14299 . 14302) (nil fontified nil 14302 . 14303) (nil fontified nil 14303 . 14307) (nil fontified nil 14307 . 14308) (nil fontified nil 14308 . 14310) (nil fontified nil 14310 . 14312) (nil fontified nil 14312 . 14313) (nil fontified nil 14313 . 14314) (nil fontified nil 14314 . 14328) (nil fontified nil 14328 . 14330) (nil fontified nil 14330 . 14331) (nil fontified nil 14331 . 14335) (nil fontified nil 14335 . 14336) (nil fontified nil 14336 . 14343) (nil fontified nil 14343 . 14361) (nil fontified nil 14361 . 14366) (nil fontified nil 14366 . 14367) (nil fontified nil 14367 . 14368) (nil fontified nil 14368 . 14376) (nil fontified nil 14376 . 14377) (nil fontified nil 14377 . 14378) (nil fontified nil 14378 . 14391) (nil fontified nil 14391 . 14395) (nil fontified nil 14395 . 14396) (nil fontified nil 14396 . 14399) (nil fontified nil 14399 . 14400) (nil fontified nil 14400 . 14404) (nil fontified nil 14404 . 14405) (nil fontified nil 14405 . 14409) (nil fontified nil 14409 . 14410) (nil fontified nil 14410 . 14414) (nil fontified nil 14414 . 14415) (nil fontified nil 14415 . 14421) (nil fontified nil 14421 . 14422) (nil fontified nil 14422 . 14423) (nil fontified nil 14423 . 14424) (nil fontified nil 14424 . 14425) (nil fontified nil 14425 . 14429) (nil fontified nil 14429 . 14430) (nil fontified nil 14430 . 14436) (nil fontified nil 14436 . 14437) (nil fontified nil 14437 . 14438) (nil fontified nil 14438 . 14439) (nil fontified nil 14439 . 14440) (nil fontified nil 14440 . 14441) (nil fontified nil 14441 . 14442) (nil fontified nil 14442 . 14443) (nil fontified nil 14443 . 14447) (nil fontified nil 14447 . 14448) (nil fontified nil 14448 . 14451) (nil fontified nil 14451 . 14452) (nil fontified nil 14452 . 14453) (nil fontified nil 14453 . 14454) (nil fontified nil 14454 . 14468) (nil fontified nil 14468 . 14497) (nil fontified nil 14497 . 14510) (nil fontified nil 14510 . 14559) (nil fontified nil 14559 . 14573) (nil fontified nil 14573 . 14576) (nil fontified nil 14576 . 14577) (nil fontified nil 14577 . 14585) (nil fontified nil 14585 . 14586) (nil fontified nil 14586 . 14590) (nil fontified nil 14590 . 14592) (nil fontified nil 14592 . 14597) (nil fontified nil 14597 . 14598) (nil fontified nil 14598 . 14608) (nil fontified nil 14608 . 14610) (nil fontified nil 14610 . 14611) (nil fontified nil 14611 . 14625) (nil fontified nil 14625 . 14626) (nil fontified nil 14626 . 14628) (nil fontified nil 14628 . 14637) (nil fontified nil 14637 . 14642) (nil fontified nil 14642 . 14643) (nil fontified nil 14643 . 14644) (nil fontified nil 14644 . 14651) (nil fontified nil 14651 . 14657) (nil fontified nil 14657 . 14658) (nil fontified nil 14658 . 14659) (nil fontified nil 14659 . 14661) (nil fontified nil 14661 . 14664) (nil fontified nil 14664 . 14665) (nil fontified nil 14665 . 14666) (nil fontified nil 14666 . 14673) (nil fontified nil 14673 . 14675) (nil fontified nil 14675 . 14677) (nil fontified nil 14677 . 14680) (nil fontified nil 14680 . 14681) (nil fontified nil 14681 . 14682) (nil fontified nil 14682 . 14689) (nil fontified nil 14689 . 14691) (nil fontified nil 14691 . 14692) (nil fontified nil 14692 . 14693) (nil fontified nil 14693 . 14694) (nil fontified nil 14694 . 14699) (nil fontified nil 14699 . 14700) (nil fontified nil 14700 . 14704) (nil fontified nil 14704 . 14705) (nil fontified nil 14705 . 14707) (nil fontified nil 14707 . 14708) (nil fontified nil 14708 . 14713) (nil fontified nil 14713 . 14714) (nil fontified nil 14714 . 14715) (nil fontified nil 14715 . 14717) (nil fontified nil 14717 . 14722) (nil fontified nil 14722 . 14723) (nil fontified nil 14723 . 14727) (nil fontified nil 14727 . 14728) (nil fontified nil 14728 . 14733) (nil fontified nil 14733 . 14735) (nil fontified nil 14735 . 14741) (nil fontified nil 14741 . 14742) (nil fontified nil 14742 . 14746) (nil fontified nil 14746 . 14747) (nil fontified nil 14747 . 14753) (nil fontified nil 14753 . 14754) (nil fontified nil 14754 . 14755) (1 . 14892)) ((#("import os
import gc
import numpy as np

import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal

from yaml import safe_load
from time import perf_counter

from src.utils import set_seed
from src.activation import Activation
#from src.plasticity import STP_Model

import warnings
warnings.filterwarnings(\"ignore\")


class Network(nn.Module):
    def __init__(self, conf_file, sim_name, repo_root, **kwargs):
        super().__init__()

        # load parameters
        self.loadConfig(conf_file, sim_name, repo_root, **kwargs)

        # set csts
        self.initConst()

        # scale parameters
        self.scaleParam()

        # set seed for Cij
        set_seed(self.SEED)

        # in pytorch, Wij is i to j.
        self.Wab = nn.Linear(self.N_NEURON, self.N_NEURON, bias=True, dtype=self.FLOAT, device=self.device)

        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                W0 = self.initWeights(j_pop, i_pop)
                
                self.Wab.weight.data[self.csumNa[j_pop] : self.csumNa[j_pop + 1],
                                     self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = W0
        
        # Here we store the constant external input in the bias
        for i_pop in range(self.N_POP):
            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
        
        # resets the seed
        set_seed(0)


    def update_rec_input(self, rates):
        '''Dynamics of the recurrent inputs'''
        rec_input = self.Wab(rates)

        return rec_input

    def update_net_input(self, rec_input):
        '''Updating the net input into the neurons'''

        # net_input = torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)        
        noise = self.ff_normal.sample((self.N_NEURON,)).squeeze(0)
        net_input = noise + rec_input

        return net_input

    def update_rates(self, rates, net_input):
        '''Dynamics of the rates'''
        # using array slices is faster than indices
        if self.RATE_DYN:
            rates = self.EXP_DT_TAU * rates + self.DT_TAU * Activation(self.TF_TYPE, self.THRESH[0])(net_input)
        else:
            rates = Activation()(net_input)

        return rates

    def forward(self, rates):
        '''This is the main function of the class'''
        rec_input = self.update_rec_input(rates)
        net_input = self.update_net_input(rec_input)
        rates = self.update_rates(rates, net_input)

        return rates

    def print_activity(self, step, rates):

        times = np.round((step - self.N_STEADY) / self.N_STEPS * self.DURATION, 2)

        activity = []

        activity.append(np.round(torch.mean(rates[:self.csumNa[1]]).cpu().detach().numpy(), 2))

        if self.N_POP > 1:
            activity.append(np.round(torch.mean(rates[self.csumNa[1]:self.csumNa[2]]).cpu().detach().numpy(), 2))

        if self.N_POP > 2:
            activity.append(np.round(torch.mean(rates[self.csumNa[2]:]).cpu().detach().numpy(), 2))

        print(
            \"times (s)\",
            np.round(times, 2),
            \"rates (Hz)\",
            activity,
        )


    def run(self):
        # init rates
        hidden = self.initRates()

        start = perf_counter()

        self.N_STEPS = int(self.DURATION / self.DT)
        self.N_STEADY = int(self.T_STEADY / self.DT)
        self.N_WINDOW = int(self.T_WINDOW / self.DT)
        self.N_STIM_ON = int(self.T_STIM_ON / self.DT)
        self.N_STIM_OFF = int(self.T_STIM_OFF / self.DT)

        result = []
        with torch.no_grad():
            for step in range(self.N_STEPS):
                self.update_stim(step)
                hidden = self.forward(hidden)

                if step > self.N_STEADY:
                    if step % self.N_WINDOW == 0:
                        if self.VERBOSE:
                            self.print_activity(step, hidden)

                        result.append(hidden.cpu().detach().numpy())

                        
        result = np.array(result)

        # self.theta = get_theta(self.ksi[1].cpu(), self.ksi[0].cpu(), GM=1, IF_NORM=1)
        # print(self.theta.shape)

        # result = result[:, self.theta.argsort()]
        # print('result', result.shape)
        
        print('Saving rates to:', self.DATA_PATH + self.FILE_NAME + '.npy')
        np.save(self.DATA_PATH + self.FILE_NAME + '.npy', result)

        for obj in gc.get_objects():
            if torch.is_tensor(obj):
                del obj

        # Manually triggering the garbage collector afterwards
        gc.collect()
        torch.cuda.empty_cache()

        end = perf_counter()

        print(\"Elapsed (with compilation) = {}s\".format((end - start)))

        return result

    def loadConfig(self, conf_file, sim_name, repo_root, **kwargs):
        # Loading configuration file
        conf_path = repo_root + '/conf/'+ conf_file
        print('Loading config from', conf_path)
        param = safe_load(open(conf_path, \"r\"))

        param[\"FILE_NAME\"] = sim_name
        param.update(kwargs)

        for k, v in param.items():
            setattr(self, k, v)

        self.DATA_PATH = repo_root + \"/data/simul/\"
        self.MAT_PATH = repo_root + \"/data/matrix/\"

        if not os.path.exists(self.DATA_PATH):
            os.makedirs(self.DATA_PATH)

        if not os.path.exists(self.MAT_PATH):
            os.makedirs(self.MAT_PATH)

        if self.FLOAT_PRECISION == 32:
            self.FLOAT = torch.float
        else:
            self.FLOAT = torch.float64

        self.device = torch.device(self.DEVICE)

    def initRates(self):
        return torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)

    def initWeights(self, i_pop, j_pop):

        Na = self.Na[i_pop]
        Nb = self.Na[j_pop]
        Kb = self.Ka[j_pop]

        Pij = torch.tensor(1.0, dtype=self.FLOAT, device=self.device)

        if 'lr' in self.STRUCTURE[i_pop, j_pop]:

            mean = torch.tensor([0.0, 0.0], dtype=self.FLOAT, device=self.device)

            # Define the covariance matrix
            covariance = torch.tensor([[1.0, self.LR_COV],
                                       [self.LR_COV, 1.0],], dtype=self.FLOAT, device=self.device)


            multivariate_normal = MultivariateNormal(mean, covariance)
            self.ksi = multivariate_normal.sample((Nb,)).T

            while torch.abs(self.ksi[0] @ self.ksi[1]) > .10:
                multivariate_normal = MultivariateNormal(mean, covariance)
                self.ksi = multivariate_normal.sample((Nb,)).T

            if self.VERBOSE:
                print('ksi', self.ksi.shape)
                print('ksi . ksi1', self.ksi[0] @ self.ksi[1])

            Pij = 1.0 + self.KAPPA[i_pop, j_pop] * (torch.outer(self.ksi[0], self.ksi[0])
                                                    + torch.outer(self.ksi[1], self.ksi[1])) / torch.sqrt(self.Ka[j_pop])
            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0

            if self.VERBOSE:
                print('Pij', Pij.shape)

        if 'cos' in self.STRUCTURE[i_pop, j_pop]:
            theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Na), dtype=self.FLOAT, device=self.device)
            phi = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(Nb), dtype=self.FLOAT, device=self.device)

            i, j = torch.meshgrid(torch.arange(Na, device=self.device), torch.arange(Nb, device=self.device), indexing=\"ij\")

            theta_diff = theta[i] - phi[j]

            if 'spec' in self.STRUCTURE[i_pop, j_pop]:
                self.KAPPA[i_pop, j_pop] = self.KAPPA[i_pop, j_pop] / torch.sqrt(Kb)

            Pij = 1.0 + 2.0 * self.KAPPA[i_pop, j_pop] * torch.cos(theta_diff - self.PHASE)

        if 'sparse' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('Sparse random connectivity ')

            Cij = self.Jab[i_pop, j_pop] * (torch.rand(Na, Nb, device=self.device) < Kb / float(Nb) * Pij)

        if 'all2all' in self.CONNECTIVITY:
            if self.VERBOSE:
                print('All to all connectivity ')

            Cij = self.Jab[i_pop, j_pop] * Pij / float(Nb)

            if self.SIGMA[i_pop, j_pop] > 0.0:
                if self.VERBOSE:
                    print('with heterogeneity, SIGMA', self.SIGMA[i_pop, j_pop])

                Hij = torch.normal(0, self.SIGMA[i_pop, j_pop], size=(Na, Nb), dtype=self.FLOAT, device=self.device)
                Cij = Cij + Hij / float(Nb)

        if self.VERBOSE:
            if \"cos\" in self.STRUCTURE[i_pop, j_pop]:
                if \"spec\" in self.STRUCTURE[i_pop, j_pop]:
                    print('with weak cosine structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())
                else:
                    print('with strong cosine structure, KAPPA', self.KAPPA[i_pop, j_pop])
            elif \"lr\" in self.STRUCTURE[i_pop, j_pop]:
                print('with weak low rank structure, KAPPA %.2f' % self.KAPPA[i_pop, j_pop].cpu().detach().numpy())

        return Cij

    def initConst(self):
        self.Na = []
        self.Ka = []

        if 'all2all' in self.CONNECTIVITY:
            self.K = 1.0

        for i_pop in range(self.N_POP):
            self.Na.append(int(self.N_NEURON * self.frac[i_pop]))
            # self.Ka.append(self.K * const.frac[i_pop])
            self.Ka.append(self.K)

        self.Na = torch.tensor(self.Na, dtype=torch.int, device=self.device)
        self.Ka = torch.tensor(self.Ka, dtype=self.FLOAT, device=self.device)
        self.csumNa = torch.cat((torch.tensor([0]), torch.cumsum(self.Na, dim=0)))

        if self.VERBOSE:
            print(\"Na\", self.Na, \"Ka\", self.Ka, \"csumNa\", self.csumNa)

        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)

        self.EXP_DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)
        self.DT_TAU = torch.ones(self.N_NEURON, dtype=self.FLOAT, device=self.device)

        for i_pop in range(self.N_POP):
            self.EXP_DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.exp(-self.DT / self.TAU[i_pop])
            self.DT_TAU[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = self.DT / self.TAU[i_pop]

        # self.EXP_DT_TAU = []
        # self.DT_TAU = []

        # for i_pop in range(self.N_POP):
        #     self.EXP_DT_TAU.append(np.exp(-self.DT / self.TAU[i_pop]))
        #     self.DT_TAU.append(self.DT / self.TAU[i_pop])

        # self.DT_TAU = torch.tensor(self.DT_TAU, dtype=self.FLOAT, device=self.device)
        # self.EXP_DT_TAU = torch.tensor(self.EXP_DT_TAU, dtype=self.FLOAT, device=self.device)


        if self.VERBOSE:
            print(\"DT\", self.DT, \"TAU\", self.TAU)

        # if self.VERBOSE:
        #     print(\"EXP_DT_TAU\", self.EXP_DT_TAU, \"DT_TAU\", self.DT_TAU)

        self.STRUCTURE = np.array(self.STRUCTURE).reshape(self.N_POP, self.N_POP)
        self.SIGMA = torch.tensor(self.SIGMA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.KAPPA = torch.tensor(self.KAPPA, dtype=self.FLOAT, device=self.device).view(self.N_POP, self.N_POP)
        self.PHASE = torch.tensor(self.PHASE * torch.pi / 180.0, dtype=self.FLOAT, device=self.device)

        # if self.VERBOSE:
        #     print(self.STRUCTURE)
        #     print(self.SIGMA)
        #     print(self.KAPPA)
        #     print(self.PHASE)


    def scaleParam(self):

        # scaling recurrent weights Jab
        if self.VERBOSE:
            print(\"Jab\", self.Jab)

        self.Jab = torch.tensor(self.Jab, dtype=self.FLOAT, device=self.device).reshape(self.N_POP, self.N_POP) * self.GAIN

        for i_pop in range(self.N_POP):
            self.Jab[:, i_pop] = self.Jab[:, i_pop] / torch.sqrt(self.Ka[i_pop])

        # if self.VERBOSE:
        #     print(\"scaled Jab\", self.Jab)

        # scaling FF weights
        if self.VERBOSE:
            print(\"Ja0\", self.Ja0)

        self.Ja0 = torch.tensor(self.Ja0, dtype=self.FLOAT, device=self.device)
        self.Ja0 = self.Ja0 * torch.sqrt(self.Ka[0]) * self.M0

        # if self.VERBOSE:
        #     print(\"scaled Ja0\", self.Ja0)

        self.VAR_FF = torch.sqrt(torch.tensor(self.VAR_FF, dtype=self.FLOAT, device=self.device))
        ff_mean = torch.tensor(0.0, dtype=self.FLOAT, device=self.device)
        self.ff_normal = Normal(ff_mean, self.VAR_FF[0])

    def update_stim(self, step):
        \"\"\"Perturb the inputs based on the simulus parameters.\"\"\"
        
        if step == 0:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(0.0)
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(0.0)
                if self.K !=1 and self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i] / torch.sqrt(self.Ka[0]))
        
        if step == self.N_STIM_ON:
            for i in range(self.N_POP):
                if self.BUMP_SWITCH[i]:
                    # self.Wab[i, i].bias.data.fill_(self.Ja0[i])
                    self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]].fill_(self.Ja0[i])
        
        if step == self.N_STIM_ON and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM ON\")
            
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
            
            # if self.PHI0 == 0:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[0] * self.I0[0] * self.M0)
            # if self.PHI0 == 180:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[0] * self.I0[0] * self.M0)
            
            # if self.PHI0 == 90:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 + self.ksi[1] * self.I0[0] * self.M0)
            # if self.PHI0 == 270:
            #     self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] * (1.0 - self.ksi[1] * self.I0[0] * self.M0)
                            
            
        if step == self.N_STIM_OFF and np.any(self.I0!=0):
            if self.VERBOSE:
                print(\"STIM OFF\")
            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0]

            # for i in range(self.N_POP):
            #     self.Wab[i, i].bias.data.fill_(self.Ja0[i])
        
    def stimFunc(self, i_pop):
        \"\"\"Stimulus shape\"\"\"
        theta = torch.arange(0, 2.0 * torch.pi, 2.0 * torch.pi / float(self.Na[i_pop]), dtype=self.FLOAT, device=self.device)
        return self.I0[i_pop] * (1.0 + self.SIGMA0 * torch.cos(theta - self.PHI0 * torch.pi / 180.0)) * torch.sqrt(self.Ka[0]) * self.M0
" 0 6 (face tree-sitter-hl-face:keyword fontified nil) 6 10 (fontified nil) 10 16 (face tree-sitter-hl-face:keyword fontified nil) 16 20 (fontified nil) 20 26 (face tree-sitter-hl-face:keyword fontified nil) 26 33 (fontified nil) 33 35 (face tree-sitter-hl-face:keyword fontified nil) 35 39 (fontified nil) 39 40 (fontified nil) 40 46 (face tree-sitter-hl-face:keyword fontified nil) 46 53 (fontified nil) 53 57 (face tree-sitter-hl-face:keyword fontified nil) 57 64 (fontified nil) 64 70 (face tree-sitter-hl-face:keyword fontified nil) 70 74 (fontified nil) 74 78 (face tree-sitter-hl-face:keyword fontified nil) 78 99 (fontified nil) 99 105 (face tree-sitter-hl-face:keyword fontified nil) 105 106 (fontified nil) 106 112 (face tree-sitter-hl-face:constructor fontified nil) 112 114 (fontified nil) 114 132 (face tree-sitter-hl-face:constructor fontified nil) 132 133 (fontified nil) 133 134 (fontified nil) 134 138 (face tree-sitter-hl-face:keyword fontified nil) 138 144 (fontified nil) 144 150 (face tree-sitter-hl-face:keyword fontified nil) 150 161 (fontified nil) 161 165 (face tree-sitter-hl-face:keyword fontified nil) 165 171 (fontified nil) 171 177 (face tree-sitter-hl-face:keyword fontified nil) 177 191 (fontified nil) 191 192 (fontified nil) 192 196 (face tree-sitter-hl-face:keyword fontified nil) 196 207 (fontified nil) 207 213 (face tree-sitter-hl-face:keyword fontified nil) 213 223 (fontified nil) 223 227 (face tree-sitter-hl-face:keyword fontified nil) 227 243 (fontified nil) 243 249 (face tree-sitter-hl-face:keyword fontified nil) 249 250 (fontified nil) 250 260 (face tree-sitter-hl-face:constructor fontified nil) 260 261 (fontified nil) 261 298 (face tree-sitter-hl-face:comment fontified nil) 298 299 (fontified nil) 299 300 (fontified nil) 300 306 (face tree-sitter-hl-face:keyword fontified nil) 306 316 (fontified nil) 316 325 (fontified nil) 325 339 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 339 340 (face (rainbow-delimiters-depth-1-face) fontified nil) 340 341 (face tree-sitter-hl-face:string fontified nil) 341 347 (face tree-sitter-hl-face:string fontified nil) 347 348 (face tree-sitter-hl-face:string fontified nil) 348 349 (face (rainbow-delimiters-depth-1-face) fontified nil) 349 350 (fontified nil) 350 352 (fontified nil) 352 357 (face tree-sitter-hl-face:keyword fontified nil) 357 358 (fontified nil) 358 365 (face tree-sitter-hl-face:constructor fontified nil) 365 366 (face (rainbow-delimiters-depth-1-face) fontified nil) 366 369 (fontified nil) 369 375 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 375 376 (face (rainbow-delimiters-depth-1-face) fontified nil) 376 378 (fontified nil) 378 382 (fontified nil) 382 385 (face tree-sitter-hl-face:keyword fontified nil) 385 386 (fontified nil) 386 394 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 394 395 (face (rainbow-delimiters-depth-1-face) fontified nil) 395 399 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 399 401 (fontified nil) 401 410 (face tree-sitter-hl-face:variable.parameter fontified nil) 410 412 (fontified nil) 412 420 (face tree-sitter-hl-face:variable.parameter fontified nil) 420 422 (fontified nil) 422 431 (face tree-sitter-hl-face:variable.parameter fontified nil) 431 433 (fontified nil) 433 435 (face tree-sitter-hl-face:operator fontified nil) 435 441 (face tree-sitter-hl-face:variable.parameter fontified nil) 441 442 (face (rainbow-delimiters-depth-1-face) fontified nil) 442 444 (fontified nil) 444 452 (fontified nil) 452 457 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 457 458 (face (rainbow-delimiters-depth-1-face) fontified nil) 458 459 (face (rainbow-delimiters-depth-1-face) fontified nil) 459 460 (fontified nil) 460 468 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 468 469 (face (rainbow-delimiters-depth-1-face) fontified nil) 469 470 (face (rainbow-delimiters-depth-1-face) fontified nil) 470 471 (fontified nil) 471 480 (fontified nil) 480 497 (face tree-sitter-hl-face:comment fontified nil) 497 498 (fontified nil) 498 506 (fontified nil) 506 510 (face tree-sitter-hl-face:keyword fontified nil) 510 511 (fontified nil) 511 521 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 521 522 (face (rainbow-delimiters-depth-1-face) fontified nil) 522 554 (fontified nil) 554 556 (face tree-sitter-hl-face:operator fontified nil) 556 562 (fontified nil) 562 563 (face (rainbow-delimiters-depth-1-face) fontified nil) 563 564 (fontified nil) 564 573 (fontified nil) 573 583 (face tree-sitter-hl-face:comment fontified nil) 583 584 (fontified nil) 584 592 (fontified nil) 592 596 (face tree-sitter-hl-face:keyword fontified nil) 596 597 (fontified nil) 597 606 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 606 607 (face (rainbow-delimiters-depth-1-face) fontified nil) 607 608 (face (rainbow-delimiters-depth-1-face) fontified nil) 608 609 (fontified nil) 609 618 (fontified nil) 618 636 (face tree-sitter-hl-face:comment fontified nil) 636 637 (fontified nil) 637 645 (fontified nil) 645 649 (face tree-sitter-hl-face:keyword fontified nil) 649 650 (fontified nil) 650 660 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 660 661 (face (rainbow-delimiters-depth-1-face) fontified nil) 661 662 (face (rainbow-delimiters-depth-1-face) fontified nil) 662 663 (fontified nil) 663 672 (fontified nil) 672 690 (face tree-sitter-hl-face:comment fontified nil) 690 691 (fontified nil) 691 699 (fontified nil) 699 707 (face tree-sitter-hl-face:function.call fontified nil) 707 708 (face (rainbow-delimiters-depth-1-face) fontified nil) 708 712 (face tree-sitter-hl-face:keyword fontified nil) 712 713 (fontified nil) 713 717 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 717 718 (face (rainbow-delimiters-depth-1-face) fontified nil) 718 719 (fontified nil) 719 728 (fontified nil) 728 756 (face tree-sitter-hl-face:comment fontified nil) 756 757 (fontified nil) 757 765 (fontified nil) 765 769 (face tree-sitter-hl-face:keyword fontified nil) 769 770 (fontified nil) 770 773 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 773 774 (fontified nil) 774 775 (face tree-sitter-hl-face:operator fontified nil) 775 779 (fontified nil) 779 785 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 785 786 (face (rainbow-delimiters-depth-1-face) fontified nil) 786 790 (face tree-sitter-hl-face:keyword fontified nil) 790 791 (fontified nil) 791 799 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 799 801 (fontified nil) 801 805 (face tree-sitter-hl-face:keyword fontified nil) 805 806 (fontified nil) 806 814 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 814 816 (fontified nil) 816 820 (face tree-sitter-hl-face:label fontified nil) 820 821 (face tree-sitter-hl-face:operator fontified nil) 821 825 (face tree-sitter-hl-face:constant.builtin fontified nil) 825 827 (fontified nil) 827 832 (face tree-sitter-hl-face:label fontified nil) 832 833 (face tree-sitter-hl-face:operator fontified nil) 833 837 (face tree-sitter-hl-face:keyword fontified nil) 837 838 (fontified nil) 838 843 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 843 845 (fontified nil) 845 851 (face tree-sitter-hl-face:label fontified nil) 851 852 (face tree-sitter-hl-face:operator fontified nil) 852 856 (face tree-sitter-hl-face:keyword fontified nil) 856 857 (fontified nil) 857 863 (face tree-sitter-hl-face:property fontified nil) 863 864 (face (rainbow-delimiters-depth-1-face) fontified nil) 864 865 (fontified nil) 865 874 (fontified nil) 874 877 (face tree-sitter-hl-face:keyword fontified nil) 877 878 (fontified nil) 878 883 (face tree-sitter-hl-face:variable fontified nil) 883 884 (fontified nil) 884 886 (face tree-sitter-hl-face:operator fontified nil) 886 887 (fontified nil) 887 892 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 892 893 (face (rainbow-delimiters-depth-1-face) fontified nil) 893 897 (face tree-sitter-hl-face:keyword fontified nil) 897 898 (fontified nil) 898 903 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 903 904 (face (rainbow-delimiters-depth-1-face) fontified nil) 904 906 (fontified nil) 906 918 (fontified nil) 918 921 (face tree-sitter-hl-face:keyword fontified nil) 921 922 (fontified nil) 922 927 (face tree-sitter-hl-face:variable fontified nil) 927 928 (fontified nil) 928 930 (face tree-sitter-hl-face:operator fontified nil) 930 931 (fontified nil) 931 936 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 936 937 (face (rainbow-delimiters-depth-1-face) fontified nil) 937 941 (face tree-sitter-hl-face:keyword fontified nil) 941 942 (fontified nil) 942 947 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 947 948 (face (rainbow-delimiters-depth-1-face) fontified nil) 948 950 (fontified nil) 950 966 (fontified nil) 966 968 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 968 969 (fontified nil) 969 970 (face tree-sitter-hl-face:operator fontified nil) 970 971 (fontified nil) 971 975 (face tree-sitter-hl-face:keyword fontified nil) 975 976 (fontified nil) 976 987 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 987 988 (face (rainbow-delimiters-depth-1-face) fontified nil) 988 1000 (fontified nil) 1000 1001 (face (rainbow-delimiters-depth-1-face) fontified nil) 1001 1002 (fontified nil) 1002 1035 (fontified nil) 1035 1039 (face tree-sitter-hl-face:keyword fontified nil) 1039 1040 (fontified nil) 1040 1043 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1043 1044 (fontified nil) 1044 1050 (face tree-sitter-hl-face:property fontified nil) 1050 1051 (fontified nil) 1051 1055 (face tree-sitter-hl-face:property fontified nil) 1055 1056 (face (rainbow-delimiters-depth-1-face) fontified nil) 1056 1060 (face tree-sitter-hl-face:keyword fontified nil) 1060 1061 (fontified nil) 1061 1067 (face tree-sitter-hl-face:property fontified nil) 1067 1068 (face (rainbow-delimiters-depth-2-face) fontified nil) 1068 1073 (fontified nil) 1073 1074 (face (rainbow-delimiters-depth-2-face) fontified nil) 1074 1077 (fontified nil) 1077 1081 (face tree-sitter-hl-face:keyword fontified nil) 1081 1082 (fontified nil) 1082 1088 (face tree-sitter-hl-face:property fontified nil) 1088 1089 (face (rainbow-delimiters-depth-2-face) fontified nil) 1089 1095 (fontified nil) 1095 1096 (face tree-sitter-hl-face:operator fontified nil) 1096 1097 (fontified nil) 1097 1098 (face tree-sitter-hl-face:number fontified nil) 1098 1099 (face (rainbow-delimiters-depth-2-face) fontified nil) 1099 1101 (fontified nil) 1101 1138 (fontified nil) 1138 1142 (face tree-sitter-hl-face:keyword fontified nil) 1142 1143 (fontified nil) 1143 1149 (face tree-sitter-hl-face:property fontified nil) 1149 1150 (face (rainbow-delimiters-depth-2-face) fontified nil) 1150 1155 (fontified nil) 1155 1156 (face (rainbow-delimiters-depth-2-face) fontified nil) 1156 1159 (fontified nil) 1159 1163 (face tree-sitter-hl-face:keyword fontified nil) 1163 1164 (fontified nil) 1164 1170 (face tree-sitter-hl-face:property fontified nil) 1170 1171 (face (rainbow-delimiters-depth-2-face) fontified nil) 1171 1177 (fontified nil) 1177 1178 (face tree-sitter-hl-face:operator fontified nil) 1178 1179 (fontified nil) 1179 1180 (face tree-sitter-hl-face:number fontified nil) 1180 1181 (face (rainbow-delimiters-depth-2-face) fontified nil) 1181 1182 (face (rainbow-delimiters-depth-1-face) fontified nil) 1182 1183 (fontified nil) 1183 1184 (face tree-sitter-hl-face:operator fontified nil) 1184 1185 (fontified nil) 1185 1187 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil) 1187 1188 (fontified nil) 1188 1205 (fontified nil) 1205 1260 (face tree-sitter-hl-face:comment fontified nil) 1260 1261 (fontified nil) 1261 1269 (fontified nil) 1269 1272 (face tree-sitter-hl-face:keyword fontified nil) 1272 1273 (fontified nil) 1273 1278 (face tree-sitter-hl-face:variable fontified nil) 1278 1279 (fontified nil) 1279 1281 (face tree-sitter-hl-face:operator fontified nil) 1281 1282 (fontified nil) 1282 1287 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 1287 1288 (face (rainbow-delimiters-depth-1-face) fontified nil) 1288 1292 (face tree-sitter-hl-face:keyword fontified nil) 1292 1293 (fontified nil) 1293 1298 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1298 1299 (face (rainbow-delimiters-depth-1-face) fontified nil) 1299 1301 (fontified nil) 1301 1313 (fontified nil) 1313 1317 (face tree-sitter-hl-face:keyword fontified nil) 1317 1318 (fontified nil) 1318 1321 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1321 1322 (fontified nil) 1322 1326 (face tree-sitter-hl-face:property fontified nil) 1326 1327 (fontified nil) 1327 1331 (face tree-sitter-hl-face:property fontified nil) 1331 1332 (face (rainbow-delimiters-depth-1-face) fontified nil) 1332 1336 (face tree-sitter-hl-face:keyword fontified nil) 1336 1337 (fontified nil) 1337 1343 (face tree-sitter-hl-face:property fontified nil) 1343 1344 (face (rainbow-delimiters-depth-2-face) fontified nil) 1344 1349 (fontified nil) 1349 1350 (face (rainbow-delimiters-depth-2-face) fontified nil) 1350 1353 (fontified nil) 1353 1357 (face tree-sitter-hl-face:keyword fontified nil) 1357 1358 (fontified nil) 1358 1364 (face tree-sitter-hl-face:property fontified nil) 1364 1365 (face (rainbow-delimiters-depth-2-face) fontified nil) 1365 1371 (fontified nil) 1371 1372 (face tree-sitter-hl-face:operator fontified nil) 1372 1373 (fontified nil) 1373 1374 (face tree-sitter-hl-face:number fontified nil) 1374 1375 (face (rainbow-delimiters-depth-2-face) fontified nil) 1375 1376 (face (rainbow-delimiters-depth-1-face) fontified nil) 1376 1377 (fontified nil) 1377 1382 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1382 1383 (face (rainbow-delimiters-depth-1-face) fontified nil) 1383 1387 (face tree-sitter-hl-face:keyword fontified nil) 1387 1388 (fontified nil) 1388 1391 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1391 1392 (face (rainbow-delimiters-depth-2-face) fontified nil) 1392 1397 (fontified nil) 1397 1398 (face (rainbow-delimiters-depth-2-face) fontified nil) 1398 1399 (face (rainbow-delimiters-depth-1-face) fontified nil) 1399 1400 (fontified nil) 1400 1417 (fontified nil) 1417 1434 (face tree-sitter-hl-face:comment fontified nil) 1434 1435 (fontified nil) 1435 1443 (fontified nil) 1443 1451 (face tree-sitter-hl-face:function.call fontified nil) 1451 1452 (face (rainbow-delimiters-depth-1-face) fontified nil) 1452 1453 (face tree-sitter-hl-face:number fontified nil) 1453 1454 (face (rainbow-delimiters-depth-1-face) fontified nil) 1454 1455 (fontified nil) 1455 1461 (fontified nil) 1461 1464 (face tree-sitter-hl-face:keyword fontified nil) 1464 1465 (fontified nil) 1465 1481 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 1481 1482 (face (rainbow-delimiters-depth-1-face) fontified nil) 1482 1486 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 1486 1488 (fontified nil) 1488 1493 (face tree-sitter-hl-face:variable.parameter fontified nil) 1493 1494 (face (rainbow-delimiters-depth-1-face) fontified nil) 1494 1496 (fontified nil) 1496 1500 (fontified nil) 1500 1504 (fontified nil) 1504 1506 (face tree-sitter-hl-face:string fontified nil) 1506 1507 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 1507 1539 (face tree-sitter-hl-face:string fontified nil) 1539 1540 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 1540 1542 (face tree-sitter-hl-face:string fontified nil) 1542 1551 (fontified nil) 1551 1560 (face tree-sitter-hl-face:variable fontified nil) 1560 1561 (fontified nil) 1561 1562 (face tree-sitter-hl-face:operator fontified nil) 1562 1563 (fontified nil) 1563 1567 (face tree-sitter-hl-face:keyword fontified nil) 1567 1568 (fontified nil) 1568 1571 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1571 1572 (face (rainbow-delimiters-depth-1-face) fontified nil) 1572 1577 (fontified nil) 1577 1578 (face (rainbow-delimiters-depth-1-face) fontified nil) 1578 1588 (fontified nil) 1588 1594 (face tree-sitter-hl-face:keyword fontified nil) 1594 1610 (fontified nil) 1610 1613 (face tree-sitter-hl-face:keyword fontified nil) 1613 1614 (fontified nil) 1614 1630 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 1630 1631 (face (rainbow-delimiters-depth-1-face) fontified nil) 1631 1635 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 1635 1637 (fontified nil) 1637 1646 (face tree-sitter-hl-face:variable.parameter fontified nil) 1646 1647 (face (rainbow-delimiters-depth-1-face) fontified nil) 1647 1657 (fontified nil) 1657 1659 (face tree-sitter-hl-face:string fontified nil) 1659 1660 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 1660 1699 (face tree-sitter-hl-face:string fontified nil) 1699 1700 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 1700 1702 (face tree-sitter-hl-face:string fontified nil) 1702 1712 (fontified nil) 1712 1798 (face tree-sitter-hl-face:comment fontified nil) 1798 1807 (fontified nil) 1807 1812 (face tree-sitter-hl-face:variable fontified nil) 1812 1813 (fontified nil) 1813 1814 (face tree-sitter-hl-face:operator fontified nil) 1814 1815 (fontified nil) 1815 1819 (face tree-sitter-hl-face:keyword fontified nil) 1819 1820 (fontified nil) 1820 1829 (face tree-sitter-hl-face:property fontified nil) 1829 1830 (fontified nil) 1830 1836 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1836 1837 (face (rainbow-delimiters-depth-1-face) fontified nil) 1837 1838 (face (rainbow-delimiters-depth-2-face) fontified nil) 1838 1842 (face tree-sitter-hl-face:keyword fontified nil) 1842 1843 (fontified nil) 1843 1851 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1851 1852 (fontified nil) 1852 1853 (face (rainbow-delimiters-depth-2-face) fontified nil) 1853 1854 (face (rainbow-delimiters-depth-1-face) fontified nil) 1854 1855 (fontified nil) 1855 1862 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 1862 1863 (face (rainbow-delimiters-depth-1-face) fontified nil) 1863 1864 (face tree-sitter-hl-face:number fontified nil) 1864 1865 (face (rainbow-delimiters-depth-1-face) fontified nil) 1865 1874 (fontified nil) 1874 1883 (face tree-sitter-hl-face:variable fontified nil) 1883 1884 (fontified nil) 1884 1885 (face tree-sitter-hl-face:operator fontified nil) 1885 1892 (fontified nil) 1892 1893 (face tree-sitter-hl-face:operator fontified nil) 1893 1913 (fontified nil) 1913 1919 (face tree-sitter-hl-face:keyword fontified nil) 1919 1935 (fontified nil) 1935 1938 (face tree-sitter-hl-face:keyword fontified nil) 1938 1939 (fontified nil) 1939 1951 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 1951 1952 (face (rainbow-delimiters-depth-1-face) fontified nil) 1952 1956 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 1956 1958 (fontified nil) 1958 1963 (face tree-sitter-hl-face:variable.parameter fontified nil) 1963 1965 (fontified nil) 1965 1974 (face tree-sitter-hl-face:variable.parameter fontified nil) 1974 1975 (face (rainbow-delimiters-depth-1-face) fontified nil) 1975 1985 (fontified nil) 1985 1987 (face tree-sitter-hl-face:string fontified nil) 1987 1988 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 1988 2009 (face tree-sitter-hl-face:string fontified nil) 2009 2010 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 2010 2012 (face tree-sitter-hl-face:string fontified nil) 2012 2021 (fontified nil) 2021 2064 (face tree-sitter-hl-face:comment fontified nil) 2064 2073 (fontified nil) 2073 2075 (face tree-sitter-hl-face:keyword fontified nil) 2075 2076 (fontified nil) 2076 2080 (face tree-sitter-hl-face:keyword fontified nil) 2080 2081 (fontified nil) 2081 2089 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2089 2103 (fontified nil) 2103 2108 (face tree-sitter-hl-face:variable fontified nil) 2108 2109 (fontified nil) 2109 2110 (face tree-sitter-hl-face:operator fontified nil) 2110 2111 (fontified nil) 2111 2115 (face tree-sitter-hl-face:keyword fontified nil) 2115 2116 (fontified nil) 2116 2126 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2126 2127 (fontified nil) 2127 2128 (face tree-sitter-hl-face:operator fontified nil) 2128 2135 (fontified nil) 2135 2136 (face tree-sitter-hl-face:operator fontified nil) 2136 2137 (fontified nil) 2137 2141 (face tree-sitter-hl-face:keyword fontified nil) 2141 2142 (fontified nil) 2142 2148 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2148 2149 (fontified nil) 2149 2150 (face tree-sitter-hl-face:operator fontified nil) 2150 2151 (fontified nil) 2151 2161 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 2161 2162 (face (rainbow-delimiters-depth-1-face) fontified nil) 2162 2166 (face tree-sitter-hl-face:keyword fontified nil) 2166 2167 (fontified nil) 2167 2174 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2174 2176 (fontified nil) 2176 2180 (face tree-sitter-hl-face:keyword fontified nil) 2180 2181 (fontified nil) 2181 2187 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2187 2188 (face (rainbow-delimiters-depth-2-face) fontified nil) 2188 2189 (face tree-sitter-hl-face:number fontified nil) 2189 2190 (face (rainbow-delimiters-depth-2-face) fontified nil) 2190 2191 (face (rainbow-delimiters-depth-1-face) fontified nil) 2191 2192 (face (rainbow-delimiters-depth-1-face) fontified nil) 2192 2201 (fontified nil) 2201 2202 (face (rainbow-delimiters-depth-1-face) fontified nil) 2202 2211 (fontified nil) 2211 2215 (face tree-sitter-hl-face:keyword fontified nil) 2215 2229 (fontified nil) 2229 2234 (face tree-sitter-hl-face:variable fontified nil) 2234 2235 (fontified nil) 2235 2236 (face tree-sitter-hl-face:operator fontified nil) 2236 2237 (fontified nil) 2237 2247 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 2247 2248 (face (rainbow-delimiters-depth-1-face) fontified nil) 2248 2249 (face (rainbow-delimiters-depth-1-face) fontified nil) 2249 2250 (face (rainbow-delimiters-depth-1-face) fontified nil) 2250 2259 (fontified nil) 2259 2260 (face (rainbow-delimiters-depth-1-face) fontified nil) 2260 2270 (fontified nil) 2270 2276 (face tree-sitter-hl-face:keyword fontified nil) 2276 2288 (fontified nil) 2288 2291 (face tree-sitter-hl-face:keyword fontified nil) 2291 2292 (fontified nil) 2292 2299 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 2299 2300 (face (rainbow-delimiters-depth-1-face) fontified nil) 2300 2304 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 2304 2306 (fontified nil) 2306 2311 (face tree-sitter-hl-face:variable.parameter fontified nil) 2311 2312 (face (rainbow-delimiters-depth-1-face) fontified nil) 2312 2322 (fontified nil) 2322 2324 (face tree-sitter-hl-face:string fontified nil) 2324 2325 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 2325 2363 (face tree-sitter-hl-face:string fontified nil) 2363 2364 (syntax-table (15) face tree-sitter-hl-face:string fontified nil) 2364 2366 (face tree-sitter-hl-face:string fontified nil) 2366 2375 (fontified nil) 2375 2384 (face tree-sitter-hl-face:variable fontified nil) 2384 2385 (fontified nil) 2385 2386 (face tree-sitter-hl-face:operator fontified nil) 2386 2387 (fontified nil) 2387 2391 (face tree-sitter-hl-face:keyword fontified nil) 2391 2392 (fontified nil) 2392 2408 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2408 2409 (face (rainbow-delimiters-depth-1-face) fontified nil) 2409 2414 (fontified nil) 2414 2415 (face (rainbow-delimiters-depth-1-face) fontified nil) 2415 2424 (fontified nil) 2424 2433 (face tree-sitter-hl-face:variable fontified nil) 2433 2434 (fontified nil) 2434 2435 (face tree-sitter-hl-face:operator fontified nil) 2435 2436 (fontified nil) 2436 2440 (face tree-sitter-hl-face:keyword fontified nil) 2440 2441 (fontified nil) 2441 2457 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2457 2458 (face (rainbow-delimiters-depth-1-face) fontified nil) 2458 2467 (fontified nil) 2467 2468 (face (rainbow-delimiters-depth-1-face) fontified nil) 2468 2477 (fontified nil) 2477 2482 (face tree-sitter-hl-face:variable fontified nil) 2482 2483 (fontified nil) 2483 2484 (face tree-sitter-hl-face:operator fontified nil) 2484 2485 (fontified nil) 2485 2489 (face tree-sitter-hl-face:keyword fontified nil) 2489 2490 (fontified nil) 2490 2502 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2502 2503 (face (rainbow-delimiters-depth-1-face) fontified nil) 2503 2519 (fontified nil) 2519 2520 (face (rainbow-delimiters-depth-1-face) fontified nil) 2520 2530 (fontified nil) 2530 2536 (face tree-sitter-hl-face:keyword fontified nil) 2536 2548 (fontified nil) 2548 2551 (face tree-sitter-hl-face:keyword fontified nil) 2551 2552 (fontified nil) 2552 2566 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 2566 2567 (face (rainbow-delimiters-depth-1-face) fontified nil) 2567 2571 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 2571 2573 (fontified nil) 2573 2577 (face tree-sitter-hl-face:variable.parameter fontified nil) 2577 2579 (fontified nil) 2579 2584 (face tree-sitter-hl-face:variable.parameter fontified nil) 2584 2585 (face (rainbow-delimiters-depth-1-face) fontified nil) 2585 2596 (fontified nil) 2596 2601 (face tree-sitter-hl-face:variable fontified nil) 2601 2602 (fontified nil) 2602 2603 (face tree-sitter-hl-face:operator fontified nil) 2603 2607 (fontified nil) 2607 2612 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2612 2613 (face (rainbow-delimiters-depth-1-face) fontified nil) 2613 2614 (face (rainbow-delimiters-depth-2-face) fontified nil) 2614 2619 (fontified nil) 2619 2620 (face tree-sitter-hl-face:operator fontified nil) 2620 2621 (fontified nil) 2621 2625 (face tree-sitter-hl-face:keyword fontified nil) 2625 2626 (fontified nil) 2626 2634 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2634 2635 (face (rainbow-delimiters-depth-2-face) fontified nil) 2635 2636 (fontified nil) 2636 2637 (face tree-sitter-hl-face:operator fontified nil) 2637 2638 (fontified nil) 2638 2642 (face tree-sitter-hl-face:keyword fontified nil) 2642 2643 (fontified nil) 2643 2650 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2650 2651 (fontified nil) 2651 2652 (face tree-sitter-hl-face:operator fontified nil) 2652 2653 (fontified nil) 2653 2657 (face tree-sitter-hl-face:keyword fontified nil) 2657 2658 (fontified nil) 2658 2666 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2666 2668 (fontified nil) 2668 2669 (face tree-sitter-hl-face:number fontified nil) 2669 2670 (face (rainbow-delimiters-depth-1-face) fontified nil) 2670 2680 (fontified nil) 2680 2688 (face tree-sitter-hl-face:variable fontified nil) 2688 2689 (fontified nil) 2689 2690 (face tree-sitter-hl-face:operator fontified nil) 2690 2691 (fontified nil) 2691 2692 (face (rainbow-delimiters-depth-1-face) fontified nil) 2692 2693 (face (rainbow-delimiters-depth-1-face) fontified nil) 2693 2712 (fontified nil) 2712 2718 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2718 2719 (face (rainbow-delimiters-depth-1-face) fontified nil) 2719 2722 (fontified nil) 2722 2727 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2727 2728 (face (rainbow-delimiters-depth-2-face) fontified nil) 2728 2734 (fontified nil) 2734 2738 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2738 2739 (face (rainbow-delimiters-depth-3-face) fontified nil) 2739 2744 (fontified nil) 2744 2745 (face (rainbow-delimiters-depth-4-face) fontified nil) 2745 2746 (fontified nil) 2746 2750 (face tree-sitter-hl-face:keyword fontified nil) 2750 2751 (fontified nil) 2751 2757 (face tree-sitter-hl-face:property fontified nil) 2757 2758 (face (rainbow-delimiters-depth-5-face) fontified nil) 2758 2759 (face tree-sitter-hl-face:number fontified nil) 2759 2760 (face (rainbow-delimiters-depth-5-face) fontified nil) 2760 2761 (face (rainbow-delimiters-depth-4-face) fontified nil) 2761 2762 (face (rainbow-delimiters-depth-3-face) fontified nil) 2762 2763 (fontified nil) 2763 2766 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2766 2767 (face (rainbow-delimiters-depth-3-face) fontified nil) 2767 2768 (face (rainbow-delimiters-depth-3-face) fontified nil) 2768 2769 (fontified nil) 2769 2775 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2775 2776 (face (rainbow-delimiters-depth-3-face) fontified nil) 2776 2777 (face (rainbow-delimiters-depth-3-face) fontified nil) 2777 2778 (fontified nil) 2778 2783 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2783 2784 (face (rainbow-delimiters-depth-3-face) fontified nil) 2784 2785 (face (rainbow-delimiters-depth-3-face) fontified nil) 2785 2787 (fontified nil) 2787 2788 (face tree-sitter-hl-face:number fontified nil) 2788 2789 (face (rainbow-delimiters-depth-2-face) fontified nil) 2789 2790 (face (rainbow-delimiters-depth-1-face) fontified nil) 2790 2800 (fontified nil) 2800 2802 (face tree-sitter-hl-face:keyword fontified nil) 2802 2803 (fontified nil) 2803 2807 (face tree-sitter-hl-face:keyword fontified nil) 2807 2808 (fontified nil) 2808 2813 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2813 2814 (fontified nil) 2814 2815 (face tree-sitter-hl-face:operator fontified nil) 2815 2816 (fontified nil) 2816 2817 (face tree-sitter-hl-face:number fontified nil) 2817 2840 (fontified nil) 2840 2846 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2846 2847 (face (rainbow-delimiters-depth-1-face) fontified nil) 2847 2850 (fontified nil) 2850 2855 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2855 2856 (face (rainbow-delimiters-depth-2-face) fontified nil) 2856 2862 (fontified nil) 2862 2866 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2866 2867 (face (rainbow-delimiters-depth-3-face) fontified nil) 2867 2872 (fontified nil) 2872 2873 (face (rainbow-delimiters-depth-4-face) fontified nil) 2873 2877 (face tree-sitter-hl-face:keyword fontified nil) 2877 2878 (fontified nil) 2878 2884 (face tree-sitter-hl-face:property fontified nil) 2884 2885 (face (rainbow-delimiters-depth-5-face) fontified nil) 2885 2886 (face tree-sitter-hl-face:number fontified nil) 2886 2887 (face (rainbow-delimiters-depth-5-face) fontified nil) 2887 2888 (fontified nil) 2888 2892 (face tree-sitter-hl-face:keyword fontified nil) 2892 2893 (fontified nil) 2893 2899 (face tree-sitter-hl-face:property fontified nil) 2899 2900 (face (rainbow-delimiters-depth-5-face) fontified nil) 2900 2901 (face tree-sitter-hl-face:number fontified nil) 2901 2902 (face (rainbow-delimiters-depth-5-face) fontified nil) 2902 2903 (face (rainbow-delimiters-depth-4-face) fontified nil) 2903 2904 (face (rainbow-delimiters-depth-3-face) fontified nil) 2904 2905 (fontified nil) 2905 2908 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2908 2909 (face (rainbow-delimiters-depth-3-face) fontified nil) 2909 2910 (face (rainbow-delimiters-depth-3-face) fontified nil) 2910 2911 (fontified nil) 2911 2917 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2917 2918 (face (rainbow-delimiters-depth-3-face) fontified nil) 2918 2919 (face (rainbow-delimiters-depth-3-face) fontified nil) 2919 2920 (fontified nil) 2920 2925 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2925 2926 (face (rainbow-delimiters-depth-3-face) fontified nil) 2926 2927 (face (rainbow-delimiters-depth-3-face) fontified nil) 2927 2929 (fontified nil) 2929 2930 (face tree-sitter-hl-face:number fontified nil) 2930 2931 (face (rainbow-delimiters-depth-2-face) fontified nil) 2931 2932 (face (rainbow-delimiters-depth-1-face) fontified nil) 2932 2942 (fontified nil) 2942 2944 (face tree-sitter-hl-face:keyword fontified nil) 2944 2945 (fontified nil) 2945 2949 (face tree-sitter-hl-face:keyword fontified nil) 2949 2950 (fontified nil) 2950 2955 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 2955 2956 (fontified nil) 2956 2957 (face tree-sitter-hl-face:operator fontified nil) 2957 2958 (fontified nil) 2958 2959 (face tree-sitter-hl-face:number fontified nil) 2959 2982 (fontified nil) 2982 2988 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2988 2989 (face (rainbow-delimiters-depth-1-face) fontified nil) 2989 2992 (fontified nil) 2992 2997 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 2997 2998 (face (rainbow-delimiters-depth-2-face) fontified nil) 2998 3000 (fontified nil) 3000 3004 (fontified nil) 3004 3008 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3008 3009 (face (rainbow-delimiters-depth-3-face) fontified nil) 3009 3014 (fontified nil) 3014 3015 (face (rainbow-delimiters-depth-4-face) fontified nil) 3015 3019 (face tree-sitter-hl-face:keyword fontified nil) 3019 3020 (fontified nil) 3020 3026 (face tree-sitter-hl-face:property fontified nil) 3026 3027 (face (rainbow-delimiters-depth-5-face) fontified nil) 3027 3028 (face tree-sitter-hl-face:number fontified nil) 3028 3029 (face (rainbow-delimiters-depth-5-face) fontified nil) 3029 3030 (fontified nil) 3030 3031 (face (rainbow-delimiters-depth-4-face) fontified nil) 3031 3032 (face (rainbow-delimiters-depth-3-face) fontified nil) 3032 3033 (fontified nil) 3033 3036 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3036 3037 (face (rainbow-delimiters-depth-3-face) fontified nil) 3037 3038 (face (rainbow-delimiters-depth-3-face) fontified nil) 3038 3039 (fontified nil) 3039 3045 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3045 3046 (face (rainbow-delimiters-depth-3-face) fontified nil) 3046 3047 (face (rainbow-delimiters-depth-3-face) fontified nil) 3047 3048 (fontified nil) 3048 3053 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3053 3054 (face (rainbow-delimiters-depth-3-face) fontified nil) 3054 3055 (face (rainbow-delimiters-depth-3-face) fontified nil) 3055 3057 (fontified nil) 3057 3058 (face tree-sitter-hl-face:number fontified nil) 3058 3059 (face (rainbow-delimiters-depth-2-face) fontified nil) 3059 3060 (face (rainbow-delimiters-depth-1-face) fontified nil) 3060 3070 (fontified nil) 3070 3075 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3075 3076 (face (rainbow-delimiters-depth-1-face) fontified nil) 3076 3089 (fontified nil) 3089 3090 (face tree-sitter-hl-face:string fontified nil) 3090 3099 (face tree-sitter-hl-face:string fontified nil) 3099 3100 (face tree-sitter-hl-face:string fontified nil) 3100 3117 (fontified nil) 3117 3122 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3122 3123 (face (rainbow-delimiters-depth-2-face) fontified nil) 3123 3130 (fontified nil) 3130 3131 (face tree-sitter-hl-face:number fontified nil) 3131 3132 (face (rainbow-delimiters-depth-2-face) fontified nil) 3132 3146 (fontified nil) 3146 3147 (face tree-sitter-hl-face:string fontified nil) 3147 3157 (face tree-sitter-hl-face:string fontified nil) 3157 3158 (face tree-sitter-hl-face:string fontified nil) 3158 3190 (fontified nil) 3190 3191 (face (rainbow-delimiters-depth-1-face) fontified nil) 3191 3198 (fontified nil) 3198 3201 (face tree-sitter-hl-face:keyword fontified nil) 3201 3202 (fontified nil) 3202 3205 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 3205 3206 (face (rainbow-delimiters-depth-1-face) fontified nil) 3206 3210 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 3210 3211 (face (rainbow-delimiters-depth-1-face) fontified nil) 3211 3221 (fontified nil) 3221 3233 (face tree-sitter-hl-face:comment fontified nil) 3233 3242 (fontified nil) 3242 3248 (face tree-sitter-hl-face:variable fontified nil) 3248 3249 (fontified nil) 3249 3250 (face tree-sitter-hl-face:operator fontified nil) 3250 3251 (fontified nil) 3251 3255 (face tree-sitter-hl-face:keyword fontified nil) 3255 3256 (fontified nil) 3256 3265 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3265 3266 (face (rainbow-delimiters-depth-1-face) fontified nil) 3266 3267 (face (rainbow-delimiters-depth-1-face) fontified nil) 3267 3277 (fontified nil) 3277 3282 (face tree-sitter-hl-face:variable fontified nil) 3282 3283 (fontified nil) 3283 3284 (face tree-sitter-hl-face:operator fontified nil) 3284 3285 (fontified nil) 3285 3297 (face tree-sitter-hl-face:function.call fontified nil) 3297 3298 (face (rainbow-delimiters-depth-1-face) fontified nil) 3298 3299 (face (rainbow-delimiters-depth-1-face) fontified nil) 3299 3309 (fontified nil) 3309 3313 (face tree-sitter-hl-face:keyword fontified nil) 3313 3314 (fontified nil) 3314 3321 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3321 3322 (fontified nil) 3322 3323 (face tree-sitter-hl-face:operator fontified nil) 3323 3324 (fontified nil) 3324 3327 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3327 3328 (face (rainbow-delimiters-depth-1-face) fontified nil) 3328 3332 (face tree-sitter-hl-face:keyword fontified nil) 3332 3333 (fontified nil) 3333 3341 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3341 3342 (fontified nil) 3342 3343 (face tree-sitter-hl-face:operator fontified nil) 3343 3344 (fontified nil) 3344 3348 (face tree-sitter-hl-face:keyword fontified nil) 3348 3349 (fontified nil) 3349 3351 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3351 3352 (face (rainbow-delimiters-depth-1-face) fontified nil) 3352 3361 (fontified nil) 3361 3365 (face tree-sitter-hl-face:keyword fontified nil) 3365 3366 (fontified nil) 3366 3374 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3374 3375 (fontified nil) 3375 3376 (face tree-sitter-hl-face:operator fontified nil) 3376 3377 (fontified nil) 3377 3380 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3380 3381 (face (rainbow-delimiters-depth-1-face) fontified nil) 3381 3385 (face tree-sitter-hl-face:keyword fontified nil) 3385 3386 (fontified nil) 3386 3394 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3394 3395 (fontified nil) 3395 3396 (face tree-sitter-hl-face:operator fontified nil) 3396 3397 (fontified nil) 3397 3401 (face tree-sitter-hl-face:keyword fontified nil) 3401 3402 (fontified nil) 3402 3404 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3404 3405 (face (rainbow-delimiters-depth-1-face) fontified nil) 3405 3414 (fontified nil) 3414 3418 (face tree-sitter-hl-face:keyword fontified nil) 3418 3419 (fontified nil) 3419 3427 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3427 3428 (fontified nil) 3428 3429 (face tree-sitter-hl-face:operator fontified nil) 3429 3430 (fontified nil) 3430 3433 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3433 3434 (face (rainbow-delimiters-depth-1-face) fontified nil) 3434 3438 (face tree-sitter-hl-face:keyword fontified nil) 3438 3439 (fontified nil) 3439 3447 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3447 3448 (fontified nil) 3448 3449 (face tree-sitter-hl-face:operator fontified nil) 3449 3450 (fontified nil) 3450 3454 (face tree-sitter-hl-face:keyword fontified nil) 3454 3455 (fontified nil) 3455 3457 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3457 3458 (face (rainbow-delimiters-depth-1-face) fontified nil) 3458 3467 (fontified nil) 3467 3471 (face tree-sitter-hl-face:keyword fontified nil) 3471 3472 (fontified nil) 3472 3481 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3481 3482 (fontified nil) 3482 3483 (face tree-sitter-hl-face:operator fontified nil) 3483 3484 (fontified nil) 3484 3487 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3487 3488 (face (rainbow-delimiters-depth-1-face) fontified nil) 3488 3492 (face tree-sitter-hl-face:keyword fontified nil) 3492 3493 (fontified nil) 3493 3502 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3502 3503 (fontified nil) 3503 3504 (face tree-sitter-hl-face:operator fontified nil) 3504 3505 (fontified nil) 3505 3509 (face tree-sitter-hl-face:keyword fontified nil) 3509 3510 (fontified nil) 3510 3512 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3512 3513 (face (rainbow-delimiters-depth-1-face) fontified nil) 3513 3522 (fontified nil) 3522 3526 (face tree-sitter-hl-face:keyword fontified nil) 3526 3527 (fontified nil) 3527 3537 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3537 3538 (fontified nil) 3538 3539 (face tree-sitter-hl-face:operator fontified nil) 3539 3540 (fontified nil) 3540 3543 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3543 3544 (face (rainbow-delimiters-depth-1-face) fontified nil) 3544 3548 (face tree-sitter-hl-face:keyword fontified nil) 3548 3549 (fontified nil) 3549 3559 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3559 3560 (fontified nil) 3560 3561 (face tree-sitter-hl-face:operator fontified nil) 3561 3562 (fontified nil) 3562 3566 (face tree-sitter-hl-face:keyword fontified nil) 3566 3567 (fontified nil) 3567 3569 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3569 3570 (face (rainbow-delimiters-depth-1-face) fontified nil) 3570 3580 (fontified nil) 3580 3586 (face tree-sitter-hl-face:variable fontified nil) 3586 3587 (fontified nil) 3587 3588 (face tree-sitter-hl-face:operator fontified nil) 3588 3589 (fontified nil) 3589 3590 (face (rainbow-delimiters-depth-1-face) fontified nil) 3590 3591 (face (rainbow-delimiters-depth-1-face) fontified nil) 3591 3600 (fontified nil) 3600 3604 (face tree-sitter-hl-face:keyword fontified nil) 3604 3611 (fontified nil) 3611 3618 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3618 3619 (face (rainbow-delimiters-depth-1-face) fontified nil) 3619 3620 (face (rainbow-delimiters-depth-1-face) fontified nil) 3620 3634 (fontified nil) 3634 3637 (face tree-sitter-hl-face:keyword fontified nil) 3637 3638 (fontified nil) 3638 3642 (face tree-sitter-hl-face:variable fontified nil) 3642 3643 (fontified nil) 3643 3645 (face tree-sitter-hl-face:operator fontified nil) 3645 3646 (fontified nil) 3646 3651 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3651 3652 (face (rainbow-delimiters-depth-1-face) fontified nil) 3652 3656 (face tree-sitter-hl-face:keyword fontified nil) 3656 3657 (fontified nil) 3657 3664 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3664 3665 (face (rainbow-delimiters-depth-1-face) fontified nil) 3665 3683 (fontified nil) 3683 3687 (face tree-sitter-hl-face:keyword fontified nil) 3687 3688 (fontified nil) 3688 3699 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3699 3700 (face (rainbow-delimiters-depth-1-face) fontified nil) 3700 3704 (fontified nil) 3704 3705 (face (rainbow-delimiters-depth-1-face) fontified nil) 3705 3722 (fontified nil) 3722 3728 (face tree-sitter-hl-face:variable fontified nil) 3728 3729 (fontified nil) 3729 3730 (face tree-sitter-hl-face:operator fontified nil) 3730 3731 (fontified nil) 3731 3735 (face tree-sitter-hl-face:keyword fontified nil) 3735 3736 (fontified nil) 3736 3743 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3743 3744 (face (rainbow-delimiters-depth-1-face) fontified nil) 3744 3750 (fontified nil) 3750 3751 (face (rainbow-delimiters-depth-1-face) fontified nil) 3751 3769 (fontified nil) 3769 3771 (face tree-sitter-hl-face:keyword fontified nil) 3771 3777 (fontified nil) 3777 3778 (face tree-sitter-hl-face:operator fontified nil) 3778 3779 (fontified nil) 3779 3783 (face tree-sitter-hl-face:keyword fontified nil) 3783 3784 (fontified nil) 3784 3792 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3792 3814 (fontified nil) 3814 3816 (face tree-sitter-hl-face:keyword fontified nil) 3816 3822 (fontified nil) 3822 3823 (face tree-sitter-hl-face:operator fontified nil) 3823 3824 (fontified nil) 3824 3828 (face tree-sitter-hl-face:keyword fontified nil) 3828 3829 (fontified nil) 3829 3837 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3837 3838 (fontified nil) 3838 3840 (face tree-sitter-hl-face:operator fontified nil) 3840 3841 (fontified nil) 3841 3842 (face tree-sitter-hl-face:number fontified nil) 3842 3868 (fontified nil) 3868 3870 (face tree-sitter-hl-face:keyword fontified nil) 3870 3871 (fontified nil) 3871 3875 (face tree-sitter-hl-face:keyword fontified nil) 3875 3876 (fontified nil) 3876 3883 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 3883 3913 (fontified nil) 3913 3917 (face tree-sitter-hl-face:keyword fontified nil) 3917 3918 (fontified nil) 3918 3932 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3932 3933 (face (rainbow-delimiters-depth-1-face) fontified nil) 3933 3945 (fontified nil) 3945 3946 (face (rainbow-delimiters-depth-1-face) fontified nil) 3946 3979 (fontified nil) 3979 3985 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3985 3986 (face (rainbow-delimiters-depth-1-face) fontified nil) 3986 3993 (fontified nil) 3993 3996 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 3996 3997 (face (rainbow-delimiters-depth-2-face) fontified nil) 3997 3998 (face (rainbow-delimiters-depth-2-face) fontified nil) 3998 3999 (fontified nil) 3999 4005 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4005 4006 (face (rainbow-delimiters-depth-2-face) fontified nil) 4006 4007 (face (rainbow-delimiters-depth-2-face) fontified nil) 4007 4008 (fontified nil) 4008 4013 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4013 4014 (face (rainbow-delimiters-depth-2-face) fontified nil) 4014 4015 (face (rainbow-delimiters-depth-2-face) fontified nil) 4015 4016 (face (rainbow-delimiters-depth-1-face) fontified nil) 4016 4051 (fontified nil) 4051 4057 (face tree-sitter-hl-face:variable fontified nil) 4057 4058 (fontified nil) 4058 4059 (face tree-sitter-hl-face:operator fontified nil) 4059 4063 (fontified nil) 4063 4068 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4068 4069 (face (rainbow-delimiters-depth-1-face) fontified nil) 4069 4075 (fontified nil) 4075 4076 (face (rainbow-delimiters-depth-1-face) fontified nil) 4076 4086 (fontified nil) 4086 4165 (face tree-sitter-hl-face:comment fontified nil) 4165 4174 (fontified nil) 4174 4199 (face tree-sitter-hl-face:comment fontified nil) 4199 4209 (fontified nil) 4209 4251 (face tree-sitter-hl-face:comment fontified nil) 4251 4260 (fontified nil) 4260 4291 (face tree-sitter-hl-face:comment fontified nil) 4291 4309 (fontified nil) 4309 4314 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 4314 4315 (face (rainbow-delimiters-depth-1-face) fontified nil) 4315 4316 (face tree-sitter-hl-face:string fontified nil) 4316 4332 (face tree-sitter-hl-face:string fontified nil) 4332 4333 (face tree-sitter-hl-face:string fontified nil) 4333 4335 (fontified nil) 4335 4339 (face tree-sitter-hl-face:keyword fontified nil) 4339 4340 (fontified nil) 4340 4349 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 4349 4350 (fontified nil) 4350 4351 (face tree-sitter-hl-face:operator fontified nil) 4351 4352 (fontified nil) 4352 4356 (face tree-sitter-hl-face:keyword fontified nil) 4356 4357 (fontified nil) 4357 4366 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 4366 4367 (fontified nil) 4367 4368 (face tree-sitter-hl-face:operator fontified nil) 4368 4369 (fontified nil) 4369 4370 (face tree-sitter-hl-face:string fontified nil) 4370 4374 (face tree-sitter-hl-face:string fontified nil) 4374 4375 (face tree-sitter-hl-face:string fontified nil) 4375 4376 (face (rainbow-delimiters-depth-1-face) fontified nil) 4376 4388 (fontified nil) 4388 4392 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4392 4393 (face (rainbow-delimiters-depth-1-face) fontified nil) 4393 4397 (face tree-sitter-hl-face:keyword fontified nil) 4397 4398 (fontified nil) 4398 4407 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 4407 4408 (fontified nil) 4408 4409 (face tree-sitter-hl-face:operator fontified nil) 4409 4410 (fontified nil) 4410 4414 (face tree-sitter-hl-face:keyword fontified nil) 4414 4415 (fontified nil) 4415 4424 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 4424 4425 (fontified nil) 4425 4426 (face tree-sitter-hl-face:operator fontified nil) 4426 4427 (fontified nil) 4427 4428 (face tree-sitter-hl-face:string fontified nil) 4428 4432 (face tree-sitter-hl-face:string fontified nil) 4432 4433 (face tree-sitter-hl-face:string fontified nil) 4433 4441 (fontified nil) 4441 4442 (face (rainbow-delimiters-depth-1-face) fontified nil) 4442 4452 (fontified nil) 4452 4455 (face tree-sitter-hl-face:keyword fontified nil) 4455 4456 (fontified nil) 4456 4459 (face tree-sitter-hl-face:variable fontified nil) 4459 4460 (fontified nil) 4460 4462 (face tree-sitter-hl-face:operator fontified nil) 4462 4466 (fontified nil) 4466 4477 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4477 4478 (face (rainbow-delimiters-depth-1-face) fontified nil) 4478 4479 (face (rainbow-delimiters-depth-1-face) fontified nil) 4479 4493 (fontified nil) 4493 4495 (face tree-sitter-hl-face:keyword fontified nil) 4495 4502 (fontified nil) 4502 4511 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4511 4512 (face (rainbow-delimiters-depth-1-face) fontified nil) 4512 4515 (fontified nil) 4515 4516 (face (rainbow-delimiters-depth-1-face) fontified nil) 4516 4534 (fontified nil) 4534 4537 (face tree-sitter-hl-face:keyword fontified nil) 4537 4551 (fontified nil) 4551 4605 (face tree-sitter-hl-face:comment fontified nil) 4605 4617 (fontified nil) 4617 4624 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4624 4625 (face (rainbow-delimiters-depth-1-face) fontified nil) 4625 4626 (face (rainbow-delimiters-depth-1-face) fontified nil) 4626 4641 (fontified nil) 4641 4645 (face tree-sitter-hl-face:property fontified nil) 4645 4646 (fontified nil) 4646 4657 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4657 4658 (face (rainbow-delimiters-depth-1-face) fontified nil) 4658 4659 (face (rainbow-delimiters-depth-1-face) fontified nil) 4659 4669 (fontified nil) 4669 4672 (face tree-sitter-hl-face:variable fontified nil) 4672 4673 (fontified nil) 4673 4674 (face tree-sitter-hl-face:operator fontified nil) 4674 4675 (fontified nil) 4675 4687 (face tree-sitter-hl-face:function.call fontified nil) 4687 4688 (face (rainbow-delimiters-depth-1-face) fontified nil) 4688 4689 (face (rainbow-delimiters-depth-1-face) fontified nil) 4689 4699 (fontified nil) 4699 4704 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 4704 4705 (face (rainbow-delimiters-depth-1-face) fontified nil) 4705 4706 (face tree-sitter-hl-face:string fontified nil) 4706 4738 (face tree-sitter-hl-face:string fontified nil) 4738 4739 (face tree-sitter-hl-face:string fontified nil) 4739 4740 (fontified nil) 4740 4746 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 4746 4747 (face (rainbow-delimiters-depth-2-face) fontified nil) 4747 4748 (face (rainbow-delimiters-depth-3-face) fontified nil) 4748 4752 (fontified nil) 4752 4753 (face tree-sitter-hl-face:operator fontified nil) 4753 4759 (fontified nil) 4759 4760 (face (rainbow-delimiters-depth-3-face) fontified nil) 4760 4761 (face (rainbow-delimiters-depth-2-face) fontified nil) 4761 4762 (face (rainbow-delimiters-depth-1-face) fontified nil) 4762 4772 (fontified nil) 4772 4778 (face tree-sitter-hl-face:keyword fontified nil) 4778 4791 (fontified nil) 4791 4794 (face tree-sitter-hl-face:keyword fontified nil) 4794 4795 (fontified nil) 4795 4805 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 4805 4806 (face (rainbow-delimiters-depth-1-face) fontified nil) 4806 4810 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 4810 4812 (fontified nil) 4812 4821 (face tree-sitter-hl-face:variable.parameter fontified nil) 4821 4823 (fontified nil) 4823 4831 (face tree-sitter-hl-face:variable.parameter fontified nil) 4831 4833 (fontified nil) 4833 4842 (face tree-sitter-hl-face:variable.parameter fontified nil) 4842 4844 (fontified nil) 4844 4846 (face tree-sitter-hl-face:operator fontified nil) 4846 4852 (face tree-sitter-hl-face:variable.parameter fontified nil) 4852 4853 (face (rainbow-delimiters-depth-1-face) fontified nil) 4853 4863 (fontified nil) 4863 4891 (face tree-sitter-hl-face:comment fontified nil) 4891 4900 (fontified nil) 4900 4909 (face tree-sitter-hl-face:variable fontified nil) 4909 4910 (fontified nil) 4910 4911 (face tree-sitter-hl-face:operator fontified nil) 4911 4922 (fontified nil) 4922 4923 (face tree-sitter-hl-face:operator fontified nil) 4923 4924 (fontified nil) 4924 4925 (face tree-sitter-hl-face:string fontified nil) 4925 4931 (face tree-sitter-hl-face:string fontified nil) 4931 4932 (face tree-sitter-hl-face:string fontified nil) 4932 4933 (face tree-sitter-hl-face:operator fontified nil) 4933 4952 (fontified nil) 4952 4957 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 4957 4958 (face (rainbow-delimiters-depth-1-face) fontified nil) 4958 4959 (face tree-sitter-hl-face:string fontified nil) 4959 4978 (face tree-sitter-hl-face:string fontified nil) 4978 4979 (face tree-sitter-hl-face:string fontified nil) 4979 4990 (fontified nil) 4990 4991 (face (rainbow-delimiters-depth-1-face) fontified nil) 4991 5000 (fontified nil) 5000 5005 (face tree-sitter-hl-face:variable fontified nil) 5005 5006 (fontified nil) 5006 5007 (face tree-sitter-hl-face:operator fontified nil) 5007 5008 (fontified nil) 5008 5017 (face tree-sitter-hl-face:function.call fontified nil) 5017 5018 (face (rainbow-delimiters-depth-1-face) fontified nil) 5018 5022 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 5022 5023 (face (rainbow-delimiters-depth-2-face) fontified nil) 5023 5034 (fontified nil) 5034 5035 (face tree-sitter-hl-face:string fontified nil) 5035 5036 (face tree-sitter-hl-face:string fontified nil) 5036 5037 (face tree-sitter-hl-face:string fontified nil) 5037 5038 (face (rainbow-delimiters-depth-2-face) fontified nil) 5038 5039 (face (rainbow-delimiters-depth-1-face) fontified nil) 5039 5054 (fontified nil) 5054 5055 (face (rainbow-delimiters-depth-1-face) fontified nil) 5055 5056 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified nil) 5056 5065 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified nil) 5065 5066 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:string) fontified nil) 5066 5067 (face (rainbow-delimiters-depth-1-face) fontified nil) 5067 5068 (fontified nil) 5068 5069 (face tree-sitter-hl-face:operator fontified nil) 5069 5093 (fontified nil) 5093 5099 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5099 5100 (face (rainbow-delimiters-depth-1-face) fontified nil) 5100 5106 (fontified nil) 5106 5107 (face (rainbow-delimiters-depth-1-face) fontified nil) 5107 5117 (fontified nil) 5117 5120 (face tree-sitter-hl-face:keyword fontified nil) 5120 5121 (fontified nil) 5121 5122 (face tree-sitter-hl-face:variable fontified nil) 5122 5124 (fontified nil) 5124 5125 (face tree-sitter-hl-face:variable fontified nil) 5125 5126 (fontified nil) 5126 5128 (face tree-sitter-hl-face:operator fontified nil) 5128 5135 (fontified nil) 5135 5140 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5140 5141 (face (rainbow-delimiters-depth-1-face) fontified nil) 5141 5142 (face (rainbow-delimiters-depth-1-face) fontified nil) 5142 5156 (fontified nil) 5156 5163 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 5163 5164 (face (rainbow-delimiters-depth-1-face) fontified nil) 5164 5168 (face tree-sitter-hl-face:keyword fontified nil) 5168 5174 (fontified nil) 5174 5175 (face (rainbow-delimiters-depth-1-face) fontified nil) 5175 5185 (fontified nil) 5185 5189 (face tree-sitter-hl-face:keyword fontified nil) 5189 5190 (fontified nil) 5190 5199 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5199 5200 (fontified nil) 5200 5201 (face tree-sitter-hl-face:operator fontified nil) 5201 5212 (fontified nil) 5212 5213 (face tree-sitter-hl-face:operator fontified nil) 5213 5214 (fontified nil) 5214 5215 (face tree-sitter-hl-face:string fontified nil) 5215 5227 (face tree-sitter-hl-face:string fontified nil) 5227 5228 (face tree-sitter-hl-face:string fontified nil) 5228 5237 (fontified nil) 5237 5241 (face tree-sitter-hl-face:keyword fontified nil) 5241 5242 (fontified nil) 5242 5250 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5250 5251 (fontified nil) 5251 5252 (face tree-sitter-hl-face:operator fontified nil) 5252 5263 (fontified nil) 5263 5264 (face tree-sitter-hl-face:operator fontified nil) 5264 5265 (fontified nil) 5265 5266 (face tree-sitter-hl-face:string fontified nil) 5266 5279 (face tree-sitter-hl-face:string fontified nil) 5279 5280 (face tree-sitter-hl-face:string fontified nil) 5280 5290 (fontified nil) 5290 5292 (face tree-sitter-hl-face:keyword fontified nil) 5292 5293 (fontified nil) 5293 5296 (face tree-sitter-hl-face:operator fontified nil) 5296 5300 (fontified nil) 5300 5304 (face tree-sitter-hl-face:property fontified nil) 5304 5305 (fontified nil) 5305 5311 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5311 5312 (face (rainbow-delimiters-depth-1-face) fontified nil) 5312 5316 (face tree-sitter-hl-face:keyword fontified nil) 5316 5317 (fontified nil) 5317 5326 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5326 5327 (face (rainbow-delimiters-depth-1-face) fontified nil) 5327 5344 (fontified nil) 5344 5352 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5352 5353 (face (rainbow-delimiters-depth-1-face) fontified nil) 5353 5357 (face tree-sitter-hl-face:keyword fontified nil) 5357 5358 (fontified nil) 5358 5367 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5367 5368 (face (rainbow-delimiters-depth-1-face) fontified nil) 5368 5378 (fontified nil) 5378 5380 (face tree-sitter-hl-face:keyword fontified nil) 5380 5381 (fontified nil) 5381 5384 (face tree-sitter-hl-face:operator fontified nil) 5384 5388 (fontified nil) 5388 5392 (face tree-sitter-hl-face:property fontified nil) 5392 5393 (fontified nil) 5393 5399 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5399 5400 (face (rainbow-delimiters-depth-1-face) fontified nil) 5400 5404 (face tree-sitter-hl-face:keyword fontified nil) 5404 5405 (fontified nil) 5405 5413 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5413 5414 (face (rainbow-delimiters-depth-1-face) fontified nil) 5414 5431 (fontified nil) 5431 5439 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5439 5440 (face (rainbow-delimiters-depth-1-face) fontified nil) 5440 5444 (face tree-sitter-hl-face:keyword fontified nil) 5444 5445 (fontified nil) 5445 5453 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5453 5454 (face (rainbow-delimiters-depth-1-face) fontified nil) 5454 5464 (fontified nil) 5464 5466 (face tree-sitter-hl-face:keyword fontified nil) 5466 5467 (fontified nil) 5467 5471 (face tree-sitter-hl-face:keyword fontified nil) 5471 5472 (fontified nil) 5472 5487 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5487 5488 (fontified nil) 5488 5490 (face tree-sitter-hl-face:operator fontified nil) 5490 5491 (fontified nil) 5491 5493 (face tree-sitter-hl-face:number fontified nil) 5493 5507 (fontified nil) 5507 5511 (face tree-sitter-hl-face:keyword fontified nil) 5511 5512 (fontified nil) 5512 5517 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5517 5518 (fontified nil) 5518 5519 (face tree-sitter-hl-face:operator fontified nil) 5519 5526 (fontified nil) 5526 5531 (face tree-sitter-hl-face:property fontified nil) 5531 5540 (fontified nil) 5540 5544 (face tree-sitter-hl-face:keyword fontified nil) 5544 5558 (fontified nil) 5558 5562 (face tree-sitter-hl-face:keyword fontified nil) 5562 5563 (fontified nil) 5563 5568 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5568 5569 (fontified nil) 5569 5570 (face tree-sitter-hl-face:operator fontified nil) 5570 5577 (fontified nil) 5577 5584 (face tree-sitter-hl-face:property fontified nil) 5584 5594 (fontified nil) 5594 5598 (face tree-sitter-hl-face:keyword fontified nil) 5598 5599 (fontified nil) 5599 5605 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 5605 5606 (fontified nil) 5606 5607 (face tree-sitter-hl-face:operator fontified nil) 5607 5614 (fontified nil) 5614 5620 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5620 5621 (face (rainbow-delimiters-depth-1-face) fontified nil) 5621 5625 (face tree-sitter-hl-face:keyword fontified nil) 5625 5626 (fontified nil) 5626 5632 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5632 5633 (face (rainbow-delimiters-depth-1-face) fontified nil) 5633 5639 (fontified nil) 5639 5642 (face tree-sitter-hl-face:keyword fontified nil) 5642 5643 (fontified nil) 5643 5652 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 5652 5653 (face (rainbow-delimiters-depth-1-face) fontified nil) 5653 5657 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 5657 5658 (face (rainbow-delimiters-depth-1-face) fontified nil) 5658 5668 (fontified nil) 5668 5674 (face tree-sitter-hl-face:keyword fontified nil) 5674 5681 (fontified nil) 5681 5686 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5686 5687 (face (rainbow-delimiters-depth-1-face) fontified nil) 5687 5691 (face tree-sitter-hl-face:keyword fontified nil) 5691 5692 (fontified nil) 5692 5700 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5700 5702 (fontified nil) 5702 5707 (face tree-sitter-hl-face:label fontified nil) 5707 5708 (face tree-sitter-hl-face:operator fontified nil) 5708 5712 (face tree-sitter-hl-face:keyword fontified nil) 5712 5713 (fontified nil) 5713 5718 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5718 5720 (fontified nil) 5720 5726 (face tree-sitter-hl-face:label fontified nil) 5726 5727 (face tree-sitter-hl-face:operator fontified nil) 5727 5731 (face tree-sitter-hl-face:keyword fontified nil) 5731 5732 (fontified nil) 5732 5738 (face tree-sitter-hl-face:property fontified nil) 5738 5739 (face (rainbow-delimiters-depth-1-face) fontified nil) 5739 5745 (fontified nil) 5745 5748 (face tree-sitter-hl-face:keyword fontified nil) 5748 5749 (fontified nil) 5749 5760 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 5760 5761 (face (rainbow-delimiters-depth-1-face) fontified nil) 5761 5765 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 5765 5767 (fontified nil) 5767 5772 (face tree-sitter-hl-face:variable.parameter fontified nil) 5772 5774 (fontified nil) 5774 5779 (face tree-sitter-hl-face:variable.parameter fontified nil) 5779 5780 (face (rainbow-delimiters-depth-1-face) fontified nil) 5780 5791 (fontified nil) 5791 5793 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 5793 5794 (fontified nil) 5794 5795 (face tree-sitter-hl-face:operator fontified nil) 5795 5796 (fontified nil) 5796 5800 (face tree-sitter-hl-face:keyword fontified nil) 5800 5801 (fontified nil) 5801 5803 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5803 5804 (face (rainbow-delimiters-depth-1-face) fontified nil) 5804 5809 (fontified nil) 5809 5810 (face (rainbow-delimiters-depth-1-face) fontified nil) 5810 5819 (fontified nil) 5819 5821 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 5821 5822 (fontified nil) 5822 5823 (face tree-sitter-hl-face:operator fontified nil) 5823 5824 (fontified nil) 5824 5828 (face tree-sitter-hl-face:keyword fontified nil) 5828 5829 (fontified nil) 5829 5831 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5831 5832 (face (rainbow-delimiters-depth-1-face) fontified nil) 5832 5837 (fontified nil) 5837 5838 (face (rainbow-delimiters-depth-1-face) fontified nil) 5838 5847 (fontified nil) 5847 5849 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 5849 5850 (fontified nil) 5850 5851 (face tree-sitter-hl-face:operator fontified nil) 5851 5852 (fontified nil) 5852 5856 (face tree-sitter-hl-face:keyword fontified nil) 5856 5857 (fontified nil) 5857 5859 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5859 5860 (face (rainbow-delimiters-depth-1-face) fontified nil) 5860 5865 (fontified nil) 5865 5866 (face (rainbow-delimiters-depth-1-face) fontified nil) 5866 5876 (fontified nil) 5876 5879 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 5879 5880 (fontified nil) 5880 5881 (face tree-sitter-hl-face:operator fontified nil) 5881 5888 (fontified nil) 5888 5894 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 5894 5895 (face (rainbow-delimiters-depth-1-face) fontified nil) 5895 5898 (face tree-sitter-hl-face:number fontified nil) 5898 5900 (fontified nil) 5900 5905 (face tree-sitter-hl-face:label fontified nil) 5905 5906 (face tree-sitter-hl-face:operator fontified nil) 5906 5910 (face tree-sitter-hl-face:keyword fontified nil) 5910 5911 (fontified nil) 5911 5916 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5916 5918 (fontified nil) 5918 5924 (face tree-sitter-hl-face:label fontified nil) 5924 5925 (face tree-sitter-hl-face:operator fontified nil) 5925 5929 (face tree-sitter-hl-face:keyword fontified nil) 5929 5930 (fontified nil) 5930 5936 (face tree-sitter-hl-face:property fontified nil) 5936 5937 (face (rainbow-delimiters-depth-1-face) fontified nil) 5937 5947 (fontified nil) 5947 5949 (face tree-sitter-hl-face:keyword fontified nil) 5949 5950 (fontified nil) 5950 5951 (face tree-sitter-hl-face:string fontified nil) 5951 5953 (face tree-sitter-hl-face:string fontified nil) 5953 5954 (face tree-sitter-hl-face:string fontified nil) 5954 5955 (fontified nil) 5955 5957 (face tree-sitter-hl-face:operator fontified nil) 5957 5958 (fontified nil) 5958 5962 (face tree-sitter-hl-face:keyword fontified nil) 5962 5963 (fontified nil) 5963 5972 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 5972 5973 (face (rainbow-delimiters-depth-1-face) fontified nil) 5973 5985 (fontified nil) 5985 5986 (face (rainbow-delimiters-depth-1-face) fontified nil) 5986 6001 (fontified nil) 6001 6005 (face tree-sitter-hl-face:variable fontified nil) 6005 6006 (fontified nil) 6006 6007 (face tree-sitter-hl-face:operator fontified nil) 6007 6014 (fontified nil) 6014 6020 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6020 6021 (face (rainbow-delimiters-depth-1-face) fontified nil) 6021 6022 (face (rainbow-delimiters-depth-2-face) fontified nil) 6022 6025 (face tree-sitter-hl-face:number fontified nil) 6025 6027 (fontified nil) 6027 6030 (face tree-sitter-hl-face:number fontified nil) 6030 6031 (face (rainbow-delimiters-depth-2-face) fontified nil) 6031 6033 (fontified nil) 6033 6038 (face tree-sitter-hl-face:label fontified nil) 6038 6039 (face tree-sitter-hl-face:operator fontified nil) 6039 6043 (face tree-sitter-hl-face:keyword fontified nil) 6043 6044 (fontified nil) 6044 6049 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6049 6051 (fontified nil) 6051 6057 (face tree-sitter-hl-face:label fontified nil) 6057 6058 (face tree-sitter-hl-face:operator fontified nil) 6058 6062 (face tree-sitter-hl-face:keyword fontified nil) 6062 6063 (fontified nil) 6063 6069 (face tree-sitter-hl-face:property fontified nil) 6069 6070 (face (rainbow-delimiters-depth-1-face) fontified nil) 6070 6084 (fontified nil) 6084 6114 (face tree-sitter-hl-face:comment fontified nil) 6114 6127 (fontified nil) 6127 6137 (face tree-sitter-hl-face:variable fontified nil) 6137 6138 (fontified nil) 6138 6139 (face tree-sitter-hl-face:operator fontified nil) 6139 6146 (fontified nil) 6146 6152 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6152 6153 (face (rainbow-delimiters-depth-1-face) fontified nil) 6153 6154 (face (rainbow-delimiters-depth-2-face) fontified nil) 6154 6155 (face (rainbow-delimiters-depth-3-face) fontified nil) 6155 6158 (face tree-sitter-hl-face:number fontified nil) 6158 6160 (fontified nil) 6160 6164 (face tree-sitter-hl-face:keyword fontified nil) 6164 6165 (fontified nil) 6165 6171 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6171 6172 (face (rainbow-delimiters-depth-3-face) fontified nil) 6172 6213 (fontified nil) 6213 6214 (face (rainbow-delimiters-depth-3-face) fontified nil) 6214 6218 (face tree-sitter-hl-face:keyword fontified nil) 6218 6219 (fontified nil) 6219 6225 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6225 6227 (fontified nil) 6227 6230 (face tree-sitter-hl-face:number fontified nil) 6230 6231 (face (rainbow-delimiters-depth-3-face) fontified nil) 6231 6232 (fontified nil) 6232 6233 (face (rainbow-delimiters-depth-2-face) fontified nil) 6233 6235 (fontified nil) 6235 6240 (face tree-sitter-hl-face:label fontified nil) 6240 6241 (face tree-sitter-hl-face:operator fontified nil) 6241 6245 (face tree-sitter-hl-face:keyword fontified nil) 6245 6246 (fontified nil) 6246 6251 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6251 6253 (fontified nil) 6253 6259 (face tree-sitter-hl-face:label fontified nil) 6259 6260 (face tree-sitter-hl-face:operator fontified nil) 6260 6264 (face tree-sitter-hl-face:keyword fontified nil) 6264 6265 (fontified nil) 6265 6271 (face tree-sitter-hl-face:property fontified nil) 6271 6272 (face (rainbow-delimiters-depth-1-face) fontified nil) 6272 6287 (fontified nil) 6287 6306 (face tree-sitter-hl-face:variable fontified nil) 6306 6307 (fontified nil) 6307 6308 (face tree-sitter-hl-face:operator fontified nil) 6308 6309 (fontified nil) 6309 6327 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 6327 6328 (face (rainbow-delimiters-depth-1-face) fontified nil) 6328 6344 (fontified nil) 6344 6345 (face (rainbow-delimiters-depth-1-face) fontified nil) 6345 6358 (fontified nil) 6358 6362 (face tree-sitter-hl-face:keyword fontified nil) 6362 6363 (fontified nil) 6363 6366 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 6366 6367 (fontified nil) 6367 6368 (face tree-sitter-hl-face:operator fontified nil) 6368 6389 (fontified nil) 6389 6395 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6395 6396 (face (rainbow-delimiters-depth-1-face) fontified nil) 6396 6397 (face (rainbow-delimiters-depth-2-face) fontified nil) 6397 6399 (face tree-sitter-hl-face:constructor fontified nil) 6399 6400 (fontified nil) 6400 6401 (face (rainbow-delimiters-depth-2-face) fontified nil) 6401 6402 (face (rainbow-delimiters-depth-1-face) fontified nil) 6402 6403 (fontified nil) 6403 6404 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6404 6418 (fontified nil) 6418 6423 (face tree-sitter-hl-face:keyword fontified nil) 6423 6430 (fontified nil) 6430 6433 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6433 6434 (face (rainbow-delimiters-depth-1-face) fontified nil) 6434 6438 (face tree-sitter-hl-face:keyword fontified nil) 6438 6439 (fontified nil) 6439 6442 (face tree-sitter-hl-face:property fontified nil) 6442 6443 (face (rainbow-delimiters-depth-2-face) fontified nil) 6443 6444 (face tree-sitter-hl-face:number fontified nil) 6444 6445 (face (rainbow-delimiters-depth-2-face) fontified nil) 6445 6446 (fontified nil) 6446 6447 (face tree-sitter-hl-face:operator fontified nil) 6447 6448 (fontified nil) 6448 6452 (face tree-sitter-hl-face:keyword fontified nil) 6452 6453 (fontified nil) 6453 6456 (face tree-sitter-hl-face:property fontified nil) 6456 6457 (face (rainbow-delimiters-depth-2-face) fontified nil) 6457 6458 (face tree-sitter-hl-face:number fontified nil) 6458 6459 (face (rainbow-delimiters-depth-2-face) fontified nil) 6459 6460 (face (rainbow-delimiters-depth-1-face) fontified nil) 6460 6461 (fontified nil) 6461 6462 (face tree-sitter-hl-face:operator fontified nil) 6462 6463 (fontified nil) 6463 6466 (face tree-sitter-hl-face:number fontified nil) 6466 6484 (fontified nil) 6484 6503 (face tree-sitter-hl-face:variable fontified nil) 6503 6504 (fontified nil) 6504 6505 (face tree-sitter-hl-face:operator fontified nil) 6505 6506 (fontified nil) 6506 6524 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 6524 6525 (face (rainbow-delimiters-depth-1-face) fontified nil) 6525 6541 (fontified nil) 6541 6542 (face (rainbow-delimiters-depth-1-face) fontified nil) 6542 6559 (fontified nil) 6559 6563 (face tree-sitter-hl-face:keyword fontified nil) 6563 6564 (fontified nil) 6564 6567 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 6567 6568 (fontified nil) 6568 6569 (face tree-sitter-hl-face:operator fontified nil) 6569 6590 (fontified nil) 6590 6596 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6596 6597 (face (rainbow-delimiters-depth-1-face) fontified nil) 6597 6598 (face (rainbow-delimiters-depth-2-face) fontified nil) 6598 6600 (face tree-sitter-hl-face:constructor fontified nil) 6600 6601 (fontified nil) 6601 6602 (face (rainbow-delimiters-depth-2-face) fontified nil) 6602 6603 (face (rainbow-delimiters-depth-1-face) fontified nil) 6603 6604 (fontified nil) 6604 6605 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6605 6619 (fontified nil) 6619 6621 (face tree-sitter-hl-face:keyword fontified nil) 6621 6622 (fontified nil) 6622 6626 (face tree-sitter-hl-face:keyword fontified nil) 6626 6627 (fontified nil) 6627 6634 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6634 6652 (fontified nil) 6652 6657 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 6657 6658 (face (rainbow-delimiters-depth-1-face) fontified nil) 6658 6659 (face tree-sitter-hl-face:string fontified nil) 6659 6662 (face tree-sitter-hl-face:string fontified nil) 6662 6663 (face tree-sitter-hl-face:string fontified nil) 6663 6665 (fontified nil) 6665 6669 (face tree-sitter-hl-face:keyword fontified nil) 6669 6670 (fontified nil) 6670 6673 (face tree-sitter-hl-face:property fontified nil) 6673 6674 (fontified nil) 6674 6679 (face tree-sitter-hl-face:property fontified nil) 6679 6680 (face (rainbow-delimiters-depth-1-face) fontified nil) 6680 6697 (fontified nil) 6697 6702 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 6702 6703 (face (rainbow-delimiters-depth-1-face) fontified nil) 6703 6704 (face tree-sitter-hl-face:string fontified nil) 6704 6714 (face tree-sitter-hl-face:string fontified nil) 6714 6715 (face tree-sitter-hl-face:string fontified nil) 6715 6717 (fontified nil) 6717 6721 (face tree-sitter-hl-face:keyword fontified nil) 6721 6722 (fontified nil) 6722 6725 (face tree-sitter-hl-face:property fontified nil) 6725 6726 (face (rainbow-delimiters-depth-2-face) fontified nil) 6726 6727 (face tree-sitter-hl-face:number fontified nil) 6727 6728 (face (rainbow-delimiters-depth-2-face) fontified nil) 6728 6729 (fontified nil) 6729 6730 (face tree-sitter-hl-face:operator fontified nil) 6730 6731 (fontified nil) 6731 6735 (face tree-sitter-hl-face:keyword fontified nil) 6735 6736 (fontified nil) 6736 6739 (face tree-sitter-hl-face:property fontified nil) 6739 6740 (face (rainbow-delimiters-depth-2-face) fontified nil) 6740 6741 (face tree-sitter-hl-face:number fontified nil) 6741 6742 (face (rainbow-delimiters-depth-2-face) fontified nil) 6742 6743 (face (rainbow-delimiters-depth-1-face) fontified nil) 6743 6757 (fontified nil) 6757 6760 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 6760 6761 (fontified nil) 6761 6762 (face tree-sitter-hl-face:operator fontified nil) 6762 6763 (fontified nil) 6763 6766 (face tree-sitter-hl-face:number fontified nil) 6766 6767 (fontified nil) 6767 6768 (face tree-sitter-hl-face:operator fontified nil) 6768 6769 (fontified nil) 6769 6773 (face tree-sitter-hl-face:keyword fontified nil) 6773 6774 (fontified nil) 6774 6779 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6779 6780 (face (rainbow-delimiters-depth-1-face) fontified nil) 6780 6792 (fontified nil) 6792 6793 (face (rainbow-delimiters-depth-1-face) fontified nil) 6793 6794 (fontified nil) 6794 6795 (face tree-sitter-hl-face:operator fontified nil) 6795 6796 (fontified nil) 6796 6797 (face (rainbow-delimiters-depth-1-face) fontified nil) 6797 6803 (fontified nil) 6803 6808 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6808 6809 (face (rainbow-delimiters-depth-2-face) fontified nil) 6809 6813 (face tree-sitter-hl-face:keyword fontified nil) 6813 6814 (fontified nil) 6814 6817 (face tree-sitter-hl-face:property fontified nil) 6817 6818 (face (rainbow-delimiters-depth-3-face) fontified nil) 6818 6819 (face tree-sitter-hl-face:number fontified nil) 6819 6820 (face (rainbow-delimiters-depth-3-face) fontified nil) 6820 6822 (fontified nil) 6822 6826 (face tree-sitter-hl-face:keyword fontified nil) 6826 6827 (fontified nil) 6827 6830 (face tree-sitter-hl-face:property fontified nil) 6830 6831 (face (rainbow-delimiters-depth-3-face) fontified nil) 6831 6832 (face tree-sitter-hl-face:number fontified nil) 6832 6833 (face (rainbow-delimiters-depth-3-face) fontified nil) 6833 6834 (face (rainbow-delimiters-depth-2-face) fontified nil) 6834 6887 (fontified nil) 6887 6888 (face tree-sitter-hl-face:operator fontified nil) 6888 6895 (fontified nil) 6895 6900 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6900 6901 (face (rainbow-delimiters-depth-2-face) fontified nil) 6901 6905 (face tree-sitter-hl-face:keyword fontified nil) 6905 6906 (fontified nil) 6906 6909 (face tree-sitter-hl-face:property fontified nil) 6909 6910 (face (rainbow-delimiters-depth-3-face) fontified nil) 6910 6911 (face tree-sitter-hl-face:number fontified nil) 6911 6912 (face (rainbow-delimiters-depth-3-face) fontified nil) 6912 6914 (fontified nil) 6914 6918 (face tree-sitter-hl-face:keyword fontified nil) 6918 6919 (fontified nil) 6919 6922 (face tree-sitter-hl-face:property fontified nil) 6922 6923 (face (rainbow-delimiters-depth-3-face) fontified nil) 6923 6924 (face tree-sitter-hl-face:number fontified nil) 6924 6925 (face (rainbow-delimiters-depth-3-face) fontified nil) 6925 6926 (face (rainbow-delimiters-depth-2-face) fontified nil) 6926 6927 (face (rainbow-delimiters-depth-1-face) fontified nil) 6927 6928 (fontified nil) 6928 6929 (face tree-sitter-hl-face:operator fontified nil) 6929 6936 (fontified nil) 6936 6940 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 6940 6941 (face (rainbow-delimiters-depth-1-face) fontified nil) 6941 6945 (face tree-sitter-hl-face:keyword fontified nil) 6945 6946 (fontified nil) 6946 6948 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 6948 6949 (face (rainbow-delimiters-depth-2-face) fontified nil) 6949 6954 (fontified nil) 6954 6955 (face (rainbow-delimiters-depth-2-face) fontified nil) 6955 6956 (face (rainbow-delimiters-depth-1-face) fontified nil) 6956 6969 (fontified nil) 6969 6985 (face tree-sitter-hl-face:comment fontified nil) 6985 6998 (fontified nil) 6998 7014 (face tree-sitter-hl-face:comment fontified nil) 7014 7028 (fontified nil) 7028 7030 (face tree-sitter-hl-face:keyword fontified nil) 7030 7031 (fontified nil) 7031 7035 (face tree-sitter-hl-face:keyword fontified nil) 7035 7036 (fontified nil) 7036 7043 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7043 7061 (fontified nil) 7061 7066 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 7066 7067 (face (rainbow-delimiters-depth-1-face) fontified nil) 7067 7068 (face tree-sitter-hl-face:string fontified nil) 7068 7071 (face tree-sitter-hl-face:string fontified nil) 7071 7072 (face tree-sitter-hl-face:string fontified nil) 7072 7074 (fontified nil) 7074 7077 (face tree-sitter-hl-face:constructor fontified nil) 7077 7078 (fontified nil) 7078 7083 (face tree-sitter-hl-face:property fontified nil) 7083 7084 (face (rainbow-delimiters-depth-1-face) fontified nil) 7084 7094 (fontified nil) 7094 7096 (face tree-sitter-hl-face:keyword fontified nil) 7096 7097 (fontified nil) 7097 7098 (face tree-sitter-hl-face:string fontified nil) 7098 7101 (face tree-sitter-hl-face:string fontified nil) 7101 7102 (face tree-sitter-hl-face:string fontified nil) 7102 7103 (fontified nil) 7103 7105 (face tree-sitter-hl-face:operator fontified nil) 7105 7106 (fontified nil) 7106 7110 (face tree-sitter-hl-face:keyword fontified nil) 7110 7111 (fontified nil) 7111 7120 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7120 7121 (face (rainbow-delimiters-depth-1-face) fontified nil) 7121 7133 (fontified nil) 7133 7134 (face (rainbow-delimiters-depth-1-face) fontified nil) 7134 7148 (fontified nil) 7148 7153 (face tree-sitter-hl-face:variable fontified nil) 7153 7154 (fontified nil) 7154 7155 (face tree-sitter-hl-face:operator fontified nil) 7155 7162 (fontified nil) 7162 7168 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7168 7169 (face (rainbow-delimiters-depth-1-face) fontified nil) 7169 7170 (face tree-sitter-hl-face:number fontified nil) 7170 7172 (fontified nil) 7172 7175 (face tree-sitter-hl-face:number fontified nil) 7175 7176 (fontified nil) 7176 7177 (face tree-sitter-hl-face:operator fontified nil) 7177 7184 (fontified nil) 7184 7186 (face tree-sitter-hl-face:property fontified nil) 7186 7188 (fontified nil) 7188 7191 (face tree-sitter-hl-face:number fontified nil) 7191 7192 (fontified nil) 7192 7193 (face tree-sitter-hl-face:operator fontified nil) 7193 7200 (fontified nil) 7200 7202 (face tree-sitter-hl-face:property fontified nil) 7202 7203 (fontified nil) 7203 7204 (face tree-sitter-hl-face:operator fontified nil) 7204 7205 (fontified nil) 7205 7210 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 7210 7211 (face (rainbow-delimiters-depth-2-face) fontified nil) 7211 7213 (face tree-sitter-hl-face:constructor fontified nil) 7213 7214 (face (rainbow-delimiters-depth-2-face) fontified nil) 7214 7216 (fontified nil) 7216 7221 (face tree-sitter-hl-face:label fontified nil) 7221 7222 (face tree-sitter-hl-face:operator fontified nil) 7222 7226 (face tree-sitter-hl-face:keyword fontified nil) 7226 7227 (fontified nil) 7227 7232 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7232 7234 (fontified nil) 7234 7240 (face tree-sitter-hl-face:label fontified nil) 7240 7241 (face tree-sitter-hl-face:operator fontified nil) 7241 7245 (face tree-sitter-hl-face:keyword fontified nil) 7245 7246 (fontified nil) 7246 7252 (face tree-sitter-hl-face:property fontified nil) 7252 7253 (face (rainbow-delimiters-depth-1-face) fontified nil) 7253 7266 (fontified nil) 7266 7269 (face tree-sitter-hl-face:variable fontified nil) 7269 7270 (fontified nil) 7270 7271 (face tree-sitter-hl-face:operator fontified nil) 7271 7278 (fontified nil) 7278 7284 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7284 7285 (face (rainbow-delimiters-depth-1-face) fontified nil) 7285 7286 (face tree-sitter-hl-face:number fontified nil) 7286 7288 (fontified nil) 7288 7291 (face tree-sitter-hl-face:number fontified nil) 7291 7292 (fontified nil) 7292 7293 (face tree-sitter-hl-face:operator fontified nil) 7293 7300 (fontified nil) 7300 7302 (face tree-sitter-hl-face:property fontified nil) 7302 7304 (fontified nil) 7304 7307 (face tree-sitter-hl-face:number fontified nil) 7307 7308 (fontified nil) 7308 7309 (face tree-sitter-hl-face:operator fontified nil) 7309 7316 (fontified nil) 7316 7318 (face tree-sitter-hl-face:property fontified nil) 7318 7319 (fontified nil) 7319 7320 (face tree-sitter-hl-face:operator fontified nil) 7320 7321 (fontified nil) 7321 7326 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 7326 7327 (face (rainbow-delimiters-depth-2-face) fontified nil) 7327 7329 (face tree-sitter-hl-face:constructor fontified nil) 7329 7330 (face (rainbow-delimiters-depth-2-face) fontified nil) 7330 7332 (fontified nil) 7332 7337 (face tree-sitter-hl-face:label fontified nil) 7337 7338 (face tree-sitter-hl-face:operator fontified nil) 7338 7342 (face tree-sitter-hl-face:keyword fontified nil) 7342 7343 (fontified nil) 7343 7348 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7348 7350 (fontified nil) 7350 7356 (face tree-sitter-hl-face:label fontified nil) 7356 7357 (face tree-sitter-hl-face:operator fontified nil) 7357 7361 (face tree-sitter-hl-face:keyword fontified nil) 7361 7362 (fontified nil) 7362 7368 (face tree-sitter-hl-face:property fontified nil) 7368 7369 (face (rainbow-delimiters-depth-1-face) fontified nil) 7369 7383 (fontified nil) 7383 7384 (face tree-sitter-hl-face:variable fontified nil) 7384 7386 (fontified nil) 7386 7387 (face tree-sitter-hl-face:variable fontified nil) 7387 7388 (fontified nil) 7388 7389 (face tree-sitter-hl-face:operator fontified nil) 7389 7396 (fontified nil) 7396 7404 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7404 7405 (face (rainbow-delimiters-depth-1-face) fontified nil) 7405 7411 (fontified nil) 7411 7417 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7417 7418 (face (rainbow-delimiters-depth-2-face) fontified nil) 7418 7420 (face tree-sitter-hl-face:constructor fontified nil) 7420 7422 (fontified nil) 7422 7428 (face tree-sitter-hl-face:label fontified nil) 7428 7429 (face tree-sitter-hl-face:operator fontified nil) 7429 7433 (face tree-sitter-hl-face:keyword fontified nil) 7433 7434 (fontified nil) 7434 7440 (face tree-sitter-hl-face:property fontified nil) 7440 7441 (face (rainbow-delimiters-depth-2-face) fontified nil) 7441 7449 (fontified nil) 7449 7455 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7455 7456 (face (rainbow-delimiters-depth-2-face) fontified nil) 7456 7458 (face tree-sitter-hl-face:constructor fontified nil) 7458 7460 (fontified nil) 7460 7466 (face tree-sitter-hl-face:label fontified nil) 7466 7467 (face tree-sitter-hl-face:operator fontified nil) 7467 7471 (face tree-sitter-hl-face:keyword fontified nil) 7471 7472 (fontified nil) 7472 7478 (face tree-sitter-hl-face:property fontified nil) 7478 7479 (face (rainbow-delimiters-depth-2-face) fontified nil) 7479 7481 (fontified nil) 7481 7489 (face tree-sitter-hl-face:label fontified nil) 7489 7490 (face tree-sitter-hl-face:operator fontified nil) 7490 7491 (face tree-sitter-hl-face:string fontified nil) 7491 7493 (face tree-sitter-hl-face:string fontified nil) 7493 7494 (face tree-sitter-hl-face:string fontified nil) 7494 7495 (face (rainbow-delimiters-depth-1-face) fontified nil) 7495 7509 (fontified nil) 7509 7519 (face tree-sitter-hl-face:variable fontified nil) 7519 7520 (fontified nil) 7520 7521 (face tree-sitter-hl-face:operator fontified nil) 7521 7527 (fontified nil) 7527 7528 (face (rainbow-delimiters-depth-1-face) fontified nil) 7528 7529 (fontified nil) 7529 7530 (face (rainbow-delimiters-depth-1-face) fontified nil) 7530 7531 (fontified nil) 7531 7532 (face tree-sitter-hl-face:operator fontified nil) 7532 7536 (fontified nil) 7536 7537 (face (rainbow-delimiters-depth-1-face) fontified nil) 7537 7538 (fontified nil) 7538 7539 (face (rainbow-delimiters-depth-1-face) fontified nil) 7539 7553 (fontified nil) 7553 7555 (face tree-sitter-hl-face:keyword fontified nil) 7555 7556 (fontified nil) 7556 7557 (face tree-sitter-hl-face:string fontified nil) 7557 7561 (face tree-sitter-hl-face:string fontified nil) 7561 7562 (face tree-sitter-hl-face:string fontified nil) 7562 7563 (fontified nil) 7563 7565 (face tree-sitter-hl-face:operator fontified nil) 7565 7566 (fontified nil) 7566 7570 (face tree-sitter-hl-face:keyword fontified nil) 7570 7571 (fontified nil) 7571 7580 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7580 7581 (face (rainbow-delimiters-depth-1-face) fontified nil) 7581 7593 (fontified nil) 7593 7594 (face (rainbow-delimiters-depth-1-face) fontified nil) 7594 7612 (fontified nil) 7612 7616 (face tree-sitter-hl-face:keyword fontified nil) 7616 7617 (fontified nil) 7617 7622 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7622 7623 (face (rainbow-delimiters-depth-1-face) fontified nil) 7623 7628 (face tree-sitter-hl-face:variable fontified nil) 7628 7630 (fontified nil) 7630 7635 (face tree-sitter-hl-face:variable fontified nil) 7635 7636 (face (rainbow-delimiters-depth-1-face) fontified nil) 7636 7637 (fontified nil) 7637 7638 (face tree-sitter-hl-face:operator fontified nil) 7638 7639 (fontified nil) 7639 7643 (face tree-sitter-hl-face:keyword fontified nil) 7643 7644 (fontified nil) 7644 7649 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7649 7650 (face (rainbow-delimiters-depth-1-face) fontified nil) 7650 7662 (fontified nil) 7662 7663 (face (rainbow-delimiters-depth-1-face) fontified nil) 7663 7664 (fontified nil) 7664 7665 (face tree-sitter-hl-face:operator fontified nil) 7665 7672 (fontified nil) 7672 7676 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7676 7677 (face (rainbow-delimiters-depth-1-face) fontified nil) 7677 7679 (face tree-sitter-hl-face:constructor fontified nil) 7679 7680 (face (rainbow-delimiters-depth-1-face) fontified nil) 7680 7694 (fontified nil) 7694 7697 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 7697 7698 (fontified nil) 7698 7699 (face tree-sitter-hl-face:operator fontified nil) 7699 7700 (fontified nil) 7700 7703 (face tree-sitter-hl-face:number fontified nil) 7703 7704 (fontified nil) 7704 7705 (face tree-sitter-hl-face:operator fontified nil) 7705 7706 (fontified nil) 7706 7709 (face tree-sitter-hl-face:number fontified nil) 7709 7710 (fontified nil) 7710 7711 (face tree-sitter-hl-face:operator fontified nil) 7711 7712 (fontified nil) 7712 7716 (face tree-sitter-hl-face:keyword fontified nil) 7716 7717 (fontified nil) 7717 7722 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7722 7723 (face (rainbow-delimiters-depth-1-face) fontified nil) 7723 7735 (fontified nil) 7735 7736 (face (rainbow-delimiters-depth-1-face) fontified nil) 7736 7737 (fontified nil) 7737 7738 (face tree-sitter-hl-face:operator fontified nil) 7738 7745 (fontified nil) 7745 7748 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7748 7749 (face (rainbow-delimiters-depth-1-face) fontified nil) 7749 7760 (fontified nil) 7760 7761 (face tree-sitter-hl-face:operator fontified nil) 7761 7762 (fontified nil) 7762 7766 (face tree-sitter-hl-face:keyword fontified nil) 7766 7767 (fontified nil) 7767 7772 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7772 7773 (face (rainbow-delimiters-depth-1-face) fontified nil) 7773 7783 (fontified nil) 7783 7785 (face tree-sitter-hl-face:keyword fontified nil) 7785 7786 (fontified nil) 7786 7787 (face tree-sitter-hl-face:string fontified nil) 7787 7793 (face tree-sitter-hl-face:string fontified nil) 7793 7794 (face tree-sitter-hl-face:string fontified nil) 7794 7795 (fontified nil) 7795 7797 (face tree-sitter-hl-face:operator fontified nil) 7797 7798 (fontified nil) 7798 7802 (face tree-sitter-hl-face:keyword fontified nil) 7802 7803 (fontified nil) 7803 7815 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7815 7829 (fontified nil) 7829 7831 (face tree-sitter-hl-face:keyword fontified nil) 7831 7832 (fontified nil) 7832 7836 (face tree-sitter-hl-face:keyword fontified nil) 7836 7837 (fontified nil) 7837 7844 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7844 7862 (fontified nil) 7862 7867 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 7867 7868 (face (rainbow-delimiters-depth-1-face) fontified nil) 7868 7869 (face tree-sitter-hl-face:string fontified nil) 7869 7896 (face tree-sitter-hl-face:string fontified nil) 7896 7897 (face tree-sitter-hl-face:string fontified nil) 7897 7898 (face (rainbow-delimiters-depth-1-face) fontified nil) 7898 7912 (fontified nil) 7912 7915 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 7915 7916 (fontified nil) 7916 7917 (face tree-sitter-hl-face:operator fontified nil) 7917 7918 (fontified nil) 7918 7922 (face tree-sitter-hl-face:keyword fontified nil) 7922 7923 (fontified nil) 7923 7926 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 7926 7927 (face (rainbow-delimiters-depth-1-face) fontified nil) 7927 7939 (fontified nil) 7939 7940 (face (rainbow-delimiters-depth-1-face) fontified nil) 7940 7941 (fontified nil) 7941 7942 (face tree-sitter-hl-face:operator fontified nil) 7942 7943 (fontified nil) 7943 7944 (face (rainbow-delimiters-depth-1-face) fontified nil) 7944 7950 (fontified nil) 7950 7954 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 7954 7955 (face (rainbow-delimiters-depth-2-face) fontified nil) 7955 7957 (face tree-sitter-hl-face:constructor fontified nil) 7957 7959 (fontified nil) 7959 7961 (face tree-sitter-hl-face:constructor fontified nil) 7961 7963 (fontified nil) 7963 7969 (face tree-sitter-hl-face:label fontified nil) 7969 7970 (face tree-sitter-hl-face:operator fontified nil) 7970 7974 (face tree-sitter-hl-face:keyword fontified nil) 7974 7975 (fontified nil) 7975 7981 (face tree-sitter-hl-face:property fontified nil) 7981 7982 (face (rainbow-delimiters-depth-2-face) fontified nil) 7982 7983 (fontified nil) 7983 7984 (face tree-sitter-hl-face:operator fontified nil) 7984 7985 (fontified nil) 7985 7987 (face tree-sitter-hl-face:constructor fontified nil) 7987 7988 (fontified nil) 7988 7989 (face tree-sitter-hl-face:operator fontified nil) 7989 7990 (fontified nil) 7990 7995 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 7995 7996 (face (rainbow-delimiters-depth-2-face) fontified nil) 7996 7998 (face tree-sitter-hl-face:constructor fontified nil) 7998 7999 (face (rainbow-delimiters-depth-2-face) fontified nil) 7999 8000 (fontified nil) 8000 8001 (face tree-sitter-hl-face:operator fontified nil) 8001 8002 (fontified nil) 8002 8005 (face tree-sitter-hl-face:constructor fontified nil) 8005 8006 (face (rainbow-delimiters-depth-1-face) fontified nil) 8006 8016 (fontified nil) 8016 8018 (face tree-sitter-hl-face:keyword fontified nil) 8018 8019 (fontified nil) 8019 8020 (face tree-sitter-hl-face:string fontified nil) 8020 8027 (face tree-sitter-hl-face:string fontified nil) 8027 8028 (face tree-sitter-hl-face:string fontified nil) 8028 8029 (fontified nil) 8029 8031 (face tree-sitter-hl-face:operator fontified nil) 8031 8032 (fontified nil) 8032 8036 (face tree-sitter-hl-face:keyword fontified nil) 8036 8037 (fontified nil) 8037 8049 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8049 8063 (fontified nil) 8063 8065 (face tree-sitter-hl-face:keyword fontified nil) 8065 8066 (fontified nil) 8066 8070 (face tree-sitter-hl-face:keyword fontified nil) 8070 8071 (fontified nil) 8071 8078 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8078 8096 (fontified nil) 8096 8101 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8101 8102 (face (rainbow-delimiters-depth-1-face) fontified nil) 8102 8103 (face tree-sitter-hl-face:string fontified nil) 8103 8127 (face tree-sitter-hl-face:string fontified nil) 8127 8128 (face tree-sitter-hl-face:string fontified nil) 8128 8129 (face (rainbow-delimiters-depth-1-face) fontified nil) 8129 8143 (fontified nil) 8143 8146 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 8146 8147 (fontified nil) 8147 8148 (face tree-sitter-hl-face:operator fontified nil) 8148 8149 (fontified nil) 8149 8153 (face tree-sitter-hl-face:keyword fontified nil) 8153 8154 (fontified nil) 8154 8157 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8157 8158 (face (rainbow-delimiters-depth-1-face) fontified nil) 8158 8170 (fontified nil) 8170 8171 (face (rainbow-delimiters-depth-1-face) fontified nil) 8171 8172 (fontified nil) 8172 8173 (face tree-sitter-hl-face:operator fontified nil) 8173 8174 (fontified nil) 8174 8177 (face tree-sitter-hl-face:constructor fontified nil) 8177 8178 (fontified nil) 8178 8179 (face tree-sitter-hl-face:operator fontified nil) 8179 8180 (fontified nil) 8180 8185 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8185 8186 (face (rainbow-delimiters-depth-1-face) fontified nil) 8186 8188 (face tree-sitter-hl-face:constructor fontified nil) 8188 8189 (face (rainbow-delimiters-depth-1-face) fontified nil) 8189 8203 (fontified nil) 8203 8205 (face tree-sitter-hl-face:keyword fontified nil) 8205 8206 (fontified nil) 8206 8210 (face tree-sitter-hl-face:keyword fontified nil) 8210 8211 (fontified nil) 8211 8216 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8216 8217 (face (rainbow-delimiters-depth-1-face) fontified nil) 8217 8229 (fontified nil) 8229 8230 (face (rainbow-delimiters-depth-1-face) fontified nil) 8230 8231 (fontified nil) 8231 8232 (face tree-sitter-hl-face:operator fontified nil) 8232 8233 (fontified nil) 8233 8236 (face tree-sitter-hl-face:number fontified nil) 8236 8254 (fontified nil) 8254 8256 (face tree-sitter-hl-face:keyword fontified nil) 8256 8257 (fontified nil) 8257 8261 (face tree-sitter-hl-face:keyword fontified nil) 8261 8262 (fontified nil) 8262 8269 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8269 8291 (fontified nil) 8291 8296 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8296 8297 (face (rainbow-delimiters-depth-1-face) fontified nil) 8297 8298 (face tree-sitter-hl-face:string fontified nil) 8298 8323 (face tree-sitter-hl-face:string fontified nil) 8323 8324 (face tree-sitter-hl-face:string fontified nil) 8324 8326 (fontified nil) 8326 8330 (face tree-sitter-hl-face:keyword fontified nil) 8330 8331 (fontified nil) 8331 8336 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8336 8337 (face (rainbow-delimiters-depth-2-face) fontified nil) 8337 8349 (fontified nil) 8349 8350 (face (rainbow-delimiters-depth-2-face) fontified nil) 8350 8351 (face (rainbow-delimiters-depth-1-face) fontified nil) 8351 8369 (fontified nil) 8369 8372 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 8372 8373 (fontified nil) 8373 8374 (face tree-sitter-hl-face:operator fontified nil) 8374 8381 (fontified nil) 8381 8387 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 8387 8388 (face (rainbow-delimiters-depth-1-face) fontified nil) 8388 8389 (face tree-sitter-hl-face:number fontified nil) 8389 8391 (fontified nil) 8391 8395 (face tree-sitter-hl-face:keyword fontified nil) 8395 8396 (fontified nil) 8396 8401 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8401 8402 (face (rainbow-delimiters-depth-2-face) fontified nil) 8402 8414 (fontified nil) 8414 8415 (face (rainbow-delimiters-depth-2-face) fontified nil) 8415 8417 (fontified nil) 8417 8421 (face tree-sitter-hl-face:label fontified nil) 8421 8422 (face tree-sitter-hl-face:operator fontified nil) 8422 8423 (face (rainbow-delimiters-depth-2-face) fontified nil) 8423 8425 (face tree-sitter-hl-face:constructor fontified nil) 8425 8427 (fontified nil) 8427 8429 (face tree-sitter-hl-face:constructor fontified nil) 8429 8430 (face (rainbow-delimiters-depth-2-face) fontified nil) 8430 8432 (fontified nil) 8432 8437 (face tree-sitter-hl-face:label fontified nil) 8437 8438 (face tree-sitter-hl-face:operator fontified nil) 8438 8442 (face tree-sitter-hl-face:keyword fontified nil) 8442 8443 (fontified nil) 8443 8448 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8448 8450 (fontified nil) 8450 8456 (face tree-sitter-hl-face:label fontified nil) 8456 8457 (face tree-sitter-hl-face:operator fontified nil) 8457 8461 (face tree-sitter-hl-face:keyword fontified nil) 8461 8462 (fontified nil) 8462 8468 (face tree-sitter-hl-face:property fontified nil) 8468 8469 (face (rainbow-delimiters-depth-1-face) fontified nil) 8469 8486 (fontified nil) 8486 8489 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified nil) 8489 8490 (fontified nil) 8490 8491 (face tree-sitter-hl-face:operator fontified nil) 8491 8492 (fontified nil) 8492 8495 (face tree-sitter-hl-face:constructor fontified nil) 8495 8496 (fontified nil) 8496 8497 (face tree-sitter-hl-face:operator fontified nil) 8497 8498 (fontified nil) 8498 8501 (face tree-sitter-hl-face:constructor fontified nil) 8501 8502 (fontified nil) 8502 8503 (face tree-sitter-hl-face:operator fontified nil) 8503 8504 (fontified nil) 8504 8509 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8509 8510 (face (rainbow-delimiters-depth-1-face) fontified nil) 8510 8512 (face tree-sitter-hl-face:constructor fontified nil) 8512 8513 (face (rainbow-delimiters-depth-1-face) fontified nil) 8513 8523 (fontified nil) 8523 8525 (face tree-sitter-hl-face:keyword fontified nil) 8525 8526 (fontified nil) 8526 8530 (face tree-sitter-hl-face:keyword fontified nil) 8530 8531 (fontified nil) 8531 8538 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8538 8552 (fontified nil) 8552 8554 (face tree-sitter-hl-face:keyword fontified nil) 8554 8555 (fontified nil) 8555 8556 (face tree-sitter-hl-face:string fontified nil) 8556 8559 (face tree-sitter-hl-face:string fontified nil) 8559 8560 (face tree-sitter-hl-face:string fontified nil) 8560 8561 (fontified nil) 8561 8563 (face tree-sitter-hl-face:operator fontified nil) 8563 8564 (fontified nil) 8564 8568 (face tree-sitter-hl-face:keyword fontified nil) 8568 8569 (fontified nil) 8569 8578 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8578 8579 (face (rainbow-delimiters-depth-1-face) fontified nil) 8579 8591 (fontified nil) 8591 8592 (face (rainbow-delimiters-depth-1-face) fontified nil) 8592 8610 (fontified nil) 8610 8612 (face tree-sitter-hl-face:keyword fontified nil) 8612 8613 (fontified nil) 8613 8614 (face tree-sitter-hl-face:string fontified nil) 8614 8618 (face tree-sitter-hl-face:string fontified nil) 8618 8619 (face tree-sitter-hl-face:string fontified nil) 8619 8620 (fontified nil) 8620 8622 (face tree-sitter-hl-face:operator fontified nil) 8622 8623 (fontified nil) 8623 8627 (face tree-sitter-hl-face:keyword fontified nil) 8627 8628 (fontified nil) 8628 8637 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8637 8638 (face (rainbow-delimiters-depth-1-face) fontified nil) 8638 8650 (fontified nil) 8650 8651 (face (rainbow-delimiters-depth-1-face) fontified nil) 8651 8673 (fontified nil) 8673 8678 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8678 8679 (face (rainbow-delimiters-depth-1-face) fontified nil) 8679 8680 (face tree-sitter-hl-face:string fontified nil) 8680 8718 (face tree-sitter-hl-face:string fontified nil) 8718 8719 (face tree-sitter-hl-face:string fontified nil) 8719 8720 (fontified nil) 8720 8721 (face tree-sitter-hl-face:operator fontified nil) 8721 8722 (fontified nil) 8722 8726 (face tree-sitter-hl-face:keyword fontified nil) 8726 8727 (fontified nil) 8727 8732 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8732 8733 (face (rainbow-delimiters-depth-2-face) fontified nil) 8733 8745 (fontified nil) 8745 8746 (face (rainbow-delimiters-depth-2-face) fontified nil) 8746 8747 (fontified nil) 8747 8750 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 8750 8751 (face (rainbow-delimiters-depth-2-face) fontified nil) 8751 8752 (face (rainbow-delimiters-depth-2-face) fontified nil) 8752 8753 (fontified nil) 8753 8759 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 8759 8760 (face (rainbow-delimiters-depth-2-face) fontified nil) 8760 8761 (face (rainbow-delimiters-depth-2-face) fontified nil) 8761 8762 (fontified nil) 8762 8767 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 8767 8768 (face (rainbow-delimiters-depth-2-face) fontified nil) 8768 8769 (face (rainbow-delimiters-depth-2-face) fontified nil) 8769 8770 (face (rainbow-delimiters-depth-1-face) fontified nil) 8770 8787 (fontified nil) 8787 8791 (face tree-sitter-hl-face:keyword fontified nil) 8791 8813 (fontified nil) 8813 8818 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8818 8819 (face (rainbow-delimiters-depth-1-face) fontified nil) 8819 8820 (face tree-sitter-hl-face:string fontified nil) 8820 8855 (face tree-sitter-hl-face:string fontified nil) 8855 8856 (face tree-sitter-hl-face:string fontified nil) 8856 8858 (fontified nil) 8858 8862 (face tree-sitter-hl-face:keyword fontified nil) 8862 8863 (fontified nil) 8863 8868 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8868 8869 (face (rainbow-delimiters-depth-2-face) fontified nil) 8869 8881 (fontified nil) 8881 8882 (face (rainbow-delimiters-depth-2-face) fontified nil) 8882 8883 (face (rainbow-delimiters-depth-1-face) fontified nil) 8883 8896 (fontified nil) 8896 8900 (face tree-sitter-hl-face:keyword fontified nil) 8900 8901 (fontified nil) 8901 8902 (face tree-sitter-hl-face:string fontified nil) 8902 8904 (face tree-sitter-hl-face:string fontified nil) 8904 8905 (face tree-sitter-hl-face:string fontified nil) 8905 8906 (fontified nil) 8906 8908 (face tree-sitter-hl-face:operator fontified nil) 8908 8909 (fontified nil) 8909 8913 (face tree-sitter-hl-face:keyword fontified nil) 8913 8914 (fontified nil) 8914 8923 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 8923 8924 (face (rainbow-delimiters-depth-1-face) fontified nil) 8924 8936 (fontified nil) 8936 8937 (face (rainbow-delimiters-depth-1-face) fontified nil) 8937 8955 (fontified nil) 8955 8960 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 8960 8961 (face (rainbow-delimiters-depth-1-face) fontified nil) 8961 8962 (face tree-sitter-hl-face:string fontified nil) 8962 9002 (face tree-sitter-hl-face:string fontified nil) 9002 9003 (face tree-sitter-hl-face:string fontified nil) 9003 9004 (fontified nil) 9004 9005 (face tree-sitter-hl-face:operator fontified nil) 9005 9006 (fontified nil) 9006 9010 (face tree-sitter-hl-face:keyword fontified nil) 9010 9011 (fontified nil) 9011 9016 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9016 9017 (face (rainbow-delimiters-depth-2-face) fontified nil) 9017 9029 (fontified nil) 9029 9030 (face (rainbow-delimiters-depth-2-face) fontified nil) 9030 9031 (fontified nil) 9031 9034 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9034 9035 (face (rainbow-delimiters-depth-2-face) fontified nil) 9035 9036 (face (rainbow-delimiters-depth-2-face) fontified nil) 9036 9037 (fontified nil) 9037 9043 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9043 9044 (face (rainbow-delimiters-depth-2-face) fontified nil) 9044 9045 (face (rainbow-delimiters-depth-2-face) fontified nil) 9045 9046 (fontified nil) 9046 9051 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9051 9052 (face (rainbow-delimiters-depth-2-face) fontified nil) 9052 9053 (face (rainbow-delimiters-depth-2-face) fontified nil) 9053 9054 (face (rainbow-delimiters-depth-1-face) fontified nil) 9054 9064 (fontified nil) 9064 9070 (face tree-sitter-hl-face:keyword fontified nil) 9070 9071 (fontified nil) 9071 9074 (face tree-sitter-hl-face:constructor fontified nil) 9074 9080 (fontified nil) 9080 9083 (face tree-sitter-hl-face:keyword fontified nil) 9083 9084 (fontified nil) 9084 9093 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 9093 9094 (face (rainbow-delimiters-depth-1-face) fontified nil) 9094 9098 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 9098 9099 (face (rainbow-delimiters-depth-1-face) fontified nil) 9099 9109 (fontified nil) 9109 9113 (face tree-sitter-hl-face:keyword fontified nil) 9113 9114 (fontified nil) 9114 9116 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9116 9117 (fontified nil) 9117 9118 (face tree-sitter-hl-face:operator fontified nil) 9118 9119 (fontified nil) 9119 9120 (face (rainbow-delimiters-depth-1-face) fontified nil) 9120 9121 (face (rainbow-delimiters-depth-1-face) fontified nil) 9121 9130 (fontified nil) 9130 9134 (face tree-sitter-hl-face:keyword fontified nil) 9134 9135 (fontified nil) 9135 9137 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9137 9138 (fontified nil) 9138 9139 (face tree-sitter-hl-face:operator fontified nil) 9139 9140 (fontified nil) 9140 9141 (face (rainbow-delimiters-depth-1-face) fontified nil) 9141 9142 (face (rainbow-delimiters-depth-1-face) fontified nil) 9142 9152 (fontified nil) 9152 9154 (face tree-sitter-hl-face:keyword fontified nil) 9154 9155 (fontified nil) 9155 9156 (face tree-sitter-hl-face:string fontified nil) 9156 9163 (face tree-sitter-hl-face:string fontified nil) 9163 9164 (face tree-sitter-hl-face:string fontified nil) 9164 9165 (fontified nil) 9165 9167 (face tree-sitter-hl-face:operator fontified nil) 9167 9168 (fontified nil) 9168 9172 (face tree-sitter-hl-face:keyword fontified nil) 9172 9173 (fontified nil) 9173 9185 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9185 9199 (fontified nil) 9199 9203 (face tree-sitter-hl-face:keyword fontified nil) 9203 9204 (fontified nil) 9204 9205 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9205 9206 (fontified nil) 9206 9207 (face tree-sitter-hl-face:operator fontified nil) 9207 9208 (fontified nil) 9208 9211 (face tree-sitter-hl-face:number fontified nil) 9211 9221 (fontified nil) 9221 9224 (face tree-sitter-hl-face:keyword fontified nil) 9224 9225 (fontified nil) 9225 9230 (face tree-sitter-hl-face:variable fontified nil) 9230 9231 (fontified nil) 9231 9233 (face tree-sitter-hl-face:operator fontified nil) 9233 9234 (fontified nil) 9234 9239 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 9239 9240 (face (rainbow-delimiters-depth-1-face) fontified nil) 9240 9244 (face tree-sitter-hl-face:keyword fontified nil) 9244 9245 (fontified nil) 9245 9250 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9250 9251 (face (rainbow-delimiters-depth-1-face) fontified nil) 9251 9265 (fontified nil) 9265 9269 (face tree-sitter-hl-face:keyword fontified nil) 9269 9270 (fontified nil) 9270 9272 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9272 9273 (fontified nil) 9273 9279 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9279 9280 (face (rainbow-delimiters-depth-1-face) fontified nil) 9280 9283 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 9283 9284 (face (rainbow-delimiters-depth-2-face) fontified nil) 9284 9288 (face tree-sitter-hl-face:keyword fontified nil) 9288 9289 (fontified nil) 9289 9297 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9297 9298 (fontified nil) 9298 9299 (face tree-sitter-hl-face:operator fontified nil) 9299 9300 (fontified nil) 9300 9304 (face tree-sitter-hl-face:keyword fontified nil) 9304 9305 (fontified nil) 9305 9309 (face tree-sitter-hl-face:property fontified nil) 9309 9310 (face (rainbow-delimiters-depth-3-face) fontified nil) 9310 9315 (fontified nil) 9315 9316 (face (rainbow-delimiters-depth-3-face) fontified nil) 9316 9317 (face (rainbow-delimiters-depth-2-face) fontified nil) 9317 9318 (face (rainbow-delimiters-depth-1-face) fontified nil) 9318 9331 (fontified nil) 9331 9375 (face tree-sitter-hl-face:comment fontified nil) 9375 9388 (fontified nil) 9388 9392 (face tree-sitter-hl-face:keyword fontified nil) 9392 9393 (fontified nil) 9393 9395 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9395 9396 (fontified nil) 9396 9402 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9402 9403 (face (rainbow-delimiters-depth-1-face) fontified nil) 9403 9407 (face tree-sitter-hl-face:keyword fontified nil) 9407 9408 (fontified nil) 9408 9409 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9409 9410 (face (rainbow-delimiters-depth-1-face) fontified nil) 9410 9420 (fontified nil) 9420 9424 (face tree-sitter-hl-face:keyword fontified nil) 9424 9425 (fontified nil) 9425 9427 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9427 9428 (fontified nil) 9428 9429 (face tree-sitter-hl-face:operator fontified nil) 9429 9436 (fontified nil) 9436 9442 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9442 9443 (face (rainbow-delimiters-depth-1-face) fontified nil) 9443 9447 (face tree-sitter-hl-face:keyword fontified nil) 9447 9448 (fontified nil) 9448 9450 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9450 9452 (fontified nil) 9452 9457 (face tree-sitter-hl-face:label fontified nil) 9457 9458 (face tree-sitter-hl-face:operator fontified nil) 9458 9464 (fontified nil) 9464 9467 (face tree-sitter-hl-face:property fontified nil) 9467 9469 (fontified nil) 9469 9475 (face tree-sitter-hl-face:label fontified nil) 9475 9476 (face tree-sitter-hl-face:operator fontified nil) 9476 9480 (face tree-sitter-hl-face:keyword fontified nil) 9480 9481 (fontified nil) 9481 9487 (face tree-sitter-hl-face:property fontified nil) 9487 9488 (face (rainbow-delimiters-depth-1-face) fontified nil) 9488 9497 (fontified nil) 9497 9501 (face tree-sitter-hl-face:keyword fontified nil) 9501 9502 (fontified nil) 9502 9504 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9504 9505 (fontified nil) 9505 9506 (face tree-sitter-hl-face:operator fontified nil) 9506 9513 (fontified nil) 9513 9519 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9519 9520 (face (rainbow-delimiters-depth-1-face) fontified nil) 9520 9524 (face tree-sitter-hl-face:keyword fontified nil) 9524 9525 (fontified nil) 9525 9527 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9527 9529 (fontified nil) 9529 9534 (face tree-sitter-hl-face:label fontified nil) 9534 9535 (face tree-sitter-hl-face:operator fontified nil) 9535 9539 (face tree-sitter-hl-face:keyword fontified nil) 9539 9540 (fontified nil) 9540 9545 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9545 9547 (fontified nil) 9547 9553 (face tree-sitter-hl-face:label fontified nil) 9553 9554 (face tree-sitter-hl-face:operator fontified nil) 9554 9558 (face tree-sitter-hl-face:keyword fontified nil) 9558 9559 (fontified nil) 9559 9565 (face tree-sitter-hl-face:property fontified nil) 9565 9566 (face (rainbow-delimiters-depth-1-face) fontified nil) 9566 9575 (fontified nil) 9575 9579 (face tree-sitter-hl-face:keyword fontified nil) 9579 9580 (fontified nil) 9580 9586 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 9586 9587 (fontified nil) 9587 9588 (face tree-sitter-hl-face:operator fontified nil) 9588 9595 (fontified nil) 9595 9598 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9598 9599 (face (rainbow-delimiters-depth-1-face) fontified nil) 9599 9600 (face (rainbow-delimiters-depth-2-face) fontified nil) 9600 9606 (fontified nil) 9606 9612 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9612 9613 (face (rainbow-delimiters-depth-3-face) fontified nil) 9613 9614 (face (rainbow-delimiters-depth-4-face) fontified nil) 9614 9615 (face tree-sitter-hl-face:number fontified nil) 9615 9616 (face (rainbow-delimiters-depth-4-face) fontified nil) 9616 9617 (face (rainbow-delimiters-depth-3-face) fontified nil) 9617 9625 (fontified nil) 9625 9631 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9631 9632 (face (rainbow-delimiters-depth-3-face) fontified nil) 9632 9636 (face tree-sitter-hl-face:keyword fontified nil) 9636 9637 (fontified nil) 9637 9639 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9639 9641 (fontified nil) 9641 9644 (face tree-sitter-hl-face:label fontified nil) 9644 9645 (face tree-sitter-hl-face:operator fontified nil) 9645 9646 (face tree-sitter-hl-face:number fontified nil) 9646 9647 (face (rainbow-delimiters-depth-3-face) fontified nil) 9647 9648 (face (rainbow-delimiters-depth-2-face) fontified nil) 9648 9649 (face (rainbow-delimiters-depth-1-face) fontified nil) 9649 9659 (fontified nil) 9659 9661 (face tree-sitter-hl-face:keyword fontified nil) 9661 9662 (fontified nil) 9662 9666 (face tree-sitter-hl-face:keyword fontified nil) 9666 9667 (fontified nil) 9667 9674 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9674 9688 (fontified nil) 9688 9693 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 9693 9694 (face (rainbow-delimiters-depth-1-face) fontified nil) 9694 9695 (face tree-sitter-hl-face:string fontified nil) 9695 9697 (face tree-sitter-hl-face:string fontified nil) 9697 9698 (face tree-sitter-hl-face:string fontified nil) 9698 9700 (fontified nil) 9700 9704 (face tree-sitter-hl-face:keyword fontified nil) 9704 9705 (fontified nil) 9705 9707 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9707 9709 (fontified nil) 9709 9710 (face tree-sitter-hl-face:string fontified nil) 9710 9712 (face tree-sitter-hl-face:string fontified nil) 9712 9713 (face tree-sitter-hl-face:string fontified nil) 9713 9715 (fontified nil) 9715 9719 (face tree-sitter-hl-face:keyword fontified nil) 9719 9720 (fontified nil) 9720 9722 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9722 9724 (fontified nil) 9724 9725 (face tree-sitter-hl-face:string fontified nil) 9725 9731 (face tree-sitter-hl-face:string fontified nil) 9731 9732 (face tree-sitter-hl-face:string fontified nil) 9732 9734 (fontified nil) 9734 9738 (face tree-sitter-hl-face:keyword fontified nil) 9738 9739 (fontified nil) 9739 9745 (face tree-sitter-hl-face:property fontified nil) 9745 9746 (face (rainbow-delimiters-depth-1-face) fontified nil) 9746 9756 (fontified nil) 9756 9760 (face tree-sitter-hl-face:keyword fontified nil) 9760 9761 (fontified nil) 9761 9764 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9764 9765 (fontified nil) 9765 9766 (face tree-sitter-hl-face:operator fontified nil) 9766 9773 (fontified nil) 9773 9779 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9779 9780 (face (rainbow-delimiters-depth-1-face) fontified nil) 9780 9784 (face tree-sitter-hl-face:keyword fontified nil) 9784 9785 (fontified nil) 9785 9788 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9788 9790 (fontified nil) 9790 9795 (face tree-sitter-hl-face:label fontified nil) 9795 9796 (face tree-sitter-hl-face:operator fontified nil) 9796 9800 (face tree-sitter-hl-face:keyword fontified nil) 9800 9801 (fontified nil) 9801 9806 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9806 9808 (fontified nil) 9808 9814 (face tree-sitter-hl-face:label fontified nil) 9814 9815 (face tree-sitter-hl-face:operator fontified nil) 9815 9819 (face tree-sitter-hl-face:keyword fontified nil) 9819 9820 (fontified nil) 9820 9826 (face tree-sitter-hl-face:property fontified nil) 9826 9827 (face (rainbow-delimiters-depth-1-face) fontified nil) 9827 9837 (fontified nil) 9837 9841 (face tree-sitter-hl-face:keyword fontified nil) 9841 9842 (fontified nil) 9842 9852 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9852 9853 (fontified nil) 9853 9854 (face tree-sitter-hl-face:operator fontified nil) 9854 9861 (fontified nil) 9861 9865 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9865 9866 (face (rainbow-delimiters-depth-1-face) fontified nil) 9866 9870 (face tree-sitter-hl-face:keyword fontified nil) 9870 9871 (fontified nil) 9871 9879 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9879 9881 (fontified nil) 9881 9886 (face tree-sitter-hl-face:label fontified nil) 9886 9887 (face tree-sitter-hl-face:operator fontified nil) 9887 9891 (face tree-sitter-hl-face:keyword fontified nil) 9891 9892 (fontified nil) 9892 9897 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9897 9899 (fontified nil) 9899 9905 (face tree-sitter-hl-face:label fontified nil) 9905 9906 (face tree-sitter-hl-face:operator fontified nil) 9906 9910 (face tree-sitter-hl-face:keyword fontified nil) 9910 9911 (fontified nil) 9911 9917 (face tree-sitter-hl-face:property fontified nil) 9917 9918 (face (rainbow-delimiters-depth-1-face) fontified nil) 9918 9927 (fontified nil) 9927 9931 (face tree-sitter-hl-face:keyword fontified nil) 9931 9932 (fontified nil) 9932 9938 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9938 9939 (fontified nil) 9939 9940 (face tree-sitter-hl-face:operator fontified nil) 9940 9947 (fontified nil) 9947 9951 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 9951 9952 (face (rainbow-delimiters-depth-1-face) fontified nil) 9952 9956 (face tree-sitter-hl-face:keyword fontified nil) 9956 9957 (fontified nil) 9957 9965 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9965 9967 (fontified nil) 9967 9972 (face tree-sitter-hl-face:label fontified nil) 9972 9973 (face tree-sitter-hl-face:operator fontified nil) 9973 9977 (face tree-sitter-hl-face:keyword fontified nil) 9977 9978 (fontified nil) 9978 9983 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 9983 9985 (fontified nil) 9985 9991 (face tree-sitter-hl-face:label fontified nil) 9991 9992 (face tree-sitter-hl-face:operator fontified nil) 9992 9996 (face tree-sitter-hl-face:keyword fontified nil) 9996 9997 (fontified nil) 9997 10003 (face tree-sitter-hl-face:property fontified nil) 10003 10004 (face (rainbow-delimiters-depth-1-face) fontified nil) 10004 10014 (fontified nil) 10014 10017 (face tree-sitter-hl-face:keyword fontified nil) 10017 10018 (fontified nil) 10018 10023 (face tree-sitter-hl-face:variable fontified nil) 10023 10024 (fontified nil) 10024 10026 (face tree-sitter-hl-face:operator fontified nil) 10026 10027 (fontified nil) 10027 10032 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 10032 10033 (face (rainbow-delimiters-depth-1-face) fontified nil) 10033 10037 (face tree-sitter-hl-face:keyword fontified nil) 10037 10038 (fontified nil) 10038 10043 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10043 10044 (face (rainbow-delimiters-depth-1-face) fontified nil) 10044 10058 (fontified nil) 10058 10062 (face tree-sitter-hl-face:keyword fontified nil) 10062 10063 (fontified nil) 10063 10073 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10073 10074 (face (rainbow-delimiters-depth-1-face) fontified nil) 10074 10078 (face tree-sitter-hl-face:keyword fontified nil) 10078 10079 (fontified nil) 10079 10085 (face tree-sitter-hl-face:property fontified nil) 10085 10086 (face (rainbow-delimiters-depth-2-face) fontified nil) 10086 10091 (fontified nil) 10091 10092 (face (rainbow-delimiters-depth-2-face) fontified nil) 10092 10095 (fontified nil) 10095 10099 (face tree-sitter-hl-face:keyword fontified nil) 10099 10100 (fontified nil) 10100 10106 (face tree-sitter-hl-face:property fontified nil) 10106 10107 (face (rainbow-delimiters-depth-2-face) fontified nil) 10107 10113 (fontified nil) 10113 10114 (face tree-sitter-hl-face:operator fontified nil) 10114 10115 (fontified nil) 10115 10116 (face tree-sitter-hl-face:number fontified nil) 10116 10117 (face (rainbow-delimiters-depth-2-face) fontified nil) 10117 10118 (face (rainbow-delimiters-depth-1-face) fontified nil) 10118 10119 (fontified nil) 10119 10120 (face tree-sitter-hl-face:operator fontified nil) 10120 10127 (fontified nil) 10127 10130 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 10130 10131 (face (rainbow-delimiters-depth-1-face) fontified nil) 10131 10132 (face tree-sitter-hl-face:operator fontified nil) 10132 10136 (face tree-sitter-hl-face:keyword fontified nil) 10136 10137 (fontified nil) 10137 10139 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10139 10140 (fontified nil) 10140 10141 (face tree-sitter-hl-face:operator fontified nil) 10141 10142 (fontified nil) 10142 10146 (face tree-sitter-hl-face:keyword fontified nil) 10146 10147 (fontified nil) 10147 10150 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10150 10151 (face (rainbow-delimiters-depth-2-face) fontified nil) 10151 10156 (fontified nil) 10156 10157 (face (rainbow-delimiters-depth-2-face) fontified nil) 10157 10158 (face (rainbow-delimiters-depth-1-face) fontified nil) 10158 10171 (fontified nil) 10171 10175 (face tree-sitter-hl-face:keyword fontified nil) 10175 10176 (fontified nil) 10176 10182 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10182 10183 (face (rainbow-delimiters-depth-1-face) fontified nil) 10183 10187 (face tree-sitter-hl-face:keyword fontified nil) 10187 10188 (fontified nil) 10188 10194 (face tree-sitter-hl-face:property fontified nil) 10194 10195 (face (rainbow-delimiters-depth-2-face) fontified nil) 10195 10200 (fontified nil) 10200 10201 (face (rainbow-delimiters-depth-2-face) fontified nil) 10201 10204 (fontified nil) 10204 10208 (face tree-sitter-hl-face:keyword fontified nil) 10208 10209 (fontified nil) 10209 10215 (face tree-sitter-hl-face:property fontified nil) 10215 10216 (face (rainbow-delimiters-depth-2-face) fontified nil) 10216 10222 (fontified nil) 10222 10223 (face tree-sitter-hl-face:operator fontified nil) 10223 10224 (fontified nil) 10224 10225 (face tree-sitter-hl-face:number fontified nil) 10225 10226 (face (rainbow-delimiters-depth-2-face) fontified nil) 10226 10227 (face (rainbow-delimiters-depth-1-face) fontified nil) 10227 10228 (fontified nil) 10228 10229 (face tree-sitter-hl-face:operator fontified nil) 10229 10230 (fontified nil) 10230 10234 (face tree-sitter-hl-face:keyword fontified nil) 10234 10235 (fontified nil) 10235 10237 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10237 10238 (fontified nil) 10238 10239 (face tree-sitter-hl-face:operator fontified nil) 10239 10240 (fontified nil) 10240 10244 (face tree-sitter-hl-face:keyword fontified nil) 10244 10245 (fontified nil) 10245 10248 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10248 10249 (face (rainbow-delimiters-depth-1-face) fontified nil) 10249 10254 (fontified nil) 10254 10255 (face (rainbow-delimiters-depth-1-face) fontified nil) 10255 10265 (fontified nil) 10265 10287 (face tree-sitter-hl-face:comment fontified nil) 10287 10296 (fontified nil) 10296 10314 (face tree-sitter-hl-face:comment fontified nil) 10314 10324 (fontified nil) 10324 10357 (face tree-sitter-hl-face:comment fontified nil) 10357 10366 (fontified nil) 10366 10430 (face tree-sitter-hl-face:comment fontified nil) 10430 10439 (fontified nil) 10439 10490 (face tree-sitter-hl-face:comment fontified nil) 10490 10500 (fontified nil) 10500 10579 (face tree-sitter-hl-face:comment fontified nil) 10579 10588 (fontified nil) 10588 10675 (face tree-sitter-hl-face:comment fontified nil) 10675 10686 (fontified nil) 10686 10688 (face tree-sitter-hl-face:keyword fontified nil) 10688 10689 (fontified nil) 10689 10693 (face tree-sitter-hl-face:keyword fontified nil) 10693 10694 (fontified nil) 10694 10701 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10701 10715 (fontified nil) 10715 10720 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 10720 10721 (face (rainbow-delimiters-depth-1-face) fontified nil) 10721 10722 (face tree-sitter-hl-face:string fontified nil) 10722 10724 (face tree-sitter-hl-face:string fontified nil) 10724 10725 (face tree-sitter-hl-face:string fontified nil) 10725 10727 (fontified nil) 10727 10731 (face tree-sitter-hl-face:keyword fontified nil) 10731 10732 (fontified nil) 10732 10734 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10734 10736 (fontified nil) 10736 10737 (face tree-sitter-hl-face:string fontified nil) 10737 10740 (face tree-sitter-hl-face:string fontified nil) 10740 10741 (face tree-sitter-hl-face:string fontified nil) 10741 10743 (fontified nil) 10743 10747 (face tree-sitter-hl-face:keyword fontified nil) 10747 10748 (fontified nil) 10748 10751 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10751 10752 (face (rainbow-delimiters-depth-1-face) fontified nil) 10752 10762 (fontified nil) 10762 10780 (face tree-sitter-hl-face:comment fontified nil) 10780 10789 (fontified nil) 10789 10854 (face tree-sitter-hl-face:comment fontified nil) 10854 10864 (fontified nil) 10864 10868 (face tree-sitter-hl-face:keyword fontified nil) 10868 10869 (fontified nil) 10869 10878 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10878 10879 (fontified nil) 10879 10880 (face tree-sitter-hl-face:operator fontified nil) 10880 10884 (fontified nil) 10884 10889 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 10889 10890 (face (rainbow-delimiters-depth-1-face) fontified nil) 10890 10894 (face tree-sitter-hl-face:keyword fontified nil) 10894 10895 (fontified nil) 10895 10904 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10904 10905 (face (rainbow-delimiters-depth-1-face) fontified nil) 10905 10906 (fontified nil) 10906 10913 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 10913 10914 (face (rainbow-delimiters-depth-1-face) fontified nil) 10914 10918 (face tree-sitter-hl-face:keyword fontified nil) 10918 10919 (fontified nil) 10919 10924 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10924 10926 (fontified nil) 10926 10930 (face tree-sitter-hl-face:keyword fontified nil) 10930 10931 (fontified nil) 10931 10936 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10936 10937 (face (rainbow-delimiters-depth-1-face) fontified nil) 10937 10946 (fontified nil) 10946 10950 (face tree-sitter-hl-face:keyword fontified nil) 10950 10951 (fontified nil) 10951 10956 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10956 10957 (fontified nil) 10957 10958 (face tree-sitter-hl-face:operator fontified nil) 10958 10965 (fontified nil) 10965 10971 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 10971 10972 (face (rainbow-delimiters-depth-1-face) fontified nil) 10972 10976 (face tree-sitter-hl-face:keyword fontified nil) 10976 10977 (fontified nil) 10977 10982 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 10982 10984 (fontified nil) 10984 10989 (face tree-sitter-hl-face:label fontified nil) 10989 10990 (face tree-sitter-hl-face:operator fontified nil) 10990 10994 (face tree-sitter-hl-face:keyword fontified nil) 10994 10995 (fontified nil) 10995 11000 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11000 11002 (fontified nil) 11002 11008 (face tree-sitter-hl-face:label fontified nil) 11008 11009 (face tree-sitter-hl-face:operator fontified nil) 11009 11013 (face tree-sitter-hl-face:keyword fontified nil) 11013 11014 (fontified nil) 11014 11020 (face tree-sitter-hl-face:property fontified nil) 11020 11021 (face (rainbow-delimiters-depth-1-face) fontified nil) 11021 11022 (fontified nil) 11022 11026 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11026 11027 (face (rainbow-delimiters-depth-1-face) fontified nil) 11027 11031 (face tree-sitter-hl-face:keyword fontified nil) 11031 11032 (fontified nil) 11032 11037 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11037 11039 (fontified nil) 11039 11043 (face tree-sitter-hl-face:keyword fontified nil) 11043 11044 (fontified nil) 11044 11049 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11049 11050 (face (rainbow-delimiters-depth-1-face) fontified nil) 11050 11059 (fontified nil) 11059 11063 (face tree-sitter-hl-face:keyword fontified nil) 11063 11064 (fontified nil) 11064 11069 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11069 11070 (fontified nil) 11070 11071 (face tree-sitter-hl-face:operator fontified nil) 11071 11078 (fontified nil) 11078 11084 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11084 11085 (face (rainbow-delimiters-depth-1-face) fontified nil) 11085 11089 (face tree-sitter-hl-face:keyword fontified nil) 11089 11090 (fontified nil) 11090 11095 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11095 11097 (fontified nil) 11097 11102 (face tree-sitter-hl-face:label fontified nil) 11102 11103 (face tree-sitter-hl-face:operator fontified nil) 11103 11107 (face tree-sitter-hl-face:keyword fontified nil) 11107 11108 (fontified nil) 11108 11113 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11113 11115 (fontified nil) 11115 11121 (face tree-sitter-hl-face:label fontified nil) 11121 11122 (face tree-sitter-hl-face:operator fontified nil) 11122 11126 (face tree-sitter-hl-face:keyword fontified nil) 11126 11127 (fontified nil) 11127 11133 (face tree-sitter-hl-face:property fontified nil) 11133 11134 (face (rainbow-delimiters-depth-1-face) fontified nil) 11134 11135 (fontified nil) 11135 11139 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11139 11140 (face (rainbow-delimiters-depth-1-face) fontified nil) 11140 11144 (face tree-sitter-hl-face:keyword fontified nil) 11144 11145 (fontified nil) 11145 11150 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11150 11152 (fontified nil) 11152 11156 (face tree-sitter-hl-face:keyword fontified nil) 11156 11157 (fontified nil) 11157 11162 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11162 11163 (face (rainbow-delimiters-depth-1-face) fontified nil) 11163 11172 (fontified nil) 11172 11176 (face tree-sitter-hl-face:keyword fontified nil) 11176 11177 (fontified nil) 11177 11182 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11182 11183 (fontified nil) 11183 11184 (face tree-sitter-hl-face:operator fontified nil) 11184 11191 (fontified nil) 11191 11197 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11197 11198 (face (rainbow-delimiters-depth-1-face) fontified nil) 11198 11202 (face tree-sitter-hl-face:keyword fontified nil) 11202 11203 (fontified nil) 11203 11208 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11208 11209 (fontified nil) 11209 11210 (face tree-sitter-hl-face:operator fontified nil) 11210 11217 (fontified nil) 11217 11219 (face tree-sitter-hl-face:property fontified nil) 11219 11220 (fontified nil) 11220 11221 (face tree-sitter-hl-face:operator fontified nil) 11221 11222 (fontified nil) 11222 11227 (face tree-sitter-hl-face:number fontified nil) 11227 11229 (fontified nil) 11229 11234 (face tree-sitter-hl-face:label fontified nil) 11234 11235 (face tree-sitter-hl-face:operator fontified nil) 11235 11239 (face tree-sitter-hl-face:keyword fontified nil) 11239 11240 (fontified nil) 11240 11245 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11245 11247 (fontified nil) 11247 11253 (face tree-sitter-hl-face:label fontified nil) 11253 11254 (face tree-sitter-hl-face:operator fontified nil) 11254 11258 (face tree-sitter-hl-face:keyword fontified nil) 11258 11259 (fontified nil) 11259 11265 (face tree-sitter-hl-face:property fontified nil) 11265 11266 (face (rainbow-delimiters-depth-1-face) fontified nil) 11266 11276 (fontified nil) 11276 11294 (face tree-sitter-hl-face:comment fontified nil) 11294 11303 (fontified nil) 11303 11330 (face tree-sitter-hl-face:comment fontified nil) 11330 11339 (fontified nil) 11339 11362 (face tree-sitter-hl-face:comment fontified nil) 11362 11371 (fontified nil) 11371 11394 (face tree-sitter-hl-face:comment fontified nil) 11394 11403 (fontified nil) 11403 11426 (face tree-sitter-hl-face:comment fontified nil) 11426 11433 (fontified nil) 11433 11436 (face tree-sitter-hl-face:keyword fontified nil) 11436 11437 (fontified nil) 11437 11447 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 11447 11448 (face (rainbow-delimiters-depth-1-face) fontified nil) 11448 11452 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 11452 11453 (face (rainbow-delimiters-depth-1-face) fontified nil) 11453 11464 (fontified nil) 11464 11495 (face tree-sitter-hl-face:comment fontified nil) 11495 11504 (fontified nil) 11504 11506 (face tree-sitter-hl-face:keyword fontified nil) 11506 11507 (fontified nil) 11507 11511 (face tree-sitter-hl-face:keyword fontified nil) 11511 11512 (fontified nil) 11512 11519 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11519 11533 (fontified nil) 11533 11538 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 11538 11539 (face (rainbow-delimiters-depth-1-face) fontified nil) 11539 11540 (face tree-sitter-hl-face:string fontified nil) 11540 11543 (face tree-sitter-hl-face:string fontified nil) 11543 11544 (face tree-sitter-hl-face:string fontified nil) 11544 11546 (fontified nil) 11546 11550 (face tree-sitter-hl-face:keyword fontified nil) 11550 11551 (fontified nil) 11551 11554 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11554 11555 (face (rainbow-delimiters-depth-1-face) fontified nil) 11555 11565 (fontified nil) 11565 11569 (face tree-sitter-hl-face:keyword fontified nil) 11569 11570 (fontified nil) 11570 11573 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11573 11574 (fontified nil) 11574 11575 (face tree-sitter-hl-face:operator fontified nil) 11575 11582 (fontified nil) 11582 11588 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11588 11589 (face (rainbow-delimiters-depth-1-face) fontified nil) 11589 11593 (face tree-sitter-hl-face:keyword fontified nil) 11593 11594 (fontified nil) 11594 11597 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11597 11599 (fontified nil) 11599 11604 (face tree-sitter-hl-face:label fontified nil) 11604 11605 (face tree-sitter-hl-face:operator fontified nil) 11605 11609 (face tree-sitter-hl-face:keyword fontified nil) 11609 11610 (fontified nil) 11610 11615 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11615 11617 (fontified nil) 11617 11623 (face tree-sitter-hl-face:label fontified nil) 11623 11624 (face tree-sitter-hl-face:operator fontified nil) 11624 11628 (face tree-sitter-hl-face:keyword fontified nil) 11628 11629 (fontified nil) 11629 11635 (face tree-sitter-hl-face:property fontified nil) 11635 11636 (face (rainbow-delimiters-depth-1-face) fontified nil) 11636 11637 (fontified nil) 11637 11644 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11644 11645 (face (rainbow-delimiters-depth-1-face) fontified nil) 11645 11649 (face tree-sitter-hl-face:keyword fontified nil) 11649 11650 (fontified nil) 11650 11655 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11655 11657 (fontified nil) 11657 11661 (face tree-sitter-hl-face:keyword fontified nil) 11661 11662 (fontified nil) 11662 11667 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11667 11668 (face (rainbow-delimiters-depth-1-face) fontified nil) 11668 11669 (fontified nil) 11669 11670 (face tree-sitter-hl-face:operator fontified nil) 11670 11671 (fontified nil) 11671 11675 (face tree-sitter-hl-face:keyword fontified nil) 11675 11676 (fontified nil) 11676 11680 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11680 11690 (fontified nil) 11690 11693 (face tree-sitter-hl-face:keyword fontified nil) 11693 11694 (fontified nil) 11694 11699 (face tree-sitter-hl-face:variable fontified nil) 11699 11700 (fontified nil) 11700 11702 (face tree-sitter-hl-face:operator fontified nil) 11702 11703 (fontified nil) 11703 11708 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 11708 11709 (face (rainbow-delimiters-depth-1-face) fontified nil) 11709 11713 (face tree-sitter-hl-face:keyword fontified nil) 11713 11714 (fontified nil) 11714 11719 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11719 11720 (face (rainbow-delimiters-depth-1-face) fontified nil) 11720 11734 (fontified nil) 11734 11738 (face tree-sitter-hl-face:keyword fontified nil) 11738 11739 (fontified nil) 11739 11742 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11742 11743 (face (rainbow-delimiters-depth-1-face) fontified nil) 11743 11746 (fontified nil) 11746 11751 (face tree-sitter-hl-face:variable fontified nil) 11751 11752 (face (rainbow-delimiters-depth-1-face) fontified nil) 11752 11753 (fontified nil) 11753 11754 (face tree-sitter-hl-face:operator fontified nil) 11754 11755 (fontified nil) 11755 11759 (face tree-sitter-hl-face:keyword fontified nil) 11759 11760 (fontified nil) 11760 11763 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11763 11764 (face (rainbow-delimiters-depth-1-face) fontified nil) 11764 11772 (fontified nil) 11772 11773 (face (rainbow-delimiters-depth-1-face) fontified nil) 11773 11774 (fontified nil) 11774 11775 (face tree-sitter-hl-face:operator fontified nil) 11775 11782 (fontified nil) 11782 11786 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11786 11787 (face (rainbow-delimiters-depth-1-face) fontified nil) 11787 11791 (face tree-sitter-hl-face:keyword fontified nil) 11791 11792 (fontified nil) 11792 11794 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11794 11795 (face (rainbow-delimiters-depth-2-face) fontified nil) 11795 11800 (fontified nil) 11800 11801 (face (rainbow-delimiters-depth-2-face) fontified nil) 11801 11802 (face (rainbow-delimiters-depth-1-face) fontified nil) 11802 11812 (fontified nil) 11812 11830 (face tree-sitter-hl-face:comment fontified nil) 11830 11839 (fontified nil) 11839 11874 (face tree-sitter-hl-face:comment fontified nil) 11874 11884 (fontified nil) 11884 11904 (face tree-sitter-hl-face:comment fontified nil) 11904 11913 (fontified nil) 11913 11915 (face tree-sitter-hl-face:keyword fontified nil) 11915 11916 (fontified nil) 11916 11920 (face tree-sitter-hl-face:keyword fontified nil) 11920 11921 (fontified nil) 11921 11928 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11928 11942 (fontified nil) 11942 11947 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 11947 11948 (face (rainbow-delimiters-depth-1-face) fontified nil) 11948 11949 (face tree-sitter-hl-face:string fontified nil) 11949 11952 (face tree-sitter-hl-face:string fontified nil) 11952 11953 (face tree-sitter-hl-face:string fontified nil) 11953 11955 (fontified nil) 11955 11959 (face tree-sitter-hl-face:keyword fontified nil) 11959 11960 (fontified nil) 11960 11963 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11963 11964 (face (rainbow-delimiters-depth-1-face) fontified nil) 11964 11974 (fontified nil) 11974 11978 (face tree-sitter-hl-face:keyword fontified nil) 11978 11979 (fontified nil) 11979 11982 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 11982 11983 (fontified nil) 11983 11984 (face tree-sitter-hl-face:operator fontified nil) 11984 11991 (fontified nil) 11991 11997 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 11997 11998 (face (rainbow-delimiters-depth-1-face) fontified nil) 11998 12002 (face tree-sitter-hl-face:keyword fontified nil) 12002 12003 (fontified nil) 12003 12006 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12006 12008 (fontified nil) 12008 12013 (face tree-sitter-hl-face:label fontified nil) 12013 12014 (face tree-sitter-hl-face:operator fontified nil) 12014 12018 (face tree-sitter-hl-face:keyword fontified nil) 12018 12019 (fontified nil) 12019 12024 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12024 12026 (fontified nil) 12026 12032 (face tree-sitter-hl-face:label fontified nil) 12032 12033 (face tree-sitter-hl-face:operator fontified nil) 12033 12037 (face tree-sitter-hl-face:keyword fontified nil) 12037 12038 (fontified nil) 12038 12044 (face tree-sitter-hl-face:property fontified nil) 12044 12045 (face (rainbow-delimiters-depth-1-face) fontified nil) 12045 12054 (fontified nil) 12054 12058 (face tree-sitter-hl-face:keyword fontified nil) 12058 12059 (fontified nil) 12059 12062 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12062 12063 (fontified nil) 12063 12064 (face tree-sitter-hl-face:operator fontified nil) 12064 12065 (fontified nil) 12065 12069 (face tree-sitter-hl-face:keyword fontified nil) 12069 12070 (fontified nil) 12070 12073 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12073 12074 (fontified nil) 12074 12075 (face tree-sitter-hl-face:operator fontified nil) 12075 12082 (fontified nil) 12082 12086 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 12086 12087 (face (rainbow-delimiters-depth-1-face) fontified nil) 12087 12091 (face tree-sitter-hl-face:keyword fontified nil) 12091 12092 (fontified nil) 12092 12094 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12094 12095 (face (rainbow-delimiters-depth-2-face) fontified nil) 12095 12096 (face tree-sitter-hl-face:number fontified nil) 12096 12097 (face (rainbow-delimiters-depth-2-face) fontified nil) 12097 12098 (face (rainbow-delimiters-depth-1-face) fontified nil) 12098 12099 (fontified nil) 12099 12100 (face tree-sitter-hl-face:operator fontified nil) 12100 12101 (fontified nil) 12101 12105 (face tree-sitter-hl-face:keyword fontified nil) 12105 12106 (fontified nil) 12106 12108 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12108 12118 (fontified nil) 12118 12136 (face tree-sitter-hl-face:comment fontified nil) 12136 12145 (fontified nil) 12145 12180 (face tree-sitter-hl-face:comment fontified nil) 12180 12190 (fontified nil) 12190 12194 (face tree-sitter-hl-face:keyword fontified nil) 12194 12195 (fontified nil) 12195 12201 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12201 12202 (fontified nil) 12202 12203 (face tree-sitter-hl-face:operator fontified nil) 12203 12210 (fontified nil) 12210 12214 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 12214 12215 (face (rainbow-delimiters-depth-1-face) fontified nil) 12215 12221 (fontified nil) 12221 12227 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 12227 12228 (face (rainbow-delimiters-depth-2-face) fontified nil) 12228 12232 (face tree-sitter-hl-face:keyword fontified nil) 12232 12233 (fontified nil) 12233 12239 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12239 12241 (fontified nil) 12241 12246 (face tree-sitter-hl-face:label fontified nil) 12246 12247 (face tree-sitter-hl-face:operator fontified nil) 12247 12251 (face tree-sitter-hl-face:keyword fontified nil) 12251 12252 (fontified nil) 12252 12257 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12257 12259 (fontified nil) 12259 12265 (face tree-sitter-hl-face:label fontified nil) 12265 12266 (face tree-sitter-hl-face:operator fontified nil) 12266 12270 (face tree-sitter-hl-face:keyword fontified nil) 12270 12271 (fontified nil) 12271 12277 (face tree-sitter-hl-face:property fontified nil) 12277 12278 (face (rainbow-delimiters-depth-2-face) fontified nil) 12278 12279 (face (rainbow-delimiters-depth-1-face) fontified nil) 12279 12288 (fontified nil) 12288 12295 (face tree-sitter-hl-face:variable fontified nil) 12295 12296 (fontified nil) 12296 12297 (face tree-sitter-hl-face:operator fontified nil) 12297 12304 (fontified nil) 12304 12310 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 12310 12311 (face (rainbow-delimiters-depth-1-face) fontified nil) 12311 12314 (face tree-sitter-hl-face:number fontified nil) 12314 12316 (fontified nil) 12316 12321 (face tree-sitter-hl-face:label fontified nil) 12321 12322 (face tree-sitter-hl-face:operator fontified nil) 12322 12326 (face tree-sitter-hl-face:keyword fontified nil) 12326 12327 (fontified nil) 12327 12332 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12332 12334 (fontified nil) 12334 12340 (face tree-sitter-hl-face:label fontified nil) 12340 12341 (face tree-sitter-hl-face:operator fontified nil) 12341 12345 (face tree-sitter-hl-face:keyword fontified nil) 12345 12346 (fontified nil) 12346 12352 (face tree-sitter-hl-face:property fontified nil) 12352 12353 (face (rainbow-delimiters-depth-1-face) fontified nil) 12353 12362 (fontified nil) 12362 12366 (face tree-sitter-hl-face:keyword fontified nil) 12366 12367 (fontified nil) 12367 12376 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified nil) 12376 12377 (fontified nil) 12377 12378 (face tree-sitter-hl-face:operator fontified nil) 12378 12379 (fontified nil) 12379 12385 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil) 12385 12386 (face (rainbow-delimiters-depth-1-face) fontified nil) 12386 12395 (fontified nil) 12395 12399 (face tree-sitter-hl-face:keyword fontified nil) 12399 12400 (fontified nil) 12400 12406 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12406 12407 (face (rainbow-delimiters-depth-2-face) fontified nil) 12407 12408 (face tree-sitter-hl-face:number fontified nil) 12408 12409 (face (rainbow-delimiters-depth-2-face) fontified nil) 12409 12410 (face (rainbow-delimiters-depth-1-face) fontified nil) 12410 12416 (fontified nil) 12416 12419 (face tree-sitter-hl-face:keyword fontified nil) 12419 12420 (fontified nil) 12420 12431 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 12431 12432 (face (rainbow-delimiters-depth-1-face) fontified nil) 12432 12436 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 12436 12438 (fontified nil) 12438 12442 (face tree-sitter-hl-face:variable.parameter fontified nil) 12442 12443 (face (rainbow-delimiters-depth-1-face) fontified nil) 12443 12453 (fontified nil) 12453 12455 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil) 12455 12456 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil syntax-table (15)) 12456 12507 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified nil) 12507 12508 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil syntax-table (15)) 12508 12510 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil) 12510 12528 (fontified nil) 12528 12530 (face tree-sitter-hl-face:keyword fontified nil) 12530 12536 (fontified nil) 12536 12538 (face tree-sitter-hl-face:operator fontified nil) 12538 12539 (fontified nil) 12539 12540 (face tree-sitter-hl-face:number fontified nil) 12540 12554 (fontified nil) 12554 12557 (face tree-sitter-hl-face:keyword fontified nil) 12557 12558 (fontified nil) 12558 12559 (face tree-sitter-hl-face:variable fontified nil) 12559 12560 (fontified nil) 12560 12562 (face tree-sitter-hl-face:operator fontified nil) 12562 12563 (fontified nil) 12563 12568 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 12568 12569 (face (rainbow-delimiters-depth-1-face) fontified nil) 12569 12573 (face tree-sitter-hl-face:keyword fontified nil) 12573 12574 (fontified nil) 12574 12579 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12579 12580 (face (rainbow-delimiters-depth-1-face) fontified nil) 12580 12598 (fontified nil) 12598 12600 (face tree-sitter-hl-face:keyword fontified nil) 12600 12601 (fontified nil) 12601 12605 (face tree-sitter-hl-face:keyword fontified nil) 12605 12606 (fontified nil) 12606 12617 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12617 12618 (face (rainbow-delimiters-depth-1-face) fontified nil) 12618 12619 (fontified nil) 12619 12620 (face (rainbow-delimiters-depth-1-face) fontified nil) 12620 12642 (fontified nil) 12642 12679 (face tree-sitter-hl-face:comment fontified nil) 12679 12700 (fontified nil) 12700 12704 (face tree-sitter-hl-face:keyword fontified nil) 12704 12705 (fontified nil) 12705 12708 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12708 12709 (fontified nil) 12709 12713 (face tree-sitter-hl-face:property fontified nil) 12713 12714 (fontified nil) 12714 12718 (face tree-sitter-hl-face:property fontified nil) 12718 12719 (face (rainbow-delimiters-depth-1-face) fontified nil) 12719 12723 (face tree-sitter-hl-face:keyword fontified nil) 12723 12724 (fontified nil) 12724 12730 (face tree-sitter-hl-face:property fontified nil) 12730 12731 (face (rainbow-delimiters-depth-2-face) fontified nil) 12731 12732 (fontified nil) 12732 12733 (face (rainbow-delimiters-depth-2-face) fontified nil) 12733 12734 (fontified nil) 12734 12738 (face tree-sitter-hl-face:keyword fontified nil) 12738 12739 (fontified nil) 12739 12745 (face tree-sitter-hl-face:property fontified nil) 12745 12746 (face (rainbow-delimiters-depth-2-face) fontified nil) 12746 12747 (fontified nil) 12747 12748 (face tree-sitter-hl-face:operator fontified nil) 12748 12749 (face tree-sitter-hl-face:number fontified nil) 12749 12750 (face (rainbow-delimiters-depth-2-face) fontified nil) 12750 12751 (face (rainbow-delimiters-depth-1-face) fontified nil) 12751 12752 (fontified nil) 12752 12757 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 12757 12758 (face (rainbow-delimiters-depth-1-face) fontified nil) 12758 12761 (face tree-sitter-hl-face:number fontified nil) 12761 12762 (face (rainbow-delimiters-depth-1-face) fontified nil) 12762 12779 (fontified nil) 12779 12781 (face tree-sitter-hl-face:keyword fontified nil) 12781 12782 (fontified nil) 12782 12786 (face tree-sitter-hl-face:keyword fontified nil) 12786 12787 (fontified nil) 12787 12788 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12788 12789 (fontified nil) 12789 12791 (face tree-sitter-hl-face:operator fontified nil) 12791 12792 (face tree-sitter-hl-face:number fontified nil) 12792 12793 (fontified nil) 12793 12796 (face tree-sitter-hl-face:operator fontified nil) 12796 12797 (fontified nil) 12797 12801 (face tree-sitter-hl-face:keyword fontified nil) 12801 12802 (fontified nil) 12802 12813 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12813 12814 (face (rainbow-delimiters-depth-1-face) fontified nil) 12814 12815 (fontified nil) 12815 12816 (face (rainbow-delimiters-depth-1-face) fontified nil) 12816 12838 (fontified nil) 12838 12908 (face tree-sitter-hl-face:comment fontified nil) 12908 12929 (fontified nil) 12929 12933 (face tree-sitter-hl-face:keyword fontified nil) 12933 12934 (fontified nil) 12934 12937 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12937 12938 (fontified nil) 12938 12942 (face tree-sitter-hl-face:property fontified nil) 12942 12943 (fontified nil) 12943 12947 (face tree-sitter-hl-face:property fontified nil) 12947 12948 (face (rainbow-delimiters-depth-1-face) fontified nil) 12948 12952 (face tree-sitter-hl-face:keyword fontified nil) 12952 12953 (fontified nil) 12953 12959 (face tree-sitter-hl-face:property fontified nil) 12959 12960 (face (rainbow-delimiters-depth-2-face) fontified nil) 12960 12961 (fontified nil) 12961 12962 (face (rainbow-delimiters-depth-2-face) fontified nil) 12962 12963 (fontified nil) 12963 12967 (face tree-sitter-hl-face:keyword fontified nil) 12967 12968 (fontified nil) 12968 12974 (face tree-sitter-hl-face:property fontified nil) 12974 12975 (face (rainbow-delimiters-depth-2-face) fontified nil) 12975 12976 (fontified nil) 12976 12977 (face tree-sitter-hl-face:operator fontified nil) 12977 12978 (face tree-sitter-hl-face:number fontified nil) 12978 12979 (face (rainbow-delimiters-depth-2-face) fontified nil) 12979 12980 (face (rainbow-delimiters-depth-1-face) fontified nil) 12980 12981 (fontified nil) 12981 12986 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 12986 12987 (face (rainbow-delimiters-depth-1-face) fontified nil) 12987 12991 (face tree-sitter-hl-face:keyword fontified nil) 12991 12992 (fontified nil) 12992 12995 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 12995 12996 (face (rainbow-delimiters-depth-2-face) fontified nil) 12996 12997 (fontified nil) 12997 12998 (face (rainbow-delimiters-depth-2-face) fontified nil) 12998 12999 (fontified nil) 12999 13000 (face tree-sitter-hl-face:operator fontified nil) 13000 13007 (fontified nil) 13007 13011 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 13011 13012 (face (rainbow-delimiters-depth-2-face) fontified nil) 13012 13016 (face tree-sitter-hl-face:keyword fontified nil) 13016 13017 (fontified nil) 13017 13019 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13019 13020 (face (rainbow-delimiters-depth-3-face) fontified nil) 13020 13021 (face tree-sitter-hl-face:number fontified nil) 13021 13022 (face (rainbow-delimiters-depth-3-face) fontified nil) 13022 13023 (face (rainbow-delimiters-depth-2-face) fontified nil) 13023 13024 (face (rainbow-delimiters-depth-1-face) fontified nil) 13024 13042 (fontified nil) 13042 13044 (face tree-sitter-hl-face:keyword fontified nil) 13044 13050 (fontified nil) 13050 13052 (face tree-sitter-hl-face:operator fontified nil) 13052 13053 (fontified nil) 13053 13057 (face tree-sitter-hl-face:keyword fontified nil) 13057 13058 (fontified nil) 13058 13067 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13067 13081 (fontified nil) 13081 13084 (face tree-sitter-hl-face:keyword fontified nil) 13084 13085 (fontified nil) 13085 13086 (face tree-sitter-hl-face:variable fontified nil) 13086 13087 (fontified nil) 13087 13089 (face tree-sitter-hl-face:operator fontified nil) 13089 13090 (fontified nil) 13090 13095 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 13095 13096 (face (rainbow-delimiters-depth-1-face) fontified nil) 13096 13100 (face tree-sitter-hl-face:keyword fontified nil) 13100 13101 (fontified nil) 13101 13106 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13106 13107 (face (rainbow-delimiters-depth-1-face) fontified nil) 13107 13125 (fontified nil) 13125 13127 (face tree-sitter-hl-face:keyword fontified nil) 13127 13128 (fontified nil) 13128 13132 (face tree-sitter-hl-face:keyword fontified nil) 13132 13133 (fontified nil) 13133 13144 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13144 13145 (face (rainbow-delimiters-depth-1-face) fontified nil) 13145 13146 (fontified nil) 13146 13147 (face (rainbow-delimiters-depth-1-face) fontified nil) 13147 13169 (fontified nil) 13169 13214 (face tree-sitter-hl-face:comment fontified nil) 13214 13235 (fontified nil) 13235 13239 (face tree-sitter-hl-face:keyword fontified nil) 13239 13240 (fontified nil) 13240 13243 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13243 13244 (fontified nil) 13244 13248 (face tree-sitter-hl-face:property fontified nil) 13248 13249 (fontified nil) 13249 13253 (face tree-sitter-hl-face:property fontified nil) 13253 13254 (face (rainbow-delimiters-depth-1-face) fontified nil) 13254 13258 (face tree-sitter-hl-face:keyword fontified nil) 13258 13259 (fontified nil) 13259 13265 (face tree-sitter-hl-face:property fontified nil) 13265 13266 (face (rainbow-delimiters-depth-2-face) fontified nil) 13266 13267 (fontified nil) 13267 13268 (face (rainbow-delimiters-depth-2-face) fontified nil) 13268 13269 (fontified nil) 13269 13273 (face tree-sitter-hl-face:keyword fontified nil) 13273 13274 (fontified nil) 13274 13280 (face tree-sitter-hl-face:property fontified nil) 13280 13281 (face (rainbow-delimiters-depth-2-face) fontified nil) 13281 13282 (fontified nil) 13282 13283 (face tree-sitter-hl-face:operator fontified nil) 13283 13284 (face tree-sitter-hl-face:number fontified nil) 13284 13285 (face (rainbow-delimiters-depth-2-face) fontified nil) 13285 13286 (face (rainbow-delimiters-depth-1-face) fontified nil) 13286 13287 (fontified nil) 13287 13292 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 13292 13293 (face (rainbow-delimiters-depth-1-face) fontified nil) 13293 13297 (face tree-sitter-hl-face:keyword fontified nil) 13297 13298 (fontified nil) 13298 13301 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13301 13302 (face (rainbow-delimiters-depth-2-face) fontified nil) 13302 13303 (fontified nil) 13303 13304 (face (rainbow-delimiters-depth-2-face) fontified nil) 13304 13305 (face (rainbow-delimiters-depth-1-face) fontified nil) 13305 13323 (fontified nil) 13323 13325 (face tree-sitter-hl-face:keyword fontified nil) 13325 13331 (fontified nil) 13331 13333 (face tree-sitter-hl-face:operator fontified nil) 13333 13334 (fontified nil) 13334 13338 (face tree-sitter-hl-face:keyword fontified nil) 13338 13339 (fontified nil) 13339 13348 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13348 13349 (fontified nil) 13349 13352 (face tree-sitter-hl-face:operator fontified nil) 13352 13356 (fontified nil) 13356 13359 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 13359 13360 (face (rainbow-delimiters-depth-1-face) fontified nil) 13360 13364 (face tree-sitter-hl-face:keyword fontified nil) 13364 13365 (fontified nil) 13365 13367 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13367 13369 (face tree-sitter-hl-face:operator fontified nil) 13369 13370 (face tree-sitter-hl-face:number fontified nil) 13370 13371 (face (rainbow-delimiters-depth-1-face) fontified nil) 13371 13385 (fontified nil) 13385 13387 (face tree-sitter-hl-face:keyword fontified nil) 13387 13388 (fontified nil) 13388 13392 (face tree-sitter-hl-face:keyword fontified nil) 13392 13393 (fontified nil) 13393 13400 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13400 13418 (fontified nil) 13418 13423 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 13423 13424 (face (rainbow-delimiters-depth-1-face) fontified nil) 13424 13425 (face tree-sitter-hl-face:string fontified nil) 13425 13432 (face tree-sitter-hl-face:string fontified nil) 13432 13433 (face tree-sitter-hl-face:string fontified nil) 13433 13434 (face (rainbow-delimiters-depth-1-face) fontified nil) 13434 13460 (fontified nil) 13460 13464 (face tree-sitter-hl-face:keyword fontified nil) 13464 13465 (fontified nil) 13465 13468 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13468 13469 (fontified nil) 13469 13473 (face tree-sitter-hl-face:property fontified nil) 13473 13474 (fontified nil) 13474 13478 (face tree-sitter-hl-face:property fontified nil) 13478 13479 (face (rainbow-delimiters-depth-1-face) fontified nil) 13479 13483 (face tree-sitter-hl-face:keyword fontified nil) 13483 13484 (fontified nil) 13484 13490 (face tree-sitter-hl-face:property fontified nil) 13490 13491 (face (rainbow-delimiters-depth-2-face) fontified nil) 13491 13492 (face tree-sitter-hl-face:number fontified nil) 13492 13493 (face (rainbow-delimiters-depth-2-face) fontified nil) 13493 13494 (fontified nil) 13494 13498 (face tree-sitter-hl-face:keyword fontified nil) 13498 13499 (fontified nil) 13499 13505 (face tree-sitter-hl-face:property fontified nil) 13505 13506 (face (rainbow-delimiters-depth-2-face) fontified nil) 13506 13507 (face tree-sitter-hl-face:number fontified nil) 13507 13508 (face (rainbow-delimiters-depth-2-face) fontified nil) 13508 13509 (face (rainbow-delimiters-depth-1-face) fontified nil) 13509 13510 (fontified nil) 13510 13511 (face tree-sitter-hl-face:operator fontified nil) 13511 13512 (fontified nil) 13512 13516 (face tree-sitter-hl-face:keyword fontified nil) 13516 13517 (fontified nil) 13517 13520 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 13520 13521 (face (rainbow-delimiters-depth-1-face) fontified nil) 13521 13522 (face tree-sitter-hl-face:number fontified nil) 13522 13523 (face (rainbow-delimiters-depth-1-face) fontified nil) 13523 13524 (fontified nil) 13524 13525 (face tree-sitter-hl-face:operator fontified nil) 13525 13526 (fontified nil) 13526 13530 (face tree-sitter-hl-face:keyword fontified nil) 13530 13531 (fontified nil) 13531 13539 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 13539 13540 (face (rainbow-delimiters-depth-1-face) fontified nil) 13540 13541 (face tree-sitter-hl-face:number fontified nil) 13541 13542 (face (rainbow-delimiters-depth-1-face) fontified nil) 13542 13568 (fontified nil) 13568 13588 (face tree-sitter-hl-face:comment fontified nil) 13588 13601 (fontified nil) 13601 13715 (face tree-sitter-hl-face:comment fontified nil) 13715 13728 (fontified nil) 13728 13750 (face tree-sitter-hl-face:comment fontified nil) 13750 13763 (fontified nil) 13763 13877 (face tree-sitter-hl-face:comment fontified nil) 13877 13878 (fontified nil) 13878 13891 (fontified nil) 13891 13903 (fontified nil) 13903 13924 (face tree-sitter-hl-face:comment fontified nil) 13924 13937 (fontified nil) 13937 14051 (face tree-sitter-hl-face:comment fontified nil) 14051 14064 (fontified nil) 14064 14086 (face tree-sitter-hl-face:comment fontified nil) 14086 14099 (fontified nil) 14099 14213 (face tree-sitter-hl-face:comment fontified nil) 14213 14264 (fontified nil) 14264 14266 (face tree-sitter-hl-face:keyword fontified nil) 14266 14272 (fontified nil) 14272 14274 (face tree-sitter-hl-face:operator fontified nil) 14274 14275 (fontified nil) 14275 14279 (face tree-sitter-hl-face:keyword fontified nil) 14279 14280 (fontified nil) 14280 14290 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14290 14291 (fontified nil) 14291 14294 (face tree-sitter-hl-face:operator fontified nil) 14294 14298 (fontified nil) 14298 14301 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14301 14302 (face (rainbow-delimiters-depth-1-face) fontified nil) 14302 14306 (face tree-sitter-hl-face:keyword fontified nil) 14306 14307 (fontified nil) 14307 14309 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14309 14311 (face tree-sitter-hl-face:operator fontified nil) 14311 14312 (face tree-sitter-hl-face:number fontified nil) 14312 14313 (face (rainbow-delimiters-depth-1-face) fontified nil) 14313 14327 (fontified nil) 14327 14329 (face tree-sitter-hl-face:keyword fontified nil) 14329 14330 (fontified nil) 14330 14334 (face tree-sitter-hl-face:keyword fontified nil) 14334 14335 (fontified nil) 14335 14342 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14342 14360 (fontified nil) 14360 14365 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 14365 14366 (face (rainbow-delimiters-depth-1-face) fontified nil) 14366 14367 (face tree-sitter-hl-face:string fontified nil) 14367 14375 (face tree-sitter-hl-face:string fontified nil) 14375 14376 (face tree-sitter-hl-face:string fontified nil) 14376 14377 (face (rainbow-delimiters-depth-1-face) fontified nil) 14377 14390 (fontified nil) 14390 14394 (face tree-sitter-hl-face:keyword fontified nil) 14394 14395 (fontified nil) 14395 14398 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14398 14399 (fontified nil) 14399 14403 (face tree-sitter-hl-face:property fontified nil) 14403 14404 (fontified nil) 14404 14408 (face tree-sitter-hl-face:property fontified nil) 14408 14409 (face (rainbow-delimiters-depth-1-face) fontified nil) 14409 14413 (face tree-sitter-hl-face:keyword fontified nil) 14413 14414 (fontified nil) 14414 14420 (face tree-sitter-hl-face:property fontified nil) 14420 14421 (face (rainbow-delimiters-depth-2-face) fontified nil) 14421 14422 (face tree-sitter-hl-face:number fontified nil) 14422 14423 (face (rainbow-delimiters-depth-2-face) fontified nil) 14423 14424 (fontified nil) 14424 14428 (face tree-sitter-hl-face:keyword fontified nil) 14428 14429 (fontified nil) 14429 14435 (face tree-sitter-hl-face:property fontified nil) 14435 14436 (face (rainbow-delimiters-depth-2-face) fontified nil) 14436 14437 (face tree-sitter-hl-face:number fontified nil) 14437 14438 (face (rainbow-delimiters-depth-2-face) fontified nil) 14438 14439 (face (rainbow-delimiters-depth-1-face) fontified nil) 14439 14440 (fontified nil) 14440 14441 (face tree-sitter-hl-face:operator fontified nil) 14441 14442 (fontified nil) 14442 14446 (face tree-sitter-hl-face:keyword fontified nil) 14446 14447 (fontified nil) 14447 14450 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14450 14451 (face (rainbow-delimiters-depth-1-face) fontified nil) 14451 14452 (face tree-sitter-hl-face:number fontified nil) 14452 14453 (face (rainbow-delimiters-depth-1-face) fontified nil) 14453 14467 (fontified nil) 14467 14496 (face tree-sitter-hl-face:comment fontified nil) 14496 14509 (fontified nil) 14509 14558 (face tree-sitter-hl-face:comment fontified nil) 14558 14572 (fontified nil) 14572 14575 (face tree-sitter-hl-face:keyword fontified nil) 14575 14576 (fontified nil) 14576 14584 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified nil) 14584 14585 (face (rainbow-delimiters-depth-1-face) fontified nil) 14585 14589 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified nil) 14589 14591 (fontified nil) 14591 14596 (face tree-sitter-hl-face:variable.parameter fontified nil) 14596 14597 (face (rainbow-delimiters-depth-1-face) fontified nil) 14597 14607 (fontified nil) 14607 14609 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil) 14609 14610 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil syntax-table (15)) 14610 14624 (face (tree-sitter-hl-face:doc tree-sitter-hl-face:string) fontified nil) 14624 14625 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil syntax-table (15)) 14625 14627 (face (tree-sitter-hl-face:string tree-sitter-hl-face:doc) fontified nil) 14627 14636 (fontified nil) 14636 14641 (face tree-sitter-hl-face:variable fontified nil) 14641 14642 (fontified nil) 14642 14643 (face tree-sitter-hl-face:operator fontified nil) 14643 14650 (fontified nil) 14650 14656 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14656 14657 (face (rainbow-delimiters-depth-1-face) fontified nil) 14657 14658 (face tree-sitter-hl-face:number fontified nil) 14658 14660 (fontified nil) 14660 14663 (face tree-sitter-hl-face:number fontified nil) 14663 14664 (fontified nil) 14664 14665 (face tree-sitter-hl-face:operator fontified nil) 14665 14672 (fontified nil) 14672 14674 (face tree-sitter-hl-face:property fontified nil) 14674 14676 (fontified nil) 14676 14679 (face tree-sitter-hl-face:number fontified nil) 14679 14680 (fontified nil) 14680 14681 (face tree-sitter-hl-face:operator fontified nil) 14681 14688 (fontified nil) 14688 14690 (face tree-sitter-hl-face:property fontified nil) 14690 14691 (fontified nil) 14691 14692 (face tree-sitter-hl-face:operator fontified nil) 14692 14693 (fontified nil) 14693 14698 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 14698 14699 (face (rainbow-delimiters-depth-2-face) fontified nil) 14699 14703 (face tree-sitter-hl-face:keyword fontified nil) 14703 14704 (fontified nil) 14704 14706 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14706 14707 (face (rainbow-delimiters-depth-3-face) fontified nil) 14707 14712 (fontified nil) 14712 14713 (face (rainbow-delimiters-depth-3-face) fontified nil) 14713 14714 (face (rainbow-delimiters-depth-2-face) fontified nil) 14714 14716 (fontified nil) 14716 14721 (face tree-sitter-hl-face:label fontified nil) 14721 14722 (face tree-sitter-hl-face:operator fontified nil) 14722 14726 (face tree-sitter-hl-face:keyword fontified nil) 14726 14727 (fontified nil) 14727 14732 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14732 14734 (fontified nil) 14734 14740 (face tree-sitter-hl-face:label fontified nil) 14740 14741 (face tree-sitter-hl-face:operator fontified nil) 14741 14745 (face tree-sitter-hl-face:keyword fontified nil) 14745 14746 (fontified nil) 14746 14752 (face tree-sitter-hl-face:property fontified nil) 14752 14753 (face (rainbow-delimiters-depth-1-face) fontified nil) 14753 14754 (fontified nil) 14754 14762 (fontified nil) 14762 14768 (face tree-sitter-hl-face:keyword fontified nil) 14768 14769 (fontified nil) 14769 14773 (face tree-sitter-hl-face:keyword fontified nil) 14773 14774 (fontified nil) 14774 14776 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14776 14777 (face (rainbow-delimiters-depth-1-face) fontified nil) 14777 14782 (fontified nil) 14782 14783 (face (rainbow-delimiters-depth-1-face) fontified nil) 14783 14784 (fontified nil) 14784 14785 (face tree-sitter-hl-face:operator fontified nil) 14785 14786 (fontified nil) 14786 14787 (face (rainbow-delimiters-depth-1-face) fontified nil) 14787 14790 (face tree-sitter-hl-face:number fontified nil) 14790 14791 (fontified nil) 14791 14792 (face tree-sitter-hl-face:operator fontified nil) 14792 14793 (fontified nil) 14793 14797 (face tree-sitter-hl-face:keyword fontified nil) 14797 14798 (fontified nil) 14798 14804 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14804 14805 (fontified nil) 14805 14806 (face tree-sitter-hl-face:operator fontified nil) 14806 14813 (fontified nil) 14813 14816 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14816 14817 (face (rainbow-delimiters-depth-2-face) fontified nil) 14817 14823 (fontified nil) 14823 14824 (face tree-sitter-hl-face:operator fontified nil) 14824 14825 (fontified nil) 14825 14829 (face tree-sitter-hl-face:keyword fontified nil) 14829 14830 (fontified nil) 14830 14834 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14834 14835 (fontified nil) 14835 14836 (face tree-sitter-hl-face:operator fontified nil) 14836 14843 (fontified nil) 14843 14845 (face tree-sitter-hl-face:property fontified nil) 14845 14846 (fontified nil) 14846 14847 (face tree-sitter-hl-face:operator fontified nil) 14847 14848 (fontified nil) 14848 14853 (face tree-sitter-hl-face:number fontified nil) 14853 14854 (face (rainbow-delimiters-depth-2-face) fontified nil) 14854 14855 (face (rainbow-delimiters-depth-1-face) fontified nil) 14855 14856 (fontified nil) 14856 14857 (face tree-sitter-hl-face:operator fontified nil) 14857 14864 (fontified nil) 14864 14868 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil) 14868 14869 (face (rainbow-delimiters-depth-1-face) fontified nil) 14869 14873 (face tree-sitter-hl-face:keyword fontified nil) 14873 14874 (fontified nil) 14874 14876 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14876 14877 (face (rainbow-delimiters-depth-2-face) fontified nil) 14877 14878 (face tree-sitter-hl-face:number fontified nil) 14878 14879 (face (rainbow-delimiters-depth-2-face) fontified nil) 14879 14880 (face (rainbow-delimiters-depth-1-face) fontified nil) 14880 14881 (fontified nil) 14881 14882 (face tree-sitter-hl-face:operator fontified nil) 14882 14883 (fontified nil) 14883 14887 (face tree-sitter-hl-face:keyword fontified nil) 14887 14888 (fontified nil) 14888 14890 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 14890 14891 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id969 . -14891) (undo-tree-id970 . -14891) (undo-tree-id971 . -14891) (undo-tree-id972 . -14891) (undo-tree-id973 . -1301) (undo-tree-id974 . -1301) (undo-tree-id975 . -1301) (undo-tree-id976 . -845) (undo-tree-id977 . -845) (undo-tree-id978 . -14891) (undo-tree-id979 . -14891) (undo-tree-id980 . -14891) (undo-tree-id981 . -13069) (undo-tree-id982 . -14891) (undo-tree-id983 . -13555) (undo-tree-id984 . -13555) (nil fontified t 1497 . 1501) (nil fontified t 1456 . 1462) (nil fontified t 1436 . 1444) (nil fontified t 1401 . 1418) (nil fontified t 1302 . 1314) (nil fontified t 1262 . 1270) (nil fontified t 1189 . 1206) (nil fontified t 1102 . 1139) (nil fontified t 1003 . 1036) (nil fontified t 951 . 967) (nil fontified t 907 . 919) (nil fontified t 866 . 875) (nil fontified t 758 . 766) (nil fontified t 720 . 729) (nil fontified t 692 . 700) (nil fontified t 664 . 673) (nil fontified t 638 . 646) (nil fontified t 610 . 619) (nil fontified t 585 . 593) (nil fontified t 565 . 574) (nil fontified t 499 . 507) (nil fontified t 472 . 481) (nil fontified t 445 . 453) (nil fontified t 379 . 383) (nil fontified t 351 . 353) (nil fontified t 317 . 326) (nil fontified t 300 . 301) (nil fontified t 262 . 299) (nil fontified t 224 . 228) (nil fontified t 192 . 193) (nil fontified t 162 . 166) (nil fontified t 134 . 135) (nil fontified t 75 . 79) (nil fontified t 54 . 58) (nil fontified t 40 . 41) (nil fontified t 21 . 27) (nil fontified t 11 . 17) (nil fontified t 1 . 7) (nil rear-nonsticky t 14891 . 14892)) (25975 7726 623649 553000) 0 nil])
nil
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1675) (undo-tree-id108 . -1) (#("i" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1676) (undo-tree-id109 . -1) (#("v" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1677) (undo-tree-id110 . -1) (#("a" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1678) (undo-tree-id111 . -1) (#("t" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1679) (undo-tree-id112 . -1) (#("i" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1680) (undo-tree-id113 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1681) (undo-tree-id114 . -1) (#("n" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified nil)) . -1682) (undo-tree-id115 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -1683) (undo-tree-id116 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1684) (undo-tree-id117 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1685) (undo-tree-id118 . -1) (#("n" 0 1 (fontified t)) . -1686) (undo-tree-id119 . -1) (#("e" 0 1 (fontified t)) . -1687) (undo-tree-id120 . -1) (#("t" 0 1 (fontified t)) . -1688) (undo-tree-id121 . -1) (#("_" 0 1 (fontified t)) . -1689) (undo-tree-id122 . -1) (#("i" 0 1 (fontified t)) . -1690) (undo-tree-id123 . -1) (#("n" 0 1 (fontified t)) . -1691) (undo-tree-id124 . -1) (#("p" 0 1 (fontified t)) . -1692) (undo-tree-id125 . -1) (#("u" 0 1 (fontified t)) . -1693) (undo-tree-id126 . -1) (#("t" 0 1 (fontified t)) . -1694) (undo-tree-id127 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1695) (undo-tree-id128 . -1) 1696) nil (25976 15713 203817 840000) 0 nil])
nil
([nil nil ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1673) (undo-tree-id106 . -1) (#("c" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1674) (undo-tree-id107 . -1) 1675) nil (25976 15713 203789 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1687 . 1688) (nil fontified nil 1687 . 1688) (nil fontified nil 1682 . 1687) (nil fontified nil 1681 . 1682) (nil fontified nil 1678 . 1681) (nil fontified nil 1677 . 1678) (nil fontified nil 1673 . 1677) (1673 . 1688)) nil (25976 15713 203773 165000) 0 nil])
([nil nil ((2496 . 2502) (t 25976 15713 421175 554000)) nil (25976 15781 183847 812000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -2501) (undo-tree-id132 . -1) 2502) nil (25976 15781 183845 173000) 0 nil])
([nil nil ((2501 . 2507)) nil (25976 15781 183829 246000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3285) (undo-tree-id160 . -1) 3286 (t 25976 15781 421177 718000)) nil (25976 15836 673428 629000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3334) (undo-tree-id154 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3335) (undo-tree-id155 . -1) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3336) (undo-tree-id156 . -1) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3337) (undo-tree-id157 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3338) (undo-tree-id158 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3339) (undo-tree-id159 . -1) 3340) nil (25976 15836 673425 144000) 0 nil])
([nil nil ((3334 . 3339)) nil (25976 15836 673355 678000) 0 nil])
([nil nil ((#("hidden" 0 6 (face tree-sitter-hl-face:variable fontified t)) . 3813)) nil (25976 15836 673354 702000) 0 nil])
([nil nil ((3813 . 3818)) nil (25976 15836 673353 943000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3835) (undo-tree-id149 . -1) (#("d" 0 1 (fontified t)) . -3836) (undo-tree-id150 . -1) (#("d" 0 1 (fontified t)) . -3837) (undo-tree-id151 . -1) (#("e" 0 1 (fontified t)) . -3838) (undo-tree-id152 . -1) (#("n" 0 1 (fontified t)) . -3839) (undo-tree-id153 . -1) 3840) nil (25976 15836 673352 50000) 0 nil])
([nil nil ((3835 . 3836)) nil (25976 15836 673344 630000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -3834) (undo-tree-id147 . -1) (#("r" 0 1 (fontified t)) . -3835) (undo-tree-id148 . -1) 3836) nil (25976 15836 673343 206000) 0 nil])
([nil nil ((3834 . 3839)) nil (25976 15836 673340 63000) 0 nil])
([nil nil ((3841 . 3857)) nil (25976 15836 673338 953000) 0 nil])
([nil nil ((3840 . 3841)) nil (25976 15836 673337 952000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3840) (undo-tree-id146 . -1) 3841) nil (25976 15836 673336 909000) 0 nil])
([nil nil ((3839 . 3845)) nil (25976 15836 673334 775000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -3844) (undo-tree-id145 . -1) 3845) nil (25976 15836 673333 756000) 0 nil])
([nil nil ((3844 . 3850)) nil (25976 15836 673331 813000) 0 nil])
([nil nil ((3818 . 3824)) nil (25976 15836 673330 942000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3823) (undo-tree-id144 . -1) 3824) nil (25976 15836 673329 556000) 0 nil])
([nil nil ((3823 . 3830)) nil (25976 15836 673326 558000) 0 nil])
([nil nil ((#("y" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3827) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 3828) nil (25976 15836 673321 769000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -4066) (undo-tree-id176 . -1) (#("i" 0 1 (fontified t)) . -4067) (undo-tree-id177 . -1) (#("d" 0 1 (fontified t)) . -4068) (undo-tree-id178 . -1) (#("d" 0 1 (fontified t)) . -4069) (undo-tree-id179 . -1) (#("e" 0 1 (fontified t)) . -4070) (undo-tree-id180 . -1) (#("n" 0 1 (fontified t)) . -4071) (undo-tree-id181 . -1) 4072 (t 25976 15836 909179 483000)) nil (25976 15845 290457 347000) 0 nil])
([nil nil ((4066 . 4071)) nil (25976 15845 290447 267000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -4136) (undo-tree-id170 . -1) (#("i" 0 1 (fontified t)) . -4137) (undo-tree-id171 . -1) (#("d" 0 1 (fontified t)) . -4138) (undo-tree-id172 . -1) (#("d" 0 1 (fontified t)) . -4139) (undo-tree-id173 . -1) (#("e" 0 1 (fontified t)) . -4140) (undo-tree-id174 . -1) (#("n" 0 1 (fontified t)) . -4141) (undo-tree-id175 . -1) 4142) nil (25976 15845 290445 581000) 0 nil])
([nil nil ((4136 . 4138)) nil (25976 15845 290437 402000) 0 nil])
([nil nil ((4138 . 4139)) nil (25976 15845 290436 537000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -4137) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("a" 0 1 (fontified t)) . -4138) (undo-tree-id169 . -1) 4139) nil (25976 15845 290433 936000) 0 nil])
([nil nil ((4137 . 4141)) nil (25976 15845 290407 100000) 0 nil])
([nil nil ((2393 . 2399) (t 25976 15845 517179 757000)) nil (25976 15865 906570 379000) 0 nil])
([nil nil ((#("è" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -2398) (undo-tree-id182 . -1) 2399) nil (25976 15865 906568 8000) 0 nil])
([nil nil ((2398 . 2404)) nil (25976 15865 906553 466000) 0 nil])
([nil nil ((1525 . 1536) (t 25976 15866 121180 413000)) nil (25976 15871 58162 42000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1950) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1951) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1952) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1953) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (#("s" 0 1 (fontified t)) . -1954) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (#("e" 0 1 (fontified t)) . -1955) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (#("l" 0 1 (fontified t)) . -1956) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1957) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (#("." 0 1 (fontified t)) . -1958) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1959) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1960) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1961) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1962) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1963) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1964) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1965) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) 1966 (t 25976 15871 301180 578000)) nil (25976 15889 707617 529000) 0 nil])
([nil nil ((10532 . 10545) (t 25976 15889 925181 171000)) nil (25976 15918 428162 367000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10959 . 10960) (nil fontified nil 10959 . 10960) (nil fontified nil 10958 . 10959) (nil fontified nil 10953 . 10958) (nil fontified nil 10952 . 10953) (nil fontified nil 10949 . 10952) (nil fontified nil 10948 . 10949) (nil fontified nil 10944 . 10948) (nil fontified nil 10943 . 10944) (nil fontified nil 10942 . 10943) (nil fontified nil 10941 . 10942) (nil fontified nil 10939 . 10941) (nil fontified nil 10938 . 10939) (nil fontified nil 10934 . 10938) (nil fontified nil 10933 . 10934) (nil fontified nil 10932 . 10933) (nil fontified nil 10931 . 10932) (nil fontified nil 10930 . 10931) (nil fontified nil 10929 . 10930) (nil fontified nil 10928 . 10929) (nil fontified nil 10927 . 10928) (nil fontified nil 10926 . 10927) (nil fontified nil 10920 . 10926) (nil fontified nil 10919 . 10920) (nil fontified nil 10913 . 10919) (nil fontified nil 10912 . 10913) (nil fontified nil 10908 . 10912) (nil fontified nil 10905 . 10908) (nil fontified nil 10904 . 10905) (nil fontified nil 10899 . 10904) (nil fontified nil 10898 . 10899) (nil fontified nil 10892 . 10898) (nil fontified nil 10891 . 10892) (nil fontified nil 10887 . 10891) (nil fontified nil 10886 . 10887) (nil fontified nil 10880 . 10886) (nil fontified nil 10879 . 10880) (nil fontified nil 10875 . 10879) (nil fontified nil 10863 . 10875) (nil fontified nil 10862 . 10863) (nil fontified nil 10861 . 10862) (nil fontified nil 10860 . 10861) (nil fontified nil 10855 . 10860) (nil fontified nil 10854 . 10855) (nil fontified nil 10851 . 10854) (nil fontified nil 10850 . 10851) (nil fontified nil 10846 . 10850) (nil fontified nil 10845 . 10846) (nil fontified nil 10844 . 10845) (nil fontified nil 10843 . 10844) (nil fontified nil 10841 . 10843) (nil fontified nil 10840 . 10841) (nil fontified nil 10836 . 10840) (nil fontified nil 10835 . 10836) (nil fontified nil 10834 . 10835) (nil fontified nil 10831 . 10834) (nil fontified nil 10824 . 10831) (nil fontified nil 10823 . 10824) (nil fontified nil 10822 . 10823) (nil fontified nil 10821 . 10822) (nil fontified nil 10820 . 10821) (nil fontified nil 10819 . 10820) (nil fontified nil 10818 . 10819) (nil fontified nil 10817 . 10818) (nil fontified nil 10811 . 10817) (nil fontified nil 10810 . 10811) (nil fontified nil 10804 . 10810) (nil fontified nil 10803 . 10804) (nil fontified nil 10799 . 10803) (nil fontified nil 10796 . 10799) (nil fontified nil 10795 . 10796) (nil fontified nil 10790 . 10795) (nil fontified nil 10789 . 10790) (nil fontified nil 10783 . 10789) (nil fontified nil 10782 . 10783) (nil fontified nil 10778 . 10782) (nil fontified nil 10777 . 10778) (nil fontified nil 10767 . 10777) (nil fontified nil 10766 . 10767) (nil fontified nil 10762 . 10766) (nil fontified nil 10748 . 10762) (nil fontified nil 10747 . 10748) (nil fontified nil 10742 . 10747) (nil fontified nil 10741 . 10742) (nil fontified nil 10737 . 10741) (nil fontified nil 10736 . 10737) (nil fontified nil 10731 . 10736) (nil fontified nil 10730 . 10731) (nil fontified nil 10728 . 10730) (nil fontified nil 10727 . 10728) (nil fontified nil 10722 . 10727) (nil fontified nil 10721 . 10722) (nil fontified nil 10718 . 10721) (nil fontified nil 10708 . 10718) (nil fontified nil 10707 . 10708) (nil fontified nil 10701 . 10707) (nil fontified nil 10700 . 10701) (nil fontified nil 10696 . 10700) (nil fontified nil 10695 . 10696) (nil fontified nil 10689 . 10695) (nil fontified nil 10687 . 10689) (nil fontified nil 10682 . 10687) (nil fontified nil 10681 . 10682) (nil fontified nil 10677 . 10681) (nil fontified nil 10676 . 10677) (nil fontified nil 10671 . 10676) (nil fontified nil 10669 . 10671) (nil fontified nil 10661 . 10669) (nil fontified nil 10660 . 10661) (nil fontified nil 10656 . 10660) (nil fontified nil 10655 . 10656) (nil fontified nil 10651 . 10655) (nil fontified nil 10644 . 10651) (nil fontified nil 10643 . 10644) (nil fontified nil 10642 . 10643) (nil fontified nil 10636 . 10642) (nil fontified nil 10635 . 10636) (nil fontified nil 10631 . 10635) (nil fontified nil 10622 . 10631) (nil fontified nil 10621 . 10622) (nil fontified nil 10615 . 10621) (nil fontified nil 10614 . 10615) (nil fontified nil 10610 . 10614) (nil fontified nil 10609 . 10610) (nil fontified nil 10603 . 10609) (nil fontified nil 10601 . 10603) (nil fontified nil 10596 . 10601) (nil fontified nil 10595 . 10596) (nil fontified nil 10591 . 10595) (nil fontified nil 10590 . 10591) (nil fontified nil 10585 . 10590) (nil fontified nil 10583 . 10585) (nil fontified nil 10575 . 10583) (nil fontified nil 10574 . 10575) (nil fontified nil 10570 . 10574) (nil fontified nil 10569 . 10570) (nil fontified nil 10565 . 10569) (nil fontified nil 10558 . 10565) (nil fontified nil 10557 . 10558) (nil fontified nil 10556 . 10557) (nil fontified nil 10546 . 10556) (nil fontified nil 10545 . 10546) (nil fontified nil 10541 . 10545) (nil fontified nil 10533 . 10541) (10533 . 10960)) nil (25976 15918 428156 38000) 0 nil])
([nil nil ((apply -4 10457 10537 undo--wrap-and-run-primitive-undo 10457 10537 ((10492 . 10494) (10465 . 10467) 10532))) nil (25976 15918 428125 560000) 0 nil])
([nil nil ((10536 . 10544)) nil (25976 15918 428124 570000) 0 nil])
([nil nil ((10568 . 10572)) nil (25976 15918 428122 351000) 0 nil])
([nil nil ((10658 . 10662)) nil (25976 15918 428118 255000) 0 nil])
([nil nil ((10797 . 10801) (t 25976 15918 645182 84000)) nil (25976 15927 630718 343000) 0 nil])
([nil nil ((10910 . 10914)) nil (25976 15927 630713 101000) 0 nil])
([nil nil ((10980 . 10984) (t 25976 15927 853182 377000)) nil (25976 15935 800472 21000) 0 nil])
([nil nil ((10878 . 10882)) nil (25976 15935 800467 822000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11004) (undo-tree-id1582 . -4) (undo-tree-id1583 . -4) (undo-tree-id1584 . -4) (undo-tree-id1585 . -4) (undo-tree-id1586 . -4) (undo-tree-id1587 . -4) (undo-tree-id1588 . -4) (undo-tree-id1589 . -4) (undo-tree-id1590 . -4) (undo-tree-id1591 . -4) (undo-tree-id1592 . -4) (undo-tree-id1593 . -4) (undo-tree-id1594 . -4) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (undo-tree-id1598 . -4) (undo-tree-id1599 . -4) 11008 (t 25976 15936 25182 638000)) nil (25976 15950 439157 683000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -469) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -470) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (#("t" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -471) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (#("w" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -472) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -473) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (#("r" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -474) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (#("k" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -475) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (#("," 0 1 (fontified t)) . -476) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (#(" " 0 1 (fontified nil)) . -477) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (#("s" 0 1 (fontified nil)) . -478) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (#("e" 0 1 (fontified nil)) . -479) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (#("l" 0 1 (fontified t)) . -480) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -481) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) 482 (t 25976 15950 665183 103000)) nil (25976 15981 915012 374000) 0 nil])
([nil nil ((482 . 490) (t 25976 15982 145184 105000)) nil (25976 15988 769704 47000) 0 nil])
([nil nil ((10200 . 10208) (t 25976 15988 993184 323000)) nil (25976 16030 723650 218000) 0 nil])
([nil nil ((10459 . 10471)) nil (25976 16030 723648 339000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10467) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) (undo-tree-id2209 . -4) (undo-tree-id2210 . -4) (undo-tree-id2211 . -4) (undo-tree-id2212 . -4) (undo-tree-id2213 . -4) (undo-tree-id2214 . -4) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) 10471) nil (25976 16030 723643 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10102 . 10103) (nil fontified nil 10102 . 10103) (nil fontified nil 10101 . 10102) (nil fontified nil 10095 . 10101) (nil fontified nil 10094 . 10095) (nil fontified nil 10090 . 10094) (nil fontified nil 10089 . 10090) (nil fontified nil 10083 . 10089) (nil fontified nil 10081 . 10083) (nil fontified nil 10076 . 10081) (nil fontified nil 10075 . 10076) (nil fontified nil 10071 . 10075) (nil fontified nil 10070 . 10071) (nil fontified nil 10065 . 10070) (nil fontified nil 10063 . 10065) (nil fontified nil 10060 . 10063) (nil fontified nil 10059 . 10060) (nil fontified nil 10055 . 10059) (nil fontified nil 10054 . 10055) (nil fontified nil 10048 . 10054) (nil fontified nil 10041 . 10048) (nil fontified nil 10040 . 10041) (nil fontified nil 10039 . 10040) (nil fontified nil 10036 . 10039) (nil fontified nil 10035 . 10036) (nil fontified nil 10031 . 10035) (nil fontified nil 10023 . 10031) (10023 . 10103) (t 25976 16030 941185 658000)) nil (25976 16061 632905 218000) 0 nil])
([nil nil ((#("        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 12 (face tree-sitter-hl-face:keyword fontified t) 12 13 (fontified t) 13 16 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 16 17 (fontified t) 17 18 (face tree-sitter-hl-face:operator fontified t) 18 25 (fontified t) 25 31 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 36 (face tree-sitter-hl-face:keyword fontified t) 36 37 (fontified t) 37 40 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 40 42 (fontified t) 42 47 (face tree-sitter-hl-face:label fontified t) 47 48 (face tree-sitter-hl-face:operator fontified t) 48 52 (face tree-sitter-hl-face:keyword fontified t) 52 53 (fontified t) 53 58 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 58 60 (fontified t) 60 66 (face tree-sitter-hl-face:label fontified t) 66 67 (face tree-sitter-hl-face:operator fontified t) 67 71 (face tree-sitter-hl-face:keyword fontified t) 71 72 (fontified t) 72 78 (face tree-sitter-hl-face:property fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (rear-nonsticky t fontified t)) . 10023) (undo-tree-id2221 . -80) 10103) nil (25976 16061 632898 90000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10022) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) 10023) nil (25976 16061 632895 544000) 0 nil])
([nil nil ((nil fontified nil 10634 . 10635) (nil fontified nil 10633 . 10634) (nil fontified nil 10627 . 10633) (nil fontified nil 10626 . 10627) (nil fontified nil 10622 . 10626) (nil fontified nil 10621 . 10622) (nil fontified nil 10615 . 10621) (nil fontified nil 10613 . 10615) (nil fontified nil 10608 . 10613) (nil fontified nil 10607 . 10608) (nil fontified nil 10603 . 10607) (nil fontified nil 10602 . 10603) (nil fontified nil 10597 . 10602) (nil fontified nil 10595 . 10597) (nil fontified nil 10592 . 10595) (nil fontified nil 10591 . 10592) (nil fontified nil 10587 . 10591) (nil fontified nil 10586 . 10587) (nil fontified nil 10580 . 10586) (nil fontified nil 10573 . 10580) (nil fontified nil 10572 . 10573) (nil fontified nil 10571 . 10572) (nil fontified nil 10568 . 10571) (nil fontified nil 10567 . 10568) (nil fontified nil 10563 . 10567) (nil fontified nil 10555 . 10563) (10555 . 10635)) nil (25976 16061 632889 416000) 0 nil])
([nil nil ((10571 . 10572)) nil (25976 16061 632882 701000) 0 nil])
([nil nil ((#("è" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -10571) (undo-tree-id2217 . -1) 10572) nil (25976 16061 632880 709000) 0 nil])
([nil nil ((10571 . 10575)) nil (25976 16061 632869 790000) 0 nil])
([nil nil ((10599 . 10603)) nil (25976 16061 632865 185000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3392 . 3393) (nil fontified nil 3392 . 3393) (nil fontified nil 3391 . 3392) (nil fontified nil 3390 . 3391) (nil fontified nil 3381 . 3390) (nil fontified nil 3380 . 3381) (nil fontified nil 3376 . 3380) (nil fontified nil 3375 . 3376) (nil fontified nil 3374 . 3375) (nil fontified nil 3373 . 3374) (nil fontified nil 3368 . 3373) (nil fontified nil 3360 . 3368) (3360 . 3393) (t 25976 16061 849186 642000)) nil (25976 16086 484364 70000) 0 nil])
([nil nil ((#("ates" 0 4 (face tree-sitter-hl-face:variable fontified t)) . 3369) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -4)) nil (25976 16086 484359 584000) 0 nil])
([nil nil ((#("        r = self.initRates()
" 0 8 (fontified t) 8 9 (face tree-sitter-hl-face:variable fontified t) 9 10 (fontified t) 10 11 (face tree-sitter-hl-face:operator fontified t) 11 12 (fontified t) 12 16 (face tree-sitter-hl-face:keyword fontified t) 16 17 (fontified t) 17 26 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 29 (rear-nonsticky t fontified t)) . -3360) (undo-tree-id2222 . -8) (undo-tree-id2223 . -8) (undo-tree-id2224 . -8) (undo-tree-id2225 . -8) (undo-tree-id2226 . -8) (undo-tree-id2227 . -8) (undo-tree-id2228 . -8) (undo-tree-id2229 . -8) (undo-tree-id2230 . -8) (undo-tree-id2231 . -9) (undo-tree-id2232 . -8) (undo-tree-id2233 . -9) (undo-tree-id2234 . -9) (undo-tree-id2235 . -9) (undo-tree-id2236 . -9) (undo-tree-id2237 . -9) (undo-tree-id2238 . -9) (undo-tree-id2239 . -9) (undo-tree-id2240 . -9) (undo-tree-id2241 . -9) (undo-tree-id2242 . -9) (undo-tree-id2243 . -9) (undo-tree-id2244 . -9) (undo-tree-id2245 . -9) (undo-tree-id2246 . -9) (undo-tree-id2247 . -9) (undo-tree-id2248 . -9) (undo-tree-id2249 . -9) (undo-tree-id2250 . -9) (undo-tree-id2251 . -9) (undo-tree-id2252 . -9) (undo-tree-id2253 . -9) (undo-tree-id2254 . -9) (undo-tree-id2255 . -9) (undo-tree-id2256 . -9) (undo-tree-id2257 . -9) (undo-tree-id2258 . -9) (undo-tree-id2259 . -9) (undo-tree-id2260 . -9) (undo-tree-id2261 . -9) (undo-tree-id2262 . -9) (undo-tree-id2263 . -9) (undo-tree-id2264 . -29) (undo-tree-id2265 . -29) (undo-tree-id2266 . -29) (undo-tree-id2267 . -29) (undo-tree-id2268 . -29) (undo-tree-id2269 . -29) (undo-tree-id2270 . -29) (undo-tree-id2271 . -29) (undo-tree-id2272 . -29) (undo-tree-id2273 . -29) (undo-tree-id2274 . -29) (undo-tree-id2275 . -29) (undo-tree-id2276 . -29) 3389) nil (25976 16086 484346 110000) 0 nil])
([nil nil ((3360 . 3368)) nil (25976 16086 484279 390000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3359) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) 3360 (t 25976 16086 701187 432000)) nil (25976 16094 356889 155000) 0 nil])
([nil nil ((3326 . 3335)) nil (25976 16094 356883 897000) 0 nil])
([nil nil ((#("        start = perf_counter()
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 28 (face tree-sitter-hl-face:function.call fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . 3377) (undo-tree-id2289 . -8) (undo-tree-id2290 . -31) 3408) nil (25976 16094 356882 239000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3336 . 3337) (nil fontified nil 3336 . 3337) (nil fontified nil 3335 . 3336) (nil fontified nil 3334 . 3335) (nil fontified nil 3322 . 3334) (nil fontified nil 3321 . 3322) (nil fontified nil 3320 . 3321) (nil fontified nil 3319 . 3320) (nil fontified nil 3314 . 3319) (nil fontified nil 3306 . 3314) (3306 . 3337)) nil (25976 16094 356876 731000) 0 nil])
([nil nil ((#("        # init rates
" 0 8 (fontified t) 8 20 (face tree-sitter-hl-face:comment fontified t) 20 21 (fontified t)) . -3337) (undo-tree-id2288 . -21) 3358) nil (25976 16094 356869 960000) 0 nil])
([nil nil ((#("return" 0 6 (face tree-sitter-hl-face:keyword fontified t)) . 5820) (t 25976 16094 581187 683000)) nil (25976 16119 296141 784000) 0 nil])
([nil nil ((5820 . 5826)) nil (25976 16119 296140 671000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -5825) (undo-tree-id2310 . -1) 5826) nil (25976 16119 296139 629000) 0 nil])
([nil nil ((5825 . 5827)) nil (25976 16119 296137 567000) 0 nil])
([nil nil ((5825 . 5826)) nil (25976 16119 296136 757000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5827)) nil (25976 16119 296135 582000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5973 . 5974) (nil fontified nil 5973 . 5974) (nil fontified nil 5972 . 5973) (nil fontified nil 5966 . 5972) (nil fontified nil 5965 . 5966) (nil fontified nil 5961 . 5965) (nil fontified nil 5960 . 5961) (nil fontified nil 5954 . 5960) (nil fontified nil 5952 . 5954) (nil fontified nil 5947 . 5952) (nil fontified nil 5946 . 5947) (nil fontified nil 5942 . 5946) (nil fontified nil 5941 . 5942) (nil fontified nil 5936 . 5941) (nil fontified nil 5934 . 5936) (nil fontified nil 5926 . 5934) (nil fontified nil 5925 . 5926) (nil fontified nil 5921 . 5925) (nil fontified nil 5920 . 5921) (nil fontified nil 5915 . 5920) (nil fontified nil 5908 . 5915) (nil fontified nil 5907 . 5908) (nil fontified nil 5906 . 5907) (nil fontified nil 5901 . 5906) (nil fontified nil 5893 . 5901) (5893 . 5974)) nil (25976 16119 296133 748000) 0 nil])
([nil nil ((#("rates" 0 5 (face tree-sitter-hl-face:variable fontified t)) . 5901)) nil (25976 16119 296127 15000) 0 nil])
([nil nil ((5901 . 5907)) nil (25976 16119 296126 173000) 0 nil])
([nil nil ((#("è" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -5904) (undo-tree-id2307 . -1) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -5905) (undo-tree-id2308 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -5906) (undo-tree-id2309 . -1) 5907) nil (25976 16119 296124 275000) 0 nil])
([nil nil ((5904 . 5910)) nil (25976 16119 296119 672000) 0 nil])
([nil nil ((5978 . 5986)) nil (25976 16119 296118 542000) 0 nil])
([nil nil ((5986 . 5992)) nil (25976 16119 296117 673000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -5990) (undo-tree-id2305 . -1) (#("r" 0 1 (fontified t)) . -5991) (undo-tree-id2306 . -1) 5992) nil (25976 16119 296116 286000) 0 nil])
([nil nil ((5990 . 5992)) nil (25976 16119 296112 660000) 0 nil])
([nil nil ((5992 . 6004)) nil (25976 16119 296111 553000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -6003) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) 6004) nil (25976 16119 296108 963000) 0 nil])
([nil nil ((6003 . 6009)) nil (25976 16119 296084 435000) 0 nil])
([nil nil ((6009 . 6014)) nil (25976 16119 296079 776000) 0 nil])
([nil nil ((3359 . 3370) (t 25976 16119 529188 477000)) nil (25976 16131 425168 26000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3389) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (#(" " 0 1 (fontified t)) . -3390) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (#(" " 0 1 (fontified t)) . -3391) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (#(" " 0 1 (fontified t)) . -3392) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (#(" " 0 1 (fontified t)) . -3393) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (#(" " 0 1 (fontified t)) . -3394) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (#(" " 0 1 (fontified t)) . -3395) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (#(" " 0 1 (fontified t)) . -3396) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) 3397) nil (25976 16131 425152 15000) 0 nil])
([nil nil ((#("        rates, rec_input = self.initRates()
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 15 (fontified t) 15 24 (face tree-sitter-hl-face:variable fontified t) 24 25 (fontified t) 25 26 (face tree-sitter-hl-face:operator fontified t) 26 27 (fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 41 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 44 (fontified t)) . 3346) (undo-tree-id2615 . -43) (undo-tree-id2616 . -43) (undo-tree-id2617 . -44) (undo-tree-id2618 . -44) (undo-tree-id2619 . -32) (undo-tree-id2620 . -44) 3390 (t 25976 16131 641188 862000)) nil (25976 16136 530555 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3661 . 3662) (nil fontified nil 3661 . 3662) (nil fontified nil 3660 . 3661) (nil fontified nil 3659 . 3660) (nil fontified nil 3650 . 3659) (nil fontified nil 3649 . 3650) (nil fontified nil 3645 . 3649) (nil fontified nil 3644 . 3645) (nil fontified nil 3643 . 3644) (nil fontified nil 3642 . 3643) (nil fontified nil 3633 . 3642) (nil fontified nil 3631 . 3633) (nil fontified nil 3626 . 3631) (nil fontified nil 3618 . 3626) (3618 . 3662)) nil (25976 16136 530533 167000) 0 nil])
([nil nil ((3661 . 3670)) nil (25976 16136 530526 283000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3345) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) 3346 (t 25976 16136 749189 25000)) nil (25976 16139 287991 428000) 0 nil])
([nil nil ((#("        self.N_STEPS = int(self.DURATION / self.DT)
        self.N_STEADY = int(self.T_STEADY / self.DT)
        self.N_WINDOW = int(self.T_WINDOW / self.DT)
        self.N_STIM_ON = int(self.T_STIM_ON / self.DT)
        self.N_STIM_OFF = int(self.T_STIM_OFF / self.DT)
" 0 8 (fontified t) 8 12 (face tree-sitter-hl-face:keyword fontified t) 12 13 (fontified t) 13 20 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t) 22 23 (fontified t) 23 26 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 39 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 39 40 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 40 41 (fontified t) 41 42 (face tree-sitter-hl-face:operator fontified t) 42 43 (fontified t) 43 47 (face tree-sitter-hl-face:keyword fontified t) 47 48 (fontified t) 48 50 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 60 (fontified t) 60 64 (face tree-sitter-hl-face:keyword fontified t) 64 65 (fontified t) 65 73 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 73 74 (fontified t) 74 75 (face tree-sitter-hl-face:operator fontified t) 75 76 (fontified t) 76 79 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 79 80 (face (rainbow-delimiters-depth-1-face) fontified t) 80 84 (face tree-sitter-hl-face:keyword fontified t) 84 85 (fontified t) 85 93 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 93 94 (fontified t) 94 95 (face tree-sitter-hl-face:operator fontified t) 95 96 (fontified t) 96 100 (face tree-sitter-hl-face:keyword fontified t) 100 101 (fontified t) 101 103 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 103 104 (face (rainbow-delimiters-depth-1-face) fontified t) 104 113 (fontified t) 113 117 (face tree-sitter-hl-face:keyword fontified t) 117 118 (fontified t) 118 124 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 124 126 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 126 127 (fontified t) 127 128 (face tree-sitter-hl-face:operator fontified t) 128 129 (fontified t) 129 132 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 132 133 (face (rainbow-delimiters-depth-1-face) fontified t) 133 137 (face tree-sitter-hl-face:keyword fontified t) 137 138 (fontified t) 138 144 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 144 146 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 146 147 (fontified t) 147 148 (face tree-sitter-hl-face:operator fontified t) 148 149 (fontified t) 149 153 (face tree-sitter-hl-face:keyword fontified t) 153 154 (fontified t) 154 156 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 166 (fontified t) 166 170 (face tree-sitter-hl-face:keyword fontified t) 170 171 (fontified t) 171 180 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 180 181 (fontified t) 181 182 (face tree-sitter-hl-face:operator fontified t) 182 183 (fontified t) 183 186 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 186 187 (face (rainbow-delimiters-depth-1-face) fontified t) 187 191 (face tree-sitter-hl-face:keyword fontified t) 191 192 (fontified t) 192 201 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 201 202 (fontified t) 202 203 (face tree-sitter-hl-face:operator fontified t) 203 204 (fontified t) 204 208 (face tree-sitter-hl-face:keyword fontified t) 208 209 (fontified t) 209 211 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 211 212 (face (rainbow-delimiters-depth-1-face) fontified t) 212 221 (fontified t) 221 225 (face tree-sitter-hl-face:keyword fontified t) 225 226 (fontified t) 226 236 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 236 237 (fontified t) 237 238 (face tree-sitter-hl-face:operator fontified t) 238 239 (fontified t) 239 242 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 242 243 (face (rainbow-delimiters-depth-1-face) fontified t) 243 247 (face tree-sitter-hl-face:keyword fontified t) 247 248 (fontified t) 248 258 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 258 259 (fontified t) 259 260 (face tree-sitter-hl-face:operator fontified t) 260 261 (fontified t) 261 265 (face tree-sitter-hl-face:keyword fontified t) 265 266 (fontified t) 266 268 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 268 269 (face (rainbow-delimiters-depth-1-face) fontified t) 269 270 (fontified t)) . 3346) (undo-tree-id2675 . -270) (undo-tree-id2676 . -270) (undo-tree-id2677 . -213) (undo-tree-id2678 . -270) (undo-tree-id2679 . -270) (undo-tree-id2680 . -270) (undo-tree-id2681 . -270) (undo-tree-id2682 . -270) (undo-tree-id2683 . -270) (undo-tree-id2684 . -270) (undo-tree-id2685 . -270) (undo-tree-id2686 . -270) (undo-tree-id2687 . -270) (undo-tree-id2688 . -270) (undo-tree-id2689 . -270) 3616 (t 25976 16139 505189 113000)) nil (25976 16146 467901 966000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3345) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) 3346) nil (25976 16146 467881 91000) 0 nil])
([nil nil ((9132 . 9141) (t 25976 16146 693189 341000)) nil (25976 16157 275878 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9402 . 9403) (nil fontified nil 9402 . 9403) (nil fontified nil 9401 . 9402) (nil fontified nil 9399 . 9401) (nil fontified nil 9398 . 9399) (nil fontified nil 9394 . 9398) (nil fontified nil 9393 . 9394) (nil fontified nil 9392 . 9393) (nil fontified nil 9391 . 9392) (nil fontified nil 9381 . 9391) (nil fontified nil 9380 . 9381) (nil fontified nil 9376 . 9380) (nil fontified nil 9375 . 9376) (nil fontified nil 9372 . 9375) (nil fontified nil 9371 . 9372) (nil fontified nil 9370 . 9371) (nil fontified nil 9369 . 9370) (nil fontified nil 9359 . 9369) (nil fontified nil 9358 . 9359) (nil fontified nil 9354 . 9358) (nil fontified nil 9345 . 9354) (nil fontified nil 9344 . 9345) (nil fontified nil 9342 . 9344) (nil fontified nil 9341 . 9342) (nil fontified nil 9337 . 9341) (nil fontified nil 9336 . 9337) (nil fontified nil 9335 . 9336) (nil fontified nil 9334 . 9335) (nil fontified nil 9325 . 9334) (nil fontified nil 9324 . 9325) (nil fontified nil 9320 . 9324) (nil fontified nil 9319 . 9320) (nil fontified nil 9316 . 9319) (nil fontified nil 9315 . 9316) (nil fontified nil 9314 . 9315) (nil fontified nil 9313 . 9314) (nil fontified nil 9304 . 9313) (nil fontified nil 9303 . 9304) (nil fontified nil 9299 . 9303) (nil fontified nil 9290 . 9299) (nil fontified nil 9289 . 9290) (nil fontified nil 9287 . 9289) (nil fontified nil 9286 . 9287) (nil fontified nil 9282 . 9286) (nil fontified nil 9281 . 9282) (nil fontified nil 9280 . 9281) (nil fontified nil 9279 . 9280) (nil fontified nil 9277 . 9279) (nil fontified nil 9271 . 9277) (nil fontified nil 9270 . 9271) (nil fontified nil 9266 . 9270) (nil fontified nil 9265 . 9266) (nil fontified nil 9262 . 9265) (nil fontified nil 9261 . 9262) (nil fontified nil 9260 . 9261) (nil fontified nil 9259 . 9260) (nil fontified nil 9257 . 9259) (nil fontified nil 9251 . 9257) (nil fontified nil 9250 . 9251) (nil fontified nil 9246 . 9250) (nil fontified nil 9237 . 9246) (nil fontified nil 9236 . 9237) (nil fontified nil 9234 . 9236) (nil fontified nil 9233 . 9234) (nil fontified nil 9229 . 9233) (nil fontified nil 9228 . 9229) (nil fontified nil 9227 . 9228) (nil fontified nil 9226 . 9227) (nil fontified nil 9218 . 9226) (nil fontified nil 9217 . 9218) (nil fontified nil 9213 . 9217) (nil fontified nil 9212 . 9213) (nil fontified nil 9209 . 9212) (nil fontified nil 9208 . 9209) (nil fontified nil 9207 . 9208) (nil fontified nil 9206 . 9207) (nil fontified nil 9198 . 9206) (nil fontified nil 9197 . 9198) (nil fontified nil 9193 . 9197) (nil fontified nil 9184 . 9193) (nil fontified nil 9183 . 9184) (nil fontified nil 9181 . 9183) (nil fontified nil 9180 . 9181) (nil fontified nil 9176 . 9180) (nil fontified nil 9175 . 9176) (nil fontified nil 9174 . 9175) (nil fontified nil 9173 . 9174) (nil fontified nil 9172 . 9173) (nil fontified nil 9165 . 9172) (nil fontified nil 9164 . 9165) (nil fontified nil 9160 . 9164) (nil fontified nil 9159 . 9160) (nil fontified nil 9156 . 9159) (nil fontified nil 9155 . 9156) (nil fontified nil 9154 . 9155) (nil fontified nil 9153 . 9154) (nil fontified nil 9146 . 9153) (nil fontified nil 9145 . 9146) (nil fontified nil 9141 . 9145) (nil fontified nil 9133 . 9141) (9133 . 9403)) nil (25976 16157 275870 433000) 0 nil])
([nil nil ((#("    def print_activity(self, step, rates):

        times = np.round((step - self.N_STEADY) / self.N_STEPS * self.DURATION, 2)

        activity = []

        activity.append(np.round(torch.mean(rates[:self.csumNa[1]]).cpu().detach().numpy(), 2))

        if self.N_POP > 1:
            activity.append(np.round(torch.mean(rates[self.csumNa[1]:self.csumNa[2]]).cpu().detach().numpy(), 2))

        if self.N_POP > 2:
            activity.append(np.round(torch.mean(rates[self.csumNa[2]:]).cpu().detach().numpy(), 2))

        print(
            \"times (s)\",
            np.round(times, 2),
            \"rates (Hz)\",
            activity,
        )
" 0 4 (fontified t) 4 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 22 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 27 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 27 29 (fontified t) 29 33 (face tree-sitter-hl-face:variable.parameter fontified t) 33 35 (fontified t) 35 40 (face tree-sitter-hl-face:variable.parameter fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 52 (fontified t) 52 57 (face tree-sitter-hl-face:variable fontified t) 57 58 (fontified t) 58 59 (face tree-sitter-hl-face:operator fontified t) 59 63 (fontified t) 63 68 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t) 69 70 (face (rainbow-delimiters-depth-2-face) fontified t) 70 75 (fontified t) 75 76 (face tree-sitter-hl-face:operator fontified t) 76 77 (fontified t) 77 81 (face tree-sitter-hl-face:keyword fontified t) 81 82 (fontified t) 82 90 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 90 91 (face (rainbow-delimiters-depth-2-face) fontified t) 91 92 (fontified t) 92 93 (face tree-sitter-hl-face:operator fontified t) 93 94 (fontified t) 94 98 (face tree-sitter-hl-face:keyword fontified t) 98 99 (fontified t) 99 106 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 106 107 (fontified t) 107 108 (face tree-sitter-hl-face:operator fontified t) 108 109 (fontified t) 109 113 (face tree-sitter-hl-face:keyword fontified t) 113 114 (fontified t) 114 122 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 122 124 (fontified t) 124 125 (face tree-sitter-hl-face:number fontified t) 125 126 (face (rainbow-delimiters-depth-1-face) fontified t) 126 136 (fontified t) 136 144 (face tree-sitter-hl-face:variable fontified t) 144 145 (fontified t) 145 146 (face tree-sitter-hl-face:operator fontified t) 146 147 (fontified t) 147 148 (face (rainbow-delimiters-depth-1-face) fontified t) 148 149 (face (rainbow-delimiters-depth-1-face) fontified t) 149 168 (fontified t) 168 174 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 174 175 (face (rainbow-delimiters-depth-1-face) fontified t) 175 178 (fontified t) 178 183 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 183 184 (face (rainbow-delimiters-depth-2-face) fontified t) 184 190 (fontified t) 190 194 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 194 195 (face (rainbow-delimiters-depth-3-face) fontified t) 195 200 (fontified t) 200 201 (face (rainbow-delimiters-depth-4-face) fontified t) 201 202 (fontified t) 202 206 (face tree-sitter-hl-face:keyword fontified t) 206 207 (fontified t) 207 213 (face tree-sitter-hl-face:property fontified t) 213 214 (face (rainbow-delimiters-depth-5-face) fontified t) 214 215 (face tree-sitter-hl-face:number fontified t) 215 216 (face (rainbow-delimiters-depth-5-face) fontified t) 216 217 (face (rainbow-delimiters-depth-4-face) fontified t) 217 218 (face (rainbow-delimiters-depth-3-face) fontified t) 218 219 (fontified t) 219 222 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 222 223 (face (rainbow-delimiters-depth-3-face) fontified t) 223 224 (face (rainbow-delimiters-depth-3-face) fontified t) 224 225 (fontified t) 225 231 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 231 232 (face (rainbow-delimiters-depth-3-face) fontified t) 232 233 (face (rainbow-delimiters-depth-3-face) fontified t) 233 234 (fontified t) 234 239 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 239 240 (face (rainbow-delimiters-depth-3-face) fontified t) 240 241 (face (rainbow-delimiters-depth-3-face) fontified t) 241 243 (fontified t) 243 244 (face tree-sitter-hl-face:number fontified t) 244 245 (face (rainbow-delimiters-depth-2-face) fontified t) 245 246 (face (rainbow-delimiters-depth-1-face) fontified t) 246 256 (fontified t) 256 258 (face tree-sitter-hl-face:keyword fontified t) 258 259 (fontified t) 259 263 (face tree-sitter-hl-face:keyword fontified t) 263 264 (fontified t) 264 269 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 269 270 (fontified t) 270 271 (face tree-sitter-hl-face:operator fontified t) 271 272 (fontified t) 272 273 (face tree-sitter-hl-face:number fontified t) 273 296 (fontified t) 296 302 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 302 303 (face (rainbow-delimiters-depth-1-face) fontified t) 303 306 (fontified t) 306 311 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 311 312 (face (rainbow-delimiters-depth-2-face) fontified t) 312 318 (fontified t) 318 322 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 322 323 (face (rainbow-delimiters-depth-3-face) fontified t) 323 328 (fontified t) 328 329 (face (rainbow-delimiters-depth-4-face) fontified t) 329 333 (face tree-sitter-hl-face:keyword fontified t) 333 334 (fontified t) 334 340 (face tree-sitter-hl-face:property fontified t) 340 341 (face (rainbow-delimiters-depth-5-face) fontified t) 341 342 (face tree-sitter-hl-face:number fontified t) 342 343 (face (rainbow-delimiters-depth-5-face) fontified t) 343 344 (fontified t) 344 348 (face tree-sitter-hl-face:keyword fontified t) 348 349 (fontified t) 349 355 (face tree-sitter-hl-face:property fontified t) 355 356 (face (rainbow-delimiters-depth-5-face) fontified t) 356 357 (face tree-sitter-hl-face:number fontified t) 357 358 (face (rainbow-delimiters-depth-5-face) fontified t) 358 359 (face (rainbow-delimiters-depth-4-face) fontified t) 359 360 (face (rainbow-delimiters-depth-3-face) fontified t) 360 361 (fontified t) 361 364 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 364 365 (face (rainbow-delimiters-depth-3-face) fontified t) 365 366 (face (rainbow-delimiters-depth-3-face) fontified t) 366 367 (fontified t) 367 373 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 373 374 (face (rainbow-delimiters-depth-3-face) fontified t) 374 375 (face (rainbow-delimiters-depth-3-face) fontified t) 375 376 (fontified t) 376 380 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 380 381 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 381 382 (face (rainbow-delimiters-depth-3-face) fontified t) 382 383 (face (rainbow-delimiters-depth-3-face) fontified t) 383 385 (fontified t) 385 386 (face tree-sitter-hl-face:number fontified t) 386 387 (face (rainbow-delimiters-depth-2-face) fontified t) 387 388 (face (rainbow-delimiters-depth-1-face) fontified t) 388 398 (fontified t) 398 400 (face tree-sitter-hl-face:keyword fontified t) 400 401 (fontified t) 401 405 (face tree-sitter-hl-face:keyword fontified t) 405 406 (fontified t) 406 411 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 411 412 (fontified t) 412 413 (face tree-sitter-hl-face:operator fontified t) 413 414 (fontified t) 414 415 (face tree-sitter-hl-face:number fontified t) 415 438 (fontified t) 438 444 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 444 445 (face (rainbow-delimiters-depth-1-face) fontified t) 445 448 (fontified t) 448 453 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 453 454 (face (rainbow-delimiters-depth-2-face) fontified t) 454 460 (fontified t) 460 464 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 464 465 (face (rainbow-delimiters-depth-3-face) fontified t) 465 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-4-face) fontified t) 471 472 (face tree-sitter-hl-face:keyword fontified t) 472 473 (face tree-sitter-hl-face:keyword fontified t) 473 474 (face tree-sitter-hl-face:keyword fontified t) 474 475 (face tree-sitter-hl-face:keyword fontified t) 475 476 (fontified t) 476 477 (face tree-sitter-hl-face:property fontified t) 477 478 (face tree-sitter-hl-face:property fontified t) 478 481 (face tree-sitter-hl-face:property fontified t) 481 482 (face tree-sitter-hl-face:property fontified t) 482 483 (face (rainbow-delimiters-depth-5-face) fontified t) 483 484 (face tree-sitter-hl-face:number fontified t) 484 485 (face (rainbow-delimiters-depth-5-face) fontified t) 485 486 (fontified t) 486 487 (face (rainbow-delimiters-depth-4-face) fontified t) 487 488 (face (rainbow-delimiters-depth-3-face) fontified t) 488 489 (fontified t) 489 490 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 490 492 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 492 493 (face (rainbow-delimiters-depth-3-face) fontified t) 493 494 (face (rainbow-delimiters-depth-3-face) fontified t) 494 495 (fontified t) 495 501 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 501 502 (face (rainbow-delimiters-depth-3-face) fontified t) 502 503 (face (rainbow-delimiters-depth-3-face) fontified t) 503 504 (fontified t) 504 509 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 509 510 (face (rainbow-delimiters-depth-3-face) fontified t) 510 511 (face (rainbow-delimiters-depth-3-face) fontified t) 511 513 (fontified t) 513 514 (face tree-sitter-hl-face:number fontified t) 514 515 (face (rainbow-delimiters-depth-2-face) fontified t) 515 516 (face (rainbow-delimiters-depth-1-face) fontified t) 516 526 (fontified t) 526 531 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 531 532 (face (rainbow-delimiters-depth-1-face) fontified t) 532 545 (fontified t) 545 546 (face tree-sitter-hl-face:string fontified t) 546 555 (face tree-sitter-hl-face:string fontified t) 555 556 (face tree-sitter-hl-face:string fontified t) 556 573 (fontified t) 573 578 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 578 579 (face (rainbow-delimiters-depth-2-face) fontified t) 579 586 (fontified t) 586 587 (face tree-sitter-hl-face:number fontified t) 587 588 (face (rainbow-delimiters-depth-2-face) fontified t) 588 602 (fontified t) 602 603 (face tree-sitter-hl-face:string fontified t) 603 613 (face tree-sitter-hl-face:string fontified t) 613 614 (face tree-sitter-hl-face:string fontified t) 614 616 (fontified t) 616 627 (fontified t) 627 646 (fontified t) 646 647 (face (rainbow-delimiters-depth-1-face) fontified t) 647 648 (fontified t)) . 2638) (undo-tree-id2710 . -648) (undo-tree-id2711 . -648) 3286 (t 25976 16157 501189 685000)) nil (25976 16206 774348 837000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2637) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) 2638) nil (25976 16206 774344 948000) 0 nil])
([nil nil ((4029 . 4034)) nil (25976 16206 774340 391000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4677 . 4678) (nil fontified nil 4677 . 4678) (nil fontified nil 4676 . 4677) (nil fontified nil 4657 . 4676) (nil fontified nil 4646 . 4657) (nil fontified nil 4644 . 4646) (nil fontified nil 4643 . 4644) (nil fontified nil 4633 . 4643) (nil fontified nil 4632 . 4633) (nil fontified nil 4618 . 4632) (nil fontified nil 4617 . 4618) (nil fontified nil 4616 . 4617) (nil fontified nil 4609 . 4616) (nil fontified nil 4608 . 4609) (nil fontified nil 4603 . 4608) (nil fontified nil 4586 . 4603) (nil fontified nil 4585 . 4586) (nil fontified nil 4576 . 4585) (nil fontified nil 4575 . 4576) (nil fontified nil 4562 . 4575) (nil fontified nil 4561 . 4562) (nil fontified nil 4556 . 4561) (nil fontified nil 4546 . 4556) (nil fontified nil 4545 . 4546) (nil fontified nil 4544 . 4545) (nil fontified nil 4543 . 4544) (nil fontified nil 4541 . 4543) (nil fontified nil 4540 . 4541) (nil fontified nil 4539 . 4540) (nil fontified nil 4534 . 4539) (nil fontified nil 4533 . 4534) (nil fontified nil 4532 . 4533) (nil fontified nil 4531 . 4532) (nil fontified nil 4525 . 4531) (nil fontified nil 4524 . 4525) (nil fontified nil 4523 . 4524) (nil fontified nil 4522 . 4523) (nil fontified nil 4520 . 4522) (nil fontified nil 4519 . 4520) (nil fontified nil 4518 . 4519) (nil fontified nil 4517 . 4518) (nil fontified nil 4516 . 4517) (nil fontified nil 4515 . 4516) (nil fontified nil 4514 . 4515) (nil fontified nil 4513 . 4514) (nil fontified nil 4512 . 4513) (nil fontified nil 4511 . 4512) (nil fontified nil 4508 . 4511) (nil fontified nil 4507 . 4508) (nil fontified nil 4506 . 4507) (nil fontified nil 4505 . 4506) (nil fontified nil 4504 . 4505) (nil fontified nil 4503 . 4504) (nil fontified nil 4502 . 4503) (nil fontified nil 4501 . 4502) (nil fontified nil 4500 . 4501) (nil fontified nil 4499 . 4500) (nil fontified nil 4498 . 4499) (nil fontified nil 4495 . 4498) (nil fontified nil 4494 . 4495) (nil fontified nil 4490 . 4494) (nil fontified nil 4484 . 4490) (nil fontified nil 4483 . 4484) (nil fontified nil 4478 . 4483) (nil fontified nil 4475 . 4478) (nil fontified nil 4474 . 4475) (nil fontified nil 4468 . 4474) (nil fontified nil 4445 . 4468) (nil fontified nil 4444 . 4445) (nil fontified nil 4443 . 4444) (nil fontified nil 4442 . 4443) (nil fontified nil 4441 . 4442) (nil fontified nil 4436 . 4441) (nil fontified nil 4435 . 4436) (nil fontified nil 4431 . 4435) (nil fontified nil 4430 . 4431) (nil fontified nil 4428 . 4430) (nil fontified nil 4418 . 4428) (nil fontified nil 4417 . 4418) (nil fontified nil 4416 . 4417) (nil fontified nil 4415 . 4416) (nil fontified nil 4413 . 4415) (nil fontified nil 4412 . 4413) (nil fontified nil 4411 . 4412) (nil fontified nil 4410 . 4411) (nil fontified nil 4406 . 4410) (nil fontified nil 4405 . 4406) (nil fontified nil 4404 . 4405) (nil fontified nil 4403 . 4404) (nil fontified nil 4397 . 4403) (nil fontified nil 4396 . 4397) (nil fontified nil 4395 . 4396) (nil fontified nil 4394 . 4395) (nil fontified nil 4391 . 4394) (nil fontified nil 4390 . 4391) (nil fontified nil 4389 . 4390) (nil fontified nil 4388 . 4389) (nil fontified nil 4387 . 4388) (nil fontified nil 4386 . 4387) (nil fontified nil 4385 . 4386) (nil fontified nil 4379 . 4385) (nil fontified nil 4378 . 4379) (nil fontified nil 4374 . 4378) (nil fontified nil 4373 . 4374) (nil fontified nil 4372 . 4373) (nil fontified nil 4371 . 4372) (nil fontified nil 4370 . 4371) (nil fontified nil 4364 . 4370) (nil fontified nil 4363 . 4364) (nil fontified nil 4359 . 4363) (nil fontified nil 4358 . 4359) (nil fontified nil 4353 . 4358) (nil fontified nil 4352 . 4353) (nil fontified nil 4348 . 4352) (nil fontified nil 4342 . 4348) (nil fontified nil 4341 . 4342) (nil fontified nil 4336 . 4341) (nil fontified nil 4333 . 4336) (nil fontified nil 4332 . 4333) (nil fontified nil 4326 . 4332) (nil fontified nil 4303 . 4326) (nil fontified nil 4302 . 4303) (nil fontified nil 4301 . 4302) (nil fontified nil 4300 . 4301) (nil fontified nil 4299 . 4300) (nil fontified nil 4294 . 4299) (nil fontified nil 4293 . 4294) (nil fontified nil 4289 . 4293) (nil fontified nil 4288 . 4289) (nil fontified nil 4286 . 4288) (nil fontified nil 4276 . 4286) (nil fontified nil 4275 . 4276) (nil fontified nil 4274 . 4275) (nil fontified nil 4273 . 4274) (nil fontified nil 4271 . 4273) (nil fontified nil 4270 . 4271) (nil fontified nil 4269 . 4270) (nil fontified nil 4264 . 4269) (nil fontified nil 4263 . 4264) (nil fontified nil 4262 . 4263) (nil fontified nil 4261 . 4262) (nil fontified nil 4255 . 4261) (nil fontified nil 4254 . 4255) (nil fontified nil 4253 . 4254) (nil fontified nil 4252 . 4253) (nil fontified nil 4249 . 4252) (nil fontified nil 4248 . 4249) (nil fontified nil 4247 . 4248) (nil fontified nil 4246 . 4247) (nil fontified nil 4245 . 4246) (nil fontified nil 4244 . 4245) (nil fontified nil 4243 . 4244) (nil fontified nil 4237 . 4243) (nil fontified nil 4236 . 4237) (nil fontified nil 4232 . 4236) (nil fontified nil 4231 . 4232) (nil fontified nil 4230 . 4231) (nil fontified nil 4225 . 4230) (nil fontified nil 4224 . 4225) (nil fontified nil 4220 . 4224) (nil fontified nil 4214 . 4220) (nil fontified nil 4213 . 4214) (nil fontified nil 4208 . 4213) (nil fontified nil 4205 . 4208) (nil fontified nil 4204 . 4205) (nil fontified nil 4198 . 4204) (nil fontified nil 4179 . 4198) (nil fontified nil 4178 . 4179) (nil fontified nil 4177 . 4178) (nil fontified nil 4176 . 4177) (nil fontified nil 4175 . 4176) (nil fontified nil 4174 . 4175) (nil fontified nil 4166 . 4174) (nil fontified nil 4156 . 4166) (nil fontified nil 4155 . 4156) (nil fontified nil 4154 . 4155) (nil fontified nil 4152 . 4154) (nil fontified nil 4144 . 4152) (nil fontified nil 4143 . 4144) (nil fontified nil 4139 . 4143) (nil fontified nil 4138 . 4139) (nil fontified nil 4137 . 4138) (nil fontified nil 4136 . 4137) (nil fontified nil 4129 . 4136) (nil fontified nil 4128 . 4129) (nil fontified nil 4124 . 4128) (nil fontified nil 4123 . 4124) (nil fontified nil 4122 . 4123) (nil fontified nil 4121 . 4122) (nil fontified nil 4120 . 4121) (nil fontified nil 4112 . 4120) (nil fontified nil 4111 . 4112) (nil fontified nil 4107 . 4111) (nil fontified nil 4106 . 4107) (nil fontified nil 4105 . 4106) (nil fontified nil 4100 . 4105) (nil fontified nil 4099 . 4100) (nil fontified nil 4098 . 4099) (nil fontified nil 4093 . 4098) (nil fontified nil 4089 . 4093) (nil fontified nil 4088 . 4089) (nil fontified nil 4087 . 4088) (nil fontified nil 4082 . 4087) (nil fontified nil 4071 . 4082) (nil fontified nil 4070 . 4071) (nil fontified nil 4065 . 4070) (nil fontified nil 4063 . 4065) (nil fontified nil 4059 . 4063) (nil fontified nil 4057 . 4059) (nil fontified nil 4053 . 4057) (nil fontified nil 4052 . 4053) (nil fontified nil 4038 . 4052) (nil fontified nil 4037 . 4038) (nil fontified nil 4034 . 4037) (nil fontified nil 4030 . 4034) (4030 . 4678)) nil (25976 16206 774331 910000) 0 nil])
([nil nil ((#("        for obj in gc.get_objects():
            if torch.is_tensor(obj):
                del obj

        # Manually triggering the garbage collector afterwards
        gc.collect()
        torch.cuda.empty_cache()
" 0 8 (fontified t) 8 11 (face tree-sitter-hl-face:keyword fontified t) 11 12 (fontified t) 12 15 (face tree-sitter-hl-face:variable fontified t) 15 16 (fontified t) 16 18 (face tree-sitter-hl-face:operator fontified t) 18 22 (fontified t) 22 33 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 49 (fontified t) 49 51 (face tree-sitter-hl-face:keyword fontified t) 51 58 (fontified t) 58 67 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 67 68 (face (rainbow-delimiters-depth-1-face) fontified t) 68 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 90 (fontified t) 90 93 (face tree-sitter-hl-face:keyword fontified t) 93 107 (fontified t) 107 161 (face tree-sitter-hl-face:comment fontified t) 161 173 (fontified t) 173 180 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 180 181 (face (rainbow-delimiters-depth-1-face) fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 189 (fontified t) 189 197 (fontified t) 197 201 (face tree-sitter-hl-face:property fontified t) 201 202 (fontified t) 202 213 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 213 214 (face (rainbow-delimiters-depth-1-face) fontified t) 214 215 (face (rainbow-delimiters-depth-1-face) fontified t) 215 216 (fontified t)) . 3687) (undo-tree-id2706 . -216) 3903) nil (25976 16206 774286 388000) 0 nil])
([nil nil ((#("import gc
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 10 (fontified t)) . 11) (undo-tree-id2690 . -10) (undo-tree-id2691 . -10) (undo-tree-id2692 . -10) (undo-tree-id2693 . -10) (undo-tree-id2694 . -10) (undo-tree-id2695 . -10) (undo-tree-id2696 . -10) (undo-tree-id2697 . -10) (undo-tree-id2698 . -10) (undo-tree-id2699 . -10) (undo-tree-id2700 . -10) (undo-tree-id2701 . -10) (undo-tree-id2702 . -10) (undo-tree-id2703 . -10) (undo-tree-id2704 . -10) (undo-tree-id2705 . -10) 21) nil (25976 16206 774280 498000) 0 nil])
([nil nil ((#("        # self.theta = get_theta(self.ksi[1].cpu(), self.ksi[0].cpu(), GM=1, IF_NORM=1)
        # print(self.theta.shape)

        # result = result[:, self.theta.argsort()]
        # print('result', result.shape)
" 0 8 (fontified t) 8 87 (face tree-sitter-hl-face:comment fontified t) 87 96 (fontified t) 96 121 (face tree-sitter-hl-face:comment fontified t) 121 131 (fontified t) 131 173 (face tree-sitter-hl-face:comment fontified t) 173 182 (fontified t) 182 213 (face tree-sitter-hl-face:comment fontified t) 213 214 (fontified t)) . -3311) (undo-tree-id2729 . -214) 3525 (t 25976 16207 29191 261000)) nil (25976 16232 710682 147000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3310) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) 3311) nil (25976 16232 710678 838000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3460) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) 3461) nil (25976 16232 710671 280000) 0 nil])
([nil nil ((3461 . 3469) (t 25976 16232 961192 87000)) nil (25976 16235 928937 689000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3498) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) 3499) nil (25976 16235 928932 304000) 0 nil])
([nil nil ((3571 . 3579) (t 25976 16236 173192 189000)) nil (25976 16246 315496 730000) 0 nil])
([nil nil ((3579 . 3582)) nil (25976 16246 315495 93000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3580) (undo-tree-id2768 . -1) (#("e" 0 1 (fontified t)) . -3581) (undo-tree-id2769 . -1) 3582) nil (25976 16246 315493 608000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3579) (undo-tree-id2767 . -1) 3580) nil (25976 16246 315489 28000) 0 nil])
([nil nil ((3481 . 3482) (3480 . 3482) (#("(" 0 1 (fontified nil)) . -3480) (3469 . 3481)) nil (25976 16246 315486 260000) 0 nil])
([nil nil ((#("à" 0 1 (fontified t)) . -3481) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) 3482) nil (25976 16246 315482 755000) 0 nil])
([nil nil ((3461 . 3462)) nil (25976 16246 315462 994000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3310) (undo-tree-id2770 . -8) (undo-tree-id2771 . -8) (undo-tree-id2772 . -8) (undo-tree-id2773 . -8) (undo-tree-id2774 . -8) (undo-tree-id2775 . -8) (undo-tree-id2776 . -8) (undo-tree-id2777 . -8) (undo-tree-id2778 . -8) (undo-tree-id2779 . -8) (undo-tree-id2780 . -8) (undo-tree-id2781 . -8) (undo-tree-id2782 . -8) (undo-tree-id2783 . -8) (undo-tree-id2784 . -8) 3318 (t 25976 16246 549192 519000)) nil (25976 16249 626670 581000) 0 nil])
([nil nil ((224 . 233) (t 25976 16249 853192 624000)) nil (25976 16256 961407 942000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -231) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (#("c" 0 1 (fontified t)) . -232) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) 233) nil (25976 16256 961403 479000) 0 nil])
([nil nil ((231 . 237)) nil (25976 16256 961340 994000) 0 nil])
([nil nil ((2639 . 2640) (t 25976 16257 193192 858000)) nil (25976 16279 289269 487000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2639) (undo-tree-id2848 . -1) 2640) nil (25976 16279 289268 111000) 0 nil])
([nil nil ((2639 . 2645)) nil (25976 16279 289265 756000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -2644) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) 2645) nil (25976 16279 289262 761000) 0 nil])
([nil nil ((2644 . 2650)) nil (25976 16279 289228 238000) 0 nil])
([nil nil ((2651 . 2655) (t 25976 16279 517193 568000)) nil (25976 16332 887757 94000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3291) (undo-tree-id2912 . -4) 3295 (t 25976 16333 105195 273000)) nil (25976 16343 421024 944000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3287) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) 3291) nil (25976 16343 421021 972000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3283) (undo-tree-id2882 . -4) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) 3287) nil (25976 16343 421008 249000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3279) (undo-tree-id2849 . -4) (undo-tree-id2850 . -4) (undo-tree-id2851 . -4) (undo-tree-id2852 . -4) (undo-tree-id2853 . -4) (undo-tree-id2854 . -4) (undo-tree-id2855 . -4) (undo-tree-id2856 . -4) (undo-tree-id2857 . -4) (undo-tree-id2858 . -4) (undo-tree-id2859 . -4) (undo-tree-id2860 . -4) (undo-tree-id2861 . -4) (undo-tree-id2862 . -4) (undo-tree-id2863 . -4) (undo-tree-id2864 . -4) (undo-tree-id2865 . -4) (undo-tree-id2866 . -4) (undo-tree-id2867 . -4) (undo-tree-id2868 . -4) (undo-tree-id2869 . -4) (undo-tree-id2870 . -4) (undo-tree-id2871 . -4) (undo-tree-id2872 . -4) (undo-tree-id2873 . -4) (undo-tree-id2874 . -4) (undo-tree-id2875 . -4) (undo-tree-id2876 . -4) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) 3283) nil (25976 16343 420981 572000) 0 nil])
([nil nil ((2787 . 2796) (t 25976 16343 641195 609000)) nil (25976 16352 859409 588000) 0 nil])
([nil nil ((#("        result = []
" 0 8 (fontified t) 8 14 (face tree-sitter-hl-face:variable fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t)) . 2768) (undo-tree-id2919 . -20) (undo-tree-id2920 . -8) (undo-tree-id2921 . -19) (undo-tree-id2922 . -8) (undo-tree-id2923 . -19) (undo-tree-id2924 . -19) (undo-tree-id2925 . -19) (undo-tree-id2926 . -19) (undo-tree-id2927 . -19) (undo-tree-id2928 . -19) (undo-tree-id2929 . -19) (undo-tree-id2930 . -19) (undo-tree-id2931 . 1) (undo-tree-id2932 . -20) (undo-tree-id2933 . -8) (undo-tree-id2934 . -8) (undo-tree-id2935 . -19) (undo-tree-id2936 . -20) (undo-tree-id2937 . -20) (undo-tree-id2938 . -20) (undo-tree-id2939 . -20) (undo-tree-id2940 . -20) (undo-tree-id2941 . -20) (undo-tree-id2942 . -20) (undo-tree-id2943 . -20) (undo-tree-id2944 . -20) (undo-tree-id2945 . -20) (undo-tree-id2946 . -20) (undo-tree-id2947 . -20) (undo-tree-id2948 . -20) (undo-tree-id2949 . -20) (undo-tree-id2950 . -20) (undo-tree-id2951 . -20) (undo-tree-id2952 . -20) (undo-tree-id2953 . -20)) nil (25976 16352 859406 783000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2734 . 2735) (nil fontified nil 2734 . 2735) (nil fontified nil 2733 . 2734) (nil fontified nil 2732 . 2733) (nil fontified nil 2731 . 2732) (nil fontified nil 2730 . 2731) (nil fontified nil 2729 . 2730) (nil fontified nil 2723 . 2729) (nil fontified nil 2715 . 2723) (2715 . 2735)) nil (25976 16352 859371 502000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2778) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) 2779) nil (25976 16352 859365 703000) 0 nil])
([nil nil ((#("ates" 0 4 (face tree-sitter-hl-face:variable fontified t)) . 1623) (t 25976 16353 101195 910000)) nil (25976 16378 418765 608000) 0 nil])
([nil nil ((1623 . 1625)) nil (25976 16378 418764 426000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1623) (undo-tree-id2955 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1624) (undo-tree-id2956 . -1) 1625) nil (25976 16378 418763 85000) 0 nil])
([nil nil ((1623 . 1626)) nil (25976 16378 418758 744000) 0 nil])
([nil nil ((#("è" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -1625) (undo-tree-id2954 . -1) 1626) nil (25976 16378 418756 565000) 0 nil])
([nil nil ((1625 . 1631)) nil (25976 16378 418741 684000) 0 nil])
([nil nil ((1764 . 1768) (t 25976 16378 645196 723000)) nil (25976 16380 652973 445000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1764) (undo-tree-id2957 . -4) (undo-tree-id2958 . -4) (undo-tree-id2959 . -4) (undo-tree-id2960 . -4) (undo-tree-id2961 . -4) (undo-tree-id2962 . -4) (undo-tree-id2963 . -4) (undo-tree-id2964 . -4) (undo-tree-id2965 . -4) (undo-tree-id2966 . -4) (undo-tree-id2967 . -4) (undo-tree-id2968 . -4) (undo-tree-id2969 . -4) (undo-tree-id2970 . -4) 1768) nil (25976 16380 652968 674000) 0 nil])
([nil nil ((apply -2 330 367 undo--wrap-and-run-primitive-undo 330 367 ((330 . 332)))) nil (25976 16458 689363 653000) 0 nil])
([nil nil ((889 . 897) (t 25976 16458 917199 277000)) nil (25976 16462 515142 97000) 0 nil])
([nil nil ((1800 . 1804) (t 25976 16462 737199 399000)) nil (25976 16466 883248 545000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1800) (undo-tree-id2971 . -4) (undo-tree-id2972 . -4) (undo-tree-id2973 . -4) (undo-tree-id2974 . -4) (undo-tree-id2975 . -4) (undo-tree-id2976 . -4) (undo-tree-id2977 . -4) (undo-tree-id2978 . -4) (undo-tree-id2979 . -4) (undo-tree-id2980 . -4) (undo-tree-id2981 . -4) (undo-tree-id2982 . -4) (undo-tree-id2983 . -4) (undo-tree-id2984 . -4) 1804) nil (25976 16466 883245 743000) 0 nil])
([nil nil ((1800 . 1804)) nil (25976 16466 883217 0) 0 nil])
([nil nil ((2376 . 2380) (t 25976 16467 121199 538000)) nil (25976 16475 519468 799000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2376) (undo-tree-id2985 . -4) (undo-tree-id2986 . -4) (undo-tree-id2987 . -4) (undo-tree-id2988 . -4) (undo-tree-id2989 . -4) (undo-tree-id2990 . -4) (undo-tree-id2991 . -4) (undo-tree-id2992 . -4) (undo-tree-id2993 . -4) (undo-tree-id2994 . -4) (undo-tree-id2995 . -4) (undo-tree-id2996 . -4) (undo-tree-id2997 . -4) (undo-tree-id2998 . -4) 2380) nil (25976 16475 519465 423000) 0 nil])
([nil nil ((2376 . 2380)) nil (25976 16475 519438 679000) 0 nil])
([nil nil ((#("        noise = self.ff_normal.sample((self.N_NEURON,))
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 30 (face tree-sitter-hl-face:property fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 43 (face tree-sitter-hl-face:keyword fontified t) 43 44 (fontified t) 44 52 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (fontified t rear-nonsticky t)) . 1911) (undo-tree-id3001 . -55) (undo-tree-id3002 . -55) (undo-tree-id3003 . -56) 1967 (t 25976 16475 741199 812000)) nil (25976 16516 655739 162000) 0 nil])
([nil nil ((nil fontified nil 1649 . 1650) (nil fontified nil 1648 . 1649) (nil fontified nil 1647 . 1648) (nil fontified nil 1646 . 1647) (nil fontified nil 1638 . 1646) (nil fontified nil 1637 . 1638) (nil fontified nil 1633 . 1637) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1625 . 1631) (nil fontified nil 1624 . 1625) (nil fontified nil 1615 . 1624) (nil fontified nil 1614 . 1615) (nil fontified nil 1610 . 1614) (nil fontified nil 1609 . 1610) (nil fontified nil 1608 . 1609) (nil fontified nil 1607 . 1608) (nil fontified nil 1602 . 1607) (nil fontified nil 1594 . 1602) (1594 . 1650)) nil (25976 16516 655733 390000) 0 nil])
([nil nil ((1594 . 1595)) nil (25976 16516 655728 164000) 0 nil])
([nil nil ((1822 . 1829)) nil (25976 16516 655727 99000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1827) (undo-tree-id2999 . -1) (#("s" 0 1 (fontified t)) . -1828) (undo-tree-id3000 . -1) 1829) nil (25976 16516 655725 627000) 0 nil])
([nil nil ((1827 . 1830)) nil (25976 16516 655711 754000) 0 nil])
([nil nil ((1753 . 1755) (#("(" 0 1 (fontified nil)) . -1753) (1753 . 1754)) nil (25976 16516 655710 467000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1754)) nil (25976 16516 655708 39000) 0 nil])
([nil nil ((1769 . 1778)) nil (25976 16585 982685 178000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1769) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1770) (undo-tree-id3217 . -1) (#(" " 0 1 (fontified t)) . -1771) (undo-tree-id3218 . -1) (#("n" 0 1 (fontified t)) . -1772) (undo-tree-id3219 . -1) (#("o" 0 1 (fontified t)) . -1773) (undo-tree-id3220 . -1) (#("i" 0 1 (fontified t)) . -1774) (undo-tree-id3221 . -1) (#("s" 0 1 (fontified t)) . -1775) (undo-tree-id3222 . -1) (#("e" 0 1 (fontified t)) . -1776) (undo-tree-id3223 . -1) 1777 (t 25976 16587 821203 379000)) nil (25976 16596 268728 759000) 0 nil] [nil nil ((#("        net_input = noise + rec_input
" 0 8 (fontified t) 8 9 (face tree-sitter-hl-face:variable fontified t) 9 10 (face tree-sitter-hl-face:variable fontified t) 10 17 (face tree-sitter-hl-face:variable fontified t) 17 18 (fontified t) 18 19 (face tree-sitter-hl-face:operator fontified t) 19 26 (fontified t) 26 27 (face tree-sitter-hl-face:operator fontified t) 27 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 1986) (undo-tree-id3004 . -38) 2024 (t 25976 16516 881201 122000)) ((1986 . 2024)) (25976 16585 521320 491000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1594) (undo-tree-id3225 . -1) (t 25976 16596 513203 656000)) nil (25976 16600 491605 413000) 0 nil])
([nil nil ((1850 . 1854) (1841 . 1842)) ((#("
" 0 1 (fontified t)) . 1841) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (#("    " 0 4 (fontified t)) . 1850)) (25976 16584 724230 238000) 0 nil])
([nil nil ((#("        noise = self.ff_normal.sample((self.N_NEURON,))
" 0 8 (fontified t) 8 13 (face tree-sitter-hl-face:variable fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 30 (face tree-sitter-hl-face:property fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 43 (face tree-sitter-hl-face:keyword fontified t) 43 44 (fontified t) 44 52 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 52 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (fontified t rear-nonsticky t)) . 1594) (undo-tree-id3224 . -56) 1650) nil (25976 16600 491599 125000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1879 . 1880) (nil fontified nil 1879 . 1880) (nil fontified nil 1878 . 1879) (nil fontified nil 1869 . 1878) (nil fontified nil 1868 . 1869) (nil fontified nil 1861 . 1868) (nil fontified nil 1860 . 1861) (nil fontified nil 1859 . 1860) (nil fontified nil 1852 . 1859) (nil fontified nil 1851 . 1852) (nil fontified nil 1850 . 1851) (nil fontified nil 1842 . 1850) (1842 . 1880)) ((#("        net_input = noise + rec_input
" 0 8 (fontified nil) 8 9 (face tree-sitter-hl-face:variable fontified nil) 9 10 (face tree-sitter-hl-face:variable fontified nil) 10 17 (face tree-sitter-hl-face:variable fontified nil) 17 18 (fontified nil) 18 19 (face tree-sitter-hl-face:operator fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (face tree-sitter-hl-face:operator fontified nil) 27 28 (fontified nil) 28 36 (fontified nil) 36 37 (fontified nil) 37 38 (rear-nonsticky nil fontified nil)) . 1842) (undo-tree-id3168 . -8) (undo-tree-id3169 . -8) (undo-tree-id3170 . -8) (undo-tree-id3171 . -8) (undo-tree-id3172 . -8) (undo-tree-id3173 . -8) (undo-tree-id3174 . -8) (undo-tree-id3175 . -8) (undo-tree-id3176 . -8) (undo-tree-id3177 . -8) (nil rear-nonsticky t 1879 . 1880)) (25976 16584 357938 238000) 0 nil])
([nil nil ((nil fontified nil 1976 . 1977) (nil fontified nil 1975 . 1976) (nil fontified nil 1974 . 1975) (nil fontified nil 1973 . 1974) (nil fontified nil 1965 . 1973) (nil fontified nil 1964 . 1965) (nil fontified nil 1960 . 1964) (nil fontified nil 1959 . 1960) (nil fontified nil 1958 . 1959) (nil fontified nil 1952 . 1958) (nil fontified nil 1951 . 1952) (nil fontified nil 1942 . 1951) (nil fontified nil 1941 . 1942) (nil fontified nil 1937 . 1941) (nil fontified nil 1936 . 1937) (nil fontified nil 1935 . 1936) (nil fontified nil 1934 . 1935) (nil fontified nil 1929 . 1934) (nil fontified nil 1921 . 1929) (1921 . 1977) (t 25976 16600 713203 789000)) nil (25976 16602 708083 207000) 0 nil])
([nil nil ((1850 . 1854) 1842 (t 25976 16528 205201 482000)) ((#("    " 0 4 (fontified t)) . 1850) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) (undo-tree-id3161 . -4) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -4) (undo-tree-id3165 . -4) (undo-tree-id3166 . -4) (undo-tree-id3167 . -4)) (25976 16583 900793 798000) 0 nil])
([nil nil ((8808 . 8810) (t 25976 16602 937203 860000)) nil (25976 16670 314581 248000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1850) (undo-tree-id3006 . -4) (undo-tree-id3008 . -4) (undo-tree-id3010 . -4) (undo-tree-id3012 . -4) (undo-tree-id3014 . -4) (undo-tree-id3016 . -4) (undo-tree-id3018 . -4) 1854) ((1850 . 1854)) (25976 16582 733308 695000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8808) (undo-tree-id3272 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8809) (undo-tree-id3273 . -1) 8810) nil (25976 16670 314579 808000) 0 nil])
([nil nil ((1908 . 1912) (t 25976 16531 49201 573000)) ((#("nerè" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1908) (undo-tree-id3126 . -2) (undo-tree-id3127 . -2) (undo-tree-id3128 . -2) (undo-tree-id3129 . -2) (undo-tree-id3130 . -2) (undo-tree-id3131 . -2) (undo-tree-id3132 . -2) (undo-tree-id3133 . -2) (undo-tree-id3134 . -2) (undo-tree-id3135 . -2) (undo-tree-id3136 . -2) (undo-tree-id3137 . -2) (undo-tree-id3138 . -2) (undo-tree-id3139 . -2) (undo-tree-id3140 . -2) (undo-tree-id3141 . -2) (undo-tree-id3142 . -2) (undo-tree-id3143 . -2) (undo-tree-id3144 . -2) (undo-tree-id3145 . -4) (undo-tree-id3146 . -4) (undo-tree-id3147 . -4) (undo-tree-id3148 . -4) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4)) (25976 16582 341148 69000) 0 nil])
([nil nil ((#("        self.N_STEPS = int(self.DURATION / self.DT)
" 0 8 (fontified t) 8 12 (face tree-sitter-hl-face:keyword fontified t) 12 13 (fontified t) 13 20 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t) 22 23 (fontified t) 23 26 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 39 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 39 40 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 40 41 (fontified t) 41 42 (face tree-sitter-hl-face:operator fontified t) 42 43 (fontified t) 43 47 (face tree-sitter-hl-face:keyword fontified t) 47 48 (fontified t) 48 50 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (fontified t)) . 8768) (undo-tree-id3269 . -13) (undo-tree-id3270 . -13) (undo-tree-id3271 . -52) 8820) nil (25976 16670 314575 163000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1910) (undo-tree-id3019 . -1) (#("è" 0 1 (fontified t)) . -1911) (undo-tree-id3020 . -1) 1912) ((1910 . 1912)) (25976 16581 902797 371000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8872 . 8873) (nil fontified nil 8872 . 8873) (nil fontified nil 8871 . 8872) (nil fontified nil 8869 . 8871) (nil fontified nil 8868 . 8869) (nil fontified nil 8864 . 8868) (nil fontified nil 8863 . 8864) (nil fontified nil 8862 . 8863) (nil fontified nil 8861 . 8862) (nil fontified nil 8860 . 8861) (nil fontified nil 8853 . 8860) (nil fontified nil 8852 . 8853) (nil fontified nil 8848 . 8852) (nil fontified nil 8847 . 8848) (nil fontified nil 8844 . 8847) (nil fontified nil 8843 . 8844) (nil fontified nil 8842 . 8843) (nil fontified nil 8841 . 8842) (nil fontified nil 8834 . 8841) (nil fontified nil 8833 . 8834) (nil fontified nil 8829 . 8833) (nil fontified nil 8821 . 8829) (8821 . 8873)) nil (25976 16670 314570 455000) 0 nil])
([nil nil ((1910 . 1912)) ((#("t_" 0 2 (fontified t)) . 1910) (undo-tree-id3115 . -2) (undo-tree-id3116 . -2) (undo-tree-id3117 . -2) (undo-tree-id3118 . -2) (undo-tree-id3119 . -2) (undo-tree-id3120 . -2) (undo-tree-id3121 . -2) (undo-tree-id3122 . -2) (undo-tree-id3123 . -2) (undo-tree-id3124 . -2) (undo-tree-id3125 . -2)) (25976 16581 144910 831000) 0 nil])
([nil nil ((8872 . 8876)) nil (25976 16670 314565 199000) 0 nil])
([nil nil ((1912 . 1919)) ((#("input, " 0 7 (fontified t)) . 1912)) (25976 16580 87328 687000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8875) (undo-tree-id3268 . -1) 8876) nil (25976 16670 314564 238000) 0 nil])
([nil nil ((#("    def update_net_input(self, rec_input):
        '''Updating the net input into the neurons'''
        
        
        return net_input
" 0 4 (fontified t) 4 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 24 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 29 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 29 31 (fontified t) 31 40 (face tree-sitter-hl-face:variable.parameter fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 51 (fontified t) 51 52 (face tree-sitter-hl-face:string fontified t) 52 53 (face tree-sitter-hl-face:string fontified t) 53 54 (syntax-table (15) face tree-sitter-hl-face:string fontified t) 54 62 (face tree-sitter-hl-face:string fontified t) 62 75 (face tree-sitter-hl-face:string fontified t) 75 93 (face tree-sitter-hl-face:string fontified t) 93 94 (syntax-table (15) face tree-sitter-hl-face:string fontified t) 94 95 (face tree-sitter-hl-face:string fontified t) 95 96 (face tree-sitter-hl-face:string fontified t) 96 97 (fontified t) 97 105 (fontified t) 105 106 (fontified t) 106 111 (fontified t) 111 115 (fontified t) 115 123 (fontified t) 123 129 (face tree-sitter-hl-face:keyword fontified t) 129 139 (fontified t) 139 140 (fontified t)) . -1934) (undo-tree-id3055 . -42) (undo-tree-id3056 . -42) (undo-tree-id3057 . -42) (undo-tree-id3058 . -42) (undo-tree-id3059 . -106) (undo-tree-id3060 . -42) (undo-tree-id3061 . -106) (undo-tree-id3062 . -106) (undo-tree-id3063 . -106) (undo-tree-id3064 . -106) (undo-tree-id3065 . -106) (undo-tree-id3066 . -106) (undo-tree-id3067 . -106) (undo-tree-id3068 . -106) (undo-tree-id3069 . -106) (undo-tree-id3070 . -115) (undo-tree-id3071 . -106) (undo-tree-id3072 . -106) (undo-tree-id3073 . -140) 2074 (t 25976 16537 409201 775000)) ((1934 . 2074)) (25976 16579 509831 476000) 0 nil])
([nil nil ((8875 . 8886)) nil (25976 16670 314562 164000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1933) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) 1934) ((1933 . 1934)) (25976 16579 39896 560000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8885) (undo-tree-id3267 . -1) 8886) nil (25976 16670 314561 47000) 0 nil])
([nil nil ((2377 . 2380)) ((#("neè" 0 2 (face tree-sitter-hl-face:variable fontified t) 2 3 (face tree-sitter-hl-face:variable fontified t)) . 2377) (undo-tree-id3094 . -2) (undo-tree-id3095 . -2) (undo-tree-id3096 . -2) (undo-tree-id3097 . -2) (undo-tree-id3098 . -2) (undo-tree-id3099 . -2) (undo-tree-id3100 . -2) (undo-tree-id3101 . -2) (undo-tree-id3102 . -2) (undo-tree-id3103 . -3) (undo-tree-id3104 . -3) (undo-tree-id3105 . -3) (undo-tree-id3106 . -3) (undo-tree-id3107 . -3) (undo-tree-id3108 . -3) (undo-tree-id3109 . -3) (undo-tree-id3110 . -3) (undo-tree-id3111 . -3) (undo-tree-id3112 . -3) (undo-tree-id3113 . -3) (undo-tree-id3114 . -3)) (25976 16578 618054 355000) 0 nil])
([nil nil ((8885 . 8887)) nil (25976 16670 314558 680000) 0 nil])
([nil nil ((#("è" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2379) (undo-tree-id3034 . -1) 2380) ((2379 . 2380)) (25976 16578 484376 786000) 0 nil])
([nil nil ((8885 . 8886)) nil (25976 16670 314557 812000) 0 nil])
([nil nil ((2379 . 2388)) ((#("t_input, " 0 7 (face tree-sitter-hl-face:variable fontified t) 7 9 (fontified t)) . 2379)) (25976 16578 342251 620000) 0 nil])
([nil nil ((8941 . 8944)) nil (25976 16670 314556 903000) 0 nil])
([nil nil ((#("        net_input = self.update_net_input(rec_input)
" 0 8 (fontified t) 8 17 (face tree-sitter-hl-face:variable fontified t) 17 18 (fontified t) 18 19 (face tree-sitter-hl-face:operator fontified t) 19 20 (fontified t) 20 24 (face tree-sitter-hl-face:keyword fontified t) 24 25 (fontified t) 25 41 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (fontified t)) . -2440) (undo-tree-id3022 . -53) (undo-tree-id3024 . -53) (undo-tree-id3026 . -53) (undo-tree-id3028 . -53) (undo-tree-id3029 . -53) (undo-tree-id3031 . -53) (undo-tree-id3033 . -53) 2493) ((2440 . 2493)) (25976 16578 208053 142000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8941) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8942) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (#(" " 0 1 (fontified t)) . -8943) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) 8944) nil (25976 16670 314553 554000) 0 nil])
([nil nil ((2492 . 2500) (t 25976 16548 301202 122000)) ((#("        " 0 8 (fontified t)) . 2492)) (25976 16578 57813 316000) 0 nil])
([nil nil ((8942 . 8943)) nil (25976 16670 314500 186000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1869) (undo-tree-id3093 . -1) 1870 (t 25976 16553 197202 277000)) ((1869 . 1870)) (25976 16577 935481 681000) 0 nil])
([nil nil ((8997 . 8998)) nil (25976 16670 314499 343000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1862) (undo-tree-id3075 . -1) (undo-tree-id3077 . -1) (undo-tree-id3079 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3084 . -1) (undo-tree-id3086 . -1) (#("o" 0 1 (fontified t)) . -1863) (undo-tree-id3087 . -1) (#("i" 0 1 (fontified t)) . -1864) (undo-tree-id3088 . -1) (#("s" 0 1 (fontified t)) . -1865) (undo-tree-id3089 . -1) (#("e" 0 1 (fontified t)) . -1866) (undo-tree-id3090 . -1) (#(" " 0 1 (fontified t)) . -1867) (undo-tree-id3091 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1868) (undo-tree-id3092 . -1) 1869) ((1862 . 1869) (t 25976 16560 209202 500000)) (25976 16559 987275 330000) 0 nil])
([nil nil ((8998 . 9000)) nil (25976 16670 315506 971000) 0 nil])
nil
([nil nil ((9000 . 9013)) nil (25976 16680 72087 671000) 0 nil] [nil nil ((nil rear-nonsticky nil 9051 . 9052) (nil fontified nil 9051 . 9052) (nil fontified nil 9050 . 9051) (nil fontified nil 9048 . 9050) (nil fontified nil 9047 . 9048) (nil fontified nil 9043 . 9047) (nil fontified nil 9042 . 9043) (nil fontified nil 9041 . 9042) (nil fontified nil 9040 . 9041) (nil fontified nil 9039 . 9040) (nil fontified nil 9032 . 9039) (nil fontified nil 9031 . 9032) (nil fontified nil 9027 . 9031) (nil fontified nil 9026 . 9027) (nil fontified nil 9023 . 9026) (nil fontified nil 9022 . 9023) (nil fontified nil 9021 . 9022) (nil fontified nil 9020 . 9021) (nil fontified nil 9013 . 9020) (nil fontified nil 9012 . 9013) (nil fontified nil 9008 . 9012) (nil fontified nil 9000 . 9008) (9000 . 9052)) ((#("        self.N_STEPS = int(self.DURATION / self.DT)
" 0 8 (fontified nil) 8 12 (face tree-sitter-hl-face:keyword fontified nil) 12 13 (fontified nil) 13 20 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 20 21 (fontified nil) 21 22 (face tree-sitter-hl-face:operator fontified nil) 22 23 (fontified nil) 23 26 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 26 27 (face (rainbow-delimiters-depth-1-face) fontified nil) 27 31 (face tree-sitter-hl-face:keyword fontified nil) 31 32 (fontified nil) 32 39 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 39 40 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 40 41 (fontified nil) 41 42 (face tree-sitter-hl-face:operator fontified nil) 42 43 (fontified nil) 43 47 (face tree-sitter-hl-face:keyword fontified nil) 47 48 (fontified nil) 48 50 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 52 (rear-nonsticky nil fontified nil)) . 9000) (undo-tree-id3274 . -52) (undo-tree-id3275 . -52) (undo-tree-id3276 . -52) (undo-tree-id3277 . -52) (nil rear-nonsticky t 9051 . 9052)) (25976 16670 314492 402000) 0 nil])
([nil nil ((9070 . 9083)) nil (25976 16680 72086 632000) 0 nil])
nil
([nil nil ((9083 . 9084)) nil (25976 16680 72085 458000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -9083) (undo-tree-id3278 . -1) 9084) nil (25976 16680 72083 251000) 0 nil])
([nil nil ((9083 . 9086)) nil (25976 16680 72069 262000) 0 nil])
([nil nil ((8942 . 8950) (t 25976 16680 301206 322000)) nil (25976 16683 62531 228000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3263) (undo-tree-id3279 . -4) (undo-tree-id3280 . -4) (undo-tree-id3281 . -4) (undo-tree-id3282 . -4) (undo-tree-id3283 . -4) (undo-tree-id3284 . -4) (undo-tree-id3285 . -4) (undo-tree-id3286 . -4) (undo-tree-id3287 . -4) (undo-tree-id3288 . -4) (undo-tree-id3289 . -4) (undo-tree-id3290 . -4) (undo-tree-id3291 . -4) (undo-tree-id3292 . -4) (undo-tree-id3293 . -4) (undo-tree-id3294 . -4) 3267 (t 25976 16683 301206 418000)) nil (25976 16802 861781 995000) 0 nil])
([nil nil ((7345 . 7361) (#("            " 0 12 (fontified t)) . 7345) (t 25976 16803 93210 230000)) nil (25976 28198 104395 473000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7357) (undo-tree-id3295 . -4) (undo-tree-id3296 . -4) (undo-tree-id3297 . -4) (undo-tree-id3298 . -4) (undo-tree-id3299 . -4) (undo-tree-id3300 . -4) (undo-tree-id3301 . -4) (undo-tree-id3302 . -4) (undo-tree-id3303 . -4) (undo-tree-id3304 . -4) (undo-tree-id3305 . -4) (undo-tree-id3306 . -4) (undo-tree-id3307 . -4) (undo-tree-id3308 . -4) (undo-tree-id3309 . -4) (undo-tree-id3310 . -4) (undo-tree-id3311 . -4) (undo-tree-id3312 . -4) (undo-tree-id3313 . -4) (undo-tree-id3314 . -4) (undo-tree-id3315 . -4) (undo-tree-id3316 . -4) 7361) nil (25976 28198 104388 48000) 0 nil])
([nil nil ((687 . 695) (t 25976 28198 481572 856000)) nil (25976 28407 858348 561000) 0 nil])
([nil nil ((751 . 759) (t 25976 28408 225579 530000)) nil (25976 28462 779560 166000) 0 nil])
([nil nil ((688 . 696) (#("        " 0 8 (fontified nil)) . 687) (undo-tree-id3322 . -8) (695 . 696)) nil (25976 28462 779558 228000) 0 nil])
([nil nil ((696 . 703)) nil (25976 28462 779554 720000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -702) (undo-tree-id3321 . -1) 703) nil (25976 28462 779552 878000) 0 nil])
([nil nil ((702 . 711)) nil (25976 28462 779549 160000) 0 nil])
([nil nil ((711 . 724)) nil (25976 28462 779547 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 772 . 773) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 769 . 771) (nil fontified nil 768 . 769) (nil fontified nil 764 . 768) (nil fontified nil 762 . 764) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 757 . 759) (nil fontified nil 756 . 757) (nil fontified nil 752 . 756) (nil fontified nil 751 . 752) (nil fontified nil 742 . 751) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 736 . 739) (nil fontified nil 724 . 736) (724 . 773)) nil (25976 28462 779545 399000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -724) 712) nil (25976 28462 779537 647000) 0 nil])
([nil nil ((759 . 775)) nil (25976 28462 779536 190000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -774) (undo-tree-id3320 . -1) 775) nil (25976 28462 779534 550000) 0 nil])
([nil nil ((774 . 778)) nil (25976 28462 779531 308000) 0 nil])
([nil nil ((778 . 779)) nil (25976 28462 779529 889000) 0 nil])
([nil nil ((#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -778) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) 779) nil (25976 28462 779526 863000) 0 nil])
([nil nil ((778 . 784)) nil (25976 28462 779505 735000) 0 nil])
([nil nil ((786 . 798) (t 25976 28463 145581 278000)) nil (25976 28464 440996 419000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -794) (undo-tree-id3323 . -4) (undo-tree-id3324 . -4) (undo-tree-id3325 . -4) (undo-tree-id3326 . -4) (undo-tree-id3327 . -4) (undo-tree-id3328 . -4) (undo-tree-id3329 . -4) (undo-tree-id3330 . -4) (undo-tree-id3331 . -4) (undo-tree-id3332 . -4) (undo-tree-id3333 . -4) (undo-tree-id3334 . -4) (undo-tree-id3335 . -4) (undo-tree-id3336 . -4) 798) nil (25976 28464 440989 312000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1601) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) 1602 (t 25976 28464 801581 331000)) nil (25976 28542 761067 154000) 0 nil])
([nil nil ((1891 . 1903) (#("        " 0 8 (fontified nil)) . 1890) (undo-tree-id3354 . -8) (undo-tree-id3355 . -8) (undo-tree-id3356 . -8) (undo-tree-id3357 . -8) (undo-tree-id3358 . -8) (undo-tree-id3359 . -8) (1898 . 1899) (t 25976 28543 121583 823000)) nil (25976 28582 694211 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2097 . 2098) (nil fontified nil 2097 . 2098) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2090 . 2092) (nil fontified nil 2089 . 2090) (nil fontified nil 2085 . 2089) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2078 . 2083) (nil fontified nil 2077 . 2078) (nil fontified nil 2073 . 2077) (nil fontified nil 2072 . 2073) (nil fontified nil 2061 . 2072) (nil fontified nil 2040 . 2061) (nil fontified nil 1999 . 2040) (nil fontified nil 1982 . 1999) (nil fontified nil 1981 . 1982) (nil fontified nil 1980 . 1981) (nil fontified nil 1979 . 1980) (nil fontified nil 1978 . 1979) (nil fontified nil 1977 . 1978) (nil fontified nil 1975 . 1977) (nil fontified nil 1974 . 1975) (nil fontified nil 1970 . 1974) (nil fontified nil 1967 . 1970) (nil fontified nil 1966 . 1967) (nil fontified nil 1965 . 1966) (nil fontified nil 1959 . 1965) (nil fontified nil 1958 . 1959) (nil fontified nil 1954 . 1958) (nil fontified nil 1953 . 1954) (nil fontified nil 1952 . 1953) (nil fontified nil 1951 . 1952) (nil fontified nil 1942 . 1951) (nil fontified nil 1938 . 1942) (nil fontified nil 1937 . 1938) (nil fontified nil 1936 . 1937) (nil fontified nil 1935 . 1936) (nil fontified nil 1934 . 1935) (nil fontified nil 1933 . 1934) (nil fontified nil 1932 . 1933) (nil fontified nil 1931 . 1932) (nil fontified nil 1930 . 1931) (nil fontified nil 1928 . 1930) (nil fontified nil 1927 . 1928) (nil fontified nil 1923 . 1927) (nil fontified nil 1920 . 1923) (nil fontified nil 1919 . 1920) (nil fontified nil 1918 . 1919) (nil fontified nil 1912 . 1918) (nil fontified nil 1911 . 1912) (nil fontified nil 1907 . 1911) (nil fontified nil 1891 . 1907) (1891 . 2098)) nil (25976 28582 694195 982000) 0 nil])
([nil nil ((1890 . 1902)) nil (25976 28582 694176 430000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1915)) nil (25976 28582 694175 119000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2003) 1991) nil (25976 28582 694173 576000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1911) (undo-tree-id3353 . -4) 1915) nil (25976 28582 694171 476000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1995)) nil (25976 28582 694166 394000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2045) (undo-tree-id3352 . -8)) nil (25976 28582 694160 973000) 0 nil])
([nil nil ((#("        # stp.hansel_stp(self.rates[:self.Na[0]])
" 0 8 (fontified t) 8 49 (face tree-sitter-hl-face:comment fontified t) 49 50 (fontified t)) . -1987) (undo-tree-id3825 . -8) (undo-tree-id3826 . -8) (undo-tree-id3827 . -8) (undo-tree-id3828 . -50) (undo-tree-id3829 . -8) (undo-tree-id3830 . -50) 2037 (t 25976 28583 53585 94000)) nil (25976 28629 276700 144000) 0 nil])
([nil nil ((#("        self.inputs[0, :self.Na[0]] = (stp.A_u_x_stp * self.inputs[0, :self.Na[0]])
        stp.markram_stp(self.rates[:self.Na[0]])
" 0 8 (fontified t) 8 12 (face tree-sitter-hl-face:keyword fontified t) 12 13 (fontified t) 13 19 (face tree-sitter-hl-face:property fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face tree-sitter-hl-face:number fontified t) 21 24 (fontified t) 24 28 (face tree-sitter-hl-face:keyword fontified t) 28 29 (fontified t) 29 31 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t) 32 33 (face tree-sitter-hl-face:number fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (fontified t) 36 37 (face tree-sitter-hl-face:operator fontified t) 37 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 43 (fontified t) 43 52 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 52 53 (fontified t) 53 54 (face tree-sitter-hl-face:operator fontified t) 54 55 (fontified t) 55 59 (face tree-sitter-hl-face:keyword fontified t) 59 60 (fontified t) 60 66 (face tree-sitter-hl-face:property fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t) 67 68 (face tree-sitter-hl-face:number fontified t) 68 71 (fontified t) 71 75 (face tree-sitter-hl-face:keyword fontified t) 75 76 (fontified t) 76 78 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 78 79 (face (rainbow-delimiters-depth-3-face) fontified t) 79 80 (face tree-sitter-hl-face:number fontified t) 80 81 (face (rainbow-delimiters-depth-3-face) fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t) 83 84 (fontified t) 84 96 (fontified t) 96 107 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t) 108 112 (face tree-sitter-hl-face:keyword fontified t) 112 113 (fontified t) 113 118 (face tree-sitter-hl-face:property fontified t) 118 119 (face (rainbow-delimiters-depth-2-face) fontified t) 119 120 (fontified t) 120 124 (face tree-sitter-hl-face:keyword fontified t) 124 125 (fontified t) 125 127 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 127 128 (face (rainbow-delimiters-depth-3-face) fontified t) 128 129 (face tree-sitter-hl-face:number fontified t) 129 130 (face (rainbow-delimiters-depth-3-face) fontified t) 130 131 (face (rainbow-delimiters-depth-2-face) fontified t) 131 132 (face (rainbow-delimiters-depth-1-face) fontified t) 132 133 (rear-nonsticky t fontified t)) . 1903) (undo-tree-id3818 . -84) (undo-tree-id3819 . -84) (undo-tree-id3820 . -84) (undo-tree-id3821 . -84) (undo-tree-id3822 . -84) (undo-tree-id3823 . -84) (undo-tree-id3824 . -133) 2036) nil (25976 28629 276689 224000) 0 nil])
([nil nil ((1708 . 1717)) nil (25976 28629 276677 484000) 0 nil])
([nil nil ((1717 . 1728)) nil (25976 28629 276675 988000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1720) (undo-tree-id3810 . -1) (#("e" 0 1 (fontified t)) . -1721) (undo-tree-id3811 . -1) (#("l" 0 1 (fontified t)) . -1722) (undo-tree-id3812 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1723) (undo-tree-id3813 . -1) (#("." 0 1 (fontified t)) . -1724) (undo-tree-id3814 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1725) (undo-tree-id3815 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1726) (undo-tree-id3816 . -1) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1727) (undo-tree-id3817 . -1) 1728) nil (25976 28629 276672 959000) 0 nil])
([nil nil ((1720 . 1725)) nil (25976 28629 276649 730000) 0 nil])
([nil nil ((1725 . 1732)) nil (25976 28629 276648 402000) 0 nil])
([nil nil ((1732 . 1745)) nil (25976 28629 276646 908000) 0 nil])
([nil nil ((nil fontified nil 1865 . 1866) (nil fontified nil 1864 . 1865) (nil fontified nil 1863 . 1864) (nil fontified nil 1862 . 1863) (nil fontified nil 1861 . 1862) (nil fontified nil 1860 . 1861) (nil fontified nil 1858 . 1860) (nil fontified nil 1857 . 1858) (nil fontified nil 1853 . 1857) (nil fontified nil 1852 . 1853) (nil fontified nil 1851 . 1852) (nil fontified nil 1846 . 1851) (nil fontified nil 1845 . 1846) (nil fontified nil 1841 . 1845) (nil fontified nil 1840 . 1841) (nil fontified nil 1829 . 1840) (nil fontified nil 1817 . 1829) (nil fontified nil 1816 . 1817) (nil fontified nil 1815 . 1816) (nil fontified nil 1814 . 1815) (nil fontified nil 1813 . 1814) (nil fontified nil 1812 . 1813) (nil fontified nil 1811 . 1812) (nil fontified nil 1809 . 1811) (nil fontified nil 1808 . 1809) (nil fontified nil 1804 . 1808) (nil fontified nil 1801 . 1804) (nil fontified nil 1800 . 1801) (nil fontified nil 1799 . 1800) (nil fontified nil 1793 . 1799) (nil fontified nil 1792 . 1793) (nil fontified nil 1788 . 1792) (nil fontified nil 1787 . 1788) (nil fontified nil 1786 . 1787) (nil fontified nil 1785 . 1786) (nil fontified nil 1776 . 1785) (nil fontified nil 1772 . 1776) (nil fontified nil 1771 . 1772) (nil fontified nil 1770 . 1771) (nil fontified nil 1769 . 1770) (nil fontified nil 1768 . 1769) (nil fontified nil 1767 . 1768) (nil fontified nil 1766 . 1767) (nil fontified nil 1765 . 1766) (nil fontified nil 1764 . 1765) (nil fontified nil 1762 . 1764) (nil fontified nil 1761 . 1762) (nil fontified nil 1757 . 1761) (nil fontified nil 1754 . 1757) (nil fontified nil 1753 . 1754) (nil fontified nil 1752 . 1753) (nil fontified nil 1746 . 1752) (nil fontified nil 1745 . 1746) (nil fontified nil 1741 . 1745) (nil fontified nil 1733 . 1741) (1733 . 1866)) nil (25976 28629 276642 80000) 0 nil])
([nil nil ((1741 . 1745) 1733) nil (25976 28629 276623 74000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 1745)) nil (25976 28629 276620 876000) 0 nil])
([nil nil ((#(".inputs" 0 1 (fontified t) 1 7 (fontified t)) . 1745)) nil (25976 28648 184200 568000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1745) (#(" " 0 1 (fontified t)) . 1745) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 1745) (#(" " 0 1 (fontified t)) . 1745) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 1745) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . 1745) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1745) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1745) (#("a" 0 1 (fontified t)) . 1745) (#("N" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . 1745) (#("." 0 1 (fontified t)) . 1745) (#("f" 0 1 (fontified t)) . 1745) (#("l" 0 1 (fontified t)) . 1745) (#("e" 0 1 (fontified t)) . 1745) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 1745) (#(":" 0 1 (fontified t)) . 1745) (#(" " 0 1 (fontified t)) . 1745) (#("," 0 1 (fontified t)) . 1745) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1745) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1745)) nil (25976 28659 619901 75000) 0 nil] [nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1745) (#(" " 0 1 (fontified nil)) . 1745) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 1745) (#(" " 0 1 (fontified t)) . 1745) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 1745) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 1745) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1745) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1745) (#("a" 0 1 (fontified t)) . 1745) (#("N" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . 1745) (#("." 0 1 (fontified t)) . 1745) (#("f" 0 1 (fontified t)) . 1745) (#("l" 0 1 (fontified t)) . 1745) (#("e" 0 1 (fontified t)) . 1745) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 1745) (#(":" 0 1 (fontified t)) . 1745) (#(" " 0 1 (fontified t)) . 1745) (#("," 0 1 (fontified t)) . 1745) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1745) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1745)) ((1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746) (1745 . 1746)) (25976 28647 429802 181000) 0 nil])
([nil nil ((#("            stp.A_u_x_stp * self.inputs[0, :self.Na[0]])
" 0 12 (fontified t) 12 16 (fontified t) 16 25 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 25 26 (fontified t) 26 27 (face tree-sitter-hl-face:operator fontified t) 27 28 (fontified t) 28 29 (face tree-sitter-hl-face:keyword fontified t) 29 30 (face tree-sitter-hl-face:keyword fontified t) 30 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (face tree-sitter-hl-face:keyword fontified t) 32 33 (fontified t) 33 34 (face tree-sitter-hl-face:property fontified t) 34 35 (face tree-sitter-hl-face:property fontified t) 35 36 (face tree-sitter-hl-face:property fontified t) 36 37 (face tree-sitter-hl-face:property fontified t) 37 38 (face tree-sitter-hl-face:property fontified t) 38 39 (face tree-sitter-hl-face:property fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 41 (face tree-sitter-hl-face:number fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (face tree-sitter-hl-face:keyword fontified t) 45 46 (face tree-sitter-hl-face:keyword fontified t) 46 47 (face tree-sitter-hl-face:keyword fontified t) 47 48 (face tree-sitter-hl-face:keyword fontified t) 48 49 (fontified t) 49 50 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 50 51 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t) 52 53 (face tree-sitter-hl-face:number fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t) 55 56 (face (rainbow-delimiters-unmatched-face) fontified t) 56 57 (fontified t)) . -1733) (undo-tree-id4161 . -12) (undo-tree-id4162 . -56) (undo-tree-id4163 . -12) (undo-tree-id4164 . -57) 1790) nil (25976 28659 619892 359000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1776) (undo-tree-id4112 . -1) (#("s" 0 1 (fontified t)) . -1777) (undo-tree-id4113 . -1) (#("e" 0 1 (fontified t)) . -1778) (undo-tree-id4114 . -1) (#("l" 0 1 (fontified t)) . -1779) (undo-tree-id4115 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1780) (undo-tree-id4116 . -1) (#("." 0 1 (fontified t)) . -1781) (undo-tree-id4117 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1782) (undo-tree-id4118 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1783) (undo-tree-id4119 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1784) (undo-tree-id4120 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1785) (undo-tree-id4121 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1786) (undo-tree-id4122 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1787) (undo-tree-id4123 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1788) (undo-tree-id4124 . -1) 1789) ((1776 . 1789)) (25976 28647 264702 928000) 0 nil] [nil nil ((#("p" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1768) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1769) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1770) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1771) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1772) (undo-tree-id3793 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1773) (undo-tree-id3794 . -1) (#("," 0 1 (fontified t)) . -1774) (undo-tree-id3795 . -1) (#(" " 0 1 (fontified t)) . -1775) (undo-tree-id3796 . -1) (#(":" 0 1 (fontified t)) . -1776) (undo-tree-id3797 . -1) (#("s" 0 1 (fontified t)) . -1777) (undo-tree-id3798 . -1) (#("e" 0 1 (fontified t)) . -1778) (undo-tree-id3799 . -1) (#("l" 0 1 (fontified t)) . -1779) (undo-tree-id3800 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1780) (undo-tree-id3801 . -1) (#("." 0 1 (fontified t)) . -1781) (undo-tree-id3802 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1782) (undo-tree-id3803 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1783) (undo-tree-id3804 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1784) (undo-tree-id3805 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1785) (undo-tree-id3806 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1786) (undo-tree-id3807 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1787) (undo-tree-id3808 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1788) (undo-tree-id3809 . -1) 1789) ((1768 . 1789)) (25976 28629 305473 368000) 0 nil])
([nil nil ((1741 . 1745) 1733) nil (25976 28659 619884 490000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1759) (undo-tree-id4095 . -1) (#(" " 0 1 (fontified t)) . -1760) (undo-tree-id4096 . -1) (#("s" 0 1 (fontified t)) . -1761) (undo-tree-id4097 . -1) (#("e" 0 1 (fontified t)) . -1762) (undo-tree-id4098 . -1) (#("l" 0 1 (fontified t)) . -1763) (undo-tree-id4099 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1764) (undo-tree-id4100 . -1) (#("." 0 1 (fontified t)) . -1765) (undo-tree-id4101 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1766) (undo-tree-id4102 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1767) (undo-tree-id4103 . -1) (#("p" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1768) (undo-tree-id4104 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1769) (undo-tree-id4105 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1770) (undo-tree-id4106 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1771) (undo-tree-id4107 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1772) (undo-tree-id4108 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1773) (undo-tree-id4109 . -1) (#("," 0 1 (fontified t)) . -1774) (undo-tree-id4110 . -1) (#(" " 0 1 (fontified t)) . -1775) (undo-tree-id4111 . -1) 1776) ((1759 . 1776)) (25976 28647 37422 915000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1759) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (#(" " 0 1 (fontified t)) . -1760) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (#("s" 0 1 (fontified t)) . -1761) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (#("e" 0 1 (fontified t)) . -1762) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (#("l" 0 1 (fontified t)) . -1763) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -1764) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (#("." 0 1 (fontified nil)) . -1765) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1766) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1767) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) 1768) ((1759 . 1768)) (25976 28629 276462 797000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1771) (undo-tree-id4148 . -1) (#(":" 0 1 (fontified t)) . -1772) (undo-tree-id4149 . -1) (#("s" 0 1 (fontified t)) . -1773) (undo-tree-id4150 . -1) (#("e" 0 1 (fontified t)) . -1774) (undo-tree-id4151 . -1) (#("l" 0 1 (fontified t)) . -1775) (undo-tree-id4152 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -1776) (undo-tree-id4153 . -1) (#("." 0 1 (fontified nil)) . -1777) (undo-tree-id4154 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -1778) (undo-tree-id4155 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -1779) (undo-tree-id4156 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -1780) (undo-tree-id4157 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1781) (undo-tree-id4158 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1782) (undo-tree-id4159 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1783) (undo-tree-id4160 . -1) 1784) nil (25976 28659 619879 675000) 0 nil])
([nil nil ((1768 . 1772) 1760) ((#("    " 0 4 (fontified t)) . 1768)) (25976 28646 699462 993000) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t)) . -1761) (undo-tree-id4143 . -1) (#("e" 0 1 (fontified t)) . -1762) (undo-tree-id4144 . -1) (#("l" 0 1 (fontified t)) . -1763) (undo-tree-id4145 . -1) (#("f" 0 1 (fontified t)) . -1764) (undo-tree-id4146 . -1) (#("." 0 1 (fontified t)) . -1765) (undo-tree-id4147 . -1) 1766) nil (25976 28659 619851 204000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1797) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4080 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1798) (undo-tree-id4082 . -1) (#(":" 0 1 (fontified t)) . -1799) (undo-tree-id4083 . -1) (#("s" 0 1 (fontified t)) . -1800) (undo-tree-id4084 . -1) (#("e" 0 1 (fontified t)) . -1801) (undo-tree-id4085 . -1) (#("l" 0 1 (fontified t)) . -1802) (undo-tree-id4086 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1803) (undo-tree-id4087 . -1) (#("." 0 1 (fontified t)) . -1804) (undo-tree-id4088 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1805) (undo-tree-id4089 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1806) (undo-tree-id4090 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1807) (undo-tree-id4091 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1808) (undo-tree-id4092 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1809) (undo-tree-id4093 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1810) (undo-tree-id4094 . -1) 1811) ((1797 . 1811)) (25976 28646 396491 262000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1776) (undo-tree-id4126 . -4) (undo-tree-id4127 . -4) (undo-tree-id4128 . -4) (undo-tree-id4129 . -4) (undo-tree-id4130 . -4) (undo-tree-id4131 . -4) (undo-tree-id4132 . -4) (undo-tree-id4133 . -4) (undo-tree-id4134 . -4) (undo-tree-id4135 . -4) (undo-tree-id4136 . -4) (undo-tree-id4137 . -4) (undo-tree-id4138 . -4) (undo-tree-id4139 . -4) (undo-tree-id4140 . -4) (undo-tree-id4141 . -4) (undo-tree-id4142 . -4) 1780) nil (25976 28659 619835 625000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1788) (undo-tree-id3832 . -1) (undo-tree-id3834 . -1) (undo-tree-id3836 . -1) (undo-tree-id3838 . -1) (undo-tree-id3840 . -1) (undo-tree-id3842 . -1) (undo-tree-id3844 . -1) (undo-tree-id3846 . -1) (undo-tree-id3848 . -1) (undo-tree-id3850 . -1) (undo-tree-id3852 . -1) (undo-tree-id3854 . -1) (undo-tree-id3856 . -1) (undo-tree-id3858 . -1) (undo-tree-id3860 . -1) (undo-tree-id3862 . -1) (undo-tree-id3864 . -1) (undo-tree-id3866 . -1) (undo-tree-id3868 . -1) (undo-tree-id3870 . -1) (undo-tree-id3872 . -1) (undo-tree-id3874 . -1) (undo-tree-id3876 . -1) (undo-tree-id3878 . -1) (undo-tree-id3880 . -1) (undo-tree-id3882 . -1) (undo-tree-id3884 . -1) (undo-tree-id3886 . -1) (undo-tree-id3888 . -1) (undo-tree-id3890 . -1) (undo-tree-id3892 . -1) (undo-tree-id3894 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3899 . -1) (undo-tree-id3901 . -1) (#("e" 0 1 (fontified t)) . -1789) (undo-tree-id3903 . -1) (undo-tree-id3905 . -1) (undo-tree-id3907 . -1) (undo-tree-id3909 . -1) (undo-tree-id3911 . -1) (undo-tree-id3913 . -1) (undo-tree-id3915 . -1) (undo-tree-id3917 . -1) (undo-tree-id3919 . -1) (undo-tree-id3921 . -1) (undo-tree-id3923 . -1) (undo-tree-id3925 . -1) (undo-tree-id3927 . -1) (undo-tree-id3929 . -1) (undo-tree-id3931 . -1) (undo-tree-id3933 . -1) (undo-tree-id3935 . -1) (undo-tree-id3937 . -1) (undo-tree-id3939 . -1) (undo-tree-id3941 . -1) (undo-tree-id3943 . -1) (undo-tree-id3945 . -1) (undo-tree-id3947 . -1) (undo-tree-id3949 . -1) (undo-tree-id3951 . -1) (undo-tree-id3953 . -1) (undo-tree-id3955 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3960 . -1) (undo-tree-id3962 . -1) (#("l" 0 1 (fontified t)) . -1790) (undo-tree-id3964 . -1) (undo-tree-id3966 . -1) (undo-tree-id3968 . -1) (undo-tree-id3970 . -1) (undo-tree-id3972 . -1) (undo-tree-id3974 . -1) (undo-tree-id3976 . -1) (undo-tree-id3978 . -1) (undo-tree-id3980 . -1) (undo-tree-id3982 . -1) (undo-tree-id3984 . -1) (undo-tree-id3986 . -1) (undo-tree-id3988 . -1) (undo-tree-id3990 . -1) (undo-tree-id3992 . -1) (undo-tree-id3994 . -1) (undo-tree-id3996 . -1) (undo-tree-id3998 . -1) (undo-tree-id4000 . -1) (undo-tree-id4002 . -1) (undo-tree-id4004 . -1) (undo-tree-id4006 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4011 . -1) (undo-tree-id4013 . -1) (#("f" 0 1 (fontified t)) . -1791) (undo-tree-id4015 . -1) (undo-tree-id4017 . -1) (undo-tree-id4019 . -1) (undo-tree-id4021 . -1) (undo-tree-id4023 . -1) (undo-tree-id4025 . -1) (undo-tree-id4027 . -1) (undo-tree-id4029 . -1) (undo-tree-id4031 . -1) (undo-tree-id4033 . -1) (undo-tree-id4035 . -1) (undo-tree-id4037 . -1) (undo-tree-id4039 . -1) (undo-tree-id4041 . -1) (undo-tree-id4043 . -1) (undo-tree-id4045 . -1) (undo-tree-id4047 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4052 . -1) (undo-tree-id4054 . -1) (#("." 0 1 (fontified t)) . -1792) (undo-tree-id4056 . -1) (undo-tree-id4058 . -1) (undo-tree-id4060 . -1) (undo-tree-id4062 . -1) (undo-tree-id4064 . -1) (undo-tree-id4066 . -1) (undo-tree-id4068 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4073 . -1) (undo-tree-id4075 . -1) 1793) ((1788 . 1793)) (25976 28646 236085 453000) 0 nil])
([nil nil ((1776 . 1781) (t 25976 28659 993587 542000)) nil (25976 28674 306198 656000) 0 nil])
([nil nil ((1792 . 1793)) ((#("s" 0 1 (fontified t)) . 1792) (undo-tree-id4125 . -1) (t 25976 28642 609586 989000)) (25976 28642 237728 673000) 0 nil])
([nil nil ((1781 . 1794)) nil (25976 28674 306196 694000) 0 nil])
nil
([nil nil ((1732 . 1745)) nil (25976 28674 306195 392000) 0 nil])
([nil nil ((1745 . 1747)) nil (25976 28674 306194 108000) 0 nil])
([nil nil ((1747 . 1749)) nil (25976 28674 306192 657000) 0 nil])
([nil nil ((#("x" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1748) (undo-tree-id4378 . -1) 1749) nil (25976 28674 306191 168000) 0 nil])
([nil nil ((1748 . 1750)) nil (25976 28674 306187 826000) 0 nil])
([nil nil ((#("x" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1748) (undo-tree-id4376 . -1) (#("_" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1749) (undo-tree-id4377 . -1) 1750) nil (25976 28674 306185 801000) 0 nil])
([nil nil ((1748 . 1757)) nil (25976 28674 306180 682000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1767 . 1768) (nil fontified nil 1762 . 1768) (nil fontified nil 1761 . 1762) (nil fontified nil 1757 . 1761) (1757 . 1768)) nil (25976 28674 306178 501000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1757) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (#("e" 0 1 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:property) fontified nil)) . -1758) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (#("l" 0 1 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:property) fontified nil)) . -1759) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (#("f" 0 1 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:property) fontified nil)) . -1760) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (#("." 0 1 (fontified nil)) . -1761) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1762) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1763) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (#("p" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1764) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1765) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1766) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property rear-nonsticky t fontified t)) . -1767) (undo-tree-id4375 . -1) 1768) nil (25976 28674 306157 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1745 . 1746) (nil fontified nil 1737 . 1746) (nil fontified nil 1733 . 1737) (1733 . 1746) (t 25976 28674 713588 11000)) nil (25976 28693 935254 307000) 0 nil])
([nil nil ((1733 . 1745) 1746) nil (25976 28693 935252 639000) 0 nil])
([nil nil ((1745 . 1753)) nil (25976 28693 935251 425000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1769) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (#(" " 0 1 (fontified t)) . -1770) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (#(" " 0 1 (fontified t)) . -1771) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (#(" " 0 1 (fontified t)) . -1772) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (#(" " 0 1 (fontified t)) . -1773) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (#(" " 0 1 (fontified t)) . -1774) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (#(" " 0 1 (fontified t)) . -1775) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (#(" " 0 1 (fontified t)) . -1776) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (#(" " 0 1 (fontified t)) . -1777) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1778) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (#("_" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1779) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (#("u" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1780) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (#("_" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1781) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (#("x" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1782) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (#(" " 0 1 (fontified t)) . -1783) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1784) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (#(" " 0 1 (fontified t)) . -1785) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (#("s" 0 1 (fontified t)) . -1786) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (#("t" 0 1 (fontified t)) . -1787) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (#("p" 0 1 (fontified t)) . -1788) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (#("." 0 1 (fontified t)) . -1789) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) 1790) nil (25976 28693 935237 291000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1766) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (#(" " 0 1 (fontified t)) . -1767) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (#(" " 0 1 (fontified t)) . -1768) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) 1769) nil (25976 28693 934905 620000) 0 nil])
([nil nil ((1828 . 1837) (t 25976 28694 225588 632000)) nil (25976 28705 194059 712000) 0 nil])
([nil nil ((1837 . 1850)) nil (25976 28705 194054 72000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1846) (undo-tree-id4795 . -4) (undo-tree-id4796 . -4) (undo-tree-id4797 . -4) (undo-tree-id4798 . -4) (undo-tree-id4799 . -4) (undo-tree-id4800 . -4) (undo-tree-id4801 . -4) (undo-tree-id4802 . -4) (undo-tree-id4803 . -4) (undo-tree-id4804 . -4) (undo-tree-id4805 . -4) (undo-tree-id4806 . -4) (undo-tree-id4807 . -4) (undo-tree-id4808 . -4) (undo-tree-id4809 . -4) (undo-tree-id4810 . -4) (undo-tree-id4811 . -4) (undo-tree-id4812 . -4) (undo-tree-id4813 . -4) (undo-tree-id4814 . -4) (undo-tree-id4815 . -4) 1850 (t 25976 28705 605588 994000)) nil (25976 28709 722372 544000) 0 nil])
([nil nil ((1958 . 1963) (t 25976 28710 97589 137000)) nil (25976 28718 964371 483000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1962) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) 1963) nil (25976 28718 964368 915000) 0 nil])
([nil nil ((1962 . 1965)) nil (25976 28718 964347 480000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1964) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) 1965) nil (25976 28718 964343 963000) 0 nil])
([nil nil ((1964 . 1966)) nil (25976 28718 964301 410000) 0 nil])
([nil nil ((2021 . 2022) (t 25976 28719 337589 431000)) nil (25976 28724 748646 568000) 0 nil])
([nil nil ((2022 . 2029)) nil (25976 28724 748640 699000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2043) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) 2044 (t 25976 28725 157589 616000)) nil (25976 28726 623002 461000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2064) (undo-tree-id4858 . -4) (undo-tree-id4859 . -4) (undo-tree-id4860 . -4) (undo-tree-id4861 . -4) (undo-tree-id4862 . -4) (undo-tree-id4863 . -4) (undo-tree-id4864 . -4) (undo-tree-id4865 . -4) (undo-tree-id4866 . -4) (undo-tree-id4867 . -4) (undo-tree-id4868 . -4) (undo-tree-id4869 . -4) (undo-tree-id4870 . -4) (undo-tree-id4871 . -4) (undo-tree-id4872 . -4) (undo-tree-id4873 . -4) (undo-tree-id4874 . -4) 2068 (t 25976 28727 41589 676000)) nil (25976 28728 769343 454000) 0 nil])
([nil nil ((724 . 729) (t 25976 28729 185589 744000)) nil (25976 28846 423555 381000) 0 nil])
([nil nil ((729 . 730) (t 25976 28846 809593 487000)) nil (25976 28847 948152 500000) 0 nil])
([nil nil ((#("n" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t)) . -729) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) 730) nil (25976 28847 948145 517000) 0 nil])
([nil nil ((#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -751) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -752) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -753) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -754) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) 755 (t 25976 28848 329593 536000)) nil (25976 28862 543148 444000) 0 nil])
([nil nil ((433 . 436) (t 25976 28862 929594 0)) nil (25976 28869 135024 617000) 0 nil])
([nil nil ((#("_" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -433) (undo-tree-id5046 . -1) (#("N" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -434) (undo-tree-id5047 . -1) (#("E" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -435) (undo-tree-id5048 . -1) 436) nil (25976 28869 135020 824000) 0 nil])
([nil nil ((751 . 758)) nil (25976 28869 134997 989000) 0 nil])
([nil nil ((1761 . 1766) (t 25976 28869 525594 210000)) nil (25976 28877 307946 671000) 0 nil])
([nil nil ((1792 . 1797) (t 25976 28877 689594 470000)) nil (25976 28897 571852 285000) 0 nil])
([nil nil ((1855 . 1857) (t 25976 28897 953595 115000)) nil (25976 28914 169563 964000) 0 nil])
([nil nil ((1857 . 1858) (t 25976 28914 533595 642000)) nil (25976 28918 927125 14000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1857) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) 1858) nil (25976 28918 927118 627000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2055) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2056) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (#(" " 0 1 (fontified nil)) . -2057) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (#("n" 0 1 (fontified nil)) . -2058) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (#("o" 0 1 (fontified nil)) . -2059) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (#("i" 0 1 (fontified nil)) . -2060) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (#("s" 0 1 (fontified nil)) . -2061) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (#("e" 0 1 (fontified t)) . -2062) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (#(" " 0 1 (fontified t)) . -2063) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (#(" " 0 1 (fontified t)) . -2064) (undo-tree-id5305 . -1) (#(" " 0 1 (fontified t)) . -2065) (undo-tree-id5306 . -1) (#(" " 0 1 (fontified t)) . -2066) (undo-tree-id5307 . -1) (#(" " 0 1 (fontified t)) . -2067) (undo-tree-id5308 . -1) (#(" " 0 1 (fontified t)) . -2068) (undo-tree-id5309 . -1) (#(" " 0 1 (fontified t)) . -2069) (undo-tree-id5310 . -1) (#(" " 0 1 (fontified t)) . -2070) (undo-tree-id5311 . -1) (#(" " 0 1 (fontified t)) . -2071) (undo-tree-id5312 . -1) (#(" " 0 1 (fontified t)) . -2072) (undo-tree-id5313 . -1) (#(" " 0 1 (fontified t)) . -2073) (undo-tree-id5314 . -1) (#(" " 0 1 (fontified t)) . -2074) (undo-tree-id5315 . -1) 2075 (t 25976 28919 293595 794000)) nil (25976 28923 433041 844000) 0 nil])
([nil nil ((760 . 761) (t 25976 28923 805595 937000)) nil (25976 29178 683898 209000) 0 nil])
([nil nil ((761 . 769)) nil (25976 29178 683896 108000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:property fontified t)) . -765) (undo-tree-id5332 . -1) (#("r" 0 1 (face tree-sitter-hl-face:property fontified t)) . -766) (undo-tree-id5333 . -1) (#("a" 0 1 (face tree-sitter-hl-face:property fontified t)) . -767) (undo-tree-id5334 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -768) (undo-tree-id5335 . -1) 769) nil (25976 29178 683893 502000) 0 nil])
([nil nil ((765 . 770)) nil (25976 29178 683884 379000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -767) (undo-tree-id5329 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -768) (undo-tree-id5330 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified t)) . -769) (undo-tree-id5331 . -1) 770) nil (25976 29178 683882 309000) 0 nil])
([nil nil ((767 . 769)) nil (25976 29178 683874 465000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -767) (undo-tree-id5327 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified t)) . -768) (undo-tree-id5328 . -1) 769) nil (25976 29178 683872 551000) 0 nil])
([nil nil ((767 . 772)) nil (25976 29178 683867 46000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -771) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) 772) nil (25976 29178 683863 536000) 0 nil])
([nil nil ((771 . 773)) nil (25976 29178 683825 245000) 0 nil])
([nil nil ((1752 . 1754) (t 25976 29179 101604 61000)) nil (25976 37616 645081 972000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1752) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("&" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1753) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 1754) nil (25976 37616 645072 435000) 0 nil])
([nil nil ((1872 . 1884) (#("        " 0 8 (fontified nil)) . 1871) (undo-tree-id63 . -8) (1879 . 1880) (t 25976 37616 989872 574000)) nil (25976 37631 737229 592000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1880) (undo-tree-id62 . -4) 1884) nil (25976 37631 737225 264000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1887) (1886 . 1887) (1885 . 1887) (#("(" 0 1 (fontified nil)) . -1885) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (1880 . 1886)) nil (25976 37631 737220 27000) 0 nil])
([nil nil ((1886 . 1891)) nil (25976 37631 737197 79000) 0 nil])
([nil nil ((#("        print(A_u_x)
" 0 8 (fontified t) 8 13 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 19 (face tree-sitter-hl-face:constructor fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (fontified t)) . -1872) (undo-tree-id64 . -20) (undo-tree-id65 . -20) (undo-tree-id66 . -20) (undo-tree-id67 . -21) (undo-tree-id68 . -21) (undo-tree-id69 . -21) (undo-tree-id70 . -21) (undo-tree-id71 . -21) (undo-tree-id72 . -21) (undo-tree-id73 . -21) (undo-tree-id74 . -21) (undo-tree-id75 . -21) (undo-tree-id76 . -21) (undo-tree-id77 . -21) (undo-tree-id78 . -21) (undo-tree-id79 . -21) (undo-tree-id80 . -21) (undo-tree-id81 . -21) (undo-tree-id82 . -21) (undo-tree-id83 . -21) (undo-tree-id84 . -21) (undo-tree-id85 . -21) (undo-tree-id86 . -21) (undo-tree-id87 . -21) (undo-tree-id88 . -21) (undo-tree-id89 . -21) (undo-tree-id90 . -21) (undo-tree-id91 . -21) (undo-tree-id92 . -21) (undo-tree-id93 . -21) (undo-tree-id94 . -21) (undo-tree-id95 . -21) (undo-tree-id96 . -21) (undo-tree-id97 . -21) (undo-tree-id98 . -21) (undo-tree-id99 . -21) (undo-tree-id100 . -20) (undo-tree-id101 . -20) (undo-tree-id102 . -20) (undo-tree-id103 . -20) (undo-tree-id104 . -20) (undo-tree-id105 . -20) (undo-tree-id106 . -20) (undo-tree-id107 . -20) (undo-tree-id108 . -20) (undo-tree-id109 . -20) (undo-tree-id110 . -21) (undo-tree-id111 . -21) (undo-tree-id112 . -21) (undo-tree-id113 . -21) (undo-tree-id114 . -21) (undo-tree-id115 . -21) (undo-tree-id116 . -21) (undo-tree-id117 . -21) (undo-tree-id118 . -21) (undo-tree-id119 . -21) (undo-tree-id120 . -21) (undo-tree-id121 . -21) (undo-tree-id122 . -21) 1893 (t 25976 37632 113873 55000)) nil (25976 37642 240461 234000) 0 nil])
([nil nil ((1871 . 1883) (t 25976 37642 593873 388000)) nil (25976 37643 648709 180000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1879) (undo-tree-id123 . -4) 1883) nil (25976 37643 648703 339000) 0 nil])
([nil nil ((#("            self.stp.markram_stp(rates)
" 0 12 (fontified t) 12 16 (face tree-sitter-hl-face:keyword fontified t) 16 17 (fontified t) 17 20 (face tree-sitter-hl-face:property fontified t) 20 21 (fontified t) 21 32 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 40 (fontified t)) . 1793) (undo-tree-id124 . -17) (undo-tree-id125 . -8) (undo-tree-id126 . -40) (undo-tree-id127 . -40) (undo-tree-id128 . -40) (undo-tree-id129 . -40) (undo-tree-id130 . -40) (undo-tree-id131 . -40) (undo-tree-id132 . -40) (undo-tree-id133 . -40) (undo-tree-id134 . -17) (undo-tree-id135 . -40) (undo-tree-id136 . -40) (undo-tree-id137 . -40) (undo-tree-id138 . -40) (undo-tree-id139 . -40) (undo-tree-id140 . -40) 1833 (t 25976 37643 917873 431000)) nil (25976 37650 289175 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1793 . 1794) (nil fontified nil 1793 . 1794) (nil fontified nil 1792 . 1793) (nil fontified nil 1787 . 1792) (nil fontified nil 1786 . 1787) (nil fontified nil 1775 . 1786) (nil fontified nil 1774 . 1775) (nil fontified nil 1771 . 1774) (nil fontified nil 1770 . 1771) (nil fontified nil 1766 . 1770) (nil fontified nil 1754 . 1766) (1754 . 1794)) nil (25976 37650 288804 669000) 0 nil])
([nil nil ((3993 . 4001) (t 25976 37650 641873 644000)) nil (25976 37707 888827 613000) 0 nil])
([nil nil ((4085 . 4093)) nil (25976 37707 888821 754000) 0 nil])
([nil nil ((4116 . 4124) (t 25976 37708 273875 478000)) nil (25976 37710 556120 554000) 0 nil])
([nil nil ((2943 . 2951) (t 25976 37710 853875 561000)) nil (25976 37718 591634 682000) 0 nil])
([nil nil ((1832 . 1833) (t 25976 37718 949875 818000)) nil (25976 38477 239344 943000) 0 nil])
([nil nil ((#("n" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1832) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) 1833) nil (25976 38477 239338 436000) 0 nil])
([nil nil ((3544 . 3572) (#("                    " 0 20 (fontified t)) . 3544) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -20) 3552 (t 25976 38477 697899 963000)) nil (25976 39011 792754 944000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3568) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) 3572) nil (25976 39011 792277 239000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3564) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) 3568) nil (25976 39011 792248 752000) 0 nil])
([nil nil ((3608 . 3628) (#("        " 0 2 (fontified t) 2 8 (fontified t)) . 3608) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -7) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -7) (undo-tree-id428 . -7) (undo-tree-id429 . -7) (undo-tree-id430 . -8) 3615 (t 25976 39012 193916 972000)) nil (25976 39017 386979 862000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3624) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -4) 3627) nil (25976 39017 386958 321000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3620) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -3) (undo-tree-id390 . -4) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -4) 3623) nil (25976 39017 386933 320000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3616) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -3) (undo-tree-id362 . -4) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -4) 3619) nil (25976 39017 386883 715000) 0 nil])
([nil nil ((3608 . 3628) (#("        " 0 8 (fontified t)) . 3608) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -8) (undo-tree-id273 . -8) (undo-tree-id274 . -8) (undo-tree-id275 . -8) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -8) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8) (undo-tree-id306 . -8) (undo-tree-id307 . -8) (undo-tree-id308 . -8) (undo-tree-id309 . -7) (undo-tree-id310 . -8) (undo-tree-id311 . -7) (undo-tree-id312 . -7) (undo-tree-id313 . -7) (undo-tree-id314 . -7) (undo-tree-id315 . -7) (undo-tree-id316 . -7) (undo-tree-id317 . -7) (undo-tree-id318 . -7) (undo-tree-id319 . -7) (undo-tree-id320 . -7) (undo-tree-id321 . -7) (undo-tree-id322 . -7) (undo-tree-id323 . -7) (undo-tree-id324 . -7) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -7) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -8) 3615) nil (25976 39017 386820 886000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3624) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) 3628) nil (25976 39017 386565 717000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3620) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) 3624) nil (25976 39017 386542 248000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3616) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) 3620) nil (25976 39017 386496 337000) 0 nil])
([nil nil ((12875 . 12884) (t 25976 39017 769917 150000)) nil (25976 39083 821514 235000) 0 nil])
([nil nil ((12884 . 12887)) nil (25976 39083 821512 731000) 0 nil])
([nil nil ((12887 . 12891)) nil (25976 39083 821511 450000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12889) (undo-tree-id434 . -1) (#("L" 0 1 (fontified t)) . -12890) (undo-tree-id435 . -1) 12891) nil (25976 39083 821509 672000) 0 nil])
([nil nil ((12889 . 12894)) nil (25976 39083 821504 1000) 0 nil])
([nil nil ((#("C" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -12892) (undo-tree-id432 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -12893) (undo-tree-id433 . -1) 12894) nil (25976 39083 821502 139000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 12900) (12899 . 12900) (12898 . 12900) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -12898) (12892 . 12899)) nil (25976 39083 821494 966000) 0 nil])
([nil nil ((12899 . 12900)) nil (25976 39083 821492 124000) 0 nil])
([nil nil ((12901 . 12903)) nil (25976 39083 821490 917000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -12902) (undo-tree-id431 . -1) 12903) nil (25976 39083 821488 677000) 0 nil])
([nil nil ((12902 . 12903)) nil (25976 39083 821474 298000) 0 nil])
([nil nil ((12903 . 12904)) nil (25976 39083 821471 727000) 0 nil])
([nil nil ((12913 . 12917) 12905) nil (25976 39083 821464 670000) 0 nil])
([nil nil ((12876 . 12877) (t 25976 39084 189919 263000)) nil (25976 39085 202729 32000) 0 nil])
([nil nil ((12975 . 12980) (t 25976 39085 565919 307000)) nil (25976 39092 109275 72000) 0 nil])
([nil nil ((12980 . 12993)) nil (25976 39092 109272 75000) 0 nil])
([nil nil ((#("        else:
" 0 8 (fontified t) 8 12 (face tree-sitter-hl-face:keyword fontified t) 12 14 (fontified t)) . -12967) (undo-tree-id436 . -14) (undo-tree-id437 . -14) (undo-tree-id438 . -14) (undo-tree-id439 . -14) (undo-tree-id440 . -14) (undo-tree-id441 . -14) (undo-tree-id442 . -14) (undo-tree-id443 . -14) (undo-tree-id444 . -14) (undo-tree-id445 . -14) (undo-tree-id446 . -14) (undo-tree-id447 . -14) (undo-tree-id448 . -14) 12981) nil (25976 39092 109266 233000) 0 nil])
([nil nil ((2206 . 2214) (#("        " 0 8 (fontified nil)) . 2205) (undo-tree-id468 . -8) (2213 . 2214) (t 25976 39092 465919 527000)) nil (25976 39114 333561 914000) 0 nil])
([nil nil ((2214 . 2218)) nil (25976 39114 333558 304000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2230) (2229 . 2230) (2228 . 2230) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2228) (2218 . 2229)) nil (25976 39114 333556 647000) 0 nil])
([nil nil ((2229 . 2230)) nil (25976 39114 333554 169000) 0 nil])
([nil nil ((2231 . 2233)) nil (25976 39114 333553 85000) 0 nil])
([nil nil ((2233 . 2234)) nil (25976 39114 333551 999000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -2233) (undo-tree-id467 . -1) 2234) nil (25976 39114 333550 628000) 0 nil])
([nil nil ((2233 . 2234)) nil (25976 39114 333547 576000) 0 nil])
([nil nil ((2243 . 2247) 2235) nil (25976 39114 333546 94000) 0 nil])
([nil nil ((2294 . 2307)) nil (25976 39114 333544 495000) 0 nil])
([nil nil ((2307 . 2310)) nil (25976 39114 333543 295000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2307) (undo-tree-id464 . -1) (#("s" 0 1 (fontified t)) . -2308) (undo-tree-id465 . -1) (#("l" 0 1 (fontified t)) . -2309) (undo-tree-id466 . -1) 2310) nil (25976 39114 333541 100000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2303) (undo-tree-id463 . -4) 2307) nil (25976 39114 333533 638000) 0 nil])
([nil nil ((2205 . 2213)) nil (25976 39114 333530 362000) 0 nil])
([nil nil ((2206 . 2214) (#("        " 0 8 (fontified nil)) . 2205) (undo-tree-id462 . -8) (2213 . 2214)) nil (25976 39114 333528 654000) 0 nil])
([nil nil ((2214 . 2223)) nil (25976 39114 333524 943000) 0 nil])
([nil nil ((#("à" 0 1 (fontified t)) . -2222) (undo-tree-id461 . -1) 2223) nil (25976 39114 333523 108000) 0 nil])
([nil nil ((2222 . 2223)) nil (25976 39114 333519 750000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -2222) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) 2223) nil (25976 39114 333516 115000) 0 nil])
([nil nil ((2222 . 2223)) nil (25976 39114 333479 863000) 0 nil])
([nil nil ((11304 . 11308) (11295 . 11296) (t 25976 39114 693920 234000)) nil (25976 40092 842924 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11834 . 11835) (nil fontified nil 11834 . 11835) (nil fontified nil 11833 . 11834) (nil fontified nil 11828 . 11833) (nil fontified nil 11827 . 11828) (nil fontified nil 11820 . 11827) (nil fontified nil 11819 . 11820) (nil fontified nil 11815 . 11819) (nil fontified nil 11814 . 11815) (nil fontified nil 11813 . 11814) (nil fontified nil 11812 . 11813) (nil fontified nil 11810 . 11812) (nil fontified nil 11809 . 11810) (nil fontified nil 11805 . 11809) (nil fontified nil 11804 . 11805) (nil fontified nil 11803 . 11804) (nil fontified nil 11802 . 11803) (nil fontified nil 11801 . 11802) (nil fontified nil 11800 . 11801) (nil fontified nil 11799 . 11800) (nil fontified nil 11798 . 11799) (nil fontified nil 11797 . 11798) (nil fontified nil 11791 . 11797) (nil fontified nil 11790 . 11791) (nil fontified nil 11784 . 11790) (nil fontified nil 11783 . 11784) (nil fontified nil 11779 . 11783) (nil fontified nil 11776 . 11779) (nil fontified nil 11775 . 11776) (nil fontified nil 11770 . 11775) (nil fontified nil 11769 . 11770) (nil fontified nil 11763 . 11769) (nil fontified nil 11762 . 11763) (nil fontified nil 11758 . 11762) (nil fontified nil 11757 . 11758) (nil fontified nil 11747 . 11757) (nil fontified nil 11746 . 11747) (nil fontified nil 11742 . 11746) (nil fontified nil 11729 . 11742) (nil fontified nil 11728 . 11729) (nil fontified nil 11727 . 11728) (nil fontified nil 11722 . 11727) (nil fontified nil 11721 . 11722) (nil fontified nil 11714 . 11721) (nil fontified nil 11713 . 11714) (nil fontified nil 11709 . 11713) (nil fontified nil 11708 . 11709) (nil fontified nil 11707 . 11708) (nil fontified nil 11706 . 11707) (nil fontified nil 11704 . 11706) (nil fontified nil 11703 . 11704) (nil fontified nil 11699 . 11703) (nil fontified nil 11698 . 11699) (nil fontified nil 11697 . 11698) (nil fontified nil 11694 . 11697) (nil fontified nil 11687 . 11694) (nil fontified nil 11686 . 11687) (nil fontified nil 11685 . 11686) (nil fontified nil 11684 . 11685) (nil fontified nil 11683 . 11684) (nil fontified nil 11682 . 11683) (nil fontified nil 11681 . 11682) (nil fontified nil 11680 . 11681) (nil fontified nil 11674 . 11680) (nil fontified nil 11673 . 11674) (nil fontified nil 11667 . 11673) (nil fontified nil 11666 . 11667) (nil fontified nil 11662 . 11666) (nil fontified nil 11659 . 11662) (nil fontified nil 11658 . 11659) (nil fontified nil 11653 . 11658) (nil fontified nil 11652 . 11653) (nil fontified nil 11646 . 11652) (nil fontified nil 11645 . 11646) (nil fontified nil 11641 . 11645) (nil fontified nil 11640 . 11641) (nil fontified nil 11626 . 11640) (nil fontified nil 11625 . 11626) (nil fontified nil 11621 . 11625) (nil fontified nil 11607 . 11621) (nil fontified nil 11606 . 11607) (nil fontified nil 11601 . 11606) (nil fontified nil 11600 . 11601) (nil fontified nil 11596 . 11600) (nil fontified nil 11595 . 11596) (nil fontified nil 11590 . 11595) (nil fontified nil 11589 . 11590) (nil fontified nil 11587 . 11589) (nil fontified nil 11586 . 11587) (nil fontified nil 11581 . 11586) (nil fontified nil 11580 . 11581) (nil fontified nil 11577 . 11580) (nil fontified nil 11567 . 11577) (nil fontified nil 11566 . 11567) (nil fontified nil 11560 . 11566) (nil fontified nil 11559 . 11560) (nil fontified nil 11555 . 11559) (nil fontified nil 11554 . 11555) (nil fontified nil 11548 . 11554) (nil fontified nil 11546 . 11548) (nil fontified nil 11541 . 11546) (nil fontified nil 11540 . 11541) (nil fontified nil 11536 . 11540) (nil fontified nil 11535 . 11536) (nil fontified nil 11530 . 11535) (nil fontified nil 11528 . 11530) (nil fontified nil 11520 . 11528) (nil fontified nil 11519 . 11520) (nil fontified nil 11515 . 11519) (nil fontified nil 11514 . 11515) (nil fontified nil 11510 . 11514) (nil fontified nil 11503 . 11510) (nil fontified nil 11502 . 11503) (nil fontified nil 11501 . 11502) (nil fontified nil 11491 . 11501) (nil fontified nil 11490 . 11491) (nil fontified nil 11486 . 11490) (nil fontified nil 11477 . 11486) (nil fontified nil 11476 . 11477) (nil fontified nil 11470 . 11476) (nil fontified nil 11469 . 11470) (nil fontified nil 11465 . 11469) (nil fontified nil 11464 . 11465) (nil fontified nil 11458 . 11464) (nil fontified nil 11456 . 11458) (nil fontified nil 11451 . 11456) (nil fontified nil 11450 . 11451) (nil fontified nil 11446 . 11450) (nil fontified nil 11445 . 11446) (nil fontified nil 11440 . 11445) (nil fontified nil 11438 . 11440) (nil fontified nil 11430 . 11438) (nil fontified nil 11429 . 11430) (nil fontified nil 11425 . 11429) (nil fontified nil 11424 . 11425) (nil fontified nil 11420 . 11424) (nil fontified nil 11413 . 11420) (nil fontified nil 11412 . 11413) (nil fontified nil 11411 . 11412) (nil fontified nil 11397 . 11411) (nil fontified nil 11396 . 11397) (nil fontified nil 11392 . 11396) (nil fontified nil 11383 . 11392) (nil fontified nil 11382 . 11383) (nil fontified nil 11376 . 11382) (nil fontified nil 11375 . 11376) (nil fontified nil 11371 . 11375) (nil fontified nil 11370 . 11371) (nil fontified nil 11364 . 11370) (nil fontified nil 11362 . 11364) (nil fontified nil 11357 . 11362) (nil fontified nil 11356 . 11357) (nil fontified nil 11352 . 11356) (nil fontified nil 11351 . 11352) (nil fontified nil 11346 . 11351) (nil fontified nil 11344 . 11346) (nil fontified nil 11337 . 11344) (nil fontified nil 11336 . 11337) (nil fontified nil 11332 . 11336) (nil fontified nil 11331 . 11332) (nil fontified nil 11325 . 11331) (nil fontified nil 11318 . 11325) (nil fontified nil 11317 . 11318) (nil fontified nil 11316 . 11317) (nil fontified nil 11309 . 11316) (nil fontified nil 11308 . 11309) (nil fontified nil 11304 . 11308) (nil fontified nil 11296 . 11304) (11296 . 11835)) nil (25976 40092 842912 538000) 0 nil])
([nil nil ((#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -11831) (11834 . 11838) (#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -11760) (11763 . 11767) (#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -11723) (11726 . 11730) (#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -11641) (11644 . 11648) (#("SYN" 0 3 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -11501) (11504 . 11508) (#("SYN" 0 3 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -11410) (11413 . 11417) (#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -11342) (11345 . 11349) (#("SYN" 0 3 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -11313) (11316 . 11320)) nil (25976 40092 842850 326000) 0 nil])
([nil nil ((#("            A_u_x = 1.0
" 0 12 (fontified t) 12 17 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor) fontified t) 17 18 (fontified t) 18 19 (face tree-sitter-hl-face:operator fontified t) 19 20 (fontified t) 20 23 (face tree-sitter-hl-face:number fontified t) 23 24 (fontified t)) . 1847) (undo-tree-id501 . -24) 1871 (t 25976 40093 233951 373000)) nil (25976 40103 989594 896000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1753 . 1754) (nil fontified nil 1753 . 1754) (nil fontified nil 1750 . 1753) (nil fontified nil 1749 . 1750) (nil fontified nil 1748 . 1749) (nil fontified nil 1747 . 1748) (nil fontified nil 1742 . 1747) (nil fontified nil 1730 . 1742) (1730 . 1754)) nil (25976 40103 989589 601000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1738) 1730) nil (25976 40103 989583 952000) 0 nil])
([nil nil ((#("        else:
" 0 8 (fontified t) 8 12 (face tree-sitter-hl-face:keyword fontified t) 12 13 (fontified t) 13 14 (fontified t)) . -1853) (undo-tree-id469 . -14) (undo-tree-id470 . -14) (undo-tree-id471 . -14) (undo-tree-id472 . -14) (undo-tree-id473 . -14) (undo-tree-id474 . -14) (undo-tree-id475 . -14) (undo-tree-id476 . -14) (undo-tree-id477 . -14) (undo-tree-id478 . -14) (undo-tree-id479 . -14) (undo-tree-id480 . -14) (undo-tree-id481 . -14) (undo-tree-id482 . -14) (undo-tree-id483 . -14) (undo-tree-id484 . -14) (undo-tree-id485 . -14) (undo-tree-id486 . -14) (undo-tree-id487 . -14) (undo-tree-id488 . -14) (undo-tree-id489 . -14) (undo-tree-id490 . -14) (undo-tree-id491 . -14) (undo-tree-id492 . -14) (undo-tree-id493 . -14) (undo-tree-id494 . -14) (undo-tree-id495 . -14) (undo-tree-id496 . -14) (undo-tree-id497 . -14) (undo-tree-id498 . -14) (undo-tree-id499 . -14) (undo-tree-id500 . -14) 1867) nil (25976 40103 989577 720000) 0 nil])
([nil nil ((1861 . 1865) 1853) nil (25976 40103 989499 637000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1861) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) 1865 (t 25976 40104 417951 729000)) nil (25976 40105 385485 784000) 0 nil])
([nil nil ((1988 . 2001) (t 25976 40105 845951 774000)) nil (25976 40121 113847 686000) 0 nil])
([nil nil ((2001 . 2009)) nil (25976 40121 113846 92000) 0 nil])
([nil nil ((2009 . 2016)) nil (25976 40121 113844 681000) 0 nil])
([nil nil ((#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2014) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2015) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) 2016) nil (25976 40121 113838 953000) 0 nil])
([nil nil ((2014 . 2016)) nil (25976 40121 113759 431000) 0 nil])
([nil nil ((2016 . 2017) (t 25976 40121 509952 273000)) nil (25976 40122 767520 690000) 0 nil])
([nil nil ((2017 . 2034)) nil (25976 40122 767513 946000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2119 . 2120) (nil fontified nil 2119 . 2120) (nil fontified nil 2118 . 2119) (nil fontified nil 2117 . 2118) (nil fontified nil 2111 . 2117) (nil fontified nil 2110 . 2111) (nil fontified nil 2109 . 2110) (nil fontified nil 2104 . 2109) (nil fontified nil 2103 . 2104) (nil fontified nil 2100 . 2103) (nil fontified nil 2099 . 2100) (nil fontified nil 2095 . 2099) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2091 . 2092) (nil fontified nil 2081 . 2091) (nil fontified nil 2080 . 2081) (nil fontified nil 2076 . 2080) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil fontified nil 2063 . 2074) (nil fontified nil 2062 . 2063) (nil fontified nil 2061 . 2062) (nil fontified nil 2047 . 2061) (nil fontified nil 2046 . 2047) (nil fontified nil 2042 . 2046) (nil fontified nil 2041 . 2042) (nil fontified nil 2040 . 2041) (nil fontified nil 2039 . 2040) (nil fontified nil 2030 . 2039) (nil fontified nil 2018 . 2030) (2018 . 2120) (t 25976 40123 153952 325000)) nil (25976 40153 784971 843000) 0 nil])
([nil nil ((2018 . 2034) (#("            " 0 12 (fontified t)) . 2018)) nil (25976 40153 784960 200000) 0 nil])
([nil nil ((2044 . 2045)) nil (25976 40153 784958 507000) 0 nil])
([nil nil ((#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2063)) nil (25976 40153 784957 237000) 0 nil])
([nil nil ((2063 . 2067)) nil (25976 40153 784956 47000) 0 nil])
([nil nil ((#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2094)) nil (25976 40153 784954 29000) 0 nil])
([nil nil ((2094 . 2098)) nil (25976 40153 784951 924000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2126) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) 2127) nil (25976 40153 784945 167000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2126) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#(" " 0 1 (fontified t)) . -2127) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#(" " 0 1 (fontified t)) . -2128) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#(" " 0 1 (fontified t)) . -2129) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#(" " 0 1 (fontified t)) . -2130) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (#(" " 0 1 (fontified t)) . -2131) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#(" " 0 1 (fontified t)) . -2132) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (#(" " 0 1 (fontified t)) . -2133) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#(" " 0 1 (fontified t)) . -2134) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#(" " 0 1 (fontified t)) . -2135) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#(" " 0 1 (fontified t)) . -2136) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#(" " 0 1 (fontified t)) . -2137) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (#(" " 0 1 (fontified t)) . -2138) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#(" " 0 1 (fontified t)) . -2139) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (#(" " 0 1 (fontified t)) . -2140) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (#(" " 0 1 (fontified t)) . -2141) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) 2142 (t 25976 40154 153953 312000)) nil (25976 40156 606833 502000) 0 nil])
([nil nil ((2043 . 2044) (t 25976 40157 1953 402000)) nil (25976 40200 514296 395000) 0 nil])
([nil nil ((#("_" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2043) (undo-tree-id787 . -1) 2044) nil (25976 40200 514294 508000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2039) (undo-tree-id783 . -1) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2040) (undo-tree-id784 . -1) (#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2041) (undo-tree-id785 . -1) (#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2042) (undo-tree-id786 . -1) 2043) nil (25976 40200 514290 295000) 0 nil])
([nil nil ((2039 . 2040)) nil (25976 40200 514281 918000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2038) (undo-tree-id781 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2039) (undo-tree-id782 . -1) 2040) nil (25976 40200 514280 147000) 0 nil])
([nil nil ((2038 . 2041)) nil (25976 40200 514275 387000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -2040) (undo-tree-id780 . -1) 2041) nil (25976 40200 514273 576000) 0 nil])
([nil nil ((2040 . 2042)) nil (25976 40200 514269 918000) 0 nil])
([nil nil ((#("input" 0 5 (fontified t)) . 2073) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -5)) nil (25976 40200 514265 203000) 0 nil])
([nil nil ((2073 . 2077)) nil (25976 40200 514132 248000) 0 nil])
([nil nil ((1679 . 1684) (t 25976 40200 913954 800000)) nil (25976 40205 754654 237000) 0 nil])
([nil nil ((1684 . 1689)) nil (25976 40205 754648 395000) 0 nil])
([nil nil ((2230 . 2240) (t 25976 40206 157954 967000)) nil (25976 40217 758656 731000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2053) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) 2054 (t 25976 40218 137955 348000)) nil (25976 40222 591670 230000) 0 nil])
([nil nil ((2204 . 2208) (t 25976 40222 989955 502000)) nil (25976 40232 686545 927000) 0 nil])
([nil nil ((2208 . 2220)) nil (25976 40232 686543 271000) 0 nil])
([nil nil ((2220 . 2233)) nil (25976 40232 686537 463000) 0 nil])
([nil nil ((2133 . 2150) (t 25976 40233 69955 823000)) nil (25976 40245 448274 613000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2133) (undo-tree-id799 . -1) 2134) nil (25976 40245 448269 8000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2570 . 2571) (nil fontified nil 2570 . 2571) (nil fontified nil 2569 . 2570) (nil fontified nil 2562 . 2569) (nil fontified nil 2561 . 2562) (nil fontified nil 2557 . 2561) (nil fontified nil 2556 . 2557) (nil fontified nil 2554 . 2556) (nil fontified nil 2542 . 2554) (2542 . 2571) (t 25976 40245 837956 229000)) nil (25976 40268 936160 679000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2550) 2542) nil (25976 40268 936155 846000) 0 nil])
([nil nil ((2575 . 2579)) nil (25976 40268 936153 917000) 0 nil])
([nil nil ((2579 . 2590)) nil (25976 40268 936152 534000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2589) (undo-tree-id800 . -1) 2590) nil (25976 40268 936150 25000) 0 nil])
([nil nil ((2589 . 2590)) nil (25976 40268 936134 611000) 0 nil])
([nil nil ((2589 . 2590)) nil (25976 40268 936133 311000) 0 nil])
([nil nil ((2591 . 2600)) nil (25976 40268 936131 128000) 0 nil])
([nil nil ((2600 . 2613)) nil (25976 40268 936125 796000) 0 nil])
([nil nil ((#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -2115) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("b" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -2116) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) 2117 (t 25976 40269 353956 978000)) nil (25976 40278 165482 17000) 0 nil])
([nil nil ((2115 . 2119)) nil (25976 40278 165399 102000) 0 nil])
([nil nil ((#("            if self.IF_NMDA:
                rec_nmda = self.EXP_DT_TAU_NMDA * rec_nmda + self.DT_TAU_NMDA * (self.Wnmda(A_u_x * rates))                
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (fontified t) 15 19 (face tree-sitter-hl-face:keyword fontified t) 19 20 (fontified t) 20 27 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 45 (fontified t) 45 53 (face tree-sitter-hl-face:variable fontified t) 53 54 (fontified t) 54 55 (face tree-sitter-hl-face:operator fontified t) 55 56 (fontified t) 56 60 (face tree-sitter-hl-face:keyword fontified t) 60 61 (fontified t) 61 76 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 76 77 (fontified t) 77 78 (face tree-sitter-hl-face:operator fontified t) 78 88 (fontified t) 88 89 (face tree-sitter-hl-face:operator fontified t) 89 90 (fontified t) 90 94 (face tree-sitter-hl-face:keyword fontified t) 94 95 (fontified t) 95 106 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 106 107 (fontified t) 107 108 (face tree-sitter-hl-face:operator fontified t) 108 109 (fontified t) 109 110 (face (rainbow-delimiters-depth-1-face) fontified t) 110 114 (face tree-sitter-hl-face:keyword fontified t) 114 115 (fontified t) 115 120 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 120 121 (face (rainbow-delimiters-depth-2-face) fontified t) 121 126 (face tree-sitter-hl-face:constructor fontified t) 126 127 (fontified t) 127 128 (face tree-sitter-hl-face:operator fontified t) 128 134 (fontified t) 134 135 (face (rainbow-delimiters-depth-2-face) fontified t) 135 136 (face (rainbow-delimiters-depth-1-face) fontified t) 136 152 (fontified t) 152 153 (fontified t)) . 1999) (undo-tree-id847 . -153) (undo-tree-id848 . -136) (undo-tree-id849 . -20) (undo-tree-id850 . -19) (undo-tree-id851 . -20) (undo-tree-id852 . -20) (undo-tree-id853 . -20) (undo-tree-id854 . -20) (undo-tree-id855 . -20) (undo-tree-id856 . -136) (undo-tree-id857 . -136) (undo-tree-id858 . -136) (undo-tree-id859 . -136) (undo-tree-id860 . -136) (undo-tree-id861 . -136) (undo-tree-id862 . -29) (t 25976 40278 569957 271000)) nil (25976 40287 425523 732000) 0 nil])
([nil nil ((#("            rec_nmda = 0
" 0 12 (fontified t) 12 20 (face tree-sitter-hl-face:variable fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t) 22 23 (fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 25 (fontified t)) . -2061) (undo-tree-id833 . -25) (undo-tree-id834 . -25) (undo-tree-id835 . -25) (undo-tree-id836 . -25) (undo-tree-id837 . -25) (undo-tree-id838 . -25) (undo-tree-id839 . -25) (undo-tree-id840 . -25) (undo-tree-id841 . -25) (undo-tree-id842 . -25) (undo-tree-id843 . -25) (undo-tree-id844 . -25) (undo-tree-id845 . -25) (undo-tree-id846 . -25) 2086) nil (25976 40287 425493 1000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1679) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (#(" " 0 1 (fontified t)) . -1680) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1681) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1682) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (#("c" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1683) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (#("_" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1684) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (#("n" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1685) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (#("m" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1686) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (#("d" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1687) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -1688) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) 1689 (t 25976 40287 809957 565000)) nil (25976 40296 127764 612000) 0 nil])
([nil nil ((#("        if self.IF_NMDA:
            net_input += rec_nmda
" 0 8 (fontified t) 8 10 (face tree-sitter-hl-face:keyword fontified t) 10 11 (fontified t) 11 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (fontified t) 16 23 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 23 24 (fontified t) 24 25 (fontified t rear-nonsticky t) 25 37 (fontified t) 37 46 (face tree-sitter-hl-face:variable fontified t) 46 47 (fontified t) 47 48 (face tree-sitter-hl-face:operator fontified t) 48 49 (face tree-sitter-hl-face:operator fontified t) 49 59 (fontified t)) . -2356) (undo-tree-id1262 . -59) 2415) nil (25976 40296 127671 275000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2097) (undo-tree-id1261 . -1) 2098) nil (25976 40296 127666 822000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2088) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (#(" " 0 1 (fontified t)) . -2089) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (#("r" 0 1 (fontified t)) . -2090) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("e" 0 1 (fontified t)) . -2091) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("c" 0 1 (fontified t)) . -2092) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#("_" 0 1 (fontified t)) . -2093) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (#("n" 0 1 (fontified t)) . -2094) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (#("m" 0 1 (fontified t)) . -2095) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (#("d" 0 1 (fontified t)) . -2096) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) 2097) nil (25976 40296 127632 838000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -12527) (undo-tree-id1323 . -1) 12528 (t 25976 40296 529957 842000)) nil (25976 40356 498685 274000) 0 nil])
([nil nil ((13469 . 13477) (t 25976 40356 901959 764000)) nil (25976 40360 233754 437000) 0 nil])
([nil nil ((12828 . 12841) (t 25976 40360 581959 881000)) nil (25976 40395 10578 201000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -12828) (undo-tree-id1357 . -1) 12829) nil (25976 40395 10576 110000) 0 nil])
([nil nil ((12922 . 12934)) nil (25976 40395 10573 47000) 0 nil])
([nil nil ((12934 . 12949)) nil (25976 40395 10571 663000) 0 nil])
([nil nil ((#("U" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -12947) (undo-tree-id1355 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -12948) (undo-tree-id1356 . -1) 12949) nil (25976 40395 10570 21000) 0 nil])
([nil nil ((12947 . 12950)) nil (25976 40395 10565 2000) 0 nil])
([nil nil ((12950 . 12967)) nil (25976 40395 10563 692000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13031 . 13032) (nil fontified nil 13031 . 13032) (nil fontified nil 13030 . 13031) (nil fontified nil 13029 . 13030) (nil fontified nil 13024 . 13029) (nil fontified nil 13023 . 13024) (nil fontified nil 13021 . 13023) (nil fontified nil 13020 . 13021) (nil fontified nil 13016 . 13020) (nil fontified nil 13015 . 13016) (nil fontified nil 13011 . 13015) (nil fontified nil 13004 . 13011) (nil fontified nil 13003 . 13004) (nil fontified nil 13002 . 13003) (nil fontified nil 13001 . 13002) (nil fontified nil 12993 . 13001) (nil fontified nil 12992 . 12993) (nil fontified nil 12989 . 12992) (nil fontified nil 12988 . 12989) (nil fontified nil 12984 . 12988) (nil fontified nil 12983 . 12984) (nil fontified nil 12982 . 12983) (nil fontified nil 12981 . 12982) (nil fontified nil 12980 . 12981) (nil fontified nil 12975 . 12980) (nil fontified nil 12972 . 12975) (nil fontified nil 12971 . 12972) (nil fontified nil 12968 . 12971) (nil fontified nil 12967 . 12968) (nil fontified nil 12963 . 12967) (nil fontified nil 12951 . 12963) (12951 . 13032)) nil (25976 40395 10560 477000) 0 nil])
([nil nil ((12951 . 12967) (#("            " 0 12 (fontified t)) . 12951)) nil (25976 40395 10549 135000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -13014) (undo-tree-id1334 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -13015) (undo-tree-id1335 . -1) (#("q" 0 1 (face tree-sitter-hl-face:property fontified t)) . -13016) (undo-tree-id1336 . -1) (#("r" 0 1 (face tree-sitter-hl-face:property fontified t)) . -13017) (undo-tree-id1337 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -13018) (undo-tree-id1338 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -13019) (undo-tree-id1339 . -1) (#("s" 0 1 (fontified t)) . -13020) (undo-tree-id1340 . -1) (#("e" 0 1 (fontified t)) . -13021) (undo-tree-id1341 . -1) (#("l" 0 1 (fontified t)) . -13022) (undo-tree-id1342 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -13023) (undo-tree-id1343 . -1) (#("." 0 1 (fontified t)) . -13024) (undo-tree-id1344 . -1) (#("K" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -13025) (undo-tree-id1345 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -13026) (undo-tree-id1346 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -13027) (undo-tree-id1347 . -1) (#("i" 0 1 (fontified nil)) . -13028) (undo-tree-id1348 . -1) (#("_" 0 1 (fontified nil)) . -13029) (undo-tree-id1349 . -1) (#("p" 0 1 (fontified nil)) . -13030) (undo-tree-id1350 . -1) (#("o" 0 1 (fontified t)) . -13031) (undo-tree-id1351 . -1) (#("p" 0 1 (fontified t)) . -13032) (undo-tree-id1352 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -13033) (undo-tree-id1353 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -13034) (undo-tree-id1354 . -1) 13035) nil (25976 40395 10543 75000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -13009) (undo-tree-id1329 . -1) (#("o" 0 1 (fontified t)) . -13010) (undo-tree-id1330 . -1) (#("r" 0 1 (fontified t)) . -13011) (undo-tree-id1331 . -1) (#("c" 0 1 (fontified t)) . -13012) (undo-tree-id1332 . -1) (#("h" 0 1 (fontified t)) . -13013) (undo-tree-id1333 . -1) 13014) nil (25976 40395 10498 482000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 13018) (13017 . 13018) (13016 . 13018) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil)) . -13016) (13009 . 13017)) nil (25976 40395 10487 279000) 0 nil])
([nil nil ((13017 . 13021)) nil (25976 40395 10484 344000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -13020) (undo-tree-id1328 . -1) 13021) nil (25976 40395 10482 367000) 0 nil])
([nil nil ((#("^" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -13019) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) 13020) nil (25976 40395 10476 932000) 0 nil])
([nil nil ((13019 . 13022)) nil (25976 40395 10445 556000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -13036) (undo-tree-id1407 . -4) (undo-tree-id1408 . -4) (undo-tree-id1409 . -4) (undo-tree-id1410 . -4) (undo-tree-id1411 . -4) (undo-tree-id1412 . -4) (undo-tree-id1413 . -4) (undo-tree-id1414 . -4) (undo-tree-id1415 . -4) (undo-tree-id1416 . -4) (undo-tree-id1417 . -4) (undo-tree-id1418 . -4) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) 13040 (t 25976 40395 397960 989000)) nil (25976 40401 401854 250000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -13032) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -4) (undo-tree-id1377 . -4) (undo-tree-id1378 . -4) (undo-tree-id1379 . -4) (undo-tree-id1380 . -4) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -4) (undo-tree-id1384 . -4) (undo-tree-id1385 . -4) (undo-tree-id1386 . -4) (undo-tree-id1387 . -4) (undo-tree-id1388 . -4) (undo-tree-id1389 . -4) (undo-tree-id1390 . -4) (undo-tree-id1391 . -4) (undo-tree-id1392 . -4) (undo-tree-id1393 . -4) (undo-tree-id1394 . -4) (undo-tree-id1395 . -4) (undo-tree-id1396 . -4) (undo-tree-id1397 . -4) (undo-tree-id1398 . -4) (undo-tree-id1399 . -4) (undo-tree-id1400 . -4) (undo-tree-id1401 . -4) (undo-tree-id1402 . -4) (undo-tree-id1403 . -4) (undo-tree-id1404 . -4) (undo-tree-id1405 . -4) (undo-tree-id1406 . -4) 13036) nil (25976 40401 401811 690000) 0 nil])
([nil nil ((13009 . 13014)) nil (25976 40401 401751 873000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -13013) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) 13014) nil (25976 40401 401748 292000) 0 nil])
([nil nil ((13013 . 13014)) nil (25976 40401 401710 350000) 0 nil])
([nil nil ((13029 . 13045) (#("        " 0 8 (fontified t)) . 13029) (undo-tree-id1447 . -8) (undo-tree-id1448 . -8) (undo-tree-id1449 . -8) (undo-tree-id1450 . -8) (undo-tree-id1451 . -8) (undo-tree-id1452 . -8) (undo-tree-id1453 . -8) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) 13037 (t 25976 40401 797961 192000)) nil (25976 40403 582250 532000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -13041) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) 13045) nil (25976 40403 582221 160000) 0 nil])
([nil nil ((#("            if self.SYN_DYN:
                self.Jab[:, i_pop] = self.Jab[:, i_pop] / self.TAU_SYN[i_pop]
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (fontified t) 15 19 (face tree-sitter-hl-face:keyword fontified t) 19 20 (fontified t) 20 27 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 45 (fontified t) 45 49 (face tree-sitter-hl-face:keyword fontified t) 49 50 (fontified t) 50 53 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 57 (fontified t) 57 62 (face tree-sitter-hl-face:variable fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 64 (fontified t) 64 65 (face tree-sitter-hl-face:operator fontified t) 65 66 (fontified t) 66 70 (face tree-sitter-hl-face:keyword fontified t) 70 71 (fontified t) 71 74 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) fontified t) 84 85 (fontified t) 85 86 (face tree-sitter-hl-face:operator fontified t) 86 87 (fontified t) 87 91 (face tree-sitter-hl-face:keyword fontified t) 91 92 (fontified t) 92 99 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 99 100 (face (rainbow-delimiters-depth-1-face) fontified t) 100 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t) 106 107 (rear-nonsticky t fontified t)) . 12922) (undo-tree-id1493 . -107) (undo-tree-id1494 . -29) (undo-tree-id1495 . -29) (undo-tree-id1496 . -87) (undo-tree-id1497 . -107) (undo-tree-id1498 . -107) (undo-tree-id1499 . -107) (undo-tree-id1500 . -107) (undo-tree-id1501 . -107) (undo-tree-id1502 . -107) (undo-tree-id1503 . -107) (undo-tree-id1504 . -107) (undo-tree-id1505 . -107) (undo-tree-id1506 . -29) (undo-tree-id1507 . -107) (undo-tree-id1508 . -29) (undo-tree-id1509 . -29) (undo-tree-id1510 . -29) (undo-tree-id1511 . -29) (undo-tree-id1512 . -29) (undo-tree-id1513 . -29) (undo-tree-id1514 . -29) (undo-tree-id1515 . -29) (undo-tree-id1516 . -29) (undo-tree-id1517 . -29) (t 25976 40403 973961 262000)) nil (25976 40440 155805 795000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12930) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) (undo-tree-id1475 . -4) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) (undo-tree-id1478 . -4) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -4) (undo-tree-id1485 . -4) (undo-tree-id1486 . -4) (undo-tree-id1487 . -4) (undo-tree-id1488 . -4) (undo-tree-id1489 . -4) (undo-tree-id1490 . -4) (undo-tree-id1491 . -4) (undo-tree-id1492 . -4) 12934) nil (25976 40440 155758 989000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12835) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (#(" " 0 1 (fontified t)) . -12836) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (#(" " 0 1 (fontified t)) . -12837) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (#(" " 0 1 (fontified t)) . -12838) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (#(" " 0 1 (fontified t)) . -12839) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) 12840 (t 25976 40440 545962 425000)) nil (25976 40491 736409 824000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12828) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (#(" " 0 1 (fontified t)) . -12829) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (#(" " 0 1 (fontified t)) . -12830) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (#(" " 0 1 (fontified t)) . -12831) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (#(" " 0 1 (fontified t)) . -12832) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (#(" " 0 1 (fontified t)) . -12833) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (#(" " 0 1 (fontified t)) . -12834) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) 12835) nil (25976 40491 736242 777000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 330) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 330) (t 25976 40492 33964 64000)) nil (25976 40512 200363 496000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2057) (undo-tree-id2315 . -4) 2061 (t 25976 40512 457964 714000)) nil (25976 40589 409731 890000) 0 nil])
([nil nil ((1031 . 1035) (t 25976 40589 681967 171000)) nil (25976 40861 138160 859000) 0 nil])
([nil nil ((#("I" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1034) (undo-tree-id2361 . -1) 1035) nil (25976 40861 138158 978000) 0 nil])
([nil nil ((1034 . 1038)) nil (25976 40861 138155 638000) 0 nil])
([nil nil ((1038 . 1041)) nil (25976 40861 138154 412000) 0 nil])
([nil nil ((#("U" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1039) (undo-tree-id2359 . -1) (#("F" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1040) (undo-tree-id2360 . -1) 1041) nil (25976 40861 138152 754000) 0 nil])
([nil nil ((1039 . 1045)) nil (25976 40861 138148 33000) 0 nil])
([nil nil ((#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1044) (undo-tree-id2358 . -1) 1045) nil (25976 40861 138146 487000) 0 nil])
([nil nil ((1044 . 1046)) nil (25976 40861 138143 470000) 0 nil])
([nil nil ((1046 . 1055)) nil (25976 40861 138142 315000) 0 nil])
([nil nil ((1046 . 1047)) nil (25976 40861 138141 4000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1155 . 1156) (nil fontified nil 1155 . 1156) (nil fontified nil 1154 . 1155) (nil fontified nil 1148 . 1154) (nil fontified nil 1147 . 1148) (nil fontified nil 1143 . 1147) (nil fontified nil 1142 . 1143) (nil fontified nil 1136 . 1142) (nil fontified nil 1134 . 1136) (nil fontified nil 1129 . 1134) (nil fontified nil 1128 . 1129) (nil fontified nil 1124 . 1128) (nil fontified nil 1123 . 1124) (nil fontified nil 1118 . 1123) (nil fontified nil 1116 . 1118) (nil fontified nil 1112 . 1116) (nil fontified nil 1111 . 1112) (nil fontified nil 1107 . 1111) (nil fontified nil 1105 . 1107) (nil fontified nil 1097 . 1105) (nil fontified nil 1096 . 1097) (nil fontified nil 1092 . 1096) (nil fontified nil 1090 . 1092) (nil fontified nil 1082 . 1090) (nil fontified nil 1081 . 1082) (nil fontified nil 1077 . 1081) (nil fontified nil 1076 . 1077) (nil fontified nil 1070 . 1076) (nil fontified nil 1066 . 1070) (nil fontified nil 1065 . 1066) (nil fontified nil 1064 . 1065) (nil fontified nil 1061 . 1064) (nil fontified nil 1060 . 1061) (nil fontified nil 1056 . 1060) (nil fontified nil 1048 . 1056) (1048 . 1156)) nil (25976 40861 138137 433000) 0 nil])
([nil nil ((1056 . 1060) 1048) nil (25976 40861 138124 979000) 0 nil])
([nil nil ((#("a" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1066) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (#("b" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1067) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) 1068) nil (25976 40861 138119 653000) 0 nil])
([nil nil ((1066 . 1070)) nil (25976 40861 137975 322000) 0 nil])
([nil nil ((1066 . 1067)) nil (25976 40861 137969 403000) 0 nil])
([nil nil ((1104 . 1106) (t 25976 40861 537975 822000)) nil (25976 40867 877430 220000) 0 nil])
([nil nil ((#("a" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1105) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) 1106) nil (25976 40867 877427 880000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1104) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) 1105) nil (25976 40867 877418 114000) 0 nil])
([nil nil ((1104 . 1106)) nil (25976 40867 877391 511000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1104) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (#("a" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1105) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) 1106) nil (25976 40867 877382 539000) 0 nil])
([nil nil ((#("U" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1108) (undo-tree-id2479 . -1) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1109) (undo-tree-id2480 . -1) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1110) (undo-tree-id2481 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1111) (undo-tree-id2482 . -1) 1112 (t 25976 40868 285976 37000)) nil (25976 40885 48428 556000) 0 nil])
([nil nil ((1108 . 1109)) nil (25976 40885 48419 491000) 0 nil])
([nil nil ((#("u" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1108) (undo-tree-id2478 . -1) 1109) nil (25976 40885 48417 782000) 0 nil])
([nil nil ((1108 . 1112)) nil (25976 40885 48414 606000) 0 nil])
([nil nil ((#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1092) (undo-tree-id2473 . -1) (#("U" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1093) (undo-tree-id2474 . -1) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1094) (undo-tree-id2475 . -1) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1095) (undo-tree-id2476 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1096) (undo-tree-id2477 . -1) 1097) nil (25976 40885 48411 315000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1095) (1094 . 1095) (1093 . 1095) (#("[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -1093) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (1092 . 1094)) nil (25976 40885 48398 922000) 0 nil])
([nil nil ((1094 . 1095)) nil (25976 40885 48391 956000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1089) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (#("_" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1090) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) 1091) nil (25976 40885 48383 550000) 0 nil])
([nil nil ((#("T" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1116) (undo-tree-id2483 . -1) (#("r" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1117) (undo-tree-id2484 . -1) (#("u" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -1118) (undo-tree-id2485 . -1) 1119 (t 25976 40885 489976 584000)) nil (25976 40892 407817 324000) 0 nil])
([nil nil ((1116 . 1120)) nil (25976 40892 407792 885000) 0 nil])
([nil nil ((1492 . 1508) (#("        " 0 8 (fontified t)) . 1492) (undo-tree-id2529 . -8) 1500 (t 25976 40892 817976 818000)) nil (25976 40915 484995 783000) 0 nil])
([nil nil ((1493 . 1509) (#("                " 0 16 (fontified nil)) . 1492) (undo-tree-id2528 . -16) (1508 . 1509)) nil (25976 40915 484990 295000) 0 nil])
([nil nil ((1509 . 1512)) nil (25976 40915 484986 243000) 0 nil])
([nil nil ((1512 . 1515)) nil (25976 40915 484984 732000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1514) (undo-tree-id2527 . -1) 1515) nil (25976 40915 484982 835000) 0 nil])
([nil nil ((1514 . 1520)) nil (25976 40915 484979 369000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1519) (undo-tree-id2526 . -1) 1520) nil (25976 40915 484977 457000) 0 nil])
([nil nil ((1519 . 1523)) nil (25976 40915 484973 758000) 0 nil])
([nil nil ((#("n" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1519) (undo-tree-id2522 . -1) (#("m" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1520) (undo-tree-id2523 . -1) (#("d" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1521) (undo-tree-id2524 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1522) (undo-tree-id2525 . -1) 1523) nil (25976 40915 484971 267000) 0 nil])
([nil nil ((1519 . 1523)) nil (25976 40915 484960 302000) 0 nil])
([nil nil ((#("n" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1067) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (#("m" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1068) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (#("d" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1069) (undo-tree-id2520 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1070) (undo-tree-id2521 . -1) 1071) nil (25976 40915 484955 107000) 0 nil])
([nil nil ((1067 . 1071)) nil (25976 40915 484882 937000) 0 nil])
([nil nil ((1523 . 1524)) nil (25976 40915 484880 730000) 0 nil])
([nil nil ((1524 . 1545)) nil (25976 40915 484875 298000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1693 . 1694) (nil fontified nil 1693 . 1694) (nil fontified nil 1691 . 1693) (nil fontified nil 1690 . 1691) (nil fontified nil 1689 . 1690) (nil fontified nil 1688 . 1689) (nil fontified nil 1687 . 1688) (nil fontified nil 1686 . 1687) (nil fontified nil 1685 . 1686) (nil fontified nil 1684 . 1685) (nil fontified nil 1683 . 1684) (nil fontified nil 1677 . 1683) (nil fontified nil 1676 . 1677) (nil fontified nil 1670 . 1676) (nil fontified nil 1669 . 1670) (nil fontified nil 1665 . 1669) (nil fontified nil 1662 . 1665) (nil fontified nil 1661 . 1662) (nil fontified nil 1656 . 1661) (nil fontified nil 1655 . 1656) (nil fontified nil 1649 . 1655) (nil fontified nil 1648 . 1649) (nil fontified nil 1644 . 1648) (nil fontified nil 1605 . 1644) (nil fontified nil 1604 . 1605) (nil fontified nil 1603 . 1604) (nil fontified nil 1602 . 1603) (nil fontified nil 1601 . 1602) (nil fontified nil 1595 . 1601) (nil fontified nil 1594 . 1595) (nil fontified nil 1588 . 1594) (nil fontified nil 1587 . 1588) (nil fontified nil 1583 . 1587) (nil fontified nil 1580 . 1583) (nil fontified nil 1579 . 1580) (nil fontified nil 1574 . 1579) (nil fontified nil 1573 . 1574) (nil fontified nil 1567 . 1573) (nil fontified nil 1566 . 1567) (nil fontified nil 1562 . 1566) (nil fontified nil 1561 . 1562) (nil fontified nil 1557 . 1561) (nil fontified nil 1556 . 1557) (nil fontified nil 1550 . 1556) (nil fontified nil 1549 . 1550) (nil fontified nil 1546 . 1549) (nil fontified nil 1545 . 1546) (nil fontified nil 1541 . 1545) (nil fontified nil 1525 . 1541) (1525 . 1694) (t 25976 40915 961977 554000)) nil (25976 40925 351773 983000) 0 nil])
([nil nil ((1541 . 1545) 1525) nil (25976 40925 351756 143000) 0 nil])
([nil nil ((1611 . 1652) (#("                                     " 0 37 (fontified t)) . 1611) (undo-tree-id2531 . -20) 1631) nil (25976 40925 351753 698000) 0 nil])
([nil nil ((#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1551) (undo-tree-id2530 . -1) 1552) nil (25976 40925 351747 309000) 0 nil])
([nil nil ((#("b" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1551)) nil (25976 40925 351733 216000) 0 nil])
([nil nil ((1551 . 1556)) nil (25976 40925 351730 706000) 0 nil])
([nil nil ((1655 . 1658) 1645) nil (25976 40925 351725 468000) 0 nil])
([nil nil ((1523 . 1524) (t 25976 40925 757977 866000)) nil (25976 40942 133364 282000) 0 nil])
([nil nil ((1524 . 1525)) nil (25976 40942 133361 967000) 0 nil])
([nil nil ((#("&" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1524) (undo-tree-id2532 . -1) 1525) nil (25976 40942 133358 392000) 0 nil])
([nil nil ((1524 . 1536)) nil (25976 40942 133340 88000) 0 nil])
([nil nil ((1536 . 1537) (t 25976 40942 569978 401000)) nil (25976 40948 481418 947000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1738) (undo-tree-id2533 . -4) (undo-tree-id2534 . -4) (undo-tree-id2535 . -4) (undo-tree-id2536 . -4) (undo-tree-id2537 . -4) (undo-tree-id2538 . -4) (undo-tree-id2539 . -4) (undo-tree-id2540 . -4) (undo-tree-id2541 . -4) (undo-tree-id2542 . -4) (undo-tree-id2543 . -4) (undo-tree-id2544 . -4) (undo-tree-id2545 . -4) 1742 (t 25976 40948 901978 602000)) nil (25976 40951 724757 591000) 0 nil])
([nil nil ((1739 . 1759) (#("        " 0 8 (fontified t)) . 1739) (undo-tree-id2558 . -8) 1755 (t 25976 40952 161978 706000)) nil (25976 40956 338999 626000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1755) (undo-tree-id2556 . -4) (undo-tree-id2557 . -4) 1767) nil (25976 40956 338994 902000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1751) (undo-tree-id2552 . -4) (undo-tree-id2553 . -4) (undo-tree-id2554 . -4) (undo-tree-id2555 . -4) 1763) nil (25976 40956 338988 603000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1747) (undo-tree-id2546 . -4) (undo-tree-id2547 . -4) (undo-tree-id2548 . -4) (undo-tree-id2549 . -4) (undo-tree-id2550 . -4) (undo-tree-id2551 . -4) 1759) nil (25976 40956 338975 922000) 0 nil])
([nil nil ((#("self.Na[0]" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 7 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 9 (face tree-sitter-hl-face:number fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1084) (undo-tree-id2570 . -10) 1094 (t 25976 40956 749978 852000)) nil (25976 41049 949356 541000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1084) (#("," 0 1 (fontified t)) . 1084)) nil (25976 41049 949352 151000) 0 nil])
([nil nil ((1097 . 1099)) nil (25976 41049 949350 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1108 . 1109) (nil fontified nil 1108 . 1109) (nil fontified nil 1107 . 1108) (nil fontified nil 1106 . 1107) (nil fontified nil 1104 . 1106) (nil fontified nil 1103 . 1104) (nil fontified nil 1099 . 1103) (1099 . 1109)) nil (25976 41049 949348 318000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1528) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) 1529) nil (25976 41049 949341 957000) 0 nil])
([nil nil ((1528 . 1529)) nil (25976 41049 949300 500000) 0 nil])
([nil nil ((1307 . 1323) (#("                " 0 16 (fontified nil)) . 1306) (undo-tree-id2680 . -16) (undo-tree-id2681 . -16) (undo-tree-id2682 . -16) (undo-tree-id2683 . -16) (undo-tree-id2684 . -16) (undo-tree-id2685 . -16) (undo-tree-id2686 . -16) (undo-tree-id2687 . -16) (undo-tree-id2688 . -16) (undo-tree-id2689 . -16) (undo-tree-id2690 . -16) (1322 . 1323) (t 25976 41050 301981 829000)) nil (25976 41068 60873 477000) 0 nil])
([nil nil ((1323 . 1324)) nil (25976 41068 60854 325000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1323) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) 1324) nil (25976 41068 60851 533000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1319) (undo-tree-id2634 . -4) (undo-tree-id2635 . -4) (undo-tree-id2636 . -4) (undo-tree-id2637 . -4) (undo-tree-id2638 . -4) (undo-tree-id2639 . -4) (undo-tree-id2640 . -4) (undo-tree-id2641 . -4) (undo-tree-id2642 . -4) (undo-tree-id2643 . -4) (undo-tree-id2644 . -4) (undo-tree-id2645 . -4) (undo-tree-id2646 . -4) (undo-tree-id2647 . -4) (undo-tree-id2648 . -4) (undo-tree-id2649 . -4) (undo-tree-id2650 . -4) (undo-tree-id2651 . -4) (undo-tree-id2652 . -4) (undo-tree-id2653 . -4) (undo-tree-id2654 . -4) (undo-tree-id2655 . -4) (undo-tree-id2656 . -4) (undo-tree-id2657 . -4) (undo-tree-id2658 . -4) (undo-tree-id2659 . -4) (undo-tree-id2660 . -4) (undo-tree-id2661 . -4) (undo-tree-id2662 . -4) (undo-tree-id2663 . -4) (undo-tree-id2664 . -4) (undo-tree-id2665 . -4) (undo-tree-id2666 . -4) (undo-tree-id2667 . -4) (undo-tree-id2668 . -4) 1323) nil (25976 41068 60831 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1306) (undo-tree-id2617 . 1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) 1307) nil (25976 41068 60776 419000) 0 nil])
([nil nil ((1306 . 1322) (#("            " 0 12 (fontified t)) . 1306) (undo-tree-id2571 . 12) (undo-tree-id2572 . -12) (undo-tree-id2573 . -12) (undo-tree-id2574 . -12) (undo-tree-id2575 . -12) (undo-tree-id2576 . -12) (undo-tree-id2577 . -12) (undo-tree-id2578 . -12) (undo-tree-id2579 . -12) (undo-tree-id2580 . -12) (undo-tree-id2581 . -12) (undo-tree-id2582 . -12) (undo-tree-id2583 . -12) (undo-tree-id2584 . -12) (undo-tree-id2585 . -12) (undo-tree-id2586 . -12) (undo-tree-id2587 . -12) (undo-tree-id2588 . -12) (undo-tree-id2589 . -12) (undo-tree-id2590 . -12) (undo-tree-id2591 . -12) (undo-tree-id2592 . -12) (undo-tree-id2593 . -12) (undo-tree-id2594 . -12) (undo-tree-id2595 . -12) (undo-tree-id2596 . -12) (undo-tree-id2597 . -12) (undo-tree-id2598 . -12) (undo-tree-id2599 . -12) (undo-tree-id2600 . -12) (undo-tree-id2601 . -12) (undo-tree-id2602 . -12) (undo-tree-id2603 . -12) (undo-tree-id2604 . -12) (undo-tree-id2605 . -12) (undo-tree-id2606 . -12) (undo-tree-id2607 . -12) (undo-tree-id2608 . -12) (undo-tree-id2609 . -12) (undo-tree-id2610 . -12) (undo-tree-id2611 . -12) (undo-tree-id2612 . -12) (undo-tree-id2613 . -12) (undo-tree-id2614 . -12) (undo-tree-id2615 . -12) (undo-tree-id2616 . -12)) nil (25976 41068 60741 459000) 0 nil])
([nil nil ((1169 . 1173) 1168 (t 25976 41068 497982 408000)) nil (25976 41134 388738 714000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1180) (1179 . 1180) (1178 . 1180) (#("(" 0 1 (fontified nil)) . -1178) (1173 . 1179)) nil (25976 41134 388735 499000) 0 nil])
([nil nil ((1179 . 1186)) nil (25976 41134 388731 869000) 0 nil])
([nil nil ((#("M" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1185) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) 1186) nil (25976 41134 388727 387000) 0 nil])
([nil nil ((1185 . 1189)) nil (25976 41134 388411 963000) 0 nil])
([nil nil ((1190 . 1203)) nil (25976 41134 388404 553000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1562) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) 1563 (t 25976 41134 705984 515000)) nil (25976 41138 338934 84000) 0 nil])
([nil nil ((1562 . 1563)) nil (25976 41138 338837 990000) 0 nil])
([nil nil ((1185 . 1186) (t 25976 41138 745984 644000)) nil (25976 41148 701067 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1571) (t 25976 41149 105984 973000)) nil (25976 41234 310177 731000) 0 nil])
([nil nil ((1572 . 1593) (t 25976 41234 765987 699000)) nil (25976 41244 508271 316000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 1600) (1599 . 1600) (1598 . 1600) (#("(" 0 1 (fontified nil)) . -1598) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (1593 . 1599)) nil (25976 41244 508268 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1621 . 1622) (nil fontified nil 1618 . 1622) (nil fontified nil 1617 . 1618) (nil fontified nil 1611 . 1617) (nil fontified nil 1610 . 1611) (nil fontified nil 1604 . 1610) (nil fontified nil 1603 . 1604) (nil fontified nil 1599 . 1603) (1599 . 1622)) nil (25976 41244 508249 679000) 0 nil])
([nil nil ((1622 . 1628)) nil (25976 41302 14163 739000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1563) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) 1564 (t 25976 41303 453989 885000)) nil (25976 41338 240324 314000) 0 nil] [nil nil ((#("                    print(self.W_NMDA.weight.data.shape)
" 0 20 (fontified t) 20 25 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 30 (face tree-sitter-hl-face:keyword fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 37 38 (fontified t) 38 44 (face tree-sitter-hl-face:property fontified t) 44 45 (fontified t) 45 48 (face tree-sitter-hl-face:property fontified t) 48 49 (face tree-sitter-hl-face:property rear-nonsticky t fontified t) 49 50 (fontified t) 50 55 (face tree-sitter-hl-face:property fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (fontified t)) . -1573) (undo-tree-id2722 . -55) (undo-tree-id2723 . -57) (undo-tree-id2724 . -26) (undo-tree-id2725 . -55) (undo-tree-id2726 . -55) (undo-tree-id2728 . -55) (undo-tree-id2730 . -55) (undo-tree-id2732 . -55) (undo-tree-id2734 . -55) (undo-tree-id2736 . -56) (undo-tree-id2738 . -56) (undo-tree-id2740 . -56) (undo-tree-id2742 . -56) (undo-tree-id2744 . -56) (undo-tree-id2746 . -56) (undo-tree-id2748 . -56) (undo-tree-id2749 . -55) (undo-tree-id2751 . -57) (undo-tree-id2753 . -57) (undo-tree-id2755 . -57) (undo-tree-id2757 . -57) (undo-tree-id2758 . -55) (undo-tree-id2759 . -57) (undo-tree-id2761 . -57) (undo-tree-id2763 . -57) 1630 (t 25976 41244 909988 22000)) ((1573 . 1630) (t 25976 41273 921988 945000)) (25976 41273 512710 405000) 0 nil])
([nil nil ((1563 . 1564)) nil (25976 41338 240286 693000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t)) . 1686)) nil (25976 41338 240285 312000) 0 nil])
([nil nil ((1686 . 1687)) nil (25976 41338 240284 171000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1707)) nil (25976 41338 240282 829000) 0 nil])
([nil nil ((1707 . 1708)) nil (25976 41338 240281 456000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1796) (undo-tree-id2766 . -1) 1797) nil (25976 41338 240279 970000) 0 nil])
([nil nil ((1796 . 1797)) nil (25976 41338 240276 633000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1796) (undo-tree-id2765 . -1) 1797) nil (25976 41338 240274 809000) 0 nil])
([nil nil ((1796 . 1797)) nil (25976 41419 537770 658000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1686) (undo-tree-id2845 . -1) 1687) nil (25976 41428 790338 522000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -1775) (undo-tree-id2764 . -1) 1776) ((1775 . 1776)) (25976 41419 19478 989000) 0 nil])
([nil nil ((1686 . 1687)) nil (25976 41428 790335 411000) 0 nil])
([nil nil ((1775 . 1776)) ((#("i" 0 1 (fontified t)) . 1775) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1)) (25976 41418 645389 396000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1686) (undo-tree-id2844 . -1) 1687) nil (25976 41428 790333 999000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1686) (t 25976 41382 877992 412000)) ((1686 . 1687)) (25976 41418 423631 556000) 0 nil] [nil nil ((1812 . 1814) (t 25976 41338 637991 5000)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1812) (undo-tree-id2791 . -2) (undo-tree-id2792 . -2) (undo-tree-id2793 . -2) (undo-tree-id2794 . -2)) (25976 41380 745342 344000) 0 nil])
([nil nil ((1686 . 1687)) nil (25976 41428 790308 571000) 0 nil])
([nil nil ((1686 . 1687)) ((#("i" 0 1 (fontified t)) . 1686)) (25976 41418 74338 770000) 0 nil])
([nil nil ((1526 . 1528) (t 25976 41347 881991 299000)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1526)) (25976 41380 371448 383000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1706) (undo-tree-id2843 . -1) 1707) nil (25976 41428 790307 16000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1707) (undo-tree-id2813 . -1) 1708) ((1707 . 1708)) (25976 41417 804645 457000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1428) (undo-tree-id2790 . -1) 1429) ((1428 . 1429)) (25976 41379 981106 188000) 0 nil])
([nil nil ((1706 . 1708) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -1706) (1706 . 1707)) nil (25976 41428 790302 185000) 0 nil])
([nil nil ((1707 . 1708)) ((#("i" 0 1 (fontified t)) . 1707)) (25976 41417 414284 509000) 0 nil])
([nil nil ((1428 . 1429)) ((#("j" 0 1 (fontified t)) . 1428)) (25976 41379 600282 165000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 1707)) nil (25976 41428 790300 174000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1796) (undo-tree-id2812 . -1) 1797) ((1796 . 1797)) (25976 41417 228087 850000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1510) (undo-tree-id2789 . -1) 1511) ((1510 . 1511)) (25976 41379 393381 428000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1707)) nil (25976 41428 790298 320000) 0 nil])
([nil nil ((1796 . 1797)) ((#("j" 0 1 (fontified t)) . 1796)) (25976 41417 68976 980000) 0 nil])
([nil nil ((1510 . 1511)) ((#("i" 0 1 (fontified t)) . 1510)) (25976 41379 228329 243000) 0 nil])
([nil nil ((1707 . 1708)) nil (25976 41428 790296 988000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1775) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2802 . -1) (undo-tree-id2804 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2809 . -1) (undo-tree-id2811 . -1) 1776) ((1775 . 1776)) (25976 41416 909076 516000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1489) (undo-tree-id2788 . -1) 1490) ((1489 . 1490)) (25976 41379 94150 796000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1796) (undo-tree-id2842 . -1) 1797) nil (25976 41428 790293 785000) 0 nil])
([nil nil ((1775 . 1776)) ((#("j" 0 1 (fontified t)) . 1775)) (25976 41416 752338 814000) 0 nil])
([nil nil ((1489 . 1490)) ((#("i" 0 1 (fontified t)) . 1489)) (25976 41378 952797 384000) 0 nil])
([nil nil ((1796 . 1797)) nil (25976 41428 790274 576000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1563) (undo-tree-id2815 . -1) (undo-tree-id2817 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2822 . -1) (undo-tree-id2824 . -1) 1564 (t 25976 41394 409992 779000)) ((1563 . 1564)) (25976 41416 576847 829000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1407) (undo-tree-id2785 . -1) (undo-tree-id2787 . -1) 1408) ((1407 . 1408)) (25976 41378 794895 769000) 0 nil])
([nil nil ((1812 . 1814) (t 25976 41429 193993 886000)) nil (25976 41440 502297 517000) 0 nil])
([nil nil ((1563 . 1564)) ((#("i" 0 1 (fontified t)) . 1563) (t 25976 41399 481992 941000)) (25976 41399 54805 650000) 0 nil])
([nil nil ((1407 . 1408)) ((#("j" 0 1 (fontified t)) . 1407) (t 25976 41365 313991 854000)) (25976 41364 887368 454000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1812) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1813) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) 1814) nil (25976 41440 502290 3000) 0 nil])
nil
nil
([nil nil ((#("j" 0 1 (fontified t)) . 1563) (t 25976 41440 901994 259000)) nil (25976 41444 526741 507000) 0 nil])
([nil nil ((1563 . 1564)) nil (25976 41444 526734 60000) 0 nil])
([nil nil ((1629 . 1650) (t 25976 41444 957994 388000)) nil (25976 41453 736246 464000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1657) (1656 . 1657) (1655 . 1657) (#("(" 0 1 (fontified nil)) . -1655) (1650 . 1656)) nil (25976 41453 736242 388000) 0 nil])
([nil nil ((1656 . 1664)) nil (25976 41453 736234 311000) 0 nil])
([nil nil ((#("                    print(self.W_NMDA.weight.data.shape)
                    print(W0.shape)
" 0 20 (fontified t) 20 25 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 30 (face tree-sitter-hl-face:keyword fontified t) 30 31 (fontified t) 31 37 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 37 38 (fontified t) 38 44 (face tree-sitter-hl-face:property fontified t) 44 45 (fontified t) 45 48 (face tree-sitter-hl-face:property fontified t) 48 49 (face tree-sitter-hl-face:property rear-nonsticky t fontified t) 49 50 (fontified t) 50 55 (face tree-sitter-hl-face:property fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (fontified t) 57 77 (fontified t) 77 82 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t) 83 85 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 85 86 (fontified t) 86 91 (face tree-sitter-hl-face:property fontified t) 91 92 (face (rainbow-delimiters-depth-1-face) fontified t) 92 93 (fontified t)) . -1573) (undo-tree-id2863 . -91) (undo-tree-id2864 . -26) (undo-tree-id2865 . -55) (undo-tree-id2866 . -55) (undo-tree-id2867 . -55) (undo-tree-id2868 . -93) (undo-tree-id2869 . -93) (undo-tree-id2870 . -93) (undo-tree-id2871 . -93) (undo-tree-id2872 . -93) (undo-tree-id2873 . -91) (undo-tree-id2874 . -91) (undo-tree-id2875 . -91) (undo-tree-id2876 . -92) (undo-tree-id2877 . -57) (undo-tree-id2878 . -92) (undo-tree-id2879 . -92) (undo-tree-id2880 . -92) (undo-tree-id2881 . -92) (undo-tree-id2882 . -92) (undo-tree-id2883 . -92) (undo-tree-id2884 . -92) (undo-tree-id2885 . -92) (undo-tree-id2886 . -92) (undo-tree-id2887 . -92) (undo-tree-id2888 . -92) (undo-tree-id2889 . -92) (undo-tree-id2890 . -92) (undo-tree-id2891 . -92) (undo-tree-id2892 . -92) (undo-tree-id2893 . -92) (undo-tree-id2894 . -92) (undo-tree-id2895 . -92) (undo-tree-id2896 . -92) (undo-tree-id2897 . -92) (undo-tree-id2898 . -92) (undo-tree-id2899 . -92) (undo-tree-id2900 . -92) (undo-tree-id2901 . -92) (undo-tree-id2902 . -92) (undo-tree-id2903 . -92) (undo-tree-id2904 . -92) (undo-tree-id2905 . -57) (undo-tree-id2906 . -92) (undo-tree-id2907 . -57) (undo-tree-id2908 . -57) (undo-tree-id2909 . -57) (undo-tree-id2910 . -57) (undo-tree-id2911 . -57) (undo-tree-id2912 . -57) (undo-tree-id2913 . -57) (undo-tree-id2914 . -57) (undo-tree-id2915 . -57) (undo-tree-id2916 . -57) (undo-tree-id2917 . -57) (undo-tree-id2918 . -57) (undo-tree-id2919 . -57) (undo-tree-id2920 . -57) (undo-tree-id2921 . -57) (undo-tree-id2922 . -57) (undo-tree-id2923 . -91) (undo-tree-id2924 . -57) (undo-tree-id2925 . -57) (undo-tree-id2926 . -57) (undo-tree-id2927 . -57) (undo-tree-id2928 . -57) (undo-tree-id2929 . -57) (undo-tree-id2930 . -57) (undo-tree-id2931 . -91) (undo-tree-id2932 . -93) (undo-tree-id2933 . -57) (undo-tree-id2934 . -57) (undo-tree-id2935 . -57) (undo-tree-id2936 . -93) (undo-tree-id2937 . -93) (undo-tree-id2938 . -57) (undo-tree-id2939 . -93) 1666 (t 25976 41454 173994 681000)) nil (25976 41528 788833 93000) 0 nil])
([nil nil ((1772 . 1776) (t 25976 41529 201997 69000)) nil (25976 41534 658988 30000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1772) (undo-tree-id2945 . -4) 1776) nil (25976 41534 658986 77000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1768) (undo-tree-id2944 . -4) 1772) nil (25976 41534 658982 461000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1764) (undo-tree-id2943 . -4) 1768) nil (25976 41534 658978 680000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1760) (undo-tree-id2942 . -4) 1764) nil (25976 41534 658974 532000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1756) (undo-tree-id2941 . -4) 1760) nil (25976 41534 658969 809000) 0 nil])
([nil nil ((1756 . 1776)) nil (25976 41534 658964 352000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1772) (undo-tree-id2940 . -4) 1776) nil (25976 41534 658958 829000) 0 nil])
([nil nil ((2087 . 2094) (t 25976 41535 61997 255000)) nil (25976 41563 140401 884000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -2093) (undo-tree-id2947 . -1) 2094) nil (25976 41563 140398 938000) 0 nil])
([nil nil ((2093 . 2097)) nil (25976 41563 140395 155000) 0 nil])
([nil nil ((#("E" 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -2096) (undo-tree-id2946 . -1) 2097) nil (25976 41563 140393 290000) 0 nil])
([nil nil ((2096 . 2097)) nil (25976 41563 140359 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2508 . 2509) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2500 . 2506) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2493 . 2498) (nil fontified nil 2492 . 2493) (nil fontified nil 2489 . 2492) (nil fontified nil 2488 . 2489) (nil fontified nil 2484 . 2488) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2470 . 2480) (nil fontified nil 2469 . 2470) (nil fontified nil 2465 . 2469) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2452 . 2463) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2436 . 2450) (nil fontified nil 2435 . 2436) (nil fontified nil 2431 . 2435) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2419 . 2428) (nil fontified nil 2407 . 2419) (2407 . 2509)) nil (25976 41563 140354 771000) 0 nil])
([nil nil ((#("input" 0 5 (fontified nil)) . -2456) (2461 . 2465) (#("input" 0 5 (face tree-sitter-hl-face:variable fontified t)) . -2423) (2428 . 2432)) nil (25976 41563 140341 114000) 0 nil])
([nil nil ((#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -2476) (2479 . 2483) (#("SYN" 0 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2446) (2449 . 2453)) nil (25976 41563 140318 654000) 0 nil])
([nil nil ((#("b" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2490) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2490) (t 25976 41563 561998 162000)) nil (25976 41567 125305 978000) 0 nil])
([nil nil ((2490 . 2495)) nil (25976 41567 125298 411000) 0 nil])
([nil nil ((2406 . 2419) (t 25976 41567 553998 289000)) nil (25976 41573 851502 311000) 0 nil])
([nil nil ((2419 . 2434)) nil (25976 41573 851495 829000) 0 nil])
([nil nil ((2434 . 2436) (t 25976 41574 313998 504000)) nil (25976 41577 686638 454000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -2435) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) 2436) nil (25976 41577 686634 823000) 0 nil])
([nil nil ((2436 . 2452) (#("            " 0 12 (fontified t)) . 2436) (undo-tree-id2948 . -12) (undo-tree-id2949 . -12) (undo-tree-id2950 . -12) (undo-tree-id2951 . -12) (undo-tree-id2952 . -12) (undo-tree-id2953 . -12) (undo-tree-id2954 . -12) (undo-tree-id2955 . -12) (undo-tree-id2956 . -12) (undo-tree-id2957 . -12) (undo-tree-id2958 . -12) (undo-tree-id2959 . -12) (undo-tree-id2960 . -12) (undo-tree-id2961 . -12) (undo-tree-id2962 . -12) (undo-tree-id2963 . -12) (undo-tree-id2964 . -12) (undo-tree-id2965 . -12) (undo-tree-id2966 . -12) (undo-tree-id2967 . -12)) nil (25976 41577 686605 286000) 0 nil])
([nil nil ((2544 . 2561) (t 25976 41578 53998 623000)) nil (25976 41581 131129 883000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2544) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) 2545 (t 25976 41581 545998 735000)) nil (25976 41582 415722 381000) 0 nil])
([nil nil ((2433 . 2434) (t 25976 41582 889998 777000)) nil (25976 41595 74194 542000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2433) (undo-tree-id2993 . -1) 2434) nil (25976 41595 74192 762000) 0 nil])
([nil nil ((2434 . 2435)) nil (25976 41595 74189 548000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2434) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) 2435) nil (25976 41595 74184 232000) 0 nil])
([nil nil ((2631 . 2635) (t 25976 41595 349999 174000)) nil (25976 41604 182400 958000) 0 nil])
([nil nil ((2660 . 2667)) nil (25976 41604 182399 826000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2666) (undo-tree-id3104 . -1) 2667) nil (25976 41604 182398 722000) 0 nil])
([nil nil ((2666 . 2668)) nil (25976 41604 182396 580000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -2666) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (#("M" 0 1 (fontified t)) . -2667) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) 2668) nil (25976 41604 182394 404000) 0 nil])
([nil nil ((2666 . 2670)) nil (25976 41604 182376 659000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -2667) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (#("D" 0 1 (fontified t)) . -2668) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (#("A" 0 1 (fontified t)) . -2669) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) 2670) nil (25976 41604 182370 706000) 0 nil])
([nil nil ((2667 . 2670)) nil (25976 41604 182263 915000) 0 nil])
([nil nil ((2635 . 2645) (t 25976 41604 445999 463000)) nil (25976 41619 83927 623000) 0 nil])
([nil nil ((2643 . 2644)) nil (25976 41619 83925 492000) 0 nil])
([nil nil ((2646 . 2647)) nil (25976 41619 83920 716000) 0 nil])
([nil nil ((2647 . 2660) (t 25976 41619 369999 938000)) nil (25976 41667 601691 631000) 0 nil])
([nil nil ((2741 . 2751)) nil (25976 41667 601689 851000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2971) (undo-tree-id3120 . -4) 2975) nil (25976 41667 601687 780000) 0 nil])
([nil nil ((2971 . 2975)) nil (25976 41667 601684 176000) 0 nil])
([nil nil ((#("I" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2974) (undo-tree-id3119 . -1) 2975) nil (25976 41667 601682 303000) 0 nil])
([nil nil ((2974 . 2979)) nil (25976 41667 601678 921000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2976) (undo-tree-id3116 . -1) (#("l" 0 1 (fontified nil)) . -2977) (undo-tree-id3117 . -1) (#("." 0 1 (fontified t)) . -2978) (undo-tree-id3118 . -1) 2979) nil (25976 41667 601676 599000) 0 nil])
([nil nil ((2976 . 2987)) nil (25976 41667 601668 298000) 0 nil])
([nil nil ((2987 . 3000)) nil (25976 41667 601666 917000) 0 nil])
([nil nil ((2962 . 2971)) nil (25976 41667 601665 411000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2929) (undo-tree-id3115 . -4) 2933) nil (25976 41667 601663 629000) 0 nil])
([nil nil ((2925 . 2937) (#("    " 0 4 (fontified t)) . 2925) (undo-tree-id3114 . -4) 2929) nil (25976 41667 601659 465000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2933) (undo-tree-id3113 . -4) 2937) nil (25976 41667 601654 17000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2929) (undo-tree-id3112 . -4) 2933) nil (25976 41667 600494 420000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2925) (undo-tree-id3111 . -4) 2929) nil (25976 41667 600490 343000) 0 nil])
([nil nil ((2925 . 2937)) nil (25976 41667 600486 524000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2933) (undo-tree-id3110 . -4) 2937) nil (25976 41667 600484 662000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2915) (undo-tree-id3109 . -1) 2916) nil (25976 41667 600480 666000) 0 nil])
([nil nil ((2924 . 2928) (2915 . 2916)) nil (25976 41667 600476 732000) 0 nil])
([nil nil ((3013 . 3018)) nil (25976 41667 600474 789000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3017) (undo-tree-id3108 . -1) 3018) nil (25976 41667 600472 850000) 0 nil])
([nil nil ((3017 . 3020)) nil (25976 41667 600468 806000) 0 nil])
([nil nil ((3020 . 3026)) nil (25976 41667 600467 36000) 0 nil])
([nil nil ((3026 . 3038) (#(" " 0 1 (fontified nil)) . 3025) (undo-tree-id3107 . -1) (3026 . 3027)) nil (25976 41667 600464 926000) 0 nil])
([nil nil ((3025 . 3026)) nil (25976 41667 600459 713000) 0 nil])
([nil nil ((3026 . 3028)) nil (25976 41667 600458 285000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3026) (undo-tree-id3105 . -1) (#("e" 0 1 (fontified t)) . -3027) (undo-tree-id3106 . -1) 3028) nil (25976 41667 600454 706000) 0 nil])
([nil nil ((3026 . 3034)) nil (25976 41667 600432 241000) 0 nil])
([nil nil ((3567 . 3577) (t 25976 41668 42001 487000)) nil (25976 41685 17571 621000) 0 nil])
([nil nil ((3630 . 3633)) nil (25976 41685 17570 47000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3632) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) 3633) nil (25976 41685 17567 4000) 0 nil])
([nil nil ((3632 . 3640)) nil (25976 41685 17539 423000) 0 nil])
([nil nil ((4058 . 4068) (t 25976 41685 374002 39000)) nil (25976 41695 727991 990000) 0 nil])
([nil nil ((3734 . 3739) (t 25976 41696 138002 381000)) nil (25976 41711 583996 458000) 0 nil])
([nil nil ((3739 . 3744)) nil (25976 41711 583994 459000) 0 nil])
([nil nil ((4036 . 4039)) nil (25976 41711 583993 78000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -4036) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (#(" " 0 1 (fontified t)) . -4037) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -4038) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) 4039) nil (25976 41711 583985 325000) 0 nil])
([nil nil ((4036 . 4046)) nil (25976 41711 583852 373000) 0 nil])
([nil nil ((3453 . 3463) (t 25976 41712 2002 886000)) nil (25976 41718 2440 798000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t) 1 4 (fontified t)) . -4330) (undo-tree-id3197 . -4) (undo-tree-id3198 . -4) (undo-tree-id3199 . -4) (undo-tree-id3200 . -4) (undo-tree-id3201 . -4) (undo-tree-id3202 . -4) (undo-tree-id3203 . -4) (undo-tree-id3204 . -4) (undo-tree-id3205 . -4) (undo-tree-id3206 . -4) (undo-tree-id3207 . -4) (undo-tree-id3208 . -4) (undo-tree-id3209 . -4) (undo-tree-id3210 . -4) (undo-tree-id3211 . -4) (undo-tree-id3212 . -4) (undo-tree-id3213 . -4) (undo-tree-id3214 . -4) (undo-tree-id3215 . -4) (undo-tree-id3216 . -4) (undo-tree-id3217 . -4) (undo-tree-id3218 . -4) (undo-tree-id3219 . -4) 4334 (t 25976 41718 422003 90000)) nil (25976 41721 992386 710000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6545 . 6546) (nil fontified nil 6545 . 6546) (nil fontified nil 6544 . 6545) (nil fontified nil 6538 . 6544) (nil fontified nil 6537 . 6538) (nil fontified nil 6533 . 6537) (nil fontified nil 6532 . 6533) (nil fontified nil 6526 . 6532) (nil fontified nil 6524 . 6526) (nil fontified nil 6519 . 6524) (nil fontified nil 6518 . 6519) (nil fontified nil 6514 . 6518) (nil fontified nil 6513 . 6514) (nil fontified nil 6508 . 6513) (nil fontified nil 6506 . 6508) (nil fontified nil 6498 . 6506) (nil fontified nil 6497 . 6498) (nil fontified nil 6493 . 6497) (nil fontified nil 6492 . 6493) (nil fontified nil 6487 . 6492) (nil fontified nil 6480 . 6487) (nil fontified nil 6479 . 6480) (nil fontified nil 6478 . 6479) (nil fontified nil 6469 . 6478) (nil fontified nil 6461 . 6469) (6461 . 6546) (t 25976 41722 394003 217000)) nil (25976 41737 438741 518000) 0 nil])
([nil nil ((#("input" 0 5 (face tree-sitter-hl-face:variable fontified t)) . 6473)) nil (25976 41737 438729 314000) 0 nil])
([nil nil ((6473 . 6477)) nil (25976 41737 438723 297000) 0 nil])
([nil nil ((#("            rec_NMDA = 0
" 0 12 (fontified t) 12 20 (face tree-sitter-hl-face:variable fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t) 22 23 (fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 25 (fontified t)) . -2623) (undo-tree-id3220 . -25) (undo-tree-id3221 . -25) (undo-tree-id3222 . -25) (undo-tree-id3223 . -25) (undo-tree-id3224 . -25) (undo-tree-id3225 . -25) (undo-tree-id3226 . -25) (undo-tree-id3227 . -25) (undo-tree-id3228 . -25) (undo-tree-id3229 . -25) (undo-tree-id3230 . -25) (undo-tree-id3231 . -25) (undo-tree-id3232 . -25) 2648 (t 25976 41737 798003 707000)) nil (25976 41747 566701 21000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2631) (undo-tree-id3233 . -4) (undo-tree-id3234 . -4) (undo-tree-id3235 . -4) (undo-tree-id3236 . -4) (undo-tree-id3237 . -4) (undo-tree-id3238 . -4) 2635 (t 25976 41748 14004 32000)) nil (25976 41749 16071 614000) 0 nil])
([nil nil ((3834 . 3835) (t 25976 41749 474004 78000)) nil (25976 41796 469446 749000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3834) (undo-tree-id3239 . -1) 3835) nil (25976 42059 308064 236000) 0 nil])
([nil nil ((3834 . 3844)) ((#(", rec_NMDA" 2 10 (face tree-sitter-hl-face:variable)) . 3834) (undo-tree-id3509 . -10) (undo-tree-id3510 . -10) (undo-tree-id3511 . -10) (undo-tree-id3512 . -10) (undo-tree-id3513 . -10)) (25976 42060 121993 509000) 0 nil])
([nil nil ((6557 . 6567)) ((#(", rec_NMDA" 0 10 (fontified t)) . 6557) (undo-tree-id3508 . -10)) (25976 42060 306956 907000) 0 nil])
([nil nil ((6525 . 6534)) (("
        " . 6525) (undo-tree-id3505 . -9) (undo-tree-id3506 . -9) (undo-tree-id3507 . -9)) (25976 42060 464214 861000) 0 nil])
([nil nil ((apply -4 2947 3023 undo--wrap-and-run-primitive-undo 2947 3023 ((2982 . 2984) (2955 . 2957) 6525))) ((apply 4 2947 3019 undo--wrap-and-run-primitive-undo 2947 3019 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2955) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2982) 3010))) (25976 42060 816506 34000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 3018)) ((3018 . 3022)) (25976 42060 817846 230000) 0 nil])
([nil nil ((apply 4 2947 3006 undo--wrap-and-run-primitive-undo 2947 3006 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2980) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2955) 3018))) ((apply -4 2947 3010 undo--wrap-and-run-primitive-undo 2947 3010 ((2955 . 2957) (2980 . 2982) 3006))) (25976 42060 938211 124000) 0 nil])
([nil nil ((3014 . 3018)) ((#("    " 0 4 (fontified t)) . 3014) (undo-tree-id3495 . -4) (undo-tree-id3497 . -4) (undo-tree-id3499 . -4) (undo-tree-id3500 . -4) (undo-tree-id3502 . -4) (undo-tree-id3504 . -4)) (25976 42061 115695 672000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3014)) ((3014 . 3018)) (25976 42061 295338 967000) 0 nil])
([nil nil ((apply -4 2407 2579 undo--wrap-and-run-primitive-undo 2407 2579 ((2450 . 2452) (2419 . 2421) 3014))) ((apply 4 2407 2575 undo--wrap-and-run-primitive-undo 2407 2575 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2419) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2450) 3010))) (25976 42061 446936 948000) 0 nil])
([nil nil ((apply -4 2951 3023 undo--wrap-and-run-primitive-undo 2951 3023 ((2986 . 2988) (2959 . 2961) 3010))) ((apply 4 2951 3019 undo--wrap-and-run-primitive-undo 2951 3019 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2959) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2986) 3014))) (25976 42061 601550 36000) 0 nil])
([nil nil ((apply 4 2951 3010 undo--wrap-and-run-primitive-undo 2951 3010 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2984) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2959) 3014))) ((apply -4 2951 3014 undo--wrap-and-run-primitive-undo 2951 3014 ((2959 . 2961) (2984 . 2986) 3010))) (25976 42061 769648 903000) 0 nil])
([nil nil ((3018 . 3022)) ((#("    " 0 4 (fontified t)) . 3018) (undo-tree-id3484 . -4) (undo-tree-id3486 . -4) (undo-tree-id3488 . -4) (undo-tree-id3489 . -4) (undo-tree-id3491 . -4) (undo-tree-id3493 . -4)) (25976 42061 938611 827000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3018)) ((3018 . 3022)) (25976 42062 78984 864000) 0 nil])
([nil nil ((2943 . 2951) (#("        " 0 8 (fontified nil)) . 2942) (2950 . 2951)) ((#("
" 0 1 (fontified nil)) . 2950) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3467 . -1) (undo-tree-id3469 . -1) (undo-tree-id3471 . -1) (2942 . 2950) (#("        " 0 8 (fontified nil)) . 2943) (undo-tree-id3473 . -8) (undo-tree-id3474 . -8) (undo-tree-id3475 . -8) (undo-tree-id3476 . -8) (undo-tree-id3477 . -8) (undo-tree-id3479 . -8) (undo-tree-id3481 . -8)) (25976 42062 253869 996000) 0 nil])
([nil nil ((2951 . 2954)) ((#("prp" 0 2 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 2 3 (fontified nil)) . 2951) (undo-tree-id3450 . -2) (undo-tree-id3451 . -2) (undo-tree-id3452 . -2) (undo-tree-id3453 . -2) (undo-tree-id3454 . -2) (undo-tree-id3456 . -2) (undo-tree-id3458 . -3)) (25976 42062 420651 19000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 2953)) ((2953 . 2954)) (25976 42062 587933 77000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2958) (2957 . 2958) (2956 . 2958) (#("(" 0 1 (fontified nil)) . 2956) (2953 . 2957)) ((#("int(" 0 3 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 3 4 (fontified nil)) . 2953) (undo-tree-id3436 . -3) (undo-tree-id3437 . -3) (undo-tree-id3438 . -3) (undo-tree-id3439 . -3) (undo-tree-id3440 . -3) (undo-tree-id3442 . -3) (2956 . 2957) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2956) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3449 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2957) (2958 . 2959)) (25976 42062 752205 316000) 0 nil])
([nil nil ((2957 . 2965)) ((#("rec_NMDA" 0 8 (fontified nil)) . 2957) (undo-tree-id3431 . -8) (undo-tree-id3432 . -8) (undo-tree-id3433 . -8) (undo-tree-id3434 . -8) (undo-tree-id3435 . -8)) (25976 42062 912572 839000) 0 nil])
([nil nil ((#("        print(rec_NMDA)
" 0 8 (fontified t) 8 10 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 10 13 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t)) . 2943) (undo-tree-id3514 . -24) (undo-tree-id3515 . -24) (undo-tree-id3516 . -22) (undo-tree-id3517 . -22) (undo-tree-id3518 . -22) (undo-tree-id3519 . -22) (undo-tree-id3520 . -22) (undo-tree-id3521 . -24) (undo-tree-id3522 . -24) (undo-tree-id3523 . -24) (undo-tree-id3524 . -8) (undo-tree-id3525 . -8) (undo-tree-id3526 . -8) (undo-tree-id3527 . -8) (undo-tree-id3528 . -8) (undo-tree-id3529 . -8) (undo-tree-id3530 . -8) (undo-tree-id3531 . -8) (undo-tree-id3532 . -8) (undo-tree-id3533 . -10) (undo-tree-id3534 . -8) (undo-tree-id3535 . -10) (undo-tree-id3536 . -10) (undo-tree-id3537 . -10) (undo-tree-id3538 . -10) (undo-tree-id3539 . -10) (undo-tree-id3540 . -10) (undo-tree-id3541 . -10) (undo-tree-id3542 . -10) (undo-tree-id3543 . -23) (undo-tree-id3544 . -10) (undo-tree-id3545 . -23) (undo-tree-id3546 . -23) (undo-tree-id3547 . -23) (undo-tree-id3548 . -23) (undo-tree-id3549 . -23) (undo-tree-id3550 . -23) (undo-tree-id3551 . -23) (undo-tree-id3552 . -23) (undo-tree-id3553 . -14) (undo-tree-id3554 . -23) (undo-tree-id3555 . -14) (undo-tree-id3556 . -14) (undo-tree-id3557 . -14) (undo-tree-id3558 . -14) (undo-tree-id3559 . -14) (undo-tree-id3560 . -14) (undo-tree-id3561 . -14) (undo-tree-id3562 . -14) (undo-tree-id3563 . -14) (undo-tree-id3564 . -14)) ((2943 . 2967)) (25976 42063 79065 122000) 0 nil])
([nil nil ((apply -4 2943 3015 undo--wrap-and-run-primitive-undo 2943 3015 ((2978 . 2980) (2951 . 2953) 2943))) ((apply 4 2943 3011 undo--wrap-and-run-primitive-undo 2943 3011 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2951) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 2978) 1192))) (25976 42063 260534 365000) 0 nil])
([nil nil ((apply -6 1023 1211 undo--wrap-and-run-primitive-undo 1023 1211 ((1173 . 1175) (1058 . 1060) (1031 . 1033) 1192))) ((apply 6 1023 1205 undo--wrap-and-run-primitive-undo 1023 1205 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1031) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1058) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1173) 1198))) (25976 42063 427535 211000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1206)) ((1206 . 1210)) (25976 42063 800697 756000) 0 nil])
([nil nil ((apply -6 1530 1845 undo--wrap-and-run-primitive-undo 1530 1845 ((1684 . 1686) (1593 . 1595) (1546 . 1548) 1206))) ((apply 6 1530 1839 undo--wrap-and-run-primitive-undo 1530 1839 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1546) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1593) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1684) 1781))) (25976 42064 163879 948000) 0 nil])
([nil nil ((1781 . 1797) (#("        " 0 8 (fontified t)) . 1781)) ((1781 . 1789) (#("                " 0 8 (fontified t) 8 12 (fontified t) 12 16 (fontified t)) . 1781) (undo-tree-id3405 . -8) (undo-tree-id3406 . -8) (undo-tree-id3407 . -8) (undo-tree-id3408 . -8) (undo-tree-id3410 . -12) (undo-tree-id3412 . -12) (undo-tree-id3414 . -12) (undo-tree-id3416 . -12) (undo-tree-id3418 . -12) (undo-tree-id3420 . -16) (undo-tree-id3422 . -16) (undo-tree-id3424 . -16) (undo-tree-id3426 . -16) (undo-tree-id3428 . -16) (undo-tree-id3430 . -16)) (25976 42064 333193 873000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1793) (undo-tree-id3565 . -4)) ((1793 . 1797)) (25976 42064 503771 869000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1789) (undo-tree-id3566 . -4) (undo-tree-id3567 . -4) (undo-tree-id3568 . -4) (undo-tree-id3569 . -4) (undo-tree-id3570 . -4) (undo-tree-id3571 . -4) (undo-tree-id3572 . -4) (undo-tree-id3573 . -4) (undo-tree-id3574 . -4) (undo-tree-id3575 . -4) (undo-tree-id3576 . -4)) ((1789 . 1793) (t 25976 42049 822013 636000)) (25976 47513 321433 521000) 0 nil])
([nil nil ((3511 . 3517)) ((#(", recç" 0 2 (fontified t) 2 5 (face tree-sitter-hl-face:variable fontified t) 5 6 (face tree-sitter-hl-face:variable fontified t)) . 3511) (undo-tree-id1180 . -5) (undo-tree-id1181 . -5) (undo-tree-id1182 . -5) (undo-tree-id1183 . -5) (undo-tree-id1184 . -5) (undo-tree-id1185 . -5) (undo-tree-id1186 . -5) (undo-tree-id1187 . -5) (undo-tree-id1188 . -5) (undo-tree-id1189 . -6) (undo-tree-id1190 . -5) (undo-tree-id1191 . -6) (undo-tree-id1192 . -6) (undo-tree-id1193 . -6) (undo-tree-id1194 . -6) (undo-tree-id1195 . -6) (undo-tree-id1196 . -6) (undo-tree-id1197 . -6) (undo-tree-id1198 . -6) (undo-tree-id1199 . -6) (undo-tree-id1200 . -6)) (25976 47514 193378 664000) 0 nil] [nil nil ((#(", rec_NMDA" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 2668) (undo-tree-id3577 . -10) (undo-tree-id3578 . -10) (undo-tree-id3579 . -10) (t 25976 42049 822013 636000)) ((2668 . 2678) (t 25976 42067 314014 193000)) (25976 42070 277328 603000) 0 nil])
([nil nil ((#("ç" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3516) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1)) ((3516 . 3517)) (25976 47514 642278 828000) 0 nil])
([nil nil ((2668 . 2669) (t 25976 42067 314014 193000)) ((#("," 0 1 (fontified t)) . 2668) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1)) (25976 42069 785753 426000) 0 nil])
([nil nil ((3516 . 3521)) ((#("_NMDA" 0 5 (face tree-sitter-hl-face:variable fontified t)) . 3516)) (25976 47515 66847 597000) 0 nil])
nil
([nil nil ((apply 6 1023 1192 undo--wrap-and-run-primitive-undo 1023 1192 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1169) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1056) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1031) 3516))) ((apply -6 1023 1198 undo--wrap-and-run-primitive-undo 1023 1198 ((1031 . 1033) (1056 . 1058) (1169 . 1171) 1758))) (25976 47516 728722 611000) 0 nil] [nil nil ((3186 . 3189) (t 25976 42086 26014 788000)) ((#("yes" 0 3 (face tree-sitter-hl-face:comment fontified t)) . 3186) (undo-tree-id3607 . -3) (undo-tree-id3608 . -3) (undo-tree-id3609 . -3) (undo-tree-id3610 . -3) (undo-tree-id3611 . -3) (undo-tree-id3612 . -3) (undo-tree-id3613 . -3) (undo-tree-id3614 . -3) (undo-tree-id3615 . -3) (undo-tree-id3616 . -3) (undo-tree-id3617 . -3) (undo-tree-id3618 . -3) (undo-tree-id3619 . -3) (undo-tree-id3620 . -3) (undo-tree-id3621 . -3) (t 25976 42133 910016 312000)) (25976 42132 157995 41000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1770) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) 1774 (t 25976 47517 626187 634000)) nil (25976 47529 683304 55000) 0 nil] [nil nil ((apply 6 1524 1752 undo--wrap-and-run-primitive-undo 1524 1752 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1674) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1585) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . 1540) 1758))) ((apply -6 1524 1758 undo--wrap-and-run-primitive-undo 1524 1758 ((1540 . 1542) (1585 . 1587) (1674 . 1676) 1752))) (25976 47516 192759 410000) 0 nil])
([nil nil ((3189 . 3198)) ((#("
        " 0 9 (fontified t)) . 3189) (undo-tree-id3604 . -1) (undo-tree-id3605 . -9) (undo-tree-id3606 . -9)) (25976 42132 157454 579000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1766) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) 1770) nil (25976 47529 683293 389000) 0 nil])
([nil nil ((1768 . 1772) 1752) ((#("    " 0 4 (fontified t)) . 1768) (undo-tree-id1159 . -4) (undo-tree-id1160 . -4) (undo-tree-id1161 . -4) (undo-tree-id1162 . -4) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4)) (25976 47509 298028 216000) 0 nil])
nil
([nil nil ((3281 . 3296) (t 25976 47529 922188 25000)) nil (25976 47813 760995 470000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1768) (undo-tree-id67 . -4) (undo-tree-id69 . -4) (undo-tree-id71 . -4) (undo-tree-id73 . -4) (undo-tree-id75 . -4) (undo-tree-id77 . -4) (undo-tree-id79 . -4) 1772) ((1768 . 1772)) (25976 47508 836046 925000) 0 nil])
([nil nil ((3296 . 3317)) nil (25976 47813 760993 451000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1764) (undo-tree-id40 . -4) (undo-tree-id42 . -4) (undo-tree-id44 . -4) (undo-tree-id46 . -4) (undo-tree-id48 . -4) (undo-tree-id50 . -4) (undo-tree-id52 . -4) (undo-tree-id54 . -4) (undo-tree-id56 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id61 . -4) (undo-tree-id63 . -4) (undo-tree-id65 . -4) 1768) ((1764 . 1768)) (25976 47508 158930 337000) 0 nil])
([nil nil ((3317 . 3325)) nil (25976 47813 760989 310000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1760) (undo-tree-id1 . -4) (undo-tree-id3 . -4) (undo-tree-id5 . -4) (undo-tree-id7 . -4) (undo-tree-id9 . -4) (undo-tree-id11 . -4) (undo-tree-id13 . -4) (undo-tree-id15 . -4) (undo-tree-id17 . -4) (undo-tree-id19 . -4) (undo-tree-id21 . -4) (undo-tree-id23 . -4) (undo-tree-id25 . -4) (undo-tree-id27 . -4) (undo-tree-id29 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id34 . -4) (undo-tree-id36 . -4) (undo-tree-id38 . -4) 1764) ((1760 . 1764)) (25976 47507 705196 374000) 0 nil])
([nil nil ((3383 . 3385) (t 25976 47813 990197 65000)) nil (25976 47841 927785 506000) 0 nil])
([nil nil ((apply 4 2395 2549 undo--wrap-and-run-primitive-undo 2395 2549 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -2436) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -2407) 2553))) ((apply -4 2395 2553 undo--wrap-and-run-primitive-undo 2395 2553 ((2407 . 2409) (2436 . 2438) 2990))) (25976 47507 150554 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3426 . 3427) (nil fontified nil 3421 . 3427) (nil fontified nil 3420 . 3421) (nil fontified nil 3416 . 3420) (nil fontified nil 3415 . 3416) (nil fontified nil 3409 . 3415) (nil fontified nil 3407 . 3409) (nil fontified nil 3400 . 3407) (nil fontified nil 3399 . 3400) (nil fontified nil 3395 . 3399) (nil fontified nil 3394 . 3395) (nil fontified nil 3385 . 3394) (3385 . 3427)) nil (25976 47841 927780 488000) 0 nil])
([nil nil ((apply 4 2927 2986 undo--wrap-and-run-primitive-undo 2927 2986 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -2960) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -2935) 2990))) ((apply -4 2927 2990 undo--wrap-and-run-primitive-undo 2927 2990 ((2935 . 2937) (2960 . 2962) 2986))) (25976 47506 749285 23000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 3327) (3326 . 3327) (3325 . 3327) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -3325) (3325 . 3326) (t 25976 47842 174197 962000)) nil (25976 47901 125263 139000) 0 nil])
([nil nil ((2994 . 2998) 2986) ((#("    " 0 4 (fontified t)) . 2994) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -4) (undo-tree-id1156 . -4) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4)) (25976 47506 574637 762000) 0 nil])
([nil nil ((3326 . 3327)) nil (25976 47901 125260 870000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2994) (undo-tree-id81 . -4) (undo-tree-id83 . -4) (undo-tree-id85 . -4) (undo-tree-id87 . -4) (undo-tree-id89 . -4) (undo-tree-id91 . -4) (undo-tree-id93 . -4) (undo-tree-id95 . -4) (undo-tree-id97 . -4) (undo-tree-id99 . -4) 2998 (t 25976 47231 354178 524000)) ((2994 . 2998)) (25976 47506 361708 480000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 3432) (3431 . 3432) (3430 . 3432) (#("[" 0 1 (fontified nil)) . -3430) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (3430 . 3431)) nil (25976 47901 125258 281000) 0 nil])
([nil nil ((#("_NEURON" 0 7 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1090) (t 25976 47233 266178 585000)) ((1090 . 1097)) (25976 47506 246967 219000) 0 nil])
([nil current ((3431 . 3432)) nil (25976 47901 125240 654000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1093) (1092 . 1093) (1091 . 1093) (#("[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -1091) (1090 . 1092)) ((#("a[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil) 1 2 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 1090) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (1091 . 1092) (#("[]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1091) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1092) (1093 . 1094)) (25976 47506 23000 823000) 0 nil])
nil
([nil nil ((1092 . 1093)) ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1092)) (25976 47505 832928 999000) 0 nil])
([nil nil ((#("[0" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face tree-sitter-hl-face:number fontified t)) . 1103)) ((1103 . 1105)) (25976 47505 665470 405000) 0 nil])
([nil nil ((#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1102) (undo-tree-id102 . -1) 1103) ((1102 . 1103)) (25976 47505 505151 335000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . 1102)) ((1102 . 1103)) (25976 47505 344135 479000) 0 nil])
([nil nil ((1102 . 1105)) ((#("__N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 2 3 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1102) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (undo-tree-id1115 . -3) (undo-tree-id1116 . -3) (undo-tree-id1117 . -3) (undo-tree-id1118 . -3) (undo-tree-id1119 . -3) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -3) (undo-tree-id1124 . -3)) (25976 47505 177219 648000) 0 nil])
([nil nil ((#("_" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1103) (undo-tree-id100 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1104) (undo-tree-id101 . -1) 1105) ((1103 . 1105)) (25976 47505 11815 827000) 0 nil])
([nil nil ((1103 . 1109)) ((#("NEURON" 0 6 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1103)) (25976 47504 868999 690000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1625) (undo-tree-id116 . -1) 1626 (t 25976 47289 94180 361000)) ((1625 . 1626)) (25976 47504 703929 71000) 0 nil])
([nil nil ((1625 . 1626)) ((#("j" 0 1 (fontified t)) . 1625) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1)) (25976 47504 537777 772000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1625) (undo-tree-id115 . -1) 1626) ((1625 . 1626)) (25976 47504 370821 922000) 0 nil])
([nil nil ((1625 . 1626)) ((#("i" 0 1 (fontified t)) . 1625) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1)) (25976 47504 205915 597000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1625) (undo-tree-id114 . -1) 1626) ((1625 . 1626)) (25976 47504 31508 381000) 0 nil])
([nil nil ((1625 . 1626)) ((#("j" 0 1 (fontified t)) . 1625) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1)) (25976 47503 859119 240000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1625) (undo-tree-id104 . -1) (undo-tree-id106 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id111 . -1) (undo-tree-id113 . -1) 1626) ((1625 . 1626)) (25976 47503 731427 331000) 0 nil])
([nil nil ((1625 . 1626)) ((#("i" 0 1 (fontified t)) . 1625)) (25976 47503 661891 631000) 0 nil])
([nil nil ((1568 . 1589) (t 25976 47303 366180 815000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 1568) (undo-tree-id1030 . -21) (undo-tree-id1031 . -21) (undo-tree-id1032 . -21) (undo-tree-id1033 . -21) (undo-tree-id1034 . -21) (undo-tree-id1035 . -21) (undo-tree-id1036 . -21) (undo-tree-id1037 . -21) (undo-tree-id1038 . -21) (undo-tree-id1039 . -21) (undo-tree-id1040 . -21) (undo-tree-id1041 . -21) (undo-tree-id1042 . -21) (undo-tree-id1043 . -21) (undo-tree-id1044 . -21) (undo-tree-id1045 . -21) (undo-tree-id1046 . -21) (undo-tree-id1047 . -21) (undo-tree-id1048 . -21) (undo-tree-id1049 . -21) (undo-tree-id1050 . -21) (undo-tree-id1051 . -21) (undo-tree-id1052 . -21) (undo-tree-id1053 . -21) (undo-tree-id1054 . -21) (undo-tree-id1055 . -21) (undo-tree-id1056 . -21) (undo-tree-id1057 . -21) (undo-tree-id1058 . -21) (undo-tree-id1059 . -21) (undo-tree-id1060 . -21) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -21) (undo-tree-id1064 . -21) (undo-tree-id1065 . -21) (undo-tree-id1066 . -21) (undo-tree-id1067 . -21)) (25976 47503 395314 784000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1596) (1595 . 1596) (1594 . 1596) (#("(" 0 1 (fontified nil)) . -1594) (1589 . 1595)) ((#("print(" 0 5 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 5 6 (fontified nil)) . 1589) (undo-tree-id770 . -5) (undo-tree-id771 . -5) (undo-tree-id772 . -5) (undo-tree-id773 . -5) (undo-tree-id774 . -5) (undo-tree-id775 . -5) (undo-tree-id776 . -5) (undo-tree-id777 . -5) (undo-tree-id778 . -5) (undo-tree-id779 . -5) (undo-tree-id780 . -5) (undo-tree-id781 . -5) (undo-tree-id782 . -5) (undo-tree-id783 . -5) (undo-tree-id784 . -5) (undo-tree-id785 . -5) (undo-tree-id786 . -5) (undo-tree-id787 . -5) (undo-tree-id788 . -5) (undo-tree-id789 . -5) (undo-tree-id790 . -5) (undo-tree-id791 . -5) (undo-tree-id792 . -5) (undo-tree-id793 . -5) (undo-tree-id794 . -5) (undo-tree-id795 . -5) (undo-tree-id796 . -5) (undo-tree-id797 . -5) (undo-tree-id798 . -5) (undo-tree-id799 . -5) (undo-tree-id800 . -5) (undo-tree-id801 . -5) (undo-tree-id802 . -5) (undo-tree-id803 . -5) (undo-tree-id804 . -5) (undo-tree-id805 . -5) (undo-tree-id806 . -5) (undo-tree-id807 . -5) (undo-tree-id808 . -5) (undo-tree-id809 . -5) (undo-tree-id810 . -5) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (undo-tree-id813 . -5) (undo-tree-id814 . -5) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -5) (undo-tree-id818 . -5) (undo-tree-id819 . -5) (undo-tree-id820 . -5) (undo-tree-id821 . -5) (undo-tree-id822 . -5) (undo-tree-id823 . -5) (undo-tree-id824 . -5) (undo-tree-id825 . -5) (undo-tree-id826 . -5) (undo-tree-id827 . -5) (undo-tree-id828 . -5) (undo-tree-id829 . -5) (undo-tree-id830 . -5) (undo-tree-id831 . -5) (undo-tree-id832 . -5) (undo-tree-id833 . -5) (undo-tree-id834 . -5) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -5) (undo-tree-id839 . -5) (undo-tree-id840 . -5) (undo-tree-id841 . -5) (undo-tree-id842 . -5) (undo-tree-id843 . -5) (undo-tree-id844 . -5) (undo-tree-id845 . -5) (undo-tree-id846 . -5) (undo-tree-id847 . -5) (undo-tree-id848 . -5) (undo-tree-id849 . -5) (undo-tree-id850 . -5) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -5) (undo-tree-id860 . -5) (undo-tree-id861 . -5) (undo-tree-id862 . -5) (undo-tree-id863 . -5) (undo-tree-id864 . -5) (undo-tree-id865 . -5) (undo-tree-id866 . -5) (undo-tree-id867 . -5) (undo-tree-id868 . -5) (undo-tree-id869 . -5) (undo-tree-id870 . -5) (undo-tree-id871 . -5) (undo-tree-id872 . -5) (undo-tree-id873 . -5) (undo-tree-id874 . -5) (undo-tree-id875 . -5) (undo-tree-id876 . -5) (undo-tree-id877 . -5) (undo-tree-id878 . -5) (undo-tree-id879 . -5) (undo-tree-id880 . -5) (undo-tree-id881 . -5) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (1594 . 1595) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1594) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1595) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (1596 . 1597)) (25976 47503 218255 817000) 0 nil])
([nil nil ((1595 . 1598)) ((#("sef" 0 2 (fontified t) 2 3 (fontified t)) . 1595) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) (undo-tree-id710 . -2) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -3) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (undo-tree-id760 . -3) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -3) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3)) (25976 47503 65479 789000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1597) (undo-tree-id118 . -1) 1598) ((1597 . 1598)) (25976 47502 886788 16000) 0 nil])
([nil nil ((1597 . 1602)) ((#("lf.WN" 0 2 (face tree-sitter-hl-face:keyword fontified t) 2 3 (fontified t) 3 4 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4 5 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1597) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -5) (undo-tree-id663 . -5) (undo-tree-id664 . -5) (undo-tree-id665 . -5) (undo-tree-id666 . -5) (undo-tree-id667 . -5) (undo-tree-id668 . -5) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (undo-tree-id671 . -5) (undo-tree-id672 . -5) (undo-tree-id673 . -5)) (25976 47502 712528 924000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1601) (undo-tree-id117 . -1) 1602) ((1601 . 1602)) (25976 47502 538795 920000) 0 nil])
([nil nil ((1601 . 1606)) ((#("_NMDA" 0 4 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 4 5 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1601) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) (undo-tree-id591 . -5) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (undo-tree-id595 . -5) (undo-tree-id596 . -5) (undo-tree-id597 . -5) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -5) (undo-tree-id605 . -5) (undo-tree-id606 . -5)) (25976 47502 366711 371000) 0 nil])
([nil nil ((1606 . 1607) (t 25976 47320 130181 349000)) ((#("." 0 1 (fontified t)) . 1606) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1)) (25976 47502 192526 811000) 0 nil])
([nil nil ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1605) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("." 0 1 (fontified t)) . -1606) (undo-tree-id126 . -1) 1607) ((1605 . 1607)) (25976 47502 9632 4000) 0 nil])
([nil nil ((1605 . 1606)) ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1605) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1)) (25976 47501 812102 168000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1664) (t 25976 47328 342181 610000)) ((1664 . 1665)) (25976 47501 582075 90000) 0 nil])
([nil nil ((1664 . 1665)) ((#("j" 0 1 (fontified t)) . 1664)) (25976 47501 335882 888000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1685)) ((1685 . 1686)) (25976 47501 146429 418000) 0 nil])
([nil nil ((1685 . 1686)) ((#("j" 0 1 (fontified t)) . 1685)) (25976 47500 945169 898000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1774) (undo-tree-id127 . -1) 1775) ((1774 . 1775)) (25976 47500 729824 849000) 0 nil])
([nil nil ((1774 . 1775)) ((#("i" 0 1 (fontified t)) . 1774)) (25976 47500 710719 684000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1753)) ((1753 . 1754)) (25976 47500 710000 115000) 0 nil])
([nil nil ((1753 . 1754)) ((#("i" 0 1 (fontified t)) . 1753) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1)) (25976 47500 160046 64000) 0 nil])
([nil nil ((1606 . 1620) (t 25976 47356 18182 491000)) ((#(".weight.data/s" 0 1 (fontified t) 1 7 (face tree-sitter-hl-face:property fontified t) 7 8 (fontified t) 8 12 (face tree-sitter-hl-face:property fontified t) 12 13 (face tree-sitter-hl-face:operator fontified t) 13 14 (fontified t)) . 1606) (undo-tree-id471 . -12) (undo-tree-id472 . -12) (undo-tree-id473 . -12) (undo-tree-id474 . -12) (undo-tree-id475 . -12) (undo-tree-id476 . -12) (undo-tree-id477 . -12) (undo-tree-id478 . -12) (undo-tree-id479 . -12) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) (undo-tree-id486 . -12) (undo-tree-id487 . -12) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -12) (undo-tree-id491 . -12) (undo-tree-id492 . -12) (undo-tree-id493 . -12) (undo-tree-id494 . -12) (undo-tree-id495 . -12) (undo-tree-id496 . -12) (undo-tree-id497 . -12) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -12) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (undo-tree-id507 . -12) (undo-tree-id508 . -12) (undo-tree-id509 . -12) (undo-tree-id510 . -12) (undo-tree-id511 . -12) (undo-tree-id512 . -12) (undo-tree-id513 . -12) (undo-tree-id514 . -12) (undo-tree-id515 . -12) (undo-tree-id516 . -12) (undo-tree-id517 . -12) (undo-tree-id518 . -12) (undo-tree-id519 . -12) (undo-tree-id520 . -12) (undo-tree-id521 . -12) (undo-tree-id522 . -12) (undo-tree-id523 . -12) (undo-tree-id524 . -14) (undo-tree-id525 . -14) (undo-tree-id526 . -14) (undo-tree-id527 . -14) (undo-tree-id528 . -14) (undo-tree-id529 . -14) (undo-tree-id530 . -14) (undo-tree-id531 . -14) (undo-tree-id532 . -14) (undo-tree-id533 . -14) (undo-tree-id534 . -14) (undo-tree-id535 . -14)) (25976 47500 26541 743000) 0 nil])
([nil nil ((#("/" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1618) (undo-tree-id130 . -1) (#("s" 0 1 (fontified t)) . -1619) (undo-tree-id131 . -1) 1620) ((1618 . 1620)) (25976 47499 860473 419000) 0 nil])
([nil nil ((1618 . 1622)) ((#(".shj" 0 1 (fontified t) 1 3 (face tree-sitter-hl-face:property fontified t) 3 4 (face tree-sitter-hl-face:property fontified t)) . 1618) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -3) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4)) (25976 47499 694069 867000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1621) (undo-tree-id129 . -1) 1622) ((1621 . 1622)) (25976 47499 523151 404000) 0 nil])
([nil nil ((1621 . 1623)) ((#("ae" 0 1 (face tree-sitter-hl-face:property fontified t) 1 2 (face tree-sitter-hl-face:property fontified t)) . 1621) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2)) (25976 47499 306450 981000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1622) (undo-tree-id128 . -1) 1623) ((1622 . 1623)) (25976 47499 86115 34000) 0 nil])
([nil nil ((1622 . 1624)) ((#("pe" 0 2 (face tree-sitter-hl-face:property fontified t)) . 1622) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2)) (25976 47498 710915 153000) 0 nil])
([nil nil ((1625 . 1646) (t 25976 47381 586183 305000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 1625) (undo-tree-id348 . -21) (undo-tree-id349 . -21) (undo-tree-id350 . -21) (undo-tree-id351 . -21) (undo-tree-id352 . -21) (undo-tree-id353 . -21) (undo-tree-id354 . -21) (undo-tree-id355 . -21) (undo-tree-id356 . -21) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -1) (undo-tree-id362 . -21) (undo-tree-id363 . -21) (undo-tree-id364 . -1) (undo-tree-id365 . -21) (undo-tree-id366 . -21) (undo-tree-id367 . -21) (undo-tree-id368 . -21) (undo-tree-id369 . -21) (undo-tree-id370 . -21) (undo-tree-id371 . -21) (undo-tree-id372 . -21) (undo-tree-id373 . -21) (undo-tree-id374 . -21) (undo-tree-id375 . -1) (undo-tree-id376 . -21) (undo-tree-id377 . -21) (undo-tree-id378 . -21) (undo-tree-id379 . -21) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -1) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -21)) (25976 47498 548604 221000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1653) (1652 . 1653) (1651 . 1653) (#("(" 0 1 (fontified nil)) . -1651) (1646 . 1652)) ((#("print(" 0 5 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified nil) 5 6 (fontified nil)) . 1646) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (1651 . 1652) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1651) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1652) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (1653 . 1654)) (25976 47498 362615 795000) 0 nil])
([nil nil ((1652 . 1657)) ((#("self." 0 1 (face tree-sitter-hl-face:keyword fontified t) 1 2 (face tree-sitter-hl-face:keyword fontified t) 2 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t)) . 1652) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5)) (25976 47498 275508 551000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1652) (undo-tree-id133 . -1) (#("e" 0 1 (fontified t)) . -1653) (undo-tree-id134 . -1) (#("l" 0 1 (fontified t)) . -1654) (undo-tree-id135 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -1655) (undo-tree-id136 . -1) (#("." 0 1 (fontified t)) . -1656) (undo-tree-id137 . -1) 1657) ((1652 . 1657)) (25976 47498 23834 130000) 0 nil])
([nil nil ((1652 . 1654)) ((#("WO" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 1652) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2)) (25976 47497 850774 191000) 0 nil])
([nil nil ((#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1653) (undo-tree-id132 . -1) 1654) ((1653 . 1654)) (25976 47497 683870 165000) 0 nil])
([nil nil ((1653 . 1660)) ((#("0.shape" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 1 2 (fontified t) 2 7 (face tree-sitter-hl-face:property fontified t)) . 1653) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7)) (25976 47497 517984 994000) 0 nil])
([nil nil ((1844 . 1846) (t 25976 47431 814184 903000)) ((#("?T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 1844) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2)) (25976 47497 353158 631000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1844) (undo-tree-id138 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1845) (undo-tree-id139 . -1) 1846) ((1844 . 1846)) (25976 47497 196438 678000) 0 nil])
([nil nil ((1844 . 1846)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 1844) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2)) (25976 47497 14101 598000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1844) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id147 . -1) (undo-tree-id149 . -1) (undo-tree-id151 . -1) (undo-tree-id153 . -1) (undo-tree-id155 . -1) (undo-tree-id157 . -1) (undo-tree-id159 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id165 . -1) (undo-tree-id167 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1845) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id175 . -1) (undo-tree-id177 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id183 . -1) (undo-tree-id185 . -1) 1846 (t 25976 47475 526186 294000)) ((1844 . 1846)) (25976 47496 824747 387000) 0 nil])
([nil nil ((#("                    print(W0.shape)
" 0 20 (fontified t) 20 25 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 28 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 28 29 (fontified t) 29 34 (face tree-sitter-hl-face:property fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (fontified t)) . 1626) (undo-tree-id186 . -36) (undo-tree-id187 . -34) (undo-tree-id188 . -34) (undo-tree-id189 . -34) (undo-tree-id190 . -34) (undo-tree-id191 . -35) (undo-tree-id192 . -35) (undo-tree-id193 . -35) (undo-tree-id194 . -35) (undo-tree-id195 . -35) (undo-tree-id197 . -36) (undo-tree-id199 . -36) (undo-tree-id200 . -36) (undo-tree-id202 . -36) (undo-tree-id204 . -36) (undo-tree-id206 . -36) (undo-tree-id208 . -36) (t 25976 47481 894186 497000)) ((1626 . 1662) (t 25976 47485 798186 621000)) (25976 47485 555409 134000) 0 nil])
nil
