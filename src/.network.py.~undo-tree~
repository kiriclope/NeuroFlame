(undo-tree-save-format-version . 1)
"adcc8910af2d45a352a7e6a030cbf09d5a50f97c"
[nil nil nil nil (25919 38755 910769 907000) 0 nil]
([nil nil (("torch" . 2897) (t 25913 16042 740592 156000)) nil (25919 38755 910768 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2902 . 2903) (nil fontified nil 2898 . 2903) (2898 . 2903) 2897) nil (25919 38755 910767 314000) 0 nil])
([nil nil ((#("c" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (undo-tree-id44 . -1) (#("r" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (#("o" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (#("t" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 2898) (undo-tree-id45 . -1)) nil (25919 38755 910764 813000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2897) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 2898) nil (25919 38755 910761 35000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:function.call rear-nonsticky t fontified t)) . 2897)) nil (25919 38755 910756 103000) 0 nil])
([nil nil ((2897 . 2901)) nil (25919 38755 910754 323000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2900) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 2901) nil (25919 38755 910747 622000) 0 nil])
([nil nil ((11622 . 11642) (t 25919 38755 905370 784000)) nil (25919 38849 938547 697000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11638) (undo-tree-id56 . -4) 11642) nil (25919 38849 938546 487000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11634) (undo-tree-id55 . -4) 11638) nil (25919 38849 938544 469000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11630) (undo-tree-id54 . -4) 11634) nil (25919 38849 938542 450000) 0 nil])
([nil nil ((11039 . 11048)) nil (25919 38849 938540 353000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11079 . 11080) (nil fontified nil 11078 . 11080) (nil fontified nil 11077 . 11078) (nil fontified nil 11072 . 11077) (nil fontified nil 11071 . 11072) (nil fontified nil 11067 . 11071) (nil fontified nil 11066 . 11067) (nil fontified nil 11061 . 11066) (nil fontified nil 11060 . 11061) (nil fontified nil 11058 . 11060) (nil fontified nil 11057 . 11058) (nil fontified nil 11052 . 11057) (nil fontified nil 11051 . 11052) (nil fontified nil 11048 . 11051) (nil fontified nil 11040 . 11048) (11040 . 11080)) nil (25919 38849 938538 434000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2897) (#("t" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("q" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("s" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2897) (#("." 0 1 (fontified t)) . 2897) (#("p" 0 1 (fontified t)) . 2897) (#("n" 0 1 (fontified t)) . 2897)) nil (25919 38849 938533 736000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2915) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . 1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 2916) nil (25919 38849 938528 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11105 . 11106) (nil fontified nil 11105 . 11106) (nil fontified nil 11104 . 11105) (nil fontified nil 11099 . 11104) (nil fontified nil 11098 . 11099) (nil fontified nil 11092 . 11098) (nil fontified nil 11091 . 11092) (nil fontified nil 11087 . 11091) (nil fontified nil 11086 . 11087) (nil fontified nil 11082 . 11086) (nil fontified nil 11079 . 11082) (11079 . 11106) (t 25919 38849 933115 993000)) nil (25919 38865 902205 647000) 0 nil])
([nil nil ((11079 . 11083) 11071) nil (25919 38865 902202 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11109 . 11110) (nil fontified nil 11109 . 11110) (nil fontified nil 11108 . 11109) (nil fontified nil 11103 . 11108) (nil fontified nil 11102 . 11103) (nil fontified nil 11096 . 11102) (nil fontified nil 11095 . 11096) (nil fontified nil 11091 . 11095) (nil fontified nil 11090 . 11091) (nil fontified nil 11086 . 11090) (nil fontified nil 11083 . 11086) (11083 . 11110)) nil (25919 38865 902200 380000) 0 nil])
([nil nil ((11110 . 11113)) nil (25919 38865 902197 309000) 0 nil])
([nil nil ((11140 . 11153)) nil (25919 38865 902196 192000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 11083) (#("t" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("q" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("s" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 11083) (#("." 0 1 (fontified t)) . 11083) (#("p" 0 1 (fontified t)) . 11083) (#("n" 0 1 (fontified t)) . 11083)) nil (25919 38865 902193 672000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) rear-nonsticky t fontified t)) . -11101) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . 1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 11102) nil (25919 38865 902186 819000) 0 nil])
([nil nil ((11107 . 11112) (t 25919 38865 897072 739000)) nil (25919 38873 254757 629000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . -11104) (undo-tree-id89 . -1) (#("p" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . -11105) (undo-tree-id90 . -1) (#("." 0 1 (fontified t)) . -11106) (undo-tree-id91 . -1) 11107) nil (25919 38873 254754 668000) 0 nil])
([nil nil ((11109 . 11110)) nil (25919 38959 817194 880000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 11104) (#("h" 0 1 (fontified t)) . 11104) (#("c" 0 1 (fontified t)) . 11104) (#("r" 0 1 (fontified t)) . 11104) (#("o" 0 1 (fontified t)) . 11104) (#("t" 0 1 (fontified t)) . 11104) (t 25919 38960 528816 399000)) nil (25919 38984 209696 227000) 0 nil] [nil nil ((11133 . 11138) (t 25919 38873 249052 821000)) ((#(", def" 0 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t)) . 11133) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -5) (undo-tree-id605 . -5) (undo-tree-id606 . -5) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) (undo-tree-id611 . -5) (undo-tree-id612 . -5) (undo-tree-id613 . -5) (undo-tree-id614 . -5) (undo-tree-id615 . -5) (undo-tree-id616 . -5) (undo-tree-id617 . -5) (undo-tree-id618 . -5) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -5) (undo-tree-id632 . -5) (undo-tree-id633 . -5) (undo-tree-id634 . -5)) (25919 38959 431477 405000) 0 nil])
([nil nil ((11104 . 11107)) nil (25919 38984 209689 439000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -11137) (undo-tree-id94 . -1) 11138) ((11137 . 11138)) (25919 38959 44160 257000) 0 nil])
([nil nil ((apply -2 769 867 undo--wrap-and-run-primitive-undo 769 867 ((777 . 779) 797)) (t 25919 38984 212752 242000)) nil (25919 39100 154143 672000) 0 nil])
([nil nil ((11137 . 11139)) ((#("vi" 0 2 (fontified t)) . 11137) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) (undo-tree-id552 . -2) (undo-tree-id553 . -2) (undo-tree-id554 . -2) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2)) (25919 38958 464032 562000) 0 nil])
([nil nil ((apply 2 799 865 undo--wrap-and-run-primitive-undo 799 865 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -807) 867))) nil (25919 39100 154138 352000) 0 nil])
([nil nil ((11139 . 11151)) ((#("ce=self.deci" 0 2 (face tree-sitter-hl-face:label fontified t) 2 3 (face tree-sitter-hl-face:operator fontified t) 3 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 10 (face tree-sitter-hl-face:property fontified t) 10 11 (face tree-sitter-hl-face:property fontified t) 11 12 (face tree-sitter-hl-face:property fontified t)) . 11139) (undo-tree-id476 . -12) (undo-tree-id477 . -12) (undo-tree-id478 . -12) (undo-tree-id479 . -12) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) (undo-tree-id486 . -12) (undo-tree-id487 . -12) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -12) (undo-tree-id491 . -12) (undo-tree-id492 . -12) (undo-tree-id493 . -12) (undo-tree-id494 . -12) (undo-tree-id495 . -12) (undo-tree-id496 . -12) (undo-tree-id497 . -12) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -12) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (undo-tree-id507 . -12) (undo-tree-id508 . -12) (undo-tree-id509 . -12)) (25919 38958 33197 862000) 0 nil])
([nil nil ((5963 . 5979) (t 25919 39100 152438 153000)) nil (25919 39945 347388 606000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -11149) (undo-tree-id92 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -11150) (undo-tree-id93 . -1) 11151) ((11149 . 11151)) (25919 38957 643596 922000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5975) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) 5979) nil (25919 39945 347385 38000) 0 nil])
([nil nil ((11149 . 11153)) ((#("vice" 0 4 (face tree-sitter-hl-face:property fontified t)) . 11149)) (25919 38957 231715 623000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5971) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) 5975) nil (25919 39945 347352 426000) 0 nil])
([nil nil ((11156 . 11168) (#("            " 0 12 (fontified nil)) . 11155) (undo-tree-id96 . -12) (11167 . 11168) (t 25919 38885 849018 692000)) ((#("
" 0 1 (fontified nil)) . 11167) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . 1) (undo-tree-id473 . -1) (undo-tree-id474 . 1) (11155 . 11167) (#("            " 0 12 (fontified t)) . 11156) (undo-tree-id475 . -1)) (25919 38956 510361 560000) 0 nil])
([nil nil ((5782 . 5790) (#("        " 0 8 (fontified nil)) . 5781) (undo-tree-id736 . -8) (5789 . 5790) (t 25919 39945 346147 853000)) nil (25919 39996 745813 909000) 0 nil])
([nil nil ((11155 . 11167)) ((#("            " 0 8 (fontified t) 8 12 (fontified t)) . 11155) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -12) (undo-tree-id407 . -1) (undo-tree-id408 . -12) (undo-tree-id409 . -12) (undo-tree-id410 . -12) (undo-tree-id411 . -12) (undo-tree-id412 . -12) (undo-tree-id413 . -12) (undo-tree-id414 . -12) (undo-tree-id415 . -12) (undo-tree-id416 . -12) (undo-tree-id417 . -12) (undo-tree-id418 . -12) (undo-tree-id419 . -12) (undo-tree-id420 . -12) (undo-tree-id421 . -12) (undo-tree-id422 . -12) (undo-tree-id423 . -12) (undo-tree-id424 . -12) (undo-tree-id425 . -12) (undo-tree-id426 . -12) (undo-tree-id427 . -12) (undo-tree-id428 . -12) (undo-tree-id429 . -12) (undo-tree-id430 . -12) (undo-tree-id431 . -12) (undo-tree-id432 . -12) (undo-tree-id433 . -12) (undo-tree-id434 . -12) (undo-tree-id435 . -12) (undo-tree-id436 . -12) (undo-tree-id437 . -12) (undo-tree-id438 . -12) (undo-tree-id439 . -12) (undo-tree-id440 . -12) (undo-tree-id441 . -12) (undo-tree-id442 . -12) (undo-tree-id443 . -12) (undo-tree-id444 . -12) (undo-tree-id445 . -12) (undo-tree-id446 . -12) (undo-tree-id447 . -12) (undo-tree-id448 . -12) (undo-tree-id449 . -12) (undo-tree-id450 . -12) (undo-tree-id451 . -12) (undo-tree-id452 . -12) (undo-tree-id453 . -12) (undo-tree-id454 . -12) (undo-tree-id455 . -12) (undo-tree-id456 . -12) (undo-tree-id457 . -12) (undo-tree-id458 . -12) (undo-tree-id459 . -12) (undo-tree-id460 . -12) (undo-tree-id461 . -12) (undo-tree-id462 . -12) (undo-tree-id463 . -12) (undo-tree-id464 . -12) (undo-tree-id465 . -12) (undo-tree-id466 . -12) (undo-tree-id467 . -12) (undo-tree-id468 . -12) (undo-tree-id469 . -12)) (25919 38954 636616 414000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 5797) (5796 . 5797) (5795 . 5797) (#("(" 0 1 (fontified nil)) . -5795) (5790 . 5796)) nil (25919 39996 745811 184000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11163) (undo-tree-id95 . -4) 11167) ((11163 . 11167)) (25919 38954 213927 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5835 . 5836) (nil fontified nil 5835 . 5836) (nil fontified nil 5831 . 5835) (nil fontified nil 5830 . 5831) (nil fontified nil 5829 . 5830) (nil fontified nil 5828 . 5829) (nil fontified nil 5827 . 5828) (nil fontified nil 5818 . 5827) (nil fontified nil 5817 . 5818) (nil fontified nil 5813 . 5817) (nil fontified nil 5812 . 5813) (nil fontified nil 5811 . 5812) (nil fontified nil 5810 . 5811) (nil fontified nil 5801 . 5810) (nil fontified nil 5800 . 5801) (nil fontified nil 5796 . 5800) (5796 . 5836)) nil (25919 39996 745808 932000) 0 nil])
([nil nil ((11576 . 11596) (t 25919 38888 353011 909000)) ((#(", device=self.device" 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t) 9 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (fontified t) 14 20 (face tree-sitter-hl-face:property fontified t)) . 11576) (undo-tree-id399 . -20) (undo-tree-id400 . -20) (undo-tree-id401 . -20) (undo-tree-id402 . -2)) (25919 38953 831765 238000) 0 nil])
([nil nil ((5796 . 5798) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -5796) (5796 . 5797)) nil (25919 39996 745804 903000) 0 nil])
([nil nil ((7937 . 7951)) ((#(", device=self." 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t) 9 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (fontified t)) . 7937) (undo-tree-id369 . -14) (undo-tree-id370 . -14) (undo-tree-id371 . -14) (undo-tree-id372 . -14) (undo-tree-id373 . -14) (undo-tree-id374 . -14) (undo-tree-id375 . -14) (undo-tree-id376 . -14) (undo-tree-id377 . -14) (undo-tree-id378 . -14) (undo-tree-id379 . -14) (undo-tree-id380 . -14) (undo-tree-id381 . -14) (undo-tree-id382 . -14) (undo-tree-id383 . -14) (undo-tree-id384 . -14) (undo-tree-id385 . -14) (undo-tree-id386 . -14) (undo-tree-id387 . -14) (undo-tree-id388 . -14) (undo-tree-id389 . -14) (undo-tree-id390 . -14) (undo-tree-id391 . -14) (undo-tree-id392 . -14) (undo-tree-id393 . -14) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14)) (25919 38953 555887 232000) 0 nil])
([nil nil ((5797 . 5801)) nil (25919 39996 745803 667000) 0 nil])
([nil nil ((7951 . 7957)) ((#("device" 0 6 (face tree-sitter-hl-face:property fontified t)) . 7951) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6)) (25919 38953 207003 729000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -5800) (undo-tree-id735 . -1) 5801) nil (25919 39996 745802 819000) 0 nil])
([nil nil ((10662 . 10670) (t 25919 38910 912950 799000)) ((#(", devuce" 0 2 (fontified t) 2 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 10662) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -8) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -6) (undo-tree-id310 . -7) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -8) (undo-tree-id358 . -8) (undo-tree-id359 . -8) (undo-tree-id360 . -8) (undo-tree-id361 . -8) (undo-tree-id362 . -8) (undo-tree-id363 . -8) (undo-tree-id364 . -8) (undo-tree-id365 . -8)) (25919 38952 944103 337000) 0 nil])
([nil nil ((5800 . 5805)) nil (25919 39996 745800 966000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -10667) (undo-tree-id98 . -1) (#("c" 0 1 (fontified t)) . -10668) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t)) . -10669) (undo-tree-id100 . -1) 10670) ((10667 . 10670)) (25919 38952 735889 299000) 0 nil])
([nil nil ((#("R" 0 1 (face tree-sitter-hl-face:string fontified t)) . -5804) (undo-tree-id734 . -1) 5805) nil (25919 39996 745799 869000) 0 nil])
([nil nil ((10667 . 10670)) ((#("ice" 0 3 (fontified t)) . 10667) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3)) (25919 38952 461501 898000) 0 nil])
([nil nil ((5804 . 5813)) nil (25919 39996 745797 972000) 0 nil])
([nil nil ((10670 . 10671)) ((#(" " 0 1 (fontified t)) . 10670) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1)) (25919 38952 174671 130000) 0 nil])
([nil nil ((5814 . 5815)) nil (25919 39996 745797 38000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10670) (undo-tree-id97 . -1) 10671) ((10670 . 10671)) (25919 38951 854875 112000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5814) (undo-tree-id733 . -1) 5815) nil (25919 39996 745795 841000) 0 nil])
([nil nil ((10670 . 10682)) ((#("=self.device" 0 1 (face tree-sitter-hl-face:operator fontified t) 1 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (fontified t) 6 12 (face tree-sitter-hl-face:property fontified t)) . 10670) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -1)) (25919 38951 472893 575000) 0 nil])
([nil nil ((5814 . 5815)) nil (25919 39996 745793 405000) 0 nil])
([nil nil ((10986 . 10988) (t 25919 38924 16915 301000)) ((#(", " 0 1 (fontified t) 1 2 (fontified t)) . 10986) (undo-tree-id186 . -2) (undo-tree-id187 . -1) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2)) (25919 38951 274911 90000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5814) (undo-tree-id732 . -1) 5815) nil (25919 40129 631130 339000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -10986) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t)) . -10987) (undo-tree-id102 . -1) 10988) ((10986 . 10988)) (25919 38951 82037 811000) 0 nil])
([nil nil ((5814 . 5816)) ((#(", " 0 2 (fontified t)) . 5814) (t 25919 39996 742008 573000)) (25919 40130 342113 863000) 0 nil])
([nil nil ((10986 . 11006) (t 25919 38934 644886 514000)) ((#(", device=self.device" 0 2 (fontified t) 2 8 (face tree-sitter-hl-face:label fontified t) 8 9 (face tree-sitter-hl-face:operator fontified t) 9 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (fontified t) 14 20 (face tree-sitter-hl-face:property fontified t)) . 10986) (undo-tree-id103 . -20) (undo-tree-id104 . -20) (undo-tree-id105 . -20) (undo-tree-id106 . -20) (undo-tree-id107 . -2) (undo-tree-id108 . -8) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -20) (undo-tree-id112 . -20) (undo-tree-id113 . -20) (undo-tree-id114 . -20) (undo-tree-id115 . -20) (undo-tree-id116 . -20) (undo-tree-id117 . -20) (undo-tree-id118 . -20) (undo-tree-id119 . -20) (undo-tree-id120 . -20) (undo-tree-id121 . -20) (undo-tree-id122 . -20) (undo-tree-id123 . -20) (undo-tree-id124 . -20) (undo-tree-id125 . -20) (undo-tree-id126 . -20) (undo-tree-id127 . -20) (undo-tree-id128 . -20) (undo-tree-id129 . -20) (undo-tree-id130 . -20) (undo-tree-id131 . -20) (undo-tree-id132 . -20) (undo-tree-id133 . -20) (undo-tree-id134 . -20) (undo-tree-id135 . -20) (undo-tree-id136 . -20) (undo-tree-id137 . -20) (undo-tree-id138 . -20) (undo-tree-id139 . -20) (undo-tree-id140 . -20) (undo-tree-id141 . -20) (undo-tree-id142 . -20) (undo-tree-id143 . -20) (undo-tree-id144 . -20) (undo-tree-id145 . -20) (undo-tree-id146 . -20) (undo-tree-id147 . -20) (undo-tree-id148 . -20) (undo-tree-id149 . -20) (undo-tree-id150 . -20) (undo-tree-id151 . -20) (undo-tree-id152 . -20) (undo-tree-id153 . -20) (undo-tree-id154 . -20) (undo-tree-id155 . -20) (undo-tree-id156 . -20) (undo-tree-id157 . -20) (undo-tree-id158 . -20) (undo-tree-id159 . -20) (undo-tree-id160 . -20) (undo-tree-id161 . -20) (undo-tree-id162 . -20) (undo-tree-id163 . -20) (undo-tree-id164 . -20) (undo-tree-id165 . -20) (undo-tree-id166 . -20) (undo-tree-id167 . -20) (undo-tree-id168 . -20) (undo-tree-id169 . -20) (undo-tree-id170 . -20) (undo-tree-id171 . -20) (undo-tree-id172 . -20) (undo-tree-id173 . -20) (undo-tree-id174 . -20) (undo-tree-id175 . -20) (undo-tree-id176 . -20) (undo-tree-id177 . -20) (undo-tree-id178 . -20) (undo-tree-id179 . -20) (undo-tree-id180 . -20) (undo-tree-id181 . -20) (undo-tree-id182 . -20) (undo-tree-id183 . -20) (undo-tree-id184 . -20) (undo-tree-id185 . -20) (t 25919 38946 508854 379000)) (25919 38946 507287 114000) 0 nil])
([nil nil ((8455 . 8472) (t 25919 39996 742008 573000)) nil (25919 40157 725324 775000) 0 nil])
nil
([nil nil ((8525 . 8537)) nil (25919 40157 725319 779000) 0 nil])
([nil nil ((8526 . 8538) (#("            " 0 12 (fontified nil)) . 8525) (undo-tree-id771 . -12) (undo-tree-id772 . -12) (undo-tree-id773 . -12) (undo-tree-id774 . -12) (undo-tree-id775 . -12) (undo-tree-id776 . -12) (undo-tree-id777 . -12) (undo-tree-id778 . -12) (undo-tree-id779 . -12) (undo-tree-id780 . -12) (undo-tree-id781 . -12) (undo-tree-id782 . -12) (8537 . 8538) (t 25919 40157 721572 403000)) nil (25919 40258 734794 4000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8553) (8552 . 8553) (8551 . 8553) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8551) (8538 . 8552)) nil (25919 40258 734783 143000) 0 nil])
([nil nil ((8552 . 8553)) nil (25919 40258 734781 804000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8552) (undo-tree-id770 . -1) 8553) nil (25919 40258 734780 820000) 0 nil])
([nil nil ((8552 . 8553)) nil (25919 40258 734778 959000) 0 nil])
([nil nil ((#("_" 0 1 (face tree-sitter-hl-face:constant fontified t)) . -8552) (undo-tree-id768 . -1) (undo-tree-id769 . -1) 8553) nil (25919 40258 734777 991000) 0 nil])
([nil nil ((8552 . 8557)) nil (25919 40258 734775 239000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8560) (8559 . 8560) (8558 . 8560) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8558) (8558 . 8559)) nil (25919 40258 734773 852000) 0 nil])
([nil nil ((8559 . 8564)) nil (25919 40258 734772 390000) 0 nil])
([nil nil ((8565 . 8566)) nil (25919 40258 734771 616000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -8565) (undo-tree-id767 . -1) 8566) nil (25919 40258 734770 754000) 0 nil])
([nil nil ((8565 . 8566)) nil (25919 40258 734769 102000) 0 nil])
([nil nil ((8566 . 8583)) nil (25919 40258 734768 388000) 0 nil])
([nil nil ((8565 . 8568)) nil (25919 40258 734767 454000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -8567) (undo-tree-id766 . -1) 8568) nil (25919 40258 734766 144000) 0 nil])
([nil nil ((8565 . 8566)) nil (25919 40258 734764 492000) 0 nil])
([nil nil ((8567 . 8568)) nil (25919 40258 734763 645000) 0 nil])
([nil nil ((8569 . 8571)) nil (25919 40258 734762 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8651 . 8652) (nil fontified nil 8651 . 8652) (nil fontified nil 8650 . 8651) (nil fontified nil 8649 . 8650) (nil fontified nil 8625 . 8649) (nil fontified nil 8624 . 8625) (nil fontified nil 8623 . 8624) (nil fontified nil 8618 . 8623) (nil fontified nil 8602 . 8618) (nil fontified nil 8600 . 8602) (nil fontified nil 8593 . 8600) (nil fontified nil 8592 . 8593) (nil fontified nil 8588 . 8592) (nil fontified nil 8587 . 8588) (nil fontified nil 8585 . 8587) (nil fontified nil 8573 . 8585) (8573 . 8652)) nil (25919 40258 734761 352000) 0 nil])
([nil nil ((8573 . 8589) (#("            " 0 12 (fontified t)) . 8573)) nil (25919 40258 734757 700000) 0 nil])
([nil nil ((8622 . 8626)) nil (25919 40258 734756 333000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8636) (undo-tree-id745 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8637) (undo-tree-id746 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8638) (undo-tree-id747 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8639) (undo-tree-id748 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8640) (undo-tree-id749 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8641) (undo-tree-id750 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8642) (undo-tree-id751 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8643) (undo-tree-id752 . -1) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8644) (undo-tree-id753 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8645) (undo-tree-id754 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8646) (undo-tree-id755 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified nil)) . -8647) (undo-tree-id756 . -1) (#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8648) (undo-tree-id757 . -1) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8649) (undo-tree-id758 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8650) (undo-tree-id759 . -1) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8651) (undo-tree-id760 . -1) (#("v" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8652) (undo-tree-id761 . -1) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8653) (undo-tree-id762 . -1) (#("t" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8654) (undo-tree-id763 . -1) (#("y" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8655) (undo-tree-id764 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8656) (undo-tree-id765 . -1) 8657) nil (25919 40258 734752 431000) 0 nil])
([nil nil ((#("A" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8633) (undo-tree-id742 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8634) (undo-tree-id743 . -1) (#("l" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8635) (undo-tree-id744 . -1) 8636) nil (25919 40258 734729 768000) 0 nil])
([nil nil ((8633 . 8650)) nil (25919 40258 734725 605000) 0 nil])
([nil nil ((8650 . 8652)) nil (25919 40258 734724 867000) 0 nil])
([nil nil ((#(";" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8651) (undo-tree-id741 . -1) 8652) nil (25919 40258 734723 728000) 0 nil])
([nil nil ((8651 . 8653)) nil (25919 40258 734721 895000) 0 nil])
([nil nil ((#(";" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8651) (undo-tree-id739 . -1) (#(" " 0 1 (face tree-sitter-hl-face:string fontified t)) . -8652) (undo-tree-id740 . -1) 8653) nil (25919 40258 734720 534000) 0 nil])
([nil nil ((8651 . 8656)) nil (25919 40258 734716 606000) 0 nil])
([nil nil ((#("G" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8654) (undo-tree-id737 . -1) (#("I" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8655) (undo-tree-id738 . -1) 8656) nil (25919 40258 734715 84000) 0 nil])
([nil nil ((8654 . 8658)) nil (25919 40258 734699 424000) 0 nil])
([nil nil ((8659 . 8671)) nil (25919 40258 734698 528000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8673) (8672 . 8673) (8671 . 8673) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8671) (8671 . 8672)) nil (25919 40258 734697 422000) 0 nil])
([nil nil ((8672 . 8677)) nil (25919 40258 734695 725000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8680) (8679 . 8680) (8678 . 8680) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -8678) (8678 . 8679)) nil (25919 40258 734693 365000) 0 nil])
([nil nil ((8679 . 8684)) nil (25919 40258 734686 870000) 0 nil])
([nil nil ((8688 . 8708) (#("                    " 0 20 (fontified nil)) . 8687) (undo-tree-id835 . -20) (8686 . 8708) (t 25919 40258 733298 723000)) nil (25919 40295 661653 173000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8704) (undo-tree-id834 . -4) 8708) nil (25919 40295 661646 272000) 0 nil])
([nil nil ((8704 . 8708)) nil (25919 40295 661640 910000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8706) (undo-tree-id832 . -1) (#("j" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8707) (undo-tree-id833 . -1) 8708) nil (25919 40295 661637 632000) 0 nil])
([nil nil ((8706 . 8708)) nil (25919 40295 661628 69000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8706) (undo-tree-id830 . -1) (#(" " 0 1 (fontified t)) . -8707) (undo-tree-id831 . -1) 8708) nil (25919 40295 661624 461000) 0 nil])
([nil nil ((8706 . 8713)) nil (25919 40295 661616 332000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8712) (undo-tree-id829 . -1) 8713) nil (25919 40295 661613 555000) 0 nil])
([nil nil ((8712 . 8716)) nil (25919 40295 661608 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8794 . 8795) (nil fontified nil 8794 . 8795) (nil fontified nil 8793 . 8794) (nil fontified nil 8792 . 8793) (nil fontified nil 8768 . 8792) (nil fontified nil 8767 . 8768) (nil fontified nil 8766 . 8767) (nil fontified nil 8761 . 8766) (nil fontified nil 8745 . 8761) (nil fontified nil 8743 . 8745) (nil fontified nil 8736 . 8743) (nil fontified nil 8735 . 8736) (nil fontified nil 8731 . 8735) (nil fontified nil 8730 . 8731) (nil fontified nil 8728 . 8730) (nil fontified nil 8716 . 8728) (8716 . 8795)) nil (25919 40295 661603 152000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8793) (undo-tree-id825 . -1) (undo-tree-id826 . 1) (undo-tree-id827 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -8794) (undo-tree-id828 . -1) 8795) nil (25919 40295 661591 74000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8716) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#(" " 0 1 (fontified t)) . -8717) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (#(" " 0 1 (fontified t)) . -8718) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#(" " 0 1 (fontified t)) . -8719) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (#(" " 0 1 (fontified t)) . -8720) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#(" " 0 1 (fontified t)) . -8721) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#(" " 0 1 (fontified t)) . -8722) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#(" " 0 1 (fontified t)) . -8723) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#(" " 0 1 (fontified t)) . -8724) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (#(" " 0 1 (fontified t)) . -8725) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (#(" " 0 1 (fontified t)) . -8726) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (#(" " 0 1 (fontified t)) . -8727) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("if self.VERBOSE:
                print('All to all connectivity '" 0 2 (fontified t) 2 3 (fontified t) 3 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (fontified t) 8 15 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 15 17 (fontified t) 17 33 (fontified t) 33 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 40 (face tree-sitter-hl-face:string fontified t) 40 64 (face tree-sitter-hl-face:string fontified t) 64 65 (face tree-sitter-hl-face:string fontified t)) . -8728) (undo-tree-id822 . -65) (undo-tree-id823 . -56) (undo-tree-id824 . -65) 8793) nil (25919 40295 661568 405000) 0 nil])
([nil nil ((8687 . 8708)) nil (25919 40295 661468 260000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8704) (undo-tree-id785 . -4) 8708) nil (25919 40295 661465 318000) 0 nil])
([nil nil ((8704 . 8712)) nil (25919 40295 661459 355000) 0 nil])
([nil nil ((8712 . 8717)) nil (25919 40295 661457 0) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -8715) (undo-tree-id783 . -1) (#("n" 0 1 (fontified t)) . -8716) (undo-tree-id784 . -1) 8717) nil (25919 40295 661452 610000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8724) (8723 . 8724) (8722 . 8724) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -8722) (8715 . 8723)) nil (25919 40295 661424 668000) 0 nil])
([nil nil ((8723 . 8729)) nil (25919 40295 661410 281000) 0 nil])
([nil nil ((8729 . 8731) (t 25919 40295 665198 662000)) nil (25919 40350 256656 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9050 . 9051) (nil fontified nil 9050 . 9051) (nil fontified nil 9049 . 9050) (nil fontified nil 9043 . 9049) (nil fontified nil 9042 . 9043) (nil fontified nil 9038 . 9042) (nil fontified nil 9037 . 9038) (nil fontified nil 9031 . 9037) (nil fontified nil 8943 . 9031) (nil fontified nil 8938 . 8943) (nil fontified nil 8937 . 8938) (nil fontified nil 8933 . 8937) (nil fontified nil 8932 . 8933) (nil fontified nil 8927 . 8932) (nil fontified nil 8839 . 8927) (nil fontified nil 8838 . 8839) (nil fontified nil 8837 . 8838) (nil fontified nil 8836 . 8837) (nil fontified nil 8831 . 8836) (nil fontified nil 8830 . 8831) (nil fontified nil 8828 . 8830) (nil fontified nil 8827 . 8828) (nil fontified nil 8823 . 8827) (nil fontified nil 8822 . 8823) (nil fontified nil 8821 . 8822) (nil fontified nil 8817 . 8821) (nil fontified nil 8731 . 8817) (8731 . 9051)) nil (25919 40350 256653 993000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8796) (undo-tree-id948 . -1) (#(" " 0 1 (fontified t)) . -8797) (undo-tree-id949 . -1) (#(" " 0 1 (fontified t)) . -8798) (undo-tree-id950 . -1) (#(" " 0 1 (fontified t)) . -8799) (undo-tree-id951 . -1) (#(" " 0 1 (fontified t)) . -8800) (undo-tree-id952 . -1) (#(" " 0 1 (fontified nil)) . -8801) (undo-tree-id953 . -1) (#(" " 0 1 (fontified nil)) . -8802) (undo-tree-id954 . -1) (#(" " 0 1 (fontified t)) . -8803) (undo-tree-id955 . -1) (#(" " 0 1 (fontified t)) . -8804) (undo-tree-id956 . -1) (#(" " 0 1 (fontified t)) . -8805) (undo-tree-id957 . -1) (#(" " 0 1 (fontified t)) . -8806) (undo-tree-id958 . -1) (#(" " 0 1 (fontified t)) . -8807) (undo-tree-id959 . -1) (#(" " 0 1 (fontified t)) . -8808) (undo-tree-id960 . -1) (#(" " 0 1 (fontified t)) . -8809) (undo-tree-id961 . -1) (#(" " 0 1 (fontified t)) . -8810) (undo-tree-id962 . -1) (#(" " 0 1 (fontified t)) . -8811) (undo-tree-id963 . -1) (#(" " 0 1 (fontified t)) . -8812) (undo-tree-id964 . -1) (#(" " 0 1 (fontified t)) . -8813) (undo-tree-id965 . -1) (#(" " 0 1 (fontified t)) . -8814) (undo-tree-id966 . -1) (#(" " 0 1 (fontified t)) . -8815) (undo-tree-id967 . -1) (#(" " 0 1 (fontified t)) . -8816) (undo-tree-id968 . -1) 8817) nil (25919 40350 256645 417000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8777) (undo-tree-id929 . -1) (#(" " 0 1 (fontified t)) . -8778) (undo-tree-id930 . -1) (#(" " 0 1 (fontified t)) . -8779) (undo-tree-id931 . -1) (#(" " 0 1 (fontified t)) . -8780) (undo-tree-id932 . -1) (#(" " 0 1 (fontified t)) . -8781) (undo-tree-id933 . -1) (#(" " 0 1 (fontified t)) . -8782) (undo-tree-id934 . -1) (#(" " 0 1 (fontified t)) . -8783) (undo-tree-id935 . -1) (#(" " 0 1 (fontified t)) . -8784) (undo-tree-id936 . -1) (#(" " 0 1 (fontified t)) . -8785) (undo-tree-id937 . -1) (#(" " 0 1 (fontified t)) . -8786) (undo-tree-id938 . -1) (#(" " 0 1 (fontified t)) . -8787) (undo-tree-id939 . -1) (#(" " 0 1 (fontified nil)) . -8788) (undo-tree-id940 . -1) (#(" " 0 1 (fontified t)) . -8789) (undo-tree-id941 . -1) (#(" " 0 1 (fontified t)) . -8790) (undo-tree-id942 . -1) (#(" " 0 1 (fontified t)) . -8791) (undo-tree-id943 . -1) (#(" " 0 1 (fontified t)) . -8792) (undo-tree-id944 . -1) (#(" " 0 1 (fontified t)) . -8793) (undo-tree-id945 . -1) (#(" " 0 1 (fontified t)) . -8794) (undo-tree-id946 . -1) (#(" " 0 1 (fontified t)) . -8795) (undo-tree-id947 . -1) 8796) nil (25919 40350 256621 516000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8756) (undo-tree-id908 . -1) (#(" " 0 1 (fontified t)) . -8757) (undo-tree-id909 . -1) (#(" " 0 1 (fontified t)) . -8758) (undo-tree-id910 . -1) (#(" " 0 1 (fontified nil)) . -8759) (undo-tree-id911 . -1) (#(" " 0 1 (fontified t)) . -8760) (undo-tree-id912 . -1) (#(" " 0 1 (fontified t)) . -8761) (undo-tree-id913 . -1) (#(" " 0 1 (fontified t)) . -8762) (undo-tree-id914 . -1) (#(" " 0 1 (fontified t)) . -8763) (undo-tree-id915 . -1) (#(" " 0 1 (fontified t)) . -8764) (undo-tree-id916 . -1) (#(" " 0 1 (fontified t)) . -8765) (undo-tree-id917 . -1) (#(" " 0 1 (fontified t)) . -8766) (undo-tree-id918 . -1) (#(" " 0 1 (fontified t)) . -8767) (undo-tree-id919 . -1) (#(" " 0 1 (fontified t)) . -8768) (undo-tree-id920 . -1) (#(" " 0 1 (fontified t)) . -8769) (undo-tree-id921 . -1) (#(" " 0 1 (fontified t)) . -8770) (undo-tree-id922 . -1) (#(" " 0 1 (fontified t)) . -8771) (undo-tree-id923 . -1) (#(" " 0 1 (fontified t)) . -8772) (undo-tree-id924 . -1) (#(" " 0 1 (fontified t)) . -8773) (undo-tree-id925 . -1) (#(" " 0 1 (fontified t)) . -8774) (undo-tree-id926 . -1) (#(" " 0 1 (fontified nil)) . -8775) (undo-tree-id927 . -1) (#(" " 0 1 (fontified t)) . -8776) (undo-tree-id928 . -1) 8777) nil (25919 40350 256600 649000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8735) (undo-tree-id887 . -1) (#(" " 0 1 (fontified t)) . -8736) (undo-tree-id888 . -1) (#(" " 0 1 (fontified t)) . -8737) (undo-tree-id889 . -1) (#(" " 0 1 (fontified t)) . -8738) (undo-tree-id890 . -1) (#(" " 0 1 (fontified t)) . -8739) (undo-tree-id891 . -1) (#(" " 0 1 (fontified t)) . -8740) (undo-tree-id892 . -1) (#(" " 0 1 (fontified t)) . -8741) (undo-tree-id893 . -1) (#(" " 0 1 (fontified t)) . -8742) (undo-tree-id894 . -1) (#(" " 0 1 (fontified t)) . -8743) (undo-tree-id895 . -1) (#(" " 0 1 (fontified nil)) . -8744) (undo-tree-id896 . -1) (#(" " 0 1 (fontified t)) . -8745) (undo-tree-id897 . -1) (#(" " 0 1 (fontified t)) . -8746) (undo-tree-id898 . -1) (#(" " 0 1 (fontified t)) . -8747) (undo-tree-id899 . -1) (#(" " 0 1 (fontified t)) . -8748) (undo-tree-id900 . -1) (#(" " 0 1 (fontified t)) . -8749) (undo-tree-id901 . -1) (#(" " 0 1 (fontified t)) . -8750) (undo-tree-id902 . -1) (#(" " 0 1 (fontified t)) . -8751) (undo-tree-id903 . -1) (#(" " 0 1 (fontified t)) . -8752) (undo-tree-id904 . -1) (#(" " 0 1 (fontified t)) . -8753) (undo-tree-id905 . -1) (#(" " 0 1 (fontified t)) . -8754) (undo-tree-id906 . -1) (#(" " 0 1 (fontified t)) . -8755) (undo-tree-id907 . -1) 8756) nil (25919 40350 256577 545000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8730) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#(" " 0 1 (fontified t)) . -8731) (undo-tree-id883 . -1) (#(" " 0 1 (fontified t)) . -8732) (undo-tree-id884 . -1) (#(" " 0 1 (fontified t)) . -8733) (undo-tree-id885 . -1) (#(" " 0 1 (fontified t)) . -8734) (undo-tree-id886 . -1) 8735) nil (25919 40350 256453 388000) 0 nil])
([nil nil ((8730 . 8731)) nil (25919 40350 256446 538000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -8736) (undo-tree-id843 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8737) (#("s" 0 1 (fontified t)) . -8737) (undo-tree-id844 . -1) (#("e" 0 1 (fontified t)) . -8738) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("l" 0 1 (fontified t)) . -8739) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -8740) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#("." 0 1 (fontified t)) . -8741) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8742) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8743) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -8744) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . 1) (undo-tree-id866 . -1) (#("i" 0 1 (fontified t)) . -8745) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (#("_" 0 1 (fontified t)) . -8746) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (#("p" 0 1 (fontified t)) . -8747) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (#("o" 0 1 (fontified t)) . -8748) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (#("p" 0 1 (fontified t)) . -8749) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -8750) (undo-tree-id877 . -1) (undo-tree-id878 . 1) (undo-tree-id879 . -1) (#("," 0 1 (fontified t)) . -8751) (undo-tree-id880 . -1) 8752) nil (25919 40350 256441 995000) 0 nil])
([nil nil ((8737 . 8743) (8736 . 8738) (#("(" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -8736) (8736 . 8737)) nil (25919 40350 256402 913000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8744) (undo-tree-id842 . -1) 8745) nil (25919 40350 256401 88000) 0 nil])
([nil nil ((8744 . 8745)) nil (25919 40350 256398 920000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#("
" 0 1 (fontified t)) . 8745)) nil (25919 40350 256395 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256388 879000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256381 969000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified nil)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256374 934000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745) (#(" " 0 1 (fontified t)) . 8745)) nil (25919 40350 256369 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#("
" 0 1 (fontified t)) . 8762)) nil (25919 40350 256365 325000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256358 843000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256351 911000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified nil)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256344 953000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8762) (#(" " 0 1 (fontified t)) . 8762)) nil (25919 40350 256340 107000) 0 nil])
([nil nil ((8745 . 8746)) nil (25919 40350 256338 936000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -8783) (undo-tree-id841 . -1) 8784) nil (25919 40350 256337 941000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8783) (undo-tree-id840 . -1)) nil (25919 40350 256335 127000) 0 nil])
([nil nil ((8812 . 8815)) nil (25919 40350 256333 244000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8813) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (#("h" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8814) (undo-tree-id839 . -1) 8815) nil (25919 40350 256330 602000) 0 nil])
([nil nil ((8813 . 8815)) nil (25919 40350 256312 52000) 0 nil])
([nil nil ((8812 . 8821) (t 25919 40350 257050 721000)) nil (25919 40384 838392 381000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -8812) (undo-tree-id969 . -1) (#("e" 0 1 (fontified t)) . -8813) (undo-tree-id970 . -1) (#("l" 0 1 (fontified t)) . -8814) (undo-tree-id971 . -1) (#("f" 0 1 (fontified t)) . -8815) (undo-tree-id972 . -1) (#("." 0 1 (fontified t)) . -8816) (undo-tree-id973 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8817) (undo-tree-id974 . -1) (#("I" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8818) (undo-tree-id975 . -1) (#("G" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8819) (undo-tree-id976 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8820) (undo-tree-id977 . -1) 8821) nil (25919 40415 611036 531000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8726) (undo-tree-id987 . -1) (#("." 0 1 (face tree-sitter-hl-face:number fontified t)) . -8727) (undo-tree-id988 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8728) (undo-tree-id989 . -1) 8729 (t 25919 40384 844957 1000)) nil (25919 40491 379830 63000) 0 nil] [nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8726) (undo-tree-id978 . -1) (#("." 0 1 (face tree-sitter-hl-face:number fontified t)) . -8727) (undo-tree-id979 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8728) (undo-tree-id980 . -1) 8729 (t 25919 40384 844957 1000)) ((8726 . 8729)) (25919 40415 609980 947000) 0 nil])
([nil nil ((8726 . 8731)) nil (25919 40491 379826 461000) 0 nil])
nil
([nil nil ((#(";" 0 1 (fontified t)) . -8730) (undo-tree-id986 . -1) 8731) nil (25919 40491 379825 554000) 0 nil])
([nil nil ((8730 . 8736)) nil (25919 40491 379823 651000) 0 nil])
([nil nil ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8734) (undo-tree-id984 . -1) (#("M" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8735) (undo-tree-id985 . -1) 8736) nil (25919 40491 379822 60000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8738) (8737 . 8738) (8736 . 8738) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8736) (8734 . 8737)) nil (25919 40491 379818 563000) 0 nil])
([nil nil ((8737 . 8739)) nil (25919 40491 379816 704000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8737) (undo-tree-id982 . -1) (#("_" 0 1 (fontified t)) . -8738) (undo-tree-id983 . -1) 8739) nil (25919 40491 379815 520000) 0 nil])
([nil nil ((8737 . 8738)) nil (25919 40491 379811 566000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -8737) (undo-tree-id981 . -1) 8738) nil (25919 40491 379810 468000) 0 nil])
([nil nil ((8737 . 8742)) nil (25919 40491 379801 433000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8745) (8744 . 8745) (8743 . 8745) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -8743) (8743 . 8744)) nil (25919 40491 379799 75000) 0 nil])
([nil nil ((8744 . 8749)) nil (25919 40538 511040 534000) 0 nil])
([nil nil ((8687 . 8707) (t 25919 40539 788537 315000)) nil (25919 40545 144339 457000) 0 nil] [nil nil ((#("ormal" 0 5 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 8717) (undo-tree-id991 . -2) (undo-tree-id993 . -2) (undo-tree-id995 . -2) (undo-tree-id997 . -2) (undo-tree-id999 . -2) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -5) (t 25919 40491 384668 441000)) ((8717 . 8722) (t 25919 40522 884583 106000)) (25919 40522 874456 520000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8703) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) 8707) nil (25919 40545 144333 560000) 0 nil])
nil
([nil nil ((8852 . 8853) (t 25919 40545 148522 794000)) nil (25919 40594 849192 195000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8852) (undo-tree-id1056 . -1) 8853) nil (25919 40594 849190 689000) 0 nil])
([nil nil ((8820 . 8821)) nil (25919 40594 849187 416000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8820) (undo-tree-id1055 . -1) 8821) nil (25919 40594 849185 146000) 0 nil])
([nil nil ((8852 . 8857)) nil (25919 40594 849169 178000) 0 nil])
([nil nil ((7338 . 7340) (#("(" 0 1 (fontified nil)) . -7338) (7333 . 7339) (t 25919 40594 852388 118000)) nil (25919 40632 115908 68000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7338) (undo-tree-id1058 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7339)) nil (25919 40632 115905 740000) 0 nil])
([nil nil ((7338 . 7339)) nil (25919 40632 115902 466000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 7338)) nil (25919 40632 115901 681000) 0 nil])
([nil nil ((7339 . 7341) (#("(" 0 1 (fontified nil)) . -7339) (7339 . 7340)) nil (25919 40632 115900 548000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7339) (undo-tree-id1057 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7340)) nil (25919 40632 115898 765000) 0 nil])
([nil nil ((7338 . 7340) (#("(" 0 1 (fontified nil)) . -7338) (7338 . 7339)) nil (25919 40632 115888 168000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7339)) nil (25919 40632 115886 338000) 0 nil])
([nil nil ((7353 . 7354)) nil (25919 40632 115885 234000) 0 nil])
([nil nil ((7310 . 7312) (#("(" 0 1 (fontified nil)) . -7310) (7305 . 7311)) nil (25919 40632 115883 418000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7311)) nil (25919 40632 115880 448000) 0 nil])
([nil nil ((7325 . 7326)) nil (25919 40660 788136 874000) 0 nil])
([nil nil ((7390 . 7398)) ((#("        " 0 8 (fontified t)) . 7390) (undo-tree-id1059 . -1) (t 25919 40634 20282 5000)) (25919 40661 489746 87000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7325) (undo-tree-id1112 . -1) (undo-tree-id1113 . 1) (undo-tree-id1114 . -1) 7326 (t 25919 40634 20282 5000)) nil (25919 40673 32390 880000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 7305) (#("a" 0 1 (fontified t)) . 7305) (#("o" 0 1 (fontified t)) . 7305) (#("l" 0 1 (fontified t)) . 7305) (#("f" 0 1 (fontified t)) . 7305)) nil (25919 40673 32386 821000) 0 nil])
([nil nil ((#("float" 0 5 (fontified t)) . 7334) (undo-tree-id1111 . -5)) nil (25919 40673 32385 110000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 7334) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . -1)) nil (25919 40673 32383 49000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7305) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . 1) (undo-tree-id1107 . -1)) nil (25919 40673 32378 117000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -7347) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . 1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) 7348) nil (25919 40673 32368 463000) 0 nil])
([nil nil ((8336 . 8338) (#("(" 0 1 (fontified nil)) . -8336) (8331 . 8337) (t 25919 40673 36176 309000)) nil (25919 40691 480692 60000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -8337) (undo-tree-id1118 . -1) (undo-tree-id1119 . 1) (undo-tree-id1120 . -1) 8338) nil (25919 40691 480690 95000) 0 nil])
([nil nil ((8339 . 8340)) nil (25919 40691 480686 119000) 0 nil])
([nil nil ((8875 . 8877) (#("(" 0 1 (fontified nil)) . -8875) (8870 . 8876)) nil (25919 40691 480685 172000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8876)) nil (25919 40691 480683 931000) 0 nil])
([nil nil ((8878 . 8879)) nil (25919 40691 480683 162000) 0 nil])
([nil nil ((8542 . 8544) (#("(" 0 1 (fontified nil)) . -8542) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (8537 . 8543)) nil (25919 40691 480681 703000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8543) (undo-tree-id1115 . -1)) nil (25919 40691 480675 882000) 0 nil])
([nil nil ((8545 . 8546)) nil (25919 40691 480662 63000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -131) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) 132 (t 25919 40691 484126 335000)) nil (25919 40792 187262 701000) 0 nil])
([nil nil ((131 . 132) (t 25919 40792 187853 477000)) nil (25919 40793 613804 27000) 0 nil])
([nil nil ((nil rear-nonsticky nil 180 . 181) (nil fontified nil 131 . 181) (131 . 181) (t 25919 40793 615849 608000)) nil (25919 40902 916058 297000) 0 nil])
([nil nil ((147 . 148)) nil (25919 40902 916056 115000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -181) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) 182) nil (25919 40902 916050 599000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -181) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) 182 (t 25919 40902 919553 427000)) nil (25919 40903 720065 81000) 0 nil])
([nil nil ((5730 . 5754) (#("            " 0 12 (fontified t)) . 5730) (undo-tree-id1297 . -12) (t 25919 40903 723551 249000)) nil (25919 40954 595924 646000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5750) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) 5754) nil (25919 40954 595920 164000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5746) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) 5750) nil (25919 40954 595885 703000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -219) (undo-tree-id25 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -220) (undo-tree-id26 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:constant.builtin)) . -221) (undo-tree-id27 . -1) 222 (t 25919 40954 599413 403000)) nil (25921 2845 16245 942000) 0 nil])
([nil nil ((219 . 224)) nil (25921 2845 16241 245000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -223) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 224) nil (25921 2845 16236 339000) 0 nil])
([nil nil ((apply -4 182 289 undo--wrap-and-run-primitive-undo 182 289 ((227 . 229) (182 . 184) 264)) (t 25921 2845 19490 129000)) nil (25921 2857 889052 666000) 0 nil])
([nil nil ((apply -2 268 292 undo--wrap-and-run-primitive-undo 268 292 ((268 . 270) 289)) (t 25921 2857 891455 261000)) nil (25921 2883 875739 202000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 182) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 182) (t 25921 2883 879384 825000)) nil (25933 1222 57204 946000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 225) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 225)) nil (25933 1222 57202 994000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 219) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (#("l" 0 1 (fontified t)) . 219) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (#("a" 0 1 (fontified t)) . 219) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (#("F" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . 219) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (25933 1222 57199 636000) 0 nil])
([nil nil ((221 . 221) (221 . 222) (220 . 220) (220 . 221) (219 . 219) (219 . 220)) nil (25933 1222 57159 702000) 0 nil])
([nil nil ((apply -4 182 290 undo--wrap-and-run-primitive-undo 182 290 ((226 . 228) (182 . 184) 263))) nil (25933 1344 409908 325000) 0 nil])
([nil nil ((nil rear-nonsticky nil 396 . 397) (nil fontified nil 290 . 397) (290 . 397)) nil (25933 1344 409907 290000) 0 nil])
([nil nil ((289 . 290)) nil (25933 1344 409905 885000) 0 nil])
([nil nil ((#("torch.manual_seed(seed)
if torch.cuda.is_available():
    torch.cuda.manual_seed_all(seed)  # For all GPUs
" 0 6 (fontified t) 6 17 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t) 24 26 (face tree-sitter-hl-face:keyword fontified t) 26 33 (fontified t) 33 37 (face tree-sitter-hl-face:property fontified t) 37 38 (fontified t) 38 50 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 64 (fontified t) 64 68 (face tree-sitter-hl-face:property fontified t) 68 69 (fontified t) 69 84 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 84 85 (face (rainbow-delimiters-depth-1-face) fontified t) 85 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 92 (fontified t) 92 106 (face tree-sitter-hl-face:comment fontified t) 106 107 (fontified t rear-nonsticky t)) . 291) (undo-tree-id22 . -107) 398) nil (25933 1344 409904 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -290) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 291) nil (25933 1344 409898 893000) 0 nil])
([nil nil ((1911 . 1923) (t 25933 1344 412949 243000)) nil (25933 1503 232599 291000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1919) (undo-tree-id26 . -4) 1923) nil (25933 1503 232598 8000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1915) (undo-tree-id25 . -4) 1919) nil (25933 1503 232595 656000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1911) (undo-tree-id24 . -4) 1915) nil (25933 1503 232593 413000) 0 nil])
([nil nil ((1911 . 1923)) nil (25933 1503 232591 43000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1919) (undo-tree-id23 . -4) 1923) nil (25933 1503 232589 770000) 0 nil])
([nil nil ((1232 . 1233)) nil (25933 1503 232580 62000) 0 nil])
([nil nil ((nil fontified nil 1339 . 1340) (nil fontified nil 1325 . 1339) (nil fontified nil 1323 . 1325) (nil fontified nil 1322 . 1323) (nil fontified nil 1318 . 1322) (nil fontified nil 1317 . 1318) (nil fontified nil 1302 . 1317) (nil fontified nil 1301 . 1302) (nil fontified nil 1297 . 1301) (nil fontified nil 1285 . 1297) (nil fontified nil 1284 . 1285) (nil fontified nil 1283 . 1284) (nil fontified nil 1271 . 1283) (nil fontified nil 1270 . 1271) (nil fontified nil 1266 . 1270) (nil fontified nil 1259 . 1266) (nil fontified nil 1257 . 1259) (nil fontified nil 1256 . 1257) (nil fontified nil 1255 . 1256) (nil fontified nil 1251 . 1255) (nil fontified nil 1250 . 1251) (nil fontified nil 1239 . 1250) (nil fontified nil 1233 . 1239) (1233 . 1340)) nil (25933 1503 232578 153000) 0 nil])
([nil nil ((1233 . 1241)) nil (25933 1503 232570 713000) 0 nil])
([nil nil ((1265 . 1273)) nil (25933 1503 232568 912000) 0 nil])
([nil nil ((1303 . 1315) (#("    " 0 4 (fontified t)) . 1303)) nil (25933 1503 232563 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1334 . 1335) (nil fontified nil 1334 . 1335) (nil fontified nil 1333 . 1334) (nil fontified nil 1329 . 1333) (nil fontified nil 1328 . 1329) (nil fontified nil 1317 . 1328) (nil fontified nil 1311 . 1317) (nil fontified nil 1303 . 1311) (1303 . 1335) (t 25933 1503 236954 298000)) nil (25933 1511 959058 937000) 0 nil])
([nil nil ((1311 . 1315) 1303) nil (25933 1511 959055 746000) 0 nil])
([nil nil ((1321 . 1321) (1321 . 1322)) nil (25933 1511 959054 462000) 0 nil])
([nil nil ((1324 . 1324) (1324 . 1325) (1323 . 1323) (1323 . 1324) (1322 . 1322) (1322 . 1323)) nil (25933 1511 959052 916000) 0 nil])
([nil nil ((#("i" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1322) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("d" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1323) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1324) (undo-tree-id54 . -1) 1325) nil (25933 1511 959048 262000) 0 nil])
([nil nil ((1325 . 1325) (1325 . 1326) (1323 . 1323) (1323 . 1325) (1322 . 1322) (1322 . 1323)) nil (25933 1511 959003 188000) 0 nil])
([nil nil ((nil fontified nil 1413 . 1417) (#("seed" 0 4 (fontified nil)) . -1408) (1412 . 1421) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1394) (1398 . 1407) (nil fontified nil 1358 . 1362) (#("seed" 0 4 (fontified nil)) . -1353) (1357 . 1366) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1343) (1347 . 1356) (nil fontified nil 1269 . 1273) (#("seed" 0 4 (fontified nil)) . -1264) (1268 . 1277) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1254) (t 25933 1511 964954 575000) (1258 . 1267) (t 25933 1511 964954 575000)) nil (25933 1543 173866 455000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1348) (undo-tree-id70 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1349) (undo-tree-id71 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1350) (undo-tree-id72 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1351) (undo-tree-id73 . -1) 1352) nil (25933 1543 173861 848000) 0 nil])
([nil nil ((1351 . 1351) (1351 . 1352) (1350 . 1350) (1350 . 1351) (1348 . 1348) (1348 . 1350)) nil (25933 1543 173855 968000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1399) (undo-tree-id66 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1400) (undo-tree-id67 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1401) (undo-tree-id68 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1402) (undo-tree-id69 . -1) 1403) nil (25933 1543 173852 944000) 0 nil])
([nil nil ((1402 . 1402) (1402 . 1403) (1401 . 1401) (1401 . 1402) (1399 . 1399) (1399 . 1401)) nil (25933 1543 173847 97000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1259) (undo-tree-id62 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1260) (undo-tree-id63 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1261) (undo-tree-id64 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1262) (undo-tree-id65 . -1) 1263) nil (25933 1543 173844 426000) 0 nil])
([nil nil ((1262 . 1262) (1262 . 1263) (1261 . 1261) (1261 . 1262) (1260 . 1260) (1260 . 1261) (1259 . 1259) (1259 . 1260)) nil (25933 1543 173838 610000) 0 nil])
([nil nil ((#("s" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1254) (undo-tree-id57 . -1) (#("e" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1255) (undo-tree-id58 . -1) (#("l" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1256) (undo-tree-id59 . -1) (#("f" 0 1 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1257) (undo-tree-id60 . -1) (#("." 0 1 (fontified t)) . -1258) (undo-tree-id61 . -1) 1259) nil (25933 1543 173835 573000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:property fontified t)) . 1338)) nil (25933 1543 173827 958000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1338)) nil (25933 1543 173826 830000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:property fontified t)) . 1384) (undo-tree-id56 . -4)) nil (25933 1543 173824 753000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1384) (undo-tree-id55 . 1)) nil (25933 1543 173819 64000) 0 nil])
([nil nil ((1269 . 1278) (t 25933 1543 176955 569000)) nil (25933 1546 782890 986000) 0 nil])
([nil nil ((1437 . 1441) 1429 (t 25933 1546 784955 683000)) nil (25933 1550 411886 471000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1437) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) 1441) nil (25933 1550 411881 161000) 0 nil])
([nil nil ((nil fontified nil 2303 . 2304) (nil fontified nil 2289 . 2303) (nil fontified nil 2287 . 2289) (nil fontified nil 2286 . 2287) (nil fontified nil 2282 . 2286) (nil fontified nil 2281 . 2282) (nil fontified nil 2277 . 2281) (nil fontified nil 2276 . 2277) (nil fontified nil 2272 . 2276) (nil fontified nil 2268 . 2272) (nil fontified nil 2261 . 2268) (nil fontified nil 2260 . 2261) (nil fontified nil 2256 . 2260) (nil fontified nil 2250 . 2256) (nil fontified nil 2238 . 2250) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2232 . 2236) (nil fontified nil 2231 . 2232) (nil fontified nil 2227 . 2231) (nil fontified nil 2226 . 2227) (nil fontified nil 2222 . 2226) (nil fontified nil 2215 . 2222) (nil fontified nil 2214 . 2215) (nil fontified nil 2210 . 2214) (nil fontified nil 2204 . 2210) (nil fontified nil 2192 . 2204) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2176 . 2188) (nil fontified nil 2175 . 2176) (nil fontified nil 2171 . 2175) (nil fontified nil 2164 . 2171) (nil fontified nil 2162 . 2164) (nil fontified nil 2154 . 2162) (nil fontified nil 2153 . 2154) (nil fontified nil 2144 . 2153) (nil fontified nil 2143 . 2144) (nil fontified nil 2139 . 2143) (nil fontified nil 2138 . 2139) (nil fontified nil 2134 . 2138) (nil fontified nil 2133 . 2134) (nil fontified nil 2129 . 2133) (nil fontified nil 2122 . 2129) (nil fontified nil 2116 . 2122) (nil fontified nil 2108 . 2116) (2108 . 2304) (t 25933 1550 416955 799000)) nil (25933 1566 740831 157000) 0 nil])
([nil nil ((nil fontified t 2267 . 2271) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 2267 . 2271) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2267) (2276 . 2280) (nil fontified t 2222 . 2226) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 2222 . 2226) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2222) (2231 . 2235) (nil fontified t 2134 . 2138) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 2134 . 2138) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2134) (2143 . 2147)) nil (25933 1566 740811 916000) 0 nil])
([nil nil ((2107 . 2120) (t 25933 1566 744956 318000)) nil (25933 1654 445243 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2163 . 2164) (nil fontified nil 2108 . 2164) (2108 . 2164)) nil (25933 1654 445242 254000) 0 nil])
([nil nil ((2108 . 2120)) nil (25933 1654 445240 325000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2116) (undo-tree-id137 . -4) 2120) nil (25933 1654 445238 892000) 0 nil])
([nil nil ((2144 . 2152) 2152) nil (25933 1654 445236 399000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2219) (undo-tree-id133 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2220) (undo-tree-id134 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2221) (undo-tree-id135 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -2222) (undo-tree-id136 . -1) 2223) nil (25933 1654 445234 200000) 0 nil])
([nil nil ((2221 . 2221) (2221 . 2221) (2221 . 2221) (2221 . 2222) (2220 . 2220) (2220 . 2221) (2219 . 2219) (2219 . 2220)) nil (25933 1654 445228 102000) 0 nil])
([nil nil ((2225 . 2225) (2225 . 2227) (2224 . 2224) (2224 . 2225) (2223 . 2223) (2223 . 2224) (2222 . 2222) (2222 . 2223)) nil (25933 1654 445224 646000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2192) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("        torch.manual_seed(new_seed)
" 0 8 (fontified t) 8 14 (fontified t) 14 21 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 21 25 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (fontified t)) . -2193) (undo-tree-id123 . -29) (undo-tree-id124 . -29) (undo-tree-id125 . -29) (undo-tree-id126 . -29) (undo-tree-id127 . -29) (undo-tree-id128 . -29) (undo-tree-id129 . -29) (undo-tree-id130 . -29) (undo-tree-id131 . -29) (undo-tree-id132 . -36) 2229) nil (25933 1654 445220 747000) 0 nil])
([nil nil ((#("            " 0 4 (fontified t) 4 12 (fontified t)) . -2188) (undo-tree-id90 . -4) (undo-tree-id91 . -12) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) 2192) nil (25933 1654 445192 511000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2262) (#("n" 0 1 (fontified t)) . 2262) (#("o" 0 1 (fontified t)) . 2262) (#("N" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . 2262)) nil (25933 1654 445173 54000) 0 nil])
([nil nil ((2266 . 2266) (2266 . 2267) (2265 . 2265) (2265 . 2266) (2264 . 2264) (2264 . 2265) (2263 . 2263) (2263 . 2264) (2262 . 2262) (2262 . 2263)) nil (25933 1654 445171 252000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2266) (undo-tree-id89 . -1) 2267) nil (25933 1654 445167 733000) 0 nil])
([nil nil ((2268 . 2268) (2268 . 2270) (2267 . 2267) (2267 . 2268) (2266 . 2266) (2266 . 2267)) nil (25933 1654 445165 263000) 0 nil])
([nil nil ((#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2311) (undo-tree-id85 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2312) (undo-tree-id86 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -2313) (undo-tree-id87 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -2314) (undo-tree-id88 . -1) 2315) nil (25933 1654 445162 311000) 0 nil])
([nil nil ((2314 . 2315) (2313 . 2313) (2313 . 2314) (2312 . 2312) (2312 . 2313) (2311 . 2311) (2311 . 2312)) nil (25933 1654 445155 410000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -2314) 2315) nil (25933 1654 445152 703000) 0 nil])
([nil nil ((2314 . 2314) (2314 . 2316)) nil (25933 1654 445151 228000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -2314) (undo-tree-id83 . -1) (#("_" 0 1 (fontified t)) . -2315) (undo-tree-id84 . -1) 2316) nil (25933 1654 445148 782000) 0 nil])
([nil nil ((2314 . 2317)) nil (25933 1654 445134 575000) 0 nil])
([nil nil ((2318 . 2318) (2318 . 2319) (2317 . 2317) (2317 . 2318)) nil (25933 1654 445128 993000) 0 nil])
([nil nil ((2107 . 2119) (t 25933 1654 448959 109000)) nil (25933 1657 509710 711000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2115) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) 2119) nil (25933 1657 509708 59000) 0 nil])
([nil nil ((2108 . 2120) (#("        " 0 8 (fontified nil)) . 2107) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -8) (undo-tree-id142 . -8) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (2115 . 2116)) nil (25933 1657 509688 926000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2116) (undo-tree-id215 . -4) 2120 (t 25933 1657 512959 207000)) nil (25933 1660 489848 174000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2112) (undo-tree-id214 . -4) 2116) nil (25933 1660 489845 695000) 0 nil])
([nil nil ((2112 . 2113)) nil (25933 1660 489843 647000) 0 nil])
([nil nil ((#("<" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2112) (undo-tree-id213 . -1) 2113) nil (25933 1660 489841 613000) 0 nil])
([nil nil ((2108 . 2120) (#("    " 0 4 (fontified t)) . 2108) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) 2112) nil (25933 1660 489837 818000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2116) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) 2120) nil (25933 1660 489816 600000) 0 nil])
([nil nil ((20 . 21) (t 25933 1660 496959 302000)) nil (25933 1665 833139 58000) 0 nil])
([nil nil ((30 . 30) (30 . 32) (29 . 29) (29 . 30) (27 . 27) (27 . 29) (26 . 26) (26 . 27) (24 . 24) (24 . 26) (23 . 23) (23 . 24) (22 . 22) (22 . 23) (21 . 21) (21 . 22)) nil (25933 1679 224641 839000) 0 nil])
([nil nil ((10773 . 10781) (t 25933 1679 780959 916000)) nil (25933 5933 225757 110000) 0 nil] [nil nil ((#("import time
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 11 (fontified t) 11 12 (fontified t)) . -21) (undo-tree-id216 . -7) (undo-tree-id217 . -12) 33 (t 25933 1665 836959 472000)) ((21 . 33) (t 25933 1678 636959 879000)) (25933 1678 632266 130000) 0 nil])
([nil nil ((11101 . 11109)) nil (25933 5933 225752 464000) 0 nil])
nil
([nil nil ((10671 . 10683) (t 25933 5933 229095 270000)) nil (25933 5951 479468 458000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10679) (undo-tree-id218 . -4) 10683) nil (25933 5951 479464 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 209 . 210) (nil fontified nil 159 . 210) (159 . 210) (t 25933 5951 485095 851000)) nil (25933 6007 855570 937000) 0 nil])
([nil nil ((159 . 160)) nil (25933 6007 855565 13000) 0 nil])
([nil nil ((7969 . 7977) (t 25933 6007 861097 645000)) nil (25933 6123 777632 128000) 0 nil])
([nil nil ((8262 . 8274)) nil (25933 6123 777630 975000) 0 nil])
([nil nil ((7977 . 7977) (7977 . 7979)) nil (25933 6123 777630 200000) 0 nil])
([nil nil ((7968 . 7977)) nil (25933 6123 777629 187000) 0 nil])
([nil nil ((7988 . 7997)) nil (25933 6123 777628 267000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 7991) (7990 . 7991) (7989 . 7991) (#("'" 0 1 (fontified nil)) . -7989) (7988 . 7990)) nil (25933 6123 777627 55000) 0 nil])
([nil nil ((7992 . 7992) (7992 . 7993) (7991 . 7991) (7991 . 7992) (7990 . 7990) (7990 . 7991)) nil (25933 6123 777625 49000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7992) (undo-tree-id219 . -1) 7993) nil (25933 6123 777622 567000) 0 nil])
([nil nil ((7997 . 7997) (7997 . 7998) (7995 . 7995) (7995 . 7997) (7994 . 7994) (7994 . 7995) (7993 . 7993) (7993 . 7994) (7992 . 7992) (7992 . 7993)) nil (25933 6123 777610 930000) 0 nil])
([nil nil ((7999 . 8000)) nil (25933 6123 777607 320000) 0 nil])
([nil nil ((8000 . 8013)) nil (25933 6123 777602 836000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 8015) (8014 . 8015) (#("
" 0 1 (fontified t)) . 8013) (8014 . 8015) (t 25933 6123 781101 333000)) nil (25933 6140 131006 394000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8158 . 8159) (nil fontified nil 8015 . 8159) (8015 . 8159)) nil (25933 6140 131004 486000) 0 nil])
([nil nil ((8015 . 8027)) nil (25933 6140 131003 205000) 0 nil])
([nil nil ((8060 . 8072)) nil (25933 6140 131002 412000) 0 nil])
([nil nil ((8103 . 8115)) nil (25933 6140 131001 109000) 0 nil])
([nil nil ((8155 . 8194) (#("                           " 0 27 (fontified t)) . 8155) (undo-tree-id241 . -12) 8167) nil (25933 6140 130999 397000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8153) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 8154) nil (25933 6140 130992 718000) 0 nil])
([nil nil ((8206 . 8218) (#("       " 0 7 (fontified t)) . 8206) (undo-tree-id251 . -7) 8213 (t 25933 6140 137101 854000)) nil (25933 6174 352993 676000) 0 nil])
([nil nil ((8159 . 8159) (8159 . 8160) (8156 . 8156) (8156 . 8159) (8155 . 8155) (8155 . 8156) (8154 . 8154) (8154 . 8155) (8151 . 8151) (8151 . 8154)) nil (25933 6174 352990 639000) 0 nil])
([nil nil ((8160 . 8160) (8160 . 8161)) nil (25933 6174 352987 864000) 0 nil])
([nil nil ((8212 . 8212) (8212 . 8215)) nil (25933 6174 352986 556000) 0 nil])
([nil nil ((#("ç" 0 1 (fontified t)) . -8214) (undo-tree-id250 . -1) 8215) nil (25933 6174 352985 276000) 0 nil])
([nil nil ((8221 . 8221) (8221 . 8222) (8217 . 8217) (8217 . 8221) (8216 . 8216) (8216 . 8217) (8215 . 8215) (8215 . 8216) (8214 . 8214) (8214 . 8215)) nil (25933 6174 352982 844000) 0 nil])
([nil nil ((8223 . 8225)) nil (25933 6174 352980 117000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8224) (undo-tree-id249 . -1) 8225) nil (25933 6174 352979 200000) 0 nil])
([nil nil ((8224 . 8264)) nil (25933 6174 352977 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8283 . 8284) (nil fontified nil 8283 . 8284) (nil fontified nil 8280 . 8283) (nil fontified nil 8278 . 8280) (nil fontified nil 8275 . 8278) (nil fontified nil 8273 . 8275) (nil fontified nil 8270 . 8273) (nil fontified nil 8268 . 8270) (nil fontified nil 8265 . 8268) (nil fontified nil 8264 . 8265) (8264 . 8284)) nil (25933 6174 352976 215000) 0 nil])
([nil nil ((8284 . 8285)) nil (25933 6174 352972 908000) 0 nil])
([nil nil ((8285 . 8325)) nil (25933 6174 352971 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8344 . 8345) (nil fontified nil 8344 . 8345) (nil fontified nil 8341 . 8344) (nil fontified nil 8339 . 8341) (nil fontified nil 8336 . 8339) (nil fontified nil 8334 . 8336) (nil fontified nil 8331 . 8334) (nil fontified nil 8329 . 8331) (nil fontified nil 8326 . 8329) (nil fontified nil 8325 . 8326) (8325 . 8345)) nil (25933 6174 352970 175000) 0 nil])
([nil nil ((8345 . 8346)) nil (25933 6174 352966 963000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8341) (undo-tree-id248 . -1) 8342) nil (25933 6174 352965 790000) 0 nil])
([nil nil ((8341 . 8341) (8341 . 8342)) nil (25933 6174 352963 765000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8275) (undo-tree-id247 . -1) 8276) nil (25933 6174 352962 588000) 0 nil])
([nil nil ((8275 . 8275) (8275 . 8276)) nil (25933 6174 352960 418000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8270) (undo-tree-id246 . -1) 8271) nil (25933 6174 352959 206000) 0 nil])
([nil nil ((8270 . 8270) (8270 . 8271)) nil (25933 6174 352956 863000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8331) (undo-tree-id245 . -1) 8332) nil (25933 6174 352955 618000) 0 nil])
([nil nil ((8331 . 8331) (8331 . 8332)) nil (25933 6174 352953 325000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8267) (undo-tree-id244 . -1) 8268) nil (25933 6174 352952 109000) 0 nil])
([nil nil ((8267 . 8267) (8267 . 8268)) nil (25933 6174 352949 807000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8328) (undo-tree-id243 . -1) 8329) nil (25933 6174 352948 298000) 0 nil])
([nil nil ((8328 . 8328) (8328 . 8329)) nil (25933 6174 352945 8000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8206) (undo-tree-id242 . -1) 8207) nil (25933 6174 352943 543000) 0 nil])
([nil nil ((8206 . 8206) (8206 . 8207)) nil (25933 6174 352932 848000) 0 nil])
([nil nil ((#("5" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8150)) nil (25933 6174 352930 401000) 0 nil])
([nil nil ((8150 . 8150) (8150 . 8151)) nil (25933 6174 352925 733000) 0 nil])
([nil nil ((8059 . 8071) (t 25933 6174 357102 943000)) nil (25933 6192 199034 119000) 0 nil])
([nil nil ((8061 . 8061) (8061 . 8066) (8060 . 8060) (8060 . 8061) (8059 . 8059) (8059 . 8060) (8056 . 8056) (8056 . 8059)) nil (25933 6192 199029 130000) 0 nil])
([nil nil ((8071 . 8071) (8071 . 8072) (8067 . 8067) (8067 . 8071) (t 25933 6192 205103 511000)) nil (25933 6209 323116 383000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -8071) (undo-tree-id256 . -1) 8072) nil (25933 6209 323114 540000) 0 nil])
([nil nil ((8073 . 8073) (8073 . 8074) (8072 . 8072) (8072 . 8073) (8071 . 8071) (8071 . 8072)) nil (25933 6209 323112 161000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -8073) (undo-tree-id255 . -1) 8074) nil (25933 6209 323110 197000) 0 nil])
([nil nil ((8085 . 8085) (8085 . 8087) (8084 . 8084) (8084 . 8085) (8082 . 8082) (8082 . 8084) (8081 . 8081) (8081 . 8082) (8080 . 8080) (8080 . 8081) (8079 . 8079) (8079 . 8080) (8075 . 8075) (8075 . 8079) (8073 . 8073) (8073 . 8075)) nil (25933 6209 323107 475000) 0 nil])
([nil nil ((8393 . 8393) (8393 . 8394) (8389 . 8389) (8389 . 8393)) nil (25933 6209 323103 444000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -8393) (undo-tree-id254 . -1) 8394) nil (25933 6209 323101 665000) 0 nil])
([nil nil ((8395 . 8397) (8394 . 8394) (8394 . 8395) (8393 . 8393) (8393 . 8394)) nil (25933 6209 323098 563000) 0 nil])
([nil nil ((8402 . 8402) (8402 . 8404) (8401 . 8401) (8401 . 8402) (8400 . 8400) (8400 . 8401) (8399 . 8399) (8399 . 8400) (8397 . 8397) (8397 . 8399)) nil (25933 6209 323096 291000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -8402) (undo-tree-id252 . -1) (#("." 0 1 (fontified t)) . -8403) (undo-tree-id253 . -1) 8404) nil (25933 6209 323092 136000) 0 nil])
([nil nil ((8407 . 8407) (8407 . 8409) (8406 . 8406) (8406 . 8407) (8405 . 8405) (8405 . 8406) (8403 . 8403) (8403 . 8405) (8402 . 8402) (8402 . 8403)) nil (25933 6209 323076 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8481 . 8482) (nil fontified nil 8423 . 8482) (8423 . 8482) (t 25933 6209 329104 56000)) nil (25933 6222 77024 639000) 0 nil])
([nil nil ((8410 . 8423)) nil (25933 6222 77019 459000) 0 nil])
([nil nil ((8495 . 8507) (t 25933 6222 81104 462000)) nil (25933 6259 236979 180000) 0 nil])
([nil nil ((8496 . 8508) (#("            " 0 12 (fontified nil)) . 8495) (undo-tree-id258 . -12) (8507 . 8508) (t 25933 6259 249105 644000)) nil (25933 6337 276306 434000) 0 nil])
([nil nil ((8514 . 8516) (8513 . 8513) (8513 . 8514) (8512 . 8512) (8512 . 8513) (8511 . 8511) (8511 . 8512) (8510 . 8510) (8510 . 8511) (8508 . 8508) (8508 . 8510)) nil (25933 6337 276302 569000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8515) (undo-tree-id257 . -1) 8516) nil (25933 6337 276298 344000) 0 nil])
([nil nil ((8515 . 8518)) nil (25933 6337 276284 787000) 0 nil])
([nil nil ((8518 . 8530) (#(" " 0 1 (fontified nil)) . 8517) (undo-tree-id260 . -1) (8518 . 8519) (t 25933 6337 281108 127000)) nil (25933 6378 279825 746000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8546 . 8547) (nil fontified nil 8496 . 8547) (8496 . 8547)) nil (25933 6378 279822 379000) 0 nil])
([nil nil ((8496 . 8508)) nil (25933 6378 279820 428000) 0 nil])
([nil nil ((#("            samples =
" 0 12 (fontified t) 12 19 (face tree-sitter-hl-face:variable fontified t) 19 20 (fontified t) 20 21 (face tree-sitter-hl-face:operator fontified t) 21 22 (fontified t)) . -8559) (undo-tree-id259 . -22) 8581) nil (25933 6378 279816 507000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -8546) (undo-tree-id373 . -1) (#("_" 0 1 (fontified t)) . -8547) (undo-tree-id374 . -1) (#("s" 0 1 (fontified t)) . -8548) (undo-tree-id375 . -1) (#("a" 0 1 (fontified t)) . -8549) (undo-tree-id376 . -1) (#("m" 0 1 (fontified t)) . -8550) (undo-tree-id377 . -1) (#("p" 0 1 (fontified t)) . -8551) (undo-tree-id378 . -1) (#("l" 0 1 (fontified t)) . -8552) (undo-tree-id379 . -1) (#("e" 0 1 (fontified t)) . -8553) (undo-tree-id380 . -1) (#("s" 0 1 (fontified t)) . -8554) (undo-tree-id381 . -1) 8555 (t 25933 6378 285109 432000)) nil (25933 6667 979950 619000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8547) (8547 . 8547) (8547 . 8548) (8546 . 8546) (8546 . 8547)) nil (25933 6667 979931 123000) 0 nil])
([nil nil ((#("a" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -8547) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 8548) nil (25933 6667 979923 670000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8548)) nil (25933 6667 979664 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8643 . 8644) (nil fontified nil 8643 . 8644) (nil fontified nil 8642 . 8643) (nil fontified nil 8637 . 8642) (nil fontified nil 8636 . 8637) (nil fontified nil 8632 . 8636) (nil fontified nil 8631 . 8632) (nil fontified nil 8630 . 8631) (nil fontified nil 8619 . 8630) (nil fontified nil 8618 . 8619) (nil fontified nil 8615 . 8618) (nil fontified nil 8608 . 8615) (nil fontified nil 8607 . 8608) (nil fontified nil 8606 . 8607) (nil fontified nil 8605 . 8606) (nil fontified nil 8600 . 8605) (nil fontified nil 8599 . 8600) (nil fontified nil 8598 . 8599) (nil fontified nil 8593 . 8598) (nil fontified nil 8592 . 8593) (nil fontified nil 8587 . 8592) (nil fontified nil 8586 . 8587) (nil fontified nil 8582 . 8586) (nil fontified nil 8581 . 8582) (nil fontified nil 8580 . 8581) (nil fontified nil 8579 . 8580) (nil fontified nil 8576 . 8579) (nil fontified nil 8575 . 8576) (nil fontified nil 8574 . 8575) (nil fontified nil 8573 . 8574) (nil fontified nil 8570 . 8573) (nil fontified nil 8569 . 8570) (nil fontified nil 8568 . 8569) (nil fontified nil 8567 . 8568) (nil fontified nil 8564 . 8567) (nil fontified nil 8552 . 8564) (8552 . 8644) (t 25933 6667 985118 651000)) nil (25933 6682 34451 60000) 0 nil])
([nil nil ((8552 . 8553)) nil (25933 6682 34442 253000) 0 nil])
([nil nil ((#("samples" 0 7 (face tree-sitter-hl-face:variable fontified t)) . 8508)) nil (25933 6682 34440 121000) 0 nil])
([nil nil ((8510 . 8510) (8510 . 8511) (8508 . 8508) (8508 . 8510)) nil (25933 6682 34435 593000) 0 nil])
([nil nil ((8548 . 8560) (t 25933 6682 41119 98000)) nil (25933 6683 801755 73000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8631) (undo-tree-id410 . -1) (#("a" 0 1 (fontified t)) . -8632) (undo-tree-id411 . -1) (#("_" 0 1 (fontified t)) . -8633) (undo-tree-id412 . -1) (#("d" 0 1 (fontified t)) . -8634) (undo-tree-id413 . -1) (#("i" 0 1 (fontified t)) . -8635) (undo-tree-id414 . -1) (#("f" 0 1 (fontified t)) . -8636) (undo-tree-id415 . -1) (#("f" 0 1 (fontified t)) . -8637) (undo-tree-id416 . -1) (#(" " 0 1 (fontified t)) . -8638) (undo-tree-id417 . -1) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8639) (undo-tree-id418 . -1) (#(" " 0 1 (fontified t)) . -8640) (undo-tree-id419 . -1) (#("s" 0 1 (fontified t)) . -8641) (undo-tree-id420 . -1) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -8642) (undo-tree-id421 . -1) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -8643) (undo-tree-id422 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -8644) (undo-tree-id423 . -1) (#("." 0 1 (fontified t)) . -8645) (undo-tree-id424 . -1) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8646) (undo-tree-id425 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8647) (undo-tree-id426 . -1) (#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8648) (undo-tree-id427 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8649) (undo-tree-id428 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -8650) (undo-tree-id429 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8651) (undo-tree-id430 . -1) 8652 (t 25933 6683 809119 155000)) nil (25933 6699 444276 521000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -8622) (undo-tree-id401 . -1) (#("." 0 1 (fontified t)) . -8623) (undo-tree-id402 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -8624) (undo-tree-id403 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -8625) (undo-tree-id404 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -8626) (undo-tree-id405 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8627) (undo-tree-id406 . -1) (#("t" 0 1 (fontified t)) . -8628) (undo-tree-id407 . -1) (#("h" 0 1 (fontified t)) . -8629) (undo-tree-id408 . -1) (#("e" 0 1 (fontified t)) . -8630) (undo-tree-id409 . -1) 8631) nil (25933 6699 444248 810000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8618) (undo-tree-id397 . -1) (#("o" 0 1 (fontified t)) . -8619) (undo-tree-id398 . -1) (#("r" 0 1 (fontified t)) . -8620) (undo-tree-id399 . -1) (#("c" 0 1 (fontified t)) . -8621) (undo-tree-id400 . -1) 8622) nil (25933 6699 444236 959000) 0 nil])
([nil nil ((8620 . 8620) (8620 . 8621) (8618 . 8618) (8618 . 8620)) nil (25933 6699 444231 268000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8549)) nil (25933 6699 444229 707000) 0 nil])
([nil nil ((#("/" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8547) (undo-tree-id395 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8548) (undo-tree-id396 . -1) 8549) nil (25933 6699 444228 164000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8549)) nil (25933 6699 444224 605000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8547) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("." 0 1 (fontified t)) . -8548) (undo-tree-id394 . -1) 8549) nil (25933 6699 444220 760000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8549)) nil (25933 6699 444192 427000) 0 nil])
([nil nil ((8623 . 8625) (#("(" 0 1 (fontified nil)) . -8623) (8623 . 8624) (t 25933 6699 449119 652000)) nil (25933 6732 695874 141000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8623) (undo-tree-id435 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8624) (undo-tree-id436 . -1) 8625) nil (25933 6732 695872 397000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8625) (8624 . 8625) (8623 . 8625) (#("[" 0 1 (fontified nil)) . -8623) (8623 . 8624)) nil (25933 6732 695868 737000) 0 nil])
([nil nil ((8624 . 8624) (8624 . 8625)) nil (25933 6732 695867 192000) 0 nil])
([nil nil ((8626 . 8627)) nil (25933 6732 695866 262000) 0 nil])
([nil nil ((8631 . 8631) (8631 . 8632) (8627 . 8627) (8627 . 8631)) nil (25933 6732 695865 341000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -8631) (undo-tree-id434 . -1) 8632) nil (25933 6732 695863 826000) 0 nil])
([nil nil ((8633 . 8635) (#("[" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -8633) (8632 . 8634) (8631 . 8631) (8631 . 8632)) nil (25933 6732 695861 336000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -8632) (undo-tree-id432 . -1) (#("[" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -8633) (undo-tree-id433 . -1) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8634)) nil (25933 6732 695859 170000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8634) (8633 . 8634) (8632 . 8634) (#("[" 0 1 (fontified nil)) . -8632) (8632 . 8633)) nil (25933 6732 695854 599000) 0 nil])
([nil nil ((8633 . 8633) (8633 . 8634)) nil (25933 6732 695852 845000) 0 nil])
([nil nil ((8637 . 8639) (8635 . 8635) (8635 . 8637)) nil (25933 6732 695851 728000) 0 nil])
([nil nil ((8620 . 8622) (#("(" 0 1 (fontified nil)) . -8620) (8620 . 8621)) nil (25933 6732 695850 71000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8621)) nil (25933 6732 695848 376000) 0 nil])
([nil nil ((8640 . 8641)) nil (25933 6732 695847 472000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8646) (8645 . 8646) (8644 . 8646) (#("[" 0 1 (fontified nil)) . -8644) (8644 . 8645) (8643 . 8643) (8643 . 8644) (8640 . 8640) (8640 . 8643)) nil (25933 6732 695846 69000) 0 nil])
([nil nil ((8645 . 8645) (8645 . 8646)) nil (25933 6732 695843 232000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . 8655) (8654 . 8655) (8653 . 8655) (#("[" 0 1 (fontified nil)) . -8653) (8653 . 8654) (8652 . 8652) (8652 . 8653) (8651 . 8651) (8651 . 8652) (8647 . 8647) (8647 . 8651)) nil (25933 6732 695841 164000) 0 nil])
([nil nil ((8654 . 8654) (8654 . 8655)) nil (25933 6732 695837 967000) 0 nil])
([nil nil ((8656 . 8656) (8656 . 8657)) nil (25933 6732 695836 647000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8656) (undo-tree-id431 . -1) 8657) nil (25933 6732 695834 306000) 0 nil])
([nil nil ((8656 . 8656) (8656 . 8658)) nil (25933 6732 695820 502000) 0 nil])
([nil nil ((8659 . 8662) (t 25933 6732 701120 711000)) nil (25933 6737 607263 595000) 0 nil])
([nil nil ((#("§" 0 1 (fontified t)) . -8660) (undo-tree-id437 . -1) (#(" " 0 1 (fontified t)) . -8661) (undo-tree-id438 . -1) 8662) nil (25933 6737 607258 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8687 . 8688) (nil fontified nil 8687 . 8688) (nil fontified nil 8686 . 8687) (nil fontified nil 8681 . 8686) (nil fontified nil 8680 . 8681) (nil fontified nil 8678 . 8680) (nil fontified nil 8677 . 8678) (nil fontified nil 8673 . 8677) (nil fontified nil 8672 . 8673) (nil fontified nil 8668 . 8672) (nil fontified nil 8661 . 8668) (nil fontified nil 8660 . 8661) (8660 . 8688) (t 25933 6737 613120 867000)) nil (25933 6749 431066 818000) 0 nil])
([nil nil ((8014 . 8014) (8014 . 8015) (8013 . 8013) (8013 . 8014) (8011 . 8011) (8011 . 8013) (8010 . 8010) (8010 . 8011) (8009 . 8009) (8009 . 8010) (8008 . 8008) (8008 . 8009) (8007 . 8007) (8007 . 8008) (8006 . 8006) (8006 . 8007) (8005 . 8005) (8005 . 8006) (8004 . 8004) (8004 . 8005) (7999 . 7999) (7999 . 8004) (t 25933 6749 437121 243000)) nil (25933 6765 340031 939000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8019) (8018 . 8019) (8017 . 8019) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -8017) (8017 . 8018) (8015 . 8015) (8015 . 8017)) nil (25933 6765 340026 361000) 0 nil])
([nil nil ((8022 . 8022) (8022 . 8023) (8021 . 8021) (8021 . 8022) (8020 . 8020) (8020 . 8021) (8019 . 8019) (8019 . 8020) (8018 . 8018) (8018 . 8019)) nil (25933 6765 340023 960000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8026) (undo-tree-id439 . 1) (8025 . 8026) (8024 . 8026) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8024) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (8024 . 8025)) nil (25933 6765 340019 733000) 0 nil])
([nil nil ((8029 . 8029) (8029 . 8030) (8028 . 8028) (8028 . 8029) (8027 . 8027) (8027 . 8028) (8026 . 8026) (8026 . 8027) (8025 . 8025) (8025 . 8026)) nil (25933 6765 339998 610000) 0 nil])
([nil nil ((#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8619) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("." 0 1 (face tree-sitter-hl-face:number fontified t)) . -8620) (undo-tree-id446 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8621) (undo-tree-id447 . -1) (#(" " 0 1 (fontified t)) . -8622) (undo-tree-id448 . -1) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8623) (undo-tree-id449 . -1) (#(" " 0 1 (fontified t)) . -8624) (undo-tree-id450 . -1) 8625 (t 25933 6765 345121 749000)) nil (25933 6813 966745 877000) 0 nil])
([nil nil ((10609 . 10629) (t 25933 6813 973123 297000)) nil (25933 6854 80979 230000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10625) (undo-tree-id482 . -4) 10629) nil (25933 6854 80978 114000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10621) (undo-tree-id481 . -4) 10625) nil (25933 6854 80975 879000) 0 nil])
([nil nil ((10621 . 10621) (10621 . 10623)) nil (25933 6854 80973 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10676 . 10677) (nil fontified nil 10675 . 10677) (nil fontified nil 10674 . 10675) (nil fontified nil 10669 . 10674) (nil fontified nil 10668 . 10669) (nil fontified nil 10667 . 10668) (nil fontified nil 10662 . 10667) (nil fontified nil 10661 . 10662) (nil fontified nil 10652 . 10661) (nil fontified nil 10651 . 10652) (nil fontified nil 10647 . 10651) (nil fontified nil 10646 . 10647) (nil fontified nil 10644 . 10646) (nil fontified nil 10643 . 10644) (nil fontified nil 10642 . 10643) (nil fontified nil 10639 . 10642) (nil fontified nil 10638 . 10639) (nil fontified nil 10637 . 10638) (nil fontified nil 10635 . 10637) (nil fontified nil 10623 . 10635) (10623 . 10677)) nil (25933 6854 80972 52000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -10623) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t)) . -10624) (undo-tree-id470 . -1) (#(" " 0 1 (fontified t)) . -10625) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -10626) (undo-tree-id472 . -1) (#(" " 0 1 (fontified t)) . -10627) (undo-tree-id473 . -1) (#(" " 0 1 (fontified t)) . -10628) (undo-tree-id474 . -1) (#(" " 0 1 (fontified t)) . -10629) (undo-tree-id475 . -1) (#(" " 0 1 (fontified t)) . -10630) (undo-tree-id476 . -1) (#(" " 0 1 (fontified t)) . -10631) (undo-tree-id477 . -1) (#(" " 0 1 (fontified t)) . -10632) (undo-tree-id478 . -1) (#(" " 0 1 (fontified t)) . -10633) (undo-tree-id479 . -1) (#(" " 0 1 (fontified t)) . -10634) (undo-tree-id480 . -1) 10635) nil (25933 6854 80964 669000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10628) (undo-tree-id467 . -1) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10629) (undo-tree-id468 . -1) 10630) nil (25933 6854 80949 770000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10627) (undo-tree-id466 . -1) 10628) nil (25933 6854 80945 916000) 0 nil])
([nil nil ((10633 . 10633) (10633 . 10635) (10631 . 10631) (10631 . 10633) (10630 . 10630) (10630 . 10631) (10628 . 10628) (10628 . 10630) (10627 . 10627) (10627 . 10628)) nil (25933 6854 80943 387000) 0 nil])
([nil nil ((#("g" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10634) (undo-tree-id465 . -1) 10635) nil (25933 6854 80940 60000) 0 nil])
([nil nil ((10634 . 10634) (10634 . 10635)) nil (25933 6854 80937 825000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10628) (undo-tree-id458 . -1) (#("w" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10629) (undo-tree-id459 . -1) (#("_" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10630) (undo-tree-id460 . -1) (#("r" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10631) (undo-tree-id461 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10632) (undo-tree-id462 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10633) (undo-tree-id463 . -1) (#("k" 0 1 (face tree-sitter-hl-face:string fontified t)) . -10634) (undo-tree-id464 . -1) 10635) nil (25933 6854 80935 255000) 0 nil])
([nil nil ((10628 . 10628) (10628 . 10629)) nil (25933 6854 80926 190000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7991) (undo-tree-id451 . -1) (#("w" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7992) (undo-tree-id452 . -1) (#("_" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7993) (undo-tree-id453 . -1) (#("r" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7994) (undo-tree-id454 . -1) (#("a" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7995) (undo-tree-id455 . -1) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7996) (undo-tree-id456 . -1) (#("k" 0 1 (face tree-sitter-hl-face:string fontified t)) . -7997) (undo-tree-id457 . -1) 7998) nil (25933 6854 80922 851000) 0 nil])
([nil nil ((7991 . 7991) (7991 . 7992)) nil (25933 6854 80900 695000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8039) (undo-tree-id528 . -1) 8040 (t 25933 6854 89124 573000)) nil (25933 6860 185088 161000) 0 nil])
([nil nil ((8182 . 8183)) nil (25933 6860 185084 969000) 0 nil])
([nil nil ((#("x" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -8182) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 8183) nil (25933 6860 185079 335000) 0 nil])
([nil nil ((8520 . 8532) (t 25933 6860 193124 768000)) nil (25933 6864 950130 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8671 . 8672) (nil fontified nil 8651 . 8672) (8651 . 8672) (t 25933 6864 957124 919000)) nil (25933 6954 959916 718000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8664) (undo-tree-id539 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified nil)) . -8665) (undo-tree-id540 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8666) (undo-tree-id541 . -1) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8667) (undo-tree-id542 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8668) (undo-tree-id543 . -1) (#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8669) (undo-tree-id544 . -1) (#("H" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -8670) (undo-tree-id545 . -1) 8671) nil (25933 6954 959914 17000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8660) (undo-tree-id535 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 8661) (#("x" 0 1 (fontified t)) . -8661) (undo-tree-id536 . -1) (#(" " 0 1 (fontified t)) . -8662) (undo-tree-id537 . -1) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8663) (undo-tree-id538 . -1) 8664) nil (25933 6954 959903 990000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8660)) nil (25933 6954 959897 418000) 0 nil])
([nil nil ((8660 . 8660) (8660 . 8661)) nil (25933 6954 959896 260000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -8660) (undo-tree-id534 . -1) 8661) nil (25933 6954 959894 605000) 0 nil])
([nil nil ((8660 . 8661)) nil (25933 6954 959891 298000) 0 nil])
([nil nil ((#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8660) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) 8661) nil (25933 6954 959889 792000) 0 nil])
([nil nil ((8660 . 8662) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8660) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (8660 . 8661)) nil (25933 6954 959884 148000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8661)) nil (25933 6954 959865 178000) 0 nil])
([nil nil ((10678 . 10694) (t 25933 6954 969127 784000)) nil (25933 7014 647872 176000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10795 . 10796) (nil fontified nil 10795 . 10796) (nil fontified nil 10794 . 10795) (nil fontified nil 10793 . 10794) (nil fontified nil 10792 . 10793) (nil fontified nil 10787 . 10792) (nil fontified nil 10786 . 10787) (nil fontified nil 10785 . 10786) (nil fontified nil 10784 . 10785) (nil fontified nil 10778 . 10784) (nil fontified nil 10777 . 10778) (nil fontified nil 10776 . 10777) (nil fontified nil 10775 . 10776) (nil fontified nil 10772 . 10775) (nil fontified nil 10771 . 10772) (nil fontified nil 10770 . 10771) (nil fontified nil 10765 . 10770) (nil fontified nil 10764 . 10765) (nil fontified nil 10763 . 10764) (nil fontified nil 10758 . 10763) (nil fontified nil 10757 . 10758) (nil fontified nil 10752 . 10757) (nil fontified nil 10751 . 10752) (nil fontified nil 10747 . 10751) (nil fontified nil 10746 . 10747) (nil fontified nil 10745 . 10746) (nil fontified nil 10744 . 10745) (nil fontified nil 10743 . 10744) (nil fontified nil 10705 . 10743) (nil fontified nil 10704 . 10705) (nil fontified nil 10703 . 10704) (nil fontified nil 10698 . 10703) (nil fontified nil 10678 . 10698) (10678 . 10796)) nil (25933 7014 647869 810000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10694) 10678) nil (25933 7014 647861 46000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("n" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711) (#("c" 0 1 (face tree-sitter-hl-face:string fontified t)) . 10711)) nil (25933 7014 647858 337000) 0 nil])
([nil nil ((10714 . 10714) (10714 . 10718) (10713 . 10713) (10713 . 10714) (10712 . 10712) (10712 . 10713) (10711 . 10711) (10711 . 10712)) nil (25933 7014 647855 517000) 0 nil])
([nil nil ((10718 . 10718) (10718 . 10719)) nil (25933 7014 647848 664000) 0 nil])
([nil nil ((apply 2 888 916 undo--wrap-and-run-primitive-undo 888 916 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -896) 918))) nil (25933 7090 761852 331000) 0 nil])
([nil nil ((apply -2 916 985 undo--wrap-and-run-primitive-undo 916 985 ((924 . 926) 982))) nil (25933 7090 761847 898000) 0 nil])
([nil nil ((8547 . 8547) (8547 . 8548) (8546 . 8546) (8546 . 8547) (8545 . 8545) (8545 . 8546) (t 25933 7090 769132 105000)) nil (25933 7119 804780 511000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -8546) (undo-tree-id546 . -1) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -8547) (undo-tree-id547 . -1) 8548) nil (25933 7119 804776 511000) 0 nil])
([nil nil ((8549 . 8549) (8549 . 8550) (8548 . 8548) (8548 . 8549) (8547 . 8547) (8547 . 8548) (8546 . 8546) (8546 . 8547)) nil (25933 7119 804758 943000) 0 nil])
([nil nil ((8670 . 8671) (8669 . 8669) (8669 . 8670) (8667 . 8667) (8667 . 8669) (8666 . 8666) (8666 . 8667) (t 25933 7119 813133 29000)) nil (25933 7133 73556 533000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -8670) (undo-tree-id549 . -1) 8671) nil (25933 7133 73553 612000) 0 nil])
([nil nil ((8670 . 8670) (8670 . 8671)) nil (25933 7133 73550 213000) 0 nil])
([nil nil ((8684 . 8684) (8684 . 8685) (8683 . 8683) (8683 . 8684) (8682 . 8682) (8682 . 8683) (8680 . 8680) (8680 . 8682)) nil (25933 7133 73548 482000) 0 nil])
([nil nil ((8700 . 8700) (8700 . 8701) (8699 . 8699) (8699 . 8700) (8696 . 8696) (8696 . 8699)) nil (25933 7133 73545 206000) 0 nil])
([nil nil ((8714 . 8714) (8714 . 8715) (8713 . 8713) (8713 . 8714) (8710 . 8710) (8710 . 8713)) nil (25933 7133 73542 98000) 0 nil])
([nil nil ((8694 . 8755) (#(" " 0 1 (fontified nil)) . 8693) (undo-tree-id548 . -1) (8694 . 8695)) nil (25933 7133 73536 368000) 0 nil])
([nil nil ((1998 . 2014) (t 25933 7133 81133 452000)) nil (25933 7140 450723 853000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2010) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) 2014) nil (25933 7140 450721 141000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2006) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) 2010) nil (25933 7140 450702 595000) 0 nil])
([nil nil ((211 . 212) (t 25933 7140 457133 686000)) nil (25933 17751 62628 116000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -211) (undo-tree-id29 . -1) 212) nil (25933 17751 62626 877000) 0 nil])
([nil nil ((211 . 211) (211 . 212)) nil (25933 17751 62624 929000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -211) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 212) nil (25933 17751 62623 31000) 0 nil])
([nil nil ((211 . 211) (211 . 212)) nil (25933 17751 62613 142000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -211) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 212) nil (25933 17751 62607 454000) 0 nil])
([nil nil ((13084 . 13092) (t 25933 17751 73471 339000)) nil (25933 18983 523880 753000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8619) (8618 . 8619) (8617 . 8619) (#("(" 0 1 (fontified nil)) . -8617) (8612 . 8618) (t 25933 18983 533510 559000)) nil (25933 19399 389334 360000) 0 nil])
([nil nil ((8618 . 8632)) nil (25933 19399 389332 338000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 8620) (8619 . 8620) (8618 . 8620) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8618) (8618 . 8619)) nil (25933 19399 389331 212000) 0 nil])
([nil nil ((8619 . 8621)) nil (25933 19399 389329 392000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8619) (undo-tree-id31 . -1) (#("s" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8620) (undo-tree-id32 . -1) 8621) nil (25933 19399 389328 130000) 0 nil])
([nil nil ((8619 . 8620)) nil (25933 19399 389323 498000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8619) (undo-tree-id30 . -1) 8620) nil (25933 19399 389321 163000) 0 nil])
([nil nil ((8619 . 8622)) nil (25933 19399 389309 498000) 0 nil])
([nil nil ((8623 . 8625)) nil (25933 19399 389305 184000) 0 nil])
([nil nil ((8640 . 8653) (t 25933 19399 397523 793000)) nil (25933 19403 575467 428000) 0 nil])
([nil nil ((8601 . 8613) (#("            " 0 12 (fontified nil)) . 8600) (undo-tree-id33 . -12) (undo-tree-id34 . -12) (undo-tree-id35 . -12) (undo-tree-id36 . -12) (undo-tree-id37 . -12) (8612 . 8613)) nil (25933 19403 575462 164000) 0 nil])
([nil nil ((8600 . 8612) (t 25933 19403 585523 926000)) nil (25933 19420 566757 898000) 0 nil])
([nil nil ((8601 . 8613) (#("            " 0 12 (fontified nil)) . 8600) (undo-tree-id60 . -12) (8612 . 8613)) nil (25933 19420 566756 90000) 0 nil])
([nil nil ((8620 . 8620) (8620 . 8621) (8619 . 8619) (8619 . 8620) (8618 . 8618) (8618 . 8619) (8617 . 8617) (8617 . 8618) (8613 . 8613) (8613 . 8617)) nil (25933 19420 566752 814000) 0 nil])
([nil nil ((8621 . 8621) (8621 . 8622)) nil (25933 19420 566749 429000) 0 nil])
([nil nil ((8628 . 8629) (8627 . 8627) (8627 . 8628) (8626 . 8626) (8626 . 8627) (8625 . 8625) (8625 . 8626) (8624 . 8624) (8624 . 8625) (8623 . 8623) (8623 . 8624) (8622 . 8622) (8622 . 8623)) nil (25933 19420 566747 176000) 0 nil])
([nil nil ((8630 . 8646) (#("            " 0 12 (fontified t)) . 8630) (undo-tree-id38 . -12) (undo-tree-id39 . -12) (undo-tree-id40 . -12) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -12) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (undo-tree-id47 . -12) (undo-tree-id48 . -12) (undo-tree-id49 . -12) (undo-tree-id50 . -12) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (undo-tree-id55 . -12) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (undo-tree-id59 . -12)) nil (25933 19420 566738 834000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8737) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8737) (#("U" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8737) (#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8737) (#("e" 0 1 (fontified t)) . 8737) (#("R" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified nil)) . 8737) (#("." 0 1 (fontified t)) . 8737) (#("n" 0 1 (fontified t)) . 8737) (#("n" 0 1 (fontified t)) . 8737) (#(" " 0 1 (fontified t)) . 8737) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 8737) (t 25933 19420 577524 467000)) nil (25933 19597 17342 160000) 0 nil])
([nil nil ((8737 . 8738)) nil (25933 19597 17339 130000) 0 nil])
([nil nil ((8738 . 8739)) nil (25933 19597 17338 242000) 0 nil])
([nil nil ((#("         " 0 9 (fontified t)) . -8820) 8819) nil (25933 19597 17337 104000) 0 nil])
([nil nil ((8688 . 8704) (#("            " 0 12 (fontified t)) . 8688)) nil (25933 19597 17335 962000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8700) (undo-tree-id65 . -4) 8704) nil (25933 19597 17334 693000) 0 nil])
([nil nil ((8881 . 8893) (#("            " 0 12 (fontified nil)) . 8880) (undo-tree-id64 . -12) (8892 . 8893)) nil (25933 19597 17332 475000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8898) (8897 . 8898) (8896 . 8898) (#("[" 0 1 (face tree-sitter-hl-face:constructor fontified nil)) . -8896) (8896 . 8897) (8895 . 8895) (8895 . 8896) (8894 . 8894) (8894 . 8895) (8893 . 8893) (8893 . 8894)) nil (25933 19597 17329 431000) 0 nil])
([nil nil ((8900 . 8900) (8900 . 8902) (8898 . 8898) (8898 . 8900) (8897 . 8897) (8897 . 8898)) nil (25933 19597 17325 695000) 0 nil])
([nil nil ((8903 . 8903) (8903 . 8907)) nil (25933 19597 17323 778000) 0 nil])
([nil nil ((8907 . 8920)) nil (25933 19597 17322 725000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8934 . 8935) (nil fontified nil 8934 . 8935) (nil fontified nil 8933 . 8934) (nil fontified nil 8932 . 8933) (nil fontified nil 8931 . 8932) (nil fontified nil 8930 . 8931) (nil fontified nil 8929 . 8930) (nil fontified nil 8928 . 8929) (nil fontified nil 8927 . 8928) (nil fontified nil 8924 . 8927) (nil fontified nil 8923 . 8924) (nil fontified nil 8920 . 8923) (nil fontified nil 8908 . 8920) (8908 . 8935)) nil (25933 19597 17321 272000) 0 nil])
([nil nil ((#(">" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -8927) (undo-tree-id62 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8928) (undo-tree-id63 . -1) 8929) nil (25933 19597 17316 960000) 0 nil])
([nil nil ((8927 . 8927) (8927 . 8929)) nil (25933 19597 17312 611000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8933) (undo-tree-id61 . -1) 8934) nil (25933 19597 17310 269000) 0 nil])
([nil nil ((8933 . 8933) (8933 . 8934)) nil (25933 19597 17295 327000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14302 . 14303) (nil fontified nil 14302 . 14303) (nil fontified nil 14301 . 14302) (nil fontified nil 14300 . 14301) (nil fontified nil 14299 . 14300) (nil fontified nil 14291 . 14299) (nil fontified nil 14290 . 14291) (nil fontified nil 14286 . 14290) (nil fontified nil 14285 . 14286) (nil fontified nil 14284 . 14285) (nil fontified nil 14283 . 14284) (nil fontified nil 14282 . 14283) (nil fontified nil 14281 . 14282) (nil fontified nil 14280 . 14281) (nil fontified nil 14277 . 14280) (nil fontified nil 14276 . 14277) (nil fontified nil 14272 . 14276) (nil fontified nil 14271 . 14272) (nil fontified nil 14270 . 14271) (nil fontified nil 14269 . 14270) (nil fontified nil 14265 . 14269) (nil fontified nil 14264 . 14265) (nil fontified nil 14260 . 14264) (nil fontified nil 14259 . 14260) (nil fontified nil 14258 . 14259) (nil fontified nil 14257 . 14258) (nil fontified nil 14256 . 14257) (nil fontified nil 14255 . 14256) (nil fontified nil 14254 . 14255) (nil fontified nil 14253 . 14254) (nil fontified nil 14250 . 14253) (nil fontified nil 14249 . 14250) (nil fontified nil 14245 . 14249) (nil fontified nil 14229 . 14245) (14229 . 14303) (t 25933 19597 25530 82000)) nil (25933 19720 613643 682000) 0 nil])
([nil nil ((apply -2 14155 14305 undo--wrap-and-run-primitive-undo 14155 14305 ((14171 . 14173) 14229))) nil (25933 19720 613634 871000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14293) (undo-tree-id80 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14294) (undo-tree-id81 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14295) (undo-tree-id82 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14296) (undo-tree-id83 . -1) (#("F" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14297) (undo-tree-id84 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14298) (undo-tree-id85 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14299) (undo-tree-id86 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14300) (undo-tree-id87 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14301) (undo-tree-id88 . -1) (#("i" 0 1 (fontified t)) . -14302) (undo-tree-id89 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14303) (undo-tree-id90 . -1) 14304) nil (25933 19720 613631 946000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14298) (14297 . 14298) (14296 . 14298) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -14296) (14296 . 14297) (14294 . 14294) (14294 . 14296) (14293 . 14293) (14293 . 14294)) nil (25933 19720 613617 651000) 0 nil])
([nil nil ((14297 . 14297) (14297 . 14298)) nil (25933 19720 613614 821000) 0 nil])
([nil nil ((14301 . 14302) (14299 . 14299) (14299 . 14301)) nil (25933 19720 613613 323000) 0 nil])
([nil nil ((#("ù" 0 1 (fontified t)) . -14300) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -14301) (undo-tree-id79 . -1) 14302) nil (25933 19720 613611 453000) 0 nil])
([nil nil ((14305 . 14305) (14305 . 14306) (14304 . 14304) (14304 . 14305) (14303 . 14303) (14303 . 14304) (14300 . 14300) (14300 . 14303)) nil (25933 19720 613607 524000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -14300) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -14301) (undo-tree-id73 . -1) (#("s" 0 1 (fontified t)) . -14302) (undo-tree-id74 . -1) (#("q" 0 1 (fontified t)) . -14303) (undo-tree-id75 . -1) (#("r" 0 1 (fontified t)) . -14304) (undo-tree-id76 . -1) (#("t" 0 1 (fontified t)) . -14305) (undo-tree-id77 . -1) 14306) nil (25933 19720 613603 771000) 0 nil])
([nil nil ((14300 . 14301)) nil (25933 19720 613595 377000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14300) (undo-tree-id71 . -1) 14301) nil (25933 19720 613594 260000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14314) (14313 . 14314) (14312 . 14314) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -14312) (14312 . 14313) (14311 . 14311) (14311 . 14312) (14310 . 14310) (14310 . 14311) (14309 . 14309) (14309 . 14310) (14308 . 14308) (14308 . 14309) (14307 . 14307) (14307 . 14308) (14306 . 14306) (14306 . 14307) (14305 . 14305) (14305 . 14306) (14304 . 14304) (14304 . 14305) (14303 . 14303) (14303 . 14304) (14300 . 14300) (14300 . 14303)) nil (25933 19720 613591 1000) 0 nil])
([nil nil ((14316 . 14316) (14316 . 14317) (14315 . 14315) (14315 . 14316) (14314 . 14314) (14314 . 14315) (14313 . 14313) (14313 . 14314)) nil (25933 19720 613584 286000) 0 nil])
([nil nil ((14319 . 14319) (14319 . 14320) (14318 . 14318) (14318 . 14319) (14317 . 14317) (14317 . 14318)) nil (25933 19720 613580 982000) 0 nil])
([nil nil ((#("J" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -14318) (undo-tree-id69 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -14319) (undo-tree-id70 . -1) 14320) nil (25933 19720 613577 877000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 14322) (undo-tree-id66 . 1) (14321 . 14322) (14320 . 14322) (#("[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -14320) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (14320 . 14321) (14319 . 14319) (14319 . 14320) (14318 . 14318) (14318 . 14319)) nil (25933 19720 613572 126000) 0 nil])
([nil nil ((14321 . 14321) (14321 . 14322)) nil (25933 19720 613551 737000) 0 nil])
([nil nil ((14324 . 14325) (t 25933 19720 621534 15000)) nil (25933 19734 341415 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14333 . 14334) (nil fontified nil 14332 . 14334) (nil fontified nil 14331 . 14332) (nil fontified nil 14327 . 14331) (nil fontified nil 14326 . 14327) (nil fontified nil 14325 . 14326) (14325 . 14334)) nil (25933 19734 341409 605000) 0 nil])
([nil nil ((14230 . 14247) (t 25933 19734 353534 452000)) nil (25933 19918 9887 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14311 . 14312) (nil fontified nil 14311 . 14312) (nil fontified nil 14310 . 14311) (nil fontified nil 14304 . 14310) (nil fontified nil 14303 . 14304) (nil fontified nil 14299 . 14303) (nil fontified nil 14298 . 14299) (nil fontified nil 14292 . 14298) (nil fontified nil 14290 . 14292) (nil fontified nil 14289 . 14290) (nil fontified nil 14281 . 14289) (nil fontified nil 14280 . 14281) (nil fontified nil 14276 . 14280) (nil fontified nil 14274 . 14276) (nil fontified nil 14269 . 14274) (nil fontified nil 14268 . 14269) (nil fontified nil 14264 . 14268) (nil fontified nil 14263 . 14264) (nil fontified nil 14262 . 14263) (nil fontified nil 14257 . 14262) (nil fontified nil 14250 . 14257) (nil fontified nil 14249 . 14250) (nil fontified nil 14248 . 14249) (nil fontified nil 14239 . 14248) (nil fontified nil 14231 . 14239) (14231 . 14312)) nil (25933 19918 9884 722000) 0 nil])
([nil nil ((14231 . 14247) (#("        " 0 8 (fontified t)) . 14231)) nil (25933 19918 9878 87000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("u" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("_" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("c" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 14247)) nil (25933 19918 9875 517000) 0 nil])
([nil nil ((14250 . 14250) (14250 . 14251) (14249 . 14249) (14249 . 14250) (14247 . 14247) (14247 . 14249)) nil (25933 19918 9872 327000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 14267) (#("," 0 1 (fontified t)) . 14267) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("P" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("_" 0 1 (face tree-sitter-hl-face:constant fontified t)) . 14267) (#("N" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 14267) (#("." 0 1 (fontified t)) . 14267) (#("f" 0 1 (fontified t)) . 14267) (#("l" 0 1 (fontified t)) . 14267) (#("e" 0 1 (fontified t)) . 14267) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 14267)) nil (25933 19918 9868 225000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -14266) (undo-tree-id97 . -1) 14267) nil (25933 19918 9864 471000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14279) (undo-tree-id96 . -1) 14280) nil (25933 19918 9861 734000) 0 nil])
([nil nil ((#("                stim = torch.zeros(self.N_NEURON, device=self.device)
" 0 16 (fontified t) 16 20 (face tree-sitter-hl-face:variable fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t) 22 29 (fontified t) 29 34 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face tree-sitter-hl-face:keyword fontified t) 39 40 (fontified t) 40 48 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 48 50 (fontified t) 50 56 (face tree-sitter-hl-face:label fontified t) 56 57 (face tree-sitter-hl-face:operator fontified t) 57 61 (face tree-sitter-hl-face:keyword fontified t) 61 62 (fontified t) 62 68 (face tree-sitter-hl-face:property fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t) 69 70 (rear-nonsticky t fontified t)) . 14231) (undo-tree-id95 . -70)) nil (25933 19918 9859 351000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14230) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 14231) nil (25933 19918 9857 258000) 0 nil])
([nil nil ((14230 . 14231)) nil (25933 19918 9851 192000) 0 nil])
([nil nil ((14251 . 14251) (14251 . 14254) (14249 . 14249) (14249 . 14251) (14247 . 14247) (14247 . 14249)) nil (25933 19918 9849 689000) 0 nil])
([nil nil ((#("9" 0 1 (face tree-sitter-hl-face:number fontified t)) . -14253) (undo-tree-id91 . -1) 14254) nil (25933 19918 9847 60000) 0 nil])
([nil nil ((14254 . 14255) (14253 . 14253) (14253 . 14254)) nil (25933 19918 9835 428000) 0 nil])
([nil nil ((14272 . 14276) 14256) nil (25933 19918 9833 756000) 0 nil])
([nil nil ((14364 . 14380) (#("            " 0 12 (fontified nil)) . 14364) (14380 . 14381) (14378 . 14378) (14378 . 14380) (14377 . 14377) (14377 . 14378) (14376 . 14376) (14376 . 14377)) nil (25933 19918 9831 502000) 0 nil])
([nil nil ((14385 . 14406)) nil (25933 19918 9828 103000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14443 . 14444) (nil fontified nil 14443 . 14444) (nil fontified nil 14442 . 14443) (nil fontified nil 14441 . 14442) (nil fontified nil 14438 . 14441) (nil fontified nil 14437 . 14438) (nil fontified nil 14433 . 14437) (nil fontified nil 14432 . 14433) (nil fontified nil 14431 . 14432) (nil fontified nil 14430 . 14431) (nil fontified nil 14426 . 14430) (nil fontified nil 14425 . 14426) (nil fontified nil 14421 . 14425) (nil fontified nil 14420 . 14421) (nil fontified nil 14419 . 14420) (nil fontified nil 14418 . 14419) (nil fontified nil 14417 . 14418) (nil fontified nil 14416 . 14417) (nil fontified nil 14415 . 14416) (nil fontified nil 14414 . 14415) (nil fontified nil 14411 . 14414) (nil fontified nil 14410 . 14411) (nil fontified nil 14406 . 14410) (14406 . 14444)) nil (25933 19918 9825 326000) 0 nil])
([nil nil ((14444 . 14465)) nil (25933 19918 9815 54000) 0 nil])
([nil nil ((12635 . 12647) (t 25933 19918 21540 297000)) nil (25933 20199 818890 738000) 0 nil])
([nil nil ((apply -4 8881 8952 undo--wrap-and-run-primitive-undo 8881 8952 ((8922 . 8924) (8893 . 8895) 8935))) nil (25933 20199 818885 345000) 0 nil])
([nil nil ((apply 4 8881 8935 undo--wrap-and-run-primitive-undo 8881 8935 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8920) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8893) 8939))) nil (25933 20578 306002 534000) 0 nil])
([nil nil ((9798 . 9814) (#("                " 0 16 (fontified nil)) . 9797) (undo-tree-id111 . -16) (9796 . 9814) (t 25933 20578 317561 309000)) nil (25933 20595 75935 786000) 0 nil])
([nil nil ((nil fontified nil 9851 . 9852) (nil fontified nil 9850 . 9851) (nil fontified nil 9849 . 9850) (nil fontified nil 9848 . 9849) (nil fontified nil 9847 . 9848) (nil fontified nil 9846 . 9847) (nil fontified nil 9845 . 9846) (nil fontified nil 9844 . 9845) (nil fontified nil 9841 . 9844) (nil fontified nil 9840 . 9841) (nil fontified nil 9837 . 9840) (nil fontified nil 9825 . 9837) (nil fontified nil 9824 . 9825) (nil fontified nil 9823 . 9824) (nil fontified nil 9822 . 9823) (nil fontified nil 9821 . 9822) (nil fontified nil 9820 . 9821) (nil fontified nil 9819 . 9820) (nil fontified nil 9818 . 9819) (nil fontified nil 9817 . 9818) (nil fontified nil 9814 . 9817) (nil fontified nil 9813 . 9814) (nil fontified nil 9810 . 9813) (nil fontified nil 9798 . 9810) (9798 . 9852)) nil (25933 20595 75932 163000) 0 nil])
([nil nil ((#("            Pij[Pij>1] = 1
            Pij[Pij<0] = 0
" 0 12 (fontified t) 12 15 (face tree-sitter-hl-face:constructor fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 19 (face tree-sitter-hl-face:constructor fontified t) 19 20 (face tree-sitter-hl-face:operator fontified t) 20 21 (face tree-sitter-hl-face:number fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (fontified t) 23 24 (face tree-sitter-hl-face:operator fontified t) 24 25 (fontified t) 25 26 (face tree-sitter-hl-face:number fontified t) 26 27 (fontified t) 27 39 (fontified t) 39 42 (face tree-sitter-hl-face:constructor fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 46 (face tree-sitter-hl-face:constructor fontified t) 46 47 (face tree-sitter-hl-face:operator fontified t) 47 48 (face tree-sitter-hl-face:number fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 50 (fontified t) 50 51 (face tree-sitter-hl-face:operator fontified t) 51 52 (fontified t) 52 53 (face tree-sitter-hl-face:number fontified t) 53 54 (rear-nonsticky t fontified t)) . -8881) (undo-tree-id109 . -53) (undo-tree-id110 . -54) 8935) nil (25933 20595 75925 446000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8880) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 8881) nil (25933 20595 75915 798000) 0 nil])
([nil nil ((apply -4 9743 9818 undo--wrap-and-run-primitive-undo 9743 9818 ((9784 . 9786) (9755 . 9757) 9797))) nil (25933 20626 16561 132000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9813) (undo-tree-id112 . -4) 9801) nil (25933 20626 16556 988000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 9755) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 9755) (t 25933 20626 25562 827000)) nil (25933 20642 338032 188000) 0 nil])
([nil nil ((8881 . 8893) (#("            " 0 12 (fontified nil)) . 8880) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -12) (8892 . 8893) (t 25933 20642 345563 346000)) nil (25933 20677 43046 949000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8900) (8899 . 8900) (8898 . 8900) (#("(" 0 1 (fontified nil)) . -8898) (8898 . 8899) (8896 . 8896) (8896 . 8898) (8894 . 8894) (8894 . 8896) (8893 . 8893) (8893 . 8894)) nil (25933 20677 42980 837000) 0 nil])
([nil nil ((8899 . 8899) (8899 . 8900)) nil (25933 20677 42978 98000) 0 nil])
([nil nil ((8900 . 8900) (8900 . 8901)) nil (25933 20677 42977 127000) 0 nil])
([nil nil ((8907 . 8907) (8907 . 8908) (8905 . 8905) (8905 . 8907) (8904 . 8904) (8904 . 8905) (8903 . 8903) (8903 . 8904) (8902 . 8902) (8902 . 8903) (8901 . 8901) (8901 . 8902)) nil (25933 20677 42975 767000) 0 nil])
([nil nil ((8909 . 8922)) nil (25933 20677 42972 891000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 8901) (8900 . 8901) (8899 . 8901) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8899) (8899 . 8900)) nil (25933 20677 42971 757000) 0 nil])
([nil nil ((8901 . 8901) (8901 . 8902) (8900 . 8900) (8900 . 8901)) nil (25933 20677 42970 108000) 0 nil])
([nil nil ((#("P" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8900) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("o" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8901) (undo-tree-id118 . -1) 8902) nil (25933 20677 42968 301000) 0 nil])
([nil nil ((8901 . 8901) (8901 . 8902) (8900 . 8900) (8900 . 8901)) nil (25933 20677 42962 864000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8900) (undo-tree-id113 . -1) (#("j" 0 1 (face tree-sitter-hl-face:string fontified t)) . -8901) (undo-tree-id114 . -1) 8902) nil (25933 20677 42960 469000) 0 nil])
([nil nil ((8902 . 8902) (8902 . 8903) (8901 . 8901) (8901 . 8902) (8900 . 8900) (8900 . 8901)) nil (25933 20677 42946 255000) 0 nil])
([nil nil ((8904 . 8906)) nil (25933 20677 42940 104000) 0 nil])
([nil nil ((apply -2 9780 9838 undo--wrap-and-run-primitive-undo 9780 9838 ((9792 . 9794) 9807))) nil (25933 20684 519093 770000) 0 nil])
([nil nil ((#("            # Pij[Pij>1] = 1
            # Pij[Pij<0] = 0
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:comment fontified t) 14 17 (face tree-sitter-hl-face:comment fontified t) 17 18 (face tree-sitter-hl-face:comment fontified t) 18 21 (face tree-sitter-hl-face:comment fontified t) 21 22 (face tree-sitter-hl-face:comment fontified t) 22 23 (face tree-sitter-hl-face:comment fontified t) 23 24 (face tree-sitter-hl-face:comment fontified t) 24 25 (face tree-sitter-hl-face:comment fontified t) 25 26 (face tree-sitter-hl-face:comment fontified t) 26 27 (face tree-sitter-hl-face:comment fontified t) 27 28 (face tree-sitter-hl-face:comment fontified t) 28 29 (fontified t) 29 41 (fontified t) 41 43 (face tree-sitter-hl-face:comment fontified t) 43 46 (face tree-sitter-hl-face:comment fontified t) 46 47 (face tree-sitter-hl-face:comment fontified t) 47 50 (face tree-sitter-hl-face:comment fontified t) 50 51 (face tree-sitter-hl-face:comment fontified t) 51 52 (face tree-sitter-hl-face:comment fontified t) 52 53 (face tree-sitter-hl-face:comment fontified t) 53 54 (face tree-sitter-hl-face:comment fontified t) 54 55 (face tree-sitter-hl-face:comment fontified t) 55 56 (face tree-sitter-hl-face:comment fontified t) 56 57 (face tree-sitter-hl-face:comment fontified t) 57 58 (fontified t rear-nonsticky t)) . 9780) (undo-tree-id163 . -12) (undo-tree-id164 . -12) (undo-tree-id165 . -12) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (undo-tree-id168 . -12) (undo-tree-id169 . -12) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (undo-tree-id172 . -41) (undo-tree-id173 . -41) (undo-tree-id174 . -41) (undo-tree-id175 . -41) (undo-tree-id176 . -57) (undo-tree-id177 . -57) (undo-tree-id178 . -57) (undo-tree-id179 . -57) (undo-tree-id180 . -58) (undo-tree-id181 . -58) (undo-tree-id182 . -58) 9838 (t 25933 20684 529564 689000)) nil (25933 20946 568862 101000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9779) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 9780) nil (25933 20946 568840 268000) 0 nil])
([nil nil ((nil fontified nil 8937 . 8938) (nil fontified nil 8936 . 8937) (nil fontified nil 8935 . 8936) (nil fontified nil 8934 . 8935) (nil fontified nil 8933 . 8934) (nil fontified nil 8932 . 8933) (nil fontified nil 8931 . 8932) (nil fontified nil 8930 . 8931) (nil fontified nil 8927 . 8930) (nil fontified nil 8926 . 8927) (nil fontified nil 8923 . 8926) (nil fontified nil 8921 . 8923) (nil fontified nil 8909 . 8921) (nil fontified nil 8908 . 8909) (nil fontified nil 8907 . 8908) (nil fontified nil 8906 . 8907) (nil fontified nil 8905 . 8906) (nil fontified nil 8904 . 8905) (nil fontified nil 8903 . 8904) (nil fontified nil 8902 . 8903) (nil fontified nil 8901 . 8902) (nil fontified nil 8898 . 8901) (nil fontified nil 8897 . 8898) (nil fontified nil 8894 . 8897) (nil fontified nil 8892 . 8894) (nil fontified nil 8880 . 8892) (8880 . 8938)) nil (25933 20946 568716 766000) 0 nil])
([nil nil ((apply 4 8880 8934 undo--wrap-and-run-primitive-undo 8880 8934 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8919) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -8892) 8938))) nil (25933 20948 401102 535000) 0 nil])
([nil nil ((8934 . 8946)) nil (25933 20948 401097 702000) 0 nil])
([nil nil ((1296 . 1304) (t 25933 20948 409573 86000)) nil (25933 21104 481578 588000) 0 nil])
([nil nil ((1297 . 1305) (#("        " 0 8 (fontified nil)) . 1296) (undo-tree-id204 . -8) (1304 . 1305)) nil (25933 21104 481577 299000) 0 nil])
([nil nil ((1309 . 1309) (1309 . 1310) (1307 . 1307) (1307 . 1309) (1305 . 1305) (1305 . 1307)) nil (25933 21104 481574 965000) 0 nil])
([nil nil ((#("S" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1308) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -1309) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 1310) nil (25933 21104 481572 470000) 0 nil])
([nil nil ((1308 . 1308) (1308 . 1310)) nil (25933 21104 481559 791000) 0 nil])
([nil nil ((1310 . 1310) (1310 . 1311)) nil (25933 21104 481558 648000) 0 nil])
([nil nil ((1315 . 1315) (1315 . 1316) (1314 . 1314) (1314 . 1315) (1313 . 1313) (1313 . 1314) (1312 . 1312) (1312 . 1313) (1311 . 1311) (1311 . 1312)) nil (25933 21104 481557 253000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1313) (undo-tree-id189 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1314) (undo-tree-id190 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -1315) (undo-tree-id191 . -1) 1316) nil (25933 21104 481553 966000) 0 nil])
([nil nil ((1315 . 1315) (1315 . 1316) (1314 . 1314) (1314 . 1315) (1313 . 1313) (1313 . 1314)) nil (25933 21104 481549 29000) 0 nil])
([nil nil ((#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1315) (undo-tree-id188 . -1) 1316) nil (25933 21104 481546 504000) 0 nil])
([nil nil ((1323 . 1323) (1323 . 1325) (1322 . 1322) (1322 . 1323) (1319 . 1319) (1319 . 1322) (1317 . 1317) (1317 . 1319) (1316 . 1316) (1316 . 1317) (1315 . 1315) (1315 . 1316)) nil (25933 21104 481544 244000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1323) (undo-tree-id186 . -1) (#("t" 0 1 (fontified t)) . -1324) (undo-tree-id187 . -1) 1325) nil (25933 21104 481540 917000) 0 nil])
([nil nil ((1329 . 1330) (1328 . 1328) (1328 . 1329) (1327 . 1327) (1327 . 1328) (1326 . 1326) (1326 . 1327) (1323 . 1323) (1323 . 1326)) nil (25933 21104 481537 281000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1329) (undo-tree-id185 . -1) 1330) nil (25933 21104 481534 433000) 0 nil])
([nil nil ((1329 . 1330)) nil (25933 21104 481531 981000) 0 nil])
([nil nil ((1339 . 1343) 1331) nil (25933 21104 481531 28000) 0 nil])
([nil nil ((1389 . 1393) 1381) nil (25933 21104 481529 611000) 0 nil])
([nil nil ((1423 . 1439) (#("            " 0 12 (fontified t)) . 1423) (undo-tree-id184 . -12) 1435) nil (25933 21104 481527 392000) 0 nil])
([nil nil ((1473 . 1489) (#("            " 0 12 (fontified t)) . 1473) (undo-tree-id183 . -12) 1489) nil (25933 21104 481520 235000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1317) (undo-tree-id205 . -1) (#("i" 0 1 (fontified t)) . -1318) (undo-tree-id206 . -1) (#("s" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -1319) (undo-tree-id207 . -1) (#(" " 0 1 (fontified t)) . -1320) (undo-tree-id208 . -1) (#("n" 0 1 (fontified t)) . -1321) (undo-tree-id209 . -1) (#("o" 0 1 (fontified t)) . -1322) (undo-tree-id210 . -1) (#("t" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -1323) (undo-tree-id211 . -1) (#(" " 0 1 (fontified nil)) . -1324) (undo-tree-id212 . -1) (#("N" 0 1 (face tree-sitter-hl-face:constructor fontified nil)) . -1325) (undo-tree-id213 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1326) (undo-tree-id214 . -1) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -1327) (undo-tree-id215 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -1328) (undo-tree-id216 . -1) 1329 (t 25933 21104 493578 53000)) nil (25933 21138 138992 786000) 0 nil])
([nil nil ((1317 . 1318)) nil (25933 21138 138863 122000) 0 nil])
([nil nil ((1321 . 1322) (1318 . 1318) (1318 . 1321)) nil (25933 21138 138858 372000) 0 nil])
([nil nil ((8639 . 8641) (t 25933 61968 656469 833000)) nil (25933 63665 321344 379000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8744 . 8745) (nil fontified nil 8737 . 8745) (nil fontified nil 8733 . 8737) (nil fontified nil 8732 . 8733) (nil fontified nil 8641 . 8732) (8641 . 8745)) nil (25933 63665 321341 863000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8716) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -8717) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t)) . -8718) (undo-tree-id280 . -1) (#(" " 0 1 (fontified nil)) . -8719) (undo-tree-id281 . -1) (#(" " 0 1 (fontified t)) . -8720) (undo-tree-id282 . -1) (#(" " 0 1 (fontified nil)) . -8721) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -8722) (undo-tree-id284 . -1) (#(" " 0 1 (fontified nil)) . -8723) (undo-tree-id285 . -1) (#(" " 0 1 (fontified t)) . -8724) (undo-tree-id286 . -1) (#(" " 0 1 (fontified t)) . -8725) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t)) . -8726) (undo-tree-id288 . -1) (#("d" 0 1 (fontified t)) . -8727) (undo-tree-id289 . -1) 8728) nil (25933 63665 321333 189000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8695) (undo-tree-id257 . -1) (#(" " 0 1 (fontified nil)) . -8696) (undo-tree-id258 . -1) (#(" " 0 1 (fontified nil)) . -8697) (undo-tree-id259 . -1) (#(" " 0 1 (fontified nil)) . -8698) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -8699) (undo-tree-id261 . -1) (#(" " 0 1 (fontified nil)) . -8700) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t)) . -8701) (undo-tree-id263 . -1) (#(" " 0 1 (fontified nil)) . -8702) (undo-tree-id264 . -1) (#(" " 0 1 (fontified nil)) . -8703) (undo-tree-id265 . -1) (#(" " 0 1 (fontified t)) . -8704) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -8705) (undo-tree-id267 . -1) (#(" " 0 1 (fontified nil)) . -8706) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -8707) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -8708) (undo-tree-id270 . -1) (#(" " 0 1 (fontified nil)) . -8709) (undo-tree-id271 . -1) (#(" " 0 1 (fontified nil)) . -8710) (undo-tree-id272 . -1) (#(" " 0 1 (fontified t)) . -8711) (undo-tree-id273 . -1) (#(" " 0 1 (fontified nil)) . -8712) (undo-tree-id274 . -1) (#(" " 0 1 (fontified t)) . -8713) (undo-tree-id275 . -1) (#(" " 0 1 (fontified nil)) . -8714) (undo-tree-id276 . -1) (#(" " 0 1 (fontified t)) . -8715) (undo-tree-id277 . -1) 8716) nil (25933 63665 321294 280000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8674) (undo-tree-id236 . -1) (#(" " 0 1 (fontified nil)) . -8675) (undo-tree-id237 . -1) (#(" " 0 1 (fontified t)) . -8676) (undo-tree-id238 . -1) (#(" " 0 1 (fontified nil)) . -8677) (undo-tree-id239 . -1) (#(" " 0 1 (fontified t)) . -8678) (undo-tree-id240 . -1) (#(" " 0 1 (fontified nil)) . -8679) (undo-tree-id241 . -1) (#(" " 0 1 (fontified nil)) . -8680) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -8681) (undo-tree-id243 . -1) (#(" " 0 1 (fontified nil)) . -8682) (undo-tree-id244 . -1) (#(" " 0 1 (fontified t)) . -8683) (undo-tree-id245 . -1) (#(" " 0 1 (fontified nil)) . -8684) (undo-tree-id246 . -1) (#(" " 0 1 (fontified nil)) . -8685) (undo-tree-id247 . -1) (#(" " 0 1 (fontified nil)) . -8686) (undo-tree-id248 . -1) (#(" " 0 1 (fontified nil)) . -8687) (undo-tree-id249 . -1) (#(" " 0 1 (fontified nil)) . -8688) (undo-tree-id250 . -1) (#(" " 0 1 (fontified nil)) . -8689) (undo-tree-id251 . -1) (#(" " 0 1 (fontified nil)) . -8690) (undo-tree-id252 . -1) (#(" " 0 1 (fontified nil)) . -8691) (undo-tree-id253 . -1) (#(" " 0 1 (fontified nil)) . -8692) (undo-tree-id254 . -1) (#(" " 0 1 (fontified nil)) . -8693) (undo-tree-id255 . -1) (#(" " 0 1 (fontified nil)) . -8694) (undo-tree-id256 . -1) 8695) nil (25933 63665 321238 369000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -8653) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -8654) (undo-tree-id216 . -1) (#(" " 0 1 (fontified nil)) . -8655) (undo-tree-id217 . -1) (#(" " 0 1 (fontified t)) . -8656) (undo-tree-id218 . -1) (#(" " 0 1 (fontified nil)) . -8657) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -8658) (undo-tree-id220 . -1) (#(" " 0 1 (fontified nil)) . -8659) (undo-tree-id221 . -1) (#(" " 0 1 (fontified t)) . -8660) (undo-tree-id222 . -1) (#(" " 0 1 (fontified nil)) . -8661) (undo-tree-id223 . -1) (#(" " 0 1 (fontified t)) . -8662) (undo-tree-id224 . -1) (#(" " 0 1 (fontified nil)) . -8663) (undo-tree-id225 . -1) (#(" " 0 1 (fontified t)) . -8664) (undo-tree-id226 . -1) (#(" " 0 1 (fontified nil)) . -8665) (undo-tree-id227 . -1) (#(" " 0 1 (fontified t)) . -8666) (undo-tree-id228 . -1) (#(" " 0 1 (fontified nil)) . -8667) (undo-tree-id229 . -1) (#(" " 0 1 (fontified t)) . -8668) (undo-tree-id230 . -1) (#(" " 0 1 (fontified nil)) . -8669) (undo-tree-id231 . -1) (#(" " 0 1 (fontified t)) . -8670) (undo-tree-id232 . -1) (#(" " 0 1 (fontified t)) . -8671) (undo-tree-id233 . -1) (#(" " 0 1 (fontified nil)) . -8672) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -8673) (undo-tree-id235 . -1) 8674) nil (25933 63665 321178 174000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8640) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#(" " 0 1 (fontified nil)) . -8641) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#(" " 0 1 (fontified nil)) . -8642) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#(" " 0 1 (fontified t)) . -8643) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t)) . -8644) (undo-tree-id206 . -1) (#(" " 0 1 (fontified nil)) . -8645) (undo-tree-id207 . -1) (#(" " 0 1 (fontified t)) . -8646) (undo-tree-id208 . -1) (#(" " 0 1 (fontified nil)) . -8647) (undo-tree-id209 . -1) (#(" " 0 1 (fontified nil)) . -8648) (undo-tree-id210 . -1) (#(" " 0 1 (fontified t)) . -8649) (undo-tree-id211 . -1) (#(" " 0 1 (fontified nil)) . -8650) (undo-tree-id212 . -1) (#(" " 0 1 (fontified nil)) . -8651) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -8652) (undo-tree-id214 . -1) 8653) nil (25933 63665 321089 77000) 0 nil])
([nil nil ((8640 . 8642)) nil (25933 63665 320779 247000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8658) (#("
" 0 1 (rear-nonsticky t fontified t)) . 8658)) nil (25933 63665 320777 62000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8657) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 8658) nil (25933 63665 320766 47000) 0 nil])
([nil nil ((8657 . 8658)) nil (25933 63665 320344 125000) 0 nil])
([nil nil ((#("dtype=self.FLOAT" 0 1 (fontified t) 1 5 (fontified t) 5 6 (face font-lock-operator-face fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 16 (fontified t)) . 8641) (undo-tree-id765 . -16) (undo-tree-id766 . -8) (undo-tree-id767 . -9) (undo-tree-id768 . -8) (undo-tree-id769 . -8) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (undo-tree-id775 . -8) (undo-tree-id776 . -8) (undo-tree-id777 . -8) (undo-tree-id778 . -8) (undo-tree-id779 . -8) (undo-tree-id780 . -8) (undo-tree-id781 . -8) (undo-tree-id782 . -8) (undo-tree-id783 . -8) (undo-tree-id784 . -8) (undo-tree-id785 . -8) (undo-tree-id786 . -7) (undo-tree-id787 . -8) (undo-tree-id788 . -6) (undo-tree-id789 . -8) (undo-tree-id790 . -6) (undo-tree-id791 . -6) (undo-tree-id792 . -6) (undo-tree-id793 . -6) (undo-tree-id794 . -6) (undo-tree-id795 . -6) (undo-tree-id796 . -6) (undo-tree-id797 . -6) (undo-tree-id798 . -6) (undo-tree-id799 . -6) (undo-tree-id800 . -6) (undo-tree-id801 . -6) (undo-tree-id802 . -6) (undo-tree-id803 . -6) (undo-tree-id804 . -6) (undo-tree-id805 . -5) (undo-tree-id806 . -6) (undo-tree-id807 . -5) (undo-tree-id808 . -5) (undo-tree-id809 . -5) (undo-tree-id810 . -5) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (undo-tree-id813 . -5) (undo-tree-id814 . -5) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -5) (undo-tree-id818 . -5) (undo-tree-id819 . -5) (undo-tree-id820 . -5) (undo-tree-id821 . -5) (undo-tree-id822 . -5) (undo-tree-id823 . -5) (undo-tree-id824 . -5) (undo-tree-id825 . -5) (undo-tree-id826 . -5) (undo-tree-id827 . -5) (undo-tree-id828 . -5) (undo-tree-id829 . -4) (undo-tree-id830 . -5) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -3) (undo-tree-id854 . -4) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -3) (undo-tree-id859 . -3) (undo-tree-id860 . -3) (undo-tree-id861 . -3) (undo-tree-id862 . -3) (undo-tree-id863 . -3) (undo-tree-id864 . -3) (undo-tree-id865 . -3) (undo-tree-id866 . -3) (undo-tree-id867 . -3) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -2) (undo-tree-id871 . -3) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -2) (undo-tree-id878 . -2) (undo-tree-id879 . -2) (undo-tree-id880 . -2) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (undo-tree-id885 . -2) (undo-tree-id886 . -2) (undo-tree-id887 . -2) (undo-tree-id888 . -2) (undo-tree-id889 . -2) (undo-tree-id890 . -2) (undo-tree-id891 . -2) (undo-tree-id892 . -2) (undo-tree-id893 . -2) (undo-tree-id894 . -1) (undo-tree-id895 . -2) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (t 25933 63665 363981 778000)) nil (25933 63838 647771 987000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8639) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#(" " 0 1 (fontified t)) . -8640) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) 8641) nil (25933 63838 647448 132000) 0 nil])
([nil nil ((8569 . 8571) (t 25933 63838 674170 128000)) nil (25933 63842 441862 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8586 . 8587) (nil fontified nil 8581 . 8587) (nil fontified nil 8577 . 8581) (nil fontified nil 8576 . 8577) (nil fontified nil 8572 . 8576) (nil fontified nil 8571 . 8572) (8571 . 8587)) nil (25933 63842 441846 963000) 0 nil])
([nil nil ((#("," 0 1 (fontified nil)) . -8569) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (#(" " 0 1 (fontified nil)) . -8570) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (#("d" 0 1 (fontified nil)) . -8571) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#("t" 0 1 (fontified nil)) . -8572) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (#("y" 0 1 (fontified nil)) . -8573) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (#("p" 0 1 (fontified nil)) . -8574) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("e" 0 1 (fontified nil)) . -8575) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -8576) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("s" 0 1 (fontified t)) . -8577) (undo-tree-id1058 . -1) (#("e" 0 1 (fontified t)) . -8578) (undo-tree-id1059 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -8579) (undo-tree-id1060 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -8580) (undo-tree-id1061 . -1) (#("." 0 1 (fontified t)) . -8581) (undo-tree-id1062 . -1) (#("F" 0 1 (fontified t)) . -8582) (undo-tree-id1063 . -1) (#("L" 0 1 (fontified t)) . -8583) (undo-tree-id1064 . -1) (#("O" 0 1 (fontified t)) . -8584) (undo-tree-id1065 . -1) (#("A" 0 1 (fontified t)) . -8585) (undo-tree-id1066 . -1) (#("T" 0 1 (rear-nonsticky t fontified t)) . -8586) (undo-tree-id1067 . -1) 8587 (t 25933 63842 475128 991000)) nil (25933 63857 365332 673000) 0 nil])
([nil nil ((8163 . 8165) (t 25933 63857 397275 330000)) nil (25933 64119 185227 391000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8161 . 8162) (nil fontified nil 8155 . 8162) (nil fontified nil 8151 . 8155) (nil fontified nil 8150 . 8151) (nil fontified nil 8145 . 8150) (8145 . 8162)) nil (25933 64119 185225 531000) 0 nil])
([nil nil ((8162 . 8164)) nil (25933 64119 185223 332000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8162) (undo-tree-id1142 . -1) (#(" " 0 1 (fontified t)) . -8163) (undo-tree-id1143 . -1) 8164) nil (25933 64119 185220 524000) 0 nil])
([nil nil ((8162 . 8163)) nil (25933 64119 185213 876000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8181) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (#(" " 0 1 (fontified t)) . -8182) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) 8183) nil (25933 64119 185201 606000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8501 . 8502) (nil fontified nil 8495 . 8502) (nil fontified nil 8491 . 8495) (nil fontified nil 8490 . 8491) (nil fontified nil 8485 . 8490) (8485 . 8502) (t 25933 64119 218886 12000)) nil (25933 64124 107169 95000) 0 nil])
([nil nil ((8502 . 8503)) nil (25933 64124 107159 427000) 0 nil])
([nil nil ((3010 . 3026) (t 25933 64124 139253 243000)) nil (25933 64352 477268 406000) 0 nil])
([nil nil ((2759 . 2760)) nil (25933 64352 477264 748000) 0 nil])
([nil nil ((3005 . 3006)) nil (25933 64352 477254 570000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3010) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) 3011 (t 25933 64352 512019 589000)) nil (25933 64367 268994 836000) 0 nil])
([nil nil ((2842 . 2844)) nil (25933 64367 268739 390000) 0 nil])
([nil nil ((3012 . 3014)) nil (25933 64367 268724 221000) 0 nil])
([nil nil ((2824 . 2841) (t 25933 64367 315161 966000)) nil (25933 64424 645541 247000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2848) (2847 . 2848) (2846 . 2848) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2846) (2841 . 2847)) nil (25933 64424 645536 867000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 2849) (2848 . 2849) (2847 . 2849) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2847) (2847 . 2848)) nil (25933 64424 645531 945000) 0 nil])
([nil nil ((2848 . 2849)) nil (25933 64424 645527 857000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-string-face fontified t)) . -2848) (undo-tree-id1183 . -1) 2849) nil (25933 64424 645525 373000) 0 nil])
([nil nil ((2848 . 2854)) nil (25933 64424 645520 713000) 0 nil])
([nil nil ((2855 . 2869)) nil (25933 64424 645519 160000) 0 nil])
([nil nil ((2870 . 2887)) nil (25933 64424 645517 577000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2894) (2893 . 2894) (2892 . 2894) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2892) (2887 . 2893)) nil (25933 64424 645515 84000) 0 nil])
([nil nil ((2893 . 2894)) nil (25933 64424 645511 536000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -2893) (undo-tree-id1182 . -1) 2894) nil (25933 64424 645509 58000) 0 nil])
([nil nil ((2893 . 2901)) nil (25933 64424 645498 941000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2903) (2902 . 2903) (2901 . 2903) (#("[" 0 1 (fontified nil)) . -2901) (2901 . 2902)) nil (25933 64424 645493 385000) 0 nil])
([nil nil ((2902 . 2907)) nil (25933 64424 645484 416000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2910) (2909 . 2910) (2908 . 2910) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2908) (2908 . 2909)) nil (25933 64424 645476 876000) 0 nil])
([nil nil ((2909 . 2914)) nil (25933 64424 645466 459000) 0 nil])
([nil nil ((2915 . 2921)) nil (25933 64424 645460 301000) 0 nil])
([nil nil ((2922 . 2939)) nil (25933 64424 645454 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2974 . 2975) (nil fontified nil 2974 . 2975) (nil fontified nil 2973 . 2974) (nil fontified nil 2967 . 2973) (nil fontified nil 2966 . 2967) (nil fontified nil 2961 . 2966) (nil fontified nil 2960 . 2961) (nil fontified nil 2959 . 2960) (nil fontified nil 2954 . 2959) (nil fontified nil 2953 . 2954) (nil fontified nil 2949 . 2953) (nil fontified nil 2945 . 2949) (nil fontified nil 2944 . 2945) (nil fontified nil 2939 . 2944) (nil fontified nil 2923 . 2939) (2923 . 2975)) nil (25933 64424 645449 716000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2952) (undo-tree-id1161 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2953) (undo-tree-id1162 . -1) (#("i" 0 1 (fontified t)) . -2954) (undo-tree-id1163 . -1) (#("_" 0 1 (fontified t)) . -2955) (undo-tree-id1164 . -1) (#("p" 0 1 (fontified t)) . -2956) (undo-tree-id1165 . -1) (#("o" 0 1 (fontified t)) . -2957) (undo-tree-id1166 . -1) (#("p" 0 1 (fontified t)) . -2958) (undo-tree-id1167 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2959) (undo-tree-id1168 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2960) (undo-tree-id1169 . -1) (#("j" 0 1 (fontified nil)) . -2961) (undo-tree-id1170 . -1) (#("_" 0 1 (fontified t)) . -2962) (undo-tree-id1171 . -1) (#("p" 0 1 (fontified t)) . -2963) (undo-tree-id1172 . -1) (#("o" 0 1 (fontified nil)) . -2964) (undo-tree-id1173 . -1) (#("p" 0 1 (fontified t)) . -2965) (undo-tree-id1174 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2966) (undo-tree-id1175 . -1) (#("." 0 1 (fontified nil)) . -2967) (undo-tree-id1176 . -1) (#("s" 0 1 (fontified t)) . -2968) (undo-tree-id1177 . -1) (#("h" 0 1 (fontified t)) . -2969) (undo-tree-id1178 . -1) (#("a" 0 1 (fontified t)) . -2970) (undo-tree-id1179 . -1) (#("p" 0 1 (fontified t)) . -2971) (undo-tree-id1180 . -1) (#("e" 0 1 (fontified t)) . -2972) (undo-tree-id1181 . -1) 2973) nil (25933 64424 645422 955000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2945) (undo-tree-id1154 . -1) (#("e" 0 1 (fontified t)) . -2946) (undo-tree-id1155 . -1) (#("l" 0 1 (fontified t)) . -2947) (undo-tree-id1156 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -2948) (undo-tree-id1157 . -1) (#("." 0 1 (fontified t)) . -2949) (undo-tree-id1158 . -1) (#("W" 0 1 (fontified t)) . -2950) (undo-tree-id1159 . -1) (#("a" 0 1 (fontified t)) . -2951) (undo-tree-id1160 . -1) 2952) nil (25933 64424 645273 338000) 0 nil])
([nil nil ((2945 . 2951)) nil (25933 64424 645234 14000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2950) (undo-tree-id1153 . -1) 2951) nil (25933 64424 645227 751000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2952) (2951 . 2952) (2950 . 2952) (#("[" 0 1 (fontified nil)) . -2950) (2950 . 2951)) nil (25933 64424 645210 925000) 0 nil])
([nil nil ((2824 . 2841)) nil (25933 64424 645201 461000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2874 . 2875) (nil fontified nil 2874 . 2875) (nil fontified nil 2873 . 2874) (nil fontified nil 2871 . 2873) (nil fontified nil 2870 . 2871) (nil fontified nil 2864 . 2870) (nil fontified nil 2863 . 2864) (nil fontified nil 2856 . 2863) (nil fontified nil 2852 . 2856) (nil fontified nil 2849 . 2852) (nil fontified nil 2848 . 2849) (nil fontified nil 2843 . 2848) (nil fontified nil 2842 . 2843) (nil fontified nil 2835 . 2842) (nil fontified nil 2831 . 2835) (nil fontified nil 2830 . 2831) (nil fontified nil 2825 . 2830) (2825 . 2875)) nil (25933 64424 645194 61000) 0 nil])
([nil nil ((2825 . 2841)) nil (25933 64424 645184 633000) 0 nil])
([nil nil ((2841 . 2850)) nil (25933 64424 645182 127000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2844) (undo-tree-id1150 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2845) (undo-tree-id1151 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2846) (undo-tree-id1152 . -1) 2847) nil (25933 64424 645175 991000) 0 nil])
([nil nil ((2844 . 2847)) nil (25933 64424 645135 315000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2900) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#(" " 0 1 (fontified t)) . -2901) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (#(" " 0 1 (fontified t)) . -2902) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (#(" " 0 1 (fontified t)) . -2903) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (#(" " 0 1 (fontified t)) . -2904) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (#(" " 0 1 (fontified nil)) . -2905) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (#(" " 0 1 (fontified t)) . -2906) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (#(" " 0 1 (fontified t)) . -2907) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (#(" " 0 1 (fontified t)) . -2908) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (#(" " 0 1 (fontified nil)) . -2909) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (#(" " 0 1 (fontified t)) . -2910) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (#(" " 0 1 (fontified t)) . -2911) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (#(" " 0 1 (fontified t)) . -2912) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (#(" " 0 1 (fontified t)) . -2913) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (#(" " 0 1 (fontified t)) . -2914) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (#(" " 0 1 (fontified t)) . -2915) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) 2916 (t 25933 64424 688784 38000)) nil (25933 64426 860058 369000) 0 nil])
([nil nil ((2901 . 2902) (t 25933 64426 908716 856000)) nil (25933 64434 661696 905000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3122) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -3123) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (#("." 0 1 (fontified t)) . -3124) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (#("c" 0 1 (fontified t)) . -3125) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (#("s" 0 1 (fontified nil)) . -3126) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (#("u" 0 1 (fontified t)) . -3127) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (#("m" 0 1 (fontified nil)) . -3128) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (#("N" 0 1 (fontified t)) . -3129) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (#("a" 0 1 (fontified t)) . -3130) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -3131) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (#("j" 0 1 (fontified t)) . -3132) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (#("_" 0 1 (fontified t)) . -3133) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (#("p" 0 1 (fontified t)) . -3134) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (#("o" 0 1 (fontified t)) . -3135) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (#("p" 0 1 (fontified nil)) . -3136) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (#(" " 0 1 (fontified t)) . -3137) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3138) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (#(" " 0 1 (fontified t)) . -3139) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (#("1" 0 1 (fontified t)) . -3140) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3141) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face))) . -3142) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) 3143) nil (25933 64434 661684 862000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -3101) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -3102) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (#("." 0 1 (fontified nil)) . -3103) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (#("c" 0 1 (fontified nil)) . -3104) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (#("s" 0 1 (fontified nil)) . -3105) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (#("u" 0 1 (fontified nil)) . -3106) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (#("m" 0 1 (fontified nil)) . -3107) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (#("N" 0 1 (fontified nil)) . -3108) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (#("a" 0 1 (fontified nil)) . -3109) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -3110) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (#("j" 0 1 (fontified t)) . -3111) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (#("_" 0 1 (fontified nil)) . -3112) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (#("p" 0 1 (fontified t)) . -3113) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (#("o" 0 1 (fontified nil)) . -3114) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (#("p" 0 1 (fontified t)) . -3115) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3116) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (#(" " 0 1 (fontified nil)) . -3117) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (#(":" 0 1 (fontified t)) . -3118) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (#(" " 0 1 (fontified t)) . -3119) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (#("s" 0 1 (fontified nil)) . -3120) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (#("e" 0 1 (fontified nil)) . -3121) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) 3122) nil (25933 64434 661586 990000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3093) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (#("a" 0 1 (fontified t)) . -3094) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (#("t" 0 1 (fontified nil)) . -3095) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (#("e" 0 1 (fontified nil)) . -3096) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (#("s" 0 1 (fontified nil)) . -3097) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -3098) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -3099) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -3100) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) 3101) nil (25933 64434 661492 758000) 0 nil])
([nil nil ((3093 . 3095)) nil (25933 64434 661426 233000) 0 nil])
([nil nil ((3095 . 3099)) nil (25933 64434 661415 327000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3021) (undo-tree-id3408 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3022) (#("r" 0 1 (fontified t)) . -3022) (undo-tree-id3409 . -1) (#("a" 0 1 (fontified nil)) . -3023) (undo-tree-id3410 . -1) (#("t" 0 1 (fontified t)) . -3024) (undo-tree-id3411 . -1) (#("e" 0 1 (fontified t)) . -3025) (undo-tree-id3412 . -1) (#("s" 0 1 (fontified t)) . -3026) (undo-tree-id3413 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3027) (undo-tree-id3414 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3028) (undo-tree-id3415 . -1) 3029 (t 25933 64434 704493 248000)) nil (25933 64442 114610 654000) 0 nil])
([nil nil ((3022 . 3034) (3021 . 3023) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3021) (3021 . 3022)) nil (25933 64442 114563 107000) 0 nil])
([nil nil ((#("                Wij = self.Wab[i_pop][j_pop](r_pres)
" 0 16 (fontified t) 16 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 22 (fontified t) 22 26 (face font-lock-keyword-face fontified t) 26 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (fontified t)) . 3053) (undo-tree-id3419 . -53) (undo-tree-id3420 . -45) (undo-tree-id3421 . -53) 3106 (t 25933 64442 164296 271000)) nil (25933 64456 81295 69000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3105 . 3106) (nil fontified nil 3105 . 3106) (nil fontified nil 3104 . 3105) (nil fontified nil 3098 . 3104) (nil fontified nil 3097 . 3098) (nil fontified nil 3096 . 3097) (nil fontified nil 3091 . 3096) (nil fontified nil 3090 . 3091) (nil fontified nil 3089 . 3090) (nil fontified nil 3084 . 3089) (nil fontified nil 3083 . 3084) (nil fontified nil 3079 . 3083) (nil fontified nil 3075 . 3079) (nil fontified nil 3074 . 3075) (nil fontified nil 3073 . 3074) (nil fontified nil 3072 . 3073) (nil fontified nil 3069 . 3072) (nil fontified nil 3053 . 3069) (3053 . 3106)) nil (25933 64456 81263 503000) 0 nil])
([nil nil ((3107 . 3123) (#("                " 0 16 (fontified nil)) . 3106) (undo-tree-id3418 . -16) (3105 . 3123)) nil (25933 64456 81241 247000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 3130) (3129 . 3130) (3128 . 3130) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3128) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (3123 . 3129)) nil (25933 64456 81223 484000) 0 nil])
([nil nil ((3129 . 3132)) nil (25933 64456 81179 517000) 0 nil])
([nil nil ((3132 . 3138) (t 25933 64456 123969 125000)) nil (25933 64457 626750 369000) 0 nil])
([nil nil ((#("." 0 1 (fontified nil)) . -2992) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (#("s" 0 1 (fontified t)) . -2993) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (#("h" 0 1 (fontified t)) . -2994) (undo-tree-id3456 . -1) (#("a" 0 1 (fontified t)) . -2995) (undo-tree-id3457 . -1) (#("p" 0 1 (fontified t)) . -2996) (undo-tree-id3458 . -1) (#("e" 0 1 (fontified t)) . -2997) (undo-tree-id3459 . -1) 2998 (t 25933 64457 663936 164000)) nil (25933 64469 612911 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2928 . 2929) (nil fontified nil 2927 . 2929) (nil fontified nil 2909 . 2927) (nil fontified nil 2902 . 2909) (nil fontified nil 2901 . 2902) (2901 . 2929) (t 25933 64469 659699 23000)) nil (25933 65018 171953 137000) 0 nil])
([nil nil ((2901 . 2917)) nil (25933 65018 171935 303000) 0 nil])
([nil nil ((2945 . 2962) (t 25933 65018 215021 588000)) nil (25933 65019 251384 538000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3006 . 3007) (nil fontified nil 3000 . 3007) (nil fontified nil 2999 . 3000) (nil fontified nil 2992 . 2999) (nil fontified nil 2979 . 2992) (nil fontified nil 2972 . 2979) (nil fontified nil 2970 . 2972) (nil fontified nil 2968 . 2970) (nil fontified nil 2967 . 2968) (nil fontified nil 2955 . 2967) (nil fontified nil 2954 . 2955) (nil fontified nil 2949 . 2954) (nil fontified nil 2946 . 2949) (2946 . 3007) (t 25933 65019 287022 869000)) nil (25933 65107 350810 541000) 0 nil])
([nil nil ((2946 . 2962) (#("   " 0 3 (fontified t src-block t font-lock-fontified t gptel response)) . 2946)) nil (25933 65107 350804 173000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -2998) (undo-tree-id3872 . -1) (#("a" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2999) (undo-tree-id3873 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3000) (undo-tree-id3874 . -1) (#("e" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3001) (undo-tree-id3875 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3002) (undo-tree-id3876 . -1) (#("i" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3003) (undo-tree-id3877 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3004) (undo-tree-id3878 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3005) (undo-tree-id3879 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3006) (undo-tree-id3880 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3007) (undo-tree-id3881 . -1) (#("w" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3008) (undo-tree-id3882 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3009) (undo-tree-id3883 . -1) (#("[" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3010) (undo-tree-id3884 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3011) (undo-tree-id3885 . -1) (#("," 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3012) (undo-tree-id3886 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -3013) (undo-tree-id3887 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3014) (undo-tree-id3888 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3015) (undo-tree-id3889 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3016) (undo-tree-id3890 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3017) (undo-tree-id3891 . -1) (#("]" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -3018) (undo-tree-id3892 . -1) 3019) nil (25933 65107 350793 561000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t src-block t font-lock-fontified t gptel response)) . -2983) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t src-block t font-lock-fontified t gptel response)) . -2984) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (#("C" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2985) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (#("o" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2986) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (#("n" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2987) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (#("f" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2988) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (#("i" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2989) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (#("r" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2990) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (#("m" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2991) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2992) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (#("t" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2993) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (#("h" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2994) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -2995) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t src-block t font-lock-fontified t gptel response)) . -2996) (undo-tree-id3870 . -1) (#("s" 0 1 (face font-lock-comment-face fontified nil src-block t font-lock-fontified t gptel response)) . -2997) (undo-tree-id3871 . -1) 2998) nil (25933 65107 350717 394000) 0 nil])
([nil nil ((#("                print(r_pres.shape)  
" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t src-block t font-lock-fontified t gptel response) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t gptel response) 22 34 (fontified t src-block t font-lock-fontified t gptel response) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t gptel response) 35 37 (fontified t src-block t font-lock-fontified t gptel response) 37 38 (rear-nonsticky t fontified t src-block t font-lock-fontified t gptel response)) . -2946) (undo-tree-id3460 . -37) (undo-tree-id3461 . -37) (undo-tree-id3462 . -37) (undo-tree-id3463 . -37) (undo-tree-id3464 . -37) (undo-tree-id3465 . -37) (undo-tree-id3466 . -37) (undo-tree-id3467 . -37) (undo-tree-id3468 . -37) (undo-tree-id3469 . -37) (undo-tree-id3470 . -37) (undo-tree-id3471 . -37) (undo-tree-id3472 . -37) (undo-tree-id3473 . -37) (undo-tree-id3474 . -37) (undo-tree-id3475 . -37) (undo-tree-id3476 . -37) (undo-tree-id3477 . -37) (undo-tree-id3478 . -37) (undo-tree-id3479 . -37) (undo-tree-id3480 . -37) (undo-tree-id3481 . -37) (undo-tree-id3482 . -37) (undo-tree-id3483 . -37) (undo-tree-id3484 . -37) (undo-tree-id3485 . -37) (undo-tree-id3486 . -37) (undo-tree-id3487 . -37) (undo-tree-id3488 . -37) (undo-tree-id3489 . -37) (undo-tree-id3490 . -37) (undo-tree-id3491 . -37) (undo-tree-id3492 . -37) (undo-tree-id3493 . -37) (undo-tree-id3494 . -37) (undo-tree-id3495 . -37) (undo-tree-id3496 . -37) (undo-tree-id3497 . -37) (undo-tree-id3498 . -37) (undo-tree-id3499 . -37) (undo-tree-id3500 . -37) (undo-tree-id3501 . -37) (undo-tree-id3502 . -37) (undo-tree-id3503 . -37) (undo-tree-id3504 . -37) (undo-tree-id3505 . -37) (undo-tree-id3506 . -37) (undo-tree-id3507 . -37) (undo-tree-id3508 . -37) (undo-tree-id3509 . -37) (undo-tree-id3510 . -37) (undo-tree-id3511 . -37) (undo-tree-id3512 . -37) (undo-tree-id3513 . -37) (undo-tree-id3514 . -37) (undo-tree-id3515 . -37) (undo-tree-id3516 . -37) (undo-tree-id3517 . -37) (undo-tree-id3518 . -37) (undo-tree-id3519 . -37) (undo-tree-id3520 . -37) (undo-tree-id3521 . -37) (undo-tree-id3522 . -37) (undo-tree-id3523 . -37) (undo-tree-id3524 . -37) (undo-tree-id3525 . -37) (undo-tree-id3526 . -37) (undo-tree-id3527 . -37) (undo-tree-id3528 . -37) (undo-tree-id3529 . -37) (undo-tree-id3530 . -37) (undo-tree-id3531 . -37) (undo-tree-id3532 . -37) (undo-tree-id3533 . -37) (undo-tree-id3534 . -37) (undo-tree-id3535 . -37) (undo-tree-id3536 . -37) (undo-tree-id3537 . -37) (undo-tree-id3538 . -37) (undo-tree-id3539 . -37) (undo-tree-id3540 . -37) (undo-tree-id3541 . -37) (undo-tree-id3542 . -37) (undo-tree-id3543 . -37) (undo-tree-id3544 . -37) (undo-tree-id3545 . -37) (undo-tree-id3546 . -37) (undo-tree-id3547 . -37) (undo-tree-id3548 . -37) (undo-tree-id3549 . -37) (undo-tree-id3550 . -37) (undo-tree-id3551 . -37) (undo-tree-id3552 . -37) (undo-tree-id3553 . -37) (undo-tree-id3554 . -37) (undo-tree-id3555 . -37) (undo-tree-id3556 . -38) (undo-tree-id3557 . -38) (undo-tree-id3558 . -38) (undo-tree-id3559 . -38) (undo-tree-id3560 . -38) (undo-tree-id3561 . -38) (undo-tree-id3562 . -38) (undo-tree-id3563 . -38) (undo-tree-id3564 . -38) (undo-tree-id3565 . -38) (undo-tree-id3566 . -38) (undo-tree-id3567 . -38) (undo-tree-id3568 . -38) (undo-tree-id3569 . -38) (undo-tree-id3570 . -38) (undo-tree-id3571 . -38) (undo-tree-id3572 . -38) (undo-tree-id3573 . -38) (undo-tree-id3574 . -38) (undo-tree-id3575 . -38) 2984) nil (25934 5541 894088 156000) 0 nil])
([nil nil ((apply -6 2963 3114 undo--wrap-and-run-primitive-undo 2963 3114 ((3075 . 3077) (3027 . 3029) (2979 . 2981) 3091))) nil (25934 5612 866412 767000) 0 nil] [nil nil ((#("                r_pres = r_pres.unsqueeze(0)
" 0 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t gptel response) 17 22 (face font-lock-variable-name-face fontified t gptel response) 22 23 (fontified t gptel response) 23 24 (face font-lock-operator-face fontified t gptel response) 24 41 (fontified t gptel response) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t gptel response) 42 43 (fontified t gptel response) 43 44 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t gptel response) 44 45 (fontified t)) . -2901) (undo-tree-id3893 . -45) (undo-tree-id3895 . -45) (undo-tree-id3896 . -45) (undo-tree-id3897 . -45) (undo-tree-id3898 . -45) (undo-tree-id3900 . -45) (undo-tree-id3901 . -45) (undo-tree-id3903 . -45) (undo-tree-id3904 . -45) (undo-tree-id3905 . -45) (undo-tree-id3906 . -45) (undo-tree-id3907 . -45) (undo-tree-id3908 . -45) 2946 (t 25933 65107 387227 340000)) ((2901 . 2946)) (25934 5540 441060 358000) 0 nil])
([nil nil ((3200 . 3217) (t 25934 5612 886729 786000)) nil (25934 5624 479143 327000) 0 nil])
([nil nil ((3116 . 3132) (t 25933 65126 999296 61000)) ((#("                " 0 16 (fontified t)) . 3116)) (25934 5539 971191 91000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3166) (undo-tree-id5154 . -1) 3167) nil (25934 5624 479140 379000) 0 nil])
([nil nil ((#("                self.Wab[i_pop][j_pop] = self.Wab[i_pop][j_pop]
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 41 (fontified t) 41 45 (face font-lock-keyword-face fontified t) 45 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 64 (fontified t)) . -1977) (undo-tree-id3911 . -64) (undo-tree-id3913 . -64) (undo-tree-id3915 . -64) (undo-tree-id3917 . -64) (undo-tree-id3919 . -64) (undo-tree-id3921 . -64) (undo-tree-id3923 . -64) (undo-tree-id3925 . -64) (undo-tree-id3927 . -64) (undo-tree-id3929 . -64) (undo-tree-id3931 . -64) (undo-tree-id3933 . -64) (undo-tree-id3935 . -64) (undo-tree-id3937 . -64) (undo-tree-id3939 . -64) (undo-tree-id3941 . -64) (undo-tree-id3943 . -64) (undo-tree-id3945 . -64) (undo-tree-id3947 . -64) (undo-tree-id3949 . -64) (undo-tree-id3951 . -64) (undo-tree-id3953 . -64) (undo-tree-id3955 . -64) (undo-tree-id3957 . -64) (undo-tree-id3959 . -64) (undo-tree-id3961 . -64) (undo-tree-id3963 . -64) (undo-tree-id3965 . -64) (undo-tree-id3967 . -64) (undo-tree-id3969 . -64) (undo-tree-id3971 . -64) (undo-tree-id3973 . -64) (undo-tree-id3975 . -64) (undo-tree-id3977 . -64) (undo-tree-id3979 . -64) (undo-tree-id3981 . -64) (undo-tree-id3983 . -64) (undo-tree-id3984 . -64) (undo-tree-id3986 . -64) (undo-tree-id3988 . -64) 2041 (t 25933 65144 771364 510000)) ((1977 . 2041)) (25934 5539 624518 0) 0 nil])
([nil nil ((apply -2 3167 3219 undo--wrap-and-run-primitive-undo 3167 3219 ((3183 . 3185) 3200))) nil (25934 5624 479124 163000) 0 nil])
([nil nil ((1977 . 1993) (#("        " 0 8 (fontified t)) . 1977)) ((1977 . 1985) (#("                " 0 16 (fontified t)) . 1977) (undo-tree-id5142 . -16) (undo-tree-id5143 . -16) (undo-tree-id5144 . -16) (undo-tree-id5145 . -16) (undo-tree-id5146 . -16) (undo-tree-id5147 . -16) (undo-tree-id5148 . -16) (undo-tree-id5149 . -16) (undo-tree-id5150 . -16) (undo-tree-id5151 . -16) (undo-tree-id5152 . -16) (undo-tree-id5153 . -16)) (25934 5539 240203 437000) 0 nil])
([nil nil ((apply -2 3219 3331 undo--wrap-and-run-primitive-undo 3219 3331 ((3235 . 3237) 3312))) nil (25934 5738 557093 593000) 0 nil])
([nil nil ((1659 . 1667) (t 25933 65170 251472 79000)) ((#("        " 0 8 (fontified t)) . 1659) (undo-tree-id5071 . -8) (undo-tree-id5072 . -8) (undo-tree-id5073 . -8) (undo-tree-id5074 . -8) (undo-tree-id5075 . -8) (undo-tree-id5076 . -8) (undo-tree-id5077 . -8) (undo-tree-id5078 . -8) (undo-tree-id5079 . -8) (undo-tree-id5080 . -8) (undo-tree-id5081 . -8) (undo-tree-id5082 . -8) (undo-tree-id5083 . -8) (undo-tree-id5084 . -8) (undo-tree-id5085 . -8) (undo-tree-id5086 . -8) (undo-tree-id5087 . -8) (undo-tree-id5088 . -8) (undo-tree-id5089 . -8) (undo-tree-id5090 . -8) (undo-tree-id5091 . -8) (undo-tree-id5092 . -8) (undo-tree-id5093 . -8) (undo-tree-id5094 . -8) (undo-tree-id5095 . -8) (undo-tree-id5096 . -8) (undo-tree-id5097 . -8) (undo-tree-id5098 . -8) (undo-tree-id5099 . -8) (undo-tree-id5100 . -8) (undo-tree-id5101 . -8) (undo-tree-id5102 . -8) (undo-tree-id5103 . -8) (undo-tree-id5104 . -8) (undo-tree-id5105 . -8) (undo-tree-id5106 . -8) (undo-tree-id5107 . -8) (undo-tree-id5108 . -8) (undo-tree-id5109 . -8) (undo-tree-id5110 . -8) (undo-tree-id5111 . -8) (undo-tree-id5112 . -8) (undo-tree-id5113 . -8) (undo-tree-id5114 . -8) (undo-tree-id5115 . -8) (undo-tree-id5116 . -8) (undo-tree-id5117 . -8) (undo-tree-id5118 . -8) (undo-tree-id5119 . -8) (undo-tree-id5120 . -8) (undo-tree-id5121 . -8) (undo-tree-id5122 . -8) (undo-tree-id5123 . -8) (undo-tree-id5124 . -8) (undo-tree-id5125 . -8) (undo-tree-id5126 . -8) (undo-tree-id5127 . -8) (undo-tree-id5128 . -8) (undo-tree-id5129 . -8) (undo-tree-id5130 . -8) (undo-tree-id5131 . -8) (undo-tree-id5132 . -8) (undo-tree-id5133 . -8) (undo-tree-id5134 . -8) (undo-tree-id5135 . -8) (undo-tree-id5136 . -8) (undo-tree-id5137 . -8) (undo-tree-id5138 . -8) (undo-tree-id5139 . -8) (undo-tree-id5140 . -8) (undo-tree-id5141 . -8)) (25934 5539 19639 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3235) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3235) (t 25934 5738 575786 770000)) nil (25934 5761 737506 29000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1674) (1673 . 1674) (1672 . 1674) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1672) (1667 . 1673)) ((#("print(" 0 5 (face font-lock-builtin-face fontified nil) 5 6 (face font-lock-builtin-face fontified nil)) . 1667) (undo-tree-id4973 . -5) (undo-tree-id4974 . -5) (undo-tree-id4975 . -5) (undo-tree-id4976 . -5) (undo-tree-id4977 . -5) (undo-tree-id4978 . -5) (undo-tree-id4979 . -5) (undo-tree-id4980 . -5) (undo-tree-id4981 . -5) (undo-tree-id4982 . -5) (undo-tree-id4983 . -5) (undo-tree-id4984 . -5) (undo-tree-id4985 . -5) (undo-tree-id4986 . -5) (undo-tree-id4987 . -5) (undo-tree-id4988 . -5) (undo-tree-id4989 . -5) (undo-tree-id4990 . -5) (undo-tree-id4991 . -5) (undo-tree-id4992 . -5) (undo-tree-id4993 . -5) (undo-tree-id4994 . -5) (undo-tree-id4995 . -5) (undo-tree-id4996 . -5) (undo-tree-id4997 . -5) (undo-tree-id4998 . -5) (undo-tree-id4999 . -5) (undo-tree-id5000 . -5) (undo-tree-id5001 . -5) (undo-tree-id5002 . -5) (undo-tree-id5003 . -5) (undo-tree-id5004 . -5) (undo-tree-id5005 . -5) (undo-tree-id5006 . -5) (undo-tree-id5007 . -5) (undo-tree-id5008 . -5) (undo-tree-id5009 . -5) (undo-tree-id5010 . -5) (undo-tree-id5011 . -5) (undo-tree-id5012 . -5) (undo-tree-id5013 . -5) (undo-tree-id5014 . -5) (undo-tree-id5015 . -5) (undo-tree-id5016 . -5) (undo-tree-id5017 . -5) (undo-tree-id5018 . -5) (undo-tree-id5019 . -5) (1672 . 1673) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1672) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1673) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (1674 . 1675)) (25934 5538 849510 146000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3145) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) 3146 (t 25934 5761 759981 828000)) nil (25934 5775 396223 556000) 0 nil])
([nil nil ((1673 . 1682)) ((#("self.WWab" 0 4 (face font-lock-keyword-face fontified nil) 4 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 1673) (undo-tree-id4954 . -6) (undo-tree-id4955 . -6) (undo-tree-id4956 . -6) (undo-tree-id4957 . -6) (undo-tree-id4958 . -6) (undo-tree-id4959 . -6) (undo-tree-id4960 . -6) (undo-tree-id4961 . -6) (undo-tree-id4962 . -6) (undo-tree-id4963 . -6) (undo-tree-id4964 . -6) (undo-tree-id4965 . -9) (undo-tree-id4966 . -6) (undo-tree-id4967 . -6) (undo-tree-id4968 . -6) (undo-tree-id4969 . -6) (undo-tree-id4970 . -9) (undo-tree-id4971 . -9) (undo-tree-id4972 . -9)) (25934 5538 848647 809000) 0 nil])
([nil nil ((3145 . 3146)) nil (25934 5775 396012 413000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -1679) (undo-tree-id4005 . -1) (#("a" 0 1 (fontified t)) . -1680) (undo-tree-id4006 . -1) (#("b" 0 1 (fontified t)) . -1681) (undo-tree-id4007 . -1) 1682) ((1679 . 1682)) (25934 5538 448749 487000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3152)) nil (25934 5775 396010 808000) 0 nil])
([nil nil ((1679 . 1682)) ((#("ab?" 0 2 (fontified t) 2 3 (fontified t)) . 1679) (undo-tree-id4868 . -2) (undo-tree-id4869 . -2) (undo-tree-id4870 . -2) (undo-tree-id4871 . -2) (undo-tree-id4872 . -2) (undo-tree-id4873 . -2) (undo-tree-id4874 . -2) (undo-tree-id4875 . -2) (undo-tree-id4876 . -2) (undo-tree-id4877 . -2) (undo-tree-id4878 . -2) (undo-tree-id4879 . -2) (undo-tree-id4880 . -2) (undo-tree-id4881 . -2) (undo-tree-id4882 . -2) (undo-tree-id4883 . -2) (undo-tree-id4884 . -2) (undo-tree-id4885 . -2) (undo-tree-id4886 . -2) (undo-tree-id4887 . -2) (undo-tree-id4888 . -2) (undo-tree-id4889 . -2) (undo-tree-id4890 . -2) (undo-tree-id4891 . -2) (undo-tree-id4892 . -2) (undo-tree-id4893 . -2) (undo-tree-id4894 . -2) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) (undo-tree-id4897 . -2) (undo-tree-id4898 . -2) (undo-tree-id4899 . -2) (undo-tree-id4900 . -2) (undo-tree-id4901 . -2) (undo-tree-id4902 . -2) (undo-tree-id4903 . -2) (undo-tree-id4904 . -2) (undo-tree-id4905 . -2) (undo-tree-id4906 . -2) (undo-tree-id4907 . -2) (undo-tree-id4908 . -2) (undo-tree-id4909 . -2) (undo-tree-id4910 . -2) (undo-tree-id4911 . -2) (undo-tree-id4912 . -2) (undo-tree-id4913 . -2) (undo-tree-id4914 . -2) (undo-tree-id4915 . -2) (undo-tree-id4916 . -2) (undo-tree-id4917 . -2) (undo-tree-id4918 . -2) (undo-tree-id4919 . -2) (undo-tree-id4920 . -2) (undo-tree-id4921 . -2) (undo-tree-id4922 . -2) (undo-tree-id4923 . -2) (undo-tree-id4924 . -2) (undo-tree-id4925 . -2) (undo-tree-id4926 . -2) (undo-tree-id4927 . -2) (undo-tree-id4928 . -3) (undo-tree-id4929 . -3) (undo-tree-id4930 . -3) (undo-tree-id4931 . -3) (undo-tree-id4932 . -3) (undo-tree-id4933 . -3) (undo-tree-id4934 . -3) (undo-tree-id4935 . -3) (undo-tree-id4936 . -3) (undo-tree-id4937 . -3) (undo-tree-id4938 . -3) (undo-tree-id4939 . -3) (undo-tree-id4940 . -3) (undo-tree-id4941 . -3) (undo-tree-id4942 . -3) (undo-tree-id4943 . -3) (undo-tree-id4944 . -3) (undo-tree-id4945 . -3) (undo-tree-id4946 . -3) (undo-tree-id4947 . -3) (undo-tree-id4948 . -3) (undo-tree-id4949 . -3) (undo-tree-id4950 . -3) (undo-tree-id4951 . -3) (undo-tree-id4952 . -3) (undo-tree-id4953 . -3)) (25934 5538 244231 101000) 0 nil])
([nil nil ((3152 . 3153)) nil (25934 5775 396005 408000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1681) (undo-tree-id4004 . -1) 1682) ((1681 . 1682)) (25934 5537 909433 548000) 0 nil])
([nil nil ((4867 . 4883) (#("                " 0 16 (fontified nil)) . 4866) (undo-tree-id5610 . -16) (4865 . 4883) (t 25934 5775 420096 765000)) nil (25934 5856 599488 341000) 0 nil])
([nil nil ((1681 . 1682)) ((#("?" 0 1 (fontified t)) . 1681) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1)) (25934 5537 503546 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5078 . 5079) (nil fontified nil 5078 . 5079) (nil fontified nil 5077 . 5078) (nil fontified nil 5076 . 5077) (nil fontified nil 5075 . 5076) (nil fontified nil 5073 . 5075) (nil fontified nil 5072 . 5073) (nil fontified nil 5066 . 5072) (nil fontified nil 5065 . 5066) (nil fontified nil 5059 . 5065) (nil fontified nil 5058 . 5059) (nil fontified nil 5054 . 5058) (nil fontified nil 5051 . 5054) (nil fontified nil 5050 . 5051) (nil fontified nil 5045 . 5050) (nil fontified nil 5044 . 5045) (nil fontified nil 5042 . 5044) (nil fontified nil 5037 . 5042) (nil fontified nil 5033 . 5037) (nil fontified nil 5032 . 5033) (nil fontified nil 5025 . 5032) (nil fontified nil 5023 . 5025) (nil fontified nil 5022 . 5023) (nil fontified nil 5021 . 5022) (nil fontified nil 5020 . 5021) (nil fontified nil 5009 . 5020) (nil fontified nil 5008 . 5009) (nil fontified nil 5007 . 5008) (nil fontified nil 5006 . 5007) (nil fontified nil 5001 . 5006) (nil fontified nil 5000 . 5001) (nil fontified nil 4993 . 5000) (nil fontified nil 4989 . 4993) (nil fontified nil 4988 . 4989) (nil fontified nil 4987 . 4988) (nil fontified nil 4986 . 4987) (nil fontified nil 4985 . 4986) (nil fontified nil 4984 . 4985) (nil fontified nil 4982 . 4984) (nil fontified nil 4981 . 4982) (nil fontified nil 4975 . 4981) (nil fontified nil 4974 . 4975) (nil fontified nil 4967 . 4974) (nil fontified nil 4963 . 4967) (nil fontified nil 4960 . 4963) (nil fontified nil 4959 . 4960) (nil fontified nil 4954 . 4959) (nil fontified nil 4953 . 4954) (nil fontified nil 4946 . 4953) (nil fontified nil 4942 . 4946) (nil fontified nil 4941 . 4942) (nil fontified nil 4935 . 4941) (nil fontified nil 4934 . 4935) (nil fontified nil 4933 . 4934) (nil fontified nil 4932 . 4933) (nil fontified nil 4931 . 4932) (nil fontified nil 4929 . 4931) (nil fontified nil 4928 . 4929) (nil fontified nil 4922 . 4928) (nil fontified nil 4921 . 4922) (nil fontified nil 4914 . 4921) (nil fontified nil 4910 . 4914) (nil fontified nil 4907 . 4910) (nil fontified nil 4906 . 4907) (nil fontified nil 4901 . 4906) (nil fontified nil 4900 . 4901) (nil fontified nil 4899 . 4900) (nil fontified nil 4898 . 4899) (nil fontified nil 4893 . 4898) (nil fontified nil 4889 . 4893) (nil fontified nil 4888 . 4889) (nil fontified nil 4883 . 4888) (nil fontified nil 4882 . 4883) (nil fontified nil 4880 . 4882) (nil fontified nil 4867 . 4880) (4867 . 5079)) nil (25934 5856 599477 638000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1681) (undo-tree-id3991 . -1) (undo-tree-id3993 . -1) (undo-tree-id3995 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id4000 . -1) (undo-tree-id4002 . -1) 1682) ((1681 . 1682)) (25934 5536 923366 204000) 0 nil])
([nil nil ((#("                rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] + self.DT_TAU[i_pop] * Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])
" 0 13 (fontified t) 13 15 (fontified t) 15 16 (fontified t) 16 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (face font-lock-keyword-face fontified t) 26 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 43 (fontified t) 43 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-2-face) fontified t) 55 61 (fontified t) 61 62 (face font-lock-operator-face fontified t) 62 64 (fontified t) 64 65 (face (rainbow-delimiters-depth-2-face) fontified t) 65 66 (face (rainbow-delimiters-depth-1-face) fontified t) 66 67 (fontified t) 67 68 (face font-lock-operator-face fontified t) 68 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 79 (face font-lock-keyword-face fontified t) 79 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t) 87 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-2-face) fontified t) 93 96 (fontified t) 96 100 (face font-lock-keyword-face fontified t) 100 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-2-face) fontified t) 108 114 (fontified t) 114 115 (face font-lock-operator-face fontified t) 115 117 (fontified t) 117 118 (face (rainbow-delimiters-depth-2-face) fontified t) 118 119 (face (rainbow-delimiters-depth-1-face) fontified t) 119 120 (fontified t) 120 121 (face font-lock-operator-face fontified t) 121 122 (fontified t) 122 126 (face font-lock-keyword-face fontified t) 126 133 (fontified t) 133 134 (face (rainbow-delimiters-depth-1-face) fontified t) 134 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-1-face) fontified t) 140 141 (fontified t) 141 142 (face font-lock-operator-face fontified t) 142 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-1-face) fontified t) 154 155 (face (rainbow-delimiters-depth-1-face) fontified t) 155 156 (face (rainbow-delimiters-depth-1-face) fontified t) 156 158 (fontified t) 158 165 (fontified t) 165 166 (face (rainbow-delimiters-depth-2-face) fontified t) 166 170 (face font-lock-keyword-face fontified t) 170 175 (fontified t) 175 177 (fontified t) 177 178 (face (rainbow-delimiters-depth-3-face) fontified t) 178 183 (fontified t) 183 184 (face (rainbow-delimiters-depth-3-face) fontified t) 184 187 (fontified t) 187 191 (face font-lock-keyword-face fontified t) 191 192 (fontified t) 192 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 205 (fontified t) 205 206 (face font-lock-operator-face fontified t) 206 208 (fontified t) 208 209 (face (rainbow-delimiters-depth-3-face) fontified t) 209 210 (face (rainbow-delimiters-depth-2-face) fontified t) 210 211 (face (rainbow-delimiters-depth-1-face) fontified t) 211 212 (rear-nonsticky t fontified t)) . 4867) (undo-tree-id5489 . -212) (undo-tree-id5490 . -212) (undo-tree-id5491 . -212) (undo-tree-id5492 . -212) (undo-tree-id5493 . -212) (undo-tree-id5494 . -212) (undo-tree-id5495 . -212) (undo-tree-id5496 . -212) (undo-tree-id5497 . -212) (undo-tree-id5498 . -212) (undo-tree-id5499 . -212) (undo-tree-id5500 . -212) (undo-tree-id5501 . -212) (undo-tree-id5502 . -212) (undo-tree-id5503 . -212) (undo-tree-id5504 . -212) (undo-tree-id5505 . -212) (undo-tree-id5506 . -212) (undo-tree-id5507 . -212) (undo-tree-id5508 . -212) (undo-tree-id5509 . -212) (undo-tree-id5510 . -212) (undo-tree-id5511 . -212) (undo-tree-id5512 . -212) (undo-tree-id5513 . -212) (undo-tree-id5514 . -212) (undo-tree-id5515 . -212) (undo-tree-id5516 . -212) (undo-tree-id5517 . -212) (undo-tree-id5518 . -212) (undo-tree-id5519 . -212) (undo-tree-id5520 . -212) (undo-tree-id5521 . -212) (undo-tree-id5522 . -212) (undo-tree-id5523 . -212) (undo-tree-id5524 . -212) (undo-tree-id5525 . -212) (undo-tree-id5526 . -212) (undo-tree-id5527 . -212) (undo-tree-id5528 . -212) (undo-tree-id5529 . -212) (undo-tree-id5530 . -212) (undo-tree-id5531 . -212) (undo-tree-id5532 . -212) (undo-tree-id5533 . -212) (undo-tree-id5534 . -212) (undo-tree-id5535 . -212) (undo-tree-id5536 . -212) (undo-tree-id5537 . -212) (undo-tree-id5538 . -212) (undo-tree-id5539 . -212) (undo-tree-id5540 . -212) (undo-tree-id5541 . -212) (undo-tree-id5542 . -212) (undo-tree-id5543 . -212) (undo-tree-id5544 . -212) (undo-tree-id5545 . -212) (undo-tree-id5546 . -212) (undo-tree-id5547 . -212) (undo-tree-id5548 . -212) (undo-tree-id5549 . -212) (undo-tree-id5550 . -212) (undo-tree-id5551 . -212) (undo-tree-id5552 . -212) (undo-tree-id5553 . -212) (undo-tree-id5554 . -212) (undo-tree-id5555 . -212) (undo-tree-id5556 . -212) (undo-tree-id5557 . -212) (undo-tree-id5558 . -212) (undo-tree-id5559 . -212) (undo-tree-id5560 . -212) (undo-tree-id5561 . -144) (undo-tree-id5562 . -212) (undo-tree-id5563 . -144) (undo-tree-id5564 . -144) (undo-tree-id5565 . -144) (undo-tree-id5566 . -144) (undo-tree-id5567 . -144) (undo-tree-id5568 . -144) (undo-tree-id5569 . -144) (undo-tree-id5570 . -144) (undo-tree-id5571 . -144) (undo-tree-id5572 . -144) (undo-tree-id5573 . -144) (undo-tree-id5574 . -144) (undo-tree-id5575 . -144) (undo-tree-id5576 . -144) (undo-tree-id5577 . -144) (undo-tree-id5578 . -144) (undo-tree-id5579 . -144) (undo-tree-id5580 . -144) (undo-tree-id5581 . -144) (undo-tree-id5582 . -144) (undo-tree-id5583 . -144) (undo-tree-id5584 . -144) (undo-tree-id5585 . -144) (undo-tree-id5586 . -144) (undo-tree-id5587 . -144) (undo-tree-id5588 . -144) (undo-tree-id5589 . -144) (undo-tree-id5590 . -144) (undo-tree-id5591 . -144) (undo-tree-id5592 . -144) (undo-tree-id5593 . -144) (undo-tree-id5594 . -144) (undo-tree-id5595 . -144) (undo-tree-id5596 . -144) (undo-tree-id5597 . -144) (undo-tree-id5598 . -144) (undo-tree-id5599 . -144) (undo-tree-id5600 . -144) (undo-tree-id5601 . -144) (undo-tree-id5602 . -144) (undo-tree-id5603 . -144) (undo-tree-id5604 . -144) (undo-tree-id5605 . -144) (undo-tree-id5606 . -144) (undo-tree-id5607 . -144) (undo-tree-id5608 . -144) (undo-tree-id5609 . -144)) nil (25934 5856 599438 298000) 0 nil])
([nil nil ((1682 . 1691) (t 25933 65188 115553 614000)) ((#("
        " 0 9 (fontified t)) . 1682) (undo-tree-id4833 . -9) (undo-tree-id4834 . -9) (undo-tree-id4835 . -9) (undo-tree-id4836 . -9)) (25934 5536 725687 161000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4866) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) 4867) nil (25934 5856 599069 43000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2214) (2213 . 2214) (2212 . 2214) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2212) (2207 . 2213) (t 25933 65188 815556 907000)) ((#("print(" 0 5 (face font-lock-builtin-face fontified nil) 5 6 (face font-lock-builtin-face fontified nil)) . 2207) (undo-tree-id4030 . -5) (undo-tree-id4031 . -5) (undo-tree-id4032 . -5) (undo-tree-id4033 . -5) (undo-tree-id4034 . -5) (undo-tree-id4035 . -5) (undo-tree-id4036 . -5) (undo-tree-id4037 . -5) (undo-tree-id4038 . -5) (undo-tree-id4039 . -5) (undo-tree-id4040 . -5) (undo-tree-id4041 . -5) (undo-tree-id4042 . -5) (undo-tree-id4043 . -5) (undo-tree-id4044 . -5) (undo-tree-id4045 . -5) (undo-tree-id4046 . -5) (undo-tree-id4047 . -5) (undo-tree-id4048 . -5) (undo-tree-id4049 . -5) (undo-tree-id4050 . -5) (undo-tree-id4051 . -5) (undo-tree-id4052 . -5) (undo-tree-id4053 . -5) (undo-tree-id4054 . -5) (undo-tree-id4055 . -5) (undo-tree-id4056 . -5) (undo-tree-id4057 . -5) (undo-tree-id4058 . -5) (undo-tree-id4059 . -5) (undo-tree-id4060 . -5) (undo-tree-id4061 . -5) (undo-tree-id4062 . -5) (undo-tree-id4063 . -5) (undo-tree-id4064 . -5) (undo-tree-id4065 . -5) (undo-tree-id4066 . -5) (undo-tree-id4067 . -5) (undo-tree-id4068 . -5) (undo-tree-id4069 . -5) (undo-tree-id4070 . -5) (undo-tree-id4071 . -5) (undo-tree-id4072 . -5) (undo-tree-id4073 . -5) (undo-tree-id4074 . -5) (undo-tree-id4075 . -5) (undo-tree-id4076 . -5) (undo-tree-id4077 . -5) (undo-tree-id4078 . -5) (undo-tree-id4079 . -5) (undo-tree-id4080 . -5) (undo-tree-id4081 . -5) (undo-tree-id4082 . -5) (undo-tree-id4083 . -5) (undo-tree-id4084 . -5) (undo-tree-id4085 . -5) (undo-tree-id4086 . -5) (undo-tree-id4087 . -5) (undo-tree-id4088 . -5) (undo-tree-id4089 . -5) (undo-tree-id4090 . -5) (undo-tree-id4091 . -5) (undo-tree-id4092 . -5) (undo-tree-id4093 . -5) (undo-tree-id4094 . -5) (undo-tree-id4095 . -5) (undo-tree-id4096 . -5) (undo-tree-id4097 . -5) (undo-tree-id4098 . -5) (undo-tree-id4099 . -5) (undo-tree-id4100 . -5) (undo-tree-id4101 . -5) (undo-tree-id4102 . -5) (undo-tree-id4103 . -5) (undo-tree-id4104 . -5) (undo-tree-id4105 . -5) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) (undo-tree-id4109 . -5) (undo-tree-id4110 . -5) (undo-tree-id4111 . -5) (undo-tree-id4112 . -5) (undo-tree-id4113 . -5) (undo-tree-id4114 . -5) (undo-tree-id4115 . -5) (undo-tree-id4116 . -5) (undo-tree-id4117 . -5) (undo-tree-id4118 . -5) (undo-tree-id4119 . -5) (undo-tree-id4120 . -5) (undo-tree-id4121 . -5) (undo-tree-id4122 . -5) (undo-tree-id4123 . -5) (undo-tree-id4124 . -5) (undo-tree-id4125 . -5) (undo-tree-id4126 . -5) (undo-tree-id4127 . -5) (undo-tree-id4128 . -5) (undo-tree-id4129 . -5) (undo-tree-id4130 . -5) (undo-tree-id4131 . -5) (undo-tree-id4132 . -5) (undo-tree-id4133 . -5) (undo-tree-id4134 . -5) (undo-tree-id4135 . -5) (undo-tree-id4136 . -5) (undo-tree-id4137 . -5) (undo-tree-id4138 . -5) (undo-tree-id4139 . -5) (undo-tree-id4140 . -5) (undo-tree-id4141 . -5) (undo-tree-id4142 . -5) (undo-tree-id4143 . -5) (undo-tree-id4144 . -5) (undo-tree-id4145 . -5) (undo-tree-id4146 . -5) (undo-tree-id4147 . -5) (undo-tree-id4148 . -5) (undo-tree-id4149 . -5) (undo-tree-id4150 . -5) (undo-tree-id4151 . -5) (undo-tree-id4152 . -5) (undo-tree-id4153 . -5) (undo-tree-id4154 . -5) (undo-tree-id4155 . -5) (undo-tree-id4156 . -5) (undo-tree-id4157 . -5) (undo-tree-id4158 . -5) (undo-tree-id4159 . -5) (undo-tree-id4160 . -5) (undo-tree-id4161 . -5) (undo-tree-id4162 . -5) (undo-tree-id4163 . -5) (undo-tree-id4164 . -5) (undo-tree-id4165 . -5) (undo-tree-id4166 . -5) (undo-tree-id4167 . -5) (undo-tree-id4168 . -5) (undo-tree-id4169 . -5) (undo-tree-id4170 . -5) (undo-tree-id4171 . -5) (undo-tree-id4172 . -5) (undo-tree-id4173 . -5) (undo-tree-id4174 . -5) (undo-tree-id4175 . -5) (undo-tree-id4176 . -5) (undo-tree-id4177 . -5) (undo-tree-id4178 . -5) (undo-tree-id4179 . -5) (undo-tree-id4180 . -5) (undo-tree-id4181 . -5) (undo-tree-id4182 . -5) (undo-tree-id4183 . -5) (undo-tree-id4184 . -5) (undo-tree-id4185 . -5) (undo-tree-id4186 . -5) (undo-tree-id4187 . -5) (undo-tree-id4188 . -5) (undo-tree-id4189 . -5) (undo-tree-id4190 . -5) (undo-tree-id4191 . -5) (undo-tree-id4192 . -5) (undo-tree-id4193 . -5) (undo-tree-id4194 . -5) (undo-tree-id4195 . -5) (undo-tree-id4196 . -5) (undo-tree-id4197 . -5) (undo-tree-id4198 . -5) (undo-tree-id4199 . -5) (undo-tree-id4200 . -5) (undo-tree-id4201 . -5) (undo-tree-id4202 . -5) (undo-tree-id4203 . -5) (undo-tree-id4204 . -5) (undo-tree-id4205 . -5) (undo-tree-id4206 . -5) (undo-tree-id4207 . -5) (undo-tree-id4208 . -5) (undo-tree-id4209 . -5) (undo-tree-id4210 . -5) (undo-tree-id4211 . -5) (undo-tree-id4212 . -5) (undo-tree-id4213 . -5) (undo-tree-id4214 . -5) (undo-tree-id4215 . -5) (undo-tree-id4216 . -5) (undo-tree-id4217 . -5) (undo-tree-id4218 . -5) (undo-tree-id4219 . -5) (undo-tree-id4220 . -5) (undo-tree-id4221 . -5) (undo-tree-id4222 . -5) (undo-tree-id4223 . -5) (undo-tree-id4224 . -5) (undo-tree-id4225 . -5) (undo-tree-id4226 . -5) (undo-tree-id4227 . -5) (undo-tree-id4228 . -5) (undo-tree-id4229 . -5) (undo-tree-id4230 . -5) (undo-tree-id4231 . -5) (undo-tree-id4232 . -5) (undo-tree-id4233 . -5) (undo-tree-id4234 . -5) (undo-tree-id4235 . -5) (undo-tree-id4236 . -5) (undo-tree-id4237 . -5) (undo-tree-id4238 . -5) (undo-tree-id4239 . -5) (undo-tree-id4240 . -5) (undo-tree-id4241 . -5) (undo-tree-id4242 . -5) (undo-tree-id4243 . -5) (undo-tree-id4244 . -5) (undo-tree-id4245 . -5) (undo-tree-id4246 . -5) (undo-tree-id4247 . -5) (undo-tree-id4248 . -5) (undo-tree-id4249 . -5) (undo-tree-id4250 . -5) (undo-tree-id4251 . -5) (undo-tree-id4252 . -5) (undo-tree-id4253 . -5) (undo-tree-id4254 . -5) (undo-tree-id4255 . -5) (undo-tree-id4256 . -5) (undo-tree-id4257 . -5) (undo-tree-id4258 . -5) (undo-tree-id4259 . -5) (undo-tree-id4260 . -5) (undo-tree-id4261 . -5) (undo-tree-id4262 . -5) (undo-tree-id4263 . -5) (undo-tree-id4264 . -5) (undo-tree-id4265 . -5) (undo-tree-id4266 . -5) (undo-tree-id4267 . -5) (undo-tree-id4268 . -5) (undo-tree-id4269 . -5) (undo-tree-id4270 . -5) (undo-tree-id4271 . -5) (undo-tree-id4272 . -5) (undo-tree-id4273 . -5) (undo-tree-id4274 . -5) (undo-tree-id4275 . -5) (undo-tree-id4276 . -5) (undo-tree-id4277 . -5) (undo-tree-id4278 . -5) (undo-tree-id4279 . -5) (undo-tree-id4280 . -5) (undo-tree-id4281 . -5) (undo-tree-id4282 . -5) (undo-tree-id4283 . -5) (undo-tree-id4284 . -5) (undo-tree-id4285 . -5) (undo-tree-id4286 . -5) (undo-tree-id4287 . -5) (undo-tree-id4288 . -5) (undo-tree-id4289 . -5) (undo-tree-id4290 . -5) (undo-tree-id4291 . -5) (undo-tree-id4292 . -5) (undo-tree-id4293 . -5) (undo-tree-id4294 . -5) (undo-tree-id4295 . -5) (undo-tree-id4296 . -5) (undo-tree-id4297 . -5) (undo-tree-id4298 . -5) (undo-tree-id4299 . -5) (undo-tree-id4300 . -5) (undo-tree-id4301 . -5) (undo-tree-id4302 . -5) (undo-tree-id4303 . -5) (undo-tree-id4304 . -5) (undo-tree-id4305 . -5) (undo-tree-id4306 . -5) (undo-tree-id4307 . -5) (undo-tree-id4308 . -5) (undo-tree-id4309 . -5) (undo-tree-id4310 . -5) (undo-tree-id4311 . -5) (undo-tree-id4312 . -5) (undo-tree-id4313 . -5) (undo-tree-id4314 . -5) (undo-tree-id4315 . -5) (undo-tree-id4316 . -5) (undo-tree-id4317 . -5) (undo-tree-id4318 . -5) (undo-tree-id4319 . -5) (undo-tree-id4320 . -5) (undo-tree-id4321 . -5) (undo-tree-id4322 . -5) (undo-tree-id4323 . -5) (undo-tree-id4324 . -5) (undo-tree-id4325 . -5) (undo-tree-id4326 . -5) (undo-tree-id4327 . -5) (undo-tree-id4328 . -5) (undo-tree-id4329 . -5) (undo-tree-id4330 . -5) (undo-tree-id4331 . -5) (undo-tree-id4332 . -5) (undo-tree-id4333 . -5) (undo-tree-id4334 . -5) (undo-tree-id4335 . -5) (undo-tree-id4336 . -5) (undo-tree-id4337 . -5) (undo-tree-id4338 . -5) (undo-tree-id4339 . -5) (undo-tree-id4340 . -5) (undo-tree-id4341 . -5) (undo-tree-id4342 . -5) (undo-tree-id4343 . -5) (undo-tree-id4344 . -5) (undo-tree-id4345 . -5) (undo-tree-id4346 . -5) (undo-tree-id4347 . -5) (2212 . 2213) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2212) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2213) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (2214 . 2215)) (25934 5536 533797 963000) 0 nil])
([nil nil ((apply -2 5108 5215 undo--wrap-and-run-primitive-undo 5108 5215 ((5116 . 5118) 5161))) nil (25934 5872 922551 765000) 0 nil])
([nil nil ((2213 . 2221)) ((#("self.Wab" 0 4 (face font-lock-keyword-face fontified t) 4 8 (fontified t)) . 2213)) (25934 5536 320854 660000) 0 nil])
([nil nil ((apply -2 5163 5218 undo--wrap-and-run-primitive-undo 5163 5218 ((5171 . 5173) 5215))) nil (25934 5872 922549 422000) 0 nil])
([nil nil ((2222 . 2231)) ((#("
        " 0 9 (fontified t)) . 2222) (undo-tree-id4019 . -9) (undo-tree-id4020 . -9) (undo-tree-id4021 . -9) (undo-tree-id4022 . -9) (undo-tree-id4023 . -9) (undo-tree-id4024 . -9) (undo-tree-id4025 . -9) (undo-tree-id4026 . -9) (undo-tree-id4027 . -9) (undo-tree-id4028 . -9) (undo-tree-id4029 . -9) (t 25933 65244 959842 566000)) (25934 5535 117448 922000) 0 nil])
([nil nil ((5217 . 5225)) nil (25934 5872 922540 867000) 0 nil])
nil
([nil nil ((#("                self.Wab[i_pop][j_pop] = self.Wab[i_pop][j_pop]
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 41 (fontified t) 41 45 (face font-lock-keyword-face fontified t) 45 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 64 (fontified t)) . -1977) (undo-tree-id5683 . -63) (undo-tree-id5684 . -63) (undo-tree-id5685 . -63) (undo-tree-id5686 . -63) (undo-tree-id5687 . -63) (undo-tree-id5688 . -63) (undo-tree-id5689 . -63) (undo-tree-id5690 . -63) (undo-tree-id5691 . -63) (undo-tree-id5692 . -63) (undo-tree-id5693 . -63) (undo-tree-id5694 . -63) (undo-tree-id5695 . -63) (undo-tree-id5696 . -63) (undo-tree-id5697 . -63) (undo-tree-id5698 . -63) (undo-tree-id5699 . -63) (undo-tree-id5700 . -63) (undo-tree-id5701 . -63) (undo-tree-id5702 . -63) (undo-tree-id5703 . -63) (undo-tree-id5704 . -63) (undo-tree-id5705 . -63) (undo-tree-id5706 . -63) (undo-tree-id5707 . -63) (undo-tree-id5708 . -63) (undo-tree-id5709 . -63) (undo-tree-id5710 . -63) (undo-tree-id5711 . -63) (undo-tree-id5712 . -63) (undo-tree-id5713 . -63) (undo-tree-id5714 . -63) (undo-tree-id5715 . -63) (undo-tree-id5716 . -63) (undo-tree-id5717 . -63) (undo-tree-id5718 . -63) (undo-tree-id5719 . -63) (undo-tree-id5720 . -63) (undo-tree-id5721 . -63) (undo-tree-id5722 . -63) (undo-tree-id5723 . -63) (undo-tree-id5724 . -63) (undo-tree-id5725 . -63) (undo-tree-id5726 . -63) (undo-tree-id5727 . -63) (undo-tree-id5728 . -63) (undo-tree-id5729 . -63) (undo-tree-id5730 . -63) (undo-tree-id5731 . -63) (undo-tree-id5732 . -63) (undo-tree-id5733 . -63) (undo-tree-id5734 . -63) (undo-tree-id5735 . -63) (undo-tree-id5736 . -63) (undo-tree-id5737 . -63) (undo-tree-id5738 . -63) (undo-tree-id5739 . -63) (undo-tree-id5740 . -63) (undo-tree-id5741 . -63) (undo-tree-id5742 . -63) (undo-tree-id5743 . -63) (undo-tree-id5744 . -63) (undo-tree-id5745 . -63) (undo-tree-id5746 . -63) (undo-tree-id5747 . -63) (undo-tree-id5748 . -63) (undo-tree-id5749 . -63) (undo-tree-id5750 . -63) (undo-tree-id5751 . -63) (undo-tree-id5752 . -63) (undo-tree-id5753 . -63) (undo-tree-id5754 . -63) (undo-tree-id5755 . -63) (undo-tree-id5756 . -63) (undo-tree-id5757 . -63) (undo-tree-id5758 . -63) (undo-tree-id5759 . -63) (undo-tree-id5760 . -63) (undo-tree-id5761 . -63) (undo-tree-id5762 . -63) (undo-tree-id5763 . -63) (undo-tree-id5764 . -63) (undo-tree-id5765 . -63) (undo-tree-id5766 . -63) (undo-tree-id5767 . -63) (undo-tree-id5768 . -63) (undo-tree-id5769 . -63) (undo-tree-id5770 . -63) (undo-tree-id5771 . -63) (undo-tree-id5772 . -63) (undo-tree-id5773 . -63) (undo-tree-id5774 . -63) (undo-tree-id5775 . -63) (undo-tree-id5776 . -63) (undo-tree-id5777 . -63) (undo-tree-id5778 . -63) (undo-tree-id5779 . -63) (undo-tree-id5780 . -63) (undo-tree-id5781 . -63) (undo-tree-id5782 . -63) (undo-tree-id5783 . -63) (undo-tree-id5784 . -63) (undo-tree-id5785 . -63) (undo-tree-id5786 . -63) (undo-tree-id5787 . -63) (undo-tree-id5788 . -63) (undo-tree-id5789 . -63) (undo-tree-id5790 . -64) (undo-tree-id5791 . -64) (undo-tree-id5792 . -64) (undo-tree-id5793 . -64) (undo-tree-id5794 . -64) (undo-tree-id5795 . -64) (undo-tree-id5796 . -64) (undo-tree-id5797 . -64) (undo-tree-id5798 . -64) (undo-tree-id5799 . -64) (undo-tree-id5800 . -64) (undo-tree-id5801 . -64) (undo-tree-id5802 . -64) (undo-tree-id5803 . -64) (undo-tree-id5804 . -64) (undo-tree-id5805 . -64) (undo-tree-id5806 . -64) (undo-tree-id5807 . -64) (undo-tree-id5808 . -64) (undo-tree-id5809 . -64) (undo-tree-id5810 . -64) (undo-tree-id5811 . -64) (undo-tree-id5812 . -64) (undo-tree-id5813 . -64) (undo-tree-id5814 . -64) (undo-tree-id5815 . -64) (undo-tree-id5816 . -64) (undo-tree-id5817 . -64) (undo-tree-id5818 . -64) (undo-tree-id5819 . -64) (undo-tree-id5820 . -64) (undo-tree-id5821 . -64) (undo-tree-id5822 . -64) (undo-tree-id5823 . -64) (undo-tree-id5824 . -64) (undo-tree-id5825 . -64) (undo-tree-id5826 . -64) (undo-tree-id5827 . -64) (undo-tree-id5828 . -64) (undo-tree-id5829 . -64) (undo-tree-id5830 . -64) (undo-tree-id5831 . -64) (undo-tree-id5832 . -64) (undo-tree-id5833 . -64) (undo-tree-id5834 . -64) (undo-tree-id5835 . -64) (undo-tree-id5836 . -64) (undo-tree-id5837 . -64) (undo-tree-id5838 . -64) (undo-tree-id5839 . -64) (undo-tree-id5840 . -64) (undo-tree-id5841 . -64) (undo-tree-id5842 . -64) (undo-tree-id5843 . -64) (undo-tree-id5844 . -64) (undo-tree-id5845 . -64) (undo-tree-id5846 . -64) (undo-tree-id5847 . -64) (undo-tree-id5848 . -64) (undo-tree-id5849 . -64) (undo-tree-id5850 . -64) (undo-tree-id5851 . -64) (undo-tree-id5852 . -64) (undo-tree-id5853 . -64) (undo-tree-id5854 . -64) (undo-tree-id5855 . -64) (undo-tree-id5856 . -64) (undo-tree-id5857 . -64) (undo-tree-id5858 . -64) (undo-tree-id5859 . -64) (undo-tree-id5860 . -64) (undo-tree-id5861 . -64) (undo-tree-id5862 . -64) (undo-tree-id5863 . -64) (undo-tree-id5864 . -64) (undo-tree-id5865 . -64) (undo-tree-id5866 . -64) (undo-tree-id5867 . -64) (undo-tree-id5868 . -64) (undo-tree-id5869 . -64) (undo-tree-id5870 . -64) (undo-tree-id5871 . -64) (undo-tree-id5872 . -64) (undo-tree-id5873 . -64) (undo-tree-id5874 . -64) (undo-tree-id5875 . -64) (undo-tree-id5876 . -64) (undo-tree-id5877 . -64) (undo-tree-id5878 . -64) (undo-tree-id5879 . -64) (undo-tree-id5880 . -64) (undo-tree-id5881 . -64) 2041 (t 25934 5872 952336 848000)) nil (25934 5913 114241 816000) 0 nil])
([nil nil ((1977 . 1993) (#("        " 0 8 (fontified t)) . 1977) (undo-tree-id5682 . -8)) nil (25934 5913 114050 207000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -1989) (undo-tree-id5677 . -4) (undo-tree-id5678 . -4) (undo-tree-id5679 . -4) (undo-tree-id5680 . -4) (undo-tree-id5681 . -4) 1993) nil (25934 5913 114047 597000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1985) (undo-tree-id5611 . -4) (undo-tree-id5612 . -4) (undo-tree-id5613 . -4) (undo-tree-id5614 . -4) (undo-tree-id5615 . -4) (undo-tree-id5616 . -4) (undo-tree-id5617 . -4) (undo-tree-id5618 . -4) (undo-tree-id5619 . -4) (undo-tree-id5620 . -4) (undo-tree-id5621 . -4) (undo-tree-id5622 . -4) (undo-tree-id5623 . -4) (undo-tree-id5624 . -4) (undo-tree-id5625 . -4) (undo-tree-id5626 . -4) (undo-tree-id5627 . -4) (undo-tree-id5628 . -4) (undo-tree-id5629 . -4) (undo-tree-id5630 . -4) (undo-tree-id5631 . -4) (undo-tree-id5632 . -4) (undo-tree-id5633 . -4) (undo-tree-id5634 . -4) (undo-tree-id5635 . -4) (undo-tree-id5636 . -4) (undo-tree-id5637 . -4) (undo-tree-id5638 . -4) (undo-tree-id5639 . -4) (undo-tree-id5640 . -4) (undo-tree-id5641 . -4) (undo-tree-id5642 . -4) (undo-tree-id5643 . -4) (undo-tree-id5644 . -4) (undo-tree-id5645 . -4) (undo-tree-id5646 . -4) (undo-tree-id5647 . -4) (undo-tree-id5648 . -4) (undo-tree-id5649 . -4) (undo-tree-id5650 . -4) (undo-tree-id5651 . -4) (undo-tree-id5652 . -4) (undo-tree-id5653 . -4) (undo-tree-id5654 . -4) (undo-tree-id5655 . -4) (undo-tree-id5656 . -4) (undo-tree-id5657 . -4) (undo-tree-id5658 . -4) (undo-tree-id5659 . -4) (undo-tree-id5660 . -4) (undo-tree-id5661 . -4) (undo-tree-id5662 . -4) (undo-tree-id5663 . -4) (undo-tree-id5664 . -4) (undo-tree-id5665 . -4) (undo-tree-id5666 . -4) (undo-tree-id5667 . -4) (undo-tree-id5668 . -4) (undo-tree-id5669 . -4) (undo-tree-id5670 . -4) (undo-tree-id5671 . -4) (undo-tree-id5672 . -4) (undo-tree-id5673 . -4) (undo-tree-id5674 . -4) (undo-tree-id5675 . -4) (undo-tree-id5676 . -4) 1989) nil (25934 5913 114036 604000) 0 nil])
([nil nil ((apply -2 1593 1662 undo--wrap-and-run-primitive-undo 1593 1662 ((1601 . 1603) 1659))) nil (25934 5964 380334 602000) 0 nil])
([nil nil ((1661 . 1670)) nil (25934 5964 380333 339000) 0 nil])
([nil nil ((1661 . 1669)) nil (25934 5964 380332 261000) 0 nil])
([nil nil ((1662 . 1670) (#("        " 0 8 (fontified nil)) . 1661) (undo-tree-id5886 . -8) (1669 . 1670)) nil (25934 5964 380330 627000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1661) (undo-tree-id5885 . -1) 1662) nil (25934 5964 380327 213000) 0 nil])
([nil nil ((1669 . 1675)) nil (25934 5964 380325 124000) 0 nil])
([nil nil ((#(">" 0 1 (face font-lock-operator-face fontified t)) . -1674) (undo-tree-id5884 . -1) 1675) nil (25934 5964 380323 355000) 0 nil])
([nil nil ((1674 . 1677)) nil (25934 5964 380320 977000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1676) (undo-tree-id5883 . -1) 1677) nil (25934 5964 380319 319000) 0 nil])
([nil nil ((1676 . 1680)) nil (25934 5964 380316 547000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1682) (1681 . 1682) (1680 . 1682) (#("[" 0 1 (fontified nil)) . -1680) (1680 . 1681)) nil (25934 5964 380314 896000) 0 nil])
([nil nil ((#("        self.Wab = []
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 22 (fontified t)) . -1661) (undo-tree-id5882 . -22) 1683) nil (25934 5964 380312 379000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1601) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1601)) nil (25934 5964 380302 326000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1614) (#("n" 0 1 (fontified t)) . 1614) (#("o" 0 1 (fontified t)) . 1614) (#("N" 0 1 (face font-lock-constant-face fontified t)) . 1614)) nil (25934 5964 380299 653000) 0 nil])
([nil nil ((1614 . 1615)) nil (25934 5964 380293 210000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1614) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) 1615 (t 25934 5964 402332 788000)) nil (25934 5977 625699 11000) 0 nil])
([nil nil ((1614 . 1618)) nil (25934 5992 462750 70000) 0 nil])
([nil nil ((2845 . 2846) (t 25934 5977 650064 591000)) nil (25934 5994 814862 163000) 0 nil] [nil nil ((#("                r_pres = r_pres.unsqueeze(0)
" 0 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t gptel response) 17 22 (face font-lock-variable-name-face fontified t gptel response) 22 23 (fontified t gptel response) 23 24 (face font-lock-operator-face fontified t gptel response) 24 41 (fontified t gptel response) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t gptel response) 42 43 (fontified t gptel response) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t gptel response) 44 45 (fontified t)) . -2845) (undo-tree-id5975 . -45) (undo-tree-id5976 . -45) (undo-tree-id5977 . -45) (undo-tree-id5978 . -45) (undo-tree-id5979 . -45) (undo-tree-id5980 . -16) (undo-tree-id5981 . -16) (undo-tree-id5982 . -16) (undo-tree-id5983 . -16) (undo-tree-id5984 . -16) (undo-tree-id5985 . -16) (undo-tree-id5986 . -16) (undo-tree-id5987 . -16) (undo-tree-id5988 . -16) (undo-tree-id5989 . -16) (undo-tree-id5990 . -16) (undo-tree-id5991 . -16) (undo-tree-id5992 . -16) (undo-tree-id5993 . -16) (undo-tree-id5994 . -16) (undo-tree-id5995 . -16) (undo-tree-id5996 . -16) (undo-tree-id5997 . -16) (undo-tree-id5998 . -16) (undo-tree-id5999 . -16) (undo-tree-id6000 . -16) (undo-tree-id6001 . -16) (undo-tree-id6002 . -16) (undo-tree-id6003 . -16) (undo-tree-id6004 . -16) (undo-tree-id6005 . -16) (undo-tree-id6006 . -16) (undo-tree-id6007 . -16) (undo-tree-id6008 . -16) (undo-tree-id6009 . -16) (undo-tree-id6010 . -16) (undo-tree-id6011 . -16) (undo-tree-id6012 . -16) (undo-tree-id6013 . -16) (undo-tree-id6014 . -16) (undo-tree-id6015 . -16) (undo-tree-id6016 . -16) (undo-tree-id6017 . -16) (undo-tree-id6018 . -16) (undo-tree-id6019 . -16) (undo-tree-id6020 . -16) (undo-tree-id6021 . -16) (undo-tree-id6022 . -16) (undo-tree-id6023 . -16) (undo-tree-id6024 . -16) (undo-tree-id6025 . -16) (undo-tree-id6026 . -16) (undo-tree-id6027 . -16) (undo-tree-id6028 . -16) (undo-tree-id6029 . -16) (undo-tree-id6030 . -16) (undo-tree-id6031 . -16) (undo-tree-id6032 . -16) (undo-tree-id6033 . -16) (undo-tree-id6034 . -16) (undo-tree-id6035 . -16) (undo-tree-id6036 . -16) (undo-tree-id6037 . -16) (undo-tree-id6038 . -16) (undo-tree-id6039 . -16) (undo-tree-id6040 . -16) (undo-tree-id6041 . -16) (undo-tree-id6042 . -16) (undo-tree-id6043 . -16) (undo-tree-id6044 . -16) (undo-tree-id6045 . -16) (undo-tree-id6046 . -16) (undo-tree-id6047 . -16) (undo-tree-id6048 . -16) (undo-tree-id6049 . -16) (undo-tree-id6050 . -16) (undo-tree-id6051 . -16) (undo-tree-id6052 . -16) (undo-tree-id6053 . -16) (undo-tree-id6054 . -16) (undo-tree-id6055 . -16) (undo-tree-id6056 . -16) (undo-tree-id6057 . -16) (undo-tree-id6058 . -16) (undo-tree-id6059 . -16) (undo-tree-id6060 . -16) (undo-tree-id6061 . -16) (undo-tree-id6062 . -16) (undo-tree-id6063 . -16) (undo-tree-id6064 . -16) (undo-tree-id6065 . -16) (undo-tree-id6066 . -16) (undo-tree-id6067 . -16) (undo-tree-id6068 . -16) (undo-tree-id6069 . -16) (undo-tree-id6070 . -16) (undo-tree-id6071 . -45) (undo-tree-id6072 . -45) (undo-tree-id6073 . -45) (undo-tree-id6074 . -45) (undo-tree-id6075 . -45) (undo-tree-id6076 . -45) (undo-tree-id6077 . -45) (undo-tree-id6078 . -45) (undo-tree-id6079 . -45) (undo-tree-id6080 . -45) (undo-tree-id6081 . -45) (undo-tree-id6082 . -45) (undo-tree-id6083 . -45) (undo-tree-id6084 . -45) (undo-tree-id6085 . -45) (undo-tree-id6086 . -45) (undo-tree-id6087 . -45) (undo-tree-id6088 . -45) (undo-tree-id6089 . -45) (undo-tree-id6090 . -45) (undo-tree-id6091 . -45) (undo-tree-id6092 . -45) (undo-tree-id6093 . -45) (undo-tree-id6094 . -45) (undo-tree-id6095 . -45) (undo-tree-id6096 . -45) (undo-tree-id6097 . -45) (undo-tree-id6098 . -45) (undo-tree-id6099 . -45) (undo-tree-id6100 . -45) (undo-tree-id6101 . -45) (undo-tree-id6102 . -45) (undo-tree-id6103 . -45) (undo-tree-id6104 . -45) 2890 (t 25934 5977 650064 591000)) ((2845 . 2890)) (25934 5992 461575 175000) 0 nil])
([nil nil ((2862 . 2864)) nil (25934 6066 322820 315000) 0 nil])
nil
([nil nil ((2845 . 2861) (t 25934 5994 847618 982000)) nil (25934 6094 604439 547000) 0 nil] [nil nil ((3130 . 3131) (t 25934 5994 847618 982000)) ((#("
" 0 1 (fontified t)) . 3130)) (25934 6066 321927 74000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2878) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2878) (t 25934 6094 629967 752000)) nil (25934 6147 721890 94000) 0 nil])
nil
([nil nil ((apply 4 5069 5174 undo--wrap-and-run-primitive-undo 5069 5174 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5130) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -5077) 5178))) nil (25934 6181 895881 180000) 0 nil])
([nil nil ((15457 . 15458) (t 25934 6181 943087 447000)) nil (25934 6290 690220 393000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -15457) (undo-tree-id6162 . -1) 15458) nil (25934 6290 690218 313000) 0 nil])
([nil nil ((8320 . 8331)) nil (25934 6290 690215 620000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8330) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) 8331) nil (25934 6290 690212 381000) 0 nil])
([nil nil ((8331 . 8333) (#("(" 0 1 (fontified nil)) . -8331) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (8330 . 8332)) nil (25934 6290 690171 919000) 0 nil])
([nil nil ((8336 . 8337)) nil (25934 6290 690167 130000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8332) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) 8333) nil (25934 6290 690159 946000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -8326) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) 8327 (t 25934 6290 736408 5000)) nil (25934 6301 137248 79000) 0 nil])
([nil nil ((8326 . 8327)) nil (25934 6301 137181 893000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-builtin-face fontified t)) . -8329) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) 8330 (t 25934 6301 162629 544000)) nil (25934 6312 531702 940000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -8326) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (#("l" 0 1 (fontified t)) . -8327) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (#("o" 0 1 (fontified t)) . -8328) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) 8329) nil (25934 6312 531572 825000) 0 nil])
([nil nil ((8327 . 8332)) nil (25934 6312 530678 564000) 0 nil])
([nil nil ((8336 . 8345) (t 25934 6312 557073 753000)) nil (25934 6348 898063 793000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8343) (undo-tree-id6617 . -1) 8344) nil (25934 6348 898060 659000) 0 nil])
([nil nil ((8344 . 8351)) nil (25934 6348 898055 123000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -8350) (undo-tree-id6616 . -1) 8351) nil (25934 6348 898052 74000) 0 nil])
([nil nil ((8350 . 8361)) nil (25934 6348 898046 369000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -8360) (undo-tree-id6615 . -1) 8361) nil (25934 6348 898043 305000) 0 nil])
([nil nil ((8360 . 8363)) nil (25934 6348 898035 482000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8362) (undo-tree-id6614 . -1) 8363) nil (25934 6348 898031 236000) 0 nil])
([nil nil ((8362 . 8363)) nil (25934 6348 897973 510000) 0 nil])
([nil nil ((8363 . 8374)) nil (25934 6348 897960 199000) 0 nil])
([nil nil ((12804 . 12809) (t 25934 6348 936962 641000)) nil (25934 6575 891435 297000) 0 nil])
([nil nil ((12816 . 12818) (#("(" 0 1 (fontified nil)) . -12816) (12809 . 12817)) nil (25934 6575 891434 52000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 12817)) nil (25934 6575 891432 868000) 0 nil])
([nil nil ((12846 . 12847)) nil (25934 6575 891432 248000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -12846) (undo-tree-id6649 . -1) 12847) nil (25934 6575 891431 123000) 0 nil])
([nil nil ((12846 . 12847)) nil (25934 6575 891428 981000) 0 nil])
([nil nil ((12659 . 12672)) nil (25934 6575 891428 322000) 0 nil])
([nil nil ((12672 . 12679)) nil (25934 6575 891427 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12791 . 12792) (nil fontified nil 12785 . 12792) (nil fontified nil 12781 . 12785) (nil fontified nil 12780 . 12781) (nil fontified nil 12772 . 12780) (12772 . 12792)) nil (25934 6575 891426 171000) 0 nil])
([nil nil ((12887 . 12888)) nil (25934 6575 891424 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12907 . 12908) (nil fontified nil 12901 . 12908) (nil fontified nil 12897 . 12901) (nil fontified nil 12896 . 12897) (nil fontified nil 12888 . 12896) (12888 . 12908)) nil (25934 6575 891423 95000) 0 nil])
([nil nil ((12908 . 12909)) nil (25934 6575 891421 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12904 . 12905) (nil fontified nil 12904 . 12905) (nil fontified nil 12898 . 12904) (nil fontified nil 12894 . 12898) (nil fontified nil 12893 . 12894) (nil fontified nil 12888 . 12893) (12888 . 12905)) nil (25934 6575 891419 740000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 12905) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1)) nil (25934 6575 891413 556000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12709 . 12710) (nil fontified nil 12709 . 12710) (nil fontified nil 12708 . 12709) (nil fontified nil 12702 . 12708) (nil fontified nil 12698 . 12702) (nil fontified nil 12690 . 12698) (nil fontified nil 12686 . 12690) (nil fontified nil 12685 . 12686) (nil fontified nil 12680 . 12685) (nil fontified nil 12679 . 12680) (nil fontified nil 12672 . 12679) (nil fontified nil 12668 . 12672) (nil fontified nil 12667 . 12668) (nil fontified nil 12653 . 12667) (nil fontified nil 12649 . 12653) (nil fontified nil 12648 . 12649) (nil fontified nil 12635 . 12648) (nil fontified nil 12631 . 12635) (nil fontified nil 12630 . 12631) (nil fontified nil 12617 . 12630) (nil fontified nil 12616 . 12617) (nil fontified nil 12615 . 12616) (nil fontified nil 12610 . 12615) (nil fontified nil 12609 . 12610) (nil fontified nil 12605 . 12609) (nil fontified nil 12597 . 12605) (12597 . 12710) (t 25934 6575 915872 264000)) nil (25934 6617 106957 125000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -12637) (undo-tree-id6661 . -1) (#("G" 0 1 (fontified t)) . -12638) (undo-tree-id6662 . -1) (#("M" 0 1 (fontified t)) . -12639) (undo-tree-id6663 . -1) (#("A" 0 1 (fontified t)) . -12640) (undo-tree-id6664 . -1) 12641) nil (25934 6617 106951 543000) 0 nil])
([nil nil ((12637 . 12645)) nil (25934 6617 106946 462000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . 12611) (#("M" 0 1 (face font-lock-variable-name-face fontified t)) . 12611) (#("G" 0 1 (face font-lock-variable-name-face fontified t)) . 12611) (#("I" 0 1 (face font-lock-variable-name-face fontified t)) . 12611)) nil (25934 6617 106945 88000) 0 nil])
([nil nil ((12611 . 12616)) nil (25934 6617 106944 127000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-variable-name-face fontified t)) . -12615) (undo-tree-id6660 . -1) 12616) nil (25934 6617 106943 310000) 0 nil])
([nil nil ((12615 . 12619)) nil (25934 6617 106941 437000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -12657) (undo-tree-id6650 . -1) (#("e" 0 1 (fontified t)) . -12658) (undo-tree-id6651 . -1) (#("l" 0 1 (fontified t)) . -12659) (undo-tree-id6652 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12660) (undo-tree-id6653 . -1) (#("." 0 1 (fontified t)) . -12661) (undo-tree-id6654 . -1) (#("F" 0 1 (fontified t)) . -12662) (undo-tree-id6655 . -1) (#("L" 0 1 (fontified nil)) . -12663) (undo-tree-id6656 . -1) (#("O" 0 1 (fontified t)) . -12664) (undo-tree-id6657 . -1) (#("A" 0 1 (fontified t)) . -12665) (undo-tree-id6658 . -1) (#("T" 0 1 (fontified t)) . -12666) (undo-tree-id6659 . -1) 12667) nil (25934 6617 106937 897000) 0 nil])
([nil nil ((12657 . 12666)) nil (25934 6617 106917 970000) 0 nil])
([nil nil ((apply -2 12515 12719 undo--wrap-and-run-primitive-undo 12515 12719 ((12523 . 12525) 12515))) nil (25934 6617 106912 581000) 0 nil])
([nil nil ((12658 . 12659) (t 25934 6617 129004 884000)) nil (25934 6652 449051 560000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -12658) (undo-tree-id6778 . -1) 12659) nil (25934 6652 449050 169000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -12665) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -12666) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) 12667) nil (25934 6652 449045 302000) 0 nil])
([nil nil ((12665 . 12667)) nil (25934 6652 448684 680000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -12666) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) 12667) nil (25934 6652 448682 453000) 0 nil])
([nil nil ((12667 . 12668)) nil (25934 6652 448646 311000) 0 nil])
([nil nil ((12668 . 12671) (t 25934 6652 477138 510000)) nil (25934 6661 488267 264000) 0 nil])
([nil nil ((apply 2 12515 12597 undo--wrap-and-run-primitive-undo 12515 12597 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -12523) 12515))) nil (25934 6672 218459 733000) 0 nil])
([nil nil ((apply -2 12597 12835 undo--wrap-and-run-primitive-undo 12597 12835 ((12605 . 12607) 12720))) nil (25934 6672 218454 393000) 0 nil])
([nil nil ((#("        # self.STRUCTURE = torch.tensor(self.STRUCTURE, dtype=torch.string, device=self.device).view(self.N_POP, self.N_POP)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t) 15 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t) 26 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 44 (face font-lock-comment-face fontified t) 44 61 (face font-lock-comment-face fontified t) 61 62 (face font-lock-comment-face fontified t) 62 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 74 (face font-lock-comment-face fontified t) 74 82 (face font-lock-comment-face fontified t) 82 83 (face font-lock-comment-face fontified t) 83 87 (face font-lock-comment-face fontified t) 87 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 100 (face font-lock-comment-face fontified t) 100 101 (face font-lock-comment-face fontified t) 101 105 (face font-lock-comment-face fontified t) 105 113 (face font-lock-comment-face fontified t) 113 117 (face font-lock-comment-face fontified t) 117 123 (face font-lock-comment-face fontified t) 123 124 (face font-lock-comment-face fontified t) 124 125 (face font-lock-comment-face rear-nonsticky t fontified t)) . -12597) (undo-tree-id6779 . -124) (undo-tree-id6780 . -71) (undo-tree-id6781 . -71) (undo-tree-id6782 . -71) (undo-tree-id6783 . -71) (undo-tree-id6784 . -71) (undo-tree-id6785 . -74) (undo-tree-id6786 . -74) (undo-tree-id6787 . -74) (undo-tree-id6788 . -74) (undo-tree-id6789 . -74) (undo-tree-id6790 . -124) (undo-tree-id6791 . -124) (undo-tree-id6792 . -124) (undo-tree-id6793 . -124) (undo-tree-id6794 . -124) (undo-tree-id6795 . -124) (undo-tree-id6796 . -124) (undo-tree-id6797 . -124) (undo-tree-id6798 . -124) (undo-tree-id6799 . -124) (undo-tree-id6800 . -124) (undo-tree-id6801 . -124) (undo-tree-id6802 . -124) (undo-tree-id6803 . -124) (undo-tree-id6804 . -124) (undo-tree-id6805 . -125) (undo-tree-id6806 . -125) (undo-tree-id6807 . -125) (undo-tree-id6808 . -125) (undo-tree-id6809 . -125) (undo-tree-id6810 . -125) (undo-tree-id6811 . -125) (undo-tree-id6812 . -125) (undo-tree-id6813 . -125) (undo-tree-id6814 . -125) (undo-tree-id6815 . -125) (undo-tree-id6816 . -125) (undo-tree-id6817 . -125) (undo-tree-id6818 . -125) (undo-tree-id6819 . -125) (undo-tree-id6820 . -125) (undo-tree-id6821 . -125) (undo-tree-id6822 . -125) (undo-tree-id6823 . -125) (undo-tree-id6824 . -125) (undo-tree-id6825 . -125) (undo-tree-id6826 . -125) (undo-tree-id6827 . -125) (undo-tree-id6828 . -125) (undo-tree-id6829 . -125) (undo-tree-id6830 . -125) (undo-tree-id6831 . -125) (undo-tree-id6832 . -125) (undo-tree-id6833 . -125) (undo-tree-id6834 . -125) (undo-tree-id6835 . -125) (undo-tree-id6836 . -125) (undo-tree-id6837 . -125) (undo-tree-id6838 . -125) (undo-tree-id6839 . -125) (undo-tree-id6840 . -125) (undo-tree-id6841 . -125) (undo-tree-id6842 . -125) (undo-tree-id6843 . -125) (undo-tree-id6844 . -125) (undo-tree-id6845 . -125) (undo-tree-id6846 . -125) (undo-tree-id6847 . -125) (undo-tree-id6848 . -125) (undo-tree-id6849 . -125) (undo-tree-id6850 . -125) (undo-tree-id6851 . -125) (undo-tree-id6852 . -125) (undo-tree-id6853 . -125) (undo-tree-id6854 . -125) (undo-tree-id6855 . -125) (undo-tree-id6856 . -125) (undo-tree-id6857 . -125) (undo-tree-id6858 . -125) (undo-tree-id6859 . -125) (undo-tree-id6860 . -125) (undo-tree-id6861 . -124) (undo-tree-id6862 . -125) (undo-tree-id6863 . -125) (undo-tree-id6864 . -125) (undo-tree-id6865 . -125) (undo-tree-id6866 . -125) (undo-tree-id6867 . -125) 12722 (t 25934 6672 245584 632000)) nil (25934 6686 16897 926000) 0 nil])
([nil nil ((2561 . 2579) (t 25934 6686 39561 737000)) nil (25934 6715 862846 269000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -10099) (undo-tree-id6869 . -1) (#("." 0 1 (fontified t)) . -10100) (undo-tree-id6870 . -1) (#("0" 0 1 (fontified t)) . -10101) (undo-tree-id6871 . -1) (#(" " 0 1 (fontified t)) . -10102) (undo-tree-id6872 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -10103) (undo-tree-id6873 . -1) (#(" " 0 1 (fontified t)) . -10104) (undo-tree-id6874 . -1) 10105 (t 25934 6715 887550 804000)) nil (25934 6922 559117 216000) 0 nil])
([nil nil ((10097 . 10098)) nil (25934 6922 559094 979000) 0 nil])
([nil nil ((9157 . 9158)) nil (25934 6922 559093 187000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 9160) (undo-tree-id6868 . -1)) nil (25934 6922 559088 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 9160) (#("+" 0 1 (face font-lock-operator-face fontified t)) . 9160) (#(" " 0 1 (fontified t)) . 9160) (#("0" 0 1 (fontified t)) . 9160) (#("." 0 1 (fontified t)) . 9160)) nil (25934 6922 559066 496000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -9263) 9235) nil (25934 6922 559053 352000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1906) (undo-tree-id6928 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1907) (undo-tree-id6929 . -1) (#(" " 0 1 (fontified t)) . -1908) (undo-tree-id6930 . -1) 1909 (t 25934 6922 602005 301000)) nil (25934 6985 572660 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1911 . 1912) (nil fontified nil 1911 . 1912) (nil fontified nil 1906 . 1911) (1906 . 1912)) nil (25934 6985 572656 244000) 0 nil])
([nil nil ((1942 . 1943)) nil (25934 6985 572655 64000) 0 nil])
([nil nil ((1906 . 1907)) nil (25934 6985 572654 346000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -1906) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) 1907) nil (25934 6985 572650 867000) 0 nil])
([nil nil ((1906 . 1907)) nil (25934 6985 572590 465000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1943) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) 1944 (t 25934 6985 597675 814000)) nil (25934 7003 856088 620000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1906) (#("l" 0 1 (fontified t)) . 1906) (#("l" 0 1 (fontified t)) . 1906) (#("i" 0 1 (fontified t)) . 1906) (#("f" 0 1 (fontified t)) . 1906) (#("." 0 1 (fontified t)) . 1906) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1)) nil (25934 7003 856020 444000) 0 nil])
([nil nil ((1906 . 1909)) nil (25934 7003 855990 221000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 1909)) nil (25934 7003 855984 216000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . 9157) (t 25934 7003 880452 421000)) nil (25934 7019 358841 316000) 0 nil])
([nil nil ((9159 . 9160)) nil (25934 7019 358839 242000) 0 nil])
([nil nil ((9160 . 9165)) nil (25934 7019 358835 341000) 0 nil])
([nil nil ((9221 . 9273) (#("                                               " 0 47 (fontified t)) . 9221) (undo-tree-id6989 . -24) (undo-tree-id6990 . -24) (undo-tree-id6991 . -24) (undo-tree-id6992 . -24) (undo-tree-id6993 . -24) (undo-tree-id6994 . -24) (undo-tree-id6995 . -24) (undo-tree-id6996 . -24) (undo-tree-id6997 . -24) (undo-tree-id6998 . -24) (undo-tree-id6999 . -24) (undo-tree-id7000 . -24) (undo-tree-id7001 . -24) (undo-tree-id7002 . -24) (undo-tree-id7003 . -24) (undo-tree-id7004 . -24) (undo-tree-id7005 . -24) (undo-tree-id7006 . -24) (undo-tree-id7007 . -24) (undo-tree-id7008 . -24) (undo-tree-id7009 . -24) (undo-tree-id7010 . -24) (undo-tree-id7011 . -24) (undo-tree-id7012 . -24) (undo-tree-id7013 . -24) (undo-tree-id7014 . -24) (undo-tree-id7015 . -24) (undo-tree-id7016 . -24) (undo-tree-id7017 . -24) (undo-tree-id7018 . -24) (undo-tree-id7019 . -24) (undo-tree-id7020 . -24) 9245) nil (25934 7019 358822 677000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-operator-face fontified t)) . 10097) (t 25934 7019 393743 604000)) nil (25934 7047 292118 209000) 0 nil])
([nil nil ((10099 . 10105)) nil (25934 7047 292115 209000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 9159) (#("." 0 1 (fontified t)) . 9159) (#("1" 0 1 (fontified t)) . 9159)) nil (25934 7047 292111 68000) 0 nil])
([nil nil ((9159 . 9162)) nil (25934 7047 292103 731000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -9159) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (#("i" 0 1 (fontified t)) . -9160) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (#("j" 0 1 (fontified t)) . -9161) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) 9162 (t 25934 7047 307552 278000)) nil (25934 7097 360202 261000) 0 nil])
([nil nil ((9159 . 9162)) nil (25934 7097 360163 922000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -10099) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (#("i" 0 1 (fontified t)) . -10100) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (#("j" 0 1 (fontified t)) . -10101) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) 10102) nil (25934 7097 360140 744000) 0 nil])
([nil nil ((10099 . 10102)) nil (25934 7097 359662 787000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -10100) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (#("0" 0 1 (fontified t)) . -10101) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) 10102) nil (25934 7097 359657 149000) 0 nil])
([nil nil ((10100 . 10102)) nil (25934 7097 359461 762000) 0 nil])
([nil nil ((8332 . 8333) (t 25934 7097 385027 782000)) nil (25934 7104 821364 22000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -8332) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) 8333) nil (25934 7104 821358 64000) 0 nil])
([nil nil ((10311 . 10327) (#("            " 0 12 (fontified t)) . 10311) (undo-tree-id7487 . -8) 10319 (t 25934 7104 861624 336000)) nil (25934 7158 234106 350000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10323) (undo-tree-id7486 . -4) 10327) nil (25934 7158 234102 675000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -10064) (undo-tree-id7472 . -1) (#("e" 0 1 (fontified t)) . -10065) (undo-tree-id7473 . -1) (#("l" 0 1 (fontified t)) . -10066) (undo-tree-id7474 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -10067) (undo-tree-id7475 . -1) (#("." 0 1 (fontified t)) . -10068) (undo-tree-id7476 . -1) (#("K" 0 1 (fontified t)) . -10069) (undo-tree-id7477 . -1) (#("a" 0 1 (fontified t)) . -10070) (undo-tree-id7478 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -10071) (undo-tree-id7479 . -1) (#("j" 0 1 (fontified t)) . -10072) (undo-tree-id7480 . -1) (#("_" 0 1 (fontified nil)) . -10073) (undo-tree-id7481 . -1) (#("p" 0 1 (fontified t)) . -10074) (undo-tree-id7482 . -1) (#("o" 0 1 (fontified nil)) . -10075) (undo-tree-id7483 . -1) (#("p" 0 1 (fontified t)) . -10076) (undo-tree-id7484 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10077) (undo-tree-id7485 . -1) 10078) nil (25934 7158 234094 727000) 0 nil])
([nil nil ((10064 . 10066)) nil (25934 7158 234058 620000) 0 nil])
([nil nil ((10068 . 10084) (t 25934 7158 267475 504000)) nil (25934 7161 619404 936000) 0 nil])
([nil nil ((10621 . 10633) (t 25934 7161 647912 823000)) nil (25934 7171 58791 258000) 0 nil])
([nil nil ((11874 . 11876) (t 25934 7171 97164 457000)) nil (25934 7238 105787 537000) 0 nil])
([nil nil ((11874 . 11879)) nil (25934 7238 105786 397000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11874) (undo-tree-id7528 . -1) (#("e" 0 1 (fontified t)) . -11875) (undo-tree-id7529 . -1) (#("l" 0 1 (fontified t)) . -11876) (undo-tree-id7530 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -11877) (undo-tree-id7531 . -1) (#("." 0 1 (fontified t)) . -11878) (undo-tree-id7532 . -1) 11879) nil (25934 7238 105784 238000) 0 nil])
([nil nil ((11874 . 11880)) nil (25934 7238 105778 90000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11879) (undo-tree-id7527 . -1) 11880) nil (25934 7238 105777 133000) 0 nil])
([nil nil ((11879 . 11881)) nil (25934 7238 105775 223000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11880) (undo-tree-id7526 . -1) 11881) nil (25934 7238 105774 143000) 0 nil])
([nil nil ((11880 . 11884)) nil (25934 7238 105772 202000) 0 nil])
([nil nil ((11884 . 11885)) nil (25934 7238 105771 391000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -11880) (undo-tree-id7521 . -1) (#("e" 0 1 (fontified t)) . -11881) (undo-tree-id7522 . -1) (#("l" 0 1 (fontified t)) . -11882) (undo-tree-id7523 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -11883) (undo-tree-id7524 . -1) (#("." 0 1 (fontified t)) . -11884) (undo-tree-id7525 . -1) 11885) nil (25934 7238 105769 548000) 0 nil])
([nil nil ((11880 . 11889)) nil (25934 7238 105762 933000) 0 nil])
([nil nil ((11948 . 11949)) nil (25934 7238 105762 291000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -11948) (undo-tree-id7520 . -1) 11949) nil (25934 7238 105761 134000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11873) (undo-tree-id7502 . -1) (#("d" 0 1 (fontified t)) . -11874) (undo-tree-id7503 . -1) (#("t" 0 1 (fontified t)) . -11875) (undo-tree-id7504 . -1) (#("y" 0 1 (fontified t)) . -11876) (undo-tree-id7505 . -1) (#("p" 0 1 (fontified t)) . -11877) (undo-tree-id7506 . -1) (#("e" 0 1 (fontified t)) . -11878) (undo-tree-id7507 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -11879) (undo-tree-id7508 . -1) (#("t" 0 1 (fontified t)) . -11880) (undo-tree-id7509 . -1) (#("o" 0 1 (fontified t)) . -11881) (undo-tree-id7510 . -1) (#("r" 0 1 (fontified t)) . -11882) (undo-tree-id7511 . -1) (#("c" 0 1 (fontified t)) . -11883) (undo-tree-id7512 . -1) (#("h" 0 1 (fontified t)) . -11884) (undo-tree-id7513 . -1) (#("." 0 1 (fontified t)) . -11885) (undo-tree-id7514 . -1) (#("i" 0 1 (fontified t)) . -11886) (undo-tree-id7515 . -1) (#("n" 0 1 (fontified t)) . -11887) (undo-tree-id7516 . -1) (#("t" 0 1 (fontified t)) . -11888) (undo-tree-id7517 . -1) (#("," 0 1 (fontified t)) . -11889) (undo-tree-id7518 . -1) (#(" " 0 1 (fontified t)) . -11890) (undo-tree-id7519 . -1) 11891) nil (25934 7238 105754 342000) 0 nil])
([nil nil ((11873 . 11874)) nil (25934 7238 105734 742000) 0 nil])
([nil nil ((11889 . 11897)) nil (25934 7238 105733 838000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11894) (undo-tree-id7499 . -1) (#("c" 0 1 (fontified t)) . -11895) (undo-tree-id7500 . -1) (#("e" 0 1 (fontified t)) . -11896) (undo-tree-id7501 . -1) 11897) nil (25934 7238 105731 844000) 0 nil])
([nil nil ((11894 . 11900)) nil (25934 7238 105727 640000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11897) (undo-tree-id7498 . -1) 11898) nil (25934 7238 105726 278000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11898) (undo-tree-id7497 . -1) 11899) nil (25934 7238 105723 650000) 0 nil])
([nil nil ((11898 . 11900)) nil (25934 7238 105721 492000) 0 nil])
([nil nil ((11900 . 11909)) nil (25934 7238 105720 666000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11906) (undo-tree-id7494 . -1) (#("c" 0 1 (fontified t)) . -11907) (undo-tree-id7495 . -1) (#("e" 0 1 (fontified t)) . -11908) (undo-tree-id7496 . -1) 11909) nil (25934 7238 105719 360000) 0 nil])
([nil nil ((11906 . 11909)) nil (25934 7238 105715 186000) 0 nil])
([nil nil ((11967 . 11975)) nil (25934 7238 105714 312000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11972) (undo-tree-id7491 . -1) (#("c" 0 1 (fontified t)) . -11973) (undo-tree-id7492 . -1) (#("e" 0 1 (fontified t)) . -11974) (undo-tree-id7493 . -1) 11975) nil (25934 7238 105712 115000) 0 nil])
([nil nil ((11972 . 11985)) nil (25934 7238 105707 310000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -11983) (undo-tree-id7489 . -1) (#("u" 0 1 (fontified t)) . -11984) (undo-tree-id7490 . -1) 11985) nil (25934 7238 105705 336000) 0 nil])
([nil nil ((11983 . 11985)) nil (25934 7238 105701 60000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11984) (undo-tree-id7488 . -1) 11985) nil (25934 7238 105699 98000) 0 nil])
([nil nil ((11984 . 11987)) nil (25934 7238 105681 899000) 0 nil])
([nil nil ((11833 . 11845) (t 25934 7238 138885 940000)) nil (25934 7243 541011 70000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11841) (undo-tree-id7533 . -4) (undo-tree-id7534 . -4) (undo-tree-id7535 . -4) (undo-tree-id7536 . -4) (undo-tree-id7537 . -4) (undo-tree-id7538 . -4) (undo-tree-id7539 . -4) (undo-tree-id7540 . -4) (undo-tree-id7541 . -4) (undo-tree-id7542 . -4) (undo-tree-id7543 . -4) (undo-tree-id7544 . -4) (undo-tree-id7545 . -4) (undo-tree-id7546 . -4) (undo-tree-id7547 . -4) (undo-tree-id7548 . -4) (undo-tree-id7549 . -4) (undo-tree-id7550 . -4) (undo-tree-id7551 . -4) (undo-tree-id7552 . -4) (undo-tree-id7553 . -4) (undo-tree-id7554 . -4) (undo-tree-id7555 . -4) (undo-tree-id7556 . -4) (undo-tree-id7557 . -4) (undo-tree-id7558 . -4) (undo-tree-id7559 . -4) (undo-tree-id7560 . -4) (undo-tree-id7561 . -4) (undo-tree-id7562 . -4) (undo-tree-id7563 . -4) (undo-tree-id7564 . -4) (undo-tree-id7565 . -4) (undo-tree-id7566 . -4) (undo-tree-id7567 . -4) (undo-tree-id7568 . -4) (undo-tree-id7569 . -4) 11845) nil (25934 7243 541006 266000) 0 nil])
([nil nil ((12080 . 12088) (t 25934 7243 567715 175000)) nil (25934 7257 132638 822000) 0 nil])
([nil nil ((12046 . 12048) (t 25934 7257 162941 898000)) nil (25934 7284 930330 51000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12046) (undo-tree-id7577 . -1) (#(" " 0 1 (fontified t)) . -12047) (undo-tree-id7578 . -1) 12048) nil (25934 7284 930327 311000) 0 nil])
([nil nil ((12078 . 12084)) nil (25934 7284 930321 862000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -12080) (undo-tree-id7573 . -1) (#("t" 0 1 (fontified t)) . -12081) (undo-tree-id7574 . -1) (#("t" 0 1 (fontified t)) . -12082) (undo-tree-id7575 . -1) (#("o" 0 1 (fontified t)) . -12083) (undo-tree-id7576 . -1) 12084) nil (25934 7284 930319 76000) 0 nil])
([nil nil ((12080 . 12086)) nil (25934 7284 930308 80000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -12083) (undo-tree-id7570 . -1) (#("c" 0 1 (fontified t)) . -12084) (undo-tree-id7571 . -1) (#("e" 0 1 (fontified t)) . -12085) (undo-tree-id7572 . -1) 12086) nil (25934 7284 930304 90000) 0 nil])
([nil nil ((12083 . 12098)) nil (25934 7284 930279 476000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -12078) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (#(" " 0 1 (fontified t)) . -12079) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (#("d" 0 1 (fontified t)) . -12080) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (#("e" 0 1 (fontified nil)) . -12081) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (#("v" 0 1 (fontified nil)) . -12082) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (#("i" 0 1 (fontified nil)) . -12083) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (#("c" 0 1 (fontified nil)) . -12084) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (#("e" 0 1 (fontified nil)) . -12085) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (#("=" 0 1 (face font-lock-operator-face fontified nil)) . -12086) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12087) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12088) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12089) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12090) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (#("." 0 1 (fontified t)) . -12091) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (#("d" 0 1 (fontified nil)) . -12092) (undo-tree-id7949 . -1) (#("e" 0 1 (fontified t)) . -12093) (undo-tree-id7950 . -1) (#("v" 0 1 (fontified t)) . -12094) (undo-tree-id7951 . -1) (#("i" 0 1 (fontified t)) . -12095) (undo-tree-id7952 . -1) (#("c" 0 1 (fontified t)) . -12096) (undo-tree-id7953 . -1) (#("e" 0 1 (fontified t)) . -12097) (undo-tree-id7954 . -1) 12098 (t 25934 7284 965458 4000)) nil (25934 7307 498464 708000) 0 nil])
([nil nil ((apply 6 2942 3070 undo--wrap-and-run-primitive-undo 2942 3070 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3050) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3004) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2958) 2942))) nil (25934 7418 419596 939000) 0 nil])
([nil nil ((apply 2 3140 3173 undo--wrap-and-run-primitive-undo 3140 3173 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3156) 3140))) nil (25934 7418 419591 91000) 0 nil])
([nil nil ((3086 . 3087) (t 25934 7418 445745 396000)) nil (25934 7486 366541 50000) 0 nil])
([nil nil ((3087 . 3090)) nil (25934 7486 366539 151000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3089) (undo-tree-id8011 . -1) 3090) nil (25934 7486 366536 782000) 0 nil])
([nil nil ((3089 . 3098)) nil (25934 7486 366531 622000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3097) (undo-tree-id8010 . -1) 3098) nil (25934 7486 366529 120000) 0 nil])
([nil nil ((3097 . 3099) (#("(" 0 1 (fontified nil)) . -3097) (3097 . 3098)) nil (25934 7486 366522 985000) 0 nil])
([nil nil ((3098 . 3102)) nil (25934 7486 366519 931000) 0 nil])
([nil nil ((3102 . 3103)) nil (25934 7486 366517 483000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3098) (undo-tree-id8005 . -1) (#("e" 0 1 (fontified t)) . -3099) (undo-tree-id8006 . -1) (#("f" 0 1 (fontified t)) . -3100) (undo-tree-id8007 . -1) (#("l" 0 1 (fontified t)) . -3101) (undo-tree-id8008 . -1) (#("?" 0 1 (fontified t)) . -3102) (undo-tree-id8009 . -1) 3103) nil (25934 7486 366511 948000) 0 nil])
([nil nil ((3099 . 3106) (3098 . 3100) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3098) (3098 . 3099)) nil (25934 7486 366492 564000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -3105) (undo-tree-id8004 . -1) 3106) nil (25934 7486 366490 272000) 0 nil])
([nil nil ((3111 . 3112) (3110 . 3112) (#("[" 0 1 (fontified nil)) . -3110) (3105 . 3111)) nil (25934 7486 366486 941000) 0 nil])
([nil nil ((3112 . 3115)) nil (25934 7486 366484 812000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3113) (undo-tree-id8002 . -1) (#("p" 0 1 (fontified t)) . -3114) (undo-tree-id8003 . -1) 3115) nil (25934 7486 366483 87000) 0 nil])
([nil nil ((3113 . 3116)) nil (25934 7486 366478 656000) 0 nil])
([nil nil ((3086 . 3088)) nil (25934 7486 366477 551000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3087) (undo-tree-id8001 . -1) 3088) nil (25934 7486 366475 966000) 0 nil])
([nil nil ((3087 . 3095)) nil (25934 7486 366472 537000) 0 nil])
([nil nil ((3128 . 3145)) nil (25934 7486 366471 285000) 0 nil])
([nil nil ((3071 . 3087) (#("                " 0 16 (fontified nil)) . 3070) (undo-tree-id7955 . -16) (undo-tree-id7956 . -16) (undo-tree-id7957 . -16) (undo-tree-id7958 . -16) (undo-tree-id7959 . -16) (undo-tree-id7960 . -16) (undo-tree-id7961 . -16) (undo-tree-id7962 . -16) (undo-tree-id7963 . -16) (undo-tree-id7964 . -16) (undo-tree-id7965 . -16) (undo-tree-id7966 . -16) (undo-tree-id7967 . -16) (undo-tree-id7968 . -16) (undo-tree-id7969 . -16) (undo-tree-id7970 . -16) (undo-tree-id7971 . -16) (undo-tree-id7972 . -16) (undo-tree-id7973 . -16) (undo-tree-id7974 . -16) (undo-tree-id7975 . -16) (undo-tree-id7976 . -16) (undo-tree-id7977 . -16) (undo-tree-id7978 . -16) (undo-tree-id7979 . -16) (undo-tree-id7980 . -16) (undo-tree-id7981 . -16) (undo-tree-id7982 . -16) (undo-tree-id7983 . -16) (undo-tree-id7984 . -16) (undo-tree-id7985 . -16) (undo-tree-id7986 . -16) (undo-tree-id7987 . -16) (undo-tree-id7988 . -16) (undo-tree-id7989 . -16) (undo-tree-id7990 . -16) (undo-tree-id7991 . -16) (undo-tree-id7992 . -16) (undo-tree-id7993 . -16) (undo-tree-id7994 . -16) (undo-tree-id7995 . -16) (undo-tree-id7996 . -16) (undo-tree-id7997 . -16) (undo-tree-id7998 . -16) (undo-tree-id7999 . -16) (undo-tree-id8000 . -16) (3086 . 3087)) nil (25934 7486 366463 929000) 0 nil])
([nil nil ((3128 . 3149) (t 25934 7486 392442 226000)) nil (25934 7511 19070 870000) 0 nil])
([nil nil ((3149 . 3160)) nil (25934 7511 19069 775000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3159) (undo-tree-id8012 . -1) 3160) nil (25934 7511 19068 7000) 0 nil])
([nil nil ((3159 . 3160)) nil (25934 7511 19058 978000) 0 nil])
([nil nil ((3160 . 3166)) nil (25934 7511 19053 996000) 0 nil])
([nil nil ((3109 . 3112) (t 25934 7511 46006 470000)) nil (25934 7538 284732 552000) 0 nil])
([nil nil ((3129 . 3131) (t 25934 7538 307999 457000)) nil (25934 7544 899841 317000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3109) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (#("," 0 1 (fontified t)) . -3110) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (#(" " 0 1 (fontified t)) . -3111) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) 3112) nil (25934 7544 899817 578000) 0 nil])
([nil nil ((3169 . 3178) (t 25934 7544 932519 470000)) nil (25934 7574 107089 560000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3177) (undo-tree-id8394 . -1) 3178) nil (25934 7574 107087 322000) 0 nil])
([nil nil ((3177 . 3179)) nil (25934 7574 107083 43000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3178) (undo-tree-id8393 . -1) 3179) nil (25934 7574 107080 597000) 0 nil])
([nil nil ((3178 . 3179)) nil (25934 7574 107077 267000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3178) (undo-tree-id8392 . -1) 3179) nil (25934 7574 107075 195000) 0 nil])
([nil nil ((3178 . 3181)) nil (25934 7574 107071 162000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3179) (undo-tree-id8390 . -1) (#(")" 0 1 (face font-lock-string-face fontified t)) . -3180) (undo-tree-id8391 . -1) 3181) nil (25934 7574 107068 747000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3181) (3180 . 3181) (3179 . 3181) (#("(" 0 1 (fontified nil)) . -3179) (3179 . 3180)) nil (25934 7574 107048 243000) 0 nil])
([nil nil ((3180 . 3181)) nil (25934 7574 107037 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1874 . 1875) (nil fontified nil 1874 . 1875) (nil fontified nil 1873 . 1874) (nil fontified nil 1866 . 1873) (nil fontified nil 1862 . 1866) (nil fontified nil 1861 . 1862) (nil fontified nil 1847 . 1861) (nil fontified nil 1843 . 1847) (nil fontified nil 1842 . 1843) (nil fontified nil 1835 . 1842) (nil fontified nil 1834 . 1835) (nil fontified nil 1829 . 1834) (nil fontified nil 1827 . 1829) (nil fontified nil 1822 . 1827) (nil fontified nil 1821 . 1822) (nil fontified nil 1820 . 1821) (nil fontified nil 1814 . 1820) (nil fontified nil 1813 . 1814) (nil fontified nil 1808 . 1813) (nil fontified nil 1807 . 1808) (nil fontified nil 1804 . 1807) (nil fontified nil 1800 . 1804) (nil fontified nil 1798 . 1800) (nil fontified nil 1797 . 1798) (nil fontified nil 1792 . 1797) (nil fontified nil 1791 . 1792) (nil fontified nil 1788 . 1791) (nil fontified nil 1784 . 1788) (nil fontified nil 1783 . 1784) (nil fontified nil 1773 . 1783) (nil fontified nil 1772 . 1773) (nil fontified nil 1771 . 1772) (nil fontified nil 1768 . 1771) (nil fontified nil 1752 . 1768) (1752 . 1875) (t 25934 7574 154954 978000)) nil (25934 7600 36789 28000) 0 nil])
([nil nil ((apply -2 1875 2065 undo--wrap-and-run-primitive-undo 1875 2065 ((1891 . 1893) 1998))) nil (25934 7600 36782 333000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1821) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (#("i" 0 1 (fontified t)) . -1822) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (#("_" 0 1 (fontified t)) . -1823) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (#("p" 0 1 (fontified t)) . -1824) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (#("o" 0 1 (fontified t)) . -1825) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (#("p" 0 1 (fontified t)) . -1826) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1827) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1828) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (#("j" 0 1 (fontified t)) . -1829) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (#("_" 0 1 (fontified t)) . -1830) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (#("p" 0 1 (fontified t)) . -1831) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (#("o" 0 1 (fontified t)) . -1832) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (#("p" 0 1 (fontified t)) . -1833) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1834) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) (undo-tree-id11657 . -1) (undo-tree-id11658 . -1) (undo-tree-id11659 . -1) (undo-tree-id11660 . -1) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) 1835) nil (25934 7600 36652 5000) 0 nil])
([nil nil ((1821 . 1826)) nil (25934 7600 32454 994000) 0 nil])
([nil nil ((apply -4 2174 2287 undo--wrap-and-run-primitive-undo 2174 2287 ((2224 . 2226) (2182 . 2184) 2282))) nil (25934 7613 94530 218000) 0 nil])
([nil nil ((2286 . 2294)) nil (25934 7613 94524 421000) 0 nil])
([nil nil ((apply -12 14414 14729 undo--wrap-and-run-primitive-undo 14414 14729 ((14645 . 14647) (14588 . 14590) (14530 . 14532) (14488 . 14490) (14446 . 14448) (14422 . 14424) 14716))) nil (25934 7638 59526 258000) 0 nil])
([nil nil ((14728 . 14736) (t 25934 7638 88909 141000)) nil (25934 7665 970792 986000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 3405) (3404 . 3405) (3403 . 3405) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3403) (3403 . 3404) (t 25934 7665 999704 740000)) nil (25934 7744 757960 77000) 0 nil])
([nil nil ((3404 . 3407)) nil (25934 7744 757958 134000) 0 nil])
([nil nil ((3408 . 3410)) nil (25934 7744 757956 896000) 0 nil])
([nil nil ((apply -2 3199 3330 undo--wrap-and-run-primitive-undo 3199 3330 ((3215 . 3217) 3199))) nil (25934 7744 757951 919000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 3186) (3185 . 3186) (3184 . 3186) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3184) (3184 . 3185) (t 25934 7744 784009 429000)) nil (25934 7752 542777 759000) 0 nil])
([nil nil ((3185 . 3190)) nil (25934 7752 542776 260000) 0 nil])
([nil nil ((3191 . 3193)) nil (25934 7752 542771 165000) 0 nil])
([nil nil ((apply -2 3008 3118 undo--wrap-and-run-primitive-undo 3008 3118 ((3024 . 3026) 3008))) nil (25934 7782 99657 263000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3372) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) 3373 (t 25934 7782 152128 258000)) nil (25934 7826 906936 423000) 0 nil])
([nil nil ((3372 . 3373)) nil (25934 7826 906852 915000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3379) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) 3380) nil (25934 7826 906848 949000) 0 nil])
([nil nil ((3379 . 3380)) nil (25934 7826 906728 682000) 0 nil])
([nil nil ((apply 12 14434 14736 undo--wrap-and-run-primitive-undo 14434 14736 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14655) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14600) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14544) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14504) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14464) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14442) 14748))) nil (25934 7892 380692 839000) 0 nil])
([nil nil ((14736 . 14756) (#("        " 0 8 (fontified t)) . 14736) (undo-tree-id11953 . -8) (undo-tree-id11954 . -8) (undo-tree-id11955 . -8) (undo-tree-id11956 . -8) (undo-tree-id11957 . -8) (undo-tree-id11958 . -8) (undo-tree-id11959 . -8) (undo-tree-id11960 . -8) (undo-tree-id11961 . -8) (undo-tree-id11962 . -8) (undo-tree-id11963 . -8) (undo-tree-id11964 . -8) (undo-tree-id11965 . -8) (undo-tree-id11966 . -8) (undo-tree-id11967 . -8) (undo-tree-id11968 . -8) (undo-tree-id11969 . -8) (undo-tree-id11970 . -8) (t 25934 7892 421990 135000)) nil (25934 7893 669897 367000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14752) (undo-tree-id11932 . -4) (undo-tree-id11933 . -4) (undo-tree-id11934 . -4) (undo-tree-id11935 . -4) (undo-tree-id11936 . -4) (undo-tree-id11937 . -4) (undo-tree-id11938 . -4) (undo-tree-id11939 . -4) (undo-tree-id11940 . -4) (undo-tree-id11941 . -4) (undo-tree-id11942 . -4) (undo-tree-id11943 . -4) (undo-tree-id11944 . -4) (undo-tree-id11945 . -4) (undo-tree-id11946 . -4) (undo-tree-id11947 . -4) (undo-tree-id11948 . -4) (undo-tree-id11949 . -4) (undo-tree-id11950 . -4) (undo-tree-id11951 . -4) (undo-tree-id11952 . -4) 14756) nil (25934 7893 669842 328000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14748) (undo-tree-id11855 . -4) (undo-tree-id11856 . -4) (undo-tree-id11857 . -4) (undo-tree-id11858 . -4) (undo-tree-id11859 . -4) (undo-tree-id11860 . -4) (undo-tree-id11861 . -4) (undo-tree-id11862 . -4) (undo-tree-id11863 . -4) (undo-tree-id11864 . -4) (undo-tree-id11865 . -4) (undo-tree-id11866 . -4) (undo-tree-id11867 . -4) (undo-tree-id11868 . -4) (undo-tree-id11869 . -4) (undo-tree-id11870 . -4) (undo-tree-id11871 . -4) (undo-tree-id11872 . -4) (undo-tree-id11873 . -4) (undo-tree-id11874 . -4) (undo-tree-id11875 . -4) (undo-tree-id11876 . -4) (undo-tree-id11877 . -4) (undo-tree-id11878 . -4) (undo-tree-id11879 . -4) (undo-tree-id11880 . -4) (undo-tree-id11881 . -4) (undo-tree-id11882 . -4) (undo-tree-id11883 . -4) (undo-tree-id11884 . -4) (undo-tree-id11885 . -4) (undo-tree-id11886 . -4) (undo-tree-id11887 . -4) (undo-tree-id11888 . -4) (undo-tree-id11889 . -4) (undo-tree-id11890 . -4) (undo-tree-id11891 . -4) (undo-tree-id11892 . -4) (undo-tree-id11893 . -4) (undo-tree-id11894 . -4) (undo-tree-id11895 . -4) (undo-tree-id11896 . -4) (undo-tree-id11897 . -4) (undo-tree-id11898 . -4) (undo-tree-id11899 . -4) (undo-tree-id11900 . -4) (undo-tree-id11901 . -4) (undo-tree-id11902 . -4) (undo-tree-id11903 . -4) (undo-tree-id11904 . -4) (undo-tree-id11905 . -4) (undo-tree-id11906 . -4) (undo-tree-id11907 . -4) (undo-tree-id11908 . -4) (undo-tree-id11909 . -4) (undo-tree-id11910 . -4) (undo-tree-id11911 . -4) (undo-tree-id11912 . -4) (undo-tree-id11913 . -4) (undo-tree-id11914 . -4) (undo-tree-id11915 . -4) (undo-tree-id11916 . -4) (undo-tree-id11917 . -4) (undo-tree-id11918 . -4) (undo-tree-id11919 . -4) (undo-tree-id11920 . -4) (undo-tree-id11921 . -4) (undo-tree-id11922 . -4) (undo-tree-id11923 . -4) (undo-tree-id11924 . -4) (undo-tree-id11925 . -4) (undo-tree-id11926 . -4) (undo-tree-id11927 . -4) (undo-tree-id11928 . -4) (undo-tree-id11929 . -4) (undo-tree-id11930 . -4) (undo-tree-id11931 . -4) 14752) nil (25934 7893 669770 855000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14744) (undo-tree-id11752 . -4) (undo-tree-id11753 . -4) (undo-tree-id11754 . -4) (undo-tree-id11755 . -4) (undo-tree-id11756 . -4) (undo-tree-id11757 . -4) (undo-tree-id11758 . -4) (undo-tree-id11759 . -4) (undo-tree-id11760 . -4) (undo-tree-id11761 . -4) (undo-tree-id11762 . -4) (undo-tree-id11763 . -4) (undo-tree-id11764 . -4) (undo-tree-id11765 . -4) (undo-tree-id11766 . -4) (undo-tree-id11767 . -4) (undo-tree-id11768 . -4) (undo-tree-id11769 . -4) (undo-tree-id11770 . -4) (undo-tree-id11771 . -4) (undo-tree-id11772 . -4) (undo-tree-id11773 . -4) (undo-tree-id11774 . -4) (undo-tree-id11775 . -4) (undo-tree-id11776 . -4) (undo-tree-id11777 . -4) (undo-tree-id11778 . -4) (undo-tree-id11779 . -4) (undo-tree-id11780 . -4) (undo-tree-id11781 . -4) (undo-tree-id11782 . -4) (undo-tree-id11783 . -4) (undo-tree-id11784 . -4) (undo-tree-id11785 . -4) (undo-tree-id11786 . -4) (undo-tree-id11787 . -4) (undo-tree-id11788 . -4) (undo-tree-id11789 . -4) (undo-tree-id11790 . -4) (undo-tree-id11791 . -4) (undo-tree-id11792 . -4) (undo-tree-id11793 . -4) (undo-tree-id11794 . -4) (undo-tree-id11795 . -4) (undo-tree-id11796 . -4) (undo-tree-id11797 . -4) (undo-tree-id11798 . -4) (undo-tree-id11799 . -4) (undo-tree-id11800 . -4) (undo-tree-id11801 . -4) (undo-tree-id11802 . -4) (undo-tree-id11803 . -4) (undo-tree-id11804 . -4) (undo-tree-id11805 . -4) (undo-tree-id11806 . -4) (undo-tree-id11807 . -4) (undo-tree-id11808 . -4) (undo-tree-id11809 . -4) (undo-tree-id11810 . -4) (undo-tree-id11811 . -4) (undo-tree-id11812 . -4) (undo-tree-id11813 . -4) (undo-tree-id11814 . -4) (undo-tree-id11815 . -4) (undo-tree-id11816 . -4) (undo-tree-id11817 . -4) (undo-tree-id11818 . -4) (undo-tree-id11819 . -4) (undo-tree-id11820 . -4) (undo-tree-id11821 . -4) (undo-tree-id11822 . -4) (undo-tree-id11823 . -4) (undo-tree-id11824 . -4) (undo-tree-id11825 . -4) (undo-tree-id11826 . -4) (undo-tree-id11827 . -4) (undo-tree-id11828 . -4) (undo-tree-id11829 . -4) (undo-tree-id11830 . -4) (undo-tree-id11831 . -4) (undo-tree-id11832 . -4) (undo-tree-id11833 . -4) (undo-tree-id11834 . -4) (undo-tree-id11835 . -4) (undo-tree-id11836 . -4) (undo-tree-id11837 . -4) (undo-tree-id11838 . -4) (undo-tree-id11839 . -4) (undo-tree-id11840 . -4) (undo-tree-id11841 . -4) (undo-tree-id11842 . -4) (undo-tree-id11843 . -4) (undo-tree-id11844 . -4) (undo-tree-id11845 . -4) (undo-tree-id11846 . -4) (undo-tree-id11847 . -4) (undo-tree-id11848 . -4) (undo-tree-id11849 . -4) (undo-tree-id11850 . -4) (undo-tree-id11851 . -4) (undo-tree-id11852 . -4) (undo-tree-id11853 . -4) (undo-tree-id11854 . -4) 14748) nil (25934 7893 669648 339000) 0 nil])
([nil nil ((#("                Wij = nn.Linear(self.Na[i_pop], self.Na[j_pop], bias=False, dtype=self.FLOAT, device=self.device)
" 0 16 (fontified t) 16 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 36 (face font-lock-keyword-face fontified t) 36 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 45 (fontified t) 45 46 (face (rainbow-delimiters-depth-2-face) fontified t) 46 48 (fontified t) 48 52 (face font-lock-keyword-face fontified t) 52 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-2-face) fontified t) 56 61 (fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 68 (fontified t) 68 69 (face font-lock-operator-face fontified t) 69 74 (face font-lock-constant-face fontified t) 74 81 (fontified t) 81 82 (face font-lock-operator-face fontified t) 82 86 (face font-lock-keyword-face fontified t) 86 100 (fontified t) 100 101 (face font-lock-operator-face fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 112 (fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 114 (rear-nonsticky t fontified t)) . -1752) (undo-tree-id11971 . -74) (undo-tree-id11972 . -74) (undo-tree-id11973 . -74) (undo-tree-id11974 . -64) (undo-tree-id11975 . -64) (undo-tree-id11976 . -64) (undo-tree-id11977 . -64) (undo-tree-id11978 . -64) (undo-tree-id11979 . -64) (undo-tree-id11980 . -64) (undo-tree-id11981 . -64) (undo-tree-id11982 . -64) (undo-tree-id11983 . -64) (undo-tree-id11984 . -64) (undo-tree-id11985 . -64) (undo-tree-id11986 . -64) (undo-tree-id11987 . -64) (undo-tree-id11988 . -64) (undo-tree-id11989 . -64) (undo-tree-id11990 . -64) (undo-tree-id11991 . -64) (undo-tree-id11992 . -64) (undo-tree-id11993 . -64) (undo-tree-id11994 . -64) (undo-tree-id11995 . -64) (undo-tree-id11996 . -64) (undo-tree-id11997 . -64) (undo-tree-id11998 . -64) (undo-tree-id11999 . -64) (undo-tree-id12000 . -64) (undo-tree-id12001 . -64) (undo-tree-id12002 . -64) (undo-tree-id12003 . -64) (undo-tree-id12004 . -64) (undo-tree-id12005 . -64) (undo-tree-id12006 . -64) (undo-tree-id12007 . -64) (undo-tree-id12008 . -64) (undo-tree-id12009 . -64) (undo-tree-id12010 . -64) (undo-tree-id12011 . -64) (undo-tree-id12012 . -64) (undo-tree-id12013 . -64) (undo-tree-id12014 . -64) (undo-tree-id12015 . -64) (undo-tree-id12016 . -64) (undo-tree-id12017 . -64) (undo-tree-id12018 . -64) (undo-tree-id12019 . -64) (undo-tree-id12020 . -114) (undo-tree-id12021 . -114) (undo-tree-id12022 . -114) (undo-tree-id12023 . -114) (undo-tree-id12024 . -114) (undo-tree-id12025 . -114) (undo-tree-id12026 . -114) (undo-tree-id12027 . -114) (undo-tree-id12028 . -114) (undo-tree-id12029 . -114) (undo-tree-id12030 . -114) (undo-tree-id12031 . -114) (undo-tree-id12032 . -114) (undo-tree-id12033 . -114) (undo-tree-id12034 . -114) (undo-tree-id12035 . -114) (undo-tree-id12036 . -114) (undo-tree-id12037 . -114) (undo-tree-id12038 . -114) (undo-tree-id12039 . -114) (undo-tree-id12040 . -114) (undo-tree-id12041 . -114) (undo-tree-id12042 . -114) (undo-tree-id12043 . -114) (undo-tree-id12044 . -114) (undo-tree-id12045 . -114) (undo-tree-id12046 . -114) (undo-tree-id12047 . -114) (undo-tree-id12048 . -114) (undo-tree-id12049 . -114) (undo-tree-id12050 . -114) (undo-tree-id12051 . -114) (undo-tree-id12052 . -114) (undo-tree-id12053 . -114) 1866 (t 25934 7893 713956 702000)) nil (25934 7898 557876 978000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1768) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1768)) nil (25934 7898 557675 185000) 0 nil])
([nil nil ((apply 6 1994 2164 undo--wrap-and-run-primitive-undo 1994 2164 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2104) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2064) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2002) 2170))) nil (25934 7903 943437 99000) 0 nil])
([nil nil ((2172 . 2176) 2164) nil (25934 7903 943431 301000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2172) (undo-tree-id12054 . -4) (undo-tree-id12055 . -4) (undo-tree-id12056 . -4) (undo-tree-id12057 . -4) (undo-tree-id12058 . -4) (undo-tree-id12059 . -4) (undo-tree-id12060 . -4) (undo-tree-id12061 . -4) (undo-tree-id12062 . -4) (undo-tree-id12063 . -4) (undo-tree-id12064 . -4) (undo-tree-id12065 . -4) (undo-tree-id12066 . -4) (undo-tree-id12067 . -4) (undo-tree-id12068 . -4) (undo-tree-id12069 . -4) (undo-tree-id12070 . -4) (undo-tree-id12071 . -4) (undo-tree-id12072 . -4) (undo-tree-id12073 . -4) (undo-tree-id12074 . -4) (undo-tree-id12075 . -4) (undo-tree-id12076 . -4) (undo-tree-id12077 . -4) (undo-tree-id12078 . -4) (undo-tree-id12079 . -4) (undo-tree-id12080 . -4) (undo-tree-id12081 . -4) (undo-tree-id12082 . -4) (undo-tree-id12083 . -4) (undo-tree-id12084 . -4) (undo-tree-id12085 . -4) (undo-tree-id12086 . -4) (undo-tree-id12087 . -4) (undo-tree-id12088 . -4) (undo-tree-id12089 . -4) (undo-tree-id12090 . -4) (undo-tree-id12091 . -4) (undo-tree-id12092 . -4) (undo-tree-id12093 . -4) (undo-tree-id12094 . -4) (undo-tree-id12095 . -4) (undo-tree-id12096 . -4) (undo-tree-id12097 . -4) (undo-tree-id12098 . -4) (undo-tree-id12099 . -4) (undo-tree-id12100 . -4) (undo-tree-id12101 . -4) (undo-tree-id12102 . -4) (undo-tree-id12103 . -4) (undo-tree-id12104 . -4) (undo-tree-id12105 . -4) (undo-tree-id12106 . -4) (undo-tree-id12107 . -4) (undo-tree-id12108 . -4) (undo-tree-id12109 . -4) (undo-tree-id12110 . -4) (undo-tree-id12111 . -4) (undo-tree-id12112 . -4) (undo-tree-id12113 . -4) (undo-tree-id12114 . -4) (undo-tree-id12115 . -4) (undo-tree-id12116 . -4) (undo-tree-id12117 . -4) (undo-tree-id12118 . -4) (undo-tree-id12119 . -4) (undo-tree-id12120 . -4) (undo-tree-id12121 . -4) (undo-tree-id12122 . -4) (undo-tree-id12123 . -4) (undo-tree-id12124 . -4) (undo-tree-id12125 . -4) (undo-tree-id12126 . -4) (undo-tree-id12127 . -4) (undo-tree-id12128 . -4) (undo-tree-id12129 . -4) (undo-tree-id12130 . -4) (undo-tree-id12131 . -4) (undo-tree-id12132 . -4) (undo-tree-id12133 . -4) (undo-tree-id12134 . -4) (undo-tree-id12135 . -4) (undo-tree-id12136 . -4) (undo-tree-id12137 . -4) (undo-tree-id12138 . -4) (undo-tree-id12139 . -4) (undo-tree-id12140 . -4) (undo-tree-id12141 . -4) (undo-tree-id12142 . -4) (undo-tree-id12143 . -4) (undo-tree-id12144 . -4) (undo-tree-id12145 . -4) (undo-tree-id12146 . -4) (undo-tree-id12147 . -4) (undo-tree-id12148 . -4) (undo-tree-id12149 . -4) (undo-tree-id12150 . -4) (undo-tree-id12151 . -4) (undo-tree-id12152 . -4) (undo-tree-id12153 . -4) (undo-tree-id12154 . -4) (undo-tree-id12155 . -4) (undo-tree-id12156 . -4) (undo-tree-id12157 . -4) (undo-tree-id12158 . -4) (undo-tree-id12159 . -4) (undo-tree-id12160 . -4) (undo-tree-id12161 . -4) (undo-tree-id12162 . -4) (undo-tree-id12163 . -4) (undo-tree-id12164 . -4) (undo-tree-id12165 . -4) (undo-tree-id12166 . -4) (undo-tree-id12167 . -4) (undo-tree-id12168 . -4) (undo-tree-id12169 . -4) (undo-tree-id12170 . -4) (undo-tree-id12171 . -4) (undo-tree-id12172 . -4) (undo-tree-id12173 . -4) (undo-tree-id12174 . -4) (undo-tree-id12175 . -4) (undo-tree-id12176 . -4) (undo-tree-id12177 . -4) (undo-tree-id12178 . -4) (undo-tree-id12179 . -4) (undo-tree-id12180 . -4) (undo-tree-id12181 . -4) (undo-tree-id12182 . -4) (undo-tree-id12183 . -4) (undo-tree-id12184 . -4) (undo-tree-id12185 . -4) (undo-tree-id12186 . -4) (undo-tree-id12187 . -4) (undo-tree-id12188 . -4) (undo-tree-id12189 . -4) (undo-tree-id12190 . -4) (undo-tree-id12191 . -4) (undo-tree-id12192 . -4) (undo-tree-id12193 . -4) (undo-tree-id12194 . -4) (undo-tree-id12195 . -4) (undo-tree-id12196 . -4) (undo-tree-id12197 . -4) (undo-tree-id12198 . -4) (undo-tree-id12199 . -4) (undo-tree-id12200 . -4) (undo-tree-id12201 . -4) (undo-tree-id12202 . -4) (undo-tree-id12203 . -4) 2176 (t 25934 7903 973718 92000)) nil (25934 7905 461448 462000) 0 nil])
([nil nil ((2172 . 2174) (t 25934 7905 489686 866000)) nil (25934 7920 159232 500000) 0 nil])
([nil nil ((#("q" 0 1 (fontified nil)) . -2172) (undo-tree-id12204 . -1) (#("q" 0 1 (fontified t)) . -2173) (undo-tree-id12205 . -1) 2174) nil (25934 7920 159227 891000) 0 nil])
([nil nil ((2002 . 2004)) nil (25934 7920 159198 937000) 0 nil])
([nil nil ((apply 2 2888 2933 undo--wrap-and-run-primitive-undo 2888 2933 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2904) 2935))) nil (25934 7938 815501 647000) 0 nil])
([nil nil ((apply -2 2888 2952 undo--wrap-and-run-primitive-undo 2888 2952 ((2904 . 2906) 2888))) nil (25934 7981 975291 885000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2870) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) 2871 (t 25934 7982 13296 673000)) nil (25934 7984 453519 907000) 0 nil])
([nil nil ((3088 . 3104) (t 25934 7984 493319 176000)) nil (25934 7987 130246 793000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3438) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) 3439 (t 25934 7987 157345 488000)) nil (25934 7999 60214 171000) 0 nil])
([nil nil ((5759 . 5771) (t 25934 7999 113491 129000)) nil (25934 8043 414398 263000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5767) (undo-tree-id12279 . -4) 5771) nil (25934 8043 414390 439000) 0 nil])
([nil nil ((6771 . 6795) (#("                " 0 16 (fontified t)) . 6771) (t 25934 8043 454394 842000)) nil (25934 8385 727699 294000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6791) (undo-tree-id12280 . -4) (undo-tree-id12281 . -4) (undo-tree-id12282 . -4) (undo-tree-id12283 . -4) (undo-tree-id12284 . -4) (undo-tree-id12285 . -4) (undo-tree-id12286 . -4) (undo-tree-id12287 . -4) (undo-tree-id12288 . -4) (undo-tree-id12289 . -4) (undo-tree-id12290 . -4) (undo-tree-id12291 . -4) (undo-tree-id12292 . -4) (undo-tree-id12293 . -4) (undo-tree-id12294 . -4) (undo-tree-id12295 . -4) (undo-tree-id12296 . -4) (undo-tree-id12297 . -4) (undo-tree-id12298 . -4) (undo-tree-id12299 . -4) (undo-tree-id12300 . -4) (undo-tree-id12301 . -4) (undo-tree-id12302 . -4) (undo-tree-id12303 . -4) (undo-tree-id12304 . -4) (undo-tree-id12305 . -4) (undo-tree-id12306 . -4) (undo-tree-id12307 . -4) (undo-tree-id12308 . -4) (undo-tree-id12309 . -4) (undo-tree-id12310 . -4) (undo-tree-id12311 . -4) (undo-tree-id12312 . -4) (undo-tree-id12313 . -4) (undo-tree-id12314 . -4) (undo-tree-id12315 . -4) (undo-tree-id12316 . -4) (undo-tree-id12317 . -4) (undo-tree-id12318 . -4) (undo-tree-id12319 . -4) (undo-tree-id12320 . -4) (undo-tree-id12321 . -4) (undo-tree-id12322 . -4) (undo-tree-id12323 . -4) (undo-tree-id12324 . -4) (undo-tree-id12325 . -4) (undo-tree-id12326 . -4) (undo-tree-id12327 . -4) (undo-tree-id12328 . -4) (undo-tree-id12329 . -4) (undo-tree-id12330 . -4) (undo-tree-id12331 . -4) (undo-tree-id12332 . -4) (undo-tree-id12333 . -4) (undo-tree-id12334 . -4) (undo-tree-id12335 . -4) (undo-tree-id12336 . -4) (undo-tree-id12337 . -4) (undo-tree-id12338 . -4) (undo-tree-id12339 . -4) (undo-tree-id12340 . -4) (undo-tree-id12341 . -4) (undo-tree-id12342 . -4) (undo-tree-id12343 . -4) (undo-tree-id12344 . -4) (undo-tree-id12345 . -4) (undo-tree-id12346 . -4) (undo-tree-id12347 . -4) (undo-tree-id12348 . -4) (undo-tree-id12349 . -4) (undo-tree-id12350 . -4) (undo-tree-id12351 . -4) (undo-tree-id12352 . -4) (undo-tree-id12353 . -4) (undo-tree-id12354 . -4) (undo-tree-id12355 . -4) (undo-tree-id12356 . -4) (undo-tree-id12357 . -4) (undo-tree-id12358 . -4) 6795) nil (25934 8385 727690 808000) 0 nil])
([nil nil ((5520 . 5528) (t 25934 8385 773446 477000)) nil (25934 8551 899312 855000) 0 nil])
([nil nil ((5497 . 5505)) nil (25934 8551 899310 614000) 0 nil])
([nil nil ((apply -4 4303 4409 undo--wrap-and-run-primitive-undo 4303 4409 ((4353 . 4355) (4311 . 4313) 4303))) nil (25934 8551 899308 390000) 0 nil])
([nil nil ((apply -2 5189 5293 undo--wrap-and-run-primitive-undo 5189 5293 ((5197 . 5199) 5238))) nil (25934 8551 899305 207000) 0 nil])
([nil nil ((apply -2 5293 5356 undo--wrap-and-run-primitive-undo 5293 5356 ((5301 . 5303) 5345))) nil (25934 8551 899302 751000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5301) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5301)) nil (25934 8551 899298 825000) 0 nil])
([nil nil ((apply -2 5293 5356 undo--wrap-and-run-primitive-undo 5293 5356 ((5301 . 5303) 5345))) nil (25934 8551 899273 977000) 0 nil])
([nil nil ((apply -2 5356 5380 undo--wrap-and-run-primitive-undo 5356 5380 ((5364 . 5366) 5377))) nil (25934 8551 899270 977000) 0 nil])
([nil nil ((5348 . 5356) (#("        " 0 8 (fontified nil)) . 5347) (undo-tree-id12617 . -8) (5355 . 5356)) nil (25934 8551 899268 360000) 0 nil])
([nil nil ((5356 . 5373)) nil (25934 8551 899259 605000) 0 nil])
([nil nil ((#("        return net_inputs
" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 25 (fontified t) 25 26 (fontified t)) . 5348) (undo-tree-id12359 . -26) (undo-tree-id12360 . -26) (undo-tree-id12361 . -15) (undo-tree-id12362 . -14) (undo-tree-id12363 . -15) (undo-tree-id12364 . -15) (undo-tree-id12365 . -15) (undo-tree-id12366 . -15) (undo-tree-id12367 . -15) (undo-tree-id12368 . -15) (undo-tree-id12369 . -15) (undo-tree-id12370 . -15) (undo-tree-id12371 . -15) (undo-tree-id12372 . -15) (undo-tree-id12373 . -15) (undo-tree-id12374 . -15) (undo-tree-id12375 . -15) (undo-tree-id12376 . -15) (undo-tree-id12377 . -16) (undo-tree-id12378 . -15) (undo-tree-id12379 . -17) (undo-tree-id12380 . -15) (undo-tree-id12381 . -18) (undo-tree-id12382 . -15) (undo-tree-id12383 . -18) (undo-tree-id12384 . -18) (undo-tree-id12385 . -18) (undo-tree-id12386 . -18) (undo-tree-id12387 . -18) (undo-tree-id12388 . -18) (undo-tree-id12389 . -18) (undo-tree-id12390 . -18) (undo-tree-id12391 . -18) (undo-tree-id12392 . -18) (undo-tree-id12393 . -18) (undo-tree-id12394 . -18) (undo-tree-id12395 . -18) (undo-tree-id12396 . -18) (undo-tree-id12397 . -18) (undo-tree-id12398 . -18) (undo-tree-id12399 . -18) (undo-tree-id12400 . -18) (undo-tree-id12401 . -18) (undo-tree-id12402 . -18) (undo-tree-id12403 . -18) (undo-tree-id12404 . -18) (undo-tree-id12405 . -19) (undo-tree-id12406 . -18) (undo-tree-id12407 . -19) (undo-tree-id12408 . -19) (undo-tree-id12409 . -19) (undo-tree-id12410 . -19) (undo-tree-id12411 . -19) (undo-tree-id12412 . -19) (undo-tree-id12413 . -19) (undo-tree-id12414 . -19) (undo-tree-id12415 . -19) (undo-tree-id12416 . -19) (undo-tree-id12417 . -19) (undo-tree-id12418 . -19) (undo-tree-id12419 . -19) (undo-tree-id12420 . -19) (undo-tree-id12421 . -19) (undo-tree-id12422 . -19) (undo-tree-id12423 . -19) (undo-tree-id12424 . -19) (undo-tree-id12425 . -19) (undo-tree-id12426 . -19) (undo-tree-id12427 . -19) (undo-tree-id12428 . -19) (undo-tree-id12429 . -19) (undo-tree-id12430 . -19) (undo-tree-id12431 . -19) (undo-tree-id12432 . -19) (undo-tree-id12433 . -19) (undo-tree-id12434 . -19) (undo-tree-id12435 . -19) (undo-tree-id12436 . -19) (undo-tree-id12437 . -19) (undo-tree-id12438 . -19) (undo-tree-id12439 . -19) (undo-tree-id12440 . -19) (undo-tree-id12441 . -19) (undo-tree-id12442 . -19) (undo-tree-id12443 . -19) (undo-tree-id12444 . -19) (undo-tree-id12445 . -19) (undo-tree-id12446 . -19) (undo-tree-id12447 . -19) (undo-tree-id12448 . -19) (undo-tree-id12449 . -19) (undo-tree-id12450 . -20) (undo-tree-id12451 . -19) (undo-tree-id12452 . -20) (undo-tree-id12453 . -20) (undo-tree-id12454 . -20) (undo-tree-id12455 . -20) (undo-tree-id12456 . -20) (undo-tree-id12457 . -20) (undo-tree-id12458 . -20) (undo-tree-id12459 . -20) (undo-tree-id12460 . -20) (undo-tree-id12461 . -20) (undo-tree-id12462 . -20) (undo-tree-id12463 . -20) (undo-tree-id12464 . -20) (undo-tree-id12465 . -20) (undo-tree-id12466 . -20) (undo-tree-id12467 . -21) (undo-tree-id12468 . -20) (undo-tree-id12469 . -21) (undo-tree-id12470 . -21) (undo-tree-id12471 . -21) (undo-tree-id12472 . -21) (undo-tree-id12473 . -21) (undo-tree-id12474 . -21) (undo-tree-id12475 . -21) (undo-tree-id12476 . -21) (undo-tree-id12477 . -21) (undo-tree-id12478 . -21) (undo-tree-id12479 . -21) (undo-tree-id12480 . -21) (undo-tree-id12481 . -21) (undo-tree-id12482 . -21) (undo-tree-id12483 . -21) (undo-tree-id12484 . -21) (undo-tree-id12485 . -21) (undo-tree-id12486 . -21) (undo-tree-id12487 . -21) (undo-tree-id12488 . -21) (undo-tree-id12489 . -21) (undo-tree-id12490 . -21) (undo-tree-id12491 . -22) (undo-tree-id12492 . -21) (undo-tree-id12493 . -22) (undo-tree-id12494 . -22) (undo-tree-id12495 . -22) (undo-tree-id12496 . -22) (undo-tree-id12497 . -22) (undo-tree-id12498 . -22) (undo-tree-id12499 . -22) (undo-tree-id12500 . -22) (undo-tree-id12501 . -22) (undo-tree-id12502 . -22) (undo-tree-id12503 . -22) (undo-tree-id12504 . -22) (undo-tree-id12505 . -22) (undo-tree-id12506 . -22) (undo-tree-id12507 . -22) (undo-tree-id12508 . -22) (undo-tree-id12509 . -22) (undo-tree-id12510 . -22) (undo-tree-id12511 . -22) (undo-tree-id12512 . -22) (undo-tree-id12513 . -22) (undo-tree-id12514 . -22) (undo-tree-id12515 . -23) (undo-tree-id12516 . -22) (undo-tree-id12517 . -23) (undo-tree-id12518 . -23) (undo-tree-id12519 . -23) (undo-tree-id12520 . -23) (undo-tree-id12521 . -23) (undo-tree-id12522 . -23) (undo-tree-id12523 . -23) (undo-tree-id12524 . -23) (undo-tree-id12525 . -23) (undo-tree-id12526 . -23) (undo-tree-id12527 . -23) (undo-tree-id12528 . -23) (undo-tree-id12529 . -23) (undo-tree-id12530 . -23) (undo-tree-id12531 . -23) (undo-tree-id12532 . -23) (undo-tree-id12533 . -23) (undo-tree-id12534 . -23) (undo-tree-id12535 . -23) (undo-tree-id12536 . -23) (undo-tree-id12537 . -23) (undo-tree-id12538 . -23) (undo-tree-id12539 . -24) (undo-tree-id12540 . -23) (undo-tree-id12541 . -24) (undo-tree-id12542 . -24) (undo-tree-id12543 . -24) (undo-tree-id12544 . -24) (undo-tree-id12545 . -24) (undo-tree-id12546 . -24) (undo-tree-id12547 . -24) (undo-tree-id12548 . -24) (undo-tree-id12549 . -24) (undo-tree-id12550 . -24) (undo-tree-id12551 . -24) (undo-tree-id12552 . -24) (undo-tree-id12553 . -24) (undo-tree-id12554 . -24) (undo-tree-id12555 . -24) (undo-tree-id12556 . -24) (undo-tree-id12557 . -24) (undo-tree-id12558 . -24) (undo-tree-id12559 . -24) (undo-tree-id12560 . -24) (undo-tree-id12561 . -24) (undo-tree-id12562 . -24) (undo-tree-id12563 . -25) (undo-tree-id12564 . -24) (undo-tree-id12565 . -25) (undo-tree-id12566 . -25) (undo-tree-id12567 . -25) (undo-tree-id12568 . -25) (undo-tree-id12569 . -25) (undo-tree-id12570 . -25) (undo-tree-id12571 . -25) (undo-tree-id12572 . -25) (undo-tree-id12573 . -25) (undo-tree-id12574 . -25) (undo-tree-id12575 . -25) (undo-tree-id12576 . -25) (undo-tree-id12577 . -25) (undo-tree-id12578 . -25) (undo-tree-id12579 . -25) (undo-tree-id12580 . -25) (undo-tree-id12581 . -25) (undo-tree-id12582 . -25) (undo-tree-id12583 . -25) (undo-tree-id12584 . -25) (undo-tree-id12585 . -25) (undo-tree-id12586 . -25) (undo-tree-id12587 . -25) (undo-tree-id12588 . -26) (undo-tree-id12589 . -26) (undo-tree-id12590 . -26) (undo-tree-id12591 . -26) (undo-tree-id12592 . -26) (undo-tree-id12593 . -26) (undo-tree-id12594 . -26) (undo-tree-id12595 . -26) (undo-tree-id12596 . -26) (undo-tree-id12597 . -26) (undo-tree-id12598 . -26) (undo-tree-id12599 . -26) (undo-tree-id12600 . -26) (undo-tree-id12601 . -26) (undo-tree-id12602 . -26) (undo-tree-id12603 . -26) (undo-tree-id12604 . -26) (undo-tree-id12605 . -26) (undo-tree-id12606 . -26) (undo-tree-id12607 . -26) (undo-tree-id12608 . -26) (undo-tree-id12609 . -26) (undo-tree-id12610 . -26) (undo-tree-id12611 . -26) (undo-tree-id12612 . -26) (undo-tree-id12613 . -26) (undo-tree-id12614 . -26) (undo-tree-id12615 . -26) (undo-tree-id12616 . -26) 5374) nil (25934 8551 899217 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5396 . 5397) (nil fontified nil 5396 . 5397) (nil fontified nil 5385 . 5396) (nil fontified nil 5379 . 5385) (nil fontified nil 5371 . 5379) (5371 . 5397)) nil (25934 8551 897929 63000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5395) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (undo-tree-id12661 . -1) (undo-tree-id12662 . -1) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (undo-tree-id12682 . -1) (undo-tree-id12683 . -1) (undo-tree-id12684 . -1) (undo-tree-id12685 . -1) (undo-tree-id12686 . -1) (undo-tree-id12687 . -1) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) 5396 (t 25934 8551 958577 558000)) nil (25934 8554 274818 356000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5197) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5197) (t 25934 8554 310772 82000)) nil (25934 8584 581593 645000) 0 nil])
([nil nil ((apply -2 3289 3348 undo--wrap-and-run-primitive-undo 3289 3348 ((3305 . 3307) 3329))) nil (25934 8675 539975 546000) 0 nil])
([nil nil ((apply -6 2951 3111 undo--wrap-and-run-primitive-undo 2951 3111 ((3063 . 3065) (3015 . 3017) (2967 . 2969) 3088))) nil (25934 8679 178674 227000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3446) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (undo-tree-id12831 . -1) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (undo-tree-id13002 . -1) (undo-tree-id13003 . -1) (undo-tree-id13004 . -1) (undo-tree-id13005 . -1) (undo-tree-id13006 . -1) (undo-tree-id13007 . -1) (undo-tree-id13008 . -1) (undo-tree-id13009 . -1) (undo-tree-id13010 . -1) (undo-tree-id13011 . -1) (undo-tree-id13012 . -1) (undo-tree-id13013 . -1) (undo-tree-id13014 . -1) (undo-tree-id13015 . -1) (undo-tree-id13016 . -1) (undo-tree-id13017 . -1) (undo-tree-id13018 . -1) (undo-tree-id13019 . -1) (undo-tree-id13020 . -1) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) (undo-tree-id13025 . -1) (undo-tree-id13026 . -1) (undo-tree-id13027 . -1) (undo-tree-id13028 . -1) (undo-tree-id13029 . -1) (undo-tree-id13030 . -1) (undo-tree-id13031 . -1) (undo-tree-id13032 . -1) (undo-tree-id13033 . -1) (undo-tree-id13034 . -1) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) (undo-tree-id13037 . -1) (#(" " 0 1 (fontified t)) . -3447) (undo-tree-id13038 . -1) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (undo-tree-id13045 . -1) (undo-tree-id13046 . -1) (undo-tree-id13047 . -1) (undo-tree-id13048 . -1) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (undo-tree-id13051 . -1) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (undo-tree-id13054 . -1) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) (undo-tree-id13071 . -1) (undo-tree-id13072 . -1) (undo-tree-id13073 . -1) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (undo-tree-id13088 . -1) (undo-tree-id13089 . -1) (undo-tree-id13090 . -1) (undo-tree-id13091 . -1) (undo-tree-id13092 . -1) (undo-tree-id13093 . -1) (undo-tree-id13094 . -1) (undo-tree-id13095 . -1) (undo-tree-id13096 . -1) (undo-tree-id13097 . -1) (undo-tree-id13098 . -1) (undo-tree-id13099 . -1) (undo-tree-id13100 . -1) (undo-tree-id13101 . -1) (undo-tree-id13102 . -1) (undo-tree-id13103 . -1) (undo-tree-id13104 . -1) (undo-tree-id13105 . -1) (undo-tree-id13106 . -1) (undo-tree-id13107 . -1) (undo-tree-id13108 . -1) (undo-tree-id13109 . -1) (undo-tree-id13110 . -1) (undo-tree-id13111 . -1) (undo-tree-id13112 . -1) (undo-tree-id13113 . -1) (undo-tree-id13114 . -1) (undo-tree-id13115 . -1) (undo-tree-id13116 . -1) (undo-tree-id13117 . -1) (undo-tree-id13118 . -1) (undo-tree-id13119 . -1) (undo-tree-id13120 . -1) (undo-tree-id13121 . -1) (undo-tree-id13122 . -1) (undo-tree-id13123 . -1) (undo-tree-id13124 . -1) (undo-tree-id13125 . -1) (undo-tree-id13126 . -1) (undo-tree-id13127 . -1) (undo-tree-id13128 . -1) (undo-tree-id13129 . -1) (undo-tree-id13130 . -1) (undo-tree-id13131 . -1) (undo-tree-id13132 . -1) (undo-tree-id13133 . -1) (undo-tree-id13134 . -1) (undo-tree-id13135 . -1) (undo-tree-id13136 . -1) (undo-tree-id13137 . -1) (undo-tree-id13138 . -1) (undo-tree-id13139 . -1) (undo-tree-id13140 . -1) (undo-tree-id13141 . -1) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -1) (undo-tree-id13221 . -1) (undo-tree-id13222 . -1) (undo-tree-id13223 . -1) (undo-tree-id13224 . -1) (undo-tree-id13225 . -1) (undo-tree-id13226 . -1) (undo-tree-id13227 . -1) (undo-tree-id13228 . -1) (undo-tree-id13229 . -1) (undo-tree-id13230 . -1) (undo-tree-id13231 . -1) (undo-tree-id13232 . -1) (undo-tree-id13233 . -1) (undo-tree-id13234 . -1) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) (undo-tree-id13276 . -1) (undo-tree-id13277 . -1) (undo-tree-id13278 . -1) (undo-tree-id13279 . -1) (undo-tree-id13280 . -1) (undo-tree-id13281 . -1) (undo-tree-id13282 . -1) (undo-tree-id13283 . -1) (undo-tree-id13284 . -1) (undo-tree-id13285 . -1) (undo-tree-id13286 . -1) (undo-tree-id13287 . -1) (undo-tree-id13288 . -1) (undo-tree-id13289 . -1) (undo-tree-id13290 . -1) (undo-tree-id13291 . -1) (undo-tree-id13292 . -1) (undo-tree-id13293 . -1) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) (undo-tree-id13298 . -1) (undo-tree-id13299 . -1) (undo-tree-id13300 . -1) (undo-tree-id13301 . -1) (undo-tree-id13302 . -1) (undo-tree-id13303 . -1) (undo-tree-id13304 . -1) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1) (undo-tree-id13313 . -1) (undo-tree-id13314 . -1) (undo-tree-id13315 . -1) (undo-tree-id13316 . -1) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (undo-tree-id13324 . -1) (#(" " 0 1 (fontified t)) . -3448) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) (undo-tree-id13341 . -1) (undo-tree-id13342 . -1) (undo-tree-id13343 . -1) (undo-tree-id13344 . -1) (undo-tree-id13345 . -1) (undo-tree-id13346 . -1) (undo-tree-id13347 . -1) (undo-tree-id13348 . -1) (undo-tree-id13349 . -1) (undo-tree-id13350 . -1) (undo-tree-id13351 . -1) (undo-tree-id13352 . -1) (undo-tree-id13353 . -1) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (undo-tree-id13379 . -1) (undo-tree-id13380 . -1) (undo-tree-id13381 . -1) (undo-tree-id13382 . -1) (undo-tree-id13383 . -1) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (undo-tree-id13453 . -1) (undo-tree-id13454 . -1) (undo-tree-id13455 . -1) (undo-tree-id13456 . -1) (undo-tree-id13457 . -1) (undo-tree-id13458 . -1) (undo-tree-id13459 . -1) (undo-tree-id13460 . -1) (undo-tree-id13461 . -1) (undo-tree-id13462 . -1) (undo-tree-id13463 . -1) (undo-tree-id13464 . -1) (undo-tree-id13465 . -1) (undo-tree-id13466 . -1) (undo-tree-id13467 . -1) (undo-tree-id13468 . -1) (undo-tree-id13469 . -1) (undo-tree-id13470 . -1) (undo-tree-id13471 . -1) (undo-tree-id13472 . -1) (undo-tree-id13473 . -1) (undo-tree-id13474 . -1) (undo-tree-id13475 . -1) (undo-tree-id13476 . -1) (undo-tree-id13477 . -1) (undo-tree-id13478 . -1) (undo-tree-id13479 . -1) (undo-tree-id13480 . -1) (undo-tree-id13481 . -1) (undo-tree-id13482 . -1) (undo-tree-id13483 . -1) (undo-tree-id13484 . -1) (undo-tree-id13485 . -1) (undo-tree-id13486 . -1) (undo-tree-id13487 . -1) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) (undo-tree-id13534 . -1) (undo-tree-id13535 . -1) (undo-tree-id13536 . -1) (undo-tree-id13537 . -1) (undo-tree-id13538 . -1) (undo-tree-id13539 . -1) (undo-tree-id13540 . -1) (undo-tree-id13541 . -1) (undo-tree-id13542 . -1) (undo-tree-id13543 . -1) (undo-tree-id13544 . -1) (undo-tree-id13545 . -1) (undo-tree-id13546 . -1) (undo-tree-id13547 . -1) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) (undo-tree-id13550 . -1) (undo-tree-id13551 . -1) (undo-tree-id13552 . -1) (undo-tree-id13553 . -1) (undo-tree-id13554 . -1) (undo-tree-id13555 . -1) (undo-tree-id13556 . -1) (undo-tree-id13557 . -1) (undo-tree-id13558 . -1) (undo-tree-id13559 . -1) (undo-tree-id13560 . -1) (undo-tree-id13561 . -1) (undo-tree-id13562 . -1) (undo-tree-id13563 . -1) (undo-tree-id13564 . -1) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (#(" " 0 1 (fontified t)) . -3449) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1) (undo-tree-id13636 . -1) (undo-tree-id13637 . -1) (undo-tree-id13638 . -1) (undo-tree-id13639 . -1) (undo-tree-id13640 . -1) (undo-tree-id13641 . -1) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) (undo-tree-id13779 . -1) (undo-tree-id13780 . -1) (undo-tree-id13781 . -1) (undo-tree-id13782 . -1) (undo-tree-id13783 . -1) (undo-tree-id13784 . -1) (undo-tree-id13785 . -1) (undo-tree-id13786 . -1) (undo-tree-id13787 . -1) (undo-tree-id13788 . -1) (undo-tree-id13789 . -1) (undo-tree-id13790 . -1) (undo-tree-id13791 . -1) (undo-tree-id13792 . -1) (undo-tree-id13793 . -1) (undo-tree-id13794 . -1) (undo-tree-id13795 . -1) (undo-tree-id13796 . -1) (undo-tree-id13797 . -1) (undo-tree-id13798 . -1) (undo-tree-id13799 . -1) (undo-tree-id13800 . -1) (undo-tree-id13801 . -1) (undo-tree-id13802 . -1) (undo-tree-id13803 . -1) (undo-tree-id13804 . -1) (undo-tree-id13805 . -1) (undo-tree-id13806 . -1) (undo-tree-id13807 . -1) (undo-tree-id13808 . -1) (undo-tree-id13809 . -1) (undo-tree-id13810 . -1) (undo-tree-id13811 . -1) (undo-tree-id13812 . -1) (undo-tree-id13813 . -1) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (#(" " 0 1 (fontified t)) . -3450) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) (undo-tree-id13850 . -1) (undo-tree-id13851 . -1) (undo-tree-id13852 . -1) (undo-tree-id13853 . -1) (undo-tree-id13854 . -1) (undo-tree-id13855 . -1) (undo-tree-id13856 . -1) (undo-tree-id13857 . -1) (undo-tree-id13858 . -1) (undo-tree-id13859 . -1) (undo-tree-id13860 . -1) (undo-tree-id13861 . -1) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (undo-tree-id13864 . -1) (undo-tree-id13865 . -1) (undo-tree-id13866 . -1) (undo-tree-id13867 . -1) (undo-tree-id13868 . -1) (undo-tree-id13869 . -1) (undo-tree-id13870 . -1) (undo-tree-id13871 . -1) (undo-tree-id13872 . -1) (undo-tree-id13873 . -1) (undo-tree-id13874 . -1) (undo-tree-id13875 . -1) (undo-tree-id13876 . -1) (undo-tree-id13877 . -1) (undo-tree-id13878 . -1) (undo-tree-id13879 . -1) (undo-tree-id13880 . -1) (undo-tree-id13881 . -1) (undo-tree-id13882 . -1) (undo-tree-id13883 . -1) (undo-tree-id13884 . -1) (undo-tree-id13885 . -1) (undo-tree-id13886 . -1) (undo-tree-id13887 . -1) (undo-tree-id13888 . -1) (undo-tree-id13889 . -1) (undo-tree-id13890 . -1) (undo-tree-id13891 . -1) (undo-tree-id13892 . -1) (undo-tree-id13893 . -1) (undo-tree-id13894 . -1) (undo-tree-id13895 . -1) (undo-tree-id13896 . -1) (undo-tree-id13897 . -1) (undo-tree-id13898 . -1) (undo-tree-id13899 . -1) (undo-tree-id13900 . -1) (undo-tree-id13901 . -1) (undo-tree-id13902 . -1) (undo-tree-id13903 . -1) (undo-tree-id13904 . -1) (undo-tree-id13905 . -1) (undo-tree-id13906 . -1) (undo-tree-id13907 . -1) (undo-tree-id13908 . -1) (undo-tree-id13909 . -1) (undo-tree-id13910 . -1) (undo-tree-id13911 . -1) (undo-tree-id13912 . -1) (undo-tree-id13913 . -1) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (undo-tree-id13916 . -1) (undo-tree-id13917 . -1) (undo-tree-id13918 . -1) (undo-tree-id13919 . -1) (undo-tree-id13920 . -1) (undo-tree-id13921 . -1) (undo-tree-id13922 . -1) (undo-tree-id13923 . -1) (undo-tree-id13924 . -1) (undo-tree-id13925 . -1) (undo-tree-id13926 . -1) (undo-tree-id13927 . -1) (undo-tree-id13928 . -1) (undo-tree-id13929 . -1) (undo-tree-id13930 . -1) (undo-tree-id13931 . -1) (undo-tree-id13932 . -1) (undo-tree-id13933 . -1) (undo-tree-id13934 . -1) (undo-tree-id13935 . -1) (undo-tree-id13936 . -1) (undo-tree-id13937 . -1) (undo-tree-id13938 . -1) (undo-tree-id13939 . -1) (undo-tree-id13940 . -1) (undo-tree-id13941 . -1) (undo-tree-id13942 . -1) (undo-tree-id13943 . -1) (undo-tree-id13944 . -1) (undo-tree-id13945 . -1) (undo-tree-id13946 . -1) (undo-tree-id13947 . -1) (undo-tree-id13948 . -1) (undo-tree-id13949 . -1) (undo-tree-id13950 . -1) (undo-tree-id13951 . -1) (undo-tree-id13952 . -1) (undo-tree-id13953 . -1) (undo-tree-id13954 . -1) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1) (undo-tree-id13959 . -1) (undo-tree-id13960 . -1) (undo-tree-id13961 . -1) (undo-tree-id13962 . -1) (undo-tree-id13963 . -1) (undo-tree-id13964 . -1) (undo-tree-id13965 . -1) (undo-tree-id13966 . -1) (undo-tree-id13967 . -1) (undo-tree-id13968 . -1) (undo-tree-id13969 . -1) (undo-tree-id13970 . -1) (undo-tree-id13971 . -1) (undo-tree-id13972 . -1) (undo-tree-id13973 . -1) (undo-tree-id13974 . -1) (undo-tree-id13975 . -1) (undo-tree-id13976 . -1) (undo-tree-id13977 . -1) (undo-tree-id13978 . -1) (undo-tree-id13979 . -1) (undo-tree-id13980 . -1) (undo-tree-id13981 . -1) (undo-tree-id13982 . -1) (undo-tree-id13983 . -1) (undo-tree-id13984 . -1) (undo-tree-id13985 . -1) (undo-tree-id13986 . -1) (undo-tree-id13987 . -1) (undo-tree-id13988 . -1) (undo-tree-id13989 . -1) (undo-tree-id13990 . -1) (undo-tree-id13991 . -1) (undo-tree-id13992 . -1) (undo-tree-id13993 . -1) (undo-tree-id13994 . -1) (undo-tree-id13995 . -1) (undo-tree-id13996 . -1) (undo-tree-id13997 . -1) (undo-tree-id13998 . -1) (undo-tree-id13999 . -1) (undo-tree-id14000 . -1) (undo-tree-id14001 . -1) (undo-tree-id14002 . -1) (undo-tree-id14003 . -1) (undo-tree-id14004 . -1) (undo-tree-id14005 . -1) (undo-tree-id14006 . -1) (undo-tree-id14007 . -1) (undo-tree-id14008 . -1) (undo-tree-id14009 . -1) (undo-tree-id14010 . -1) (undo-tree-id14011 . -1) (undo-tree-id14012 . -1) (undo-tree-id14013 . -1) (undo-tree-id14014 . -1) (undo-tree-id14015 . -1) (undo-tree-id14016 . -1) (undo-tree-id14017 . -1) (undo-tree-id14018 . -1) (undo-tree-id14019 . -1) (undo-tree-id14020 . -1) (undo-tree-id14021 . -1) (undo-tree-id14022 . -1) (undo-tree-id14023 . -1) (undo-tree-id14024 . -1) (undo-tree-id14025 . -1) (undo-tree-id14026 . -1) (undo-tree-id14027 . -1) (undo-tree-id14028 . -1) (undo-tree-id14029 . -1) (undo-tree-id14030 . -1) (undo-tree-id14031 . -1) (undo-tree-id14032 . -1) (undo-tree-id14033 . -1) (undo-tree-id14034 . -1) (undo-tree-id14035 . -1) (undo-tree-id14036 . -1) (undo-tree-id14037 . -1) (undo-tree-id14038 . -1) (undo-tree-id14039 . -1) (undo-tree-id14040 . -1) (undo-tree-id14041 . -1) (undo-tree-id14042 . -1) (undo-tree-id14043 . -1) (undo-tree-id14044 . -1) (undo-tree-id14045 . -1) (undo-tree-id14046 . -1) (undo-tree-id14047 . -1) (undo-tree-id14048 . -1) (undo-tree-id14049 . -1) (undo-tree-id14050 . -1) (undo-tree-id14051 . -1) (undo-tree-id14052 . -1) (undo-tree-id14053 . -1) (undo-tree-id14054 . -1) (undo-tree-id14055 . -1) (undo-tree-id14056 . -1) (undo-tree-id14057 . -1) (undo-tree-id14058 . -1) (undo-tree-id14059 . -1) (undo-tree-id14060 . -1) (undo-tree-id14061 . -1) (undo-tree-id14062 . -1) (undo-tree-id14063 . -1) (undo-tree-id14064 . -1) (undo-tree-id14065 . -1) (undo-tree-id14066 . -1) (undo-tree-id14067 . -1) (undo-tree-id14068 . -1) (undo-tree-id14069 . -1) (undo-tree-id14070 . -1) (undo-tree-id14071 . -1) (undo-tree-id14072 . -1) (undo-tree-id14073 . -1) (undo-tree-id14074 . -1) (undo-tree-id14075 . -1) (undo-tree-id14076 . -1) (undo-tree-id14077 . -1) (undo-tree-id14078 . -1) (undo-tree-id14079 . -1) (undo-tree-id14080 . -1) (undo-tree-id14081 . -1) (undo-tree-id14082 . -1) (undo-tree-id14083 . -1) (#(" " 0 1 (fontified t)) . -3451) (undo-tree-id14084 . -1) (undo-tree-id14085 . -1) (undo-tree-id14086 . -1) (undo-tree-id14087 . -1) (undo-tree-id14088 . -1) (undo-tree-id14089 . -1) (undo-tree-id14090 . -1) (undo-tree-id14091 . -1) (undo-tree-id14092 . -1) (undo-tree-id14093 . -1) (undo-tree-id14094 . -1) (undo-tree-id14095 . -1) (undo-tree-id14096 . -1) (undo-tree-id14097 . -1) (undo-tree-id14098 . -1) (undo-tree-id14099 . -1) (undo-tree-id14100 . -1) (undo-tree-id14101 . -1) (undo-tree-id14102 . -1) (undo-tree-id14103 . -1) (undo-tree-id14104 . -1) (undo-tree-id14105 . -1) (undo-tree-id14106 . -1) (undo-tree-id14107 . -1) (undo-tree-id14108 . -1) (undo-tree-id14109 . -1) (undo-tree-id14110 . -1) (undo-tree-id14111 . -1) (undo-tree-id14112 . -1) (undo-tree-id14113 . -1) (undo-tree-id14114 . -1) (undo-tree-id14115 . -1) (undo-tree-id14116 . -1) (undo-tree-id14117 . -1) (undo-tree-id14118 . -1) (undo-tree-id14119 . -1) (undo-tree-id14120 . -1) (undo-tree-id14121 . -1) (undo-tree-id14122 . -1) (undo-tree-id14123 . -1) (undo-tree-id14124 . -1) (undo-tree-id14125 . -1) (undo-tree-id14126 . -1) (undo-tree-id14127 . -1) (undo-tree-id14128 . -1) (undo-tree-id14129 . -1) (undo-tree-id14130 . -1) (undo-tree-id14131 . -1) (undo-tree-id14132 . -1) (undo-tree-id14133 . -1) (undo-tree-id14134 . -1) (undo-tree-id14135 . -1) (undo-tree-id14136 . -1) (undo-tree-id14137 . -1) (undo-tree-id14138 . -1) (undo-tree-id14139 . -1) (undo-tree-id14140 . -1) (undo-tree-id14141 . -1) (undo-tree-id14142 . -1) (undo-tree-id14143 . -1) (undo-tree-id14144 . -1) (undo-tree-id14145 . -1) (undo-tree-id14146 . -1) (undo-tree-id14147 . -1) (undo-tree-id14148 . -1) (undo-tree-id14149 . -1) (undo-tree-id14150 . -1) (undo-tree-id14151 . -1) (undo-tree-id14152 . -1) (undo-tree-id14153 . -1) (undo-tree-id14154 . -1) (undo-tree-id14155 . -1) (undo-tree-id14156 . -1) (undo-tree-id14157 . -1) (undo-tree-id14158 . -1) (undo-tree-id14159 . -1) (undo-tree-id14160 . -1) (undo-tree-id14161 . -1) (undo-tree-id14162 . -1) (undo-tree-id14163 . -1) (undo-tree-id14164 . -1) (undo-tree-id14165 . -1) (undo-tree-id14166 . -1) (undo-tree-id14167 . -1) (undo-tree-id14168 . -1) (undo-tree-id14169 . -1) (undo-tree-id14170 . -1) (undo-tree-id14171 . -1) (undo-tree-id14172 . -1) (undo-tree-id14173 . -1) (undo-tree-id14174 . -1) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (undo-tree-id14177 . -1) (undo-tree-id14178 . -1) (undo-tree-id14179 . -1) (undo-tree-id14180 . -1) (undo-tree-id14181 . -1) (undo-tree-id14182 . -1) (undo-tree-id14183 . -1) (undo-tree-id14184 . -1) (undo-tree-id14185 . -1) (undo-tree-id14186 . -1) (undo-tree-id14187 . -1) (undo-tree-id14188 . -1) (undo-tree-id14189 . -1) (undo-tree-id14190 . -1) (undo-tree-id14191 . -1) (undo-tree-id14192 . -1) (undo-tree-id14193 . -1) (undo-tree-id14194 . -1) (undo-tree-id14195 . -1) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1) (undo-tree-id14244 . -1) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (undo-tree-id14248 . -1) (undo-tree-id14249 . -1) (undo-tree-id14250 . -1) (undo-tree-id14251 . -1) (undo-tree-id14252 . -1) (undo-tree-id14253 . -1) (undo-tree-id14254 . -1) (undo-tree-id14255 . -1) (undo-tree-id14256 . -1) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (undo-tree-id14259 . -1) (undo-tree-id14260 . -1) (undo-tree-id14261 . -1) (undo-tree-id14262 . -1) (undo-tree-id14263 . -1) (undo-tree-id14264 . -1) (undo-tree-id14265 . -1) (undo-tree-id14266 . -1) (undo-tree-id14267 . -1) (undo-tree-id14268 . -1) (undo-tree-id14269 . -1) (undo-tree-id14270 . -1) (undo-tree-id14271 . -1) (undo-tree-id14272 . -1) (undo-tree-id14273 . -1) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (undo-tree-id14276 . -1) (undo-tree-id14277 . -1) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (#(" " 0 1 (fontified t)) . -3452) (undo-tree-id14303 . -1) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . -1) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) (undo-tree-id14325 . -1) (undo-tree-id14326 . -1) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . -1) (undo-tree-id14330 . -1) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) (undo-tree-id14337 . -1) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) (undo-tree-id14340 . -1) (undo-tree-id14341 . -1) (undo-tree-id14342 . -1) (undo-tree-id14343 . -1) (undo-tree-id14344 . -1) (undo-tree-id14345 . -1) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) (undo-tree-id14350 . -1) (undo-tree-id14351 . -1) (undo-tree-id14352 . -1) (undo-tree-id14353 . -1) (undo-tree-id14354 . -1) (undo-tree-id14355 . -1) (undo-tree-id14356 . -1) (undo-tree-id14357 . -1) (undo-tree-id14358 . -1) (undo-tree-id14359 . -1) (undo-tree-id14360 . -1) (undo-tree-id14361 . -1) (undo-tree-id14362 . -1) (undo-tree-id14363 . -1) (undo-tree-id14364 . -1) (undo-tree-id14365 . -1) (undo-tree-id14366 . -1) (undo-tree-id14367 . -1) (undo-tree-id14368 . -1) (undo-tree-id14369 . -1) (undo-tree-id14370 . -1) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) (undo-tree-id14373 . -1) (undo-tree-id14374 . -1) (undo-tree-id14375 . -1) (undo-tree-id14376 . -1) (undo-tree-id14377 . -1) (undo-tree-id14378 . -1) (undo-tree-id14379 . -1) (undo-tree-id14380 . -1) (undo-tree-id14381 . -1) (undo-tree-id14382 . -1) (undo-tree-id14383 . -1) (undo-tree-id14384 . -1) (undo-tree-id14385 . -1) (undo-tree-id14386 . -1) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) (undo-tree-id14391 . -1) (undo-tree-id14392 . -1) (undo-tree-id14393 . -1) (undo-tree-id14394 . -1) (undo-tree-id14395 . -1) (undo-tree-id14396 . -1) (undo-tree-id14397 . -1) (undo-tree-id14398 . -1) (undo-tree-id14399 . -1) (undo-tree-id14400 . -1) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) (undo-tree-id14405 . -1) (undo-tree-id14406 . -1) (undo-tree-id14407 . -1) (undo-tree-id14408 . -1) (undo-tree-id14409 . -1) (undo-tree-id14410 . -1) (undo-tree-id14411 . -1) (undo-tree-id14412 . -1) (undo-tree-id14413 . -1) (undo-tree-id14414 . -1) (undo-tree-id14415 . -1) (undo-tree-id14416 . -1) (undo-tree-id14417 . -1) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) (undo-tree-id14420 . -1) (undo-tree-id14421 . -1) (undo-tree-id14422 . -1) (undo-tree-id14423 . -1) (undo-tree-id14424 . -1) (undo-tree-id14425 . -1) (undo-tree-id14426 . -1) (undo-tree-id14427 . -1) (undo-tree-id14428 . -1) (undo-tree-id14429 . -1) (undo-tree-id14430 . -1) (undo-tree-id14431 . -1) (undo-tree-id14432 . -1) (undo-tree-id14433 . -1) (undo-tree-id14434 . -1) (undo-tree-id14435 . -1) (undo-tree-id14436 . -1) (undo-tree-id14437 . -1) (undo-tree-id14438 . -1) (undo-tree-id14439 . -1) (undo-tree-id14440 . -1) (undo-tree-id14441 . -1) (undo-tree-id14442 . -1) (undo-tree-id14443 . -1) (undo-tree-id14444 . -1) (undo-tree-id14445 . -1) (undo-tree-id14446 . -1) (undo-tree-id14447 . -1) (undo-tree-id14448 . -1) (undo-tree-id14449 . -1) (undo-tree-id14450 . -1) (undo-tree-id14451 . -1) (undo-tree-id14452 . -1) (undo-tree-id14453 . -1) (undo-tree-id14454 . -1) (undo-tree-id14455 . -1) (undo-tree-id14456 . -1) (undo-tree-id14457 . -1) (undo-tree-id14458 . -1) (undo-tree-id14459 . -1) (undo-tree-id14460 . -1) (undo-tree-id14461 . -1) (undo-tree-id14462 . -1) (undo-tree-id14463 . -1) (undo-tree-id14464 . -1) (undo-tree-id14465 . -1) (undo-tree-id14466 . -1) (undo-tree-id14467 . -1) (undo-tree-id14468 . -1) (undo-tree-id14469 . -1) (undo-tree-id14470 . -1) (undo-tree-id14471 . -1) (undo-tree-id14472 . -1) (undo-tree-id14473 . -1) (undo-tree-id14474 . -1) (undo-tree-id14475 . -1) (undo-tree-id14476 . -1) (undo-tree-id14477 . -1) (undo-tree-id14478 . -1) (undo-tree-id14479 . -1) (undo-tree-id14480 . -1) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (undo-tree-id14483 . -1) (undo-tree-id14484 . -1) (undo-tree-id14485 . -1) (undo-tree-id14486 . -1) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (undo-tree-id14497 . -1) (undo-tree-id14498 . -1) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (#(" " 0 1 (fontified t)) . -3453) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) (undo-tree-id14529 . -1) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) (undo-tree-id14540 . -1) (undo-tree-id14541 . -1) (undo-tree-id14542 . -1) (undo-tree-id14543 . -1) (undo-tree-id14544 . -1) (undo-tree-id14545 . -1) (undo-tree-id14546 . -1) (undo-tree-id14547 . -1) (undo-tree-id14548 . -1) (undo-tree-id14549 . -1) (undo-tree-id14550 . -1) (undo-tree-id14551 . -1) (undo-tree-id14552 . -1) (undo-tree-id14553 . -1) (undo-tree-id14554 . -1) (undo-tree-id14555 . -1) (undo-tree-id14556 . -1) (undo-tree-id14557 . -1) (undo-tree-id14558 . -1) (undo-tree-id14559 . -1) (undo-tree-id14560 . -1) (undo-tree-id14561 . -1) (undo-tree-id14562 . -1) (undo-tree-id14563 . -1) (undo-tree-id14564 . -1) (undo-tree-id14565 . -1) (undo-tree-id14566 . -1) (undo-tree-id14567 . -1) (undo-tree-id14568 . -1) (undo-tree-id14569 . -1) (undo-tree-id14570 . -1) (undo-tree-id14571 . -1) (undo-tree-id14572 . -1) (undo-tree-id14573 . -1) (undo-tree-id14574 . -1) (undo-tree-id14575 . -1) (undo-tree-id14576 . -1) (undo-tree-id14577 . -1) (undo-tree-id14578 . -1) (undo-tree-id14579 . -1) (undo-tree-id14580 . -1) (undo-tree-id14581 . -1) (undo-tree-id14582 . -1) (undo-tree-id14583 . -1) (undo-tree-id14584 . -1) (undo-tree-id14585 . -1) (undo-tree-id14586 . -1) (undo-tree-id14587 . -1) (undo-tree-id14588 . -1) (undo-tree-id14589 . -1) (undo-tree-id14590 . -1) (undo-tree-id14591 . -1) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1) (undo-tree-id14603 . -1) (undo-tree-id14604 . -1) (undo-tree-id14605 . -1) (undo-tree-id14606 . -1) (undo-tree-id14607 . -1) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1) (undo-tree-id14612 . -1) (undo-tree-id14613 . -1) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1) (undo-tree-id14616 . -1) (undo-tree-id14617 . -1) (undo-tree-id14618 . -1) (undo-tree-id14619 . -1) (undo-tree-id14620 . -1) (undo-tree-id14621 . -1) (undo-tree-id14622 . -1) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1) (undo-tree-id14625 . -1) (undo-tree-id14626 . -1) (undo-tree-id14627 . -1) (undo-tree-id14628 . -1) (undo-tree-id14629 . -1) (undo-tree-id14630 . -1) (undo-tree-id14631 . -1) (undo-tree-id14632 . -1) (undo-tree-id14633 . -1) (undo-tree-id14634 . -1) (undo-tree-id14635 . -1) (undo-tree-id14636 . -1) (undo-tree-id14637 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) (undo-tree-id14645 . -1) (undo-tree-id14646 . -1) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1) (undo-tree-id14649 . -1) (undo-tree-id14650 . -1) (undo-tree-id14651 . -1) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) (undo-tree-id14671 . -1) (undo-tree-id14672 . -1) (undo-tree-id14673 . -1) (undo-tree-id14674 . -1) (undo-tree-id14675 . -1) (undo-tree-id14676 . -1) (undo-tree-id14677 . -1) (undo-tree-id14678 . -1) (undo-tree-id14679 . -1) (undo-tree-id14680 . -1) (undo-tree-id14681 . -1) (undo-tree-id14682 . -1) (undo-tree-id14683 . -1) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (undo-tree-id14686 . -1) (undo-tree-id14687 . -1) (undo-tree-id14688 . -1) (undo-tree-id14689 . -1) (#(" " 0 1 (fontified t)) . -3454) (undo-tree-id14690 . -1) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) (undo-tree-id14709 . -1) (undo-tree-id14710 . -1) (undo-tree-id14711 . -1) (undo-tree-id14712 . -1) (undo-tree-id14713 . -1) (undo-tree-id14714 . -1) (undo-tree-id14715 . -1) (undo-tree-id14716 . -1) (undo-tree-id14717 . -1) (undo-tree-id14718 . -1) (undo-tree-id14719 . -1) (undo-tree-id14720 . -1) (undo-tree-id14721 . -1) (undo-tree-id14722 . -1) (undo-tree-id14723 . -1) (undo-tree-id14724 . -1) (undo-tree-id14725 . -1) (undo-tree-id14726 . -1) (undo-tree-id14727 . -1) (undo-tree-id14728 . -1) (undo-tree-id14729 . -1) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) (undo-tree-id14744 . -1) (undo-tree-id14745 . -1) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) (undo-tree-id14798 . -1) (undo-tree-id14799 . -1) (undo-tree-id14800 . -1) (undo-tree-id14801 . -1) (undo-tree-id14802 . -1) (undo-tree-id14803 . -1) (undo-tree-id14804 . -1) (undo-tree-id14805 . -1) (undo-tree-id14806 . -1) (undo-tree-id14807 . -1) (undo-tree-id14808 . -1) (undo-tree-id14809 . -1) (undo-tree-id14810 . -1) (undo-tree-id14811 . -1) (undo-tree-id14812 . -1) (undo-tree-id14813 . -1) (undo-tree-id14814 . -1) (undo-tree-id14815 . -1) (undo-tree-id14816 . -1) (undo-tree-id14817 . -1) (undo-tree-id14818 . -1) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) (undo-tree-id14821 . -1) (undo-tree-id14822 . -1) (undo-tree-id14823 . -1) (undo-tree-id14824 . -1) (undo-tree-id14825 . -1) (undo-tree-id14826 . -1) (undo-tree-id14827 . -1) (undo-tree-id14828 . -1) (undo-tree-id14829 . -1) (undo-tree-id14830 . -1) (undo-tree-id14831 . -1) (undo-tree-id14832 . -1) (undo-tree-id14833 . -1) (undo-tree-id14834 . -1) (undo-tree-id14835 . -1) (undo-tree-id14836 . -1) (undo-tree-id14837 . -1) (undo-tree-id14838 . -1) (undo-tree-id14839 . -1) (undo-tree-id14840 . -1) (undo-tree-id14841 . -1) (undo-tree-id14842 . -1) (undo-tree-id14843 . -1) (undo-tree-id14844 . -1) (undo-tree-id14845 . -1) (undo-tree-id14846 . -1) (undo-tree-id14847 . -1) (undo-tree-id14848 . -1) (undo-tree-id14849 . -1) (undo-tree-id14850 . -1) (undo-tree-id14851 . -1) (undo-tree-id14852 . -1) (undo-tree-id14853 . -1) (undo-tree-id14854 . -1) (undo-tree-id14855 . -1) (undo-tree-id14856 . -1) (undo-tree-id14857 . -1) (#(" " 0 1 (fontified t)) . -3455) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (undo-tree-id14862 . -1) (undo-tree-id14863 . -1) (undo-tree-id14864 . -1) (undo-tree-id14865 . -1) (undo-tree-id14866 . -1) (undo-tree-id14867 . -1) (undo-tree-id14868 . -1) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) (undo-tree-id14871 . -1) (undo-tree-id14872 . -1) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (undo-tree-id14891 . -1) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (undo-tree-id14953 . -1) (undo-tree-id14954 . -1) (undo-tree-id14955 . -1) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (undo-tree-id14958 . -1) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (undo-tree-id14965 . -1) (undo-tree-id14966 . -1) (undo-tree-id14967 . -1) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) (undo-tree-id14970 . -1) (undo-tree-id14971 . -1) (undo-tree-id14972 . -1) (undo-tree-id14973 . -1) (undo-tree-id14974 . -1) (undo-tree-id14975 . -1) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (undo-tree-id14978 . -1) (undo-tree-id14979 . -1) (undo-tree-id14980 . -1) (undo-tree-id14981 . -1) (undo-tree-id14982 . -1) (undo-tree-id14983 . -1) (undo-tree-id14984 . -1) (undo-tree-id14985 . -1) (undo-tree-id14986 . -1) (undo-tree-id14987 . -1) (undo-tree-id14988 . -1) (undo-tree-id14989 . -1) (undo-tree-id14990 . -1) (undo-tree-id14991 . -1) (undo-tree-id14992 . -1) (undo-tree-id14993 . -1) (undo-tree-id14994 . -1) (undo-tree-id14995 . -1) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (undo-tree-id14998 . -1) (undo-tree-id14999 . -1) (undo-tree-id15000 . -1) (undo-tree-id15001 . -1) (undo-tree-id15002 . -1) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (undo-tree-id15005 . -1) (undo-tree-id15006 . -1) (undo-tree-id15007 . -1) (undo-tree-id15008 . -1) (#(" " 0 1 (fontified t)) . -3456) (undo-tree-id15009 . -1) (undo-tree-id15010 . -1) (undo-tree-id15011 . -1) (undo-tree-id15012 . -1) (undo-tree-id15013 . -1) (undo-tree-id15014 . -1) (undo-tree-id15015 . -1) (undo-tree-id15016 . -1) (undo-tree-id15017 . -1) (undo-tree-id15018 . -1) (undo-tree-id15019 . -1) (undo-tree-id15020 . -1) (undo-tree-id15021 . -1) (undo-tree-id15022 . -1) (undo-tree-id15023 . -1) (undo-tree-id15024 . -1) (undo-tree-id15025 . -1) (undo-tree-id15026 . -1) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1) (undo-tree-id15031 . -1) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (undo-tree-id15034 . -1) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) (undo-tree-id15037 . -1) (undo-tree-id15038 . -1) (undo-tree-id15039 . -1) (undo-tree-id15040 . -1) (undo-tree-id15041 . -1) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (undo-tree-id15044 . -1) (undo-tree-id15045 . -1) (undo-tree-id15046 . -1) (undo-tree-id15047 . -1) (undo-tree-id15048 . -1) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (undo-tree-id15051 . -1) (undo-tree-id15052 . -1) (undo-tree-id15053 . -1) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) (undo-tree-id15056 . -1) (undo-tree-id15057 . -1) (undo-tree-id15058 . -1) (undo-tree-id15059 . -1) (undo-tree-id15060 . -1) (undo-tree-id15061 . -1) (undo-tree-id15062 . -1) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (undo-tree-id15065 . -1) (undo-tree-id15066 . -1) (undo-tree-id15067 . -1) (undo-tree-id15068 . -1) (undo-tree-id15069 . -1) (undo-tree-id15070 . -1) (undo-tree-id15071 . -1) (undo-tree-id15072 . -1) (undo-tree-id15073 . -1) (undo-tree-id15074 . -1) (undo-tree-id15075 . -1) (undo-tree-id15076 . -1) (undo-tree-id15077 . -1) (undo-tree-id15078 . -1) (undo-tree-id15079 . -1) (undo-tree-id15080 . -1) (undo-tree-id15081 . -1) (undo-tree-id15082 . -1) (undo-tree-id15083 . -1) (undo-tree-id15084 . -1) (undo-tree-id15085 . -1) (undo-tree-id15086 . -1) (undo-tree-id15087 . -1) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -1) (undo-tree-id15095 . -1) (undo-tree-id15096 . -1) (undo-tree-id15097 . -1) (undo-tree-id15098 . -1) (undo-tree-id15099 . -1) (undo-tree-id15100 . -1) (undo-tree-id15101 . -1) (undo-tree-id15102 . -1) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (undo-tree-id15138 . -1) (undo-tree-id15139 . -1) (undo-tree-id15140 . -1) (undo-tree-id15141 . -1) (undo-tree-id15142 . -1) (#(" " 0 1 (fontified t)) . -3457) (undo-tree-id15143 . -1) (undo-tree-id15144 . -1) (undo-tree-id15145 . -1) (undo-tree-id15146 . -1) (undo-tree-id15147 . -1) (undo-tree-id15148 . -1) (undo-tree-id15149 . -1) (undo-tree-id15150 . -1) (undo-tree-id15151 . -1) (undo-tree-id15152 . -1) (undo-tree-id15153 . -1) (undo-tree-id15154 . -1) (undo-tree-id15155 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (undo-tree-id15159 . -1) (undo-tree-id15160 . -1) (undo-tree-id15161 . -1) (undo-tree-id15162 . -1) (undo-tree-id15163 . -1) (undo-tree-id15164 . -1) (undo-tree-id15165 . -1) (undo-tree-id15166 . -1) (undo-tree-id15167 . -1) (undo-tree-id15168 . -1) (undo-tree-id15169 . -1) (undo-tree-id15170 . -1) (undo-tree-id15171 . -1) (undo-tree-id15172 . -1) (undo-tree-id15173 . -1) (undo-tree-id15174 . -1) (undo-tree-id15175 . -1) (undo-tree-id15176 . -1) (undo-tree-id15177 . -1) (undo-tree-id15178 . -1) (undo-tree-id15179 . -1) (undo-tree-id15180 . -1) (undo-tree-id15181 . -1) (undo-tree-id15182 . -1) (undo-tree-id15183 . -1) (undo-tree-id15184 . -1) (undo-tree-id15185 . -1) (undo-tree-id15186 . -1) (undo-tree-id15187 . -1) (undo-tree-id15188 . -1) (undo-tree-id15189 . -1) (undo-tree-id15190 . -1) (undo-tree-id15191 . -1) (undo-tree-id15192 . -1) (undo-tree-id15193 . -1) (undo-tree-id15194 . -1) (undo-tree-id15195 . -1) (undo-tree-id15196 . -1) (undo-tree-id15197 . -1) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15201 . -1) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) (undo-tree-id15204 . -1) (undo-tree-id15205 . -1) (undo-tree-id15206 . -1) (undo-tree-id15207 . -1) (undo-tree-id15208 . -1) (undo-tree-id15209 . -1) (undo-tree-id15210 . -1) (undo-tree-id15211 . -1) (undo-tree-id15212 . -1) (undo-tree-id15213 . -1) (undo-tree-id15214 . -1) (undo-tree-id15215 . -1) (undo-tree-id15216 . -1) (undo-tree-id15217 . -1) (undo-tree-id15218 . -1) (undo-tree-id15219 . -1) (undo-tree-id15220 . -1) (undo-tree-id15221 . -1) (undo-tree-id15222 . -1) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) (undo-tree-id15227 . -1) (undo-tree-id15228 . -1) (undo-tree-id15229 . -1) (undo-tree-id15230 . -1) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (undo-tree-id15236 . -1) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) (undo-tree-id15240 . -1) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (#(" " 0 1 (fontified t)) . -3458) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -1) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (undo-tree-id15311 . -1) (undo-tree-id15312 . -1) (undo-tree-id15313 . -1) (undo-tree-id15314 . -1) (undo-tree-id15315 . -1) (undo-tree-id15316 . -1) (undo-tree-id15317 . -1) (undo-tree-id15318 . -1) (undo-tree-id15319 . -1) (undo-tree-id15320 . -1) (undo-tree-id15321 . -1) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (#(" " 0 1 (fontified t)) . -3459) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (#(" " 0 1 (fontified t)) . -3460) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -1) (undo-tree-id15455 . -1) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (undo-tree-id15462 . -1) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (undo-tree-id15465 . -1) (undo-tree-id15466 . -1) (undo-tree-id15467 . -1) (undo-tree-id15468 . -1) (undo-tree-id15469 . -1) (undo-tree-id15470 . -1) (undo-tree-id15471 . -1) (undo-tree-id15472 . -1) (undo-tree-id15473 . -1) (undo-tree-id15474 . -1) (undo-tree-id15475 . -1) (undo-tree-id15476 . -1) (undo-tree-id15477 . -1) (undo-tree-id15478 . -1) (undo-tree-id15479 . -1) (undo-tree-id15480 . -1) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (undo-tree-id15489 . -1) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (#(" " 0 1 (fontified t)) . -3461) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) 3462 (t 25934 8679 233338 481000)) nil (25934 8747 541318 720000) 0 nil])
([nil nil ((3587 . 3595) (t 25934 8747 583272 314000)) nil (25934 8989 110197 255000) 0 nil])
([nil nil ((3862 . 3864) (t 25934 8989 152744 379000)) nil (25934 9085 843881 867000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3862) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (undo-tree-id15540 . -1) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) (undo-tree-id15545 . -1) (undo-tree-id15546 . -1) (undo-tree-id15547 . -1) (undo-tree-id15548 . -1) (undo-tree-id15549 . -1) (undo-tree-id15550 . -1) (undo-tree-id15551 . -1) (undo-tree-id15552 . -1) (undo-tree-id15553 . -1) (undo-tree-id15554 . -1) (undo-tree-id15555 . -1) (undo-tree-id15556 . -1) (undo-tree-id15557 . -1) (undo-tree-id15558 . -1) (undo-tree-id15559 . -1) (undo-tree-id15560 . -1) (undo-tree-id15561 . -1) (undo-tree-id15562 . -1) (undo-tree-id15563 . -1) (undo-tree-id15564 . -1) (undo-tree-id15565 . -1) (undo-tree-id15566 . -1) (undo-tree-id15567 . -1) (undo-tree-id15568 . -1) (undo-tree-id15569 . -1) (undo-tree-id15570 . -1) (undo-tree-id15571 . -1) (undo-tree-id15572 . -1) (undo-tree-id15573 . -1) (undo-tree-id15574 . -1) (undo-tree-id15575 . -1) (undo-tree-id15576 . -1) (undo-tree-id15577 . -1) (undo-tree-id15578 . -1) (undo-tree-id15579 . -1) (undo-tree-id15580 . -1) (undo-tree-id15581 . -1) (undo-tree-id15582 . -1) (undo-tree-id15583 . -1) (undo-tree-id15584 . -1) (undo-tree-id15585 . -1) (undo-tree-id15586 . -1) (undo-tree-id15587 . -1) (undo-tree-id15588 . -1) (undo-tree-id15589 . -1) (undo-tree-id15590 . -1) (undo-tree-id15591 . -1) (undo-tree-id15592 . -1) (undo-tree-id15593 . -1) (undo-tree-id15594 . -1) (undo-tree-id15595 . -1) (undo-tree-id15596 . -1) (undo-tree-id15597 . -1) (undo-tree-id15598 . -1) (undo-tree-id15599 . -1) (undo-tree-id15600 . -1) (undo-tree-id15601 . -1) (undo-tree-id15602 . -1) (undo-tree-id15603 . -1) (undo-tree-id15604 . -1) (undo-tree-id15605 . -1) (undo-tree-id15606 . -1) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) (undo-tree-id15612 . -1) (undo-tree-id15613 . -1) (undo-tree-id15614 . -1) (undo-tree-id15615 . -1) (undo-tree-id15616 . -1) (undo-tree-id15617 . -1) (undo-tree-id15618 . -1) (undo-tree-id15619 . -1) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) (undo-tree-id15632 . -1) (undo-tree-id15633 . -1) (undo-tree-id15634 . -1) (undo-tree-id15635 . -1) (undo-tree-id15636 . -1) (undo-tree-id15637 . -1) (undo-tree-id15638 . -1) (undo-tree-id15639 . -1) (#("0" 0 1 (fontified t)) . -3863) (undo-tree-id15640 . -1) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1) (undo-tree-id15643 . -1) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) (undo-tree-id15649 . -1) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (undo-tree-id15652 . -1) (undo-tree-id15653 . -1) (undo-tree-id15654 . -1) (undo-tree-id15655 . -1) (undo-tree-id15656 . -1) (undo-tree-id15657 . -1) (undo-tree-id15658 . -1) (undo-tree-id15659 . -1) (undo-tree-id15660 . -1) (undo-tree-id15661 . -1) (undo-tree-id15662 . -1) (undo-tree-id15663 . -1) (undo-tree-id15664 . -1) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1) (undo-tree-id15667 . -1) (undo-tree-id15668 . -1) (undo-tree-id15669 . -1) (undo-tree-id15670 . -1) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (undo-tree-id15689 . -1) (undo-tree-id15690 . -1) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) (undo-tree-id15693 . -1) (undo-tree-id15694 . -1) (undo-tree-id15695 . -1) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) 3864) nil (25934 9085 843872 655000) 0 nil])
([nil nil ((3862 . 3864)) nil (25934 9085 843612 672000) 0 nil])
([nil nil ((apply 4 4305 4398 undo--wrap-and-run-primitive-undo 4305 4398 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4353) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4313) 4402))) nil (25934 9197 167737 236000) 0 nil])
([nil nil ((4406 . 4410) 4398) nil (25934 9197 167732 349000) 0 nil])
([nil nil ((3441 . 3443) (t 25934 9197 199565 142000)) nil (25934 9386 31723 959000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-comment-face fontified t)) . 3443) (t 25934 9268 746071 814000)) nil (25934 9413 700640 392000) 0 nil] [nil nil ((4572 . 4573) (4572 . 4573) (t 25934 9268 746071 814000)) ((#("
" 0 1 (fontified nil)) . 4572) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 4572)) (25934 9386 30052 117000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3441) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3442) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (undo-tree-id15846 . -1) 3443) nil (25934 9413 700637 973000) 0 nil])
nil
([nil nil ((3441 . 3442)) nil (25934 9413 700608 64000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3433) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) (#("i" 0 1 (fontified t)) . -3434) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3435) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (#("p" 0 1 (fontified t)) . -3436) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (#("u" 0 1 (fontified t)) . -3437) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3438) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (#("s" 0 1 (fontified t)) . -3439) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (#(" " 0 1 (fontified t)) . -3440) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3441) (undo-tree-id15820 . -1) 3442) nil (25934 9413 700601 235000) 0 nil])
([nil nil ((3433 . 3434)) nil (25934 9413 700483 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3433) (undo-tree-id15702 . -1) (undo-tree-id15703 . -1) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) (undo-tree-id15706 . -1) (undo-tree-id15707 . -1) (undo-tree-id15708 . -1) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) 3434) nil (25934 9413 700478 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3521 . 3522) (nil fontified nil 3521 . 3522) (nil fontified nil 3518 . 3521) (nil fontified nil 3517 . 3518) (nil fontified nil 3516 . 3517) (nil fontified nil 3515 . 3516) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3511 . 3513) (nil fontified nil 3510 . 3511) (nil fontified nil 3504 . 3510) (nil fontified nil 3503 . 3504) (nil fontified nil 3496 . 3503) (nil fontified nil 3492 . 3496) (nil fontified nil 3489 . 3492) (nil fontified nil 3488 . 3489) (nil fontified nil 3483 . 3488) (nil fontified nil 3482 . 3483) (nil fontified nil 3478 . 3482) (nil fontified nil 3475 . 3478) (nil fontified nil 3471 . 3475) (nil fontified nil 3470 . 3471) (nil fontified nil 3469 . 3470) (nil fontified nil 3464 . 3469) (nil fontified nil 3463 . 3464) (nil fontified nil 3454 . 3463) (nil fontified nil 3443 . 3454) (nil fontified nil 3438 . 3443) (3438 . 3522) (t 25934 9413 727287 395000)) nil (25934 9423 411645 735000) 0 nil])
([nil nil ((3434 . 3439)) nil (25934 9423 411640 340000) 0 nil])
([nil nil ((3439 . 3443)) nil (25934 9423 411639 447000) 0 nil])
([nil nil ((apply -2 3354 3533 undo--wrap-and-run-primitive-undo 3354 3533 ((3370 . 3372) 3447))) nil (25934 9423 411633 791000) 0 nil])
([nil nil ((apply -10 4657 5169 undo--wrap-and-run-primitive-undo 4657 5169 ((5117 . 5119) (4886 . 4888) (4739 . 4741) (4693 . 4695) (4665 . 4667) 5115))) nil (25934 9462 252859 475000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5133) (undo-tree-id15847 . -4) 5125) nil (25934 9462 252852 650000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5393) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5393) (t 25934 9462 303721 782000)) nil (25934 9465 259109 206000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5446) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5446) (t 25934 9465 299995 383000)) nil (25934 9469 54643 726000) 0 nil])
([nil nil ((apply -2 5459 5487 undo--wrap-and-run-primitive-undo 5459 5487 ((5467 . 5469) 5484))) nil (25934 9469 54640 758000) 0 nil])
([nil nil ((5486 . 5494)) nil (25934 9469 54638 786000) 0 nil])
([nil nil ((#("        # return net_input
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 16 (face font-lock-comment-face fontified t) 16 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face fontified t rear-nonsticky t)) . 5459) (undo-tree-id15848 . -27) (undo-tree-id15849 . -26) (undo-tree-id15850 . -26) (undo-tree-id15851 . -26) (undo-tree-id15852 . -27) (undo-tree-id15853 . -27) (undo-tree-id15854 . -27) (undo-tree-id15855 . -27) (undo-tree-id15856 . -27) (undo-tree-id15857 . -27) (undo-tree-id15858 . -27) (undo-tree-id15859 . -27) (undo-tree-id15860 . -27) (undo-tree-id15861 . -27) (undo-tree-id15862 . -27) (undo-tree-id15863 . -27) (undo-tree-id15864 . -27) (undo-tree-id15865 . -27) (undo-tree-id15866 . -27) (undo-tree-id15867 . -27) (undo-tree-id15868 . -27) (undo-tree-id15869 . -27) (undo-tree-id15870 . -27) (undo-tree-id15871 . -27) (undo-tree-id15872 . -27) (undo-tree-id15873 . -27) (undo-tree-id15874 . -27) (undo-tree-id15875 . -27) (undo-tree-id15876 . -27) (undo-tree-id15877 . -27) (undo-tree-id15878 . -27) (undo-tree-id15879 . -27) (undo-tree-id15880 . -27) (undo-tree-id15881 . -27) (undo-tree-id15882 . -27) (undo-tree-id15883 . -27) (undo-tree-id15884 . -27) (undo-tree-id15885 . -27) (undo-tree-id15886 . -27) (undo-tree-id15887 . -27) (undo-tree-id15888 . -27) (undo-tree-id15889 . -27) (undo-tree-id15890 . -27) (undo-tree-id15891 . -27) (undo-tree-id15892 . -27) (undo-tree-id15893 . -27) (undo-tree-id15894 . -27) (undo-tree-id15895 . -27) (undo-tree-id15896 . -27) (undo-tree-id15897 . -27) (undo-tree-id15898 . -27) (undo-tree-id15899 . -27) (undo-tree-id15900 . -27) (undo-tree-id15901 . -27) (undo-tree-id15902 . -27) (undo-tree-id15903 . -27) (undo-tree-id15904 . -27) (undo-tree-id15905 . -27) (undo-tree-id15906 . -27) (undo-tree-id15907 . -27) (undo-tree-id15908 . -27) (undo-tree-id15909 . -27) (undo-tree-id15910 . -27) (undo-tree-id15911 . -27) (undo-tree-id15912 . -27) (undo-tree-id15913 . -27) (undo-tree-id15914 . -27) (undo-tree-id15915 . -27) (undo-tree-id15916 . -8) (undo-tree-id15917 . -27) (undo-tree-id15918 . -27) (undo-tree-id15919 . -27) (undo-tree-id15920 . -27) (undo-tree-id15921 . -27) (undo-tree-id15922 . -27) (undo-tree-id15923 . -27) (undo-tree-id15924 . -27) (undo-tree-id15925 . -27) (undo-tree-id15926 . -27) (undo-tree-id15927 . -27) (undo-tree-id15928 . -27) (undo-tree-id15929 . -27) (undo-tree-id15930 . -27) (undo-tree-id15931 . -27) (undo-tree-id15932 . -27) (undo-tree-id15933 . -27) (undo-tree-id15934 . -27) (undo-tree-id15935 . -27) (undo-tree-id15936 . -27) (undo-tree-id15937 . -27) (undo-tree-id15938 . -27) (undo-tree-id15939 . -27) (undo-tree-id15940 . -27) (undo-tree-id15941 . -27) (undo-tree-id15942 . -27) (undo-tree-id15943 . -27) (undo-tree-id15944 . -27) (undo-tree-id15945 . -27) (undo-tree-id15946 . -27) (undo-tree-id15947 . -27) (undo-tree-id15948 . -27) (undo-tree-id15949 . -27) (undo-tree-id15950 . -27) (undo-tree-id15951 . -27) (undo-tree-id15952 . -27) (undo-tree-id15953 . -27) (undo-tree-id15954 . -27) (undo-tree-id15955 . -27)) nil (25934 9469 54627 99000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5463) 5459 (t 25934 9469 108343 150000)) nil (25934 11951 615583 969000) 0 nil])
([nil nil ((apply -2 3449 3552 undo--wrap-and-run-primitive-undo 3449 3552 ((3465 . 3467) 3533))) nil (25934 12093 563171 758000) 0 nil])
([nil nil ((apply 2 3354 3447 undo--wrap-and-run-primitive-undo 3354 3447 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3370) 3449))) nil (25934 12164 160257 587000) 0 nil])
([nil nil ((#("                # rec_input[j_pop][self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = Wij" 0 5 (fontified t) 5 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-face fontified t) 33 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 39 (face font-lock-comment-face fontified t) 39 42 (face font-lock-comment-face fontified t) 42 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face fontified t) 53 56 (face font-lock-comment-face fontified t) 56 60 (face font-lock-comment-face fontified t) 60 67 (face font-lock-comment-face fontified t) 67 68 (face font-lock-comment-face fontified t) 68 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t) 75 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 80 (face font-lock-comment-face fontified t) 80 81 (face font-lock-comment-face fontified t) 81 82 (face font-lock-comment-face fontified t) 82 85 (face font-lock-comment-face fontified t)) . -3447) (undo-tree-id18940 . -85) (undo-tree-id18941 . -85) (undo-tree-id18942 . -85) (undo-tree-id18943 . -85) (undo-tree-id18944 . -41) (undo-tree-id18945 . -41) (undo-tree-id18946 . -41) (undo-tree-id18947 . -41) (undo-tree-id18948 . -41) (undo-tree-id18949 . -41) (undo-tree-id18950 . -41) (undo-tree-id18951 . -41) (undo-tree-id18952 . -41) (undo-tree-id18953 . -41) (undo-tree-id18954 . -41) (undo-tree-id18955 . -41) (undo-tree-id18956 . -41) (undo-tree-id18957 . -41) (undo-tree-id18958 . -41) (undo-tree-id18959 . -41) (undo-tree-id18960 . -41) (undo-tree-id18961 . -41) (undo-tree-id18962 . -41) (undo-tree-id18963 . -41) (undo-tree-id18964 . -41) (undo-tree-id18965 . -41) (undo-tree-id18966 . -41) (undo-tree-id18967 . -85) (undo-tree-id18968 . -85) (undo-tree-id18969 . -85) (undo-tree-id18970 . -85) (undo-tree-id18971 . -85) (undo-tree-id18972 . -85) (undo-tree-id18973 . -85) (undo-tree-id18974 . -85) (undo-tree-id18975 . -85) (undo-tree-id18976 . -85) (undo-tree-id18977 . -85) (undo-tree-id18978 . -85) (undo-tree-id18979 . -85) (undo-tree-id18980 . -85) (undo-tree-id18981 . -85) (undo-tree-id18982 . -85) (undo-tree-id18983 . -85) (undo-tree-id18984 . -85) (undo-tree-id18985 . -85) (undo-tree-id18986 . -85) (undo-tree-id18987 . -85) (undo-tree-id18988 . -85) (undo-tree-id18989 . -85) (undo-tree-id18990 . -85) (undo-tree-id18991 . -85) (undo-tree-id18992 . -85) (undo-tree-id18993 . -85) (undo-tree-id18994 . -85) (undo-tree-id18995 . -85) (undo-tree-id18996 . -85) (undo-tree-id18997 . -85) (undo-tree-id18998 . -85) (undo-tree-id18999 . -85) (undo-tree-id19000 . -85) (undo-tree-id19001 . -85) (undo-tree-id19002 . -85) (undo-tree-id19003 . -85) (undo-tree-id19004 . -85) (undo-tree-id19005 . -85) (undo-tree-id19006 . -85) (undo-tree-id19007 . -85) (undo-tree-id19008 . -85) (undo-tree-id19009 . -85) (undo-tree-id19010 . -85) (undo-tree-id19011 . -85) (undo-tree-id19012 . -85) (undo-tree-id19013 . -85) (undo-tree-id19014 . -85) (undo-tree-id19015 . -85) (undo-tree-id19016 . -85) (undo-tree-id19017 . -85) (undo-tree-id19018 . -85) (undo-tree-id19019 . -85) 3532 (t 25934 12167 376789 879000)) nil (25934 12199 66741 548000) 0 nil] [nil nil ((#("                inputs = rec_input[j_pop][self.csumNa[i_pop] : self.csumNa[i_pop + 1]]
" 0 16 (fontified t) 16 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 46 (face font-lock-keyword-face fontified t) 46 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 81 (fontified t) 81 82 (face font-lock-operator-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t)) . -2708) (undo-tree-id16085 . -16) (undo-tree-id16086 . -87) 2795 (t 25934 12093 614042 767000)) ((2708 . 2795)) (25934 12163 622634 58000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3446) (undo-tree-id18738 . -1) (undo-tree-id18739 . -1) (undo-tree-id18740 . -1) (undo-tree-id18741 . -1) (undo-tree-id18742 . -1) (undo-tree-id18743 . -1) (undo-tree-id18744 . -1) (undo-tree-id18745 . -1) (undo-tree-id18746 . -1) (undo-tree-id18747 . -1) (undo-tree-id18748 . -1) (undo-tree-id18749 . -1) (undo-tree-id18750 . -1) (undo-tree-id18751 . -1) (undo-tree-id18752 . -1) (undo-tree-id18753 . -1) (undo-tree-id18754 . -1) (undo-tree-id18755 . -1) (undo-tree-id18756 . -1) (undo-tree-id18757 . -1) (undo-tree-id18758 . -1) (undo-tree-id18759 . -1) (undo-tree-id18760 . -1) (undo-tree-id18761 . -1) (undo-tree-id18762 . -1) (undo-tree-id18763 . -1) (undo-tree-id18764 . -1) (undo-tree-id18765 . -1) (undo-tree-id18766 . -1) (undo-tree-id18767 . -1) (undo-tree-id18768 . -1) (undo-tree-id18769 . -1) (undo-tree-id18770 . -1) (undo-tree-id18771 . -1) (undo-tree-id18772 . -1) (undo-tree-id18773 . -1) (undo-tree-id18774 . -1) (undo-tree-id18775 . -1) (undo-tree-id18776 . -1) (undo-tree-id18777 . -1) (undo-tree-id18778 . -1) (undo-tree-id18779 . -1) (undo-tree-id18780 . -1) (undo-tree-id18781 . -1) (undo-tree-id18782 . -1) (undo-tree-id18783 . -1) (undo-tree-id18784 . -1) (undo-tree-id18785 . -1) (undo-tree-id18786 . -1) (undo-tree-id18787 . -1) (undo-tree-id18788 . -1) (undo-tree-id18789 . -1) (undo-tree-id18790 . -1) (undo-tree-id18791 . -1) (undo-tree-id18792 . -1) (undo-tree-id18793 . -1) (undo-tree-id18794 . -1) (undo-tree-id18795 . -1) (undo-tree-id18796 . -1) (undo-tree-id18797 . -1) (undo-tree-id18798 . -1) (undo-tree-id18799 . -1) (undo-tree-id18800 . -1) (undo-tree-id18801 . -1) (undo-tree-id18802 . -1) (undo-tree-id18803 . -1) (undo-tree-id18804 . -1) (undo-tree-id18805 . -1) (undo-tree-id18806 . -1) (undo-tree-id18807 . -1) (undo-tree-id18808 . -1) (undo-tree-id18809 . -1) (undo-tree-id18810 . -1) (undo-tree-id18811 . -1) (undo-tree-id18812 . -1) (undo-tree-id18813 . -1) (undo-tree-id18814 . -1) (undo-tree-id18815 . -1) (undo-tree-id18816 . -1) (undo-tree-id18817 . -1) (undo-tree-id18818 . -1) (undo-tree-id18819 . -1) (undo-tree-id18820 . -1) (undo-tree-id18821 . -1) (undo-tree-id18822 . -1) (undo-tree-id18823 . -1) (undo-tree-id18824 . -1) (undo-tree-id18825 . -1) (undo-tree-id18826 . -1) (undo-tree-id18827 . -1) (undo-tree-id18828 . -1) (undo-tree-id18829 . -1) (undo-tree-id18830 . -1) (undo-tree-id18831 . -1) (undo-tree-id18832 . -1) (undo-tree-id18833 . -1) (undo-tree-id18834 . -1) (undo-tree-id18835 . -1) (undo-tree-id18836 . -1) (undo-tree-id18837 . -1) (undo-tree-id18838 . -1) (undo-tree-id18839 . -1) (undo-tree-id18840 . -1) (undo-tree-id18841 . -1) (undo-tree-id18842 . -1) (undo-tree-id18843 . -1) (undo-tree-id18844 . -1) (undo-tree-id18845 . -1) (undo-tree-id18846 . -1) (undo-tree-id18847 . -1) (undo-tree-id18848 . -1) (undo-tree-id18849 . -1) (undo-tree-id18850 . -1) (undo-tree-id18851 . -1) (undo-tree-id18852 . -1) (undo-tree-id18853 . -1) (undo-tree-id18854 . -1) (undo-tree-id18855 . -1) (undo-tree-id18856 . -1) (undo-tree-id18857 . -1) (undo-tree-id18858 . -1) (undo-tree-id18859 . -1) (undo-tree-id18860 . -1) (undo-tree-id18861 . -1) (undo-tree-id18862 . -1) (undo-tree-id18863 . -1) (undo-tree-id18864 . -1) (undo-tree-id18865 . -1) (undo-tree-id18866 . -1) (undo-tree-id18867 . -1) (undo-tree-id18868 . -1) (undo-tree-id18869 . -1) (undo-tree-id18870 . -1) (undo-tree-id18871 . -1) (undo-tree-id18872 . -1) (undo-tree-id18873 . -1) (undo-tree-id18874 . -1) (undo-tree-id18875 . -1) (undo-tree-id18876 . -1) (undo-tree-id18877 . -1) (undo-tree-id18878 . -1) (undo-tree-id18879 . -1) (undo-tree-id18880 . -1) (undo-tree-id18881 . -1) (undo-tree-id18882 . -1) (undo-tree-id18883 . -1) (undo-tree-id18884 . -1) (undo-tree-id18885 . -1) (undo-tree-id18886 . -1) (undo-tree-id18887 . -1) (undo-tree-id18888 . -1) (undo-tree-id18889 . -1) (undo-tree-id18890 . -1) (undo-tree-id18891 . -1) (undo-tree-id18892 . -1) (undo-tree-id18893 . -1) (undo-tree-id18894 . -1) (undo-tree-id18895 . -1) (undo-tree-id18896 . -1) (undo-tree-id18897 . -1) (undo-tree-id18898 . -1) (undo-tree-id18899 . -1) (undo-tree-id18900 . -1) (undo-tree-id18901 . -1) (undo-tree-id18902 . -1) (undo-tree-id18903 . -1) (undo-tree-id18904 . -1) (undo-tree-id18905 . -1) (undo-tree-id18906 . -1) (undo-tree-id18907 . -1) (undo-tree-id18908 . -1) (undo-tree-id18909 . -1) (undo-tree-id18910 . -1) (undo-tree-id18911 . -1) (undo-tree-id18912 . -1) (undo-tree-id18913 . -1) (undo-tree-id18914 . -1) (undo-tree-id18915 . -1) (undo-tree-id18916 . -1) (undo-tree-id18917 . -1) (undo-tree-id18918 . -1) (undo-tree-id18919 . -1) (undo-tree-id18920 . -1) (undo-tree-id18921 . -1) (undo-tree-id18922 . -1) (undo-tree-id18923 . -1) (undo-tree-id18924 . -1) (undo-tree-id18925 . -1) (undo-tree-id18926 . -1) (undo-tree-id18927 . -1) (undo-tree-id18928 . -1) (undo-tree-id18929 . -1) (undo-tree-id18930 . -1) (undo-tree-id18931 . -1) (undo-tree-id18932 . -1) (undo-tree-id18933 . -1) (undo-tree-id18934 . -1) (undo-tree-id18935 . -1) (undo-tree-id18936 . -1) (undo-tree-id18937 . -1) (undo-tree-id18938 . -1) (undo-tree-id18939 . -1) 3447) nil (25934 12199 66649 809000) 0 nil])
([nil nil ((#("                # print('inputs', inputs.shape)
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t)) . -2864) (undo-tree-id16084 . -48) 2912) ((2864 . 2912)) (25934 12163 402840 301000) 0 nil])
([nil nil ((#("                # print('inputs', inputs.shape)
                # print(self.Wab[i_pop][j_pop])
                # print('rates', r_pres.shape)
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 46 (face font-lock-comment-face fontified t) 46 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 64 (fontified t) 64 66 (face font-lock-comment-delimiter-face fontified t) 66 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 76 (face font-lock-comment-face fontified t) 76 80 (face font-lock-comment-face fontified t) 80 81 (face font-lock-comment-face fontified t) 81 86 (face font-lock-comment-face fontified t) 86 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 96 (face font-lock-comment-face fontified t) 96 112 (fontified t) 112 114 (face font-lock-comment-delimiter-face fontified t) 114 119 (face font-lock-comment-face fontified t) 119 120 (face font-lock-comment-face fontified t) 120 127 (face font-lock-comment-face fontified t) 127 129 (face font-lock-comment-face fontified t) 129 141 (face font-lock-comment-face fontified t) 141 142 (face font-lock-comment-face fontified t) 142 143 (face font-lock-comment-face fontified t rear-nonsticky t)) . -2951) (undo-tree-id19521 . -94) (undo-tree-id19522 . -143) (undo-tree-id19523 . -143) (undo-tree-id19524 . -129) (undo-tree-id19525 . -129) (undo-tree-id19526 . -87) (undo-tree-id19527 . -87) (undo-tree-id19528 . -87) (undo-tree-id19529 . -87) (undo-tree-id19530 . -87) (undo-tree-id19531 . -87) (undo-tree-id19532 . -87) (undo-tree-id19533 . -16) (undo-tree-id19534 . -16) (undo-tree-id19535 . -16) (undo-tree-id19536 . -16) (undo-tree-id19537 . -16) (undo-tree-id19538 . -16) (undo-tree-id19539 . -16) (undo-tree-id19540 . -16) (undo-tree-id19541 . -16) (undo-tree-id19542 . -16) (undo-tree-id19543 . -16) (undo-tree-id19544 . -16) (undo-tree-id19545 . -16) (undo-tree-id19546 . -16) (undo-tree-id19547 . -16) (undo-tree-id19548 . -16) (undo-tree-id19549 . -16) (undo-tree-id19550 . -16) (undo-tree-id19551 . -16) (undo-tree-id19552 . -16) (undo-tree-id19553 . -16) (undo-tree-id19554 . -16) (undo-tree-id19555 . -16) (undo-tree-id19556 . -16) (undo-tree-id19557 . -16) (undo-tree-id19558 . -16) (undo-tree-id19559 . -16) (undo-tree-id19560 . -16) (undo-tree-id19561 . -16) (undo-tree-id19562 . -16) (undo-tree-id19563 . -48) (undo-tree-id19564 . -48) (undo-tree-id19565 . -48) (undo-tree-id19566 . -48) (undo-tree-id19567 . -48) (undo-tree-id19568 . -48) (undo-tree-id19569 . -48) (undo-tree-id19570 . -48) (undo-tree-id19571 . -48) (undo-tree-id19572 . -48) (undo-tree-id19573 . -48) (undo-tree-id19574 . -48) (undo-tree-id19575 . -48) (undo-tree-id19576 . -48) (undo-tree-id19577 . -48) (undo-tree-id19578 . -48) (undo-tree-id19579 . -48) (undo-tree-id19580 . -48) (undo-tree-id19581 . -48) (undo-tree-id19582 . -48) (undo-tree-id19583 . -48) (undo-tree-id19584 . -48) (undo-tree-id19585 . -48) (undo-tree-id19586 . -48) (undo-tree-id19587 . -96) (undo-tree-id19588 . -48) (undo-tree-id19589 . -96) (undo-tree-id19590 . -96) (undo-tree-id19591 . -96) (undo-tree-id19592 . -96) (undo-tree-id19593 . -96) (undo-tree-id19594 . -96) (undo-tree-id19595 . -96) (undo-tree-id19596 . -96) (undo-tree-id19597 . -96) (undo-tree-id19598 . -96) (undo-tree-id19599 . -96) (undo-tree-id19600 . -96) (undo-tree-id19601 . -96) (undo-tree-id19602 . -96) (undo-tree-id19603 . -96) (undo-tree-id19604 . -96) (undo-tree-id19605 . -96) (undo-tree-id19606 . -96) (undo-tree-id19607 . -96) (undo-tree-id19608 . -96) (undo-tree-id19609 . -96) (undo-tree-id19610 . -96) (undo-tree-id19611 . -96) (undo-tree-id19612 . -96) (undo-tree-id19613 . -96) (undo-tree-id19614 . -96) (undo-tree-id19615 . -96) (undo-tree-id19616 . -96) (undo-tree-id19617 . -96) (undo-tree-id19618 . -96) (undo-tree-id19619 . -96) (undo-tree-id19620 . -96) (undo-tree-id19621 . -96) (undo-tree-id19622 . -96) (undo-tree-id19623 . -96) (undo-tree-id19624 . -143) (undo-tree-id19625 . -143) (undo-tree-id19626 . -96) (undo-tree-id19627 . -143) (undo-tree-id19628 . -143) (undo-tree-id19629 . -143) (undo-tree-id19630 . -143) (undo-tree-id19631 . -143) (undo-tree-id19632 . -143) (undo-tree-id19633 . -143) (undo-tree-id19634 . -143) (undo-tree-id19635 . -143) (undo-tree-id19636 . -143) (undo-tree-id19637 . -143) (undo-tree-id19638 . -143) (undo-tree-id19639 . -143) (undo-tree-id19640 . -143) (undo-tree-id19641 . -143) (undo-tree-id19642 . -143) (undo-tree-id19643 . -143) (undo-tree-id19644 . -143) (undo-tree-id19645 . -143) (undo-tree-id19646 . -143) (undo-tree-id19647 . -143) (undo-tree-id19648 . -143) (undo-tree-id19649 . -143) (undo-tree-id19650 . -143) (undo-tree-id19651 . -143) (undo-tree-id19652 . -143) (undo-tree-id19653 . -143) (undo-tree-id19654 . -143) (undo-tree-id19655 . -143) (undo-tree-id19656 . -143) 3094 (t 25934 12199 99692 155000)) nil (25934 12210 103785 549000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3299) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) (undo-tree-id16112 . -1) (undo-tree-id16113 . -1) (undo-tree-id16114 . -1) (undo-tree-id16115 . -1) (undo-tree-id16116 . -1) (undo-tree-id16117 . -1) (undo-tree-id16118 . -1) (undo-tree-id16119 . -1) (undo-tree-id16120 . -1) (undo-tree-id16121 . -1) (undo-tree-id16122 . -1) (undo-tree-id16123 . -1) (undo-tree-id16124 . -1) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (undo-tree-id16430 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3300) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (undo-tree-id16478 . -1) (undo-tree-id16479 . -1) (undo-tree-id16480 . -1) (undo-tree-id16481 . -1) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) (undo-tree-id16573 . -1) (undo-tree-id16574 . -1) (undo-tree-id16575 . -1) (undo-tree-id16576 . -1) (undo-tree-id16577 . -1) (undo-tree-id16578 . -1) (undo-tree-id16579 . -1) (undo-tree-id16580 . -1) (undo-tree-id16581 . -1) (undo-tree-id16582 . -1) (undo-tree-id16583 . -1) (undo-tree-id16584 . -1) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (undo-tree-id16634 . -1) (undo-tree-id16635 . -1) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (undo-tree-id16638 . -1) (undo-tree-id16639 . -1) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) (undo-tree-id16704 . -1) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (undo-tree-id16711 . -1) (undo-tree-id16712 . -1) (undo-tree-id16713 . -1) (undo-tree-id16714 . -1) (undo-tree-id16715 . -1) (undo-tree-id16716 . -1) (undo-tree-id16717 . -1) (undo-tree-id16718 . -1) (undo-tree-id16719 . -1) (undo-tree-id16720 . -1) (undo-tree-id16721 . -1) (undo-tree-id16722 . -1) (undo-tree-id16723 . -1) (undo-tree-id16724 . -1) (undo-tree-id16725 . -1) (undo-tree-id16726 . -1) (undo-tree-id16727 . -1) (undo-tree-id16728 . -1) (undo-tree-id16729 . -1) (undo-tree-id16730 . -1) (undo-tree-id16731 . -1) (undo-tree-id16732 . -1) (undo-tree-id16733 . -1) (undo-tree-id16734 . -1) (undo-tree-id16735 . -1) (undo-tree-id16736 . -1) (#("p" 0 1 (fontified t)) . -3301) (undo-tree-id16737 . -1) (undo-tree-id16738 . -1) (undo-tree-id16739 . -1) (undo-tree-id16740 . -1) (undo-tree-id16741 . -1) (undo-tree-id16742 . -1) (undo-tree-id16743 . -1) (undo-tree-id16744 . -1) (undo-tree-id16745 . -1) (undo-tree-id16746 . -1) (undo-tree-id16747 . -1) (undo-tree-id16748 . -1) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . -1) (undo-tree-id16774 . -1) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) (undo-tree-id16930 . -1) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) (undo-tree-id16939 . -1) (undo-tree-id16940 . -1) (undo-tree-id16941 . -1) (undo-tree-id16942 . -1) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -1) (undo-tree-id16973 . -1) (undo-tree-id16974 . -1) (undo-tree-id16975 . -1) (undo-tree-id16976 . -1) (undo-tree-id16977 . -1) (undo-tree-id16978 . -1) (undo-tree-id16979 . -1) (undo-tree-id16980 . -1) (undo-tree-id16981 . -1) (undo-tree-id16982 . -1) (undo-tree-id16983 . -1) (undo-tree-id16984 . -1) (undo-tree-id16985 . -1) (undo-tree-id16986 . -1) (undo-tree-id16987 . -1) (undo-tree-id16988 . -1) (undo-tree-id16989 . -1) (undo-tree-id16990 . -1) (undo-tree-id16991 . -1) (undo-tree-id16992 . -1) (undo-tree-id16993 . -1) (undo-tree-id16994 . -1) (undo-tree-id16995 . -1) (undo-tree-id16996 . -1) (undo-tree-id16997 . -1) (undo-tree-id16998 . -1) (undo-tree-id16999 . -1) (undo-tree-id17000 . -1) (undo-tree-id17001 . -1) (undo-tree-id17002 . -1) (undo-tree-id17003 . -1) (undo-tree-id17004 . -1) (#("u" 0 1 (fontified t)) . -3302) (undo-tree-id17005 . -1) (undo-tree-id17006 . -1) (undo-tree-id17007 . -1) (undo-tree-id17008 . -1) (undo-tree-id17009 . -1) (undo-tree-id17010 . -1) (undo-tree-id17011 . -1) (undo-tree-id17012 . -1) (undo-tree-id17013 . -1) (undo-tree-id17014 . -1) (undo-tree-id17015 . -1) (undo-tree-id17016 . -1) (undo-tree-id17017 . -1) (undo-tree-id17018 . -1) (undo-tree-id17019 . -1) (undo-tree-id17020 . -1) (undo-tree-id17021 . -1) (undo-tree-id17022 . -1) (undo-tree-id17023 . -1) (undo-tree-id17024 . -1) (undo-tree-id17025 . -1) (undo-tree-id17026 . -1) (undo-tree-id17027 . -1) (undo-tree-id17028 . -1) (undo-tree-id17029 . -1) (undo-tree-id17030 . -1) (undo-tree-id17031 . -1) (undo-tree-id17032 . -1) (undo-tree-id17033 . -1) (undo-tree-id17034 . -1) (undo-tree-id17035 . -1) (undo-tree-id17036 . -1) (undo-tree-id17037 . -1) (undo-tree-id17038 . -1) (undo-tree-id17039 . -1) (undo-tree-id17040 . -1) (undo-tree-id17041 . -1) (undo-tree-id17042 . -1) (undo-tree-id17043 . -1) (undo-tree-id17044 . -1) (undo-tree-id17045 . -1) (undo-tree-id17046 . -1) (undo-tree-id17047 . -1) (undo-tree-id17048 . -1) (undo-tree-id17049 . -1) (undo-tree-id17050 . -1) (undo-tree-id17051 . -1) (undo-tree-id17052 . -1) (undo-tree-id17053 . -1) (undo-tree-id17054 . -1) (undo-tree-id17055 . -1) (undo-tree-id17056 . -1) (undo-tree-id17057 . -1) (undo-tree-id17058 . -1) (undo-tree-id17059 . -1) (undo-tree-id17060 . -1) (undo-tree-id17061 . -1) (undo-tree-id17062 . -1) (undo-tree-id17063 . -1) (undo-tree-id17064 . -1) (undo-tree-id17065 . -1) (undo-tree-id17066 . -1) (undo-tree-id17067 . -1) (undo-tree-id17068 . -1) (undo-tree-id17069 . -1) (undo-tree-id17070 . -1) (undo-tree-id17071 . -1) (undo-tree-id17072 . -1) (undo-tree-id17073 . -1) (undo-tree-id17074 . -1) (undo-tree-id17075 . -1) (undo-tree-id17076 . -1) (undo-tree-id17077 . -1) (undo-tree-id17078 . -1) (undo-tree-id17079 . -1) (undo-tree-id17080 . -1) (undo-tree-id17081 . -1) (undo-tree-id17082 . -1) (undo-tree-id17083 . -1) (undo-tree-id17084 . -1) (undo-tree-id17085 . -1) (undo-tree-id17086 . -1) (undo-tree-id17087 . -1) (undo-tree-id17088 . -1) (undo-tree-id17089 . -1) (undo-tree-id17090 . -1) (undo-tree-id17091 . -1) (undo-tree-id17092 . -1) (undo-tree-id17093 . -1) (undo-tree-id17094 . -1) (undo-tree-id17095 . -1) (undo-tree-id17096 . -1) (undo-tree-id17097 . -1) (undo-tree-id17098 . -1) (undo-tree-id17099 . -1) (undo-tree-id17100 . -1) (undo-tree-id17101 . -1) (undo-tree-id17102 . -1) (undo-tree-id17103 . -1) (undo-tree-id17104 . -1) (undo-tree-id17105 . -1) (undo-tree-id17106 . -1) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) (undo-tree-id17109 . -1) (undo-tree-id17110 . -1) (undo-tree-id17111 . -1) (undo-tree-id17112 . -1) (undo-tree-id17113 . -1) (undo-tree-id17114 . -1) (undo-tree-id17115 . -1) (undo-tree-id17116 . -1) (undo-tree-id17117 . -1) (undo-tree-id17118 . -1) (undo-tree-id17119 . -1) (undo-tree-id17120 . -1) (undo-tree-id17121 . -1) (undo-tree-id17122 . -1) (undo-tree-id17123 . -1) (undo-tree-id17124 . -1) (undo-tree-id17125 . -1) (undo-tree-id17126 . -1) (undo-tree-id17127 . -1) (undo-tree-id17128 . -1) (undo-tree-id17129 . -1) (undo-tree-id17130 . -1) (undo-tree-id17131 . -1) (undo-tree-id17132 . -1) (undo-tree-id17133 . -1) (undo-tree-id17134 . -1) (undo-tree-id17135 . -1) (undo-tree-id17136 . -1) (undo-tree-id17137 . -1) (undo-tree-id17138 . -1) (undo-tree-id17139 . -1) (undo-tree-id17140 . -1) (undo-tree-id17141 . -1) (undo-tree-id17142 . -1) (undo-tree-id17143 . -1) (undo-tree-id17144 . -1) (undo-tree-id17145 . -1) (undo-tree-id17146 . -1) (undo-tree-id17147 . -1) (undo-tree-id17148 . -1) (undo-tree-id17149 . -1) (undo-tree-id17150 . -1) (undo-tree-id17151 . -1) (undo-tree-id17152 . -1) (undo-tree-id17153 . -1) (undo-tree-id17154 . -1) (undo-tree-id17155 . -1) (undo-tree-id17156 . -1) (undo-tree-id17157 . -1) (undo-tree-id17158 . -1) (undo-tree-id17159 . -1) (undo-tree-id17160 . -1) (undo-tree-id17161 . -1) (undo-tree-id17162 . -1) (undo-tree-id17163 . -1) (undo-tree-id17164 . -1) (undo-tree-id17165 . -1) (undo-tree-id17166 . -1) (undo-tree-id17167 . -1) (undo-tree-id17168 . -1) (undo-tree-id17169 . -1) (undo-tree-id17170 . -1) (undo-tree-id17171 . -1) (undo-tree-id17172 . -1) (undo-tree-id17173 . -1) (undo-tree-id17174 . -1) (undo-tree-id17175 . -1) (undo-tree-id17176 . -1) (undo-tree-id17177 . -1) (undo-tree-id17178 . -1) (undo-tree-id17179 . -1) (undo-tree-id17180 . -1) (undo-tree-id17181 . -1) (undo-tree-id17182 . -1) (undo-tree-id17183 . -1) (undo-tree-id17184 . -1) (undo-tree-id17185 . -1) (undo-tree-id17186 . -1) (undo-tree-id17187 . -1) (undo-tree-id17188 . -1) (undo-tree-id17189 . -1) (undo-tree-id17190 . -1) (undo-tree-id17191 . -1) (undo-tree-id17192 . -1) (undo-tree-id17193 . -1) (undo-tree-id17194 . -1) (undo-tree-id17195 . -1) (undo-tree-id17196 . -1) (undo-tree-id17197 . -1) (undo-tree-id17198 . -1) (undo-tree-id17199 . -1) (undo-tree-id17200 . -1) (undo-tree-id17201 . -1) (undo-tree-id17202 . -1) (undo-tree-id17203 . -1) (undo-tree-id17204 . -1) (undo-tree-id17205 . -1) (undo-tree-id17206 . -1) (undo-tree-id17207 . -1) (undo-tree-id17208 . -1) (undo-tree-id17209 . -1) (undo-tree-id17210 . -1) (undo-tree-id17211 . -1) (undo-tree-id17212 . -1) (undo-tree-id17213 . -1) (undo-tree-id17214 . -1) (undo-tree-id17215 . -1) (undo-tree-id17216 . -1) (undo-tree-id17217 . -1) (undo-tree-id17218 . -1) (undo-tree-id17219 . -1) (undo-tree-id17220 . -1) (undo-tree-id17221 . -1) (undo-tree-id17222 . -1) (undo-tree-id17223 . -1) (undo-tree-id17224 . -1) (undo-tree-id17225 . -1) (undo-tree-id17226 . -1) (undo-tree-id17227 . -1) (undo-tree-id17228 . -1) (undo-tree-id17229 . -1) (undo-tree-id17230 . -1) (undo-tree-id17231 . -1) (undo-tree-id17232 . -1) (undo-tree-id17233 . -1) (undo-tree-id17234 . -1) (undo-tree-id17235 . -1) (undo-tree-id17236 . -1) (undo-tree-id17237 . -1) (undo-tree-id17238 . -1) (undo-tree-id17239 . -1) (undo-tree-id17240 . -1) (undo-tree-id17241 . -1) (undo-tree-id17242 . -1) (undo-tree-id17243 . -1) (undo-tree-id17244 . -1) (undo-tree-id17245 . -1) (undo-tree-id17246 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3303) (undo-tree-id17247 . -1) (undo-tree-id17248 . -1) (undo-tree-id17249 . -1) (undo-tree-id17250 . -1) (undo-tree-id17251 . -1) (undo-tree-id17252 . -1) (undo-tree-id17253 . -1) (undo-tree-id17254 . -1) (undo-tree-id17255 . -1) (undo-tree-id17256 . -1) (undo-tree-id17257 . -1) (undo-tree-id17258 . -1) (undo-tree-id17259 . -1) (undo-tree-id17260 . -1) (undo-tree-id17261 . -1) (undo-tree-id17262 . -1) (undo-tree-id17263 . -1) (undo-tree-id17264 . -1) (undo-tree-id17265 . -1) (undo-tree-id17266 . -1) (undo-tree-id17267 . -1) (undo-tree-id17268 . -1) (undo-tree-id17269 . -1) (undo-tree-id17270 . -1) (undo-tree-id17271 . -1) (undo-tree-id17272 . -1) (undo-tree-id17273 . -1) (undo-tree-id17274 . -1) (undo-tree-id17275 . -1) (undo-tree-id17276 . -1) (undo-tree-id17277 . -1) (undo-tree-id17278 . -1) (undo-tree-id17279 . -1) (undo-tree-id17280 . -1) (undo-tree-id17281 . -1) (undo-tree-id17282 . -1) (undo-tree-id17283 . -1) (undo-tree-id17284 . -1) (undo-tree-id17285 . -1) (undo-tree-id17286 . -1) (undo-tree-id17287 . -1) (undo-tree-id17288 . -1) (undo-tree-id17289 . -1) (undo-tree-id17290 . -1) (undo-tree-id17291 . -1) (undo-tree-id17292 . -1) (undo-tree-id17293 . -1) (undo-tree-id17294 . -1) (undo-tree-id17295 . -1) (undo-tree-id17296 . -1) (undo-tree-id17297 . -1) (undo-tree-id17298 . -1) (undo-tree-id17299 . -1) (undo-tree-id17300 . -1) (undo-tree-id17301 . -1) (undo-tree-id17302 . -1) (undo-tree-id17303 . -1) (undo-tree-id17304 . -1) (undo-tree-id17305 . -1) (undo-tree-id17306 . -1) (undo-tree-id17307 . -1) (undo-tree-id17308 . -1) (undo-tree-id17309 . -1) (undo-tree-id17310 . -1) (undo-tree-id17311 . -1) (undo-tree-id17312 . -1) (undo-tree-id17313 . -1) (undo-tree-id17314 . -1) (undo-tree-id17315 . -1) (undo-tree-id17316 . -1) (undo-tree-id17317 . -1) (undo-tree-id17318 . -1) (undo-tree-id17319 . -1) (undo-tree-id17320 . -1) (undo-tree-id17321 . -1) (undo-tree-id17322 . -1) (undo-tree-id17323 . -1) (undo-tree-id17324 . -1) (undo-tree-id17325 . -1) (undo-tree-id17326 . -1) (undo-tree-id17327 . -1) (undo-tree-id17328 . -1) (undo-tree-id17329 . -1) (undo-tree-id17330 . -1) (undo-tree-id17331 . -1) (undo-tree-id17332 . -1) (undo-tree-id17333 . -1) (undo-tree-id17334 . -1) (undo-tree-id17335 . -1) (undo-tree-id17336 . -1) (undo-tree-id17337 . -1) (undo-tree-id17338 . -1) (undo-tree-id17339 . -1) (undo-tree-id17340 . -1) (undo-tree-id17341 . -1) (undo-tree-id17342 . -1) (undo-tree-id17343 . -1) (undo-tree-id17344 . -1) (undo-tree-id17345 . -1) (undo-tree-id17346 . -1) (undo-tree-id17347 . -1) (undo-tree-id17348 . -1) (undo-tree-id17349 . -1) (undo-tree-id17350 . -1) (undo-tree-id17351 . -1) (undo-tree-id17352 . -1) (undo-tree-id17353 . -1) (undo-tree-id17354 . -1) (undo-tree-id17355 . -1) (undo-tree-id17356 . -1) (undo-tree-id17357 . -1) (undo-tree-id17358 . -1) (undo-tree-id17359 . -1) (undo-tree-id17360 . -1) (undo-tree-id17361 . -1) (undo-tree-id17362 . -1) (undo-tree-id17363 . -1) (undo-tree-id17364 . -1) (undo-tree-id17365 . -1) (undo-tree-id17366 . -1) (undo-tree-id17367 . -1) (undo-tree-id17368 . -1) (undo-tree-id17369 . -1) (undo-tree-id17370 . -1) (undo-tree-id17371 . -1) (undo-tree-id17372 . -1) (undo-tree-id17373 . -1) (undo-tree-id17374 . -1) (undo-tree-id17375 . -1) (undo-tree-id17376 . -1) (undo-tree-id17377 . -1) (undo-tree-id17378 . -1) (undo-tree-id17379 . -1) (undo-tree-id17380 . -1) (undo-tree-id17381 . -1) (undo-tree-id17382 . -1) (undo-tree-id17383 . -1) (undo-tree-id17384 . -1) (undo-tree-id17385 . -1) (undo-tree-id17386 . -1) (undo-tree-id17387 . -1) (undo-tree-id17388 . -1) (undo-tree-id17389 . -1) (undo-tree-id17390 . -1) (undo-tree-id17391 . -1) (undo-tree-id17392 . -1) (undo-tree-id17393 . -1) (undo-tree-id17394 . -1) (undo-tree-id17395 . -1) (undo-tree-id17396 . -1) (undo-tree-id17397 . -1) (undo-tree-id17398 . -1) (undo-tree-id17399 . -1) (undo-tree-id17400 . -1) (undo-tree-id17401 . -1) (undo-tree-id17402 . -1) (undo-tree-id17403 . -1) (undo-tree-id17404 . -1) (undo-tree-id17405 . -1) (undo-tree-id17406 . -1) (undo-tree-id17407 . -1) (undo-tree-id17408 . -1) (undo-tree-id17409 . -1) (undo-tree-id17410 . -1) (undo-tree-id17411 . -1) (undo-tree-id17412 . -1) (undo-tree-id17413 . -1) (undo-tree-id17414 . -1) (undo-tree-id17415 . -1) (undo-tree-id17416 . -1) (undo-tree-id17417 . -1) (undo-tree-id17418 . -1) (undo-tree-id17419 . -1) (undo-tree-id17420 . -1) (undo-tree-id17421 . -1) (undo-tree-id17422 . -1) (undo-tree-id17423 . -1) (undo-tree-id17424 . -1) (undo-tree-id17425 . -1) (undo-tree-id17426 . -1) (undo-tree-id17427 . -1) (undo-tree-id17428 . -1) (undo-tree-id17429 . -1) (undo-tree-id17430 . -1) (undo-tree-id17431 . -1) (undo-tree-id17432 . -1) (undo-tree-id17433 . -1) (undo-tree-id17434 . -1) (undo-tree-id17435 . -1) (undo-tree-id17436 . -1) (undo-tree-id17437 . -1) (undo-tree-id17438 . -1) (undo-tree-id17439 . -1) (undo-tree-id17440 . -1) (undo-tree-id17441 . -1) (undo-tree-id17442 . -1) (undo-tree-id17443 . -1) (undo-tree-id17444 . -1) (undo-tree-id17445 . -1) (undo-tree-id17446 . -1) (undo-tree-id17447 . -1) (undo-tree-id17448 . -1) (undo-tree-id17449 . -1) (undo-tree-id17450 . -1) (undo-tree-id17451 . -1) (undo-tree-id17452 . -1) (undo-tree-id17453 . -1) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (undo-tree-id17460 . -1) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (undo-tree-id17470 . -1) (undo-tree-id17471 . -1) (undo-tree-id17472 . -1) (undo-tree-id17473 . -1) (undo-tree-id17474 . -1) (undo-tree-id17475 . -1) (undo-tree-id17476 . -1) (undo-tree-id17477 . -1) (undo-tree-id17478 . -1) (#("s" 0 1 (fontified t)) . -3304) (undo-tree-id17479 . -1) (undo-tree-id17480 . -1) (undo-tree-id17481 . -1) (undo-tree-id17482 . -1) (undo-tree-id17483 . -1) (undo-tree-id17484 . -1) (undo-tree-id17485 . -1) (undo-tree-id17486 . -1) (undo-tree-id17487 . -1) (undo-tree-id17488 . -1) (undo-tree-id17489 . -1) (undo-tree-id17490 . -1) (undo-tree-id17491 . -1) (undo-tree-id17492 . -1) (undo-tree-id17493 . -1) (undo-tree-id17494 . -1) (undo-tree-id17495 . -1) (undo-tree-id17496 . -1) (undo-tree-id17497 . -1) (undo-tree-id17498 . -1) (undo-tree-id17499 . -1) (undo-tree-id17500 . -1) (undo-tree-id17501 . -1) (undo-tree-id17502 . -1) (undo-tree-id17503 . -1) (undo-tree-id17504 . -1) (undo-tree-id17505 . -1) (undo-tree-id17506 . -1) (undo-tree-id17507 . -1) (undo-tree-id17508 . -1) (undo-tree-id17509 . -1) (undo-tree-id17510 . -1) (undo-tree-id17511 . -1) (undo-tree-id17512 . -1) (undo-tree-id17513 . -1) (undo-tree-id17514 . -1) (undo-tree-id17515 . -1) (undo-tree-id17516 . -1) (undo-tree-id17517 . -1) (undo-tree-id17518 . -1) (undo-tree-id17519 . -1) (undo-tree-id17520 . -1) (undo-tree-id17521 . -1) (undo-tree-id17522 . -1) (undo-tree-id17523 . -1) (undo-tree-id17524 . -1) (undo-tree-id17525 . -1) (undo-tree-id17526 . -1) (undo-tree-id17527 . -1) (undo-tree-id17528 . -1) (undo-tree-id17529 . -1) (undo-tree-id17530 . -1) (undo-tree-id17531 . -1) (undo-tree-id17532 . -1) (undo-tree-id17533 . -1) (undo-tree-id17534 . -1) (undo-tree-id17535 . -1) (undo-tree-id17536 . -1) (undo-tree-id17537 . -1) (undo-tree-id17538 . -1) (undo-tree-id17539 . -1) (undo-tree-id17540 . -1) (undo-tree-id17541 . -1) (undo-tree-id17542 . -1) (undo-tree-id17543 . -1) (undo-tree-id17544 . -1) (undo-tree-id17545 . -1) (undo-tree-id17546 . -1) (undo-tree-id17547 . -1) (undo-tree-id17548 . -1) (undo-tree-id17549 . -1) (undo-tree-id17550 . -1) (undo-tree-id17551 . -1) (undo-tree-id17552 . -1) (undo-tree-id17553 . -1) (undo-tree-id17554 . -1) (undo-tree-id17555 . -1) (undo-tree-id17556 . -1) (undo-tree-id17557 . -1) (undo-tree-id17558 . -1) (undo-tree-id17559 . -1) (undo-tree-id17560 . -1) (undo-tree-id17561 . -1) (undo-tree-id17562 . -1) (undo-tree-id17563 . -1) (undo-tree-id17564 . -1) (undo-tree-id17565 . -1) (undo-tree-id17566 . -1) (undo-tree-id17567 . -1) (undo-tree-id17568 . -1) (undo-tree-id17569 . -1) (undo-tree-id17570 . -1) (undo-tree-id17571 . -1) (undo-tree-id17572 . -1) (undo-tree-id17573 . -1) (undo-tree-id17574 . -1) (undo-tree-id17575 . -1) (undo-tree-id17576 . -1) (undo-tree-id17577 . -1) (undo-tree-id17578 . -1) (undo-tree-id17579 . -1) (undo-tree-id17580 . -1) (undo-tree-id17581 . -1) (undo-tree-id17582 . -1) (undo-tree-id17583 . -1) (undo-tree-id17584 . -1) (undo-tree-id17585 . -1) (undo-tree-id17586 . -1) (undo-tree-id17587 . -1) (undo-tree-id17588 . -1) (undo-tree-id17589 . -1) (undo-tree-id17590 . -1) (undo-tree-id17591 . -1) (undo-tree-id17592 . -1) (undo-tree-id17593 . -1) (undo-tree-id17594 . -1) (undo-tree-id17595 . -1) (undo-tree-id17596 . -1) (undo-tree-id17597 . -1) (undo-tree-id17598 . -1) (undo-tree-id17599 . -1) (undo-tree-id17600 . -1) (undo-tree-id17601 . -1) (undo-tree-id17602 . -1) (undo-tree-id17603 . -1) (undo-tree-id17604 . -1) (undo-tree-id17605 . -1) (undo-tree-id17606 . -1) (undo-tree-id17607 . -1) (undo-tree-id17608 . -1) (undo-tree-id17609 . -1) (undo-tree-id17610 . -1) (undo-tree-id17611 . -1) (undo-tree-id17612 . -1) (undo-tree-id17613 . -1) (undo-tree-id17614 . -1) (undo-tree-id17615 . -1) (undo-tree-id17616 . -1) (undo-tree-id17617 . -1) (undo-tree-id17618 . -1) (undo-tree-id17619 . -1) (undo-tree-id17620 . -1) (undo-tree-id17621 . -1) (undo-tree-id17622 . -1) (undo-tree-id17623 . -1) (undo-tree-id17624 . -1) (undo-tree-id17625 . -1) (undo-tree-id17626 . -1) (undo-tree-id17627 . -1) (undo-tree-id17628 . -1) (undo-tree-id17629 . -1) (undo-tree-id17630 . -1) (undo-tree-id17631 . -1) (undo-tree-id17632 . -1) (undo-tree-id17633 . -1) (undo-tree-id17634 . -1) (undo-tree-id17635 . -1) (undo-tree-id17636 . -1) (undo-tree-id17637 . -1) (undo-tree-id17638 . -1) (undo-tree-id17639 . -1) (undo-tree-id17640 . -1) (undo-tree-id17641 . -1) (undo-tree-id17642 . -1) (undo-tree-id17643 . -1) (undo-tree-id17644 . -1) (undo-tree-id17645 . -1) (undo-tree-id17646 . -1) (undo-tree-id17647 . -1) (undo-tree-id17648 . -1) (undo-tree-id17649 . -1) (undo-tree-id17650 . -1) (undo-tree-id17651 . -1) (undo-tree-id17652 . -1) (undo-tree-id17653 . -1) (undo-tree-id17654 . -1) (undo-tree-id17655 . -1) (undo-tree-id17656 . -1) (undo-tree-id17657 . -1) (undo-tree-id17658 . -1) (undo-tree-id17659 . -1) (undo-tree-id17660 . -1) (undo-tree-id17661 . -1) (undo-tree-id17662 . -1) (undo-tree-id17663 . -1) (undo-tree-id17664 . -1) (undo-tree-id17665 . -1) (undo-tree-id17666 . -1) (undo-tree-id17667 . -1) (undo-tree-id17668 . -1) (undo-tree-id17669 . -1) (undo-tree-id17670 . -1) (undo-tree-id17671 . -1) (undo-tree-id17672 . -1) (undo-tree-id17673 . -1) (undo-tree-id17674 . -1) (undo-tree-id17675 . -1) (undo-tree-id17676 . -1) (undo-tree-id17677 . -1) (undo-tree-id17678 . -1) (undo-tree-id17679 . -1) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (undo-tree-id17694 . -1) (undo-tree-id17695 . -1) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (undo-tree-id17698 . -1) (undo-tree-id17699 . -1) (undo-tree-id17700 . -1) (#(" " 0 1 (fontified t)) . -3305) (undo-tree-id17701 . -1) (undo-tree-id17702 . -1) (undo-tree-id17703 . -1) (undo-tree-id17704 . -1) (undo-tree-id17705 . -1) (undo-tree-id17706 . -1) (undo-tree-id17707 . -1) (undo-tree-id17708 . -1) (undo-tree-id17709 . -1) (undo-tree-id17710 . -1) (undo-tree-id17711 . -1) (undo-tree-id17712 . -1) (undo-tree-id17713 . -1) (undo-tree-id17714 . -1) (undo-tree-id17715 . -1) (undo-tree-id17716 . -1) (undo-tree-id17717 . -1) (undo-tree-id17718 . -1) (undo-tree-id17719 . -1) (undo-tree-id17720 . -1) (undo-tree-id17721 . -1) (undo-tree-id17722 . -1) (undo-tree-id17723 . -1) (undo-tree-id17724 . -1) (undo-tree-id17725 . -1) (undo-tree-id17726 . -1) (undo-tree-id17727 . -1) (undo-tree-id17728 . -1) (undo-tree-id17729 . -1) (undo-tree-id17730 . -1) (undo-tree-id17731 . -1) (undo-tree-id17732 . -1) (undo-tree-id17733 . -1) (undo-tree-id17734 . -1) (undo-tree-id17735 . -1) (undo-tree-id17736 . -1) (undo-tree-id17737 . -1) (undo-tree-id17738 . -1) (undo-tree-id17739 . -1) (undo-tree-id17740 . -1) (undo-tree-id17741 . -1) (undo-tree-id17742 . -1) (undo-tree-id17743 . -1) (undo-tree-id17744 . -1) (undo-tree-id17745 . -1) (undo-tree-id17746 . -1) (undo-tree-id17747 . -1) (undo-tree-id17748 . -1) (undo-tree-id17749 . -1) (undo-tree-id17750 . -1) (undo-tree-id17751 . -1) (undo-tree-id17752 . -1) (undo-tree-id17753 . -1) (undo-tree-id17754 . -1) (undo-tree-id17755 . -1) (undo-tree-id17756 . -1) (undo-tree-id17757 . -1) (undo-tree-id17758 . -1) (undo-tree-id17759 . -1) (undo-tree-id17760 . -1) (undo-tree-id17761 . -1) (undo-tree-id17762 . -1) (undo-tree-id17763 . -1) (undo-tree-id17764 . -1) (undo-tree-id17765 . -1) (undo-tree-id17766 . -1) (undo-tree-id17767 . -1) (undo-tree-id17768 . -1) (undo-tree-id17769 . -1) (undo-tree-id17770 . -1) (undo-tree-id17771 . -1) (undo-tree-id17772 . -1) (undo-tree-id17773 . -1) (undo-tree-id17774 . -1) (undo-tree-id17775 . -1) (undo-tree-id17776 . -1) (undo-tree-id17777 . -1) (undo-tree-id17778 . -1) (undo-tree-id17779 . -1) (undo-tree-id17780 . -1) (undo-tree-id17781 . -1) (undo-tree-id17782 . -1) (undo-tree-id17783 . -1) (undo-tree-id17784 . -1) (undo-tree-id17785 . -1) (undo-tree-id17786 . -1) (undo-tree-id17787 . -1) (undo-tree-id17788 . -1) (undo-tree-id17789 . -1) (undo-tree-id17790 . -1) (undo-tree-id17791 . -1) (undo-tree-id17792 . -1) (undo-tree-id17793 . -1) (undo-tree-id17794 . -1) (undo-tree-id17795 . -1) (undo-tree-id17796 . -1) (undo-tree-id17797 . -1) (undo-tree-id17798 . -1) (undo-tree-id17799 . -1) (undo-tree-id17800 . -1) (undo-tree-id17801 . -1) (undo-tree-id17802 . -1) (undo-tree-id17803 . -1) (undo-tree-id17804 . -1) (undo-tree-id17805 . -1) (undo-tree-id17806 . -1) (undo-tree-id17807 . -1) (undo-tree-id17808 . -1) (undo-tree-id17809 . -1) (undo-tree-id17810 . -1) (undo-tree-id17811 . -1) (undo-tree-id17812 . -1) (undo-tree-id17813 . -1) (undo-tree-id17814 . -1) (undo-tree-id17815 . -1) (undo-tree-id17816 . -1) (undo-tree-id17817 . -1) (undo-tree-id17818 . -1) (undo-tree-id17819 . -1) (undo-tree-id17820 . -1) (undo-tree-id17821 . -1) (undo-tree-id17822 . -1) (undo-tree-id17823 . -1) (undo-tree-id17824 . -1) (undo-tree-id17825 . -1) (undo-tree-id17826 . -1) (undo-tree-id17827 . -1) (undo-tree-id17828 . -1) (undo-tree-id17829 . -1) (undo-tree-id17830 . -1) (undo-tree-id17831 . -1) (undo-tree-id17832 . -1) (undo-tree-id17833 . -1) (undo-tree-id17834 . -1) (undo-tree-id17835 . -1) (undo-tree-id17836 . -1) (undo-tree-id17837 . -1) (undo-tree-id17838 . -1) (undo-tree-id17839 . -1) (undo-tree-id17840 . -1) (undo-tree-id17841 . -1) (undo-tree-id17842 . -1) (undo-tree-id17843 . -1) (undo-tree-id17844 . -1) (undo-tree-id17845 . -1) (undo-tree-id17846 . -1) (undo-tree-id17847 . -1) (undo-tree-id17848 . -1) (undo-tree-id17849 . -1) (undo-tree-id17850 . -1) (undo-tree-id17851 . -1) (undo-tree-id17852 . -1) (undo-tree-id17853 . -1) (undo-tree-id17854 . -1) (undo-tree-id17855 . -1) (undo-tree-id17856 . -1) (undo-tree-id17857 . -1) (undo-tree-id17858 . -1) (undo-tree-id17859 . -1) (undo-tree-id17860 . -1) (undo-tree-id17861 . -1) (undo-tree-id17862 . -1) (undo-tree-id17863 . -1) (undo-tree-id17864 . -1) (undo-tree-id17865 . -1) (undo-tree-id17866 . -1) (undo-tree-id17867 . -1) (undo-tree-id17868 . -1) (undo-tree-id17869 . -1) (undo-tree-id17870 . -1) (undo-tree-id17871 . -1) (undo-tree-id17872 . -1) (undo-tree-id17873 . -1) (undo-tree-id17874 . -1) (undo-tree-id17875 . -1) (undo-tree-id17876 . -1) (undo-tree-id17877 . -1) (undo-tree-id17878 . -1) (undo-tree-id17879 . -1) (undo-tree-id17880 . -1) (undo-tree-id17881 . -1) (undo-tree-id17882 . -1) (undo-tree-id17883 . -1) (undo-tree-id17884 . -1) (undo-tree-id17885 . -1) (undo-tree-id17886 . -1) (undo-tree-id17887 . -1) (undo-tree-id17888 . -1) (undo-tree-id17889 . -1) (undo-tree-id17890 . -1) (undo-tree-id17891 . -1) (undo-tree-id17892 . -1) (undo-tree-id17893 . -1) (undo-tree-id17894 . -1) (undo-tree-id17895 . -1) (undo-tree-id17896 . -1) (undo-tree-id17897 . -1) (undo-tree-id17898 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3306) (undo-tree-id17899 . -1) (undo-tree-id17900 . -1) (undo-tree-id17901 . -1) (undo-tree-id17902 . -1) (undo-tree-id17903 . -1) (undo-tree-id17904 . -1) (undo-tree-id17905 . -1) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) (undo-tree-id17918 . -1) (undo-tree-id17919 . -1) (undo-tree-id17920 . -1) (undo-tree-id17921 . -1) (undo-tree-id17922 . -1) (undo-tree-id17923 . -1) (undo-tree-id17924 . -1) (undo-tree-id17925 . -1) (undo-tree-id17926 . -1) (undo-tree-id17927 . -1) (undo-tree-id17928 . -1) (undo-tree-id17929 . -1) (undo-tree-id17930 . -1) (undo-tree-id17931 . -1) (undo-tree-id17932 . -1) (undo-tree-id17933 . -1) (undo-tree-id17934 . -1) (undo-tree-id17935 . -1) (undo-tree-id17936 . -1) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) (undo-tree-id17939 . -1) (undo-tree-id17940 . -1) (undo-tree-id17941 . -1) (undo-tree-id17942 . -1) (undo-tree-id17943 . -1) (undo-tree-id17944 . -1) (undo-tree-id17945 . -1) (undo-tree-id17946 . -1) (undo-tree-id17947 . -1) (undo-tree-id17948 . -1) (undo-tree-id17949 . -1) (undo-tree-id17950 . -1) (undo-tree-id17951 . -1) (undo-tree-id17952 . -1) (undo-tree-id17953 . -1) (undo-tree-id17954 . -1) (undo-tree-id17955 . -1) (undo-tree-id17956 . -1) (undo-tree-id17957 . -1) (undo-tree-id17958 . -1) (undo-tree-id17959 . -1) (undo-tree-id17960 . -1) (undo-tree-id17961 . -1) (undo-tree-id17962 . -1) (undo-tree-id17963 . -1) (undo-tree-id17964 . -1) (undo-tree-id17965 . -1) (undo-tree-id17966 . -1) (undo-tree-id17967 . -1) (undo-tree-id17968 . -1) (undo-tree-id17969 . -1) (undo-tree-id17970 . -1) (undo-tree-id17971 . -1) (undo-tree-id17972 . -1) (undo-tree-id17973 . -1) (undo-tree-id17974 . -1) (undo-tree-id17975 . -1) (undo-tree-id17976 . -1) (undo-tree-id17977 . -1) (undo-tree-id17978 . -1) (undo-tree-id17979 . -1) (undo-tree-id17980 . -1) (undo-tree-id17981 . -1) (undo-tree-id17982 . -1) (undo-tree-id17983 . -1) (undo-tree-id17984 . -1) (undo-tree-id17985 . -1) (undo-tree-id17986 . -1) (undo-tree-id17987 . -1) (undo-tree-id17988 . -1) (undo-tree-id17989 . -1) (undo-tree-id17990 . -1) (undo-tree-id17991 . -1) (undo-tree-id17992 . -1) (undo-tree-id17993 . -1) (undo-tree-id17994 . -1) (undo-tree-id17995 . -1) (undo-tree-id17996 . -1) (undo-tree-id17997 . -1) (undo-tree-id17998 . -1) (undo-tree-id17999 . -1) (undo-tree-id18000 . -1) (undo-tree-id18001 . -1) (undo-tree-id18002 . -1) (undo-tree-id18003 . -1) (undo-tree-id18004 . -1) (undo-tree-id18005 . -1) (undo-tree-id18006 . -1) (undo-tree-id18007 . -1) (undo-tree-id18008 . -1) (undo-tree-id18009 . -1) (undo-tree-id18010 . -1) (undo-tree-id18011 . -1) (undo-tree-id18012 . -1) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (undo-tree-id18023 . -1) (undo-tree-id18024 . -1) (undo-tree-id18025 . -1) (undo-tree-id18026 . -1) (undo-tree-id18027 . -1) (undo-tree-id18028 . -1) (undo-tree-id18029 . -1) (undo-tree-id18030 . -1) (undo-tree-id18031 . -1) (undo-tree-id18032 . -1) (undo-tree-id18033 . -1) (undo-tree-id18034 . -1) (undo-tree-id18035 . -1) (undo-tree-id18036 . -1) (undo-tree-id18037 . -1) (undo-tree-id18038 . -1) (undo-tree-id18039 . -1) (undo-tree-id18040 . -1) (undo-tree-id18041 . -1) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) (undo-tree-id18046 . -1) (undo-tree-id18047 . -1) (undo-tree-id18048 . -1) (undo-tree-id18049 . -1) (undo-tree-id18050 . -1) (undo-tree-id18051 . -1) (undo-tree-id18052 . -1) (undo-tree-id18053 . -1) (undo-tree-id18054 . -1) (undo-tree-id18055 . -1) (undo-tree-id18056 . -1) (undo-tree-id18057 . -1) (undo-tree-id18058 . -1) (undo-tree-id18059 . -1) (undo-tree-id18060 . -1) (undo-tree-id18061 . -1) (undo-tree-id18062 . -1) (undo-tree-id18063 . -1) (undo-tree-id18064 . -1) (undo-tree-id18065 . -1) (undo-tree-id18066 . -1) (undo-tree-id18067 . -1) (undo-tree-id18068 . -1) (undo-tree-id18069 . -1) (undo-tree-id18070 . -1) (undo-tree-id18071 . -1) (undo-tree-id18072 . -1) (undo-tree-id18073 . -1) (undo-tree-id18074 . -1) (undo-tree-id18075 . -1) (undo-tree-id18076 . -1) (undo-tree-id18077 . -1) (undo-tree-id18078 . -1) (undo-tree-id18079 . -1) (#(" " 0 1 (fontified t)) . -3307) (undo-tree-id18080 . -1) (undo-tree-id18081 . -1) (undo-tree-id18082 . -1) (undo-tree-id18083 . -1) (undo-tree-id18084 . -1) (undo-tree-id18085 . -1) (undo-tree-id18086 . -1) (undo-tree-id18087 . -1) (undo-tree-id18088 . -1) (undo-tree-id18089 . -1) (undo-tree-id18090 . -1) (undo-tree-id18091 . -1) (undo-tree-id18092 . -1) (undo-tree-id18093 . -1) (undo-tree-id18094 . -1) (undo-tree-id18095 . -1) (undo-tree-id18096 . -1) (undo-tree-id18097 . -1) (undo-tree-id18098 . -1) (undo-tree-id18099 . -1) (undo-tree-id18100 . -1) (undo-tree-id18101 . -1) (undo-tree-id18102 . -1) (undo-tree-id18103 . -1) (undo-tree-id18104 . -1) (undo-tree-id18105 . -1) (undo-tree-id18106 . -1) (undo-tree-id18107 . -1) (undo-tree-id18108 . -1) (undo-tree-id18109 . -1) (undo-tree-id18110 . -1) (undo-tree-id18111 . -1) (undo-tree-id18112 . -1) (undo-tree-id18113 . -1) (undo-tree-id18114 . -1) (undo-tree-id18115 . -1) (undo-tree-id18116 . -1) (undo-tree-id18117 . -1) (undo-tree-id18118 . -1) (undo-tree-id18119 . -1) (undo-tree-id18120 . -1) (undo-tree-id18121 . -1) (undo-tree-id18122 . -1) (undo-tree-id18123 . -1) (undo-tree-id18124 . -1) (undo-tree-id18125 . -1) (undo-tree-id18126 . -1) (undo-tree-id18127 . -1) (undo-tree-id18128 . -1) (undo-tree-id18129 . -1) (undo-tree-id18130 . -1) (undo-tree-id18131 . -1) (undo-tree-id18132 . -1) (undo-tree-id18133 . -1) (undo-tree-id18134 . -1) (undo-tree-id18135 . -1) (undo-tree-id18136 . -1) (undo-tree-id18137 . -1) (undo-tree-id18138 . -1) (undo-tree-id18139 . -1) (undo-tree-id18140 . -1) (undo-tree-id18141 . -1) (undo-tree-id18142 . -1) (undo-tree-id18143 . -1) (undo-tree-id18144 . -1) (undo-tree-id18145 . -1) (undo-tree-id18146 . -1) (undo-tree-id18147 . -1) (undo-tree-id18148 . -1) (undo-tree-id18149 . -1) (undo-tree-id18150 . -1) (undo-tree-id18151 . -1) (undo-tree-id18152 . -1) (undo-tree-id18153 . -1) (undo-tree-id18154 . -1) (undo-tree-id18155 . -1) (undo-tree-id18156 . -1) (undo-tree-id18157 . -1) (undo-tree-id18158 . -1) (undo-tree-id18159 . -1) (undo-tree-id18160 . -1) (undo-tree-id18161 . -1) (undo-tree-id18162 . -1) (undo-tree-id18163 . -1) (undo-tree-id18164 . -1) (undo-tree-id18165 . -1) (undo-tree-id18166 . -1) (undo-tree-id18167 . -1) (undo-tree-id18168 . -1) (undo-tree-id18169 . -1) (undo-tree-id18170 . -1) (undo-tree-id18171 . -1) (undo-tree-id18172 . -1) (undo-tree-id18173 . -1) (undo-tree-id18174 . -1) (undo-tree-id18175 . -1) (undo-tree-id18176 . -1) (undo-tree-id18177 . -1) (undo-tree-id18178 . -1) (undo-tree-id18179 . -1) (undo-tree-id18180 . -1) (undo-tree-id18181 . -1) (undo-tree-id18182 . -1) (undo-tree-id18183 . -1) (undo-tree-id18184 . -1) (undo-tree-id18185 . -1) (undo-tree-id18186 . -1) (undo-tree-id18187 . -1) (undo-tree-id18188 . -1) (undo-tree-id18189 . -1) (undo-tree-id18190 . -1) (undo-tree-id18191 . -1) (undo-tree-id18192 . -1) (undo-tree-id18193 . -1) (undo-tree-id18194 . -1) (undo-tree-id18195 . -1) (undo-tree-id18196 . -1) (undo-tree-id18197 . -1) (undo-tree-id18198 . -1) (undo-tree-id18199 . -1) (undo-tree-id18200 . -1) (undo-tree-id18201 . -1) (undo-tree-id18202 . -1) (undo-tree-id18203 . -1) (undo-tree-id18204 . -1) (undo-tree-id18205 . -1) (undo-tree-id18206 . -1) (undo-tree-id18207 . -1) (undo-tree-id18208 . -1) (undo-tree-id18209 . -1) (undo-tree-id18210 . -1) (undo-tree-id18211 . -1) (undo-tree-id18212 . -1) (undo-tree-id18213 . -1) (undo-tree-id18214 . -1) (undo-tree-id18215 . -1) (undo-tree-id18216 . -1) (undo-tree-id18217 . -1) (undo-tree-id18218 . -1) (undo-tree-id18219 . -1) (undo-tree-id18220 . -1) (undo-tree-id18221 . -1) (undo-tree-id18222 . -1) (undo-tree-id18223 . -1) (undo-tree-id18224 . -1) (undo-tree-id18225 . -1) (undo-tree-id18226 . -1) (undo-tree-id18227 . -1) (undo-tree-id18228 . -1) (undo-tree-id18229 . -1) (undo-tree-id18230 . -1) (undo-tree-id18231 . -1) (undo-tree-id18232 . -1) (undo-tree-id18233 . -1) (undo-tree-id18234 . -1) (undo-tree-id18235 . -1) (undo-tree-id18236 . -1) (undo-tree-id18237 . -1) (undo-tree-id18238 . -1) (undo-tree-id18239 . -1) (undo-tree-id18240 . -1) (undo-tree-id18241 . -1) (undo-tree-id18242 . -1) (undo-tree-id18243 . -1) (#("W" 0 1 (fontified t)) . -3308) (undo-tree-id18244 . -1) (undo-tree-id18245 . -1) (undo-tree-id18246 . -1) (undo-tree-id18247 . -1) (undo-tree-id18248 . -1) (undo-tree-id18249 . -1) (undo-tree-id18250 . -1) (undo-tree-id18251 . -1) (undo-tree-id18252 . -1) (undo-tree-id18253 . -1) (undo-tree-id18254 . -1) (undo-tree-id18255 . -1) (undo-tree-id18256 . -1) (undo-tree-id18257 . -1) (undo-tree-id18258 . -1) (undo-tree-id18259 . -1) (undo-tree-id18260 . -1) (undo-tree-id18261 . -1) (undo-tree-id18262 . -1) (undo-tree-id18263 . -1) (undo-tree-id18264 . -1) (undo-tree-id18265 . -1) (undo-tree-id18266 . -1) (undo-tree-id18267 . -1) (undo-tree-id18268 . -1) (undo-tree-id18269 . -1) (undo-tree-id18270 . -1) (undo-tree-id18271 . -1) (undo-tree-id18272 . -1) (undo-tree-id18273 . -1) (undo-tree-id18274 . -1) (undo-tree-id18275 . -1) (undo-tree-id18276 . -1) (undo-tree-id18277 . -1) (undo-tree-id18278 . -1) (undo-tree-id18279 . -1) (undo-tree-id18280 . -1) (undo-tree-id18281 . -1) (undo-tree-id18282 . -1) (undo-tree-id18283 . -1) (undo-tree-id18284 . -1) (undo-tree-id18285 . -1) (undo-tree-id18286 . -1) (undo-tree-id18287 . -1) (undo-tree-id18288 . -1) (undo-tree-id18289 . -1) (undo-tree-id18290 . -1) (undo-tree-id18291 . -1) (undo-tree-id18292 . -1) (undo-tree-id18293 . -1) (undo-tree-id18294 . -1) (undo-tree-id18295 . -1) (undo-tree-id18296 . -1) (undo-tree-id18297 . -1) (undo-tree-id18298 . -1) (undo-tree-id18299 . -1) (undo-tree-id18300 . -1) (undo-tree-id18301 . -1) (undo-tree-id18302 . -1) (undo-tree-id18303 . -1) (undo-tree-id18304 . -1) (undo-tree-id18305 . -1) (undo-tree-id18306 . -1) (undo-tree-id18307 . -1) (undo-tree-id18308 . -1) (undo-tree-id18309 . -1) (undo-tree-id18310 . -1) (undo-tree-id18311 . -1) (undo-tree-id18312 . -1) (undo-tree-id18313 . -1) (undo-tree-id18314 . -1) (undo-tree-id18315 . -1) (undo-tree-id18316 . -1) (undo-tree-id18317 . -1) (undo-tree-id18318 . -1) (undo-tree-id18319 . -1) (undo-tree-id18320 . -1) (undo-tree-id18321 . -1) (undo-tree-id18322 . -1) (undo-tree-id18323 . -1) (undo-tree-id18324 . -1) (undo-tree-id18325 . -1) (undo-tree-id18326 . -1) (undo-tree-id18327 . -1) (undo-tree-id18328 . -1) (undo-tree-id18329 . -1) (undo-tree-id18330 . -1) (undo-tree-id18331 . -1) (undo-tree-id18332 . -1) (undo-tree-id18333 . -1) (undo-tree-id18334 . -1) (undo-tree-id18335 . -1) (undo-tree-id18336 . -1) (undo-tree-id18337 . -1) (undo-tree-id18338 . -1) (undo-tree-id18339 . -1) (undo-tree-id18340 . -1) (undo-tree-id18341 . -1) (undo-tree-id18342 . -1) (undo-tree-id18343 . -1) (undo-tree-id18344 . -1) (undo-tree-id18345 . -1) (undo-tree-id18346 . -1) (undo-tree-id18347 . -1) (undo-tree-id18348 . -1) (undo-tree-id18349 . -1) (undo-tree-id18350 . -1) (undo-tree-id18351 . -1) (undo-tree-id18352 . -1) (undo-tree-id18353 . -1) (undo-tree-id18354 . -1) (undo-tree-id18355 . -1) (undo-tree-id18356 . -1) (undo-tree-id18357 . -1) (undo-tree-id18358 . -1) (undo-tree-id18359 . -1) (undo-tree-id18360 . -1) (undo-tree-id18361 . -1) (undo-tree-id18362 . -1) (undo-tree-id18363 . -1) (undo-tree-id18364 . -1) (undo-tree-id18365 . -1) (undo-tree-id18366 . -1) (undo-tree-id18367 . -1) (undo-tree-id18368 . -1) (undo-tree-id18369 . -1) (undo-tree-id18370 . -1) (undo-tree-id18371 . -1) (undo-tree-id18372 . -1) (undo-tree-id18373 . -1) (undo-tree-id18374 . -1) (undo-tree-id18375 . -1) (undo-tree-id18376 . -1) (undo-tree-id18377 . -1) (undo-tree-id18378 . -1) (undo-tree-id18379 . -1) (undo-tree-id18380 . -1) (undo-tree-id18381 . -1) (undo-tree-id18382 . -1) (undo-tree-id18383 . -1) (undo-tree-id18384 . -1) (undo-tree-id18385 . -1) (undo-tree-id18386 . -1) (undo-tree-id18387 . -1) (undo-tree-id18388 . -1) (undo-tree-id18389 . -1) (undo-tree-id18390 . -1) (#("i" 0 1 (fontified t)) . -3309) (undo-tree-id18391 . -1) (undo-tree-id18392 . -1) (undo-tree-id18393 . -1) (undo-tree-id18394 . -1) (undo-tree-id18395 . -1) (undo-tree-id18396 . -1) (undo-tree-id18397 . -1) (undo-tree-id18398 . -1) (undo-tree-id18399 . -1) (undo-tree-id18400 . -1) (undo-tree-id18401 . -1) (undo-tree-id18402 . -1) (undo-tree-id18403 . -1) (undo-tree-id18404 . -1) (undo-tree-id18405 . -1) (undo-tree-id18406 . -1) (undo-tree-id18407 . -1) (undo-tree-id18408 . -1) (undo-tree-id18409 . -1) (undo-tree-id18410 . -1) (undo-tree-id18411 . -1) (undo-tree-id18412 . -1) (undo-tree-id18413 . -1) (undo-tree-id18414 . -1) (undo-tree-id18415 . -1) (undo-tree-id18416 . -1) (undo-tree-id18417 . -1) (undo-tree-id18418 . -1) (undo-tree-id18419 . -1) (undo-tree-id18420 . -1) (undo-tree-id18421 . -1) (undo-tree-id18422 . -1) (undo-tree-id18423 . -1) (undo-tree-id18424 . -1) (undo-tree-id18425 . -1) (undo-tree-id18426 . -1) (undo-tree-id18427 . -1) (undo-tree-id18428 . -1) (undo-tree-id18429 . -1) (undo-tree-id18430 . -1) (undo-tree-id18431 . -1) (undo-tree-id18432 . -1) (undo-tree-id18433 . -1) (undo-tree-id18434 . -1) (undo-tree-id18435 . -1) (undo-tree-id18436 . -1) (undo-tree-id18437 . -1) (undo-tree-id18438 . -1) (undo-tree-id18439 . -1) (undo-tree-id18440 . -1) (undo-tree-id18441 . -1) (undo-tree-id18442 . -1) (undo-tree-id18443 . -1) (undo-tree-id18444 . -1) (undo-tree-id18445 . -1) (undo-tree-id18446 . -1) (undo-tree-id18447 . -1) (undo-tree-id18448 . -1) (undo-tree-id18449 . -1) (undo-tree-id18450 . -1) (undo-tree-id18451 . -1) (undo-tree-id18452 . -1) (undo-tree-id18453 . -1) (undo-tree-id18454 . -1) (undo-tree-id18455 . -1) (undo-tree-id18456 . -1) (undo-tree-id18457 . -1) (undo-tree-id18458 . -1) (undo-tree-id18459 . -1) (undo-tree-id18460 . -1) (undo-tree-id18461 . -1) (undo-tree-id18462 . -1) (undo-tree-id18463 . -1) (undo-tree-id18464 . -1) (undo-tree-id18465 . -1) (undo-tree-id18466 . -1) (undo-tree-id18467 . -1) (undo-tree-id18468 . -1) (undo-tree-id18469 . -1) (undo-tree-id18470 . -1) (undo-tree-id18471 . -1) (undo-tree-id18472 . -1) (undo-tree-id18473 . -1) (undo-tree-id18474 . -1) (undo-tree-id18475 . -1) (undo-tree-id18476 . -1) (undo-tree-id18477 . -1) (undo-tree-id18478 . -1) (undo-tree-id18479 . -1) (undo-tree-id18480 . -1) (undo-tree-id18481 . -1) (undo-tree-id18482 . -1) (undo-tree-id18483 . -1) (undo-tree-id18484 . -1) (undo-tree-id18485 . -1) (undo-tree-id18486 . -1) (undo-tree-id18487 . -1) (undo-tree-id18488 . -1) (undo-tree-id18489 . -1) (undo-tree-id18490 . -1) (undo-tree-id18491 . -1) (undo-tree-id18492 . -1) (undo-tree-id18493 . -1) (undo-tree-id18494 . -1) (undo-tree-id18495 . -1) (undo-tree-id18496 . -1) (undo-tree-id18497 . -1) (undo-tree-id18498 . -1) (undo-tree-id18499 . -1) (undo-tree-id18500 . -1) (undo-tree-id18501 . -1) (undo-tree-id18502 . -1) (undo-tree-id18503 . -1) (undo-tree-id18504 . -1) (undo-tree-id18505 . -1) (undo-tree-id18506 . -1) (undo-tree-id18507 . -1) (undo-tree-id18508 . -1) (undo-tree-id18509 . -1) (undo-tree-id18510 . -1) (undo-tree-id18511 . -1) (undo-tree-id18512 . -1) (undo-tree-id18513 . -1) (undo-tree-id18514 . -1) (undo-tree-id18515 . -1) (undo-tree-id18516 . -1) (undo-tree-id18517 . -1) (undo-tree-id18518 . -1) (undo-tree-id18519 . -1) (#("j" 0 1 (fontified t)) . -3310) (undo-tree-id18520 . -1) (undo-tree-id18521 . -1) (undo-tree-id18522 . -1) (undo-tree-id18523 . -1) (undo-tree-id18524 . -1) (undo-tree-id18525 . -1) (undo-tree-id18526 . -1) (undo-tree-id18527 . -1) (undo-tree-id18528 . -1) (undo-tree-id18529 . -1) (undo-tree-id18530 . -1) (undo-tree-id18531 . -1) (undo-tree-id18532 . -1) (undo-tree-id18533 . -1) (undo-tree-id18534 . -1) (undo-tree-id18535 . -1) (undo-tree-id18536 . -1) (undo-tree-id18537 . -1) (undo-tree-id18538 . -1) (undo-tree-id18539 . -1) (undo-tree-id18540 . -1) (undo-tree-id18541 . -1) (undo-tree-id18542 . -1) (undo-tree-id18543 . -1) (undo-tree-id18544 . -1) (undo-tree-id18545 . -1) (undo-tree-id18546 . -1) (undo-tree-id18547 . -1) (undo-tree-id18548 . -1) (undo-tree-id18549 . -1) (undo-tree-id18550 . -1) (undo-tree-id18551 . -1) (undo-tree-id18552 . -1) (undo-tree-id18553 . -1) (undo-tree-id18554 . -1) (undo-tree-id18555 . -1) (undo-tree-id18556 . -1) (undo-tree-id18557 . -1) (undo-tree-id18558 . -1) (undo-tree-id18559 . -1) (undo-tree-id18560 . -1) (undo-tree-id18561 . -1) (undo-tree-id18562 . -1) (undo-tree-id18563 . -1) (undo-tree-id18564 . -1) (undo-tree-id18565 . -1) (undo-tree-id18566 . -1) (undo-tree-id18567 . -1) (undo-tree-id18568 . -1) (undo-tree-id18569 . -1) (undo-tree-id18570 . -1) (undo-tree-id18571 . -1) (undo-tree-id18572 . -1) (undo-tree-id18573 . -1) (undo-tree-id18574 . -1) (undo-tree-id18575 . -1) (undo-tree-id18576 . -1) (undo-tree-id18577 . -1) (undo-tree-id18578 . -1) (undo-tree-id18579 . -1) (undo-tree-id18580 . -1) (undo-tree-id18581 . -1) (undo-tree-id18582 . -1) (undo-tree-id18583 . -1) (undo-tree-id18584 . -1) (undo-tree-id18585 . -1) (undo-tree-id18586 . -1) (undo-tree-id18587 . -1) (undo-tree-id18588 . -1) (undo-tree-id18589 . -1) (undo-tree-id18590 . -1) (undo-tree-id18591 . -1) (undo-tree-id18592 . -1) (undo-tree-id18593 . -1) (undo-tree-id18594 . -1) (undo-tree-id18595 . -1) (undo-tree-id18596 . -1) (undo-tree-id18597 . -1) (undo-tree-id18598 . -1) (undo-tree-id18599 . -1) (undo-tree-id18600 . -1) (undo-tree-id18601 . -1) (undo-tree-id18602 . -1) (undo-tree-id18603 . -1) (undo-tree-id18604 . -1) (undo-tree-id18605 . -1) (undo-tree-id18606 . -1) (undo-tree-id18607 . -1) (undo-tree-id18608 . -1) (undo-tree-id18609 . -1) (undo-tree-id18610 . -1) (undo-tree-id18611 . -1) (undo-tree-id18612 . -1) (undo-tree-id18613 . -1) (undo-tree-id18614 . -1) (undo-tree-id18615 . -1) (undo-tree-id18616 . -1) (undo-tree-id18617 . -1) 3311) ((3299 . 3311)) (25934 12163 189278 856000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -3298) (undo-tree-id15956 . -1) (undo-tree-id15957 . -1) (undo-tree-id15958 . -1) (undo-tree-id15959 . -1) (undo-tree-id15960 . -1) (undo-tree-id15961 . -1) (undo-tree-id15962 . -1) (undo-tree-id15963 . -1) (undo-tree-id15964 . -1) (undo-tree-id15965 . -1) (#("i" 0 1 (fontified t)) . -3299) (undo-tree-id15966 . -1) (undo-tree-id15967 . -1) (undo-tree-id15968 . -1) (undo-tree-id15969 . -1) (undo-tree-id15970 . -1) (undo-tree-id15971 . -1) (undo-tree-id15972 . -1) (undo-tree-id15973 . -1) (undo-tree-id15974 . -1) (undo-tree-id15975 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3300) (undo-tree-id15976 . -1) (undo-tree-id15977 . -1) (undo-tree-id15978 . -1) (undo-tree-id15979 . -1) (undo-tree-id15980 . -1) (undo-tree-id15981 . -1) (undo-tree-id15982 . -1) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (#("p" 0 1 (fontified t)) . -3301) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (undo-tree-id15990 . -1) (undo-tree-id15991 . -1) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (#("u" 0 1 (fontified t)) . -3302) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3303) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (undo-tree-id16015 . -1) (#("s" 0 1 (fontified t)) . -3304) (undo-tree-id16016 . -1) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) (undo-tree-id16019 . -1) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -1) (undo-tree-id16023 . -1) (undo-tree-id16024 . -1) (undo-tree-id16025 . -1) (#(" " 0 1 (fontified t)) . -3305) (undo-tree-id16026 . -1) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -1) (undo-tree-id16031 . -1) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3306) (undo-tree-id16036 . -1) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) (#(" " 0 1 (fontified t)) . -3307) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (#("W" 0 1 (fontified t)) . -3308) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (undo-tree-id16065 . -1) (#("i" 0 1 (fontified t)) . -3309) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (#("j" 0 1 (fontified t)) . -3310) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (undo-tree-id16083 . -1) 3311) ((3298 . 3311)) (25934 12153 82434 964000) 0 nil])
([nil nil ((#("                
                # r_pres = torch.zeros((self.csumNa[i_pop+1]), dtype=self.FLOAT, device=self.device).unsqueeze(0)
" 0 16 (fontified t) 16 17 (fontified t) 17 33 (fontified t) 33 35 (face font-lock-comment-delimiter-face fontified t) 35 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 55 (face font-lock-comment-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 61 (face font-lock-comment-face fontified t) 61 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t) 75 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 85 (face font-lock-comment-face fontified t) 85 86 (face font-lock-comment-face fontified t) 86 90 (face font-lock-comment-face fontified t) 90 104 (face font-lock-comment-face fontified t) 104 105 (face font-lock-comment-face fontified t) 105 109 (face font-lock-comment-face fontified t) 109 116 (face font-lock-comment-face fontified t) 116 117 (face font-lock-comment-face fontified t) 117 127 (face font-lock-comment-face fontified t) 127 128 (face font-lock-comment-face fontified t) 128 129 (face font-lock-comment-face fontified t) 129 130 (face font-lock-comment-face fontified t) 130 131 (face font-lock-comment-face fontified t)) . -2951) (undo-tree-id19433 . -33) (undo-tree-id19434 . -33) (undo-tree-id19435 . -116) (undo-tree-id19436 . -116) (undo-tree-id19437 . -57) (undo-tree-id19438 . -57) (undo-tree-id19439 . -33) (undo-tree-id19440 . -16) (undo-tree-id19441 . -16) (undo-tree-id19442 . -16) (undo-tree-id19443 . -16) (undo-tree-id19444 . -16) (undo-tree-id19445 . -16) (undo-tree-id19446 . -16) (undo-tree-id19447 . -16) (undo-tree-id19448 . -16) (undo-tree-id19449 . -131) (undo-tree-id19450 . -17) (undo-tree-id19451 . -17) (undo-tree-id19452 . -17) (undo-tree-id19453 . -17) (undo-tree-id19454 . -17) (undo-tree-id19455 . -17) (undo-tree-id19456 . -17) (undo-tree-id19457 . -17) (undo-tree-id19458 . -17) (undo-tree-id19459 . -17) (undo-tree-id19460 . -17) (undo-tree-id19461 . -17) (undo-tree-id19462 . -17) (undo-tree-id19463 . -17) (undo-tree-id19464 . -17) (undo-tree-id19465 . -17) (undo-tree-id19466 . -17) (undo-tree-id19467 . -17) (undo-tree-id19468 . -17) (undo-tree-id19469 . -17) (undo-tree-id19470 . -17) (undo-tree-id19471 . -17) (undo-tree-id19472 . -17) (undo-tree-id19473 . -17) (undo-tree-id19474 . -17) (undo-tree-id19475 . -17) (undo-tree-id19476 . -17) (undo-tree-id19477 . -17) (undo-tree-id19478 . -17) (undo-tree-id19479 . -17) (undo-tree-id19480 . -17) (undo-tree-id19481 . -17) (undo-tree-id19482 . -17) (undo-tree-id19483 . -17) (undo-tree-id19484 . -17) (undo-tree-id19485 . -17) (undo-tree-id19486 . -17) (undo-tree-id19487 . -17) (undo-tree-id19488 . -131) (undo-tree-id19489 . -131) (undo-tree-id19490 . -17) (undo-tree-id19491 . -131) (undo-tree-id19492 . -131) (undo-tree-id19493 . -131) (undo-tree-id19494 . -131) (undo-tree-id19495 . -131) (undo-tree-id19496 . -131) (undo-tree-id19497 . -131) (undo-tree-id19498 . -131) (undo-tree-id19499 . -131) (undo-tree-id19500 . -131) (undo-tree-id19501 . -131) (undo-tree-id19502 . -131) (undo-tree-id19503 . -131) (undo-tree-id19504 . -131) (undo-tree-id19505 . -131) (undo-tree-id19506 . -131) (undo-tree-id19507 . -131) (undo-tree-id19508 . -131) (undo-tree-id19509 . -131) (undo-tree-id19510 . -131) (undo-tree-id19511 . -131) (undo-tree-id19512 . -131) (undo-tree-id19513 . -131) (undo-tree-id19514 . -131) (undo-tree-id19515 . -131) (undo-tree-id19516 . -131) (undo-tree-id19517 . -131) (undo-tree-id19518 . -131) (undo-tree-id19519 . -131) (undo-tree-id19520 . -131) 3082) nil (25934 12210 103617 796000) 0 nil])
([nil nil ((3299 . 3302)) ((#("Wij" 0 3 (fontified t)) . 3299) (undo-tree-id18618 . -3) (undo-tree-id18619 . -3) (undo-tree-id18620 . -3) (undo-tree-id18621 . -3) (undo-tree-id18622 . -3) (undo-tree-id18623 . -3) (undo-tree-id18624 . -3) (undo-tree-id18625 . -3) (undo-tree-id18626 . -3) (undo-tree-id18627 . -3) (undo-tree-id18628 . -3) (undo-tree-id18629 . -3) (undo-tree-id18630 . -3) (undo-tree-id18631 . -3) (undo-tree-id18632 . -3) (undo-tree-id18633 . -3) (undo-tree-id18634 . -3) (undo-tree-id18635 . -3) (undo-tree-id18636 . -3) (undo-tree-id18637 . -3) (undo-tree-id18638 . -3) (undo-tree-id18639 . -3) (undo-tree-id18640 . -3) (undo-tree-id18641 . -3) (undo-tree-id18642 . -3) (undo-tree-id18643 . -3) (undo-tree-id18644 . -3) (undo-tree-id18645 . -3) (undo-tree-id18646 . -3) (undo-tree-id18647 . -3) (undo-tree-id18648 . -3) (undo-tree-id18649 . -3) (undo-tree-id18650 . -3) (undo-tree-id18651 . -3) (undo-tree-id18652 . -3) (undo-tree-id18653 . -3) (undo-tree-id18654 . -3) (undo-tree-id18655 . -3) (undo-tree-id18656 . -3) (undo-tree-id18657 . -3) (undo-tree-id18658 . -3) (undo-tree-id18659 . -3) (undo-tree-id18660 . -3) (undo-tree-id18661 . -3) (undo-tree-id18662 . -3) (undo-tree-id18663 . -3) (undo-tree-id18664 . -3) (undo-tree-id18665 . -3) (undo-tree-id18666 . -3) (undo-tree-id18667 . -3) (undo-tree-id18668 . -3) (undo-tree-id18669 . -3) (undo-tree-id18670 . -3) (undo-tree-id18671 . -3) (undo-tree-id18672 . -3) (undo-tree-id18673 . -3) (undo-tree-id18674 . -3) (undo-tree-id18675 . -3) (undo-tree-id18676 . -3) (undo-tree-id18677 . -3) (undo-tree-id18678 . -3) (undo-tree-id18679 . -3) (undo-tree-id18680 . -3) (undo-tree-id18681 . -3) (undo-tree-id18682 . -3) (undo-tree-id18683 . -3) (undo-tree-id18684 . -3) (undo-tree-id18685 . -3) (undo-tree-id18686 . -3) (undo-tree-id18687 . -3) (undo-tree-id18688 . -3) (undo-tree-id18689 . -2) (undo-tree-id18690 . -3) (undo-tree-id18691 . -2) (undo-tree-id18692 . -2) (undo-tree-id18693 . -2) (undo-tree-id18694 . -2) (undo-tree-id18695 . -2) (undo-tree-id18696 . -2) (undo-tree-id18697 . -2) (undo-tree-id18698 . -2) (undo-tree-id18699 . -2) (undo-tree-id18700 . -2) (undo-tree-id18701 . -2) (undo-tree-id18702 . -2) (undo-tree-id18703 . -2) (undo-tree-id18704 . -2) (undo-tree-id18705 . -2) (undo-tree-id18706 . -2) (undo-tree-id18707 . -2) (undo-tree-id18708 . -2) (undo-tree-id18709 . -2) (undo-tree-id18710 . -2) (undo-tree-id18711 . -2) (undo-tree-id18712 . -2) (undo-tree-id18713 . -2) (undo-tree-id18714 . -2) (undo-tree-id18715 . -2) (undo-tree-id18716 . -2) (undo-tree-id18717 . -2) (undo-tree-id18718 . -2) (undo-tree-id18719 . -2) (undo-tree-id18720 . -1) (undo-tree-id18721 . -2) (undo-tree-id18722 . -1) (undo-tree-id18723 . -1) (undo-tree-id18724 . -1) (undo-tree-id18725 . -1) (undo-tree-id18726 . -1) (undo-tree-id18727 . -1) (undo-tree-id18728 . -1) (undo-tree-id18729 . -1) (undo-tree-id18730 . -1) (undo-tree-id18731 . -1) (undo-tree-id18732 . -1) (undo-tree-id18733 . -1) (undo-tree-id18734 . -1) (undo-tree-id18735 . -1) (undo-tree-id18736 . -1) (undo-tree-id18737 . -1) (t 25934 12158 988022 458000)) (25934 12158 938859 692000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2950) (undo-tree-id19020 . -1) (undo-tree-id19021 . -1) (undo-tree-id19022 . -1) (undo-tree-id19023 . -1) (undo-tree-id19024 . -1) (undo-tree-id19025 . -1) (undo-tree-id19026 . -1) (undo-tree-id19027 . -1) (undo-tree-id19028 . -1) (undo-tree-id19029 . -1) (undo-tree-id19030 . -1) (undo-tree-id19031 . -1) (undo-tree-id19032 . -1) (undo-tree-id19033 . -1) (undo-tree-id19034 . -1) (undo-tree-id19035 . -1) (undo-tree-id19036 . -1) (undo-tree-id19037 . -1) (undo-tree-id19038 . -1) (undo-tree-id19039 . -1) (undo-tree-id19040 . -1) (undo-tree-id19041 . -1) (undo-tree-id19042 . -1) (undo-tree-id19043 . -1) (undo-tree-id19044 . -1) (undo-tree-id19045 . -1) (undo-tree-id19046 . -1) (undo-tree-id19047 . -1) (undo-tree-id19048 . -1) (undo-tree-id19049 . -1) (undo-tree-id19050 . -1) (undo-tree-id19051 . -1) (undo-tree-id19052 . -1) (undo-tree-id19053 . -1) (undo-tree-id19054 . -1) (undo-tree-id19055 . -1) (undo-tree-id19056 . -1) (undo-tree-id19057 . -1) (undo-tree-id19058 . -1) (undo-tree-id19059 . -1) (undo-tree-id19060 . -1) (undo-tree-id19061 . -1) (undo-tree-id19062 . -1) (undo-tree-id19063 . -1) (undo-tree-id19064 . -1) (undo-tree-id19065 . -1) (undo-tree-id19066 . -1) (undo-tree-id19067 . -1) (undo-tree-id19068 . -1) (undo-tree-id19069 . -1) (undo-tree-id19070 . -1) (undo-tree-id19071 . -1) (undo-tree-id19072 . -1) (undo-tree-id19073 . -1) (undo-tree-id19074 . -1) (undo-tree-id19075 . -1) (undo-tree-id19076 . -1) (undo-tree-id19077 . -1) (undo-tree-id19078 . -1) (undo-tree-id19079 . -1) (undo-tree-id19080 . -1) (undo-tree-id19081 . -1) (undo-tree-id19082 . -1) (undo-tree-id19083 . -1) (undo-tree-id19084 . -1) (undo-tree-id19085 . -1) (undo-tree-id19086 . -1) (undo-tree-id19087 . -1) (undo-tree-id19088 . -1) (undo-tree-id19089 . -1) (undo-tree-id19090 . -1) (undo-tree-id19091 . -1) (undo-tree-id19092 . -1) (undo-tree-id19093 . -1) (undo-tree-id19094 . -1) (undo-tree-id19095 . -1) (undo-tree-id19096 . -1) (undo-tree-id19097 . -1) (undo-tree-id19098 . -1) (undo-tree-id19099 . -1) (undo-tree-id19100 . -1) (undo-tree-id19101 . -1) (undo-tree-id19102 . -1) (undo-tree-id19103 . -1) (undo-tree-id19104 . -1) (undo-tree-id19105 . -1) (undo-tree-id19106 . -1) (undo-tree-id19107 . -1) (undo-tree-id19108 . -1) (undo-tree-id19109 . -1) (undo-tree-id19110 . -1) (undo-tree-id19111 . -1) (undo-tree-id19112 . -1) (undo-tree-id19113 . -1) (undo-tree-id19114 . -1) (undo-tree-id19115 . -1) (undo-tree-id19116 . -1) (undo-tree-id19117 . -1) (undo-tree-id19118 . -1) (undo-tree-id19119 . -1) (undo-tree-id19120 . -1) (undo-tree-id19121 . -1) (undo-tree-id19122 . -1) (undo-tree-id19123 . -1) (undo-tree-id19124 . -1) (undo-tree-id19125 . -1) (undo-tree-id19126 . -1) (undo-tree-id19127 . -1) (undo-tree-id19128 . -1) (undo-tree-id19129 . -1) (undo-tree-id19130 . -1) (undo-tree-id19131 . -1) (undo-tree-id19132 . -1) (undo-tree-id19133 . -1) (undo-tree-id19134 . -1) (undo-tree-id19135 . -1) (undo-tree-id19136 . -1) (undo-tree-id19137 . -1) (undo-tree-id19138 . -1) (undo-tree-id19139 . -1) (undo-tree-id19140 . -1) (undo-tree-id19141 . -1) (undo-tree-id19142 . -1) (undo-tree-id19143 . -1) (undo-tree-id19144 . -1) (undo-tree-id19145 . -1) (undo-tree-id19146 . -1) (undo-tree-id19147 . -1) (undo-tree-id19148 . -1) (undo-tree-id19149 . -1) (undo-tree-id19150 . -1) (undo-tree-id19151 . -1) (undo-tree-id19152 . -1) (undo-tree-id19153 . -1) (undo-tree-id19154 . -1) (undo-tree-id19155 . -1) (undo-tree-id19156 . -1) (undo-tree-id19157 . -1) (undo-tree-id19158 . -1) (undo-tree-id19159 . -1) (undo-tree-id19160 . -1) (undo-tree-id19161 . -1) (undo-tree-id19162 . -1) (undo-tree-id19163 . -1) (undo-tree-id19164 . -1) (undo-tree-id19165 . -1) (undo-tree-id19166 . -1) (undo-tree-id19167 . -1) (undo-tree-id19168 . -1) (undo-tree-id19169 . -1) (undo-tree-id19170 . -1) (undo-tree-id19171 . -1) (undo-tree-id19172 . -1) (undo-tree-id19173 . -1) (undo-tree-id19174 . -1) (undo-tree-id19175 . -1) (undo-tree-id19176 . -1) (undo-tree-id19177 . -1) (undo-tree-id19178 . -1) (undo-tree-id19179 . -1) (undo-tree-id19180 . -1) (undo-tree-id19181 . -1) (undo-tree-id19182 . -1) (undo-tree-id19183 . -1) (undo-tree-id19184 . -1) (undo-tree-id19185 . -1) (undo-tree-id19186 . -1) (undo-tree-id19187 . -1) (undo-tree-id19188 . -1) (undo-tree-id19189 . -1) (undo-tree-id19190 . -1) (undo-tree-id19191 . -1) (undo-tree-id19192 . -1) (undo-tree-id19193 . -1) (undo-tree-id19194 . -1) (undo-tree-id19195 . -1) (undo-tree-id19196 . -1) (undo-tree-id19197 . -1) (undo-tree-id19198 . -1) (undo-tree-id19199 . -1) (undo-tree-id19200 . -1) (undo-tree-id19201 . -1) (undo-tree-id19202 . -1) (undo-tree-id19203 . -1) (undo-tree-id19204 . -1) (undo-tree-id19205 . -1) (undo-tree-id19206 . -1) (undo-tree-id19207 . -1) (undo-tree-id19208 . -1) (undo-tree-id19209 . -1) (undo-tree-id19210 . -1) (undo-tree-id19211 . -1) (undo-tree-id19212 . -1) (undo-tree-id19213 . -1) (undo-tree-id19214 . -1) (undo-tree-id19215 . -1) (undo-tree-id19216 . -1) (undo-tree-id19217 . -1) (undo-tree-id19218 . -1) (undo-tree-id19219 . -1) (undo-tree-id19220 . -1) (undo-tree-id19221 . -1) (undo-tree-id19222 . -1) (undo-tree-id19223 . -1) (undo-tree-id19224 . -1) (undo-tree-id19225 . -1) (undo-tree-id19226 . -1) (undo-tree-id19227 . -1) (undo-tree-id19228 . -1) (undo-tree-id19229 . -1) (undo-tree-id19230 . -1) (undo-tree-id19231 . -1) (undo-tree-id19232 . -1) (undo-tree-id19233 . -1) (undo-tree-id19234 . -1) (undo-tree-id19235 . -1) (undo-tree-id19236 . -1) (undo-tree-id19237 . -1) (undo-tree-id19238 . -1) (undo-tree-id19239 . -1) (undo-tree-id19240 . -1) (undo-tree-id19241 . -1) (undo-tree-id19242 . -1) (undo-tree-id19243 . -1) (undo-tree-id19244 . -1) (undo-tree-id19245 . -1) (undo-tree-id19246 . -1) (undo-tree-id19247 . -1) (undo-tree-id19248 . -1) (undo-tree-id19249 . -1) (undo-tree-id19250 . -1) (undo-tree-id19251 . -1) (undo-tree-id19252 . -1) (undo-tree-id19253 . -1) (undo-tree-id19254 . -1) (undo-tree-id19255 . -1) (undo-tree-id19256 . -1) (undo-tree-id19257 . -1) (undo-tree-id19258 . -1) (undo-tree-id19259 . -1) (undo-tree-id19260 . -1) (undo-tree-id19261 . -1) (undo-tree-id19262 . -1) (undo-tree-id19263 . -1) (undo-tree-id19264 . -1) (undo-tree-id19265 . -1) (undo-tree-id19266 . -1) (undo-tree-id19267 . -1) (undo-tree-id19268 . -1) (undo-tree-id19269 . -1) (undo-tree-id19270 . -1) (undo-tree-id19271 . -1) (undo-tree-id19272 . -1) (undo-tree-id19273 . -1) (undo-tree-id19274 . -1) (undo-tree-id19275 . -1) (undo-tree-id19276 . -1) (undo-tree-id19277 . -1) (undo-tree-id19278 . -1) (undo-tree-id19279 . -1) (undo-tree-id19280 . -1) (undo-tree-id19281 . -1) (undo-tree-id19282 . -1) (undo-tree-id19283 . -1) (undo-tree-id19284 . -1) (undo-tree-id19285 . -1) (undo-tree-id19286 . -1) (undo-tree-id19287 . -1) (undo-tree-id19288 . -1) (undo-tree-id19289 . -1) (undo-tree-id19290 . -1) (undo-tree-id19291 . -1) (undo-tree-id19292 . -1) (undo-tree-id19293 . -1) (undo-tree-id19294 . -1) (undo-tree-id19295 . -1) (undo-tree-id19296 . -1) (undo-tree-id19297 . -1) (undo-tree-id19298 . -1) (undo-tree-id19299 . -1) (undo-tree-id19300 . -1) (undo-tree-id19301 . -1) (undo-tree-id19302 . -1) (undo-tree-id19303 . -1) (undo-tree-id19304 . -1) (undo-tree-id19305 . -1) (undo-tree-id19306 . -1) (undo-tree-id19307 . -1) (undo-tree-id19308 . -1) (undo-tree-id19309 . -1) (undo-tree-id19310 . -1) (undo-tree-id19311 . -1) (undo-tree-id19312 . -1) (undo-tree-id19313 . -1) (undo-tree-id19314 . -1) (undo-tree-id19315 . -1) (undo-tree-id19316 . -1) (undo-tree-id19317 . -1) (undo-tree-id19318 . -1) (undo-tree-id19319 . -1) (undo-tree-id19320 . -1) (undo-tree-id19321 . -1) (undo-tree-id19322 . -1) (undo-tree-id19323 . -1) (undo-tree-id19324 . -1) (undo-tree-id19325 . -1) (undo-tree-id19326 . -1) (undo-tree-id19327 . -1) (undo-tree-id19328 . -1) (undo-tree-id19329 . -1) (undo-tree-id19330 . -1) (undo-tree-id19331 . -1) (undo-tree-id19332 . -1) (undo-tree-id19333 . -1) (undo-tree-id19334 . -1) (undo-tree-id19335 . -1) (undo-tree-id19336 . -1) (undo-tree-id19337 . -1) (undo-tree-id19338 . -1) (undo-tree-id19339 . -1) (undo-tree-id19340 . -1) (undo-tree-id19341 . -1) (undo-tree-id19342 . -1) (undo-tree-id19343 . -1) (undo-tree-id19344 . -1) (undo-tree-id19345 . -1) (undo-tree-id19346 . -1) (undo-tree-id19347 . -1) (undo-tree-id19348 . -1) (undo-tree-id19349 . -1) (undo-tree-id19350 . -1) (undo-tree-id19351 . -1) (undo-tree-id19352 . -1) (undo-tree-id19353 . -1) (undo-tree-id19354 . -1) (undo-tree-id19355 . -1) (undo-tree-id19356 . -1) (undo-tree-id19357 . -1) (undo-tree-id19358 . -1) (undo-tree-id19359 . -1) (undo-tree-id19360 . -1) (undo-tree-id19361 . -1) (undo-tree-id19362 . -1) (undo-tree-id19363 . -1) (undo-tree-id19364 . -1) (undo-tree-id19365 . -1) (undo-tree-id19366 . -1) (undo-tree-id19367 . -1) (undo-tree-id19368 . -1) (undo-tree-id19369 . -1) (undo-tree-id19370 . -1) (undo-tree-id19371 . -1) (undo-tree-id19372 . -1) (undo-tree-id19373 . -1) (undo-tree-id19374 . -1) (undo-tree-id19375 . -1) (undo-tree-id19376 . -1) (undo-tree-id19377 . -1) (undo-tree-id19378 . -1) (undo-tree-id19379 . -1) (undo-tree-id19380 . -1) (undo-tree-id19381 . -1) (undo-tree-id19382 . -1) (undo-tree-id19383 . -1) (undo-tree-id19384 . -1) (undo-tree-id19385 . -1) (undo-tree-id19386 . -1) (undo-tree-id19387 . -1) (undo-tree-id19388 . -1) (undo-tree-id19389 . -1) (undo-tree-id19390 . -1) (undo-tree-id19391 . -1) (undo-tree-id19392 . -1) (undo-tree-id19393 . -1) (undo-tree-id19394 . -1) (undo-tree-id19395 . -1) (undo-tree-id19396 . -1) (undo-tree-id19397 . -1) (undo-tree-id19398 . -1) (undo-tree-id19399 . -1) (undo-tree-id19400 . -1) (undo-tree-id19401 . -1) (undo-tree-id19402 . -1) (undo-tree-id19403 . -1) (undo-tree-id19404 . -1) (undo-tree-id19405 . -1) (undo-tree-id19406 . -1) (undo-tree-id19407 . -1) (undo-tree-id19408 . -1) (undo-tree-id19409 . -1) (undo-tree-id19410 . -1) (undo-tree-id19411 . -1) (undo-tree-id19412 . -1) (undo-tree-id19413 . -1) (undo-tree-id19414 . -1) (undo-tree-id19415 . -1) (undo-tree-id19416 . -1) (undo-tree-id19417 . -1) (undo-tree-id19418 . -1) (undo-tree-id19419 . -1) (undo-tree-id19420 . -1) (undo-tree-id19421 . -1) (undo-tree-id19422 . -1) (undo-tree-id19423 . -1) (undo-tree-id19424 . -1) (undo-tree-id19425 . -1) (undo-tree-id19426 . -1) (undo-tree-id19427 . -1) (undo-tree-id19428 . -1) (undo-tree-id19429 . -1) (undo-tree-id19430 . -1) (undo-tree-id19431 . -1) (undo-tree-id19432 . -1) 2951) nil (25934 12210 103484 592000) 0 nil])
nil
([nil nil ((#("                " 0 16 (fontified t)) . -2950) (undo-tree-id19657 . -16) 2934 (t 25934 12210 152703 445000)) nil (25934 12212 173574 338000) 0 nil])
([nil nil ((apply 10 4228 4705 undo--wrap-and-run-primitive-undo 4228 4705 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4501) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4356) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4312) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4286) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -4236) 4715))) nil (25934 12344 947386 367000) 0 nil])
([nil nil ((4722 . 4738) (#("        " 0 5 (fontified t) 5 8 (fontified t)) . 4722)) nil (25934 12344 947385 126000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4734) (undo-tree-id19723 . -4) 4738) nil (25934 12344 947383 734000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19722 . -4) 4734) nil (25934 12344 947381 411000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 4730)) nil (25934 12344 947379 196000) 0 nil])
([nil nil ((4731 . 4734) 4730) nil (25934 12344 947378 101000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19721 . -4) 4734) nil (25934 12344 947376 651000) 0 nil])
([nil nil ((4730 . 4734)) nil (25934 12344 947374 481000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19720 . -4) 4734) nil (25934 12344 947372 676000) 0 nil])
([nil nil ((4730 . 4734)) nil (25934 12344 947370 459000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4730) (undo-tree-id19719 . -4) 4734) nil (25934 12344 947368 948000) 0 nil])
([nil nil ((4744 . 4748)) nil (25934 12344 947366 977000) 0 nil])
([nil nil ((4347 . 4364)) nil (25934 12344 947365 733000) 0 nil])
([nil nil ((4364 . 4374)) nil (25934 12344 947364 812000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -4373) (undo-tree-id19718 . -1) 4374) nil (25934 12344 947363 662000) 0 nil])
([nil nil ((4373 . 4376)) nil (25934 12344 947361 329000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4426 . 4427) (nil fontified nil 4426 . 4427) (nil fontified nil 4425 . 4426) (nil fontified nil 4424 . 4425) (nil fontified nil 4422 . 4424) (nil fontified nil 4421 . 4422) (nil fontified nil 4415 . 4421) (nil fontified nil 4414 . 4415) (nil fontified nil 4407 . 4414) (nil fontified nil 4403 . 4407) (nil fontified nil 4400 . 4403) (nil fontified nil 4399 . 4400) (nil fontified nil 4394 . 4399) (nil fontified nil 4393 . 4394) (nil fontified nil 4386 . 4393) (nil fontified nil 4382 . 4386) (nil fontified nil 4381 . 4382) (nil fontified nil 4376 . 4381) (4376 . 4427)) nil (25934 12344 947359 893000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4497) (#("_" 0 1 (fontified t)) . 4497) (#("i" 0 1 (fontified t)) . 4497) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4497) (#("a" 0 1 (fontified t)) . 4497) (#("N" 0 1 (fontified t)) . 4497) (#("m" 0 1 (fontified t)) . 4497) (#("u" 0 1 (fontified t)) . 4497) (#("s" 0 1 (fontified t)) . 4497) (#("c" 0 1 (fontified t)) . 4497) (#("." 0 1 (fontified t)) . 4497) (#("f" 0 1 (fontified t)) . 4497) (#("l" 0 1 (fontified t)) . 4497) (#("e" 0 1 (fontified t)) . 4497) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . 4497) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4497) (#("s" 0 1 (fontified t)) . 4497) (#("e" 0 1 (fontified t)) . 4497) (#("t" 0 1 (fontified t)) . 4497) (#("a" 0 1 (fontified t)) . 4497) (#("r" 0 1 (fontified t)) . 4497)) nil (25934 12344 947351 797000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4497) (#("_" 0 1 (fontified t)) . 4497) (#("i" 0 1 (fontified t)) . 4497) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4497) (#("a" 0 1 (fontified t)) . 4497) (#("N" 0 1 (fontified t)) . 4497) (#("m" 0 1 (fontified t)) . 4497) (#("u" 0 1 (fontified t)) . 4497) (#("s" 0 1 (fontified t)) . 4497) (#("c" 0 1 (fontified t)) . 4497) (#("." 0 1 (fontified t)) . 4497) (#("f" 0 1 (fontified t)) . 4497) (#("l" 0 1 (fontified t)) . 4497) (#("e" 0 1 (fontified t)) . 4497) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#(":" 0 1 (fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4497) (#("p" 0 1 (fontified t)) . 4497) (#("o" 0 1 (fontified t)) . 4497)) nil (25934 12344 947342 769000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4497) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4497) (#("1" 0 1 (fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#("+" 0 1 (face font-lock-operator-face fontified t)) . 4497) (#(" " 0 1 (fontified t)) . 4497) (#("p" 0 1 (fontified t)) . 4497) (#("o" 0 1 (fontified t)) . 4497)) nil (25934 12344 947337 644000) 0 nil])
([nil nil ((4497 . 4503)) nil (25934 12344 947335 271000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -4502) (undo-tree-id19717 . -1) 4503) nil (25934 12344 947334 144000) 0 nil])
([nil nil ((4502 . 4506)) nil (25934 12344 947331 912000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4473) (undo-tree-id19696 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4474) (undo-tree-id19697 . -1) (#("." 0 1 (fontified t)) . -4475) (undo-tree-id19698 . -1) (#("c" 0 1 (fontified t)) . -4476) (undo-tree-id19699 . -1) (#("s" 0 1 (fontified t)) . -4477) (undo-tree-id19700 . -1) (#("u" 0 1 (fontified t)) . -4478) (undo-tree-id19701 . -1) (#("m" 0 1 (fontified t)) . -4479) (undo-tree-id19702 . -1) (#("N" 0 1 (fontified t)) . -4480) (undo-tree-id19703 . -1) (#("a" 0 1 (fontified t)) . -4481) (undo-tree-id19704 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4482) (undo-tree-id19705 . -1) (#("i" 0 1 (fontified t)) . -4483) (undo-tree-id19706 . -1) (#("_" 0 1 (fontified t)) . -4484) (undo-tree-id19707 . -1) (#("p" 0 1 (fontified t)) . -4485) (undo-tree-id19708 . -1) (#("o" 0 1 (fontified t)) . -4486) (undo-tree-id19709 . -1) (#("p" 0 1 (fontified t)) . -4487) (undo-tree-id19710 . -1) (#(" " 0 1 (fontified nil)) . -4488) (undo-tree-id19711 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -4489) (undo-tree-id19712 . -1) (#(" " 0 1 (fontified t)) . -4490) (undo-tree-id19713 . -1) (#("1" 0 1 (fontified nil)) . -4491) (undo-tree-id19714 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4492) (undo-tree-id19715 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -4493) (undo-tree-id19716 . -1) 4494) nil (25934 12344 947325 453000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4452) (undo-tree-id19675 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4453) (undo-tree-id19676 . -1) (#("." 0 1 (fontified t)) . -4454) (undo-tree-id19677 . -1) (#("c" 0 1 (fontified t)) . -4455) (undo-tree-id19678 . -1) (#("s" 0 1 (fontified t)) . -4456) (undo-tree-id19679 . -1) (#("u" 0 1 (fontified t)) . -4457) (undo-tree-id19680 . -1) (#("m" 0 1 (fontified t)) . -4458) (undo-tree-id19681 . -1) (#("N" 0 1 (fontified t)) . -4459) (undo-tree-id19682 . -1) (#("a" 0 1 (fontified t)) . -4460) (undo-tree-id19683 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4461) (undo-tree-id19684 . -1) (#("i" 0 1 (fontified t)) . -4462) (undo-tree-id19685 . -1) (#("_" 0 1 (fontified t)) . -4463) (undo-tree-id19686 . -1) (#("p" 0 1 (fontified t)) . -4464) (undo-tree-id19687 . -1) (#("o" 0 1 (fontified t)) . -4465) (undo-tree-id19688 . -1) (#("p" 0 1 (fontified t)) . -4466) (undo-tree-id19689 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -4467) (undo-tree-id19690 . -1) (#(" " 0 1 (fontified t)) . -4468) (undo-tree-id19691 . -1) (#(":" 0 1 (fontified t)) . -4469) (undo-tree-id19692 . -1) (#(" " 0 1 (fontified t)) . -4470) (undo-tree-id19693 . -1) (#("s" 0 1 (fontified t)) . -4471) (undo-tree-id19694 . -1) (#("e" 0 1 (fontified t)) . -4472) (undo-tree-id19695 . -1) 4473) nil (25934 12344 947293 598000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -4444) (undo-tree-id19667 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -4445) (undo-tree-id19668 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -4446) (undo-tree-id19669 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -4447) (undo-tree-id19670 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -4448) (undo-tree-id19671 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -4449) (undo-tree-id19672 . -1) (#("s" 0 1 (fontified t)) . -4450) (undo-tree-id19673 . -1) (#("e" 0 1 (fontified t)) . -4451) (undo-tree-id19674 . -1) 4452) nil (25934 12344 947265 510000) 0 nil])
([nil nil ((4444 . 4453)) nil (25934 12344 947254 8000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4560) (#("_" 0 1 (fontified nil)) . 4560) (#("i" 0 1 (fontified t)) . 4560) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 4560) (#("a" 0 1 (fontified nil)) . 4560) (#("N" 0 1 (fontified nil)) . 4560) (#("m" 0 1 (fontified nil)) . 4560) (#("u" 0 1 (fontified nil)) . 4560) (#("s" 0 1 (fontified nil)) . 4560) (#("c" 0 1 (fontified nil)) . 4560) (#("." 0 1 (fontified nil)) . 4560) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . 4560) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4560) (#("s" 0 1 (fontified nil)) . 4560) (#("e" 0 1 (fontified nil)) . 4560) (#("t" 0 1 (fontified t)) . 4560) (#("a" 0 1 (fontified t)) . 4560) (#("r" 0 1 (fontified t)) . 4560)) nil (25934 12344 947249 329000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4560) (#("_" 0 1 (fontified t)) . 4560) (#("i" 0 1 (fontified t)) . 4560) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4560) (#("a" 0 1 (fontified t)) . 4560) (#("N" 0 1 (fontified t)) . 4560) (#("m" 0 1 (fontified t)) . 4560) (#("u" 0 1 (fontified t)) . 4560) (#("s" 0 1 (fontified t)) . 4560) (#("c" 0 1 (fontified t)) . 4560) (#("." 0 1 (fontified t)) . 4560) (#("f" 0 1 (fontified t)) . 4560) (#("l" 0 1 (fontified t)) . 4560) (#("e" 0 1 (fontified t)) . 4560) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#(":" 0 1 (fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4560) (undo-tree-id19666 . -1) (#("p" 0 1 (fontified t)) . 4560) (#("o" 0 1 (fontified t)) . 4560)) nil (25934 12344 947240 588000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4560) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 4560) (#("1" 0 1 (fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#("+" 0 1 (face font-lock-operator-face fontified t)) . 4560) (#(" " 0 1 (fontified t)) . 4560) (#("p" 0 1 (fontified t)) . 4560) (#("o" 0 1 (fontified t)) . 4560)) nil (25934 12344 947233 618000) 0 nil])
([nil nil ((4560 . 4566)) nil (25934 12344 947231 773000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -4565) (undo-tree-id19665 . -1) 4566) nil (25934 12344 947230 696000) 0 nil])
([nil nil ((4565 . 4569)) nil (25934 12344 947228 322000) 0 nil])
([nil nil ((4490 . 4507)) nil (25934 12344 947227 403000) 0 nil])
([nil nil ((4507 . 4509)) nil (25934 12344 947226 512000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4507) (undo-tree-id19663 . -1) (#("e" 0 1 (fontified t)) . -4508) (undo-tree-id19664 . -1) 4509) nil (25934 12344 947225 52000) 0 nil])
([nil nil ((4507 . 4512)) nil (25934 12344 947221 455000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4510) (undo-tree-id19661 . -1) (#("t" 0 1 (fontified t)) . -4511) (undo-tree-id19662 . -1) 4512) nil (25934 12344 947220 2000) 0 nil])
([nil nil ((4510 . 4516)) nil (25934 12344 947215 565000) 0 nil])
([nil nil ((#("Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])" 0 9 (fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 15 (fontified t) 15 18 (fontified t) 18 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-2-face) fontified t) 23 27 (face font-lock-keyword-face fontified t) 27 28 (fontified t) 28 32 (fontified t) 32 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-3-face) fontified t) 41 44 (fontified t) 44 48 (face font-lock-keyword-face fontified t) 48 49 (fontified t) 49 52 (fontified t) 52 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) fontified t) 56 62 (fontified t) 62 63 (face font-lock-operator-face fontified t) 63 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-3-face) fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t) 67 68 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4619) (undo-tree-id19659 . -68) (undo-tree-id19660 . -68)) nil (25934 12344 947213 791000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4583 . 4584) (nil fontified nil 4583 . 4584) (nil fontified nil 4582 . 4583) (nil fontified nil 4581 . 4582) (nil fontified nil 4579 . 4581) (nil fontified nil 4578 . 4579) (nil fontified nil 4572 . 4578) (nil fontified nil 4571 . 4572) (nil fontified nil 4568 . 4571) (nil fontified nil 4565 . 4568) (nil fontified nil 4564 . 4565) (nil fontified nil 4560 . 4564) (nil fontified nil 4557 . 4560) (nil fontified nil 4556 . 4557) (nil fontified nil 4551 . 4556) (nil fontified nil 4550 . 4551) (nil fontified nil 4548 . 4550) (nil fontified nil 4544 . 4548) (nil fontified nil 4543 . 4544) (nil fontified nil 4539 . 4543) (nil fontified nil 4538 . 4539) (nil fontified nil 4534 . 4538) (nil fontified nil 4531 . 4534) (nil fontified nil 4529 . 4531) (nil fontified nil 4528 . 4529) (nil fontified nil 4527 . 4528) (nil fontified nil 4526 . 4527) (nil fontified nil 4525 . 4526) (nil fontified nil 4516 . 4525) (4516 . 4584)) nil (25934 12344 947208 225000) 0 nil])
([nil nil ((4687 . 4693)) nil (25934 12344 947201 89000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4690) (undo-tree-id19658 . -1) 4691) nil (25934 12344 947198 525000) 0 nil])
([nil nil ((4690 . 4691)) nil (25934 12344 947182 216000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4693) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . -1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1) (undo-tree-id19741 . -1) (undo-tree-id19742 . -1) (undo-tree-id19743 . -1) (undo-tree-id19744 . -1) (undo-tree-id19745 . -1) (undo-tree-id19746 . -1) (undo-tree-id19747 . -1) (undo-tree-id19748 . -1) (undo-tree-id19749 . -1) (undo-tree-id19750 . -1) (undo-tree-id19751 . -1) (undo-tree-id19752 . -1) (undo-tree-id19753 . -1) 4694 (t 25934 12344 993042 869000)) nil (25934 12354 571228 283000) 0 nil])
([nil nil ((4236 . 4238) (t 25934 12354 625924 523000)) nil (25934 12373 223808 302000) 0 nil])
([nil nil ((12284 . 12297) (t 25934 12373 275631 478000)) nil (25934 12503 17807 897000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12293) (undo-tree-id20822 . -4) 12297) nil (25934 12503 17805 324000) 0 nil])
([nil nil ((12293 . 12300)) nil (25934 12503 17801 333000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-operator-face fontified t)) . -12297) (undo-tree-id20819 . -1) (#("D" 0 1 (fontified t)) . -12298) (undo-tree-id20820 . -1) (#("T" 0 1 (fontified t)) . -12299) (undo-tree-id20821 . -1) 12300) nil (25934 12503 17798 491000) 0 nil])
([nil nil ((12297 . 12298)) nil (25934 12503 17789 947000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -12293) (undo-tree-id20814 . -1) (#("e" 0 1 (fontified t)) . -12294) (undo-tree-id20815 . -1) (#("l" 0 1 (fontified t)) . -12295) (undo-tree-id20816 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12296) (undo-tree-id20817 . -1) (#("." 0 1 (fontified t)) . -12297) (undo-tree-id20818 . -1) 12298) nil (25934 12503 17786 576000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12397 . 12398) (nil fontified nil 12397 . 12398) (nil fontified nil 12396 . 12397) (nil fontified nil 12390 . 12396) (nil fontified nil 12386 . 12390) (nil fontified nil 12378 . 12386) (nil fontified nil 12374 . 12378) (nil fontified nil 12373 . 12374) (nil fontified nil 12368 . 12373) (nil fontified nil 12367 . 12368) (nil fontified nil 12360 . 12367) (nil fontified nil 12356 . 12360) (nil fontified nil 12355 . 12356) (nil fontified nil 12341 . 12355) (nil fontified nil 12337 . 12341) (nil fontified nil 12336 . 12337) (nil fontified nil 12323 . 12336) (nil fontified nil 12319 . 12323) (nil fontified nil 12318 . 12319) (nil fontified nil 12305 . 12318) (nil fontified nil 12304 . 12305) (nil fontified nil 12303 . 12304) (nil fontified nil 12298 . 12303) (nil fontified nil 12297 . 12298) (nil fontified nil 12293 . 12297) (nil fontified nil 12285 . 12293) (12285 . 12398)) nil (25934 12503 17769 417000) 0 nil])
([nil nil ((12293 . 12297) 12285) nil (25934 12503 17758 546000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12293) (undo-tree-id20813 . -4) 12297) nil (25934 12503 17755 444000) 0 nil])
([nil nil ((#("SIGMA" 0 5 (fontified nil)) . -12325) (12330 . 12336) (nil fontified t 12299 . 12304) (nil face font-lock-variable-name-face 12299 . 12304) (#("SIGMA" 0 5 (face font-lock-variable-name-face fontified t)) . -12298) (12303 . 12309)) nil (25934 12503 17749 808000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12377) (undo-tree-id20792 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12378) (undo-tree-id20793 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12379) (undo-tree-id20794 . -1) (#("." 0 1 (fontified nil)) . -12380) (undo-tree-id20795 . -1) (#("N" 0 1 (fontified nil)) . -12381) (undo-tree-id20796 . -1) (#("_" 0 1 (fontified nil)) . -12382) (undo-tree-id20797 . -1) (#("P" 0 1 (fontified nil)) . -12383) (undo-tree-id20798 . -1) (#("O" 0 1 (fontified nil)) . -12384) (undo-tree-id20799 . -1) (#("P" 0 1 (fontified nil)) . -12385) (undo-tree-id20800 . -1) (#("," 0 1 (fontified nil)) . -12386) (undo-tree-id20801 . -1) (#(" " 0 1 (fontified nil)) . -12387) (undo-tree-id20802 . -1) (#("s" 0 1 (fontified nil)) . -12388) (undo-tree-id20803 . -1) (#("e" 0 1 (fontified t)) . -12389) (undo-tree-id20804 . -1) (#("l" 0 1 (fontified t)) . -12390) (undo-tree-id20805 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12391) (undo-tree-id20806 . -1) (#("." 0 1 (fontified t)) . -12392) (undo-tree-id20807 . -1) (#("N" 0 1 (fontified t)) . -12393) (undo-tree-id20808 . -1) (#("_" 0 1 (fontified t)) . -12394) (undo-tree-id20809 . -1) (#("P" 0 1 (fontified t)) . -12395) (undo-tree-id20810 . -1) (#("O" 0 1 (fontified t)) . -12396) (undo-tree-id20811 . -1) (#("P" 0 1 (fontified t)) . -12397) (undo-tree-id20812 . -1) 12398) nil (25934 12503 17734 189000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -12372) (undo-tree-id20787 . -1) (#("e" 0 1 (fontified nil)) . -12373) (undo-tree-id20788 . -1) (#("w" 0 1 (fontified nil)) . -12374) (undo-tree-id20789 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -12375) (undo-tree-id20790 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 12376) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12376) (undo-tree-id20791 . -1) 12377) nil (25934 12503 17674 438000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12370) (undo-tree-id20785 . -1) (#("v" 0 1 (fontified t)) . -12371) (undo-tree-id20786 . -1) 12372) nil (25934 12503 17666 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12483 . 12484) (nil fontified nil 12483 . 12484) (nil fontified nil 12482 . 12483) (nil fontified nil 12476 . 12482) (nil fontified nil 12472 . 12476) (nil fontified nil 12464 . 12472) (nil fontified nil 12460 . 12464) (nil fontified nil 12459 . 12460) (nil fontified nil 12454 . 12459) (nil fontified nil 12453 . 12454) (nil fontified nil 12446 . 12453) (nil fontified nil 12442 . 12446) (nil fontified nil 12441 . 12442) (nil fontified nil 12427 . 12441) (nil fontified nil 12423 . 12427) (nil fontified nil 12422 . 12423) (nil fontified nil 12409 . 12422) (nil fontified nil 12405 . 12409) (nil fontified nil 12404 . 12405) (nil fontified nil 12391 . 12404) (nil fontified nil 12390 . 12391) (nil fontified nil 12389 . 12390) (nil fontified nil 12384 . 12389) (nil fontified nil 12383 . 12384) (nil fontified nil 12379 . 12383) (nil fontified nil 12371 . 12379) (12371 . 12484)) nil (25934 12503 17656 316000) 0 nil])
([nil nil ((#("SIGMA" 0 5 (fontified nil)) . -12415) (12420 . 12430) (nil fontified t 12389 . 12394) (nil face font-lock-variable-name-face 12389 . 12394) (#("SIGMA" 0 5 (face font-lock-variable-name-face fontified t)) . -12384) (12389 . 12399)) nil (25934 12503 17649 547000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12472) (undo-tree-id20270 . -1) (undo-tree-id20271 . -1) (undo-tree-id20272 . -1) (undo-tree-id20273 . -1) (undo-tree-id20274 . -1) (undo-tree-id20275 . -1) (undo-tree-id20276 . -1) (undo-tree-id20277 . -1) (undo-tree-id20278 . -1) (undo-tree-id20279 . -1) (undo-tree-id20280 . -1) (undo-tree-id20281 . -1) (undo-tree-id20282 . -1) (undo-tree-id20283 . -1) (undo-tree-id20284 . -1) (undo-tree-id20285 . -1) (undo-tree-id20286 . -1) (undo-tree-id20287 . -1) (undo-tree-id20288 . -1) (undo-tree-id20289 . -1) (undo-tree-id20290 . -1) (undo-tree-id20291 . -1) (undo-tree-id20292 . -1) (undo-tree-id20293 . -1) (undo-tree-id20294 . -1) (undo-tree-id20295 . -1) (undo-tree-id20296 . -1) (undo-tree-id20297 . -1) (undo-tree-id20298 . -1) (undo-tree-id20299 . -1) (undo-tree-id20300 . -1) (undo-tree-id20301 . -1) (undo-tree-id20302 . -1) (undo-tree-id20303 . -1) (undo-tree-id20304 . -1) (undo-tree-id20305 . -1) (undo-tree-id20306 . -1) (undo-tree-id20307 . -1) (undo-tree-id20308 . -1) (undo-tree-id20309 . -1) (undo-tree-id20310 . -1) (undo-tree-id20311 . -1) (undo-tree-id20312 . -1) (undo-tree-id20313 . -1) (undo-tree-id20314 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12473) (undo-tree-id20315 . -1) (undo-tree-id20316 . -1) (undo-tree-id20317 . -1) (undo-tree-id20318 . -1) (undo-tree-id20319 . -1) (undo-tree-id20320 . -1) (undo-tree-id20321 . -1) (undo-tree-id20322 . -1) (undo-tree-id20323 . -1) (undo-tree-id20324 . -1) (undo-tree-id20325 . -1) (undo-tree-id20326 . -1) (undo-tree-id20327 . -1) (undo-tree-id20328 . -1) (undo-tree-id20329 . -1) (undo-tree-id20330 . -1) (undo-tree-id20331 . -1) (undo-tree-id20332 . -1) (undo-tree-id20333 . -1) (undo-tree-id20334 . -1) (undo-tree-id20335 . -1) (undo-tree-id20336 . -1) (undo-tree-id20337 . -1) (undo-tree-id20338 . -1) (undo-tree-id20339 . -1) (undo-tree-id20340 . -1) (undo-tree-id20341 . -1) (undo-tree-id20342 . -1) (undo-tree-id20343 . -1) (undo-tree-id20344 . -1) (undo-tree-id20345 . -1) (undo-tree-id20346 . -1) (undo-tree-id20347 . -1) (undo-tree-id20348 . -1) (undo-tree-id20349 . -1) (undo-tree-id20350 . -1) (undo-tree-id20351 . -1) (undo-tree-id20352 . -1) (undo-tree-id20353 . -1) (undo-tree-id20354 . -1) (undo-tree-id20355 . -1) (undo-tree-id20356 . -1) (undo-tree-id20357 . -1) (#("." 0 1 (fontified nil)) . -12474) (undo-tree-id20358 . -1) (undo-tree-id20359 . -1) (undo-tree-id20360 . -1) (undo-tree-id20361 . -1) (undo-tree-id20362 . -1) (undo-tree-id20363 . -1) (undo-tree-id20364 . -1) (undo-tree-id20365 . -1) (undo-tree-id20366 . -1) (undo-tree-id20367 . -1) (undo-tree-id20368 . -1) (undo-tree-id20369 . -1) (undo-tree-id20370 . -1) (undo-tree-id20371 . -1) (undo-tree-id20372 . -1) (undo-tree-id20373 . -1) (undo-tree-id20374 . -1) (undo-tree-id20375 . -1) (undo-tree-id20376 . -1) (undo-tree-id20377 . -1) (undo-tree-id20378 . -1) (undo-tree-id20379 . -1) (undo-tree-id20380 . -1) (undo-tree-id20381 . -1) (undo-tree-id20382 . -1) (undo-tree-id20383 . -1) (undo-tree-id20384 . -1) (undo-tree-id20385 . -1) (undo-tree-id20386 . -1) (undo-tree-id20387 . -1) (undo-tree-id20388 . -1) (undo-tree-id20389 . -1) (undo-tree-id20390 . -1) (undo-tree-id20391 . -1) (undo-tree-id20392 . -1) (undo-tree-id20393 . -1) (undo-tree-id20394 . -1) (undo-tree-id20395 . -1) (undo-tree-id20396 . -1) (undo-tree-id20397 . -1) (undo-tree-id20398 . -1) (#("N" 0 1 (fontified nil)) . -12475) (undo-tree-id20399 . -1) (undo-tree-id20400 . -1) (undo-tree-id20401 . -1) (undo-tree-id20402 . -1) (undo-tree-id20403 . -1) (undo-tree-id20404 . -1) (undo-tree-id20405 . -1) (undo-tree-id20406 . -1) (undo-tree-id20407 . -1) (undo-tree-id20408 . -1) (undo-tree-id20409 . -1) (undo-tree-id20410 . -1) (undo-tree-id20411 . -1) (undo-tree-id20412 . -1) (undo-tree-id20413 . -1) (undo-tree-id20414 . -1) (undo-tree-id20415 . -1) (undo-tree-id20416 . -1) (undo-tree-id20417 . -1) (undo-tree-id20418 . -1) (undo-tree-id20419 . -1) (undo-tree-id20420 . -1) (undo-tree-id20421 . -1) (undo-tree-id20422 . -1) (undo-tree-id20423 . -1) (undo-tree-id20424 . -1) (undo-tree-id20425 . -1) (undo-tree-id20426 . -1) (undo-tree-id20427 . -1) (undo-tree-id20428 . -1) (undo-tree-id20429 . -1) (undo-tree-id20430 . -1) (undo-tree-id20431 . -1) (undo-tree-id20432 . -1) (undo-tree-id20433 . -1) (undo-tree-id20434 . -1) (undo-tree-id20435 . -1) (undo-tree-id20436 . -1) (undo-tree-id20437 . -1) (#("_" 0 1 (fontified nil)) . -12476) (undo-tree-id20438 . -1) (undo-tree-id20439 . -1) (undo-tree-id20440 . -1) (undo-tree-id20441 . -1) (undo-tree-id20442 . -1) (undo-tree-id20443 . -1) (undo-tree-id20444 . -1) (undo-tree-id20445 . -1) (undo-tree-id20446 . -1) (undo-tree-id20447 . -1) (undo-tree-id20448 . -1) (undo-tree-id20449 . -1) (undo-tree-id20450 . -1) (undo-tree-id20451 . -1) (undo-tree-id20452 . -1) (undo-tree-id20453 . -1) (undo-tree-id20454 . -1) (undo-tree-id20455 . -1) (undo-tree-id20456 . -1) (undo-tree-id20457 . -1) (undo-tree-id20458 . -1) (undo-tree-id20459 . -1) (undo-tree-id20460 . -1) (undo-tree-id20461 . -1) (undo-tree-id20462 . -1) (undo-tree-id20463 . -1) (undo-tree-id20464 . -1) (undo-tree-id20465 . -1) (undo-tree-id20466 . -1) (undo-tree-id20467 . -1) (undo-tree-id20468 . -1) (undo-tree-id20469 . -1) (undo-tree-id20470 . -1) (undo-tree-id20471 . -1) (undo-tree-id20472 . -1) (undo-tree-id20473 . -1) (undo-tree-id20474 . -1) (#("P" 0 1 (fontified nil)) . -12477) (undo-tree-id20475 . -1) (undo-tree-id20476 . -1) (undo-tree-id20477 . -1) (undo-tree-id20478 . -1) (undo-tree-id20479 . -1) (undo-tree-id20480 . -1) (undo-tree-id20481 . -1) (undo-tree-id20482 . -1) (undo-tree-id20483 . -1) (undo-tree-id20484 . -1) (undo-tree-id20485 . -1) (undo-tree-id20486 . -1) (undo-tree-id20487 . -1) (undo-tree-id20488 . -1) (undo-tree-id20489 . -1) (undo-tree-id20490 . -1) (undo-tree-id20491 . -1) (undo-tree-id20492 . -1) (undo-tree-id20493 . -1) (undo-tree-id20494 . -1) (undo-tree-id20495 . -1) (undo-tree-id20496 . -1) (undo-tree-id20497 . -1) (undo-tree-id20498 . -1) (undo-tree-id20499 . -1) (undo-tree-id20500 . -1) (undo-tree-id20501 . -1) (undo-tree-id20502 . -1) (undo-tree-id20503 . -1) (undo-tree-id20504 . -1) (undo-tree-id20505 . -1) (undo-tree-id20506 . -1) (undo-tree-id20507 . -1) (undo-tree-id20508 . -1) (undo-tree-id20509 . -1) (#("O" 0 1 (fontified nil)) . -12478) (undo-tree-id20510 . -1) (undo-tree-id20511 . -1) (undo-tree-id20512 . -1) (undo-tree-id20513 . -1) (undo-tree-id20514 . -1) (undo-tree-id20515 . -1) (undo-tree-id20516 . -1) (undo-tree-id20517 . -1) (undo-tree-id20518 . -1) (undo-tree-id20519 . -1) (undo-tree-id20520 . -1) (undo-tree-id20521 . -1) (undo-tree-id20522 . -1) (undo-tree-id20523 . -1) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1) (undo-tree-id20533 . -1) (undo-tree-id20534 . -1) (undo-tree-id20535 . -1) (undo-tree-id20536 . -1) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1) (undo-tree-id20540 . -1) (undo-tree-id20541 . -1) (undo-tree-id20542 . -1) (#("P" 0 1 (fontified nil)) . -12479) (undo-tree-id20543 . -1) (undo-tree-id20544 . -1) (undo-tree-id20545 . -1) (undo-tree-id20546 . -1) (undo-tree-id20547 . -1) (undo-tree-id20548 . -1) (undo-tree-id20549 . -1) (undo-tree-id20550 . -1) (undo-tree-id20551 . -1) (undo-tree-id20552 . -1) (undo-tree-id20553 . -1) (undo-tree-id20554 . -1) (undo-tree-id20555 . -1) (undo-tree-id20556 . -1) (undo-tree-id20557 . -1) (undo-tree-id20558 . -1) (undo-tree-id20559 . -1) (undo-tree-id20560 . -1) (undo-tree-id20561 . -1) (undo-tree-id20562 . -1) (undo-tree-id20563 . -1) (undo-tree-id20564 . -1) (undo-tree-id20565 . -1) (undo-tree-id20566 . -1) (undo-tree-id20567 . -1) (undo-tree-id20568 . -1) (undo-tree-id20569 . -1) (undo-tree-id20570 . -1) (undo-tree-id20571 . -1) (undo-tree-id20572 . -1) (undo-tree-id20573 . -1) (#("," 0 1 (fontified nil)) . -12480) (undo-tree-id20574 . -1) (undo-tree-id20575 . -1) (undo-tree-id20576 . -1) (undo-tree-id20577 . -1) (undo-tree-id20578 . -1) (undo-tree-id20579 . -1) (undo-tree-id20580 . -1) (undo-tree-id20581 . -1) (undo-tree-id20582 . -1) (undo-tree-id20583 . -1) (undo-tree-id20584 . -1) (undo-tree-id20585 . -1) (undo-tree-id20586 . -1) (undo-tree-id20587 . -1) (undo-tree-id20588 . -1) (undo-tree-id20589 . -1) (undo-tree-id20590 . -1) (undo-tree-id20591 . -1) (undo-tree-id20592 . -1) (undo-tree-id20593 . -1) (undo-tree-id20594 . -1) (undo-tree-id20595 . -1) (undo-tree-id20596 . -1) (undo-tree-id20597 . -1) (undo-tree-id20598 . -1) (undo-tree-id20599 . -1) (undo-tree-id20600 . -1) (undo-tree-id20601 . -1) (undo-tree-id20602 . -1) (#(" " 0 1 (fontified nil)) . -12481) (undo-tree-id20603 . -1) (undo-tree-id20604 . -1) (undo-tree-id20605 . -1) (undo-tree-id20606 . -1) (undo-tree-id20607 . -1) (undo-tree-id20608 . -1) (undo-tree-id20609 . -1) (undo-tree-id20610 . -1) (undo-tree-id20611 . -1) (undo-tree-id20612 . -1) (undo-tree-id20613 . -1) (undo-tree-id20614 . -1) (undo-tree-id20615 . -1) (undo-tree-id20616 . -1) (undo-tree-id20617 . -1) (undo-tree-id20618 . -1) (undo-tree-id20619 . -1) (undo-tree-id20620 . -1) (undo-tree-id20621 . -1) (undo-tree-id20622 . -1) (undo-tree-id20623 . -1) (undo-tree-id20624 . -1) (undo-tree-id20625 . -1) (undo-tree-id20626 . -1) (undo-tree-id20627 . -1) (undo-tree-id20628 . -1) (undo-tree-id20629 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12482) (undo-tree-id20630 . -1) (undo-tree-id20631 . -1) (undo-tree-id20632 . -1) (undo-tree-id20633 . -1) (undo-tree-id20634 . -1) (undo-tree-id20635 . -1) (undo-tree-id20636 . -1) (undo-tree-id20637 . -1) (undo-tree-id20638 . -1) (undo-tree-id20639 . -1) (undo-tree-id20640 . -1) (undo-tree-id20641 . -1) (undo-tree-id20642 . -1) (undo-tree-id20643 . -1) (undo-tree-id20644 . -1) (undo-tree-id20645 . -1) (undo-tree-id20646 . -1) (undo-tree-id20647 . -1) (undo-tree-id20648 . -1) (undo-tree-id20649 . -1) (undo-tree-id20650 . -1) (undo-tree-id20651 . -1) (undo-tree-id20652 . -1) (undo-tree-id20653 . -1) (undo-tree-id20654 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12483) (undo-tree-id20655 . -1) (undo-tree-id20656 . -1) (undo-tree-id20657 . -1) (undo-tree-id20658 . -1) (undo-tree-id20659 . -1) (undo-tree-id20660 . -1) (undo-tree-id20661 . -1) (undo-tree-id20662 . -1) (undo-tree-id20663 . -1) (undo-tree-id20664 . -1) (undo-tree-id20665 . -1) (undo-tree-id20666 . -1) (undo-tree-id20667 . -1) (undo-tree-id20668 . -1) (undo-tree-id20669 . -1) (undo-tree-id20670 . -1) (undo-tree-id20671 . -1) (undo-tree-id20672 . -1) (undo-tree-id20673 . -1) (undo-tree-id20674 . -1) (undo-tree-id20675 . -1) (undo-tree-id20676 . -1) (undo-tree-id20677 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -12484) (undo-tree-id20678 . -1) (undo-tree-id20679 . -1) (undo-tree-id20680 . -1) (undo-tree-id20681 . -1) (undo-tree-id20682 . -1) (undo-tree-id20683 . -1) (undo-tree-id20684 . -1) (undo-tree-id20685 . -1) (undo-tree-id20686 . -1) (undo-tree-id20687 . -1) (undo-tree-id20688 . -1) (undo-tree-id20689 . -1) (undo-tree-id20690 . -1) (undo-tree-id20691 . -1) (undo-tree-id20692 . -1) (undo-tree-id20693 . -1) (undo-tree-id20694 . -1) (undo-tree-id20695 . -1) (undo-tree-id20696 . -1) (undo-tree-id20697 . -1) (undo-tree-id20698 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -12485) (undo-tree-id20699 . -1) (undo-tree-id20700 . -1) (undo-tree-id20701 . -1) (undo-tree-id20702 . -1) (undo-tree-id20703 . -1) (undo-tree-id20704 . -1) (undo-tree-id20705 . -1) (undo-tree-id20706 . -1) (undo-tree-id20707 . -1) (undo-tree-id20708 . -1) (undo-tree-id20709 . -1) (undo-tree-id20710 . -1) (undo-tree-id20711 . -1) (undo-tree-id20712 . -1) (undo-tree-id20713 . -1) (undo-tree-id20714 . -1) (undo-tree-id20715 . -1) (undo-tree-id20716 . -1) (undo-tree-id20717 . -1) (#("." 0 1 (fontified nil)) . -12486) (undo-tree-id20718 . -1) (undo-tree-id20719 . -1) (undo-tree-id20720 . -1) (undo-tree-id20721 . -1) (undo-tree-id20722 . -1) (undo-tree-id20723 . -1) (undo-tree-id20724 . -1) (undo-tree-id20725 . -1) (undo-tree-id20726 . -1) (undo-tree-id20727 . -1) (undo-tree-id20728 . -1) (undo-tree-id20729 . -1) (undo-tree-id20730 . -1) (undo-tree-id20731 . -1) (undo-tree-id20732 . -1) (undo-tree-id20733 . -1) (undo-tree-id20734 . -1) (#("N" 0 1 (fontified nil)) . -12487) (undo-tree-id20735 . -1) (undo-tree-id20736 . -1) (undo-tree-id20737 . -1) (undo-tree-id20738 . -1) (undo-tree-id20739 . -1) (undo-tree-id20740 . -1) (undo-tree-id20741 . -1) (undo-tree-id20742 . -1) (undo-tree-id20743 . -1) (undo-tree-id20744 . -1) (undo-tree-id20745 . -1) (undo-tree-id20746 . -1) (undo-tree-id20747 . -1) (undo-tree-id20748 . -1) (undo-tree-id20749 . -1) (#("_" 0 1 (fontified nil)) . -12488) (undo-tree-id20750 . -1) (undo-tree-id20751 . -1) (undo-tree-id20752 . -1) (undo-tree-id20753 . -1) (undo-tree-id20754 . -1) (undo-tree-id20755 . -1) (undo-tree-id20756 . -1) (undo-tree-id20757 . -1) (undo-tree-id20758 . -1) (undo-tree-id20759 . -1) (undo-tree-id20760 . -1) (undo-tree-id20761 . -1) (undo-tree-id20762 . -1) (#("P" 0 1 (fontified nil)) . -12489) (undo-tree-id20763 . -1) (undo-tree-id20764 . -1) (undo-tree-id20765 . -1) (undo-tree-id20766 . -1) (undo-tree-id20767 . -1) (undo-tree-id20768 . -1) (undo-tree-id20769 . -1) (undo-tree-id20770 . -1) (undo-tree-id20771 . -1) (undo-tree-id20772 . -1) (undo-tree-id20773 . -1) (#("O" 0 1 (fontified t)) . -12490) (undo-tree-id20774 . -1) (undo-tree-id20775 . -1) (undo-tree-id20776 . -1) (undo-tree-id20777 . -1) (undo-tree-id20778 . -1) (undo-tree-id20779 . -1) (undo-tree-id20780 . -1) (undo-tree-id20781 . -1) (undo-tree-id20782 . -1) (#("P" 0 1 (fontified t)) . -12491) (undo-tree-id20783 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -12492) (undo-tree-id20784 . -1) 12493) nil (25934 12503 17622 756000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -12464) (undo-tree-id19754 . -1) (undo-tree-id19755 . -1) (undo-tree-id19756 . -1) (undo-tree-id19757 . -1) (undo-tree-id19758 . -1) (undo-tree-id19759 . -1) (undo-tree-id19760 . -1) (undo-tree-id19761 . -1) (undo-tree-id19762 . -1) (undo-tree-id19763 . -1) (undo-tree-id19764 . -1) (undo-tree-id19765 . -1) (undo-tree-id19766 . -1) (undo-tree-id19767 . -1) (undo-tree-id19768 . -1) (undo-tree-id19769 . -1) (undo-tree-id19770 . -1) (undo-tree-id19771 . -1) (undo-tree-id19772 . -1) (undo-tree-id19773 . -1) (undo-tree-id19774 . -1) (undo-tree-id19775 . -1) (undo-tree-id19776 . -1) (undo-tree-id19777 . -1) (undo-tree-id19778 . -1) (undo-tree-id19779 . -1) (undo-tree-id19780 . -1) (undo-tree-id19781 . -1) (undo-tree-id19782 . -1) (undo-tree-id19783 . -1) (undo-tree-id19784 . -1) (undo-tree-id19785 . -1) (undo-tree-id19786 . -1) (undo-tree-id19787 . -1) (undo-tree-id19788 . -1) (undo-tree-id19789 . -1) (undo-tree-id19790 . -1) (undo-tree-id19791 . -1) (undo-tree-id19792 . -1) (undo-tree-id19793 . -1) (undo-tree-id19794 . -1) (undo-tree-id19795 . -1) (undo-tree-id19796 . -1) (undo-tree-id19797 . -1) (undo-tree-id19798 . -1) (undo-tree-id19799 . -1) (undo-tree-id19800 . -1) (undo-tree-id19801 . -1) (undo-tree-id19802 . -1) (undo-tree-id19803 . -1) (undo-tree-id19804 . -1) (undo-tree-id19805 . -1) (undo-tree-id19806 . -1) (undo-tree-id19807 . -1) (undo-tree-id19808 . -1) (undo-tree-id19809 . -1) (undo-tree-id19810 . -1) (undo-tree-id19811 . -1) (undo-tree-id19812 . -1) (undo-tree-id19813 . -1) (undo-tree-id19814 . -1) (undo-tree-id19815 . -1) (undo-tree-id19816 . -1) (undo-tree-id19817 . -1) (undo-tree-id19818 . -1) (undo-tree-id19819 . -1) (undo-tree-id19820 . -1) (undo-tree-id19821 . -1) (undo-tree-id19822 . -1) (undo-tree-id19823 . -1) (undo-tree-id19824 . -1) (undo-tree-id19825 . -1) (undo-tree-id19826 . -1) (undo-tree-id19827 . -1) (undo-tree-id19828 . -1) (undo-tree-id19829 . -1) (undo-tree-id19830 . -1) (undo-tree-id19831 . -1) (undo-tree-id19832 . -1) (undo-tree-id19833 . -1) (undo-tree-id19834 . -1) (undo-tree-id19835 . -1) (undo-tree-id19836 . -1) (undo-tree-id19837 . -1) (undo-tree-id19838 . -1) (undo-tree-id19839 . -1) (undo-tree-id19840 . -1) (undo-tree-id19841 . -1) (undo-tree-id19842 . -1) (undo-tree-id19843 . -1) (undo-tree-id19844 . -1) (undo-tree-id19845 . -1) (undo-tree-id19846 . -1) (undo-tree-id19847 . -1) (undo-tree-id19848 . -1) (undo-tree-id19849 . -1) (#("v" 0 1 (fontified t)) . -12465) (undo-tree-id19850 . -1) (undo-tree-id19851 . -1) (undo-tree-id19852 . -1) (undo-tree-id19853 . -1) (undo-tree-id19854 . -1) (undo-tree-id19855 . -1) (undo-tree-id19856 . -1) (undo-tree-id19857 . -1) (undo-tree-id19858 . -1) (undo-tree-id19859 . -1) (undo-tree-id19860 . -1) (undo-tree-id19861 . -1) (undo-tree-id19862 . -1) (undo-tree-id19863 . -1) (undo-tree-id19864 . -1) (undo-tree-id19865 . -1) (undo-tree-id19866 . -1) (undo-tree-id19867 . -1) (undo-tree-id19868 . -1) (undo-tree-id19869 . -1) (undo-tree-id19870 . -1) (undo-tree-id19871 . -1) (undo-tree-id19872 . -1) (undo-tree-id19873 . -1) (undo-tree-id19874 . -1) (undo-tree-id19875 . -1) (undo-tree-id19876 . -1) (undo-tree-id19877 . -1) (undo-tree-id19878 . -1) (undo-tree-id19879 . -1) (undo-tree-id19880 . -1) (undo-tree-id19881 . -1) (undo-tree-id19882 . -1) (undo-tree-id19883 . -1) (undo-tree-id19884 . -1) (undo-tree-id19885 . -1) (undo-tree-id19886 . -1) (undo-tree-id19887 . -1) (undo-tree-id19888 . -1) (undo-tree-id19889 . -1) (undo-tree-id19890 . -1) (undo-tree-id19891 . -1) (undo-tree-id19892 . -1) (undo-tree-id19893 . -1) (undo-tree-id19894 . -1) (undo-tree-id19895 . -1) (undo-tree-id19896 . -1) (undo-tree-id19897 . -1) (undo-tree-id19898 . -1) (undo-tree-id19899 . -1) (undo-tree-id19900 . -1) (undo-tree-id19901 . -1) (undo-tree-id19902 . -1) (undo-tree-id19903 . -1) (undo-tree-id19904 . -1) (undo-tree-id19905 . -1) (undo-tree-id19906 . -1) (undo-tree-id19907 . -1) (undo-tree-id19908 . -1) (undo-tree-id19909 . -1) (undo-tree-id19910 . -1) (undo-tree-id19911 . -1) (undo-tree-id19912 . -1) (undo-tree-id19913 . -1) (undo-tree-id19914 . -1) (undo-tree-id19915 . -1) (undo-tree-id19916 . -1) (undo-tree-id19917 . -1) (undo-tree-id19918 . -1) (undo-tree-id19919 . -1) (undo-tree-id19920 . -1) (undo-tree-id19921 . -1) (undo-tree-id19922 . -1) (undo-tree-id19923 . -1) (undo-tree-id19924 . -1) (undo-tree-id19925 . -1) (undo-tree-id19926 . -1) (undo-tree-id19927 . -1) (undo-tree-id19928 . -1) (undo-tree-id19929 . -1) (undo-tree-id19930 . -1) (undo-tree-id19931 . -1) (undo-tree-id19932 . -1) (undo-tree-id19933 . -1) (undo-tree-id19934 . -1) (undo-tree-id19935 . -1) (#("i" 0 1 (fontified t)) . -12466) (undo-tree-id19936 . -1) (undo-tree-id19937 . -1) (undo-tree-id19938 . -1) (undo-tree-id19939 . -1) (undo-tree-id19940 . -1) (undo-tree-id19941 . -1) (undo-tree-id19942 . -1) (undo-tree-id19943 . -1) (undo-tree-id19944 . -1) (undo-tree-id19945 . -1) (undo-tree-id19946 . -1) (undo-tree-id19947 . -1) (undo-tree-id19948 . -1) (undo-tree-id19949 . -1) (undo-tree-id19950 . -1) (undo-tree-id19951 . -1) (undo-tree-id19952 . -1) (undo-tree-id19953 . -1) (undo-tree-id19954 . -1) (undo-tree-id19955 . -1) (undo-tree-id19956 . -1) (undo-tree-id19957 . -1) (undo-tree-id19958 . -1) (undo-tree-id19959 . -1) (undo-tree-id19960 . -1) (undo-tree-id19961 . -1) (undo-tree-id19962 . -1) (undo-tree-id19963 . -1) (undo-tree-id19964 . -1) (undo-tree-id19965 . -1) (undo-tree-id19966 . -1) (undo-tree-id19967 . -1) (undo-tree-id19968 . -1) (undo-tree-id19969 . -1) (undo-tree-id19970 . -1) (undo-tree-id19971 . -1) (undo-tree-id19972 . -1) (undo-tree-id19973 . -1) (undo-tree-id19974 . -1) (undo-tree-id19975 . -1) (undo-tree-id19976 . -1) (undo-tree-id19977 . -1) (undo-tree-id19978 . -1) (undo-tree-id19979 . -1) (undo-tree-id19980 . -1) (undo-tree-id19981 . -1) (undo-tree-id19982 . -1) (undo-tree-id19983 . -1) (undo-tree-id19984 . -1) (undo-tree-id19985 . -1) (undo-tree-id19986 . -1) (undo-tree-id19987 . -1) (undo-tree-id19988 . -1) (undo-tree-id19989 . -1) (undo-tree-id19990 . -1) (undo-tree-id19991 . -1) (undo-tree-id19992 . -1) (undo-tree-id19993 . -1) (undo-tree-id19994 . -1) (undo-tree-id19995 . -1) (undo-tree-id19996 . -1) (undo-tree-id19997 . -1) (undo-tree-id19998 . -1) (undo-tree-id19999 . -1) (undo-tree-id20000 . -1) (undo-tree-id20001 . -1) (undo-tree-id20002 . -1) (undo-tree-id20003 . -1) (undo-tree-id20004 . -1) (#("e" 0 1 (fontified nil)) . -12467) (undo-tree-id20005 . -1) (undo-tree-id20006 . -1) (undo-tree-id20007 . -1) (undo-tree-id20008 . -1) (undo-tree-id20009 . -1) (undo-tree-id20010 . -1) (undo-tree-id20011 . -1) (undo-tree-id20012 . -1) (undo-tree-id20013 . -1) (undo-tree-id20014 . -1) (undo-tree-id20015 . -1) (undo-tree-id20016 . -1) (undo-tree-id20017 . -1) (undo-tree-id20018 . -1) (undo-tree-id20019 . -1) (undo-tree-id20020 . -1) (undo-tree-id20021 . -1) (undo-tree-id20022 . -1) (undo-tree-id20023 . -1) (undo-tree-id20024 . -1) (undo-tree-id20025 . -1) (undo-tree-id20026 . -1) (undo-tree-id20027 . -1) (undo-tree-id20028 . -1) (undo-tree-id20029 . -1) (undo-tree-id20030 . -1) (undo-tree-id20031 . -1) (undo-tree-id20032 . -1) (undo-tree-id20033 . -1) (undo-tree-id20034 . -1) (undo-tree-id20035 . -1) (undo-tree-id20036 . -1) (undo-tree-id20037 . -1) (undo-tree-id20038 . -1) (undo-tree-id20039 . -1) (undo-tree-id20040 . -1) (undo-tree-id20041 . -1) (undo-tree-id20042 . -1) (undo-tree-id20043 . -1) (undo-tree-id20044 . -1) (undo-tree-id20045 . -1) (undo-tree-id20046 . -1) (undo-tree-id20047 . -1) (undo-tree-id20048 . -1) (undo-tree-id20049 . -1) (undo-tree-id20050 . -1) (undo-tree-id20051 . -1) (undo-tree-id20052 . -1) (undo-tree-id20053 . -1) (undo-tree-id20054 . -1) (undo-tree-id20055 . -1) (undo-tree-id20056 . -1) (undo-tree-id20057 . -1) (undo-tree-id20058 . -1) (undo-tree-id20059 . -1) (undo-tree-id20060 . -1) (undo-tree-id20061 . -1) (undo-tree-id20062 . -1) (undo-tree-id20063 . -1) (#("w" 0 1 (fontified nil)) . -12468) (undo-tree-id20064 . -1) (undo-tree-id20065 . -1) (undo-tree-id20066 . -1) (undo-tree-id20067 . -1) (undo-tree-id20068 . -1) (undo-tree-id20069 . -1) (undo-tree-id20070 . -1) (undo-tree-id20071 . -1) (undo-tree-id20072 . -1) (undo-tree-id20073 . -1) (undo-tree-id20074 . -1) (undo-tree-id20075 . -1) (undo-tree-id20076 . -1) (undo-tree-id20077 . -1) (undo-tree-id20078 . -1) (undo-tree-id20079 . -1) (undo-tree-id20080 . -1) (undo-tree-id20081 . -1) (undo-tree-id20082 . -1) (undo-tree-id20083 . -1) (undo-tree-id20084 . -1) (undo-tree-id20085 . -1) (undo-tree-id20086 . -1) (undo-tree-id20087 . -1) (undo-tree-id20088 . -1) (undo-tree-id20089 . -1) (undo-tree-id20090 . -1) (undo-tree-id20091 . -1) (undo-tree-id20092 . -1) (undo-tree-id20093 . -1) (undo-tree-id20094 . -1) (undo-tree-id20095 . -1) (undo-tree-id20096 . -1) (undo-tree-id20097 . -1) (undo-tree-id20098 . -1) (undo-tree-id20099 . -1) (undo-tree-id20100 . -1) (undo-tree-id20101 . -1) (undo-tree-id20102 . -1) (undo-tree-id20103 . -1) (undo-tree-id20104 . -1) (undo-tree-id20105 . -1) (undo-tree-id20106 . -1) (undo-tree-id20107 . -1) (undo-tree-id20108 . -1) (undo-tree-id20109 . -1) (undo-tree-id20110 . -1) (undo-tree-id20111 . -1) (undo-tree-id20112 . -1) (undo-tree-id20113 . -1) (undo-tree-id20114 . -1) (undo-tree-id20115 . -1) (undo-tree-id20116 . -1) (undo-tree-id20117 . -1) (undo-tree-id20118 . -1) (undo-tree-id20119 . -1) (undo-tree-id20120 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -12469) (undo-tree-id20121 . -1) (undo-tree-id20122 . -1) (undo-tree-id20123 . -1) (undo-tree-id20124 . -1) (undo-tree-id20125 . -1) (undo-tree-id20126 . -1) (undo-tree-id20127 . -1) (undo-tree-id20128 . -1) (undo-tree-id20129 . -1) (undo-tree-id20130 . -1) (undo-tree-id20131 . -1) (undo-tree-id20132 . -1) (undo-tree-id20133 . -1) (undo-tree-id20134 . -1) (undo-tree-id20135 . -1) (undo-tree-id20136 . -1) (undo-tree-id20137 . -1) (undo-tree-id20138 . -1) (undo-tree-id20139 . -1) (undo-tree-id20140 . -1) (undo-tree-id20141 . -1) (undo-tree-id20142 . -1) (undo-tree-id20143 . -1) (undo-tree-id20144 . -1) (undo-tree-id20145 . -1) (undo-tree-id20146 . -1) (undo-tree-id20147 . -1) (undo-tree-id20148 . -1) (undo-tree-id20149 . -1) (undo-tree-id20150 . -1) (undo-tree-id20151 . -1) (undo-tree-id20152 . -1) (undo-tree-id20153 . -1) (undo-tree-id20154 . -1) (undo-tree-id20155 . -1) (undo-tree-id20156 . -1) (undo-tree-id20157 . -1) (undo-tree-id20158 . -1) (undo-tree-id20159 . -1) (undo-tree-id20160 . -1) (undo-tree-id20161 . -1) (undo-tree-id20162 . -1) (undo-tree-id20163 . -1) (undo-tree-id20164 . -1) (undo-tree-id20165 . -1) (undo-tree-id20166 . -1) (undo-tree-id20167 . -1) (undo-tree-id20168 . -1) (undo-tree-id20169 . -1) (undo-tree-id20170 . -1) (undo-tree-id20171 . -1) (undo-tree-id20172 . -1) (undo-tree-id20173 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -12470) (undo-tree-id20174 . -1) (undo-tree-id20175 . -1) (undo-tree-id20176 . -1) (undo-tree-id20177 . -1) (undo-tree-id20178 . -1) (undo-tree-id20179 . -1) (undo-tree-id20180 . -1) (undo-tree-id20181 . -1) (undo-tree-id20182 . -1) (undo-tree-id20183 . -1) (undo-tree-id20184 . -1) (undo-tree-id20185 . -1) (undo-tree-id20186 . -1) (undo-tree-id20187 . -1) (undo-tree-id20188 . -1) (undo-tree-id20189 . -1) (undo-tree-id20190 . -1) (undo-tree-id20191 . -1) (undo-tree-id20192 . -1) (undo-tree-id20193 . -1) (undo-tree-id20194 . -1) (undo-tree-id20195 . -1) (undo-tree-id20196 . -1) (undo-tree-id20197 . -1) (undo-tree-id20198 . -1) (undo-tree-id20199 . -1) (undo-tree-id20200 . -1) (undo-tree-id20201 . -1) (undo-tree-id20202 . -1) (undo-tree-id20203 . -1) (undo-tree-id20204 . -1) (undo-tree-id20205 . -1) (undo-tree-id20206 . -1) (undo-tree-id20207 . -1) (undo-tree-id20208 . -1) (undo-tree-id20209 . -1) (undo-tree-id20210 . -1) (undo-tree-id20211 . -1) (undo-tree-id20212 . -1) (undo-tree-id20213 . -1) (undo-tree-id20214 . -1) (undo-tree-id20215 . -1) (undo-tree-id20216 . -1) (undo-tree-id20217 . -1) (undo-tree-id20218 . -1) (undo-tree-id20219 . -1) (undo-tree-id20220 . -1) (undo-tree-id20221 . -1) (undo-tree-id20222 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -12471) (undo-tree-id20223 . -1) (undo-tree-id20224 . -1) (undo-tree-id20225 . -1) (undo-tree-id20226 . -1) (undo-tree-id20227 . -1) (undo-tree-id20228 . -1) (undo-tree-id20229 . -1) (undo-tree-id20230 . -1) (undo-tree-id20231 . -1) (undo-tree-id20232 . -1) (undo-tree-id20233 . -1) (undo-tree-id20234 . -1) (undo-tree-id20235 . -1) (undo-tree-id20236 . -1) (undo-tree-id20237 . -1) (undo-tree-id20238 . -1) (undo-tree-id20239 . -1) (undo-tree-id20240 . -1) (undo-tree-id20241 . -1) (undo-tree-id20242 . -1) (undo-tree-id20243 . -1) (undo-tree-id20244 . -1) (undo-tree-id20245 . -1) (undo-tree-id20246 . -1) (undo-tree-id20247 . -1) (undo-tree-id20248 . -1) (undo-tree-id20249 . -1) (undo-tree-id20250 . -1) (undo-tree-id20251 . -1) (undo-tree-id20252 . -1) (undo-tree-id20253 . -1) (undo-tree-id20254 . -1) (undo-tree-id20255 . -1) (undo-tree-id20256 . -1) (undo-tree-id20257 . -1) (undo-tree-id20258 . -1) (undo-tree-id20259 . -1) (undo-tree-id20260 . -1) (undo-tree-id20261 . -1) (undo-tree-id20262 . -1) (undo-tree-id20263 . -1) (undo-tree-id20264 . -1) (undo-tree-id20265 . -1) (undo-tree-id20266 . -1) (undo-tree-id20267 . -1) (undo-tree-id20268 . -1) (undo-tree-id20269 . -1) 12472) nil (25934 12503 16995 246000) 0 nil])
([nil nil ((12284 . 12296) (t 25934 12503 75512 890000)) nil (25934 12561 523314 243000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -12292) (undo-tree-id20823 . -4) (undo-tree-id20824 . -4) (undo-tree-id20825 . -4) (undo-tree-id20826 . -4) (undo-tree-id20827 . -4) (undo-tree-id20828 . -4) (undo-tree-id20829 . -4) (undo-tree-id20830 . -4) (undo-tree-id20831 . -4) (undo-tree-id20832 . -4) (undo-tree-id20833 . -4) (undo-tree-id20834 . -4) (undo-tree-id20835 . -4) (undo-tree-id20836 . -4) (undo-tree-id20837 . -4) (undo-tree-id20838 . -4) (undo-tree-id20839 . -4) (undo-tree-id20840 . -4) (undo-tree-id20841 . -4) (undo-tree-id20842 . -4) (undo-tree-id20843 . -4) (undo-tree-id20844 . -4) (undo-tree-id20845 . -4) (undo-tree-id20846 . -4) (undo-tree-id20847 . -4) (undo-tree-id20848 . -4) (undo-tree-id20849 . -4) (undo-tree-id20850 . -4) (undo-tree-id20851 . -4) (undo-tree-id20852 . -4) (undo-tree-id20853 . -4) (undo-tree-id20854 . -4) (undo-tree-id20855 . -4) (undo-tree-id20856 . -4) (undo-tree-id20857 . -4) (undo-tree-id20858 . -4) (undo-tree-id20859 . -4) (undo-tree-id20860 . -4) (undo-tree-id20861 . -4) (undo-tree-id20862 . -4) (undo-tree-id20863 . -4) (undo-tree-id20864 . -4) 12296) nil (25934 12561 523308 404000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4710) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) (undo-tree-id20965 . -1) (undo-tree-id20966 . -1) 4711 (t 25934 12561 564867 316000)) nil (25934 12614 65378 613000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4695) (undo-tree-id20974 . -1) (undo-tree-id20975 . -1) (undo-tree-id20976 . -1) (undo-tree-id20977 . -1) (undo-tree-id20978 . -1) (undo-tree-id20979 . -1) (undo-tree-id20980 . -1) (undo-tree-id20981 . -1) (undo-tree-id20982 . -1) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) (undo-tree-id21012 . -1) (undo-tree-id21013 . -1) (undo-tree-id21014 . -1) (undo-tree-id21015 . -1) (undo-tree-id21016 . -1) (undo-tree-id21017 . -1) (undo-tree-id21018 . -1) (undo-tree-id21019 . -1) (undo-tree-id21020 . -1) (undo-tree-id21021 . -1) (undo-tree-id21022 . -1) (undo-tree-id21023 . -1) (undo-tree-id21024 . -1) (undo-tree-id21025 . -1) (undo-tree-id21026 . -1) (undo-tree-id21027 . -1) (undo-tree-id21028 . -1) (undo-tree-id21029 . -1) (undo-tree-id21030 . -1) (undo-tree-id21031 . -1) (undo-tree-id21032 . -1) (undo-tree-id21033 . -1) (undo-tree-id21034 . -1) (undo-tree-id21035 . -1) (undo-tree-id21036 . -1) (undo-tree-id21037 . -1) (undo-tree-id21038 . -1) (undo-tree-id21039 . -1) (undo-tree-id21040 . -1) (undo-tree-id21041 . -1) (undo-tree-id21042 . -1) (undo-tree-id21043 . -1) (undo-tree-id21044 . -1) (undo-tree-id21045 . -1) (undo-tree-id21046 . -1) (undo-tree-id21047 . -1) (undo-tree-id21048 . -1) (undo-tree-id21049 . -1) (undo-tree-id21050 . -1) (undo-tree-id21051 . -1) (undo-tree-id21052 . -1) (undo-tree-id21053 . -1) (undo-tree-id21054 . -1) (undo-tree-id21055 . -1) (undo-tree-id21056 . -1) (undo-tree-id21057 . -1) (undo-tree-id21058 . -1) (undo-tree-id21059 . -1) (undo-tree-id21060 . -1) (undo-tree-id21061 . -1) (undo-tree-id21062 . -1) (undo-tree-id21063 . -1) (undo-tree-id21064 . -1) (undo-tree-id21065 . -1) (undo-tree-id21066 . -1) (undo-tree-id21067 . -1) (undo-tree-id21068 . -1) (undo-tree-id21069 . -1) (undo-tree-id21070 . -1) (undo-tree-id21071 . -1) (undo-tree-id21072 . -1) (undo-tree-id21073 . -1) (undo-tree-id21074 . -1) (undo-tree-id21075 . -1) (undo-tree-id21076 . -1) (undo-tree-id21077 . -1) (undo-tree-id21078 . -1) (undo-tree-id21079 . -1) (undo-tree-id21080 . -1) (undo-tree-id21081 . -1) (undo-tree-id21082 . -1) (undo-tree-id21083 . -1) (undo-tree-id21084 . -1) (undo-tree-id21085 . -1) (undo-tree-id21086 . -1) (undo-tree-id21087 . -1) (undo-tree-id21088 . -1) (undo-tree-id21089 . -1) (undo-tree-id21090 . -1) (undo-tree-id21091 . -1) (undo-tree-id21092 . -1) (undo-tree-id21093 . -1) (undo-tree-id21094 . -1) (undo-tree-id21095 . -1) (undo-tree-id21096 . -1) (undo-tree-id21097 . -1) (undo-tree-id21098 . -1) (undo-tree-id21099 . -1) (undo-tree-id21100 . -1) (undo-tree-id21101 . -1) (undo-tree-id21102 . -1) (undo-tree-id21103 . -1) (undo-tree-id21104 . -1) (undo-tree-id21105 . -1) (undo-tree-id21106 . -1) (undo-tree-id21107 . -1) (undo-tree-id21108 . -1) (undo-tree-id21109 . -1) (undo-tree-id21110 . -1) (undo-tree-id21111 . -1) (undo-tree-id21112 . -1) (undo-tree-id21113 . -1) (undo-tree-id21114 . -1) (undo-tree-id21115 . -1) (undo-tree-id21116 . -1) (undo-tree-id21117 . -1) (undo-tree-id21118 . -1) (undo-tree-id21119 . -1) (undo-tree-id21120 . -1) (undo-tree-id21121 . -1) (undo-tree-id21122 . -1) (undo-tree-id21123 . -1) (undo-tree-id21124 . -1) (undo-tree-id21125 . -1) (undo-tree-id21126 . -1) (undo-tree-id21127 . -1) (undo-tree-id21128 . -1) (undo-tree-id21129 . -1) (undo-tree-id21130 . -1) (undo-tree-id21131 . -1) (undo-tree-id21132 . -1) (undo-tree-id21133 . -1) (undo-tree-id21134 . -1) (undo-tree-id21135 . -1) (undo-tree-id21136 . -1) (undo-tree-id21137 . -1) (undo-tree-id21138 . -1) (undo-tree-id21139 . -1) (undo-tree-id21140 . -1) (undo-tree-id21141 . -1) (undo-tree-id21142 . -1) (undo-tree-id21143 . -1) (undo-tree-id21144 . -1) (undo-tree-id21145 . -1) (undo-tree-id21146 . -1) (undo-tree-id21147 . -1) (undo-tree-id21148 . -1) (undo-tree-id21149 . -1) (undo-tree-id21150 . -1) (undo-tree-id21151 . -1) (undo-tree-id21152 . -1) (undo-tree-id21153 . -1) (undo-tree-id21154 . -1) (undo-tree-id21155 . -1) (undo-tree-id21156 . -1) (undo-tree-id21157 . -1) (undo-tree-id21158 . -1) (undo-tree-id21159 . -1) (undo-tree-id21160 . -1) (undo-tree-id21161 . -1) (undo-tree-id21162 . -1) (undo-tree-id21163 . -1) (undo-tree-id21164 . -1) (undo-tree-id21165 . -1) (undo-tree-id21166 . -1) (undo-tree-id21167 . -1) (undo-tree-id21168 . -1) (undo-tree-id21169 . -1) (undo-tree-id21170 . -1) (undo-tree-id21171 . -1) (undo-tree-id21172 . -1) (undo-tree-id21173 . -1) (undo-tree-id21174 . -1) (undo-tree-id21175 . -1) (undo-tree-id21176 . -1) (undo-tree-id21177 . -1) (undo-tree-id21178 . -1) (undo-tree-id21179 . -1) (undo-tree-id21180 . -1) (undo-tree-id21181 . -1) (undo-tree-id21182 . -1) (undo-tree-id21183 . -1) (undo-tree-id21184 . -1) (undo-tree-id21185 . -1) (undo-tree-id21186 . -1) (undo-tree-id21187 . -1) (undo-tree-id21188 . -1) (undo-tree-id21189 . -1) (undo-tree-id21190 . -1) (undo-tree-id21191 . -1) (undo-tree-id21192 . -1) (undo-tree-id21193 . -1) (undo-tree-id21194 . -1) (undo-tree-id21195 . -1) (undo-tree-id21196 . -1) (undo-tree-id21197 . -1) (undo-tree-id21198 . -1) (undo-tree-id21199 . -1) (undo-tree-id21200 . -1) (undo-tree-id21201 . -1) (undo-tree-id21202 . -1) (undo-tree-id21203 . -1) (undo-tree-id21204 . -1) (undo-tree-id21205 . -1) (undo-tree-id21206 . -1) (undo-tree-id21207 . -1) (undo-tree-id21208 . -1) (undo-tree-id21209 . -1) (undo-tree-id21210 . -1) (undo-tree-id21211 . -1) (undo-tree-id21212 . -1) (undo-tree-id21213 . -1) (undo-tree-id21214 . -1) (undo-tree-id21215 . -1) (undo-tree-id21216 . -1) (undo-tree-id21217 . -1) (undo-tree-id21218 . -1) (undo-tree-id21219 . -1) (undo-tree-id21220 . -1) (undo-tree-id21221 . -1) (undo-tree-id21222 . -1) (undo-tree-id21223 . -1) (undo-tree-id21224 . -1) (undo-tree-id21225 . -1) (undo-tree-id21226 . -1) (undo-tree-id21227 . -1) (undo-tree-id21228 . -1) (undo-tree-id21229 . -1) (undo-tree-id21230 . -1) (undo-tree-id21231 . -1) (undo-tree-id21232 . -1) (undo-tree-id21233 . -1) (undo-tree-id21234 . -1) (undo-tree-id21235 . -1) (undo-tree-id21236 . -1) (undo-tree-id21237 . -1) (undo-tree-id21238 . -1) (undo-tree-id21239 . -1) (undo-tree-id21240 . -1) (undo-tree-id21241 . -1) (undo-tree-id21242 . -1) (undo-tree-id21243 . -1) (undo-tree-id21244 . -1) (undo-tree-id21245 . -1) (undo-tree-id21246 . -1) (undo-tree-id21247 . -1) (undo-tree-id21248 . -1) (undo-tree-id21249 . -1) (undo-tree-id21250 . -1) (undo-tree-id21251 . -1) (undo-tree-id21252 . -1) (undo-tree-id21253 . -1) (undo-tree-id21254 . -1) (undo-tree-id21255 . -1) (undo-tree-id21256 . -1) (undo-tree-id21257 . -1) (undo-tree-id21258 . -1) (undo-tree-id21259 . -1) (undo-tree-id21260 . -1) (undo-tree-id21261 . -1) (undo-tree-id21262 . -1) (undo-tree-id21263 . -1) (undo-tree-id21264 . -1) (undo-tree-id21265 . -1) (undo-tree-id21266 . -1) (undo-tree-id21267 . -1) (undo-tree-id21268 . -1) (undo-tree-id21269 . -1) (undo-tree-id21270 . -1) (undo-tree-id21271 . -1) (undo-tree-id21272 . -1) (undo-tree-id21273 . -1) (undo-tree-id21274 . -1) (undo-tree-id21275 . -1) (undo-tree-id21276 . -1) (undo-tree-id21277 . -1) (undo-tree-id21278 . -1) (undo-tree-id21279 . -1) (undo-tree-id21280 . -1) (undo-tree-id21281 . -1) (undo-tree-id21282 . -1) (undo-tree-id21283 . -1) (undo-tree-id21284 . -1) (undo-tree-id21285 . -1) (undo-tree-id21286 . -1) (undo-tree-id21287 . -1) (undo-tree-id21288 . -1) (undo-tree-id21289 . -1) (undo-tree-id21290 . -1) (undo-tree-id21291 . -1) (undo-tree-id21292 . -1) (undo-tree-id21293 . -1) (undo-tree-id21294 . -1) (undo-tree-id21295 . -1) (undo-tree-id21296 . -1) (undo-tree-id21297 . -1) (undo-tree-id21298 . -1) (undo-tree-id21299 . -1) (undo-tree-id21300 . -1) (undo-tree-id21301 . -1) (undo-tree-id21302 . -1) (undo-tree-id21303 . -1) (undo-tree-id21304 . -1) (undo-tree-id21305 . -1) (undo-tree-id21306 . -1) (undo-tree-id21307 . -1) (undo-tree-id21308 . -1) (undo-tree-id21309 . -1) (undo-tree-id21310 . -1) (undo-tree-id21311 . -1) (undo-tree-id21312 . -1) (undo-tree-id21313 . -1) (undo-tree-id21314 . -1) (undo-tree-id21315 . -1) (undo-tree-id21316 . -1) (undo-tree-id21317 . -1) (undo-tree-id21318 . -1) (undo-tree-id21319 . -1) (undo-tree-id21320 . -1) (undo-tree-id21321 . -1) (undo-tree-id21322 . -1) (undo-tree-id21323 . -1) (undo-tree-id21324 . -1) (undo-tree-id21325 . -1) (undo-tree-id21326 . -1) (undo-tree-id21327 . -1) (undo-tree-id21328 . -1) (undo-tree-id21329 . -1) (undo-tree-id21330 . -1) (undo-tree-id21331 . -1) (undo-tree-id21332 . -1) (undo-tree-id21333 . -1) (undo-tree-id21334 . -1) (undo-tree-id21335 . -1) (undo-tree-id21336 . -1) (undo-tree-id21337 . -1) (undo-tree-id21338 . -1) (undo-tree-id21339 . -1) (undo-tree-id21340 . -1) (undo-tree-id21341 . -1) (undo-tree-id21342 . -1) (undo-tree-id21343 . -1) (undo-tree-id21344 . -1) (undo-tree-id21345 . -1) (undo-tree-id21346 . -1) (undo-tree-id21347 . -1) (undo-tree-id21348 . -1) (undo-tree-id21349 . -1) (undo-tree-id21350 . -1) (undo-tree-id21351 . -1) (undo-tree-id21352 . -1) (undo-tree-id21353 . -1) (undo-tree-id21354 . -1) (undo-tree-id21355 . -1) (undo-tree-id21356 . -1) (undo-tree-id21357 . -1) (undo-tree-id21358 . -1) (undo-tree-id21359 . -1) (undo-tree-id21360 . -1) (undo-tree-id21361 . -1) (undo-tree-id21362 . -1) (undo-tree-id21363 . -1) (undo-tree-id21364 . -1) (undo-tree-id21365 . -1) (undo-tree-id21366 . -1) (undo-tree-id21367 . -1) (undo-tree-id21368 . -1) (undo-tree-id21369 . -1) (undo-tree-id21370 . -1) (undo-tree-id21371 . -1) (undo-tree-id21372 . -1) (undo-tree-id21373 . -1) (undo-tree-id21374 . -1) (undo-tree-id21375 . -1) (undo-tree-id21376 . -1) (undo-tree-id21377 . -1) (undo-tree-id21378 . -1) (undo-tree-id21379 . -1) (undo-tree-id21380 . -1) (undo-tree-id21381 . -1) (undo-tree-id21382 . -1) (undo-tree-id21383 . -1) (undo-tree-id21384 . -1) (undo-tree-id21385 . -1) (undo-tree-id21386 . -1) (undo-tree-id21387 . -1) (undo-tree-id21388 . -1) (undo-tree-id21389 . -1) (undo-tree-id21390 . -1) (undo-tree-id21391 . -1) (undo-tree-id21392 . -1) (undo-tree-id21393 . -1) (undo-tree-id21394 . -1) (undo-tree-id21395 . -1) (undo-tree-id21396 . -1) (undo-tree-id21397 . -1) (undo-tree-id21398 . -1) (undo-tree-id21399 . -1) (undo-tree-id21400 . -1) (undo-tree-id21401 . -1) (undo-tree-id21402 . -1) (undo-tree-id21403 . -1) (undo-tree-id21404 . -1) (undo-tree-id21405 . -1) (undo-tree-id21406 . -1) (undo-tree-id21407 . -1) (undo-tree-id21408 . -1) (undo-tree-id21409 . -1) (undo-tree-id21410 . -1) (undo-tree-id21411 . -1) (undo-tree-id21412 . -1) (undo-tree-id21413 . -1) (undo-tree-id21414 . -1) (undo-tree-id21415 . -1) (undo-tree-id21416 . -1) (undo-tree-id21417 . -1) (undo-tree-id21418 . -1) (undo-tree-id21419 . -1) (undo-tree-id21420 . -1) (undo-tree-id21421 . -1) (undo-tree-id21422 . -1) (undo-tree-id21423 . -1) (undo-tree-id21424 . -1) (undo-tree-id21425 . -1) (undo-tree-id21426 . -1) (undo-tree-id21427 . -1) (undo-tree-id21428 . -1) (undo-tree-id21429 . -1) (undo-tree-id21430 . -1) (undo-tree-id21431 . -1) (undo-tree-id21432 . -1) (undo-tree-id21433 . -1) (undo-tree-id21434 . -1) (undo-tree-id21435 . -1) (undo-tree-id21436 . -1) (undo-tree-id21437 . -1) (undo-tree-id21438 . -1) (undo-tree-id21439 . -1) (undo-tree-id21440 . -1) (undo-tree-id21441 . -1) (undo-tree-id21442 . -1) (undo-tree-id21443 . -1) (undo-tree-id21444 . -1) (undo-tree-id21445 . -1) (undo-tree-id21446 . -1) (undo-tree-id21447 . -1) (undo-tree-id21448 . -1) (undo-tree-id21449 . -1) (undo-tree-id21450 . -1) (undo-tree-id21451 . -1) (undo-tree-id21452 . -1) (undo-tree-id21453 . -1) (undo-tree-id21454 . -1) (undo-tree-id21455 . -1) (undo-tree-id21456 . -1) (undo-tree-id21457 . -1) (undo-tree-id21458 . -1) (undo-tree-id21459 . -1) (undo-tree-id21460 . -1) (undo-tree-id21461 . -1) (undo-tree-id21462 . -1) (undo-tree-id21463 . -1) (undo-tree-id21464 . -1) (undo-tree-id21465 . -1) (undo-tree-id21466 . -1) (undo-tree-id21467 . -1) (undo-tree-id21468 . -1) (undo-tree-id21469 . -1) (undo-tree-id21470 . -1) (undo-tree-id21471 . -1) (undo-tree-id21472 . -1) (undo-tree-id21473 . -1) (undo-tree-id21474 . -1) (undo-tree-id21475 . -1) (undo-tree-id21476 . -1) (#(" " 0 1 (fontified t)) . -4696) (undo-tree-id21477 . -1) (undo-tree-id21478 . -1) (undo-tree-id21479 . -1) (undo-tree-id21480 . -1) (undo-tree-id21481 . -1) (undo-tree-id21482 . -1) (undo-tree-id21483 . -1) (undo-tree-id21484 . -1) (undo-tree-id21485 . -1) (undo-tree-id21486 . -1) (undo-tree-id21487 . -1) (undo-tree-id21488 . -1) (undo-tree-id21489 . -1) (undo-tree-id21490 . -1) (undo-tree-id21491 . -1) (undo-tree-id21492 . -1) (undo-tree-id21493 . -1) (undo-tree-id21494 . -1) (undo-tree-id21495 . -1) (undo-tree-id21496 . -1) (undo-tree-id21497 . -1) (undo-tree-id21498 . -1) (undo-tree-id21499 . -1) (undo-tree-id21500 . -1) (undo-tree-id21501 . -1) (undo-tree-id21502 . -1) (undo-tree-id21503 . -1) (undo-tree-id21504 . -1) (undo-tree-id21505 . -1) (undo-tree-id21506 . -1) (undo-tree-id21507 . -1) (undo-tree-id21508 . -1) (undo-tree-id21509 . -1) (undo-tree-id21510 . -1) (undo-tree-id21511 . -1) (undo-tree-id21512 . -1) (undo-tree-id21513 . -1) (undo-tree-id21514 . -1) (undo-tree-id21515 . -1) (undo-tree-id21516 . -1) (undo-tree-id21517 . -1) (undo-tree-id21518 . -1) (undo-tree-id21519 . -1) (undo-tree-id21520 . -1) (undo-tree-id21521 . -1) (undo-tree-id21522 . -1) (undo-tree-id21523 . -1) (undo-tree-id21524 . -1) (undo-tree-id21525 . -1) (undo-tree-id21526 . -1) (undo-tree-id21527 . -1) (undo-tree-id21528 . -1) (undo-tree-id21529 . -1) (undo-tree-id21530 . -1) (undo-tree-id21531 . -1) (undo-tree-id21532 . -1) (undo-tree-id21533 . -1) (undo-tree-id21534 . -1) (undo-tree-id21535 . -1) (undo-tree-id21536 . -1) (undo-tree-id21537 . -1) (undo-tree-id21538 . -1) (undo-tree-id21539 . -1) (undo-tree-id21540 . -1) (undo-tree-id21541 . -1) (undo-tree-id21542 . -1) (undo-tree-id21543 . -1) (undo-tree-id21544 . -1) (undo-tree-id21545 . -1) (undo-tree-id21546 . -1) (undo-tree-id21547 . -1) (undo-tree-id21548 . -1) (undo-tree-id21549 . -1) (undo-tree-id21550 . -1) (undo-tree-id21551 . -1) (undo-tree-id21552 . -1) (undo-tree-id21553 . -1) (undo-tree-id21554 . -1) (undo-tree-id21555 . -1) (undo-tree-id21556 . -1) (undo-tree-id21557 . -1) (undo-tree-id21558 . -1) (undo-tree-id21559 . -1) (undo-tree-id21560 . -1) (undo-tree-id21561 . -1) (undo-tree-id21562 . -1) (undo-tree-id21563 . -1) (undo-tree-id21564 . -1) (undo-tree-id21565 . -1) (undo-tree-id21566 . -1) (undo-tree-id21567 . -1) (undo-tree-id21568 . -1) (undo-tree-id21569 . -1) (undo-tree-id21570 . -1) (undo-tree-id21571 . -1) (undo-tree-id21572 . -1) (undo-tree-id21573 . -1) (undo-tree-id21574 . -1) (undo-tree-id21575 . -1) (undo-tree-id21576 . -1) (undo-tree-id21577 . -1) (undo-tree-id21578 . -1) (undo-tree-id21579 . -1) (undo-tree-id21580 . -1) (undo-tree-id21581 . -1) (undo-tree-id21582 . -1) (undo-tree-id21583 . -1) (undo-tree-id21584 . -1) (undo-tree-id21585 . -1) (undo-tree-id21586 . -1) (undo-tree-id21587 . -1) (undo-tree-id21588 . -1) (undo-tree-id21589 . -1) (undo-tree-id21590 . -1) (undo-tree-id21591 . -1) (undo-tree-id21592 . -1) (undo-tree-id21593 . -1) (undo-tree-id21594 . -1) (undo-tree-id21595 . -1) (undo-tree-id21596 . -1) (undo-tree-id21597 . -1) (undo-tree-id21598 . -1) (undo-tree-id21599 . -1) (undo-tree-id21600 . -1) (undo-tree-id21601 . -1) (undo-tree-id21602 . -1) (undo-tree-id21603 . -1) (undo-tree-id21604 . -1) (undo-tree-id21605 . -1) (undo-tree-id21606 . -1) (undo-tree-id21607 . -1) (undo-tree-id21608 . -1) (undo-tree-id21609 . -1) (undo-tree-id21610 . -1) (undo-tree-id21611 . -1) (undo-tree-id21612 . -1) (undo-tree-id21613 . -1) (undo-tree-id21614 . -1) (undo-tree-id21615 . -1) (undo-tree-id21616 . -1) (undo-tree-id21617 . -1) (undo-tree-id21618 . -1) (undo-tree-id21619 . -1) (undo-tree-id21620 . -1) (undo-tree-id21621 . -1) (undo-tree-id21622 . -1) (undo-tree-id21623 . -1) (undo-tree-id21624 . -1) (undo-tree-id21625 . -1) (undo-tree-id21626 . -1) (undo-tree-id21627 . -1) (undo-tree-id21628 . -1) (undo-tree-id21629 . -1) (undo-tree-id21630 . -1) (undo-tree-id21631 . -1) (undo-tree-id21632 . -1) (undo-tree-id21633 . -1) (undo-tree-id21634 . -1) (undo-tree-id21635 . -1) (undo-tree-id21636 . -1) (undo-tree-id21637 . -1) (undo-tree-id21638 . -1) (undo-tree-id21639 . -1) (undo-tree-id21640 . -1) (undo-tree-id21641 . -1) (undo-tree-id21642 . -1) (undo-tree-id21643 . -1) (undo-tree-id21644 . -1) (undo-tree-id21645 . -1) (undo-tree-id21646 . -1) (undo-tree-id21647 . -1) (undo-tree-id21648 . -1) (undo-tree-id21649 . -1) (undo-tree-id21650 . -1) (undo-tree-id21651 . -1) (undo-tree-id21652 . -1) (undo-tree-id21653 . -1) (undo-tree-id21654 . -1) (undo-tree-id21655 . -1) (undo-tree-id21656 . -1) (undo-tree-id21657 . -1) (undo-tree-id21658 . -1) (undo-tree-id21659 . -1) (undo-tree-id21660 . -1) (undo-tree-id21661 . -1) (undo-tree-id21662 . -1) (undo-tree-id21663 . -1) (undo-tree-id21664 . -1) (undo-tree-id21665 . -1) (undo-tree-id21666 . -1) (undo-tree-id21667 . -1) (undo-tree-id21668 . -1) (undo-tree-id21669 . -1) (undo-tree-id21670 . -1) (undo-tree-id21671 . -1) (undo-tree-id21672 . -1) (undo-tree-id21673 . -1) (undo-tree-id21674 . -1) (undo-tree-id21675 . -1) (undo-tree-id21676 . -1) (undo-tree-id21677 . -1) (undo-tree-id21678 . -1) (undo-tree-id21679 . -1) (undo-tree-id21680 . -1) (undo-tree-id21681 . -1) (undo-tree-id21682 . -1) (undo-tree-id21683 . -1) (undo-tree-id21684 . -1) (undo-tree-id21685 . -1) (undo-tree-id21686 . -1) (undo-tree-id21687 . -1) (undo-tree-id21688 . -1) (undo-tree-id21689 . -1) (undo-tree-id21690 . -1) (undo-tree-id21691 . -1) (undo-tree-id21692 . -1) (undo-tree-id21693 . -1) (undo-tree-id21694 . -1) (undo-tree-id21695 . -1) (undo-tree-id21696 . -1) (undo-tree-id21697 . -1) (undo-tree-id21698 . -1) (undo-tree-id21699 . -1) (undo-tree-id21700 . -1) (undo-tree-id21701 . -1) (undo-tree-id21702 . -1) (undo-tree-id21703 . -1) (undo-tree-id21704 . -1) (undo-tree-id21705 . -1) (undo-tree-id21706 . -1) (undo-tree-id21707 . -1) (undo-tree-id21708 . -1) (undo-tree-id21709 . -1) (undo-tree-id21710 . -1) (undo-tree-id21711 . -1) (undo-tree-id21712 . -1) (undo-tree-id21713 . -1) (undo-tree-id21714 . -1) (undo-tree-id21715 . -1) (undo-tree-id21716 . -1) (undo-tree-id21717 . -1) (undo-tree-id21718 . -1) (undo-tree-id21719 . -1) (undo-tree-id21720 . -1) (undo-tree-id21721 . -1) (undo-tree-id21722 . -1) (undo-tree-id21723 . -1) (undo-tree-id21724 . -1) (undo-tree-id21725 . -1) (undo-tree-id21726 . -1) (undo-tree-id21727 . -1) (undo-tree-id21728 . -1) (undo-tree-id21729 . -1) (undo-tree-id21730 . -1) (undo-tree-id21731 . -1) (undo-tree-id21732 . -1) (undo-tree-id21733 . -1) (undo-tree-id21734 . -1) (undo-tree-id21735 . -1) (undo-tree-id21736 . -1) (undo-tree-id21737 . -1) (undo-tree-id21738 . -1) (undo-tree-id21739 . -1) (undo-tree-id21740 . -1) (undo-tree-id21741 . -1) (undo-tree-id21742 . -1) (undo-tree-id21743 . -1) (undo-tree-id21744 . -1) (undo-tree-id21745 . -1) (undo-tree-id21746 . -1) (undo-tree-id21747 . -1) (undo-tree-id21748 . -1) (undo-tree-id21749 . -1) (undo-tree-id21750 . -1) (undo-tree-id21751 . -1) (undo-tree-id21752 . -1) (undo-tree-id21753 . -1) (undo-tree-id21754 . -1) (undo-tree-id21755 . -1) (undo-tree-id21756 . -1) (undo-tree-id21757 . -1) (undo-tree-id21758 . -1) (undo-tree-id21759 . -1) (undo-tree-id21760 . -1) (undo-tree-id21761 . -1) (undo-tree-id21762 . -1) (undo-tree-id21763 . -1) (undo-tree-id21764 . -1) (undo-tree-id21765 . -1) (undo-tree-id21766 . -1) (undo-tree-id21767 . -1) (undo-tree-id21768 . -1) (undo-tree-id21769 . -1) (undo-tree-id21770 . -1) (undo-tree-id21771 . -1) (undo-tree-id21772 . -1) (undo-tree-id21773 . -1) (undo-tree-id21774 . -1) (undo-tree-id21775 . -1) (undo-tree-id21776 . -1) (undo-tree-id21777 . -1) (undo-tree-id21778 . -1) (undo-tree-id21779 . -1) (undo-tree-id21780 . -1) (undo-tree-id21781 . -1) (undo-tree-id21782 . -1) (undo-tree-id21783 . -1) (undo-tree-id21784 . -1) (undo-tree-id21785 . -1) (undo-tree-id21786 . -1) (undo-tree-id21787 . -1) (undo-tree-id21788 . -1) (undo-tree-id21789 . -1) (undo-tree-id21790 . -1) (undo-tree-id21791 . -1) (undo-tree-id21792 . -1) (undo-tree-id21793 . -1) (undo-tree-id21794 . -1) (undo-tree-id21795 . -1) (undo-tree-id21796 . -1) (undo-tree-id21797 . -1) (undo-tree-id21798 . -1) (undo-tree-id21799 . -1) (undo-tree-id21800 . -1) (undo-tree-id21801 . -1) (undo-tree-id21802 . -1) (undo-tree-id21803 . -1) (undo-tree-id21804 . -1) (undo-tree-id21805 . -1) (undo-tree-id21806 . -1) (undo-tree-id21807 . -1) (undo-tree-id21808 . -1) (undo-tree-id21809 . -1) (undo-tree-id21810 . -1) (undo-tree-id21811 . -1) (undo-tree-id21812 . -1) (undo-tree-id21813 . -1) (undo-tree-id21814 . -1) (undo-tree-id21815 . -1) (undo-tree-id21816 . -1) (undo-tree-id21817 . -1) (undo-tree-id21818 . -1) (undo-tree-id21819 . -1) (undo-tree-id21820 . -1) (undo-tree-id21821 . -1) (undo-tree-id21822 . -1) (undo-tree-id21823 . -1) (undo-tree-id21824 . -1) (undo-tree-id21825 . -1) (undo-tree-id21826 . -1) (undo-tree-id21827 . -1) (undo-tree-id21828 . -1) (undo-tree-id21829 . -1) (undo-tree-id21830 . -1) (undo-tree-id21831 . -1) (undo-tree-id21832 . -1) (undo-tree-id21833 . -1) (undo-tree-id21834 . -1) (undo-tree-id21835 . -1) (undo-tree-id21836 . -1) (undo-tree-id21837 . -1) (undo-tree-id21838 . -1) (undo-tree-id21839 . -1) (undo-tree-id21840 . -1) (undo-tree-id21841 . -1) (#(" " 0 1 (fontified t)) . -4697) (undo-tree-id21842 . -1) (undo-tree-id21843 . -1) (undo-tree-id21844 . -1) (undo-tree-id21845 . -1) (undo-tree-id21846 . -1) (undo-tree-id21847 . -1) (undo-tree-id21848 . -1) (undo-tree-id21849 . -1) (undo-tree-id21850 . -1) (undo-tree-id21851 . -1) (undo-tree-id21852 . -1) (undo-tree-id21853 . -1) (undo-tree-id21854 . -1) (undo-tree-id21855 . -1) (undo-tree-id21856 . -1) (undo-tree-id21857 . -1) (undo-tree-id21858 . -1) (undo-tree-id21859 . -1) (undo-tree-id21860 . -1) (undo-tree-id21861 . -1) (undo-tree-id21862 . -1) (undo-tree-id21863 . -1) (undo-tree-id21864 . -1) (undo-tree-id21865 . -1) (undo-tree-id21866 . -1) (undo-tree-id21867 . -1) (undo-tree-id21868 . -1) (undo-tree-id21869 . -1) (undo-tree-id21870 . -1) (undo-tree-id21871 . -1) (undo-tree-id21872 . -1) (undo-tree-id21873 . -1) (undo-tree-id21874 . -1) (undo-tree-id21875 . -1) (undo-tree-id21876 . -1) (undo-tree-id21877 . -1) (undo-tree-id21878 . -1) (undo-tree-id21879 . -1) (undo-tree-id21880 . -1) (undo-tree-id21881 . -1) (undo-tree-id21882 . -1) (undo-tree-id21883 . -1) (undo-tree-id21884 . -1) (undo-tree-id21885 . -1) (undo-tree-id21886 . -1) (undo-tree-id21887 . -1) (undo-tree-id21888 . -1) (undo-tree-id21889 . -1) (undo-tree-id21890 . -1) (undo-tree-id21891 . -1) (undo-tree-id21892 . -1) (undo-tree-id21893 . -1) (undo-tree-id21894 . -1) (undo-tree-id21895 . -1) (undo-tree-id21896 . -1) (undo-tree-id21897 . -1) (undo-tree-id21898 . -1) (undo-tree-id21899 . -1) (undo-tree-id21900 . -1) (undo-tree-id21901 . -1) (undo-tree-id21902 . -1) (undo-tree-id21903 . -1) (undo-tree-id21904 . -1) (undo-tree-id21905 . -1) (undo-tree-id21906 . -1) (undo-tree-id21907 . -1) (undo-tree-id21908 . -1) (undo-tree-id21909 . -1) (undo-tree-id21910 . -1) (undo-tree-id21911 . -1) (undo-tree-id21912 . -1) (undo-tree-id21913 . -1) (undo-tree-id21914 . -1) (undo-tree-id21915 . -1) (undo-tree-id21916 . -1) (undo-tree-id21917 . -1) (undo-tree-id21918 . -1) (undo-tree-id21919 . -1) (undo-tree-id21920 . -1) (undo-tree-id21921 . -1) (undo-tree-id21922 . -1) (undo-tree-id21923 . -1) (undo-tree-id21924 . -1) (undo-tree-id21925 . -1) (undo-tree-id21926 . -1) (undo-tree-id21927 . -1) (undo-tree-id21928 . -1) (undo-tree-id21929 . -1) (undo-tree-id21930 . -1) (undo-tree-id21931 . -1) (undo-tree-id21932 . -1) (undo-tree-id21933 . -1) (undo-tree-id21934 . -1) (undo-tree-id21935 . -1) (undo-tree-id21936 . -1) (undo-tree-id21937 . -1) (undo-tree-id21938 . -1) (undo-tree-id21939 . -1) (undo-tree-id21940 . -1) (undo-tree-id21941 . -1) (undo-tree-id21942 . -1) (undo-tree-id21943 . -1) (undo-tree-id21944 . -1) (undo-tree-id21945 . -1) (undo-tree-id21946 . -1) (undo-tree-id21947 . -1) (undo-tree-id21948 . -1) (undo-tree-id21949 . -1) (undo-tree-id21950 . -1) (undo-tree-id21951 . -1) (undo-tree-id21952 . -1) (undo-tree-id21953 . -1) (undo-tree-id21954 . -1) (undo-tree-id21955 . -1) (undo-tree-id21956 . -1) (undo-tree-id21957 . -1) (undo-tree-id21958 . -1) (undo-tree-id21959 . -1) (undo-tree-id21960 . -1) (undo-tree-id21961 . -1) (undo-tree-id21962 . -1) (undo-tree-id21963 . -1) (undo-tree-id21964 . -1) (undo-tree-id21965 . -1) (undo-tree-id21966 . -1) (undo-tree-id21967 . -1) (undo-tree-id21968 . -1) (undo-tree-id21969 . -1) (undo-tree-id21970 . -1) (undo-tree-id21971 . -1) (undo-tree-id21972 . -1) (undo-tree-id21973 . -1) (undo-tree-id21974 . -1) (undo-tree-id21975 . -1) (undo-tree-id21976 . -1) (undo-tree-id21977 . -1) (undo-tree-id21978 . -1) (undo-tree-id21979 . -1) (undo-tree-id21980 . -1) (undo-tree-id21981 . -1) (undo-tree-id21982 . -1) (undo-tree-id21983 . -1) (undo-tree-id21984 . -1) (undo-tree-id21985 . -1) (undo-tree-id21986 . -1) (undo-tree-id21987 . -1) (undo-tree-id21988 . -1) (undo-tree-id21989 . -1) (undo-tree-id21990 . -1) (undo-tree-id21991 . -1) (undo-tree-id21992 . -1) (undo-tree-id21993 . -1) (undo-tree-id21994 . -1) (undo-tree-id21995 . -1) (undo-tree-id21996 . -1) (undo-tree-id21997 . -1) (undo-tree-id21998 . -1) (undo-tree-id21999 . -1) (undo-tree-id22000 . -1) (undo-tree-id22001 . -1) (undo-tree-id22002 . -1) (undo-tree-id22003 . -1) (undo-tree-id22004 . -1) (undo-tree-id22005 . -1) (undo-tree-id22006 . -1) (undo-tree-id22007 . -1) (undo-tree-id22008 . -1) (undo-tree-id22009 . -1) (undo-tree-id22010 . -1) (undo-tree-id22011 . -1) (undo-tree-id22012 . -1) (undo-tree-id22013 . -1) (undo-tree-id22014 . -1) (undo-tree-id22015 . -1) (undo-tree-id22016 . -1) (undo-tree-id22017 . -1) (undo-tree-id22018 . -1) (undo-tree-id22019 . -1) (undo-tree-id22020 . -1) (undo-tree-id22021 . -1) (undo-tree-id22022 . -1) (undo-tree-id22023 . -1) (undo-tree-id22024 . -1) (undo-tree-id22025 . -1) (undo-tree-id22026 . -1) (undo-tree-id22027 . -1) (undo-tree-id22028 . -1) (undo-tree-id22029 . -1) (undo-tree-id22030 . -1) (undo-tree-id22031 . -1) (undo-tree-id22032 . -1) (undo-tree-id22033 . -1) (undo-tree-id22034 . -1) (undo-tree-id22035 . -1) (undo-tree-id22036 . -1) (undo-tree-id22037 . -1) (undo-tree-id22038 . -1) (undo-tree-id22039 . -1) (undo-tree-id22040 . -1) (undo-tree-id22041 . -1) (undo-tree-id22042 . -1) (undo-tree-id22043 . -1) (undo-tree-id22044 . -1) (undo-tree-id22045 . -1) (undo-tree-id22046 . -1) (undo-tree-id22047 . -1) (undo-tree-id22048 . -1) (undo-tree-id22049 . -1) (undo-tree-id22050 . -1) (undo-tree-id22051 . -1) (undo-tree-id22052 . -1) (undo-tree-id22053 . -1) (undo-tree-id22054 . -1) (undo-tree-id22055 . -1) (undo-tree-id22056 . -1) (undo-tree-id22057 . -1) (undo-tree-id22058 . -1) (undo-tree-id22059 . -1) (undo-tree-id22060 . -1) (undo-tree-id22061 . -1) (undo-tree-id22062 . -1) (undo-tree-id22063 . -1) (undo-tree-id22064 . -1) (undo-tree-id22065 . -1) (undo-tree-id22066 . -1) (undo-tree-id22067 . -1) (undo-tree-id22068 . -1) (undo-tree-id22069 . -1) (undo-tree-id22070 . -1) (undo-tree-id22071 . -1) (undo-tree-id22072 . -1) (undo-tree-id22073 . -1) (undo-tree-id22074 . -1) (undo-tree-id22075 . -1) (undo-tree-id22076 . -1) (undo-tree-id22077 . -1) (undo-tree-id22078 . -1) (undo-tree-id22079 . -1) (undo-tree-id22080 . -1) (undo-tree-id22081 . -1) (undo-tree-id22082 . -1) (undo-tree-id22083 . -1) (undo-tree-id22084 . -1) (undo-tree-id22085 . -1) (undo-tree-id22086 . -1) (undo-tree-id22087 . -1) (undo-tree-id22088 . -1) (undo-tree-id22089 . -1) (undo-tree-id22090 . -1) (undo-tree-id22091 . -1) (undo-tree-id22092 . -1) (undo-tree-id22093 . -1) (undo-tree-id22094 . -1) (undo-tree-id22095 . -1) (undo-tree-id22096 . -1) (undo-tree-id22097 . -1) (undo-tree-id22098 . -1) (undo-tree-id22099 . -1) (undo-tree-id22100 . -1) (undo-tree-id22101 . -1) (undo-tree-id22102 . -1) (undo-tree-id22103 . -1) (undo-tree-id22104 . -1) (undo-tree-id22105 . -1) (undo-tree-id22106 . -1) (undo-tree-id22107 . -1) (undo-tree-id22108 . -1) (undo-tree-id22109 . -1) (undo-tree-id22110 . -1) (undo-tree-id22111 . -1) (undo-tree-id22112 . -1) (undo-tree-id22113 . -1) (undo-tree-id22114 . -1) (undo-tree-id22115 . -1) (undo-tree-id22116 . -1) (undo-tree-id22117 . -1) (undo-tree-id22118 . -1) (undo-tree-id22119 . -1) (undo-tree-id22120 . -1) (undo-tree-id22121 . -1) (undo-tree-id22122 . -1) (undo-tree-id22123 . -1) (undo-tree-id22124 . -1) (undo-tree-id22125 . -1) (undo-tree-id22126 . -1) (undo-tree-id22127 . -1) (undo-tree-id22128 . -1) (undo-tree-id22129 . -1) (undo-tree-id22130 . -1) (undo-tree-id22131 . -1) (undo-tree-id22132 . -1) (undo-tree-id22133 . -1) (undo-tree-id22134 . -1) (undo-tree-id22135 . -1) (undo-tree-id22136 . -1) (undo-tree-id22137 . -1) (undo-tree-id22138 . -1) (undo-tree-id22139 . -1) (undo-tree-id22140 . -1) (undo-tree-id22141 . -1) (undo-tree-id22142 . -1) (undo-tree-id22143 . -1) (undo-tree-id22144 . -1) (undo-tree-id22145 . -1) (undo-tree-id22146 . -1) (undo-tree-id22147 . -1) (undo-tree-id22148 . -1) (undo-tree-id22149 . -1) (undo-tree-id22150 . -1) (undo-tree-id22151 . -1) (undo-tree-id22152 . -1) (undo-tree-id22153 . -1) (undo-tree-id22154 . -1) (undo-tree-id22155 . -1) (undo-tree-id22156 . -1) (undo-tree-id22157 . -1) (undo-tree-id22158 . -1) (undo-tree-id22159 . -1) (undo-tree-id22160 . -1) (undo-tree-id22161 . -1) (undo-tree-id22162 . -1) (undo-tree-id22163 . -1) (undo-tree-id22164 . -1) (undo-tree-id22165 . -1) (undo-tree-id22166 . -1) (undo-tree-id22167 . -1) (undo-tree-id22168 . -1) (undo-tree-id22169 . -1) (undo-tree-id22170 . -1) (undo-tree-id22171 . -1) (undo-tree-id22172 . -1) (undo-tree-id22173 . -1) (undo-tree-id22174 . -1) (undo-tree-id22175 . -1) (undo-tree-id22176 . -1) (undo-tree-id22177 . -1) (undo-tree-id22178 . -1) (undo-tree-id22179 . -1) (undo-tree-id22180 . -1) (undo-tree-id22181 . -1) (undo-tree-id22182 . -1) (#(" " 0 1 (fontified t)) . -4698) (undo-tree-id22183 . -1) (undo-tree-id22184 . -1) (undo-tree-id22185 . -1) (undo-tree-id22186 . -1) (undo-tree-id22187 . -1) (undo-tree-id22188 . -1) (undo-tree-id22189 . -1) (undo-tree-id22190 . -1) (undo-tree-id22191 . -1) (undo-tree-id22192 . -1) (undo-tree-id22193 . -1) (undo-tree-id22194 . -1) (undo-tree-id22195 . -1) (undo-tree-id22196 . -1) (undo-tree-id22197 . -1) (undo-tree-id22198 . -1) (undo-tree-id22199 . -1) (undo-tree-id22200 . -1) (undo-tree-id22201 . -1) (undo-tree-id22202 . -1) (undo-tree-id22203 . -1) (undo-tree-id22204 . -1) (undo-tree-id22205 . -1) (undo-tree-id22206 . -1) (undo-tree-id22207 . -1) (undo-tree-id22208 . -1) (undo-tree-id22209 . -1) (undo-tree-id22210 . -1) (undo-tree-id22211 . -1) (undo-tree-id22212 . -1) (undo-tree-id22213 . -1) (undo-tree-id22214 . -1) (undo-tree-id22215 . -1) (undo-tree-id22216 . -1) (undo-tree-id22217 . -1) (undo-tree-id22218 . -1) (undo-tree-id22219 . -1) (undo-tree-id22220 . -1) (undo-tree-id22221 . -1) (undo-tree-id22222 . -1) (undo-tree-id22223 . -1) (undo-tree-id22224 . -1) (undo-tree-id22225 . -1) (undo-tree-id22226 . -1) (undo-tree-id22227 . -1) (undo-tree-id22228 . -1) (undo-tree-id22229 . -1) (undo-tree-id22230 . -1) (undo-tree-id22231 . -1) (undo-tree-id22232 . -1) (undo-tree-id22233 . -1) (undo-tree-id22234 . -1) (undo-tree-id22235 . -1) (undo-tree-id22236 . -1) (undo-tree-id22237 . -1) (undo-tree-id22238 . -1) (undo-tree-id22239 . -1) (undo-tree-id22240 . -1) (undo-tree-id22241 . -1) (undo-tree-id22242 . -1) (undo-tree-id22243 . -1) (undo-tree-id22244 . -1) (undo-tree-id22245 . -1) (undo-tree-id22246 . -1) (undo-tree-id22247 . -1) (undo-tree-id22248 . -1) (undo-tree-id22249 . -1) (undo-tree-id22250 . -1) (undo-tree-id22251 . -1) (undo-tree-id22252 . -1) (undo-tree-id22253 . -1) (undo-tree-id22254 . -1) (undo-tree-id22255 . -1) (undo-tree-id22256 . -1) (undo-tree-id22257 . -1) (undo-tree-id22258 . -1) (undo-tree-id22259 . -1) (undo-tree-id22260 . -1) (undo-tree-id22261 . -1) (undo-tree-id22262 . -1) (undo-tree-id22263 . -1) (undo-tree-id22264 . -1) (undo-tree-id22265 . -1) (undo-tree-id22266 . -1) (undo-tree-id22267 . -1) (undo-tree-id22268 . -1) (undo-tree-id22269 . -1) (undo-tree-id22270 . -1) (undo-tree-id22271 . -1) (undo-tree-id22272 . -1) (undo-tree-id22273 . -1) (undo-tree-id22274 . -1) (undo-tree-id22275 . -1) (undo-tree-id22276 . -1) (undo-tree-id22277 . -1) (undo-tree-id22278 . -1) (undo-tree-id22279 . -1) (undo-tree-id22280 . -1) (undo-tree-id22281 . -1) (undo-tree-id22282 . -1) (undo-tree-id22283 . -1) (undo-tree-id22284 . -1) (undo-tree-id22285 . -1) (undo-tree-id22286 . -1) (undo-tree-id22287 . -1) (undo-tree-id22288 . -1) (undo-tree-id22289 . -1) (undo-tree-id22290 . -1) (undo-tree-id22291 . -1) (undo-tree-id22292 . -1) (undo-tree-id22293 . -1) (undo-tree-id22294 . -1) (undo-tree-id22295 . -1) (undo-tree-id22296 . -1) (undo-tree-id22297 . -1) (undo-tree-id22298 . -1) (undo-tree-id22299 . -1) (undo-tree-id22300 . -1) (undo-tree-id22301 . -1) (undo-tree-id22302 . -1) (undo-tree-id22303 . -1) (undo-tree-id22304 . -1) (undo-tree-id22305 . -1) (undo-tree-id22306 . -1) (undo-tree-id22307 . -1) (undo-tree-id22308 . -1) (undo-tree-id22309 . -1) (undo-tree-id22310 . -1) (undo-tree-id22311 . -1) (undo-tree-id22312 . -1) (undo-tree-id22313 . -1) (undo-tree-id22314 . -1) (undo-tree-id22315 . -1) (undo-tree-id22316 . -1) (undo-tree-id22317 . -1) (undo-tree-id22318 . -1) (undo-tree-id22319 . -1) (undo-tree-id22320 . -1) (undo-tree-id22321 . -1) (undo-tree-id22322 . -1) (undo-tree-id22323 . -1) (undo-tree-id22324 . -1) (undo-tree-id22325 . -1) (undo-tree-id22326 . -1) (undo-tree-id22327 . -1) (undo-tree-id22328 . -1) (undo-tree-id22329 . -1) (undo-tree-id22330 . -1) (undo-tree-id22331 . -1) (undo-tree-id22332 . -1) (undo-tree-id22333 . -1) (undo-tree-id22334 . -1) (undo-tree-id22335 . -1) (undo-tree-id22336 . -1) (undo-tree-id22337 . -1) (undo-tree-id22338 . -1) (undo-tree-id22339 . -1) (undo-tree-id22340 . -1) (undo-tree-id22341 . -1) (undo-tree-id22342 . -1) (undo-tree-id22343 . -1) (undo-tree-id22344 . -1) (undo-tree-id22345 . -1) (undo-tree-id22346 . -1) (undo-tree-id22347 . -1) (undo-tree-id22348 . -1) (undo-tree-id22349 . -1) (undo-tree-id22350 . -1) (undo-tree-id22351 . -1) (undo-tree-id22352 . -1) (undo-tree-id22353 . -1) (undo-tree-id22354 . -1) (undo-tree-id22355 . -1) (undo-tree-id22356 . -1) (undo-tree-id22357 . -1) (undo-tree-id22358 . -1) (undo-tree-id22359 . -1) (undo-tree-id22360 . -1) (undo-tree-id22361 . -1) (undo-tree-id22362 . -1) (undo-tree-id22363 . -1) (undo-tree-id22364 . -1) (undo-tree-id22365 . -1) (undo-tree-id22366 . -1) (undo-tree-id22367 . -1) (undo-tree-id22368 . -1) (undo-tree-id22369 . -1) (undo-tree-id22370 . -1) (undo-tree-id22371 . -1) (undo-tree-id22372 . -1) (undo-tree-id22373 . -1) (undo-tree-id22374 . -1) (undo-tree-id22375 . -1) (undo-tree-id22376 . -1) (undo-tree-id22377 . -1) (undo-tree-id22378 . -1) (undo-tree-id22379 . -1) (undo-tree-id22380 . -1) (undo-tree-id22381 . -1) (undo-tree-id22382 . -1) (undo-tree-id22383 . -1) (undo-tree-id22384 . -1) (undo-tree-id22385 . -1) (undo-tree-id22386 . -1) (undo-tree-id22387 . -1) (undo-tree-id22388 . -1) (undo-tree-id22389 . -1) (undo-tree-id22390 . -1) (undo-tree-id22391 . -1) (undo-tree-id22392 . -1) (undo-tree-id22393 . -1) (undo-tree-id22394 . -1) (undo-tree-id22395 . -1) (undo-tree-id22396 . -1) (undo-tree-id22397 . -1) (undo-tree-id22398 . -1) (undo-tree-id22399 . -1) (undo-tree-id22400 . -1) (undo-tree-id22401 . -1) (undo-tree-id22402 . -1) (undo-tree-id22403 . -1) (undo-tree-id22404 . -1) (undo-tree-id22405 . -1) (undo-tree-id22406 . -1) (undo-tree-id22407 . -1) (undo-tree-id22408 . -1) (undo-tree-id22409 . -1) (undo-tree-id22410 . -1) (undo-tree-id22411 . -1) (undo-tree-id22412 . -1) (undo-tree-id22413 . -1) (undo-tree-id22414 . -1) (undo-tree-id22415 . -1) (undo-tree-id22416 . -1) (undo-tree-id22417 . -1) (undo-tree-id22418 . -1) (undo-tree-id22419 . -1) (undo-tree-id22420 . -1) (undo-tree-id22421 . -1) (undo-tree-id22422 . -1) (undo-tree-id22423 . -1) (undo-tree-id22424 . -1) (undo-tree-id22425 . -1) (undo-tree-id22426 . -1) (undo-tree-id22427 . -1) (undo-tree-id22428 . -1) (undo-tree-id22429 . -1) (undo-tree-id22430 . -1) (undo-tree-id22431 . -1) (undo-tree-id22432 . -1) (undo-tree-id22433 . -1) (undo-tree-id22434 . -1) (undo-tree-id22435 . -1) (undo-tree-id22436 . -1) (undo-tree-id22437 . -1) (undo-tree-id22438 . -1) (undo-tree-id22439 . -1) (undo-tree-id22440 . -1) (undo-tree-id22441 . -1) (undo-tree-id22442 . -1) (undo-tree-id22443 . -1) (undo-tree-id22444 . -1) (undo-tree-id22445 . -1) (undo-tree-id22446 . -1) (undo-tree-id22447 . -1) (undo-tree-id22448 . -1) (undo-tree-id22449 . -1) (undo-tree-id22450 . -1) (undo-tree-id22451 . -1) (undo-tree-id22452 . -1) (undo-tree-id22453 . -1) (undo-tree-id22454 . -1) (undo-tree-id22455 . -1) (undo-tree-id22456 . -1) (undo-tree-id22457 . -1) (undo-tree-id22458 . -1) (undo-tree-id22459 . -1) (undo-tree-id22460 . -1) (undo-tree-id22461 . -1) (undo-tree-id22462 . -1) (undo-tree-id22463 . -1) (undo-tree-id22464 . -1) (undo-tree-id22465 . -1) (undo-tree-id22466 . -1) (undo-tree-id22467 . -1) (undo-tree-id22468 . -1) (undo-tree-id22469 . -1) (undo-tree-id22470 . -1) (undo-tree-id22471 . -1) (undo-tree-id22472 . -1) (undo-tree-id22473 . -1) (undo-tree-id22474 . -1) (undo-tree-id22475 . -1) (undo-tree-id22476 . -1) (undo-tree-id22477 . -1) (undo-tree-id22478 . -1) (undo-tree-id22479 . -1) (undo-tree-id22480 . -1) (undo-tree-id22481 . -1) (undo-tree-id22482 . -1) (undo-tree-id22483 . -1) (undo-tree-id22484 . -1) (undo-tree-id22485 . -1) (undo-tree-id22486 . -1) (undo-tree-id22487 . -1) (undo-tree-id22488 . -1) (undo-tree-id22489 . -1) (undo-tree-id22490 . -1) (undo-tree-id22491 . -1) (undo-tree-id22492 . -1) (undo-tree-id22493 . -1) (undo-tree-id22494 . -1) (undo-tree-id22495 . -1) (undo-tree-id22496 . -1) (undo-tree-id22497 . -1) (undo-tree-id22498 . -1) (undo-tree-id22499 . -1) (#(" " 0 1 (fontified t)) . -4699) (undo-tree-id22500 . -1) (undo-tree-id22501 . -1) (undo-tree-id22502 . -1) (undo-tree-id22503 . -1) (undo-tree-id22504 . -1) (undo-tree-id22505 . -1) (undo-tree-id22506 . -1) (undo-tree-id22507 . -1) (undo-tree-id22508 . -1) (undo-tree-id22509 . -1) (undo-tree-id22510 . -1) (undo-tree-id22511 . -1) (undo-tree-id22512 . -1) (undo-tree-id22513 . -1) (undo-tree-id22514 . -1) (undo-tree-id22515 . -1) (undo-tree-id22516 . -1) (undo-tree-id22517 . -1) (undo-tree-id22518 . -1) (undo-tree-id22519 . -1) (undo-tree-id22520 . -1) (undo-tree-id22521 . -1) (undo-tree-id22522 . -1) (undo-tree-id22523 . -1) (undo-tree-id22524 . -1) (undo-tree-id22525 . -1) (undo-tree-id22526 . -1) (undo-tree-id22527 . -1) (undo-tree-id22528 . -1) (undo-tree-id22529 . -1) (undo-tree-id22530 . -1) (undo-tree-id22531 . -1) (undo-tree-id22532 . -1) (undo-tree-id22533 . -1) (undo-tree-id22534 . -1) (undo-tree-id22535 . -1) (undo-tree-id22536 . -1) (undo-tree-id22537 . -1) (undo-tree-id22538 . -1) (undo-tree-id22539 . -1) (undo-tree-id22540 . -1) (undo-tree-id22541 . -1) (undo-tree-id22542 . -1) (undo-tree-id22543 . -1) (undo-tree-id22544 . -1) (undo-tree-id22545 . -1) (undo-tree-id22546 . -1) (undo-tree-id22547 . -1) (undo-tree-id22548 . -1) (undo-tree-id22549 . -1) (undo-tree-id22550 . -1) (undo-tree-id22551 . -1) (undo-tree-id22552 . -1) (undo-tree-id22553 . -1) (undo-tree-id22554 . -1) (undo-tree-id22555 . -1) (undo-tree-id22556 . -1) (undo-tree-id22557 . -1) (undo-tree-id22558 . -1) (undo-tree-id22559 . -1) (undo-tree-id22560 . -1) (undo-tree-id22561 . -1) (undo-tree-id22562 . -1) (undo-tree-id22563 . -1) (undo-tree-id22564 . -1) (undo-tree-id22565 . -1) (undo-tree-id22566 . -1) (undo-tree-id22567 . -1) (undo-tree-id22568 . -1) (undo-tree-id22569 . -1) (undo-tree-id22570 . -1) (undo-tree-id22571 . -1) (undo-tree-id22572 . -1) (undo-tree-id22573 . -1) (undo-tree-id22574 . -1) (undo-tree-id22575 . -1) (undo-tree-id22576 . -1) (undo-tree-id22577 . -1) (undo-tree-id22578 . -1) (undo-tree-id22579 . -1) (undo-tree-id22580 . -1) (undo-tree-id22581 . -1) (undo-tree-id22582 . -1) (undo-tree-id22583 . -1) (undo-tree-id22584 . -1) (undo-tree-id22585 . -1) (undo-tree-id22586 . -1) (undo-tree-id22587 . -1) (undo-tree-id22588 . -1) (undo-tree-id22589 . -1) (undo-tree-id22590 . -1) (undo-tree-id22591 . -1) (undo-tree-id22592 . -1) (undo-tree-id22593 . -1) (undo-tree-id22594 . -1) (undo-tree-id22595 . -1) (undo-tree-id22596 . -1) (undo-tree-id22597 . -1) (undo-tree-id22598 . -1) (undo-tree-id22599 . -1) (undo-tree-id22600 . -1) (undo-tree-id22601 . -1) (undo-tree-id22602 . -1) (undo-tree-id22603 . -1) (undo-tree-id22604 . -1) (undo-tree-id22605 . -1) (undo-tree-id22606 . -1) (undo-tree-id22607 . -1) (undo-tree-id22608 . -1) (undo-tree-id22609 . -1) (undo-tree-id22610 . -1) (undo-tree-id22611 . -1) (undo-tree-id22612 . -1) (undo-tree-id22613 . -1) (undo-tree-id22614 . -1) (undo-tree-id22615 . -1) (undo-tree-id22616 . -1) (undo-tree-id22617 . -1) (undo-tree-id22618 . -1) (undo-tree-id22619 . -1) (undo-tree-id22620 . -1) (undo-tree-id22621 . -1) (undo-tree-id22622 . -1) (undo-tree-id22623 . -1) (undo-tree-id22624 . -1) (undo-tree-id22625 . -1) (undo-tree-id22626 . -1) (undo-tree-id22627 . -1) (undo-tree-id22628 . -1) (undo-tree-id22629 . -1) (undo-tree-id22630 . -1) (undo-tree-id22631 . -1) (undo-tree-id22632 . -1) (undo-tree-id22633 . -1) (undo-tree-id22634 . -1) (undo-tree-id22635 . -1) (undo-tree-id22636 . -1) (undo-tree-id22637 . -1) (undo-tree-id22638 . -1) (undo-tree-id22639 . -1) (undo-tree-id22640 . -1) (undo-tree-id22641 . -1) (undo-tree-id22642 . -1) (undo-tree-id22643 . -1) (undo-tree-id22644 . -1) (undo-tree-id22645 . -1) (undo-tree-id22646 . -1) (undo-tree-id22647 . -1) (undo-tree-id22648 . -1) (undo-tree-id22649 . -1) (undo-tree-id22650 . -1) (undo-tree-id22651 . -1) (undo-tree-id22652 . -1) (undo-tree-id22653 . -1) (undo-tree-id22654 . -1) (undo-tree-id22655 . -1) (undo-tree-id22656 . -1) (undo-tree-id22657 . -1) (undo-tree-id22658 . -1) (undo-tree-id22659 . -1) (undo-tree-id22660 . -1) (undo-tree-id22661 . -1) (undo-tree-id22662 . -1) (undo-tree-id22663 . -1) (undo-tree-id22664 . -1) (undo-tree-id22665 . -1) (undo-tree-id22666 . -1) (undo-tree-id22667 . -1) (undo-tree-id22668 . -1) (undo-tree-id22669 . -1) (undo-tree-id22670 . -1) (undo-tree-id22671 . -1) (undo-tree-id22672 . -1) (undo-tree-id22673 . -1) (undo-tree-id22674 . -1) (undo-tree-id22675 . -1) (undo-tree-id22676 . -1) (undo-tree-id22677 . -1) (undo-tree-id22678 . -1) (undo-tree-id22679 . -1) (undo-tree-id22680 . -1) (undo-tree-id22681 . -1) (undo-tree-id22682 . -1) (undo-tree-id22683 . -1) (undo-tree-id22684 . -1) (undo-tree-id22685 . -1) (undo-tree-id22686 . -1) (undo-tree-id22687 . -1) (undo-tree-id22688 . -1) (undo-tree-id22689 . -1) (undo-tree-id22690 . -1) (undo-tree-id22691 . -1) (undo-tree-id22692 . -1) (undo-tree-id22693 . -1) (undo-tree-id22694 . -1) (undo-tree-id22695 . -1) (undo-tree-id22696 . -1) (undo-tree-id22697 . -1) (undo-tree-id22698 . -1) (undo-tree-id22699 . -1) (undo-tree-id22700 . -1) (undo-tree-id22701 . -1) (undo-tree-id22702 . -1) (undo-tree-id22703 . -1) (undo-tree-id22704 . -1) (undo-tree-id22705 . -1) (undo-tree-id22706 . -1) (undo-tree-id22707 . -1) (undo-tree-id22708 . -1) (undo-tree-id22709 . -1) (undo-tree-id22710 . -1) (undo-tree-id22711 . -1) (undo-tree-id22712 . -1) (undo-tree-id22713 . -1) (undo-tree-id22714 . -1) (undo-tree-id22715 . -1) (undo-tree-id22716 . -1) (undo-tree-id22717 . -1) (undo-tree-id22718 . -1) (undo-tree-id22719 . -1) (undo-tree-id22720 . -1) (undo-tree-id22721 . -1) (undo-tree-id22722 . -1) (undo-tree-id22723 . -1) (undo-tree-id22724 . -1) (undo-tree-id22725 . -1) (undo-tree-id22726 . -1) (undo-tree-id22727 . -1) (undo-tree-id22728 . -1) (undo-tree-id22729 . -1) (undo-tree-id22730 . -1) (undo-tree-id22731 . -1) (undo-tree-id22732 . -1) (undo-tree-id22733 . -1) (undo-tree-id22734 . -1) (undo-tree-id22735 . -1) (undo-tree-id22736 . -1) (undo-tree-id22737 . -1) (undo-tree-id22738 . -1) (undo-tree-id22739 . -1) (undo-tree-id22740 . -1) (undo-tree-id22741 . -1) (undo-tree-id22742 . -1) (undo-tree-id22743 . -1) (undo-tree-id22744 . -1) (undo-tree-id22745 . -1) (undo-tree-id22746 . -1) (undo-tree-id22747 . -1) (undo-tree-id22748 . -1) (undo-tree-id22749 . -1) (undo-tree-id22750 . -1) (undo-tree-id22751 . -1) (undo-tree-id22752 . -1) (undo-tree-id22753 . -1) (undo-tree-id22754 . -1) (undo-tree-id22755 . -1) (undo-tree-id22756 . -1) (undo-tree-id22757 . -1) (undo-tree-id22758 . -1) (undo-tree-id22759 . -1) (undo-tree-id22760 . -1) (undo-tree-id22761 . -1) (undo-tree-id22762 . -1) (undo-tree-id22763 . -1) (undo-tree-id22764 . -1) (undo-tree-id22765 . -1) (undo-tree-id22766 . -1) (undo-tree-id22767 . -1) (undo-tree-id22768 . -1) (undo-tree-id22769 . -1) (undo-tree-id22770 . -1) (undo-tree-id22771 . -1) (undo-tree-id22772 . -1) (undo-tree-id22773 . -1) (undo-tree-id22774 . -1) (undo-tree-id22775 . -1) (undo-tree-id22776 . -1) (undo-tree-id22777 . -1) (undo-tree-id22778 . -1) (undo-tree-id22779 . -1) (undo-tree-id22780 . -1) (undo-tree-id22781 . -1) (undo-tree-id22782 . -1) (undo-tree-id22783 . -1) (undo-tree-id22784 . -1) (undo-tree-id22785 . -1) (undo-tree-id22786 . -1) (undo-tree-id22787 . -1) (undo-tree-id22788 . -1) (undo-tree-id22789 . -1) (undo-tree-id22790 . -1) (undo-tree-id22791 . -1) (undo-tree-id22792 . -1) (#(" " 0 1 (fontified t)) . -4700) (undo-tree-id22793 . -1) (undo-tree-id22794 . -1) (undo-tree-id22795 . -1) (undo-tree-id22796 . -1) (undo-tree-id22797 . -1) (undo-tree-id22798 . -1) (undo-tree-id22799 . -1) (undo-tree-id22800 . -1) (undo-tree-id22801 . -1) (undo-tree-id22802 . -1) (undo-tree-id22803 . -1) (undo-tree-id22804 . -1) (undo-tree-id22805 . -1) (undo-tree-id22806 . -1) (undo-tree-id22807 . -1) (undo-tree-id22808 . -1) (undo-tree-id22809 . -1) (undo-tree-id22810 . -1) (undo-tree-id22811 . -1) (undo-tree-id22812 . -1) (undo-tree-id22813 . -1) (undo-tree-id22814 . -1) (undo-tree-id22815 . -1) (undo-tree-id22816 . -1) (undo-tree-id22817 . -1) (undo-tree-id22818 . -1) (undo-tree-id22819 . -1) (undo-tree-id22820 . -1) (undo-tree-id22821 . -1) (undo-tree-id22822 . -1) (undo-tree-id22823 . -1) (undo-tree-id22824 . -1) (undo-tree-id22825 . -1) (undo-tree-id22826 . -1) (undo-tree-id22827 . -1) (undo-tree-id22828 . -1) (undo-tree-id22829 . -1) (undo-tree-id22830 . -1) (undo-tree-id22831 . -1) (undo-tree-id22832 . -1) (undo-tree-id22833 . -1) (undo-tree-id22834 . -1) (undo-tree-id22835 . -1) (undo-tree-id22836 . -1) (undo-tree-id22837 . -1) (undo-tree-id22838 . -1) (undo-tree-id22839 . -1) (undo-tree-id22840 . -1) (undo-tree-id22841 . -1) (undo-tree-id22842 . -1) (undo-tree-id22843 . -1) (undo-tree-id22844 . -1) (undo-tree-id22845 . -1) (undo-tree-id22846 . -1) (undo-tree-id22847 . -1) (undo-tree-id22848 . -1) (undo-tree-id22849 . -1) (undo-tree-id22850 . -1) (undo-tree-id22851 . -1) (undo-tree-id22852 . -1) (undo-tree-id22853 . -1) (undo-tree-id22854 . -1) (undo-tree-id22855 . -1) (undo-tree-id22856 . -1) (undo-tree-id22857 . -1) (undo-tree-id22858 . -1) (undo-tree-id22859 . -1) (undo-tree-id22860 . -1) (undo-tree-id22861 . -1) (undo-tree-id22862 . -1) (undo-tree-id22863 . -1) (undo-tree-id22864 . -1) (undo-tree-id22865 . -1) (undo-tree-id22866 . -1) (undo-tree-id22867 . -1) (undo-tree-id22868 . -1) (undo-tree-id22869 . -1) (undo-tree-id22870 . -1) (undo-tree-id22871 . -1) (undo-tree-id22872 . -1) (undo-tree-id22873 . -1) (undo-tree-id22874 . -1) (undo-tree-id22875 . -1) (undo-tree-id22876 . -1) (undo-tree-id22877 . -1) (undo-tree-id22878 . -1) (undo-tree-id22879 . -1) (undo-tree-id22880 . -1) (undo-tree-id22881 . -1) (undo-tree-id22882 . -1) (undo-tree-id22883 . -1) (undo-tree-id22884 . -1) (undo-tree-id22885 . -1) (undo-tree-id22886 . -1) (undo-tree-id22887 . -1) (undo-tree-id22888 . -1) (undo-tree-id22889 . -1) (undo-tree-id22890 . -1) (undo-tree-id22891 . -1) (undo-tree-id22892 . -1) (undo-tree-id22893 . -1) (undo-tree-id22894 . -1) (undo-tree-id22895 . -1) (undo-tree-id22896 . -1) (undo-tree-id22897 . -1) (undo-tree-id22898 . -1) (undo-tree-id22899 . -1) (undo-tree-id22900 . -1) (undo-tree-id22901 . -1) (undo-tree-id22902 . -1) (undo-tree-id22903 . -1) (undo-tree-id22904 . -1) (undo-tree-id22905 . -1) (undo-tree-id22906 . -1) (undo-tree-id22907 . -1) (undo-tree-id22908 . -1) (undo-tree-id22909 . -1) (undo-tree-id22910 . -1) (undo-tree-id22911 . -1) (undo-tree-id22912 . -1) (undo-tree-id22913 . -1) (undo-tree-id22914 . -1) (undo-tree-id22915 . -1) (undo-tree-id22916 . -1) (undo-tree-id22917 . -1) (undo-tree-id22918 . -1) (undo-tree-id22919 . -1) (undo-tree-id22920 . -1) (undo-tree-id22921 . -1) (undo-tree-id22922 . -1) (undo-tree-id22923 . -1) (undo-tree-id22924 . -1) (undo-tree-id22925 . -1) (undo-tree-id22926 . -1) (undo-tree-id22927 . -1) (undo-tree-id22928 . -1) (undo-tree-id22929 . -1) (undo-tree-id22930 . -1) (undo-tree-id22931 . -1) (undo-tree-id22932 . -1) (undo-tree-id22933 . -1) (undo-tree-id22934 . -1) (undo-tree-id22935 . -1) (undo-tree-id22936 . -1) (undo-tree-id22937 . -1) (undo-tree-id22938 . -1) (undo-tree-id22939 . -1) (undo-tree-id22940 . -1) (undo-tree-id22941 . -1) (undo-tree-id22942 . -1) (undo-tree-id22943 . -1) (undo-tree-id22944 . -1) (undo-tree-id22945 . -1) (undo-tree-id22946 . -1) (undo-tree-id22947 . -1) (undo-tree-id22948 . -1) (undo-tree-id22949 . -1) (undo-tree-id22950 . -1) (undo-tree-id22951 . -1) (undo-tree-id22952 . -1) (undo-tree-id22953 . -1) (undo-tree-id22954 . -1) (undo-tree-id22955 . -1) (undo-tree-id22956 . -1) (undo-tree-id22957 . -1) (undo-tree-id22958 . -1) (undo-tree-id22959 . -1) (undo-tree-id22960 . -1) (undo-tree-id22961 . -1) (undo-tree-id22962 . -1) (undo-tree-id22963 . -1) (undo-tree-id22964 . -1) (undo-tree-id22965 . -1) (undo-tree-id22966 . -1) (undo-tree-id22967 . -1) (undo-tree-id22968 . -1) (undo-tree-id22969 . -1) (undo-tree-id22970 . -1) (undo-tree-id22971 . -1) (undo-tree-id22972 . -1) (undo-tree-id22973 . -1) (undo-tree-id22974 . -1) (undo-tree-id22975 . -1) (undo-tree-id22976 . -1) (undo-tree-id22977 . -1) (undo-tree-id22978 . -1) (undo-tree-id22979 . -1) (undo-tree-id22980 . -1) (undo-tree-id22981 . -1) (undo-tree-id22982 . -1) (undo-tree-id22983 . -1) (undo-tree-id22984 . -1) (undo-tree-id22985 . -1) (undo-tree-id22986 . -1) (undo-tree-id22987 . -1) (undo-tree-id22988 . -1) (undo-tree-id22989 . -1) (undo-tree-id22990 . -1) (undo-tree-id22991 . -1) (undo-tree-id22992 . -1) (undo-tree-id22993 . -1) (undo-tree-id22994 . -1) (undo-tree-id22995 . -1) (undo-tree-id22996 . -1) (undo-tree-id22997 . -1) (undo-tree-id22998 . -1) (undo-tree-id22999 . -1) (undo-tree-id23000 . -1) (undo-tree-id23001 . -1) (undo-tree-id23002 . -1) (undo-tree-id23003 . -1) (undo-tree-id23004 . -1) (undo-tree-id23005 . -1) (undo-tree-id23006 . -1) (undo-tree-id23007 . -1) (undo-tree-id23008 . -1) (undo-tree-id23009 . -1) (undo-tree-id23010 . -1) (undo-tree-id23011 . -1) (undo-tree-id23012 . -1) (undo-tree-id23013 . -1) (undo-tree-id23014 . -1) (undo-tree-id23015 . -1) (undo-tree-id23016 . -1) (undo-tree-id23017 . -1) (undo-tree-id23018 . -1) (undo-tree-id23019 . -1) (undo-tree-id23020 . -1) (undo-tree-id23021 . -1) (undo-tree-id23022 . -1) (undo-tree-id23023 . -1) (undo-tree-id23024 . -1) (undo-tree-id23025 . -1) (undo-tree-id23026 . -1) (undo-tree-id23027 . -1) (undo-tree-id23028 . -1) (undo-tree-id23029 . -1) (undo-tree-id23030 . -1) (undo-tree-id23031 . -1) (undo-tree-id23032 . -1) (undo-tree-id23033 . -1) (undo-tree-id23034 . -1) (undo-tree-id23035 . -1) (undo-tree-id23036 . -1) (undo-tree-id23037 . -1) (undo-tree-id23038 . -1) (undo-tree-id23039 . -1) (undo-tree-id23040 . -1) (undo-tree-id23041 . -1) (undo-tree-id23042 . -1) (undo-tree-id23043 . -1) (undo-tree-id23044 . -1) (undo-tree-id23045 . -1) (undo-tree-id23046 . -1) (undo-tree-id23047 . -1) (undo-tree-id23048 . -1) (undo-tree-id23049 . -1) (undo-tree-id23050 . -1) (undo-tree-id23051 . -1) (undo-tree-id23052 . -1) (undo-tree-id23053 . -1) (undo-tree-id23054 . -1) (undo-tree-id23055 . -1) (undo-tree-id23056 . -1) (undo-tree-id23057 . -1) (undo-tree-id23058 . -1) (undo-tree-id23059 . -1) (undo-tree-id23060 . -1) (undo-tree-id23061 . -1) (undo-tree-id23062 . -1) (undo-tree-id23063 . -1) (undo-tree-id23064 . -1) (undo-tree-id23065 . -1) (undo-tree-id23066 . -1) (undo-tree-id23067 . -1) (undo-tree-id23068 . -1) (#(" " 0 1 (fontified t)) . -4701) (undo-tree-id23069 . -1) (undo-tree-id23070 . -1) (undo-tree-id23071 . -1) (undo-tree-id23072 . -1) (undo-tree-id23073 . -1) (undo-tree-id23074 . -1) (undo-tree-id23075 . -1) (undo-tree-id23076 . -1) (undo-tree-id23077 . -1) (undo-tree-id23078 . -1) (undo-tree-id23079 . -1) (undo-tree-id23080 . -1) (undo-tree-id23081 . -1) (undo-tree-id23082 . -1) (undo-tree-id23083 . -1) (undo-tree-id23084 . -1) (undo-tree-id23085 . -1) (undo-tree-id23086 . -1) (undo-tree-id23087 . -1) (undo-tree-id23088 . -1) (undo-tree-id23089 . -1) (undo-tree-id23090 . -1) (undo-tree-id23091 . -1) (undo-tree-id23092 . -1) (undo-tree-id23093 . -1) (undo-tree-id23094 . -1) (undo-tree-id23095 . -1) (undo-tree-id23096 . -1) (undo-tree-id23097 . -1) (undo-tree-id23098 . -1) (undo-tree-id23099 . -1) (undo-tree-id23100 . -1) (undo-tree-id23101 . -1) (undo-tree-id23102 . -1) (undo-tree-id23103 . -1) (undo-tree-id23104 . -1) (undo-tree-id23105 . -1) (undo-tree-id23106 . -1) (undo-tree-id23107 . -1) (undo-tree-id23108 . -1) (undo-tree-id23109 . -1) (undo-tree-id23110 . -1) (undo-tree-id23111 . -1) (undo-tree-id23112 . -1) (undo-tree-id23113 . -1) (undo-tree-id23114 . -1) (undo-tree-id23115 . -1) (undo-tree-id23116 . -1) (undo-tree-id23117 . -1) (undo-tree-id23118 . -1) (undo-tree-id23119 . -1) (undo-tree-id23120 . -1) (undo-tree-id23121 . -1) (undo-tree-id23122 . -1) (undo-tree-id23123 . -1) (undo-tree-id23124 . -1) (undo-tree-id23125 . -1) (undo-tree-id23126 . -1) (undo-tree-id23127 . -1) (undo-tree-id23128 . -1) (undo-tree-id23129 . -1) (undo-tree-id23130 . -1) (undo-tree-id23131 . -1) (undo-tree-id23132 . -1) (undo-tree-id23133 . -1) (undo-tree-id23134 . -1) (undo-tree-id23135 . -1) (undo-tree-id23136 . -1) (undo-tree-id23137 . -1) (undo-tree-id23138 . -1) (undo-tree-id23139 . -1) (undo-tree-id23140 . -1) (undo-tree-id23141 . -1) (undo-tree-id23142 . -1) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1) (undo-tree-id23145 . -1) (undo-tree-id23146 . -1) (undo-tree-id23147 . -1) (undo-tree-id23148 . -1) (undo-tree-id23149 . -1) (undo-tree-id23150 . -1) (undo-tree-id23151 . -1) (undo-tree-id23152 . -1) (undo-tree-id23153 . -1) (undo-tree-id23154 . -1) (undo-tree-id23155 . -1) (undo-tree-id23156 . -1) (undo-tree-id23157 . -1) (undo-tree-id23158 . -1) (undo-tree-id23159 . -1) (undo-tree-id23160 . -1) (undo-tree-id23161 . -1) (undo-tree-id23162 . -1) (undo-tree-id23163 . -1) (undo-tree-id23164 . -1) (undo-tree-id23165 . -1) (undo-tree-id23166 . -1) (undo-tree-id23167 . -1) (undo-tree-id23168 . -1) (undo-tree-id23169 . -1) (undo-tree-id23170 . -1) (undo-tree-id23171 . -1) (undo-tree-id23172 . -1) (undo-tree-id23173 . -1) (undo-tree-id23174 . -1) (undo-tree-id23175 . -1) (undo-tree-id23176 . -1) (undo-tree-id23177 . -1) (undo-tree-id23178 . -1) (undo-tree-id23179 . -1) (undo-tree-id23180 . -1) (undo-tree-id23181 . -1) (undo-tree-id23182 . -1) (undo-tree-id23183 . -1) (undo-tree-id23184 . -1) (undo-tree-id23185 . -1) (undo-tree-id23186 . -1) (undo-tree-id23187 . -1) (undo-tree-id23188 . -1) (undo-tree-id23189 . -1) (undo-tree-id23190 . -1) (undo-tree-id23191 . -1) (undo-tree-id23192 . -1) (undo-tree-id23193 . -1) (undo-tree-id23194 . -1) (undo-tree-id23195 . -1) (undo-tree-id23196 . -1) (undo-tree-id23197 . -1) (undo-tree-id23198 . -1) (undo-tree-id23199 . -1) (undo-tree-id23200 . -1) (undo-tree-id23201 . -1) (undo-tree-id23202 . -1) (undo-tree-id23203 . -1) (undo-tree-id23204 . -1) (undo-tree-id23205 . -1) (undo-tree-id23206 . -1) (undo-tree-id23207 . -1) (undo-tree-id23208 . -1) (undo-tree-id23209 . -1) (undo-tree-id23210 . -1) (undo-tree-id23211 . -1) (undo-tree-id23212 . -1) (undo-tree-id23213 . -1) (undo-tree-id23214 . -1) (undo-tree-id23215 . -1) (undo-tree-id23216 . -1) (undo-tree-id23217 . -1) (undo-tree-id23218 . -1) (undo-tree-id23219 . -1) (undo-tree-id23220 . -1) (undo-tree-id23221 . -1) (undo-tree-id23222 . -1) (undo-tree-id23223 . -1) (undo-tree-id23224 . -1) (undo-tree-id23225 . -1) (undo-tree-id23226 . -1) (undo-tree-id23227 . -1) (undo-tree-id23228 . -1) (undo-tree-id23229 . -1) (undo-tree-id23230 . -1) (undo-tree-id23231 . -1) (undo-tree-id23232 . -1) (undo-tree-id23233 . -1) (undo-tree-id23234 . -1) (undo-tree-id23235 . -1) (undo-tree-id23236 . -1) (undo-tree-id23237 . -1) (undo-tree-id23238 . -1) (undo-tree-id23239 . -1) (undo-tree-id23240 . -1) (undo-tree-id23241 . -1) (undo-tree-id23242 . -1) (undo-tree-id23243 . -1) (undo-tree-id23244 . -1) (undo-tree-id23245 . -1) (undo-tree-id23246 . -1) (undo-tree-id23247 . -1) (undo-tree-id23248 . -1) (undo-tree-id23249 . -1) (undo-tree-id23250 . -1) (undo-tree-id23251 . -1) (undo-tree-id23252 . -1) (undo-tree-id23253 . -1) (undo-tree-id23254 . -1) (undo-tree-id23255 . -1) (undo-tree-id23256 . -1) (undo-tree-id23257 . -1) (undo-tree-id23258 . -1) (undo-tree-id23259 . -1) (undo-tree-id23260 . -1) (undo-tree-id23261 . -1) (undo-tree-id23262 . -1) (undo-tree-id23263 . -1) (undo-tree-id23264 . -1) (undo-tree-id23265 . -1) (undo-tree-id23266 . -1) (undo-tree-id23267 . -1) (undo-tree-id23268 . -1) (undo-tree-id23269 . -1) (undo-tree-id23270 . -1) (undo-tree-id23271 . -1) (undo-tree-id23272 . -1) (undo-tree-id23273 . -1) (undo-tree-id23274 . -1) (undo-tree-id23275 . -1) (undo-tree-id23276 . -1) (undo-tree-id23277 . -1) (undo-tree-id23278 . -1) (undo-tree-id23279 . -1) (undo-tree-id23280 . -1) (undo-tree-id23281 . -1) (undo-tree-id23282 . -1) (undo-tree-id23283 . -1) (undo-tree-id23284 . -1) (undo-tree-id23285 . -1) (undo-tree-id23286 . -1) (undo-tree-id23287 . -1) (undo-tree-id23288 . -1) (undo-tree-id23289 . -1) (undo-tree-id23290 . -1) (undo-tree-id23291 . -1) (undo-tree-id23292 . -1) (undo-tree-id23293 . -1) (undo-tree-id23294 . -1) (undo-tree-id23295 . -1) (undo-tree-id23296 . -1) (undo-tree-id23297 . -1) (undo-tree-id23298 . -1) (undo-tree-id23299 . -1) (undo-tree-id23300 . -1) (undo-tree-id23301 . -1) (undo-tree-id23302 . -1) (undo-tree-id23303 . -1) (undo-tree-id23304 . -1) (undo-tree-id23305 . -1) (undo-tree-id23306 . -1) (undo-tree-id23307 . -1) (undo-tree-id23308 . -1) (undo-tree-id23309 . -1) (undo-tree-id23310 . -1) (undo-tree-id23311 . -1) (undo-tree-id23312 . -1) (undo-tree-id23313 . -1) (undo-tree-id23314 . -1) (undo-tree-id23315 . -1) (undo-tree-id23316 . -1) (undo-tree-id23317 . -1) (undo-tree-id23318 . -1) (undo-tree-id23319 . -1) (undo-tree-id23320 . -1) (undo-tree-id23321 . -1) (undo-tree-id23322 . -1) (undo-tree-id23323 . -1) (undo-tree-id23324 . -1) (undo-tree-id23325 . -1) (undo-tree-id23326 . -1) (undo-tree-id23327 . -1) (#(" " 0 1 (fontified t)) . -4702) (undo-tree-id23328 . -1) (undo-tree-id23329 . -1) (undo-tree-id23330 . -1) (undo-tree-id23331 . -1) (undo-tree-id23332 . -1) (undo-tree-id23333 . -1) (undo-tree-id23334 . -1) (undo-tree-id23335 . -1) (undo-tree-id23336 . -1) (undo-tree-id23337 . -1) (undo-tree-id23338 . -1) (undo-tree-id23339 . -1) (undo-tree-id23340 . -1) (undo-tree-id23341 . -1) (undo-tree-id23342 . -1) (undo-tree-id23343 . -1) (undo-tree-id23344 . -1) (undo-tree-id23345 . -1) (undo-tree-id23346 . -1) (undo-tree-id23347 . -1) (undo-tree-id23348 . -1) (undo-tree-id23349 . -1) (undo-tree-id23350 . -1) (undo-tree-id23351 . -1) (undo-tree-id23352 . -1) (undo-tree-id23353 . -1) (undo-tree-id23354 . -1) (undo-tree-id23355 . -1) (undo-tree-id23356 . -1) (undo-tree-id23357 . -1) (undo-tree-id23358 . -1) (undo-tree-id23359 . -1) (undo-tree-id23360 . -1) (undo-tree-id23361 . -1) (undo-tree-id23362 . -1) (undo-tree-id23363 . -1) (undo-tree-id23364 . -1) (undo-tree-id23365 . -1) (undo-tree-id23366 . -1) (undo-tree-id23367 . -1) (undo-tree-id23368 . -1) (undo-tree-id23369 . -1) (undo-tree-id23370 . -1) (undo-tree-id23371 . -1) (undo-tree-id23372 . -1) (undo-tree-id23373 . -1) (undo-tree-id23374 . -1) (undo-tree-id23375 . -1) (undo-tree-id23376 . -1) (undo-tree-id23377 . -1) (undo-tree-id23378 . -1) (undo-tree-id23379 . -1) (undo-tree-id23380 . -1) (undo-tree-id23381 . -1) (undo-tree-id23382 . -1) (undo-tree-id23383 . -1) (undo-tree-id23384 . -1) (undo-tree-id23385 . -1) (undo-tree-id23386 . -1) (undo-tree-id23387 . -1) (undo-tree-id23388 . -1) (undo-tree-id23389 . -1) (undo-tree-id23390 . -1) (undo-tree-id23391 . -1) (undo-tree-id23392 . -1) (undo-tree-id23393 . -1) (undo-tree-id23394 . -1) (undo-tree-id23395 . -1) (undo-tree-id23396 . -1) (undo-tree-id23397 . -1) (undo-tree-id23398 . -1) (undo-tree-id23399 . -1) (undo-tree-id23400 . -1) (undo-tree-id23401 . -1) (undo-tree-id23402 . -1) (undo-tree-id23403 . -1) (undo-tree-id23404 . -1) (undo-tree-id23405 . -1) (undo-tree-id23406 . -1) (undo-tree-id23407 . -1) (undo-tree-id23408 . -1) (undo-tree-id23409 . -1) (undo-tree-id23410 . -1) (undo-tree-id23411 . -1) (undo-tree-id23412 . -1) (undo-tree-id23413 . -1) (undo-tree-id23414 . -1) (undo-tree-id23415 . -1) (undo-tree-id23416 . -1) (undo-tree-id23417 . -1) (undo-tree-id23418 . -1) (undo-tree-id23419 . -1) (undo-tree-id23420 . -1) (undo-tree-id23421 . -1) (undo-tree-id23422 . -1) (undo-tree-id23423 . -1) (undo-tree-id23424 . -1) (undo-tree-id23425 . -1) (undo-tree-id23426 . -1) (undo-tree-id23427 . -1) (undo-tree-id23428 . -1) (undo-tree-id23429 . -1) (undo-tree-id23430 . -1) (undo-tree-id23431 . -1) (undo-tree-id23432 . -1) (undo-tree-id23433 . -1) (undo-tree-id23434 . -1) (undo-tree-id23435 . -1) (undo-tree-id23436 . -1) (undo-tree-id23437 . -1) (undo-tree-id23438 . -1) (undo-tree-id23439 . -1) (undo-tree-id23440 . -1) (undo-tree-id23441 . -1) (undo-tree-id23442 . -1) (undo-tree-id23443 . -1) (undo-tree-id23444 . -1) (undo-tree-id23445 . -1) (undo-tree-id23446 . -1) (undo-tree-id23447 . -1) (undo-tree-id23448 . -1) (undo-tree-id23449 . -1) (undo-tree-id23450 . -1) (undo-tree-id23451 . -1) (undo-tree-id23452 . -1) (undo-tree-id23453 . -1) (undo-tree-id23454 . -1) (undo-tree-id23455 . -1) (undo-tree-id23456 . -1) (undo-tree-id23457 . -1) (undo-tree-id23458 . -1) (undo-tree-id23459 . -1) (undo-tree-id23460 . -1) (undo-tree-id23461 . -1) (undo-tree-id23462 . -1) (undo-tree-id23463 . -1) (undo-tree-id23464 . -1) (undo-tree-id23465 . -1) (undo-tree-id23466 . -1) (undo-tree-id23467 . -1) (undo-tree-id23468 . -1) (undo-tree-id23469 . -1) (undo-tree-id23470 . -1) (undo-tree-id23471 . -1) (undo-tree-id23472 . -1) (undo-tree-id23473 . -1) (undo-tree-id23474 . -1) (undo-tree-id23475 . -1) (undo-tree-id23476 . -1) (undo-tree-id23477 . -1) (undo-tree-id23478 . -1) (undo-tree-id23479 . -1) (undo-tree-id23480 . -1) (undo-tree-id23481 . -1) (undo-tree-id23482 . -1) (undo-tree-id23483 . -1) (undo-tree-id23484 . -1) (undo-tree-id23485 . -1) (undo-tree-id23486 . -1) (undo-tree-id23487 . -1) (undo-tree-id23488 . -1) (undo-tree-id23489 . -1) (undo-tree-id23490 . -1) (undo-tree-id23491 . -1) (undo-tree-id23492 . -1) (undo-tree-id23493 . -1) (undo-tree-id23494 . -1) (undo-tree-id23495 . -1) (undo-tree-id23496 . -1) (undo-tree-id23497 . -1) (undo-tree-id23498 . -1) (undo-tree-id23499 . -1) (undo-tree-id23500 . -1) (undo-tree-id23501 . -1) (undo-tree-id23502 . -1) (undo-tree-id23503 . -1) (undo-tree-id23504 . -1) (undo-tree-id23505 . -1) (undo-tree-id23506 . -1) (undo-tree-id23507 . -1) (undo-tree-id23508 . -1) (undo-tree-id23509 . -1) (undo-tree-id23510 . -1) (undo-tree-id23511 . -1) (undo-tree-id23512 . -1) (undo-tree-id23513 . -1) (undo-tree-id23514 . -1) (undo-tree-id23515 . -1) (undo-tree-id23516 . -1) (undo-tree-id23517 . -1) (undo-tree-id23518 . -1) (undo-tree-id23519 . -1) (undo-tree-id23520 . -1) (undo-tree-id23521 . -1) (undo-tree-id23522 . -1) (undo-tree-id23523 . -1) (undo-tree-id23524 . -1) (undo-tree-id23525 . -1) (undo-tree-id23526 . -1) (undo-tree-id23527 . -1) (undo-tree-id23528 . -1) (undo-tree-id23529 . -1) (undo-tree-id23530 . -1) (undo-tree-id23531 . -1) (undo-tree-id23532 . -1) (undo-tree-id23533 . -1) (undo-tree-id23534 . -1) (undo-tree-id23535 . -1) (undo-tree-id23536 . -1) (undo-tree-id23537 . -1) (undo-tree-id23538 . -1) (undo-tree-id23539 . -1) (undo-tree-id23540 . -1) (undo-tree-id23541 . -1) (undo-tree-id23542 . -1) (undo-tree-id23543 . -1) (undo-tree-id23544 . -1) (undo-tree-id23545 . -1) (undo-tree-id23546 . -1) (undo-tree-id23547 . -1) (undo-tree-id23548 . -1) (undo-tree-id23549 . -1) (undo-tree-id23550 . -1) (undo-tree-id23551 . -1) (undo-tree-id23552 . -1) (undo-tree-id23553 . -1) (undo-tree-id23554 . -1) (undo-tree-id23555 . -1) (undo-tree-id23556 . -1) (undo-tree-id23557 . -1) (undo-tree-id23558 . -1) (undo-tree-id23559 . -1) (undo-tree-id23560 . -1) (undo-tree-id23561 . -1) (undo-tree-id23562 . -1) (undo-tree-id23563 . -1) (undo-tree-id23564 . -1) (undo-tree-id23565 . -1) (undo-tree-id23566 . -1) (undo-tree-id23567 . -1) (undo-tree-id23568 . -1) (undo-tree-id23569 . -1) (#(" " 0 1 (fontified t)) . -4703) (undo-tree-id23570 . -1) (undo-tree-id23571 . -1) (undo-tree-id23572 . -1) (undo-tree-id23573 . -1) (undo-tree-id23574 . -1) (undo-tree-id23575 . -1) (undo-tree-id23576 . -1) (undo-tree-id23577 . -1) (undo-tree-id23578 . -1) (undo-tree-id23579 . -1) (undo-tree-id23580 . -1) (undo-tree-id23581 . -1) (undo-tree-id23582 . -1) (undo-tree-id23583 . -1) (undo-tree-id23584 . -1) (undo-tree-id23585 . -1) (undo-tree-id23586 . -1) (undo-tree-id23587 . -1) (undo-tree-id23588 . -1) (undo-tree-id23589 . -1) (undo-tree-id23590 . -1) (undo-tree-id23591 . -1) (undo-tree-id23592 . -1) (undo-tree-id23593 . -1) (undo-tree-id23594 . -1) (undo-tree-id23595 . -1) (undo-tree-id23596 . -1) (undo-tree-id23597 . -1) (undo-tree-id23598 . -1) (undo-tree-id23599 . -1) (undo-tree-id23600 . -1) (undo-tree-id23601 . -1) (undo-tree-id23602 . -1) (undo-tree-id23603 . -1) (undo-tree-id23604 . -1) (undo-tree-id23605 . -1) (undo-tree-id23606 . -1) (undo-tree-id23607 . -1) (undo-tree-id23608 . -1) (undo-tree-id23609 . -1) (undo-tree-id23610 . -1) (undo-tree-id23611 . -1) (undo-tree-id23612 . -1) (undo-tree-id23613 . -1) (undo-tree-id23614 . -1) (undo-tree-id23615 . -1) (undo-tree-id23616 . -1) (undo-tree-id23617 . -1) (undo-tree-id23618 . -1) (undo-tree-id23619 . -1) (undo-tree-id23620 . -1) (undo-tree-id23621 . -1) (undo-tree-id23622 . -1) (undo-tree-id23623 . -1) (undo-tree-id23624 . -1) (undo-tree-id23625 . -1) (undo-tree-id23626 . -1) (undo-tree-id23627 . -1) (undo-tree-id23628 . -1) (undo-tree-id23629 . -1) (undo-tree-id23630 . -1) (undo-tree-id23631 . -1) (undo-tree-id23632 . -1) (undo-tree-id23633 . -1) (undo-tree-id23634 . -1) (undo-tree-id23635 . -1) (undo-tree-id23636 . -1) (undo-tree-id23637 . -1) (undo-tree-id23638 . -1) (undo-tree-id23639 . -1) (undo-tree-id23640 . -1) (undo-tree-id23641 . -1) (undo-tree-id23642 . -1) (undo-tree-id23643 . -1) (undo-tree-id23644 . -1) (undo-tree-id23645 . -1) (undo-tree-id23646 . -1) (undo-tree-id23647 . -1) (undo-tree-id23648 . -1) (undo-tree-id23649 . -1) (undo-tree-id23650 . -1) (undo-tree-id23651 . -1) (undo-tree-id23652 . -1) (undo-tree-id23653 . -1) (undo-tree-id23654 . -1) (undo-tree-id23655 . -1) (undo-tree-id23656 . -1) (undo-tree-id23657 . -1) (undo-tree-id23658 . -1) (undo-tree-id23659 . -1) (undo-tree-id23660 . -1) (undo-tree-id23661 . -1) (undo-tree-id23662 . -1) (undo-tree-id23663 . -1) (undo-tree-id23664 . -1) (undo-tree-id23665 . -1) (undo-tree-id23666 . -1) (undo-tree-id23667 . -1) (undo-tree-id23668 . -1) (undo-tree-id23669 . -1) (undo-tree-id23670 . -1) (undo-tree-id23671 . -1) (undo-tree-id23672 . -1) (undo-tree-id23673 . -1) (undo-tree-id23674 . -1) (undo-tree-id23675 . -1) (undo-tree-id23676 . -1) (undo-tree-id23677 . -1) (undo-tree-id23678 . -1) (undo-tree-id23679 . -1) (undo-tree-id23680 . -1) (undo-tree-id23681 . -1) (undo-tree-id23682 . -1) (undo-tree-id23683 . -1) (undo-tree-id23684 . -1) (undo-tree-id23685 . -1) (undo-tree-id23686 . -1) (undo-tree-id23687 . -1) (undo-tree-id23688 . -1) (undo-tree-id23689 . -1) (undo-tree-id23690 . -1) (undo-tree-id23691 . -1) (undo-tree-id23692 . -1) (undo-tree-id23693 . -1) (undo-tree-id23694 . -1) (undo-tree-id23695 . -1) (undo-tree-id23696 . -1) (undo-tree-id23697 . -1) (undo-tree-id23698 . -1) (undo-tree-id23699 . -1) (undo-tree-id23700 . -1) (undo-tree-id23701 . -1) (undo-tree-id23702 . -1) (undo-tree-id23703 . -1) (undo-tree-id23704 . -1) (undo-tree-id23705 . -1) (undo-tree-id23706 . -1) (undo-tree-id23707 . -1) (undo-tree-id23708 . -1) (undo-tree-id23709 . -1) (undo-tree-id23710 . -1) (undo-tree-id23711 . -1) (undo-tree-id23712 . -1) (undo-tree-id23713 . -1) (undo-tree-id23714 . -1) (undo-tree-id23715 . -1) (undo-tree-id23716 . -1) (undo-tree-id23717 . -1) (undo-tree-id23718 . -1) (undo-tree-id23719 . -1) (undo-tree-id23720 . -1) (undo-tree-id23721 . -1) (undo-tree-id23722 . -1) (undo-tree-id23723 . -1) (undo-tree-id23724 . -1) (undo-tree-id23725 . -1) (undo-tree-id23726 . -1) (undo-tree-id23727 . -1) (undo-tree-id23728 . -1) (undo-tree-id23729 . -1) (undo-tree-id23730 . -1) (undo-tree-id23731 . -1) (undo-tree-id23732 . -1) (undo-tree-id23733 . -1) (undo-tree-id23734 . -1) (undo-tree-id23735 . -1) (undo-tree-id23736 . -1) (undo-tree-id23737 . -1) (undo-tree-id23738 . -1) (undo-tree-id23739 . -1) (undo-tree-id23740 . -1) (undo-tree-id23741 . -1) (undo-tree-id23742 . -1) (undo-tree-id23743 . -1) (undo-tree-id23744 . -1) (undo-tree-id23745 . -1) (undo-tree-id23746 . -1) (undo-tree-id23747 . -1) (undo-tree-id23748 . -1) (undo-tree-id23749 . -1) (undo-tree-id23750 . -1) (undo-tree-id23751 . -1) (undo-tree-id23752 . -1) (undo-tree-id23753 . -1) (undo-tree-id23754 . -1) (undo-tree-id23755 . -1) (undo-tree-id23756 . -1) (undo-tree-id23757 . -1) (undo-tree-id23758 . -1) (undo-tree-id23759 . -1) (undo-tree-id23760 . -1) (undo-tree-id23761 . -1) (undo-tree-id23762 . -1) (undo-tree-id23763 . -1) (undo-tree-id23764 . -1) (undo-tree-id23765 . -1) (undo-tree-id23766 . -1) (undo-tree-id23767 . -1) (undo-tree-id23768 . -1) (undo-tree-id23769 . -1) (undo-tree-id23770 . -1) (undo-tree-id23771 . -1) (undo-tree-id23772 . -1) (undo-tree-id23773 . -1) (undo-tree-id23774 . -1) (undo-tree-id23775 . -1) (undo-tree-id23776 . -1) (undo-tree-id23777 . -1) (undo-tree-id23778 . -1) (undo-tree-id23779 . -1) (undo-tree-id23780 . -1) (undo-tree-id23781 . -1) (undo-tree-id23782 . -1) (undo-tree-id23783 . -1) (undo-tree-id23784 . -1) (undo-tree-id23785 . -1) (undo-tree-id23786 . -1) (undo-tree-id23787 . -1) (undo-tree-id23788 . -1) (undo-tree-id23789 . -1) (undo-tree-id23790 . -1) (undo-tree-id23791 . -1) (undo-tree-id23792 . -1) (undo-tree-id23793 . -1) (undo-tree-id23794 . -1) (undo-tree-id23795 . -1) (undo-tree-id23796 . -1) (undo-tree-id23797 . -1) (undo-tree-id23798 . -1) (undo-tree-id23799 . -1) (undo-tree-id23800 . -1) (undo-tree-id23801 . -1) (#(" " 0 1 (fontified t)) . -4704) (undo-tree-id23802 . -1) (undo-tree-id23803 . -1) (undo-tree-id23804 . -1) (undo-tree-id23805 . -1) (undo-tree-id23806 . -1) (undo-tree-id23807 . -1) (undo-tree-id23808 . -1) (undo-tree-id23809 . -1) (undo-tree-id23810 . -1) (undo-tree-id23811 . -1) (undo-tree-id23812 . -1) (undo-tree-id23813 . -1) (undo-tree-id23814 . -1) (undo-tree-id23815 . -1) (undo-tree-id23816 . -1) (undo-tree-id23817 . -1) (undo-tree-id23818 . -1) (undo-tree-id23819 . -1) (undo-tree-id23820 . -1) (undo-tree-id23821 . -1) (undo-tree-id23822 . -1) (undo-tree-id23823 . -1) (undo-tree-id23824 . -1) (undo-tree-id23825 . -1) (undo-tree-id23826 . -1) (undo-tree-id23827 . -1) (undo-tree-id23828 . -1) (undo-tree-id23829 . -1) (undo-tree-id23830 . -1) (undo-tree-id23831 . -1) (undo-tree-id23832 . -1) (undo-tree-id23833 . -1) (undo-tree-id23834 . -1) (undo-tree-id23835 . -1) (undo-tree-id23836 . -1) (undo-tree-id23837 . -1) (undo-tree-id23838 . -1) (undo-tree-id23839 . -1) (undo-tree-id23840 . -1) (undo-tree-id23841 . -1) (undo-tree-id23842 . -1) (undo-tree-id23843 . -1) (undo-tree-id23844 . -1) (undo-tree-id23845 . -1) (undo-tree-id23846 . -1) (undo-tree-id23847 . -1) (undo-tree-id23848 . -1) (undo-tree-id23849 . -1) (undo-tree-id23850 . -1) (undo-tree-id23851 . -1) (undo-tree-id23852 . -1) (undo-tree-id23853 . -1) (undo-tree-id23854 . -1) (undo-tree-id23855 . -1) (undo-tree-id23856 . -1) (undo-tree-id23857 . -1) (undo-tree-id23858 . -1) (undo-tree-id23859 . -1) (undo-tree-id23860 . -1) (undo-tree-id23861 . -1) (undo-tree-id23862 . -1) (undo-tree-id23863 . -1) (undo-tree-id23864 . -1) (undo-tree-id23865 . -1) (undo-tree-id23866 . -1) (undo-tree-id23867 . -1) (undo-tree-id23868 . -1) (undo-tree-id23869 . -1) (undo-tree-id23870 . -1) (undo-tree-id23871 . -1) (undo-tree-id23872 . -1) (undo-tree-id23873 . -1) (undo-tree-id23874 . -1) (undo-tree-id23875 . -1) (undo-tree-id23876 . -1) (undo-tree-id23877 . -1) (undo-tree-id23878 . -1) (undo-tree-id23879 . -1) (undo-tree-id23880 . -1) (undo-tree-id23881 . -1) (undo-tree-id23882 . -1) (undo-tree-id23883 . -1) (undo-tree-id23884 . -1) (undo-tree-id23885 . -1) (undo-tree-id23886 . -1) (undo-tree-id23887 . -1) (undo-tree-id23888 . -1) (undo-tree-id23889 . -1) (undo-tree-id23890 . -1) (undo-tree-id23891 . -1) (undo-tree-id23892 . -1) (undo-tree-id23893 . -1) (undo-tree-id23894 . -1) (undo-tree-id23895 . -1) (undo-tree-id23896 . -1) (undo-tree-id23897 . -1) (undo-tree-id23898 . -1) (undo-tree-id23899 . -1) (undo-tree-id23900 . -1) (undo-tree-id23901 . -1) (undo-tree-id23902 . -1) (undo-tree-id23903 . -1) (undo-tree-id23904 . -1) (undo-tree-id23905 . -1) (undo-tree-id23906 . -1) (undo-tree-id23907 . -1) (undo-tree-id23908 . -1) (undo-tree-id23909 . -1) (undo-tree-id23910 . -1) (undo-tree-id23911 . -1) (undo-tree-id23912 . -1) (undo-tree-id23913 . -1) (undo-tree-id23914 . -1) (undo-tree-id23915 . -1) (undo-tree-id23916 . -1) (undo-tree-id23917 . -1) (undo-tree-id23918 . -1) (undo-tree-id23919 . -1) (undo-tree-id23920 . -1) (undo-tree-id23921 . -1) (undo-tree-id23922 . -1) (undo-tree-id23923 . -1) (undo-tree-id23924 . -1) (undo-tree-id23925 . -1) (undo-tree-id23926 . -1) (undo-tree-id23927 . -1) (undo-tree-id23928 . -1) (undo-tree-id23929 . -1) (undo-tree-id23930 . -1) (undo-tree-id23931 . -1) (undo-tree-id23932 . -1) (undo-tree-id23933 . -1) (undo-tree-id23934 . -1) (undo-tree-id23935 . -1) (undo-tree-id23936 . -1) (undo-tree-id23937 . -1) (undo-tree-id23938 . -1) (undo-tree-id23939 . -1) (undo-tree-id23940 . -1) (undo-tree-id23941 . -1) (undo-tree-id23942 . -1) (undo-tree-id23943 . -1) (undo-tree-id23944 . -1) (undo-tree-id23945 . -1) (undo-tree-id23946 . -1) (undo-tree-id23947 . -1) (undo-tree-id23948 . -1) (undo-tree-id23949 . -1) (undo-tree-id23950 . -1) (undo-tree-id23951 . -1) (undo-tree-id23952 . -1) (undo-tree-id23953 . -1) (undo-tree-id23954 . -1) (undo-tree-id23955 . -1) (undo-tree-id23956 . -1) (undo-tree-id23957 . -1) (undo-tree-id23958 . -1) (undo-tree-id23959 . -1) (undo-tree-id23960 . -1) (undo-tree-id23961 . -1) (undo-tree-id23962 . -1) (undo-tree-id23963 . -1) (undo-tree-id23964 . -1) (undo-tree-id23965 . -1) (undo-tree-id23966 . -1) (undo-tree-id23967 . -1) (undo-tree-id23968 . -1) (undo-tree-id23969 . -1) (undo-tree-id23970 . -1) (undo-tree-id23971 . -1) (undo-tree-id23972 . -1) (undo-tree-id23973 . -1) (undo-tree-id23974 . -1) (undo-tree-id23975 . -1) (undo-tree-id23976 . -1) (undo-tree-id23977 . -1) (undo-tree-id23978 . -1) (undo-tree-id23979 . -1) (undo-tree-id23980 . -1) (undo-tree-id23981 . -1) (undo-tree-id23982 . -1) (undo-tree-id23983 . -1) (undo-tree-id23984 . -1) (undo-tree-id23985 . -1) (undo-tree-id23986 . -1) (undo-tree-id23987 . -1) (undo-tree-id23988 . -1) (undo-tree-id23989 . -1) (undo-tree-id23990 . -1) (undo-tree-id23991 . -1) (undo-tree-id23992 . -1) (undo-tree-id23993 . -1) (undo-tree-id23994 . -1) (undo-tree-id23995 . -1) (undo-tree-id23996 . -1) (undo-tree-id23997 . -1) (undo-tree-id23998 . -1) (undo-tree-id23999 . -1) (undo-tree-id24000 . -1) (undo-tree-id24001 . -1) (undo-tree-id24002 . -1) (undo-tree-id24003 . -1) (undo-tree-id24004 . -1) (undo-tree-id24005 . -1) (undo-tree-id24006 . -1) (undo-tree-id24007 . -1) (undo-tree-id24008 . -1) (undo-tree-id24009 . -1) (undo-tree-id24010 . -1) (undo-tree-id24011 . -1) (undo-tree-id24012 . -1) (undo-tree-id24013 . -1) (undo-tree-id24014 . -1) (undo-tree-id24015 . -1) (undo-tree-id24016 . -1) (#(" " 0 1 (fontified t)) . -4705) (undo-tree-id24017 . -1) (undo-tree-id24018 . -1) (undo-tree-id24019 . -1) (undo-tree-id24020 . -1) (undo-tree-id24021 . -1) (undo-tree-id24022 . -1) (undo-tree-id24023 . -1) (undo-tree-id24024 . -1) (undo-tree-id24025 . -1) (undo-tree-id24026 . -1) (undo-tree-id24027 . -1) (undo-tree-id24028 . -1) (undo-tree-id24029 . -1) (undo-tree-id24030 . -1) (undo-tree-id24031 . -1) (undo-tree-id24032 . -1) (undo-tree-id24033 . -1) (undo-tree-id24034 . -1) (undo-tree-id24035 . -1) (undo-tree-id24036 . -1) (undo-tree-id24037 . -1) (undo-tree-id24038 . -1) (undo-tree-id24039 . -1) (undo-tree-id24040 . -1) (undo-tree-id24041 . -1) (undo-tree-id24042 . -1) (undo-tree-id24043 . -1) (undo-tree-id24044 . -1) (undo-tree-id24045 . -1) (undo-tree-id24046 . -1) (undo-tree-id24047 . -1) (undo-tree-id24048 . -1) (undo-tree-id24049 . -1) (undo-tree-id24050 . -1) (undo-tree-id24051 . -1) (undo-tree-id24052 . -1) (undo-tree-id24053 . -1) (undo-tree-id24054 . -1) (undo-tree-id24055 . -1) (undo-tree-id24056 . -1) (undo-tree-id24057 . -1) (undo-tree-id24058 . -1) (undo-tree-id24059 . -1) (undo-tree-id24060 . -1) (undo-tree-id24061 . -1) (undo-tree-id24062 . -1) (undo-tree-id24063 . -1) (undo-tree-id24064 . -1) (undo-tree-id24065 . -1) (undo-tree-id24066 . -1) (undo-tree-id24067 . -1) (undo-tree-id24068 . -1) (undo-tree-id24069 . -1) (undo-tree-id24070 . -1) (undo-tree-id24071 . -1) (undo-tree-id24072 . -1) (undo-tree-id24073 . -1) (undo-tree-id24074 . -1) (undo-tree-id24075 . -1) (undo-tree-id24076 . -1) (undo-tree-id24077 . -1) (undo-tree-id24078 . -1) (undo-tree-id24079 . -1) (undo-tree-id24080 . -1) (undo-tree-id24081 . -1) (undo-tree-id24082 . -1) (undo-tree-id24083 . -1) (undo-tree-id24084 . -1) (undo-tree-id24085 . -1) (undo-tree-id24086 . -1) (undo-tree-id24087 . -1) (undo-tree-id24088 . -1) (undo-tree-id24089 . -1) (undo-tree-id24090 . -1) (undo-tree-id24091 . -1) (undo-tree-id24092 . -1) (undo-tree-id24093 . -1) (undo-tree-id24094 . -1) (undo-tree-id24095 . -1) (undo-tree-id24096 . -1) (undo-tree-id24097 . -1) (undo-tree-id24098 . -1) (undo-tree-id24099 . -1) (undo-tree-id24100 . -1) (undo-tree-id24101 . -1) (undo-tree-id24102 . -1) (undo-tree-id24103 . -1) (undo-tree-id24104 . -1) (undo-tree-id24105 . -1) (undo-tree-id24106 . -1) (undo-tree-id24107 . -1) (undo-tree-id24108 . -1) (undo-tree-id24109 . -1) (undo-tree-id24110 . -1) (undo-tree-id24111 . -1) (undo-tree-id24112 . -1) (undo-tree-id24113 . -1) (undo-tree-id24114 . -1) (undo-tree-id24115 . -1) (undo-tree-id24116 . -1) (undo-tree-id24117 . -1) (undo-tree-id24118 . -1) (undo-tree-id24119 . -1) (undo-tree-id24120 . -1) (undo-tree-id24121 . -1) (undo-tree-id24122 . -1) (undo-tree-id24123 . -1) (undo-tree-id24124 . -1) (undo-tree-id24125 . -1) (undo-tree-id24126 . -1) (undo-tree-id24127 . -1) (undo-tree-id24128 . -1) (undo-tree-id24129 . -1) (undo-tree-id24130 . -1) (undo-tree-id24131 . -1) (undo-tree-id24132 . -1) (undo-tree-id24133 . -1) (undo-tree-id24134 . -1) (undo-tree-id24135 . -1) (undo-tree-id24136 . -1) (undo-tree-id24137 . -1) (undo-tree-id24138 . -1) (undo-tree-id24139 . -1) (undo-tree-id24140 . -1) (undo-tree-id24141 . -1) (undo-tree-id24142 . -1) (undo-tree-id24143 . -1) (undo-tree-id24144 . -1) (undo-tree-id24145 . -1) (undo-tree-id24146 . -1) (undo-tree-id24147 . -1) (undo-tree-id24148 . -1) (undo-tree-id24149 . -1) (undo-tree-id24150 . -1) (undo-tree-id24151 . -1) (undo-tree-id24152 . -1) (undo-tree-id24153 . -1) (undo-tree-id24154 . -1) (undo-tree-id24155 . -1) (undo-tree-id24156 . -1) (undo-tree-id24157 . -1) (undo-tree-id24158 . -1) (undo-tree-id24159 . -1) (undo-tree-id24160 . -1) (undo-tree-id24161 . -1) (undo-tree-id24162 . -1) (undo-tree-id24163 . -1) (undo-tree-id24164 . -1) (undo-tree-id24165 . -1) (undo-tree-id24166 . -1) (undo-tree-id24167 . -1) (undo-tree-id24168 . -1) (undo-tree-id24169 . -1) (undo-tree-id24170 . -1) (undo-tree-id24171 . -1) (undo-tree-id24172 . -1) (undo-tree-id24173 . -1) (undo-tree-id24174 . -1) (undo-tree-id24175 . -1) (undo-tree-id24176 . -1) (undo-tree-id24177 . -1) (undo-tree-id24178 . -1) (undo-tree-id24179 . -1) (undo-tree-id24180 . -1) (undo-tree-id24181 . -1) (undo-tree-id24182 . -1) (undo-tree-id24183 . -1) (undo-tree-id24184 . -1) (undo-tree-id24185 . -1) (undo-tree-id24186 . -1) (undo-tree-id24187 . -1) (undo-tree-id24188 . -1) (undo-tree-id24189 . -1) (undo-tree-id24190 . -1) (undo-tree-id24191 . -1) (undo-tree-id24192 . -1) (undo-tree-id24193 . -1) (undo-tree-id24194 . -1) (undo-tree-id24195 . -1) (undo-tree-id24196 . -1) (undo-tree-id24197 . -1) (undo-tree-id24198 . -1) (undo-tree-id24199 . -1) (undo-tree-id24200 . -1) (undo-tree-id24201 . -1) (undo-tree-id24202 . -1) (undo-tree-id24203 . -1) (undo-tree-id24204 . -1) (undo-tree-id24205 . -1) (undo-tree-id24206 . -1) (undo-tree-id24207 . -1) (undo-tree-id24208 . -1) (undo-tree-id24209 . -1) (undo-tree-id24210 . -1) (undo-tree-id24211 . -1) (undo-tree-id24212 . -1) (undo-tree-id24213 . -1) (undo-tree-id24214 . -1) (#(" " 0 1 (fontified t)) . -4706) (undo-tree-id24215 . -1) (undo-tree-id24216 . -1) (undo-tree-id24217 . -1) (undo-tree-id24218 . -1) (undo-tree-id24219 . -1) (undo-tree-id24220 . -1) (undo-tree-id24221 . -1) (undo-tree-id24222 . -1) (undo-tree-id24223 . -1) (undo-tree-id24224 . -1) (undo-tree-id24225 . -1) (undo-tree-id24226 . -1) (undo-tree-id24227 . -1) (undo-tree-id24228 . -1) (undo-tree-id24229 . -1) (undo-tree-id24230 . -1) (undo-tree-id24231 . -1) (undo-tree-id24232 . -1) (undo-tree-id24233 . -1) (undo-tree-id24234 . -1) (undo-tree-id24235 . -1) (undo-tree-id24236 . -1) (undo-tree-id24237 . -1) (undo-tree-id24238 . -1) (undo-tree-id24239 . -1) (undo-tree-id24240 . -1) (undo-tree-id24241 . -1) (undo-tree-id24242 . -1) (undo-tree-id24243 . -1) (undo-tree-id24244 . -1) (undo-tree-id24245 . -1) (undo-tree-id24246 . -1) (undo-tree-id24247 . -1) (undo-tree-id24248 . -1) (undo-tree-id24249 . -1) (undo-tree-id24250 . -1) (undo-tree-id24251 . -1) (undo-tree-id24252 . -1) (undo-tree-id24253 . -1) (undo-tree-id24254 . -1) (undo-tree-id24255 . -1) (undo-tree-id24256 . -1) (undo-tree-id24257 . -1) (undo-tree-id24258 . -1) (undo-tree-id24259 . -1) (undo-tree-id24260 . -1) (undo-tree-id24261 . -1) (undo-tree-id24262 . -1) (undo-tree-id24263 . -1) (undo-tree-id24264 . -1) (undo-tree-id24265 . -1) (undo-tree-id24266 . -1) (undo-tree-id24267 . -1) (undo-tree-id24268 . -1) (undo-tree-id24269 . -1) (undo-tree-id24270 . -1) (undo-tree-id24271 . -1) (undo-tree-id24272 . -1) (undo-tree-id24273 . -1) (undo-tree-id24274 . -1) (undo-tree-id24275 . -1) (undo-tree-id24276 . -1) (undo-tree-id24277 . -1) (undo-tree-id24278 . -1) (undo-tree-id24279 . -1) (undo-tree-id24280 . -1) (undo-tree-id24281 . -1) (undo-tree-id24282 . -1) (undo-tree-id24283 . -1) (undo-tree-id24284 . -1) (undo-tree-id24285 . -1) (undo-tree-id24286 . -1) (undo-tree-id24287 . -1) (undo-tree-id24288 . -1) (undo-tree-id24289 . -1) (undo-tree-id24290 . -1) (undo-tree-id24291 . -1) (undo-tree-id24292 . -1) (undo-tree-id24293 . -1) (undo-tree-id24294 . -1) (undo-tree-id24295 . -1) (undo-tree-id24296 . -1) (undo-tree-id24297 . -1) (undo-tree-id24298 . -1) (undo-tree-id24299 . -1) (undo-tree-id24300 . -1) (undo-tree-id24301 . -1) (undo-tree-id24302 . -1) (undo-tree-id24303 . -1) (undo-tree-id24304 . -1) (undo-tree-id24305 . -1) (undo-tree-id24306 . -1) (undo-tree-id24307 . -1) (undo-tree-id24308 . -1) (undo-tree-id24309 . -1) (undo-tree-id24310 . -1) (undo-tree-id24311 . -1) (undo-tree-id24312 . -1) (undo-tree-id24313 . -1) (undo-tree-id24314 . -1) (undo-tree-id24315 . -1) (undo-tree-id24316 . -1) (undo-tree-id24317 . -1) (undo-tree-id24318 . -1) (undo-tree-id24319 . -1) (undo-tree-id24320 . -1) (undo-tree-id24321 . -1) (undo-tree-id24322 . -1) (undo-tree-id24323 . -1) (undo-tree-id24324 . -1) (undo-tree-id24325 . -1) (undo-tree-id24326 . -1) (undo-tree-id24327 . -1) (undo-tree-id24328 . -1) (undo-tree-id24329 . -1) (undo-tree-id24330 . -1) (undo-tree-id24331 . -1) (undo-tree-id24332 . -1) (undo-tree-id24333 . -1) (undo-tree-id24334 . -1) (undo-tree-id24335 . -1) (undo-tree-id24336 . -1) (undo-tree-id24337 . -1) (undo-tree-id24338 . -1) (undo-tree-id24339 . -1) (undo-tree-id24340 . -1) (undo-tree-id24341 . -1) (undo-tree-id24342 . -1) (undo-tree-id24343 . -1) (undo-tree-id24344 . -1) (undo-tree-id24345 . -1) (undo-tree-id24346 . -1) (undo-tree-id24347 . -1) (undo-tree-id24348 . -1) (undo-tree-id24349 . -1) (undo-tree-id24350 . -1) (undo-tree-id24351 . -1) (undo-tree-id24352 . -1) (undo-tree-id24353 . -1) (undo-tree-id24354 . -1) (undo-tree-id24355 . -1) (undo-tree-id24356 . -1) (undo-tree-id24357 . -1) (undo-tree-id24358 . -1) (undo-tree-id24359 . -1) (undo-tree-id24360 . -1) (undo-tree-id24361 . -1) (undo-tree-id24362 . -1) (undo-tree-id24363 . -1) (undo-tree-id24364 . -1) (undo-tree-id24365 . -1) (undo-tree-id24366 . -1) (undo-tree-id24367 . -1) (undo-tree-id24368 . -1) (undo-tree-id24369 . -1) (undo-tree-id24370 . -1) (undo-tree-id24371 . -1) (undo-tree-id24372 . -1) (undo-tree-id24373 . -1) (undo-tree-id24374 . -1) (undo-tree-id24375 . -1) (undo-tree-id24376 . -1) (undo-tree-id24377 . -1) (undo-tree-id24378 . -1) (undo-tree-id24379 . -1) (undo-tree-id24380 . -1) (undo-tree-id24381 . -1) (undo-tree-id24382 . -1) (undo-tree-id24383 . -1) (undo-tree-id24384 . -1) (undo-tree-id24385 . -1) (undo-tree-id24386 . -1) (undo-tree-id24387 . -1) (undo-tree-id24388 . -1) (undo-tree-id24389 . -1) (undo-tree-id24390 . -1) (undo-tree-id24391 . -1) (undo-tree-id24392 . -1) (undo-tree-id24393 . -1) (undo-tree-id24394 . -1) (undo-tree-id24395 . -1) (#(" " 0 1 (fontified t)) . -4707) (undo-tree-id24396 . -1) (undo-tree-id24397 . -1) (undo-tree-id24398 . -1) (undo-tree-id24399 . -1) (undo-tree-id24400 . -1) (undo-tree-id24401 . -1) (undo-tree-id24402 . -1) (undo-tree-id24403 . -1) (undo-tree-id24404 . -1) (undo-tree-id24405 . -1) (undo-tree-id24406 . -1) (undo-tree-id24407 . -1) (undo-tree-id24408 . -1) (undo-tree-id24409 . -1) (undo-tree-id24410 . -1) (undo-tree-id24411 . -1) (undo-tree-id24412 . -1) (undo-tree-id24413 . -1) (undo-tree-id24414 . -1) (undo-tree-id24415 . -1) (undo-tree-id24416 . -1) (undo-tree-id24417 . -1) (undo-tree-id24418 . -1) (undo-tree-id24419 . -1) (undo-tree-id24420 . -1) (undo-tree-id24421 . -1) (undo-tree-id24422 . -1) (undo-tree-id24423 . -1) (undo-tree-id24424 . -1) (undo-tree-id24425 . -1) (undo-tree-id24426 . -1) (undo-tree-id24427 . -1) (undo-tree-id24428 . -1) (undo-tree-id24429 . -1) (undo-tree-id24430 . -1) (undo-tree-id24431 . -1) (undo-tree-id24432 . -1) (undo-tree-id24433 . -1) (undo-tree-id24434 . -1) (undo-tree-id24435 . -1) (undo-tree-id24436 . -1) (undo-tree-id24437 . -1) (undo-tree-id24438 . -1) (undo-tree-id24439 . -1) (undo-tree-id24440 . -1) (undo-tree-id24441 . -1) (undo-tree-id24442 . -1) (undo-tree-id24443 . -1) (undo-tree-id24444 . -1) (undo-tree-id24445 . -1) (undo-tree-id24446 . -1) (undo-tree-id24447 . -1) (undo-tree-id24448 . -1) (undo-tree-id24449 . -1) (undo-tree-id24450 . -1) (undo-tree-id24451 . -1) (undo-tree-id24452 . -1) (undo-tree-id24453 . -1) (undo-tree-id24454 . -1) (undo-tree-id24455 . -1) (undo-tree-id24456 . -1) (undo-tree-id24457 . -1) (undo-tree-id24458 . -1) (undo-tree-id24459 . -1) (undo-tree-id24460 . -1) (undo-tree-id24461 . -1) (undo-tree-id24462 . -1) (undo-tree-id24463 . -1) (undo-tree-id24464 . -1) (undo-tree-id24465 . -1) (undo-tree-id24466 . -1) (undo-tree-id24467 . -1) (undo-tree-id24468 . -1) (undo-tree-id24469 . -1) (undo-tree-id24470 . -1) (undo-tree-id24471 . -1) (undo-tree-id24472 . -1) (undo-tree-id24473 . -1) (undo-tree-id24474 . -1) (undo-tree-id24475 . -1) (undo-tree-id24476 . -1) (undo-tree-id24477 . -1) (undo-tree-id24478 . -1) (undo-tree-id24479 . -1) (undo-tree-id24480 . -1) (undo-tree-id24481 . -1) (undo-tree-id24482 . -1) (undo-tree-id24483 . -1) (undo-tree-id24484 . -1) (undo-tree-id24485 . -1) (undo-tree-id24486 . -1) (undo-tree-id24487 . -1) (undo-tree-id24488 . -1) (undo-tree-id24489 . -1) (undo-tree-id24490 . -1) (undo-tree-id24491 . -1) (undo-tree-id24492 . -1) (undo-tree-id24493 . -1) (undo-tree-id24494 . -1) (undo-tree-id24495 . -1) (undo-tree-id24496 . -1) (undo-tree-id24497 . -1) (undo-tree-id24498 . -1) (undo-tree-id24499 . -1) (undo-tree-id24500 . -1) (undo-tree-id24501 . -1) (undo-tree-id24502 . -1) (undo-tree-id24503 . -1) (undo-tree-id24504 . -1) (undo-tree-id24505 . -1) (undo-tree-id24506 . -1) (undo-tree-id24507 . -1) (undo-tree-id24508 . -1) (undo-tree-id24509 . -1) (undo-tree-id24510 . -1) (undo-tree-id24511 . -1) (undo-tree-id24512 . -1) (undo-tree-id24513 . -1) (undo-tree-id24514 . -1) (undo-tree-id24515 . -1) (undo-tree-id24516 . -1) (undo-tree-id24517 . -1) (undo-tree-id24518 . -1) (undo-tree-id24519 . -1) (undo-tree-id24520 . -1) (undo-tree-id24521 . -1) (undo-tree-id24522 . -1) (undo-tree-id24523 . -1) (undo-tree-id24524 . -1) (undo-tree-id24525 . -1) (undo-tree-id24526 . -1) (undo-tree-id24527 . -1) (undo-tree-id24528 . -1) (undo-tree-id24529 . -1) (undo-tree-id24530 . -1) (undo-tree-id24531 . -1) (undo-tree-id24532 . -1) (undo-tree-id24533 . -1) (undo-tree-id24534 . -1) (undo-tree-id24535 . -1) (undo-tree-id24536 . -1) (undo-tree-id24537 . -1) (undo-tree-id24538 . -1) (undo-tree-id24539 . -1) (undo-tree-id24540 . -1) (undo-tree-id24541 . -1) (undo-tree-id24542 . -1) (undo-tree-id24543 . -1) (undo-tree-id24544 . -1) (undo-tree-id24545 . -1) (undo-tree-id24546 . -1) (undo-tree-id24547 . -1) (undo-tree-id24548 . -1) (undo-tree-id24549 . -1) (undo-tree-id24550 . -1) (undo-tree-id24551 . -1) (undo-tree-id24552 . -1) (undo-tree-id24553 . -1) (undo-tree-id24554 . -1) (undo-tree-id24555 . -1) (undo-tree-id24556 . -1) (undo-tree-id24557 . -1) (undo-tree-id24558 . -1) (undo-tree-id24559 . -1) (#(" " 0 1 (fontified t)) . -4708) (undo-tree-id24560 . -1) (undo-tree-id24561 . -1) (undo-tree-id24562 . -1) (undo-tree-id24563 . -1) (undo-tree-id24564 . -1) (undo-tree-id24565 . -1) (undo-tree-id24566 . -1) (undo-tree-id24567 . -1) (undo-tree-id24568 . -1) (undo-tree-id24569 . -1) (undo-tree-id24570 . -1) (undo-tree-id24571 . -1) (undo-tree-id24572 . -1) (undo-tree-id24573 . -1) (undo-tree-id24574 . -1) (undo-tree-id24575 . -1) (undo-tree-id24576 . -1) (undo-tree-id24577 . -1) (undo-tree-id24578 . -1) (undo-tree-id24579 . -1) (undo-tree-id24580 . -1) (undo-tree-id24581 . -1) (undo-tree-id24582 . -1) (undo-tree-id24583 . -1) (undo-tree-id24584 . -1) (undo-tree-id24585 . -1) (undo-tree-id24586 . -1) (undo-tree-id24587 . -1) (undo-tree-id24588 . -1) (undo-tree-id24589 . -1) (undo-tree-id24590 . -1) (undo-tree-id24591 . -1) (undo-tree-id24592 . -1) (undo-tree-id24593 . -1) (undo-tree-id24594 . -1) (undo-tree-id24595 . -1) (undo-tree-id24596 . -1) (undo-tree-id24597 . -1) (undo-tree-id24598 . -1) (undo-tree-id24599 . -1) (undo-tree-id24600 . -1) (undo-tree-id24601 . -1) (undo-tree-id24602 . -1) (undo-tree-id24603 . -1) (undo-tree-id24604 . -1) (undo-tree-id24605 . -1) (undo-tree-id24606 . -1) (undo-tree-id24607 . -1) (undo-tree-id24608 . -1) (undo-tree-id24609 . -1) (undo-tree-id24610 . -1) (undo-tree-id24611 . -1) (undo-tree-id24612 . -1) (undo-tree-id24613 . -1) (undo-tree-id24614 . -1) (undo-tree-id24615 . -1) (undo-tree-id24616 . -1) (undo-tree-id24617 . -1) (undo-tree-id24618 . -1) (undo-tree-id24619 . -1) (undo-tree-id24620 . -1) (undo-tree-id24621 . -1) (undo-tree-id24622 . -1) (undo-tree-id24623 . -1) (undo-tree-id24624 . -1) (undo-tree-id24625 . -1) (undo-tree-id24626 . -1) (undo-tree-id24627 . -1) (undo-tree-id24628 . -1) (undo-tree-id24629 . -1) (undo-tree-id24630 . -1) (undo-tree-id24631 . -1) (undo-tree-id24632 . -1) (undo-tree-id24633 . -1) (undo-tree-id24634 . -1) (undo-tree-id24635 . -1) (undo-tree-id24636 . -1) (undo-tree-id24637 . -1) (undo-tree-id24638 . -1) (undo-tree-id24639 . -1) (undo-tree-id24640 . -1) (undo-tree-id24641 . -1) (undo-tree-id24642 . -1) (undo-tree-id24643 . -1) (undo-tree-id24644 . -1) (undo-tree-id24645 . -1) (undo-tree-id24646 . -1) (undo-tree-id24647 . -1) (undo-tree-id24648 . -1) (undo-tree-id24649 . -1) (undo-tree-id24650 . -1) (undo-tree-id24651 . -1) (undo-tree-id24652 . -1) (undo-tree-id24653 . -1) (undo-tree-id24654 . -1) (undo-tree-id24655 . -1) (undo-tree-id24656 . -1) (undo-tree-id24657 . -1) (undo-tree-id24658 . -1) (undo-tree-id24659 . -1) (undo-tree-id24660 . -1) (undo-tree-id24661 . -1) (undo-tree-id24662 . -1) (undo-tree-id24663 . -1) (undo-tree-id24664 . -1) (undo-tree-id24665 . -1) (undo-tree-id24666 . -1) (undo-tree-id24667 . -1) (undo-tree-id24668 . -1) (undo-tree-id24669 . -1) (undo-tree-id24670 . -1) (undo-tree-id24671 . -1) (undo-tree-id24672 . -1) (undo-tree-id24673 . -1) (undo-tree-id24674 . -1) (undo-tree-id24675 . -1) (undo-tree-id24676 . -1) (undo-tree-id24677 . -1) (undo-tree-id24678 . -1) (undo-tree-id24679 . -1) (undo-tree-id24680 . -1) (undo-tree-id24681 . -1) (undo-tree-id24682 . -1) (undo-tree-id24683 . -1) (undo-tree-id24684 . -1) (undo-tree-id24685 . -1) (undo-tree-id24686 . -1) (undo-tree-id24687 . -1) (undo-tree-id24688 . -1) (undo-tree-id24689 . -1) (undo-tree-id24690 . -1) (undo-tree-id24691 . -1) (undo-tree-id24692 . -1) (undo-tree-id24693 . -1) (undo-tree-id24694 . -1) (undo-tree-id24695 . -1) (undo-tree-id24696 . -1) (undo-tree-id24697 . -1) (undo-tree-id24698 . -1) (undo-tree-id24699 . -1) (undo-tree-id24700 . -1) (undo-tree-id24701 . -1) (undo-tree-id24702 . -1) (undo-tree-id24703 . -1) (undo-tree-id24704 . -1) (undo-tree-id24705 . -1) (undo-tree-id24706 . -1) (#(" " 0 1 (fontified t)) . -4709) (undo-tree-id24707 . -1) (undo-tree-id24708 . -1) (undo-tree-id24709 . -1) (undo-tree-id24710 . -1) (undo-tree-id24711 . -1) (undo-tree-id24712 . -1) (undo-tree-id24713 . -1) (undo-tree-id24714 . -1) (undo-tree-id24715 . -1) (undo-tree-id24716 . -1) (undo-tree-id24717 . -1) (undo-tree-id24718 . -1) (undo-tree-id24719 . -1) (undo-tree-id24720 . -1) (undo-tree-id24721 . -1) (undo-tree-id24722 . -1) (undo-tree-id24723 . -1) (undo-tree-id24724 . -1) (undo-tree-id24725 . -1) (undo-tree-id24726 . -1) (undo-tree-id24727 . -1) (undo-tree-id24728 . -1) (undo-tree-id24729 . -1) (undo-tree-id24730 . -1) (undo-tree-id24731 . -1) (undo-tree-id24732 . -1) (undo-tree-id24733 . -1) (undo-tree-id24734 . -1) (undo-tree-id24735 . -1) (undo-tree-id24736 . -1) (undo-tree-id24737 . -1) (undo-tree-id24738 . -1) (undo-tree-id24739 . -1) (undo-tree-id24740 . -1) (undo-tree-id24741 . -1) (undo-tree-id24742 . -1) (undo-tree-id24743 . -1) (undo-tree-id24744 . -1) (undo-tree-id24745 . -1) (undo-tree-id24746 . -1) (undo-tree-id24747 . -1) (undo-tree-id24748 . -1) (undo-tree-id24749 . -1) (undo-tree-id24750 . -1) (undo-tree-id24751 . -1) (undo-tree-id24752 . -1) (undo-tree-id24753 . -1) (undo-tree-id24754 . -1) (undo-tree-id24755 . -1) (undo-tree-id24756 . -1) (undo-tree-id24757 . -1) (undo-tree-id24758 . -1) (undo-tree-id24759 . -1) (undo-tree-id24760 . -1) (undo-tree-id24761 . -1) (undo-tree-id24762 . -1) (undo-tree-id24763 . -1) (undo-tree-id24764 . -1) (undo-tree-id24765 . -1) (undo-tree-id24766 . -1) (undo-tree-id24767 . -1) (undo-tree-id24768 . -1) (undo-tree-id24769 . -1) (undo-tree-id24770 . -1) (undo-tree-id24771 . -1) (undo-tree-id24772 . -1) (undo-tree-id24773 . -1) (undo-tree-id24774 . -1) (undo-tree-id24775 . -1) (undo-tree-id24776 . -1) (undo-tree-id24777 . -1) (undo-tree-id24778 . -1) (undo-tree-id24779 . -1) (undo-tree-id24780 . -1) (undo-tree-id24781 . -1) (undo-tree-id24782 . -1) (undo-tree-id24783 . -1) (undo-tree-id24784 . -1) (undo-tree-id24785 . -1) (undo-tree-id24786 . -1) (undo-tree-id24787 . -1) (undo-tree-id24788 . -1) (undo-tree-id24789 . -1) (undo-tree-id24790 . -1) (undo-tree-id24791 . -1) (undo-tree-id24792 . -1) (undo-tree-id24793 . -1) (undo-tree-id24794 . -1) (undo-tree-id24795 . -1) (undo-tree-id24796 . -1) (undo-tree-id24797 . -1) (undo-tree-id24798 . -1) (undo-tree-id24799 . -1) (undo-tree-id24800 . -1) (undo-tree-id24801 . -1) (undo-tree-id24802 . -1) (undo-tree-id24803 . -1) (undo-tree-id24804 . -1) (undo-tree-id24805 . -1) (undo-tree-id24806 . -1) (undo-tree-id24807 . -1) (undo-tree-id24808 . -1) (undo-tree-id24809 . -1) (undo-tree-id24810 . -1) (undo-tree-id24811 . -1) (undo-tree-id24812 . -1) (undo-tree-id24813 . -1) (undo-tree-id24814 . -1) (undo-tree-id24815 . -1) (undo-tree-id24816 . -1) (undo-tree-id24817 . -1) (undo-tree-id24818 . -1) (undo-tree-id24819 . -1) (undo-tree-id24820 . -1) (undo-tree-id24821 . -1) (undo-tree-id24822 . -1) 4710) nil (25934 12623 859020 534000) 0 nil] [nil nil ((4696 . 4712) (#("               " 0 15 (fontified nil)) . 4695) (undo-tree-id20865 . -15) (undo-tree-id20866 . -15) (undo-tree-id20867 . -15) (undo-tree-id20868 . -15) (undo-tree-id20869 . -15) (undo-tree-id20870 . -15) (undo-tree-id20871 . -15) (undo-tree-id20872 . -15) (undo-tree-id20873 . -15) (undo-tree-id20874 . -15) (undo-tree-id20875 . -15) (undo-tree-id20876 . -15) (undo-tree-id20877 . -15) (undo-tree-id20878 . -15) (undo-tree-id20879 . -15) (undo-tree-id20880 . -15) (undo-tree-id20881 . -15) (undo-tree-id20882 . -15) (undo-tree-id20883 . -15) (undo-tree-id20884 . -15) (undo-tree-id20885 . -15) (undo-tree-id20886 . -15) (undo-tree-id20887 . -15) (undo-tree-id20888 . -15) (undo-tree-id20889 . -15) (undo-tree-id20890 . -15) (undo-tree-id20891 . -15) (undo-tree-id20892 . -15) (undo-tree-id20893 . -15) (undo-tree-id20894 . -15) (undo-tree-id20895 . -15) (undo-tree-id20896 . -15) (undo-tree-id20897 . -15) (undo-tree-id20898 . -15) (undo-tree-id20899 . -15) (undo-tree-id20900 . -15) (undo-tree-id20901 . -15) (undo-tree-id20902 . -15) (undo-tree-id20903 . -15) (undo-tree-id20904 . -15) (undo-tree-id20905 . -15) (undo-tree-id20906 . -15) (undo-tree-id20907 . -15) (undo-tree-id20908 . -15) (undo-tree-id20909 . -15) (undo-tree-id20910 . -15) (undo-tree-id20911 . -15) (undo-tree-id20912 . -15) (undo-tree-id20913 . -15) (undo-tree-id20914 . -15) (undo-tree-id20915 . -15) (undo-tree-id20916 . -15) (undo-tree-id20917 . -15) (undo-tree-id20918 . -15) (undo-tree-id20919 . -15) (undo-tree-id20920 . -15) (undo-tree-id20921 . -15) (undo-tree-id20922 . -15) (undo-tree-id20923 . -15) (undo-tree-id20924 . -15) (undo-tree-id20925 . -15) (undo-tree-id20926 . -15) (undo-tree-id20927 . -15) (4710 . 4711)) ((#("
" 0 1 (fontified nil)) . 4710) (undo-tree-id20967 . -1) (undo-tree-id20968 . -1) (undo-tree-id20969 . -1) (undo-tree-id20970 . -1) (4695 . 4710) (#("                " 0 16 (fontified t)) . 4696) (undo-tree-id20971 . -16) (undo-tree-id20972 . -16) (undo-tree-id20973 . -16)) (25934 12614 63848 420000) 0 nil])
([nil nil ((4305 . 4318) (t 25934 12623 906574 652000)) nil (25934 12939 707761 306000) 0 nil])
nil
([nil nil ((4318 . 4330)) nil (25934 12939 707760 278000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4351) (4350 . 4351) (4349 . 4351) (#("[" 0 1 (fontified nil)) . -4349) (4330 . 4350)) nil (25934 12939 707758 861000) 0 nil])
([nil nil ((4350 . 4351)) nil (25934 12939 707757 270000) 0 nil])
([nil nil ((4352 . 4355)) nil (25934 12939 707756 427000) 0 nil])
([nil nil ((4355 . 4366)) nil (25934 12939 707755 422000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -4365) (undo-tree-id24825 . -1) 4366) nil (25934 12939 707753 988000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4368) (4367 . 4368) (4366 . 4368) (#("[" 0 1 (fontified nil)) . -4366) (4365 . 4367)) nil (25934 12939 707749 863000) 0 nil])
([nil nil ((4367 . 4368)) nil (25934 12939 707747 543000) 0 nil])
([nil nil ((4369 . 4378)) nil (25934 12939 707746 63000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4384) (4383 . 4384) (4382 . 4384) (#("(" 0 1 (fontified nil)) . -4382) (4378 . 4383)) nil (25934 12939 707743 971000) 0 nil])
([nil nil ((4385 . 4394) (4384 . 4386) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4384) (undo-tree-id24823 . -1) (undo-tree-id24824 . -1) (4384 . 4385)) nil (25934 12939 707740 310000) 0 nil])
([nil nil ((apply -10 4396 4810 undo--wrap-and-run-primitive-undo 4396 4810 ((4697 . 4699) (4601 . 4603) (4536 . 4538) (4454 . 4456) (4408 . 4410) 4786))) nil (25934 12939 707712 346000) 0 nil])
([nil nil ((3439 . 3452) (t 25934 12939 767493 975000)) nil (25934 13577 172102 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3522 . 3523) (nil fontified nil 3522 . 3523) (nil fontified nil 3521 . 3522) (nil fontified nil 3505 . 3521) (nil fontified nil 3504 . 3505) (nil fontified nil 3485 . 3504) (nil fontified nil 3484 . 3485) (nil fontified nil 3483 . 3484) (nil fontified nil 3464 . 3483) (nil fontified nil 3452 . 3464) (3452 . 3523)) nil (25934 13577 172101 419000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3452) 3440) nil (25934 13577 172099 422000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3499) (undo-tree-id24852 . -1) (#("o" 0 1 (fontified t)) . -3500) (undo-tree-id24853 . -1) (#("v" 0 1 (fontified t)) . -3501) (undo-tree-id24854 . -1) (#("a" 0 1 (fontified t)) . -3502) (undo-tree-id24855 . -1) (#("r" 0 1 (fontified t)) . -3503) (undo-tree-id24856 . -1) (#("i" 0 1 (fontified t)) . -3504) (undo-tree-id24857 . -1) (#("a" 0 1 (fontified t)) . -3505) (undo-tree-id24858 . -1) (#("n" 0 1 (fontified t)) . -3506) (undo-tree-id24859 . -1) (#("c" 0 1 (fontified t)) . -3507) (undo-tree-id24860 . -1) (#("e" 0 1 (fontified t)) . -3508) (undo-tree-id24861 . -1) 3509) nil (25934 13577 172096 398000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 3501) (3500 . 3501) (3499 . 3501) (#("[" 0 1 (fontified nil)) . -3499) (3499 . 3500)) nil (25934 13577 172084 922000) 0 nil])
([nil nil ((3500 . 3503)) nil (25934 13577 172083 204000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3501) (undo-tree-id24850 . -1) (#("r" 0 1 (fontified t)) . -3502) (undo-tree-id24851 . -1) 3503) nil (25934 13577 172081 815000) 0 nil])
([nil nil ((3501 . 3506)) nil (25934 13577 172079 150000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . -3500) (undo-tree-id24844 . -1) (#("A" 0 1 (fontified t)) . -3501) (undo-tree-id24845 . -1) (#("R" 0 1 (fontified nil)) . -3502) (undo-tree-id24846 . -1) (#("_" 0 1 (fontified t)) . -3503) (undo-tree-id24847 . -1) (#("F" 0 1 (fontified t)) . -3504) (undo-tree-id24848 . -1) (#("F" 0 1 (fontified t)) . -3505) (undo-tree-id24849 . -1) 3506) nil (25934 13577 172077 107000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3499) (undo-tree-id24842 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3500) (undo-tree-id24843 . -1) 3501) nil (25934 13577 172070 187000) 0 nil])
([nil nil ((3499 . 3506)) nil (25934 13577 172067 426000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3505) (undo-tree-id24841 . -1) 3506) nil (25934 13577 172066 632000) 0 nil])
([nil nil ((3505 . 3509)) nil (25934 13577 172064 636000) 0 nil])
([nil nil ((3439 . 3452)) nil (25934 13577 172063 994000) 0 nil])
([nil nil ((3452 . 3459)) nil (25934 13577 172063 320000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3871 . 3872) (nil fontified nil 3871 . 3872) (nil fontified nil 3870 . 3871) (nil fontified nil 3863 . 3870) (nil fontified nil 3859 . 3863) (nil fontified nil 3858 . 3859) (nil fontified nil 3852 . 3858) (nil fontified nil 3851 . 3852) (nil fontified nil 3850 . 3851) (nil fontified nil 3844 . 3850) (nil fontified nil 3840 . 3844) (nil fontified nil 3839 . 3840) (nil fontified nil 3834 . 3839) (nil fontified nil 3832 . 3834) (nil fontified nil 3831 . 3832) (nil fontified nil 3830 . 3831) (nil fontified nil 3829 . 3830) (nil fontified nil 3811 . 3829) (nil fontified nil 3810 . 3811) (nil fontified nil 3771 . 3810) (nil fontified nil 3769 . 3771) (nil fontified nil 3768 . 3769) (nil fontified nil 3750 . 3768) (nil fontified nil 3749 . 3750) (nil fontified nil 3710 . 3749) (nil fontified nil 3708 . 3710) (nil fontified nil 3707 . 3708) (nil fontified nil 3689 . 3707) (nil fontified nil 3688 . 3689) (nil fontified nil 3649 . 3688) (nil fontified nil 3647 . 3649) (nil fontified nil 3646 . 3647) (nil fontified nil 3628 . 3646) (nil fontified nil 3627 . 3628) (nil fontified nil 3626 . 3627) (nil fontified nil 3625 . 3626) (nil fontified nil 3612 . 3625) (nil fontified nil 3611 . 3612) (nil fontified nil 3610 . 3611) (nil fontified nil 3609 . 3610) (nil fontified nil 3600 . 3609) (nil fontified nil 3588 . 3600) (nil fontified nil 3559 . 3588) (nil fontified nil 3557 . 3559) (nil fontified nil 3545 . 3557) (nil fontified nil 3532 . 3545) (nil fontified nil 3531 . 3532) (nil fontified nil 3530 . 3531) (nil fontified nil 3523 . 3530) (nil fontified nil 3519 . 3523) (nil fontified nil 3518 . 3519) (nil fontified nil 3512 . 3518) (nil fontified nil 3511 . 3512) (nil fontified nil 3510 . 3511) (nil fontified nil 3504 . 3510) (nil fontified nil 3500 . 3504) (nil fontified nil 3499 . 3500) (nil fontified nil 3494 . 3499) (nil fontified nil 3492 . 3494) (nil fontified nil 3491 . 3492) (nil fontified nil 3473 . 3491) (nil fontified nil 3472 . 3473) (nil fontified nil 3471 . 3472) (nil fontified nil 3458 . 3471) (nil fontified nil 3457 . 3458) (nil fontified nil 3456 . 3457) (nil fontified nil 3452 . 3456) (nil fontified nil 3440 . 3452) (3440 . 3872)) nil (25934 13577 172060 698000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3410)) nil (25934 13577 172049 179000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3484) (#("." 0 1 (fontified t)) . 3484) (#("0" 0 1 (fontified t)) . 3484) (#(" " 0 1 (fontified t)) . 3484) (#("," 0 1 (fontified t)) . 3484) (#("0" 0 1 (fontified t)) . 3484)) nil (25934 13577 172047 266000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3480) (undo-tree-id24837 . -1) (#(" " 0 1 (fontified t)) . -3481) (undo-tree-id24838 . -1) (#("0" 0 1 (fontified t)) . -3482) (undo-tree-id24839 . -1) (#("." 0 1 (fontified t)) . -3483) (undo-tree-id24840 . -1) 3484) nil (25934 13577 172044 698000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3471) (undo-tree-id24827 . -1) (#("0" 0 1 (fontified t)) . -3472) (undo-tree-id24828 . -1) (#("." 0 1 (fontified nil)) . -3473) (undo-tree-id24829 . -1) (#("0" 0 1 (fontified t)) . -3474) (undo-tree-id24830 . -1) (#("," 0 1 (fontified t)) . -3475) (undo-tree-id24831 . -1) (#(" " 0 1 (fontified t)) . -3476) (undo-tree-id24832 . -1) (#("0" 0 1 (fontified t)) . -3477) (undo-tree-id24833 . -1) (#("." 0 1 (fontified nil)) . -3478) (undo-tree-id24834 . -1) (#("0" 0 1 (fontified t)) . -3479) (undo-tree-id24835 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3480) (undo-tree-id24836 . -1) 3481) nil (25934 13577 172036 667000) 0 nil])
([nil nil ((3472 . 3482) (3471 . 3473) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3471) (3471 . 3472)) nil (25934 13577 172021 631000) 0 nil])
([nil nil ((#("            mean = torch.tensor((self.N_POP), dtype=self.FLOAT, device=self.device)
" 0 12 (fontified t) 12 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 37 (face font-lock-keyword-face fontified t) 37 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 46 (fontified t) 46 51 (fontified t) 51 52 (face font-lock-operator-face fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 62 (fontified t) 62 63 (fontified t rear-nonsticky t) 63 64 (fontified t) 64 70 (fontified t) 70 71 (face font-lock-operator-face fontified t) 71 75 (face font-lock-keyword-face fontified t) 75 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t) 83 84 (fontified t)) . 3439) (undo-tree-id24826 . -84) 3523) nil (25934 13577 172019 753000) 0 nil])
([nil nil ((3390 . 3391)) nil (25934 13577 171869 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3474 . 3475) (nil fontified nil 3474 . 3475) (nil fontified nil 3473 . 3474) (nil fontified nil 3466 . 3473) (nil fontified nil 3462 . 3466) (nil fontified nil 3461 . 3462) (nil fontified nil 3455 . 3461) (nil fontified nil 3454 . 3455) (nil fontified nil 3453 . 3454) (nil fontified nil 3447 . 3453) (nil fontified nil 3443 . 3447) (nil fontified nil 3442 . 3443) (nil fontified nil 3437 . 3442) (nil fontified nil 3435 . 3437) (nil fontified nil 3434 . 3435) (nil fontified nil 3428 . 3434) (nil fontified nil 3424 . 3428) (nil fontified nil 3423 . 3424) (nil fontified nil 3422 . 3423) (nil fontified nil 3409 . 3422) (nil fontified nil 3408 . 3409) (nil fontified nil 3407 . 3408) (nil fontified nil 3403 . 3407) (nil fontified nil 3391 . 3403) (3391 . 3475)) nil (25934 13577 171867 745000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3399) 3391) nil (25934 13577 171864 372000) 0 nil])
([nil nil ((3479 . 3500)) nil (25934 13577 171863 442000) 0 nil])
([nil nil ((3504 . 3506) (#("(" 0 1 (fontified nil)) . -3504) (3500 . 3505)) nil (25934 13577 171861 939000) 0 nil])
([nil nil ((3506 . 3515)) nil (25934 13577 171855 836000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3498) (undo-tree-id25037 . -1) (#("e" 0 1 (fontified t)) . -3499) (undo-tree-id25038 . -1) (#("n" 0 1 (fontified t)) . -3500) (undo-tree-id25039 . -1) (#("s" 0 1 (fontified t)) . -3501) (undo-tree-id25040 . -1) (#("o" 0 1 (fontified t)) . -3502) (undo-tree-id25041 . -1) (#("r" 0 1 (fontified t)) . -3503) (undo-tree-id25042 . -1) 3504 (t 25934 13577 313869 939000)) nil (25934 13668 836484 294000) 0 nil])
([nil nil ((3498 . 3502)) nil (25934 13668 836477 162000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3500) (undo-tree-id25035 . -1) (#("e" 0 1 (fontified t)) . -3501) (undo-tree-id25036 . -1) 3502) nil (25934 13668 836475 971000) 0 nil])
([nil nil ((3500 . 3501)) nil (25934 13668 836473 444000) 0 nil])
([nil nil ((3502 . 3508)) nil (25934 13668 836472 959000) 0 nil])
([nil nil ((3508 . 3512)) nil (25934 13668 836472 495000) 0 nil])
([nil nil ((3512 . 3514)) nil (25934 13668 836472 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3549 . 3550) (nil fontified nil 3543 . 3550) (nil fontified nil 3539 . 3543) (nil fontified nil 3538 . 3539) (nil fontified nil 3532 . 3538) (nil fontified nil 3531 . 3532) (nil fontified nil 3530 . 3531) (nil fontified nil 3524 . 3530) (nil fontified nil 3520 . 3524) (nil fontified nil 3519 . 3520) (nil fontified nil 3514 . 3519) (3514 . 3550)) nil (25934 13668 836471 226000) 0 nil])
([nil nil ((3399 . 3402)) nil (25934 13668 836469 513000) 0 nil])
([nil nil ((3482 . 3485)) nil (25934 13668 836469 81000) 0 nil])
([nil nil ((#("ariance" 0 7 (face font-lock-variable-name-face fontified t)) . 3488)) nil (25934 13668 836468 328000) 0 nil])
([nil nil ((3399 . 3400)) nil (25934 13668 836467 648000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3399) (undo-tree-id25034 . -1) 3400) nil (25934 13668 836466 911000) 0 nil])
([nil nil ((3399 . 3404)) nil (25934 13668 836465 236000) 0 nil])
([nil nil ((3487 . 3492)) nil (25934 13668 836464 660000) 0 nil])
([nil nil ((#("        self.ff_mean = torch.tensor((self.N_POP), dtype=self.FLOAT, device=self.device)
        self.ff_cov = torch.eye(self.N_POP, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-variable-name-face fontified t) 16 20 (face font-lock-variable-name-face fontified t) 20 21 (fontified t) 21 22 (face font-lock-operator-face fontified t) 22 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 41 (face font-lock-keyword-face fontified t) 41 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t) 48 50 (fontified t) 50 55 (fontified t) 55 56 (face font-lock-operator-face fontified t) 56 60 (face font-lock-keyword-face fontified t) 60 66 (fontified t) 66 67 (fontified t rear-nonsticky t) 67 68 (fontified t) 68 74 (fontified t) 74 75 (face font-lock-operator-face fontified t) 75 79 (face font-lock-keyword-face fontified t) 79 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-1-face) fontified t) 87 88 (rear-nonsticky t fontified t) 88 96 (fontified t) 96 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 104 (face font-lock-variable-name-face fontified t) 104 107 (face font-lock-variable-name-face fontified t) 107 108 (fontified t) 108 109 (face font-lock-operator-face fontified t) 109 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 124 (face font-lock-keyword-face fontified t) 124 132 (fontified t) 132 137 (fontified t) 137 138 (face font-lock-operator-face fontified t) 138 142 (face font-lock-keyword-face fontified t) 142 148 (fontified t) 148 149 (fontified t rear-nonsticky t) 149 150 (fontified t) 150 156 (fontified t) 156 157 (face font-lock-operator-face fontified t) 157 161 (face font-lock-keyword-face fontified t) 161 167 (fontified t) 167 168 (rear-nonsticky t fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t) 169 170 (fontified t)) . 3391) (undo-tree-id25026 . -169) (undo-tree-id25027 . -169) (undo-tree-id25028 . -96) (undo-tree-id25029 . -169) (undo-tree-id25030 . -50) (undo-tree-id25031 . -132) (undo-tree-id25032 . -169) (undo-tree-id25033 . -170) 3561) nil (25934 13668 836463 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14824 . 14825) (nil fontified nil 14824 . 14825) (nil fontified nil 14823 . 14824) (nil fontified nil 14822 . 14823) (nil fontified nil 14816 . 14822) (nil fontified nil 14812 . 14816) (nil fontified nil 14811 . 14812) (nil fontified nil 14805 . 14811) (nil fontified nil 14804 . 14805) (nil fontified nil 14803 . 14804) (nil fontified nil 14797 . 14803) (nil fontified nil 14793 . 14797) (nil fontified nil 14792 . 14793) (nil fontified nil 14787 . 14792) (nil fontified nil 14779 . 14787) (nil fontified nil 14775 . 14779) (nil fontified nil 14774 . 14775) (nil fontified nil 14764 . 14774) (nil fontified nil 14763 . 14764) (nil fontified nil 14762 . 14763) (nil fontified nil 14759 . 14762) (nil fontified nil 14756 . 14759) (nil fontified nil 14755 . 14756) (nil fontified nil 14751 . 14755) (nil fontified nil 14743 . 14751) (nil fontified nil 14742 . 14743) (nil fontified nil 14741 . 14742) (nil fontified nil 14734 . 14741) (nil fontified nil 14730 . 14734) (nil fontified nil 14729 . 14730) (nil fontified nil 14723 . 14729) (nil fontified nil 14722 . 14723) (nil fontified nil 14721 . 14722) (nil fontified nil 14715 . 14721) (nil fontified nil 14711 . 14715) (nil fontified nil 14710 . 14711) (nil fontified nil 14705 . 14710) (nil fontified nil 14703 . 14705) (nil fontified nil 14702 . 14703) (nil fontified nil 14696 . 14702) (nil fontified nil 14692 . 14696) (nil fontified nil 14691 . 14692) (nil fontified nil 14690 . 14691) (nil fontified nil 14677 . 14690) (nil fontified nil 14676 . 14677) (nil fontified nil 14675 . 14676) (nil fontified nil 14671 . 14675) (nil fontified nil 14668 . 14671) (nil fontified nil 14667 . 14668) (nil fontified nil 14663 . 14667) (nil fontified nil 14655 . 14663) (14655 . 14825)) nil (25934 13668 836453 428000) 0 nil])
([nil nil ((14654 . 14667)) nil (25934 13668 836444 815000) 0 nil])
([nil nil ((14676 . 14680) 14668) nil (25934 13668 836443 760000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14676) (undo-tree-id25025 . -4) 14680) nil (25934 13668 836442 648000) 0 nil])
([nil nil ((#("            mean = 
" 0 12 (fontified t) 12 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 3780) (undo-tree-id25018 . -20) (undo-tree-id25019 . -19) (undo-tree-id25020 . -18) (undo-tree-id25021 . -19) (undo-tree-id25022 . -19) (undo-tree-id25023 . -20) (undo-tree-id25024 . -20)) nil (25934 13668 836440 171000) 0 nil])
([nil nil ((#("            # Define the covariance matrix
            covariance = torch.tensor([[1.0, 0.0, 0.0, 0.0],
                                       [0.0, 1.0, 0.0, 0.0],
                                       [0.0, 0.0, 1.0, 0.0],
                                       [0.0, 0.0, 0.0, 1.0],], dtype=self.FLOAT, device=self.device)
" 0 12 (fontified t) 12 14 (face font-lock-comment-delimiter-face fontified t) 14 43 (face font-lock-comment-face fontified t) 43 55 (fontified t) 55 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (fontified t) 66 67 (face font-lock-operator-face fontified t) 67 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-3-face) fontified t) 83 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-3-face) fontified t) 102 104 (fontified t) 104 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-3-face) fontified t) 144 162 (fontified t) 162 163 (face (rainbow-delimiters-depth-3-face) fontified t) 163 165 (fontified t) 165 204 (fontified t) 204 205 (face (rainbow-delimiters-depth-3-face) fontified t) 205 223 (fontified t) 223 224 (face (rainbow-delimiters-depth-3-face) fontified t) 224 226 (fontified t) 226 265 (fontified t) 265 266 (face (rainbow-delimiters-depth-3-face) fontified t) 266 284 (fontified t) 284 285 (face (rainbow-delimiters-depth-3-face) fontified t) 285 286 (fontified t) 286 287 (face (rainbow-delimiters-depth-2-face) fontified t) 287 289 (fontified t) 289 294 (fontified t) 294 295 (face font-lock-operator-face fontified t) 295 299 (face font-lock-keyword-face fontified t) 299 305 (fontified t) 305 306 (fontified t rear-nonsticky t) 306 307 (fontified t) 307 313 (fontified t) 313 314 (face font-lock-operator-face fontified t) 314 318 (face font-lock-keyword-face fontified t) 318 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-1-face) fontified t) 326 327 (fontified t rear-nonsticky t)) . 3453) (undo-tree-id25010 . -327) (undo-tree-id25011 . -327) (undo-tree-id25012 . -327) (undo-tree-id25013 . -327) (undo-tree-id25014 . -327) (undo-tree-id25015 . -327) (undo-tree-id25016 . -327) (undo-tree-id25017 . -327)) nil (25934 13668 836430 621000) 0 nil])
([nil nil ((#("            multivariate_normal = MultivariateNormal(mean, covariance)
" 0 12 (fontified t) 12 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face font-lock-operator-face fontified t) 33 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 71 (fontified t rear-nonsticky t)) . 3453) (undo-tree-id24975 . -12) (undo-tree-id24976 . -12) (undo-tree-id24977 . -12) (undo-tree-id24978 . -12) (undo-tree-id24979 . -12) (undo-tree-id24980 . -12) (undo-tree-id24981 . -71) (undo-tree-id24982 . -71) (undo-tree-id24983 . -71) (undo-tree-id24984 . -71) (undo-tree-id24985 . -71) (undo-tree-id24986 . -71) (undo-tree-id24987 . -71) (undo-tree-id24988 . -71) (undo-tree-id24989 . -71) (undo-tree-id24990 . -71) (undo-tree-id24991 . -71) (undo-tree-id24992 . -71) (undo-tree-id24993 . -71) (undo-tree-id24994 . -71) (undo-tree-id24995 . -71) (undo-tree-id24996 . -71) (undo-tree-id24997 . -71) (undo-tree-id24998 . -71) (undo-tree-id24999 . -71) (undo-tree-id25000 . -71) (undo-tree-id25001 . -71) (undo-tree-id25002 . -12) (undo-tree-id25003 . -71) (undo-tree-id25004 . -71) (undo-tree-id25005 . -71) (undo-tree-id25006 . -71) (undo-tree-id25007 . -71) (undo-tree-id25008 . -71) (undo-tree-id25009 . -71) 3524) nil (25934 13668 836419 911000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3452) (undo-tree-id24862 . -1) (undo-tree-id24863 . -1) (undo-tree-id24864 . -1) (undo-tree-id24865 . -1) (undo-tree-id24866 . -1) (undo-tree-id24867 . -1) (undo-tree-id24868 . -1) (undo-tree-id24869 . -1) (undo-tree-id24870 . -1) (undo-tree-id24871 . -1) (undo-tree-id24872 . -1) (undo-tree-id24873 . -1) (undo-tree-id24874 . -1) (undo-tree-id24875 . -1) (undo-tree-id24876 . -1) (undo-tree-id24877 . -1) (undo-tree-id24878 . -1) (undo-tree-id24879 . -1) (undo-tree-id24880 . -1) (undo-tree-id24881 . -1) (undo-tree-id24882 . -1) (undo-tree-id24883 . -1) (undo-tree-id24884 . -1) (undo-tree-id24885 . -1) (undo-tree-id24886 . -1) (undo-tree-id24887 . -1) (undo-tree-id24888 . -1) (undo-tree-id24889 . -1) (undo-tree-id24890 . -1) (undo-tree-id24891 . -1) (undo-tree-id24892 . -1) (undo-tree-id24893 . -1) (undo-tree-id24894 . -1) (undo-tree-id24895 . -1) (undo-tree-id24896 . -1) (undo-tree-id24897 . -1) (undo-tree-id24898 . -1) (undo-tree-id24899 . -1) (undo-tree-id24900 . -1) (undo-tree-id24901 . -1) (undo-tree-id24902 . -1) (undo-tree-id24903 . -1) (undo-tree-id24904 . -1) (undo-tree-id24905 . -1) (undo-tree-id24906 . -1) (undo-tree-id24907 . -1) (undo-tree-id24908 . -1) (undo-tree-id24909 . -1) (undo-tree-id24910 . -1) (undo-tree-id24911 . -1) (undo-tree-id24912 . -1) (undo-tree-id24913 . -1) (undo-tree-id24914 . -1) (undo-tree-id24915 . -1) (undo-tree-id24916 . -1) (undo-tree-id24917 . -1) (undo-tree-id24918 . -1) (undo-tree-id24919 . -1) (undo-tree-id24920 . -1) (undo-tree-id24921 . -1) (undo-tree-id24922 . -1) (undo-tree-id24923 . -1) (undo-tree-id24924 . -1) (undo-tree-id24925 . -1) (undo-tree-id24926 . -1) (undo-tree-id24927 . -1) (undo-tree-id24928 . -1) (undo-tree-id24929 . -1) (undo-tree-id24930 . -1) (undo-tree-id24931 . -1) (undo-tree-id24932 . -1) (undo-tree-id24933 . -1) (undo-tree-id24934 . -1) (undo-tree-id24935 . -1) (undo-tree-id24936 . -1) (undo-tree-id24937 . -1) (undo-tree-id24938 . -1) (undo-tree-id24939 . -1) (undo-tree-id24940 . -1) (undo-tree-id24941 . -1) (undo-tree-id24942 . -1) (undo-tree-id24943 . -1) (undo-tree-id24944 . -1) (undo-tree-id24945 . -1) (undo-tree-id24946 . -1) (undo-tree-id24947 . -1) (undo-tree-id24948 . -1) (undo-tree-id24949 . -1) (undo-tree-id24950 . -1) (undo-tree-id24951 . -1) (undo-tree-id24952 . -1) (undo-tree-id24953 . -1) (undo-tree-id24954 . -1) (undo-tree-id24955 . -1) (undo-tree-id24956 . -1) (undo-tree-id24957 . -1) (undo-tree-id24958 . -1) (undo-tree-id24959 . -1) (undo-tree-id24960 . -1) (undo-tree-id24961 . -1) (undo-tree-id24962 . -1) (undo-tree-id24963 . -1) (undo-tree-id24964 . -1) (undo-tree-id24965 . -1) (undo-tree-id24966 . -1) (undo-tree-id24967 . -1) (undo-tree-id24968 . -1) (undo-tree-id24969 . -1) (undo-tree-id24970 . -1) (undo-tree-id24971 . -1) (undo-tree-id24972 . -1) (undo-tree-id24973 . -1) (undo-tree-id24974 . -1) 3453) nil (25934 13668 836374 370000) 0 nil])
([nil nil ((nil fontified nil 14489 . 14490) (nil fontified nil 14488 . 14489) (nil fontified nil 14472 . 14488) (nil fontified nil 14471 . 14472) (nil fontified nil 14452 . 14471) (nil fontified nil 14451 . 14452) (nil fontified nil 14450 . 14451) (nil fontified nil 14431 . 14450) (nil fontified nil 14419 . 14431) (14419 . 14490) (t 25934 13668 926258 396000)) nil (25934 13683 78429 882000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14427) 14419) nil (25934 13683 78426 970000) 0 nil])
([nil nil ((14420 . 14428) (#("        " 0 8 (fontified nil)) . 14419) (undo-tree-id25043 . -8) (14418 . 14428)) nil (25934 13683 78424 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14458 . 14459) (nil fontified nil 14457 . 14459) (nil fontified nil 14456 . 14457) (nil fontified nil 14450 . 14456) (nil fontified nil 14446 . 14450) (nil fontified nil 14445 . 14446) (nil fontified nil 14440 . 14445) (nil fontified nil 14439 . 14440) (nil fontified nil 14437 . 14439) (nil fontified nil 14430 . 14437) (nil fontified nil 14427 . 14430) (nil fontified nil 14419 . 14427) (14419 . 14459)) nil (25934 13683 78410 636000) 0 nil])
([nil nil ((14419 . 14420)) nil (25934 13683 78400 280000) 0 nil])
([nil nil ((14460 . 14472) (t 25934 13683 143560 199000)) nil (25934 13724 106455 915000) 0 nil])
([nil nil ((14472 . 14479)) nil (25934 13724 106454 685000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -14477) (undo-tree-id25045 . -1) (#("F" 0 1 (fontified t)) . -14478) (undo-tree-id25046 . -1) 14479) nil (25934 13724 106452 816000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14485) (14484 . 14485) (14483 . 14485) (#("[" 0 1 (fontified nil)) . -14483) (14477 . 14484)) nil (25934 13724 106442 545000) 0 nil])
([nil nil ((14484 . 14489)) nil (25934 13724 106438 493000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14492) (14491 . 14492) (14490 . 14492) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -14490) (14490 . 14491)) nil (25934 13724 106435 173000) 0 nil])
([nil nil ((14491 . 14497)) nil (25934 13724 106430 958000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -14496) (undo-tree-id25044 . -1) 14497) nil (25934 13724 106429 419000) 0 nil])
([nil nil ((14497 . 14500)) nil (25934 13724 106416 985000) 0 nil])
([nil nil ((14500 . 14506)) nil (25934 13724 106416 23000) 0 nil])
([nil nil ((14500 . 14505)) nil (25934 13724 106414 983000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14513) (14512 . 14513) (14511 . 14513) (#("[" 0 1 (fontified nil)) . -14511) (14511 . 14512)) nil (25934 13724 106412 170000) 0 nil])
([nil nil ((14512 . 14517)) nil (25934 13724 106403 228000) 0 nil])
([nil nil ((14419 . 14427) (t 25934 13724 199319 458000)) nil (25934 13742 838565 494000) 0 nil])
([nil nil ((14296 . 14297) (t 25934 13743 65046 894000)) nil (25934 13747 954504 71000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 14297) (t 25934 13748 45502 928000)) nil (25934 13753 15379 150000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14296) (undo-tree-id25074 . -1) (undo-tree-id25075 . -1) (undo-tree-id25076 . -1) (undo-tree-id25077 . -1) (undo-tree-id25078 . -1) (undo-tree-id25079 . -1) (undo-tree-id25080 . -1) (undo-tree-id25081 . -1) (undo-tree-id25082 . -1) (undo-tree-id25083 . -1) (undo-tree-id25084 . -1) (undo-tree-id25085 . -1) (undo-tree-id25086 . -1) (undo-tree-id25087 . -1) (undo-tree-id25088 . -1) (undo-tree-id25089 . -1) (undo-tree-id25090 . -1) (undo-tree-id25091 . -1) (undo-tree-id25092 . -1) (undo-tree-id25093 . -1) (undo-tree-id25094 . -1) (undo-tree-id25095 . -1) (undo-tree-id25096 . -1) (undo-tree-id25097 . -1) (undo-tree-id25098 . -1) (undo-tree-id25099 . -1) (undo-tree-id25100 . -1) (undo-tree-id25101 . -1) (undo-tree-id25102 . -1) (undo-tree-id25103 . -1) (undo-tree-id25104 . -1) (undo-tree-id25105 . -1) (undo-tree-id25106 . -1) (undo-tree-id25107 . -1) (undo-tree-id25108 . -1) (undo-tree-id25109 . -1) (undo-tree-id25110 . -1) (undo-tree-id25111 . -1) (undo-tree-id25112 . -1) (undo-tree-id25113 . -1) (undo-tree-id25114 . -1) (undo-tree-id25115 . -1) (undo-tree-id25116 . -1) (undo-tree-id25117 . -1) (undo-tree-id25118 . -1) (undo-tree-id25119 . -1) (undo-tree-id25120 . -1) (undo-tree-id25121 . -1) (undo-tree-id25122 . -1) (undo-tree-id25123 . -1) (undo-tree-id25124 . -1) (undo-tree-id25125 . -1) (undo-tree-id25126 . -1) (undo-tree-id25127 . -1) (undo-tree-id25128 . -1) (undo-tree-id25129 . -1) (undo-tree-id25130 . -1) (undo-tree-id25131 . -1) (undo-tree-id25132 . -1) (undo-tree-id25133 . -1) (undo-tree-id25134 . -1) (undo-tree-id25135 . -1) (undo-tree-id25136 . -1) (undo-tree-id25137 . -1) (undo-tree-id25138 . -1) (undo-tree-id25139 . -1) (undo-tree-id25140 . -1) (undo-tree-id25141 . -1) (undo-tree-id25142 . -1) (undo-tree-id25143 . -1) (undo-tree-id25144 . -1) (undo-tree-id25145 . -1) (undo-tree-id25146 . -1) (undo-tree-id25147 . -1) (undo-tree-id25148 . -1) (undo-tree-id25149 . -1) (undo-tree-id25150 . -1) (undo-tree-id25151 . -1) (undo-tree-id25152 . -1) (undo-tree-id25153 . -1) (undo-tree-id25154 . -1) (undo-tree-id25155 . -1) (undo-tree-id25156 . -1) (undo-tree-id25157 . -1) (undo-tree-id25158 . -1) (undo-tree-id25159 . -1) (undo-tree-id25160 . -1) (undo-tree-id25161 . -1) (undo-tree-id25162 . -1) (undo-tree-id25163 . -1) (undo-tree-id25164 . -1) (undo-tree-id25165 . -1) (undo-tree-id25166 . -1) (undo-tree-id25167 . -1) (undo-tree-id25168 . -1) (undo-tree-id25169 . -1) (undo-tree-id25170 . -1) (undo-tree-id25171 . -1) (undo-tree-id25172 . -1) (undo-tree-id25173 . -1) (undo-tree-id25174 . -1) (undo-tree-id25175 . -1) (undo-tree-id25176 . -1) (undo-tree-id25177 . -1) (undo-tree-id25178 . -1) (undo-tree-id25179 . -1) (undo-tree-id25180 . -1) (undo-tree-id25181 . -1) (undo-tree-id25182 . -1) (undo-tree-id25183 . -1) (undo-tree-id25184 . -1) (undo-tree-id25185 . -1) (undo-tree-id25186 . -1) (undo-tree-id25187 . -1) (undo-tree-id25188 . -1) (undo-tree-id25189 . -1) (undo-tree-id25190 . -1) (undo-tree-id25191 . -1) (undo-tree-id25192 . -1) (undo-tree-id25193 . -1) (undo-tree-id25194 . -1) (undo-tree-id25195 . -1) (undo-tree-id25196 . -1) (undo-tree-id25197 . -1) (undo-tree-id25198 . -1) (undo-tree-id25199 . -1) (undo-tree-id25200 . -1) (undo-tree-id25201 . -1) (undo-tree-id25202 . -1) (undo-tree-id25203 . -1) (undo-tree-id25204 . -1) (undo-tree-id25205 . -1) (undo-tree-id25206 . -1) (undo-tree-id25207 . -1) (undo-tree-id25208 . -1) (undo-tree-id25209 . -1) (undo-tree-id25210 . -1) (undo-tree-id25211 . -1) (undo-tree-id25212 . -1) (undo-tree-id25213 . -1) (undo-tree-id25214 . -1) (undo-tree-id25215 . -1) (undo-tree-id25216 . -1) (undo-tree-id25217 . -1) (undo-tree-id25218 . -1) (undo-tree-id25219 . -1) (undo-tree-id25220 . -1) (undo-tree-id25221 . -1) (undo-tree-id25222 . -1) (undo-tree-id25223 . -1) (undo-tree-id25224 . -1) (undo-tree-id25225 . -1) (undo-tree-id25226 . -1) (undo-tree-id25227 . -1) 14297) nil (25934 13753 15351 594000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -14285) (undo-tree-id25047 . -1) (undo-tree-id25048 . -1) (undo-tree-id25049 . -1) (undo-tree-id25050 . -1) (undo-tree-id25051 . -1) (undo-tree-id25052 . -1) (undo-tree-id25053 . -1) (undo-tree-id25054 . -1) (undo-tree-id25055 . -1) (undo-tree-id25056 . -1) (undo-tree-id25057 . -1) (undo-tree-id25058 . -1) (undo-tree-id25059 . -1) (undo-tree-id25060 . -1) (undo-tree-id25061 . -1) (undo-tree-id25062 . -1) (undo-tree-id25063 . -1) (undo-tree-id25064 . -1) (undo-tree-id25065 . -1) (undo-tree-id25066 . -1) (undo-tree-id25067 . -1) (undo-tree-id25068 . -1) (undo-tree-id25069 . -1) (undo-tree-id25070 . -1) (undo-tree-id25071 . -1) (undo-tree-id25072 . -1) (undo-tree-id25073 . -1) 14286) nil (25934 13753 14334 923000) 0 nil])
([nil nil ((14542 . 14546) 14534 (t 25934 13753 65962 626000)) nil (25934 13778 889016 166000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14542) (undo-tree-id25275 . -4) 14546) nil (25934 13778 889014 360000) 0 nil])
([nil nil ((14542 . 14545)) nil (25934 13778 889011 813000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -14595) (undo-tree-id25268 . -1) (#("r" 0 1 (fontified t)) . -14596) (undo-tree-id25269 . -1) (#("i" 0 1 (fontified t)) . -14597) (undo-tree-id25270 . -1) (#("a" 0 1 (fontified t)) . -14598) (undo-tree-id25271 . -1) (#("n" 0 1 (fontified t)) . -14599) (undo-tree-id25272 . -1) (#("c" 0 1 (fontified t)) . -14600) (undo-tree-id25273 . -1) (#("e" 0 1 (fontified t)) . -14601) (undo-tree-id25274 . -1) 14602) nil (25934 13778 889007 850000) 0 nil])
([nil nil ((14592 . 14595)) nil (25934 13778 888990 501000) 0 nil])
([nil nil ((14586 . 14590)) nil (25934 13778 888988 981000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -14589) (undo-tree-id25228 . -1) (undo-tree-id25229 . -1) (undo-tree-id25230 . -1) (undo-tree-id25231 . -1) (undo-tree-id25232 . -1) (undo-tree-id25233 . -1) (undo-tree-id25234 . -1) (undo-tree-id25235 . -1) (undo-tree-id25236 . -1) (undo-tree-id25237 . -1) (undo-tree-id25238 . -1) (undo-tree-id25239 . -1) (undo-tree-id25240 . -1) (undo-tree-id25241 . -1) (undo-tree-id25242 . -1) (undo-tree-id25243 . -1) (undo-tree-id25244 . -1) (undo-tree-id25245 . -1) (undo-tree-id25246 . -1) (undo-tree-id25247 . -1) (undo-tree-id25248 . -1) (undo-tree-id25249 . -1) (undo-tree-id25250 . -1) (undo-tree-id25251 . -1) (undo-tree-id25252 . -1) (undo-tree-id25253 . -1) (undo-tree-id25254 . -1) (undo-tree-id25255 . -1) (undo-tree-id25256 . -1) (undo-tree-id25257 . -1) (undo-tree-id25258 . -1) (undo-tree-id25259 . -1) (undo-tree-id25260 . -1) (undo-tree-id25261 . -1) (undo-tree-id25262 . -1) (undo-tree-id25263 . -1) (undo-tree-id25264 . -1) (undo-tree-id25265 . -1) (undo-tree-id25266 . -1) (undo-tree-id25267 . -1) 14590) nil (25934 13778 888978 773000) 0 nil])
([nil nil ((14542 . 14546) 14534 (t 25934 13778 972334 738000)) nil (25934 13783 790738 958000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14542) (undo-tree-id25276 . -4) (undo-tree-id25277 . -4) (undo-tree-id25278 . -4) (undo-tree-id25279 . -4) (undo-tree-id25280 . -4) (undo-tree-id25281 . -4) (undo-tree-id25282 . -4) (undo-tree-id25283 . -4) (undo-tree-id25284 . -4) (undo-tree-id25285 . -4) (undo-tree-id25286 . -4) (undo-tree-id25287 . -4) (undo-tree-id25288 . -4) (undo-tree-id25289 . -4) (undo-tree-id25290 . -4) (undo-tree-id25291 . -4) (undo-tree-id25292 . -4) (undo-tree-id25293 . -4) (undo-tree-id25294 . -4) (undo-tree-id25295 . -4) (undo-tree-id25296 . -4) (undo-tree-id25297 . -4) (undo-tree-id25298 . -4) (undo-tree-id25299 . -4) (undo-tree-id25300 . -4) (undo-tree-id25301 . -4) (undo-tree-id25302 . -4) (undo-tree-id25303 . -4) (undo-tree-id25304 . -4) (undo-tree-id25305 . -4) (undo-tree-id25306 . -4) (undo-tree-id25307 . -4) (undo-tree-id25308 . -4) (undo-tree-id25309 . -4) (undo-tree-id25310 . -4) (undo-tree-id25311 . -4) (undo-tree-id25312 . -4) (undo-tree-id25313 . -4) (undo-tree-id25314 . -4) (undo-tree-id25315 . -4) (undo-tree-id25316 . -4) (undo-tree-id25317 . -4) 14546) nil (25934 13783 790719 518000) 0 nil])
([nil nil ((14542 . 14547)) nil (25934 13783 790550 322000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -14555) (undo-tree-id25323 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -14556) (undo-tree-id25324 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -14557) (undo-tree-id25325 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -14558) (undo-tree-id25326 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -14559) (undo-tree-id25327 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -14560) (undo-tree-id25328 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -14561) (undo-tree-id25329 . -1) 14562 (t 25934 13783 864782 713000)) nil (25934 13791 371533 976000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -14551) (undo-tree-id25319 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -14552) (undo-tree-id25320 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -14553) (undo-tree-id25321 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -14554) (undo-tree-id25322 . -1) 14555) nil (25934 13791 371524 51000) 0 nil])
([nil nil ((14551 . 14552)) nil (25934 13791 371518 253000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -14551) (undo-tree-id25318 . -1) 14552) nil (25934 13791 371515 683000) 0 nil])
([nil nil ((14551 . 14555)) nil (25934 13791 371500 309000) 0 nil])
([nil nil ((3390 . 3398) (t 25934 13791 493481 234000)) nil (25934 13909 566940 615000) 0 nil])
([nil nil ((3306 . 3314) (#("        " 0 8 (fontified nil)) . 3305) (undo-tree-id25343 . -8) (3313 . 3314)) nil (25934 13909 566937 157000) 0 nil])
([nil nil ((3399 . 3402)) nil (25934 13909 566931 148000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3399) (undo-tree-id25340 . -1) (#("a" 0 1 (fontified t)) . -3400) (undo-tree-id25341 . -1) (#("m" 0 1 (fontified t)) . -3401) (undo-tree-id25342 . -1) 3402) nil (25934 13909 566928 595000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3433 . 3434) (nil fontified nil 3432 . 3434) (nil fontified nil 3431 . 3432) (nil fontified nil 3430 . 3431) (nil fontified nil 3427 . 3430) (nil fontified nil 3426 . 3427) (nil fontified nil 3425 . 3426) (nil fontified nil 3399 . 3425) (3399 . 3434)) nil (25934 13909 566922 344000) 0 nil])
([nil nil ((3391 . 3392)) nil (25934 13909 566919 352000) 0 nil])
([nil nil ((#("        multivariate_normal.sample((Nb,)).T
" 0 8 (fontified t) 8 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 42 (fontified t) 42 43 (rear-nonsticky t fontified t) 43 44 (fontified t)) . -3392) (undo-tree-id25330 . -44) (undo-tree-id25331 . -44) (undo-tree-id25332 . -44) (undo-tree-id25333 . -44) (undo-tree-id25334 . -44) (undo-tree-id25335 . -8) (undo-tree-id25336 . -8) (undo-tree-id25337 . -8) (undo-tree-id25338 . -8) (undo-tree-id25339 . -44) 3436) nil (25934 13909 566917 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3852 . 3853) (nil fontified nil 3850 . 3853) (nil fontified nil 3845 . 3850) (nil fontified nil 3844 . 3845) (nil fontified nil 3843 . 3844) (nil fontified nil 3836 . 3843) (nil fontified nil 3832 . 3836) (nil fontified nil 3831 . 3832) (nil fontified nil 3797 . 3831) (nil fontified nil 3731 . 3797) (nil fontified nil 3727 . 3731) (nil fontified nil 3726 . 3727) (nil fontified nil 3635 . 3726) (nil fontified nil 3633 . 3635) (nil fontified nil 3632 . 3633) (nil fontified nil 3631 . 3632) (nil fontified nil 3630 . 3631) (nil fontified nil 3625 . 3630) (nil fontified nil 3624 . 3625) (nil fontified nil 3621 . 3624) (nil fontified nil 3617 . 3621) (nil fontified nil 3616 . 3617) (nil fontified nil 3615 . 3616) (nil fontified nil 3550 . 3615) (nil fontified nil 3525 . 3550) (nil fontified nil 3523 . 3525) (nil fontified nil 3522 . 3523) (nil fontified nil 3517 . 3522) (nil fontified nil 3516 . 3517) (nil fontified nil 3509 . 3516) (nil fontified nil 3505 . 3509) (nil fontified nil 3504 . 3505) (nil fontified nil 3462 . 3504) (nil fontified nil 3452 . 3462) (nil fontified nil 3415 . 3452) (nil fontified nil 3410 . 3415) (nil fontified nil 3409 . 3410) (nil fontified nil 3405 . 3409) (nil fontified nil 3404 . 3405) (nil fontified nil 3392 . 3404) (3392 . 3853)) nil (25934 13909 566868 695000) 0 nil])
([nil nil ((3392 . 3400)) nil (25934 13909 566862 504000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#("
" 0 1 (fontified t)) . 3422)) nil (25934 13909 566857 877000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566850 191000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566843 421000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified nil)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566836 659000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422) (#(" " 0 1 (fontified t)) . 3422)) nil (25934 13909 566833 705000) 0 nil])
([nil nil ((3422 . 3423)) nil (25934 13909 566832 889000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#("
" 0 1 (fontified t)) . 3446)) nil (25934 13909 566827 683000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446)) nil (25934 13909 566820 243000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446)) nil (25934 13909 566813 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446)) nil (25934 13909 566808 489000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446) (#(" " 0 1 (fontified nil)) . 3446) (#(" " 0 1 (fontified t)) . 3446)) nil (25934 13909 566804 555000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#("
" 0 1 (fontified t)) . 3470)) nil (25934 13909 566797 588000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470)) nil (25934 13909 566790 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470)) nil (25934 13909 566783 463000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified nil)) . 3470)) nil (25934 13909 566775 884000) 0 nil])
([nil nil ((#("d" 0 1 (fontified nil)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified t)) . 3470) (#(" " 0 1 (fontified nil)) . 3470)) nil (25934 13909 566771 437000) 0 nil])
([nil nil ((3470 . 3471)) nil (25934 13909 566769 922000) 0 nil])
([nil nil ((3471 . 3472)) nil (25934 13909 566769 135000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#("
" 0 1 (fontified t)) . 3488)) nil (25934 13909 566763 985000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified nil)) . 3488)) nil (25934 13909 566756 741000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488)) nil (25934 13909 566748 587000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified nil)) . 3488) (#(" " 0 1 (fontified t)) . 3488)) nil (25934 13909 566740 177000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488) (#(" " 0 1 (fontified t)) . 3488)) nil (25934 13909 566735 370000) 0 nil])
([nil nil ((3488 . 3489)) nil (25934 13909 566733 727000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3517) 3509) nil (25934 13909 566725 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3450 . 3451) (nil fontified nil 3448 . 3451) (nil fontified nil 3447 . 3448) (nil fontified nil 3446 . 3447) (nil fontified nil 3443 . 3446) (nil fontified nil 3442 . 3443) (nil fontified nil 3441 . 3442) (nil fontified nil 3414 . 3441) (nil fontified nil 3413 . 3414) (nil fontified nil 3412 . 3413) (nil fontified nil 3409 . 3412) (nil fontified nil 3408 . 3409) (nil fontified nil 3404 . 3408) (nil fontified nil 3392 . 3404) (3392 . 3451) (t 25934 13909 724307 18000)) nil (25934 14149 975365 541000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3400) 3392) nil (25934 14149 975358 515000) 0 nil])
([nil nil ((3446 . 3455)) nil (25934 14149 975357 28000) 0 nil])
([nil nil ((3411 . 3414)) nil (25934 14149 975355 501000) 0 nil])
([nil nil ((#("variate_normal" 0 14 (fontified t)) . 3419)) nil (25934 14149 975353 768000) 0 nil])
([nil nil ((3419 . 3426)) nil (25934 14149 975352 440000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -3414) (undo-tree-id25363 . -1) (#("u" 0 1 (fontified t)) . -3415) (undo-tree-id25364 . -1) (#("l" 0 1 (fontified t)) . -3416) (undo-tree-id25365 . -1) (#("t" 0 1 (fontified t)) . -3417) (undo-tree-id25366 . -1) (#("i" 0 1 (fontified t)) . -3418) (undo-tree-id25367 . -1) (#("_" 0 1 (fontified t)) . -3419) (undo-tree-id25368 . -1) 3420) nil (25934 14149 975348 551000) 0 nil])
([nil nil ((#("self" 0 4 (face font-lock-keyword-face fontified t)) . 3400)) nil (25934 14149 975335 17000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . 3400) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . 3400) (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . 3400) (#("." 0 1 (fontified t)) . 3400)) nil (25934 14149 975332 235000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3400) 3392) nil (25934 14149 975329 868000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3425) (undo-tree-id25361 . -1) (#("T" 0 1 (fontified t)) . -3426) (undo-tree-id25362 . -1) 3427) nil (25934 14149 975327 327000) 0 nil])
([nil nil ((3400 . 3402)) nil (25934 14149 975321 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3463 . 3464) (nil fontified nil 3463 . 3464) (nil fontified nil 3462 . 3463) (nil fontified nil 3461 . 3462) (nil fontified nil 3458 . 3461) (nil fontified nil 3457 . 3458) (nil fontified nil 3456 . 3457) (nil fontified nil 3439 . 3456) (nil fontified nil 3438 . 3439) (nil fontified nil 3437 . 3438) (nil fontified nil 3436 . 3437) (nil fontified nil 3428 . 3436) (3428 . 3464)) nil (25934 14149 975319 199000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -3423) (undo-tree-id25344 . -1) (undo-tree-id25345 . -1) (undo-tree-id25346 . -1) (undo-tree-id25347 . -1) (undo-tree-id25348 . -1) (undo-tree-id25349 . -1) (undo-tree-id25350 . -1) (undo-tree-id25351 . -1) (undo-tree-id25352 . -1) (undo-tree-id25353 . -1) (undo-tree-id25354 . -1) (undo-tree-id25355 . -1) (undo-tree-id25356 . -1) (undo-tree-id25357 . -1) (undo-tree-id25358 . -1) (undo-tree-id25359 . -1) (undo-tree-id25360 . -1) 3424) nil (25934 14149 975311 807000) 0 nil])
([nil nil ((3423 . 3424)) nil (25934 14149 975068 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3503 . 3504) (nil fontified nil 3502 . 3504) (nil fontified nil 3501 . 3502) (nil fontified nil 3495 . 3501) (nil fontified nil 3493 . 3495) (nil fontified nil 3491 . 3493) (nil fontified nil 3490 . 3491) (nil fontified nil 3485 . 3490) (nil fontified nil 3484 . 3485) (nil fontified nil 3482 . 3484) (nil fontified nil 3475 . 3482) (nil fontified nil 3474 . 3475) (nil fontified nil 3472 . 3474) (nil fontified nil 3464 . 3472) (3464 . 3504) (t 25934 14150 354340 277000)) nil (25934 14206 688672 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3539 . 3540) (nil fontified nil 3539 . 3540) (nil fontified nil 3538 . 3539) (nil fontified nil 3537 . 3538) (nil fontified nil 3534 . 3537) (nil fontified nil 3533 . 3534) (nil fontified nil 3532 . 3533) (nil fontified nil 3515 . 3532) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3512 . 3513) (nil fontified nil 3504 . 3512) (3504 . 3540)) nil (25934 14206 688667 408000) 0 nil])
([nil nil ((3512 . 3516) 3504) nil (25934 14206 688663 555000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . 3516) (#(" " 0 1 (fontified t)) . 3516) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 3516)) nil (25934 14206 688661 701000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3516) 3504) nil (25934 14206 688660 281000) 0 nil])
([nil nil ((3465 . 3473) (#("        " 0 8 (fontified nil)) . 3464) (undo-tree-id25984 . -8) (undo-tree-id25985 . -8) (undo-tree-id25986 . -8) (undo-tree-id25987 . -8) (undo-tree-id25988 . -8) (undo-tree-id25989 . -8) (undo-tree-id25990 . -8) (undo-tree-id25991 . -8) (undo-tree-id25992 . -8) (undo-tree-id25993 . -8) (undo-tree-id25994 . -8) (undo-tree-id25995 . -8) (undo-tree-id25996 . -8) (undo-tree-id25997 . -8) (undo-tree-id25998 . -8) (undo-tree-id25999 . -8) (3463 . 3473)) nil (25934 14206 688657 884000) 0 nil])
([nil nil ((3473 . 3477)) nil (25934 14206 688631 269000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -3473) (undo-tree-id25371 . -1) (undo-tree-id25372 . -1) (undo-tree-id25373 . -1) (undo-tree-id25374 . -1) (undo-tree-id25375 . -1) (undo-tree-id25376 . -1) (undo-tree-id25377 . -1) (undo-tree-id25378 . -1) (undo-tree-id25379 . -1) (undo-tree-id25380 . -1) (undo-tree-id25381 . -1) (undo-tree-id25382 . -1) (undo-tree-id25383 . -1) (undo-tree-id25384 . -1) (undo-tree-id25385 . -1) (undo-tree-id25386 . -1) (undo-tree-id25387 . -1) (undo-tree-id25388 . -1) (undo-tree-id25389 . -1) (undo-tree-id25390 . -1) (undo-tree-id25391 . -1) (undo-tree-id25392 . -1) (undo-tree-id25393 . -1) (undo-tree-id25394 . -1) (undo-tree-id25395 . -1) (undo-tree-id25396 . -1) (undo-tree-id25397 . -1) (undo-tree-id25398 . -1) (undo-tree-id25399 . -1) (undo-tree-id25400 . -1) (undo-tree-id25401 . -1) (undo-tree-id25402 . -1) (undo-tree-id25403 . -1) (undo-tree-id25404 . -1) (undo-tree-id25405 . -1) (undo-tree-id25406 . -1) (undo-tree-id25407 . -1) (undo-tree-id25408 . -1) (undo-tree-id25409 . -1) (undo-tree-id25410 . -1) (undo-tree-id25411 . -1) (undo-tree-id25412 . -1) (undo-tree-id25413 . -1) (undo-tree-id25414 . -1) (undo-tree-id25415 . -1) (undo-tree-id25416 . -1) (undo-tree-id25417 . -1) (undo-tree-id25418 . -1) (undo-tree-id25419 . -1) (undo-tree-id25420 . -1) (undo-tree-id25421 . -1) (undo-tree-id25422 . -1) (undo-tree-id25423 . -1) (undo-tree-id25424 . -1) (undo-tree-id25425 . -1) (undo-tree-id25426 . -1) (undo-tree-id25427 . -1) (undo-tree-id25428 . -1) (undo-tree-id25429 . -1) (undo-tree-id25430 . -1) (undo-tree-id25431 . -1) (undo-tree-id25432 . -1) (undo-tree-id25433 . -1) (undo-tree-id25434 . -1) (undo-tree-id25435 . -1) (undo-tree-id25436 . -1) (undo-tree-id25437 . -1) (undo-tree-id25438 . -1) (undo-tree-id25439 . -1) (undo-tree-id25440 . -1) (undo-tree-id25441 . -1) (undo-tree-id25442 . -1) (undo-tree-id25443 . -1) (undo-tree-id25444 . -1) (undo-tree-id25445 . -1) (undo-tree-id25446 . -1) (undo-tree-id25447 . -1) (undo-tree-id25448 . -1) (undo-tree-id25449 . -1) (undo-tree-id25450 . -1) (undo-tree-id25451 . -1) (undo-tree-id25452 . -1) (undo-tree-id25453 . -1) (undo-tree-id25454 . -1) (undo-tree-id25455 . -1) (undo-tree-id25456 . -1) (undo-tree-id25457 . -1) (undo-tree-id25458 . -1) (undo-tree-id25459 . -1) (undo-tree-id25460 . -1) (undo-tree-id25461 . -1) (undo-tree-id25462 . -1) (undo-tree-id25463 . -1) (undo-tree-id25464 . -1) (undo-tree-id25465 . -1) (undo-tree-id25466 . -1) (undo-tree-id25467 . -1) (undo-tree-id25468 . -1) (undo-tree-id25469 . -1) (undo-tree-id25470 . -1) (undo-tree-id25471 . -1) (undo-tree-id25472 . -1) (undo-tree-id25473 . -1) (undo-tree-id25474 . -1) (undo-tree-id25475 . -1) (undo-tree-id25476 . -1) (undo-tree-id25477 . -1) (undo-tree-id25478 . -1) (undo-tree-id25479 . -1) (undo-tree-id25480 . -1) (undo-tree-id25481 . -1) (undo-tree-id25482 . -1) (undo-tree-id25483 . -1) (undo-tree-id25484 . -1) (undo-tree-id25485 . -1) (undo-tree-id25486 . -1) (undo-tree-id25487 . -1) (undo-tree-id25488 . -1) (undo-tree-id25489 . -1) (undo-tree-id25490 . -1) (undo-tree-id25491 . -1) (undo-tree-id25492 . -1) (undo-tree-id25493 . -1) (undo-tree-id25494 . -1) (undo-tree-id25495 . -1) (undo-tree-id25496 . -1) (undo-tree-id25497 . -1) (undo-tree-id25498 . -1) (undo-tree-id25499 . -1) (undo-tree-id25500 . -1) (undo-tree-id25501 . -1) (undo-tree-id25502 . -1) (undo-tree-id25503 . -1) (undo-tree-id25504 . -1) (undo-tree-id25505 . -1) (undo-tree-id25506 . -1) (undo-tree-id25507 . -1) (undo-tree-id25508 . -1) (undo-tree-id25509 . -1) (undo-tree-id25510 . -1) (undo-tree-id25511 . -1) (undo-tree-id25512 . -1) (undo-tree-id25513 . -1) (undo-tree-id25514 . -1) (undo-tree-id25515 . -1) (undo-tree-id25516 . -1) (undo-tree-id25517 . -1) (undo-tree-id25518 . -1) (undo-tree-id25519 . -1) (undo-tree-id25520 . -1) (undo-tree-id25521 . -1) (undo-tree-id25522 . -1) (undo-tree-id25523 . -1) (undo-tree-id25524 . -1) (undo-tree-id25525 . -1) (undo-tree-id25526 . -1) (undo-tree-id25527 . -1) (undo-tree-id25528 . -1) (undo-tree-id25529 . -1) (undo-tree-id25530 . -1) (undo-tree-id25531 . -1) (undo-tree-id25532 . -1) (undo-tree-id25533 . -1) (undo-tree-id25534 . -1) (undo-tree-id25535 . -1) (undo-tree-id25536 . -1) (undo-tree-id25537 . -1) (undo-tree-id25538 . -1) (undo-tree-id25539 . -1) (undo-tree-id25540 . -1) (undo-tree-id25541 . -1) (undo-tree-id25542 . -1) (undo-tree-id25543 . -1) (undo-tree-id25544 . -1) (undo-tree-id25545 . -1) (undo-tree-id25546 . -1) (undo-tree-id25547 . -1) (undo-tree-id25548 . -1) (undo-tree-id25549 . -1) (undo-tree-id25550 . -1) (undo-tree-id25551 . -1) (undo-tree-id25552 . -1) (undo-tree-id25553 . -1) (undo-tree-id25554 . -1) (undo-tree-id25555 . -1) (undo-tree-id25556 . -1) (undo-tree-id25557 . -1) (undo-tree-id25558 . -1) (undo-tree-id25559 . -1) (undo-tree-id25560 . -1) (undo-tree-id25561 . -1) (undo-tree-id25562 . -1) (undo-tree-id25563 . -1) (undo-tree-id25564 . -1) (undo-tree-id25565 . -1) (undo-tree-id25566 . -1) (undo-tree-id25567 . -1) (undo-tree-id25568 . -1) (undo-tree-id25569 . -1) (undo-tree-id25570 . -1) (undo-tree-id25571 . -1) (undo-tree-id25572 . -1) (undo-tree-id25573 . -1) (undo-tree-id25574 . -1) (undo-tree-id25575 . -1) (undo-tree-id25576 . -1) (undo-tree-id25577 . -1) (undo-tree-id25578 . -1) (undo-tree-id25579 . -1) (undo-tree-id25580 . -1) (undo-tree-id25581 . -1) (undo-tree-id25582 . -1) (undo-tree-id25583 . -1) (undo-tree-id25584 . -1) (undo-tree-id25585 . -1) (undo-tree-id25586 . -1) (undo-tree-id25587 . -1) (undo-tree-id25588 . -1) (undo-tree-id25589 . -1) (undo-tree-id25590 . -1) (undo-tree-id25591 . -1) (undo-tree-id25592 . -1) (undo-tree-id25593 . -1) (undo-tree-id25594 . -1) (undo-tree-id25595 . -1) (undo-tree-id25596 . -1) (undo-tree-id25597 . -1) (#("a" 0 1 (fontified t)) . -3474) (undo-tree-id25598 . -1) (undo-tree-id25599 . -1) (undo-tree-id25600 . -1) (undo-tree-id25601 . -1) (undo-tree-id25602 . -1) (undo-tree-id25603 . -1) (undo-tree-id25604 . -1) (undo-tree-id25605 . -1) (undo-tree-id25606 . -1) (undo-tree-id25607 . -1) (undo-tree-id25608 . -1) (undo-tree-id25609 . -1) (undo-tree-id25610 . -1) (undo-tree-id25611 . -1) (undo-tree-id25612 . -1) (undo-tree-id25613 . -1) (undo-tree-id25614 . -1) (undo-tree-id25615 . -1) (undo-tree-id25616 . -1) (undo-tree-id25617 . -1) (undo-tree-id25618 . -1) (undo-tree-id25619 . -1) (undo-tree-id25620 . -1) (undo-tree-id25621 . -1) (undo-tree-id25622 . -1) (undo-tree-id25623 . -1) (undo-tree-id25624 . -1) (undo-tree-id25625 . -1) (undo-tree-id25626 . -1) (undo-tree-id25627 . -1) (undo-tree-id25628 . -1) (undo-tree-id25629 . -1) (undo-tree-id25630 . -1) (undo-tree-id25631 . -1) (undo-tree-id25632 . -1) (undo-tree-id25633 . -1) (undo-tree-id25634 . -1) (undo-tree-id25635 . -1) (undo-tree-id25636 . -1) (undo-tree-id25637 . -1) (undo-tree-id25638 . -1) (undo-tree-id25639 . -1) (undo-tree-id25640 . -1) (undo-tree-id25641 . -1) (undo-tree-id25642 . -1) (undo-tree-id25643 . -1) (undo-tree-id25644 . -1) (undo-tree-id25645 . -1) (undo-tree-id25646 . -1) (undo-tree-id25647 . -1) (undo-tree-id25648 . -1) (undo-tree-id25649 . -1) (undo-tree-id25650 . -1) (undo-tree-id25651 . -1) (undo-tree-id25652 . -1) (undo-tree-id25653 . -1) (undo-tree-id25654 . -1) (undo-tree-id25655 . -1) (undo-tree-id25656 . -1) (undo-tree-id25657 . -1) (undo-tree-id25658 . -1) (undo-tree-id25659 . -1) (undo-tree-id25660 . -1) (undo-tree-id25661 . -1) (undo-tree-id25662 . -1) (undo-tree-id25663 . -1) (undo-tree-id25664 . -1) (undo-tree-id25665 . -1) (undo-tree-id25666 . -1) (undo-tree-id25667 . -1) (undo-tree-id25668 . -1) (undo-tree-id25669 . -1) (undo-tree-id25670 . -1) (undo-tree-id25671 . -1) (undo-tree-id25672 . -1) (undo-tree-id25673 . -1) (undo-tree-id25674 . -1) (undo-tree-id25675 . -1) (undo-tree-id25676 . -1) (undo-tree-id25677 . -1) (undo-tree-id25678 . -1) (undo-tree-id25679 . -1) (undo-tree-id25680 . -1) (undo-tree-id25681 . -1) (undo-tree-id25682 . -1) (undo-tree-id25683 . -1) (undo-tree-id25684 . -1) (undo-tree-id25685 . -1) (undo-tree-id25686 . -1) (undo-tree-id25687 . -1) (undo-tree-id25688 . -1) (undo-tree-id25689 . -1) (undo-tree-id25690 . -1) (undo-tree-id25691 . -1) (undo-tree-id25692 . -1) (undo-tree-id25693 . -1) (undo-tree-id25694 . -1) (undo-tree-id25695 . -1) (undo-tree-id25696 . -1) (undo-tree-id25697 . -1) (undo-tree-id25698 . -1) (undo-tree-id25699 . -1) (undo-tree-id25700 . -1) (undo-tree-id25701 . -1) (undo-tree-id25702 . -1) (undo-tree-id25703 . -1) (undo-tree-id25704 . -1) (undo-tree-id25705 . -1) (undo-tree-id25706 . -1) (undo-tree-id25707 . -1) (undo-tree-id25708 . -1) (undo-tree-id25709 . -1) (undo-tree-id25710 . -1) (undo-tree-id25711 . -1) (undo-tree-id25712 . -1) (undo-tree-id25713 . -1) (undo-tree-id25714 . -1) (undo-tree-id25715 . -1) (undo-tree-id25716 . -1) (undo-tree-id25717 . -1) (undo-tree-id25718 . -1) (undo-tree-id25719 . -1) (undo-tree-id25720 . -1) (undo-tree-id25721 . -1) (undo-tree-id25722 . -1) (undo-tree-id25723 . -1) (undo-tree-id25724 . -1) (undo-tree-id25725 . -1) (undo-tree-id25726 . -1) (undo-tree-id25727 . -1) (undo-tree-id25728 . -1) (undo-tree-id25729 . -1) (undo-tree-id25730 . -1) (undo-tree-id25731 . -1) (undo-tree-id25732 . -1) (undo-tree-id25733 . -1) (undo-tree-id25734 . -1) (undo-tree-id25735 . -1) (undo-tree-id25736 . -1) (undo-tree-id25737 . -1) (undo-tree-id25738 . -1) (undo-tree-id25739 . -1) (undo-tree-id25740 . -1) (undo-tree-id25741 . -1) (undo-tree-id25742 . -1) (undo-tree-id25743 . -1) (undo-tree-id25744 . -1) (undo-tree-id25745 . -1) (undo-tree-id25746 . -1) (undo-tree-id25747 . -1) (undo-tree-id25748 . -1) (undo-tree-id25749 . -1) (undo-tree-id25750 . -1) (undo-tree-id25751 . -1) (undo-tree-id25752 . -1) (undo-tree-id25753 . -1) (undo-tree-id25754 . -1) (undo-tree-id25755 . -1) (undo-tree-id25756 . -1) (undo-tree-id25757 . -1) (undo-tree-id25758 . -1) (undo-tree-id25759 . -1) (undo-tree-id25760 . -1) (undo-tree-id25761 . -1) (undo-tree-id25762 . -1) (undo-tree-id25763 . -1) (undo-tree-id25764 . -1) (undo-tree-id25765 . -1) (undo-tree-id25766 . -1) (undo-tree-id25767 . -1) (undo-tree-id25768 . -1) (undo-tree-id25769 . -1) (undo-tree-id25770 . -1) (undo-tree-id25771 . -1) (undo-tree-id25772 . -1) (undo-tree-id25773 . -1) (undo-tree-id25774 . -1) (undo-tree-id25775 . -1) (undo-tree-id25776 . -1) (undo-tree-id25777 . -1) (undo-tree-id25778 . -1) (undo-tree-id25779 . -1) (undo-tree-id25780 . -1) (undo-tree-id25781 . -1) (undo-tree-id25782 . -1) (undo-tree-id25783 . -1) (#("r" 0 1 (fontified t)) . -3475) (undo-tree-id25784 . -1) (undo-tree-id25785 . -1) (undo-tree-id25786 . -1) (undo-tree-id25787 . -1) (undo-tree-id25788 . -1) (undo-tree-id25789 . -1) (undo-tree-id25790 . -1) (undo-tree-id25791 . -1) (undo-tree-id25792 . -1) (undo-tree-id25793 . -1) (undo-tree-id25794 . -1) (undo-tree-id25795 . -1) (undo-tree-id25796 . -1) (undo-tree-id25797 . -1) (undo-tree-id25798 . -1) (undo-tree-id25799 . -1) (undo-tree-id25800 . -1) (undo-tree-id25801 . -1) (undo-tree-id25802 . -1) (undo-tree-id25803 . -1) (undo-tree-id25804 . -1) (undo-tree-id25805 . -1) (undo-tree-id25806 . -1) (undo-tree-id25807 . -1) (undo-tree-id25808 . -1) (undo-tree-id25809 . -1) (undo-tree-id25810 . -1) (undo-tree-id25811 . -1) (undo-tree-id25812 . -1) (undo-tree-id25813 . -1) (undo-tree-id25814 . -1) (undo-tree-id25815 . -1) (undo-tree-id25816 . -1) (undo-tree-id25817 . -1) (undo-tree-id25818 . -1) (undo-tree-id25819 . -1) (undo-tree-id25820 . -1) (undo-tree-id25821 . -1) (undo-tree-id25822 . -1) (undo-tree-id25823 . -1) (undo-tree-id25824 . -1) (undo-tree-id25825 . -1) (undo-tree-id25826 . -1) (undo-tree-id25827 . -1) (undo-tree-id25828 . -1) (undo-tree-id25829 . -1) (undo-tree-id25830 . -1) (undo-tree-id25831 . -1) (undo-tree-id25832 . -1) (undo-tree-id25833 . -1) (undo-tree-id25834 . -1) (undo-tree-id25835 . -1) (undo-tree-id25836 . -1) (undo-tree-id25837 . -1) (undo-tree-id25838 . -1) (undo-tree-id25839 . -1) (undo-tree-id25840 . -1) (undo-tree-id25841 . -1) (undo-tree-id25842 . -1) (undo-tree-id25843 . -1) (undo-tree-id25844 . -1) (undo-tree-id25845 . -1) (undo-tree-id25846 . -1) (undo-tree-id25847 . -1) (undo-tree-id25848 . -1) (undo-tree-id25849 . -1) (undo-tree-id25850 . -1) (undo-tree-id25851 . -1) (undo-tree-id25852 . -1) (undo-tree-id25853 . -1) (undo-tree-id25854 . -1) (undo-tree-id25855 . -1) (undo-tree-id25856 . -1) (undo-tree-id25857 . -1) (undo-tree-id25858 . -1) (undo-tree-id25859 . -1) (undo-tree-id25860 . -1) (undo-tree-id25861 . -1) (undo-tree-id25862 . -1) (undo-tree-id25863 . -1) (undo-tree-id25864 . -1) (undo-tree-id25865 . -1) (undo-tree-id25866 . -1) (undo-tree-id25867 . -1) (undo-tree-id25868 . -1) (undo-tree-id25869 . -1) (undo-tree-id25870 . -1) (undo-tree-id25871 . -1) (undo-tree-id25872 . -1) (undo-tree-id25873 . -1) (undo-tree-id25874 . -1) (undo-tree-id25875 . -1) (undo-tree-id25876 . -1) (undo-tree-id25877 . -1) (undo-tree-id25878 . -1) (undo-tree-id25879 . -1) (undo-tree-id25880 . -1) (undo-tree-id25881 . -1) (undo-tree-id25882 . -1) (undo-tree-id25883 . -1) (undo-tree-id25884 . -1) (undo-tree-id25885 . -1) (undo-tree-id25886 . -1) (undo-tree-id25887 . -1) (undo-tree-id25888 . -1) (undo-tree-id25889 . -1) (undo-tree-id25890 . -1) (undo-tree-id25891 . -1) (undo-tree-id25892 . -1) (undo-tree-id25893 . -1) (undo-tree-id25894 . -1) (undo-tree-id25895 . -1) (undo-tree-id25896 . -1) (undo-tree-id25897 . -1) (undo-tree-id25898 . -1) (undo-tree-id25899 . -1) (undo-tree-id25900 . -1) (undo-tree-id25901 . -1) (undo-tree-id25902 . -1) (undo-tree-id25903 . -1) (undo-tree-id25904 . -1) (undo-tree-id25905 . -1) (undo-tree-id25906 . -1) (undo-tree-id25907 . -1) (#(" " 0 1 (fontified t)) . -3476) (undo-tree-id25908 . -1) (undo-tree-id25909 . -1) (undo-tree-id25910 . -1) (undo-tree-id25911 . -1) (undo-tree-id25912 . -1) (undo-tree-id25913 . -1) (undo-tree-id25914 . -1) (undo-tree-id25915 . -1) (undo-tree-id25916 . -1) (undo-tree-id25917 . -1) (undo-tree-id25918 . -1) (undo-tree-id25919 . -1) (undo-tree-id25920 . -1) (undo-tree-id25921 . -1) (undo-tree-id25922 . -1) (undo-tree-id25923 . -1) (undo-tree-id25924 . -1) (undo-tree-id25925 . -1) (undo-tree-id25926 . -1) (undo-tree-id25927 . -1) (undo-tree-id25928 . -1) (undo-tree-id25929 . -1) (undo-tree-id25930 . -1) (undo-tree-id25931 . -1) (undo-tree-id25932 . -1) (undo-tree-id25933 . -1) (undo-tree-id25934 . -1) (undo-tree-id25935 . -1) (undo-tree-id25936 . -1) (undo-tree-id25937 . -1) (undo-tree-id25938 . -1) (undo-tree-id25939 . -1) (undo-tree-id25940 . -1) (undo-tree-id25941 . -1) (undo-tree-id25942 . -1) (undo-tree-id25943 . -1) (undo-tree-id25944 . -1) (undo-tree-id25945 . -1) (undo-tree-id25946 . -1) (undo-tree-id25947 . -1) (undo-tree-id25948 . -1) (undo-tree-id25949 . -1) (undo-tree-id25950 . -1) (undo-tree-id25951 . -1) (undo-tree-id25952 . -1) (undo-tree-id25953 . -1) (undo-tree-id25954 . -1) (undo-tree-id25955 . -1) (undo-tree-id25956 . -1) (undo-tree-id25957 . -1) (undo-tree-id25958 . -1) (undo-tree-id25959 . -1) (undo-tree-id25960 . -1) (undo-tree-id25961 . -1) (undo-tree-id25962 . -1) (undo-tree-id25963 . -1) (undo-tree-id25964 . -1) (undo-tree-id25965 . -1) (undo-tree-id25966 . -1) (undo-tree-id25967 . -1) (undo-tree-id25968 . -1) (undo-tree-id25969 . -1) (undo-tree-id25970 . -1) (undo-tree-id25971 . -1) (undo-tree-id25972 . -1) (undo-tree-id25973 . -1) (undo-tree-id25974 . -1) (undo-tree-id25975 . -1) (undo-tree-id25976 . -1) (undo-tree-id25977 . -1) (undo-tree-id25978 . -1) (undo-tree-id25979 . -1) (undo-tree-id25980 . -1) (undo-tree-id25981 . -1) (undo-tree-id25982 . -1) (undo-tree-id25983 . -1) 3477) nil (25934 14206 688596 475000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3483) (3482 . 3483) (3481 . 3483) (#("[" 0 1 (fontified nil)) . -3481) (undo-tree-id25369 . -1) (undo-tree-id25370 . -1) (3473 . 3482)) nil (25934 14206 686702 661000) 0 nil])
([nil nil ((#("# torch.manual_seed(1)
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 23 (face font-lock-comment-face fontified t)) . 331) (undo-tree-id0 . -23) (t 25934 14206 791507 938000)) nil (25934 14370 972128 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3273) (#(" " 0 1 (fontified t)) . 3273) (t 25934 14371 58598 647000)) nil (25934 14438 256578 15000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3273)) nil (25934 14438 256577 18000) 0 nil])
([nil nil ((#("     
" 0 6 (fontified t)) . 3273) (undo-tree-id8 . -5)) nil (25934 14438 256575 848000) 0 nil])
([nil nil ((#("        torch.normal(mean=0.0, std=self.VAR_FF[i_pop], size=(self.Na[i_pop],), dtype=self.FLOAT, device=self.device)
 " 0 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 25 (fontified t) 25 26 (face font-lock-operator-face fontified t) 26 34 (fontified t) 34 35 (face font-lock-operator-face fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-2-face) fontified t) 53 59 (fontified t) 59 60 (face font-lock-operator-face fontified t) 60 61 (face (rainbow-delimiters-depth-2-face) fontified t) 61 65 (face font-lock-keyword-face fontified t) 65 68 (fontified t) 68 69 (face (rainbow-delimiters-depth-3-face) fontified t) 69 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-3-face) fontified t) 75 76 (fontified t) 76 77 (face (rainbow-delimiters-depth-2-face) fontified t) 77 84 (fontified t) 84 85 (face font-lock-operator-face fontified t) 85 89 (face font-lock-keyword-face fontified t) 89 103 (fontified t) 103 104 (face font-lock-operator-face fontified t) 104 108 (face font-lock-keyword-face fontified t) 108 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-1-face) fontified t) 116 118 (fontified t)) . 3537) (undo-tree-id7 . -118)) nil (25934 14438 256574 274000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3536) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 3537) nil (25934 14438 256572 691000) 0 nil])
([nil nil ((3395 . 3396)) nil (25934 14438 256570 168000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3395) (undo-tree-id4 . -1) 3396) nil (25934 14438 256569 341000) 0 nil])
([nil nil ((3368 . 3369)) nil (25934 14438 256567 454000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -3368) (undo-tree-id3 . -1) 3369) nil (25934 14438 256566 491000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 3368)) nil (25934 14438 256564 465000) 0 nil])
([nil nil ((3368 . 3369)) nil (25934 14438 256563 870000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3368) (undo-tree-id2 . -1) 3369) nil (25934 14438 256563 94000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3368) (#("=" 0 1 (face font-lock-operator-face fontified t)) . 3368) (#(" " 0 1 (fontified t)) . 3368)) nil (25934 14438 256560 934000) 0 nil])
([nil nil ((#("        ff_normal.sample((Na,))
        a = ff_normal.sample((Nb,))
" 0 8 (fontified t) 8 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 26 (face (rainbow-delimiters-depth-2-face) fontified t) 26 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t) 32 40 (fontified t) 40 41 (face font-lock-variable-name-face fontified t) 41 42 (fontified t) 42 43 (face font-lock-operator-face fontified t) 43 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-2-face) fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 68 (fontified t)) . -3360) (undo-tree-id1 . -68) 3428) nil (25934 14438 256559 763000) 0 nil])
([nil nil ((3360 . 3368)) nil (25934 14438 256552 91000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 3462) (3461 . 3462) (3460 . 3462) (#("[" 0 1 (fontified nil)) . -3460) (3460 . 3461)) nil (25934 14438 256550 543000) 0 nil])
([nil nil ((3461 . 3462)) nil (25934 14438 256549 50000) 0 nil])
([nil nil ((3462 . 3466)) nil (25934 14438 256544 14000) 0 nil])
([nil nil ((3440 . 3446) (t 25934 14438 300907 682000)) nil (25934 14446 23218 628000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3445) (undo-tree-id11 . -1) 3446) nil (25934 14446 23216 497000) 0 nil])
([nil nil ((3452 . 3454) (#("(" 0 1 (fontified nil)) . -3452) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (3445 . 3453)) nil (25934 14446 23210 231000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3453)) nil (25934 14446 23195 618000) 0 nil])
([nil nil ((3483 . 3484)) nil (25934 14446 23188 768000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -3497) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) 3500 (t 25934 14446 65893 131000)) nil (25934 14448 61422 285000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3493) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) 3497) nil (25934 14448 61330 32000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3533) (undo-tree-id148 . -1) 3534 (t 25934 14448 109121 998000)) nil (25934 14465 233697 40000) 0 nil])
([nil nil ((apply -14 3494 4134 undo--wrap-and-run-primitive-undo 3494 4134 ((4025 . 4027) (3919 . 3921) (3807 . 3809) (3695 . 3697) (3597 . 3599) (3556 . 3558) (3502 . 3504) 4111))) nil (25934 14465 233679 211000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -3535) (undo-tree-id152 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3536) (undo-tree-id153 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3537) (undo-tree-id154 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3538) (undo-tree-id155 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3539) (undo-tree-id156 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3540) (undo-tree-id157 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3541) (undo-tree-id158 . -1) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -3542) (undo-tree-id159 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3543) (undo-tree-id160 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3544) (undo-tree-id161 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3545) (undo-tree-id162 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -3546) (undo-tree-id163 . -1) 3547 (t 25934 14465 290845 828000)) nil (25934 14500 38990 568000) 0 nil])
([nil nil ((3486 . 3498) (#("        " 0 8 (fontified nil)) . 3485) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (3493 . 3494)) nil (25934 14500 38971 335000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3494) (undo-tree-id149 . -4) 3498) nil (25934 14500 38958 27000) 0 nil])
([nil nil ((3494 . 3511)) nil (25934 14500 38934 848000) 0 nil])
([nil nil ((3506 . 3512) (t 25934 14500 94562 571000)) nil (25934 14602 753389 83000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3511) (undo-tree-id165 . -1) 3512) nil (25934 14602 753387 292000) 0 nil])
([nil nil ((3511 . 3515)) nil (25934 14602 753383 661000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3514) (undo-tree-id164 . -1) 3515) nil (25934 14602 753381 461000) 0 nil])
([nil nil ((3518 . 3520) (#("(" 0 1 (fontified nil)) . -3518) (3514 . 3519)) nil (25934 14602 753367 385000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3519)) nil (25934 14602 753364 744000) 0 nil])
([nil nil ((3524 . 3525)) nil (25934 14602 753355 863000) 0 nil])
([nil nil ((3485 . 3497) (t 25934 14602 818930 179000)) nil (25934 14604 918708 46000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3493) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) 3497) nil (25934 14604 918703 176000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3484) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 3485 (t 25934 14604 965506 404000)) nil (25934 14659 838875 815000) 0 nil])
([nil nil ((192 . 198) (t 25934 14659 898353 442000)) nil (25934 14667 704306 112000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -197) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 198) nil (25934 14667 704303 918000) 0 nil])
([nil nil ((197 . 200)) nil (25934 14667 704277 241000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -3492) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#(" " 0 1 (fontified t)) . -3493) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#(" " 0 1 (fontified t)) . -3494) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t)) . -3495) (undo-tree-id280 . -1) (#(" " 0 1 (fontified t)) . -3496) (undo-tree-id281 . -1) (#(" " 0 1 (fontified t)) . -3497) (undo-tree-id282 . -1) (#(" " 0 1 (fontified t)) . -3498) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -3499) (undo-tree-id284 . -1) 3500 (t 25934 14667 756371 112000)) nil (25934 14679 826113 323000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14743) 14735 (t 25934 14679 874942 314000)) nil (25934 14707 270079 957000) 0 nil])
([nil nil ((14736 . 14744) (#("        " 0 8 (fontified nil)) . 14735) (undo-tree-id287 . -8) (14743 . 14744)) nil (25934 14707 270076 700000) 0 nil])
([nil nil ((14744 . 14761)) nil (25934 14707 270071 14000) 0 nil])
([nil nil ((14761 . 14769) (#(" " 0 1 (fontified nil)) . 14760) (undo-tree-id286 . -1) (14761 . 14762)) nil (25934 14707 270068 335000) 0 nil])
([nil nil ((14767 . 14769) (#("(" 0 1 (fontified nil)) . -14767) (14760 . 14768)) nil (25934 14707 270063 449000) 0 nil])
([nil nil ((14768 . 14770)) nil (25934 14707 270062 88000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14769) (undo-tree-id285 . -1) 14770) nil (25934 14707 270060 892000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 14781) (14780 . 14781) (14779 . 14781) (#("[" 0 1 (fontified nil)) . -14779) (14769 . 14780)) nil (25934 14707 270046 798000) 0 nil])
([nil nil ((14780 . 14781)) nil (25934 14707 270038 963000) 0 nil])
([nil nil ((14735 . 14743) (t 25934 14707 315258 351000)) nil (25934 14711 437883 613000) 0 nil])
([nil nil ((apply -10 14383 14754 undo--wrap-and-run-primitive-undo 14383 14754 ((14684 . 14686) (14614 . 14616) (14572 . 14574) (14479 . 14481) (14391 . 14393) 14383))) nil (25934 14711 437881 931000) 0 nil])
([nil nil ((14391 . 14395) 14383) nil (25934 14711 437875 268000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14391) (undo-tree-id288 . -4) 14395 (t 25934 14711 495801 368000)) nil (25934 14712 603273 531000) 0 nil])
([nil nil ((14786 . 14793) (t 25934 14712 651947 873000)) nil (25934 14794 735179 805000) 0 nil])
([nil nil ((14786 . 14791)) nil (25934 14794 735178 881000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -14790) (undo-tree-id306 . -1) 14791) nil (25934 14794 735177 860000) 0 nil])
([nil nil ((14790 . 14791)) nil (25934 14794 735176 51000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14841 . 14842) (nil fontified nil 14841 . 14842) (nil fontified nil 14840 . 14841) (nil fontified nil 14833 . 14840) (nil fontified nil 14829 . 14833) (nil fontified nil 14828 . 14829) (nil fontified nil 14814 . 14828) (nil fontified nil 14810 . 14814) (nil fontified nil 14809 . 14810) (nil fontified nil 14796 . 14809) (nil fontified nil 14792 . 14796) (nil fontified nil 14791 . 14792) (nil fontified nil 14778 . 14791) (nil fontified nil 14777 . 14778) (nil fontified nil 14776 . 14777) (nil fontified nil 14769 . 14776) (nil fontified nil 14768 . 14769) (nil fontified nil 14764 . 14768) (nil fontified nil 14762 . 14764) (nil fontified nil 14754 . 14762) (14754 . 14842)) nil (25934 14794 735174 557000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -14874) (undo-tree-id291 . -1) (#("o" 0 1 (fontified t)) . -14875) (undo-tree-id292 . -1) (#("r" 0 1 (fontified t)) . -14876) (undo-tree-id293 . -1) (#("c" 0 1 (fontified t)) . -14877) (undo-tree-id294 . -1) (#("h" 0 1 (fontified t)) . -14878) (undo-tree-id295 . -1) (#("t" 0 1 (fontified t)) . -14879) (undo-tree-id296 . -1) (#("e" 0 1 (fontified t)) . -14880) (undo-tree-id297 . -1) (#("n" 0 1 (fontified nil)) . -14881) (undo-tree-id298 . -1) (#("s" 0 1 (fontified nil)) . -14882) (undo-tree-id299 . -1) (#("o" 0 1 (fontified nil)) . -14883) (undo-tree-id300 . -1) (#("r" 0 1 (fontified t)) . -14884) (undo-tree-id301 . -1) (#("." 0 1 (fontified t)) . -14885) (undo-tree-id302 . -1) (#("0" 0 1 (fontified t)) . -14886) (undo-tree-id303 . -1) (#("." 0 1 (fontified t)) . -14887) (undo-tree-id304 . -1) (#("0" 0 1 (fontified t)) . -14888) (undo-tree-id305 . -1) 14889) nil (25934 14794 735168 882000) 0 nil])
([nil nil ((apply 2 14754 14840 undo--wrap-and-run-primitive-undo 14754 14840 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14762) 14754))) nil (25934 14794 735153 883000) 0 nil])
([nil nil ((14872 . 14874)) nil (25934 14794 735152 918000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -14872) (undo-tree-id289 . -1) (#("m" 0 1 (fontified t)) . -14873) (undo-tree-id290 . -1) 14874) nil (25934 14794 735151 360000) 0 nil])
([nil nil ((14872 . 14876)) nil (25934 14794 735139 950000) 0 nil])
([nil nil ((14872 . 14875)) nil (25934 14794 735134 538000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -14790) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("e" 0 1 (fontified t)) . -14791) (undo-tree-id325 . -1) (#("l" 0 1 (fontified t)) . -14792) (undo-tree-id326 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14793) (undo-tree-id327 . -1) (#("." 0 1 (fontified t)) . -14794) (undo-tree-id328 . -1) (#("N" 0 1 (fontified t)) . -14795) (undo-tree-id329 . -1) (#("_" 0 1 (fontified t)) . -14796) (undo-tree-id330 . -1) (#("P" 0 1 (fontified t)) . -14797) (undo-tree-id331 . -1) (#("O" 0 1 (fontified t)) . -14798) (undo-tree-id332 . -1) (#("P" 0 1 (fontified t)) . -14799) (undo-tree-id333 . -1) 14800 (t 25934 14794 772440 551000)) nil (25934 14802 713828 332000) 0 nil])
([nil nil ((14790 . 14793)) nil (25934 14802 713789 15000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 14762) (#("f" 0 1 (fontified t)) . 14762) (#("l" 0 1 (fontified t)) . 14762) (#("e" 0 1 (fontified t)) . 14762) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 14762) (t 25934 14802 757184 962000)) nil (25934 14812 56802 150000) 0 nil])
([nil nil ((14888 . 14892) (t 25934 14812 102051 56000)) nil (25934 14859 738736 191000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -14888) (undo-tree-id334 . -1) (#("e" 0 1 (fontified t)) . -14889) (undo-tree-id335 . -1) (#("l" 0 1 (fontified t)) . -14890) (undo-tree-id336 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -14891) (undo-tree-id337 . -1) 14892) nil (25934 14859 738732 147000) 0 nil])
([nil nil ((14869 . 14873)) nil (25934 14859 738707 924000) 0 nil])
([nil nil ((14873 . 14874)) nil (25934 14859 738697 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14348 . 14349) (nil fontified nil 14348 . 14349) (nil fontified nil 14347 . 14348) (nil fontified nil 14340 . 14347) (nil fontified nil 14336 . 14340) (nil fontified nil 14335 . 14336) (nil fontified nil 14321 . 14335) (nil fontified nil 14317 . 14321) (nil fontified nil 14316 . 14317) (nil fontified nil 14305 . 14316) (nil fontified nil 14301 . 14305) (nil fontified nil 14300 . 14301) (nil fontified nil 14287 . 14300) (nil fontified nil 14286 . 14287) (nil fontified nil 14285 . 14286) (nil fontified nil 14282 . 14285) (nil fontified nil 14281 . 14282) (nil fontified nil 14277 . 14281) (nil fontified nil 14269 . 14277) (14269 . 14349) (t 25934 14859 810426 459000)) nil (25934 14908 363004 550000) 0 nil])
([nil nil ((14348 . 14357)) nil (25934 14908 363001 568000) 0 nil])
([nil nil ((#("Ja0" 0 3 (fontified nil)) . -14309) (14312 . 14318) (nil fontified t 14285 . 14288) (nil face font-lock-variable-name-face 14285 . 14288) (#("Ja0" 0 3 (face font-lock-variable-name-face fontified t)) . -14282) (14285 . 14291)) nil (25934 14908 363000 514000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -14437) (undo-tree-id568 . -1) (#("p" 0 1 (fontified t)) . -14438) (undo-tree-id569 . -1) 14439) nil (25934 14908 362998 753000) 0 nil])
([nil nil ((14437 . 14442)) nil (25934 14908 362996 382000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -14441) (undo-tree-id567 . -1) 14442) nil (25934 14908 362995 633000) 0 nil])
([nil nil ((14441 . 14442)) nil (25934 14908 362993 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14301 . 14302) (nil fontified nil 14301 . 14302) (nil fontified nil 14291 . 14301) (14291 . 14302)) nil (25934 14908 362992 677000) 0 nil])
([nil nil ((14365 . 14366)) nil (25934 14908 362991 352000) 0 nil])
([nil nil ((#("        for i_pop in range(self.N_POP):
            self.VAR_FF[i_pop] = torch.sqrt(self.VAR_FF[i_pop])
" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 18 (fontified t) 18 20 (face font-lock-keyword-face fontified t) 20 21 (fontified t) 21 26 (face font-lock-builtin-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 31 (face font-lock-keyword-face fontified t) 31 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 40 (fontified t) 40 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 63 (face font-lock-variable-name-face fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 71 (fontified t) 71 72 (face font-lock-operator-face fontified t) 72 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-1-face) fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 95 (fontified t) 95 96 (face (rainbow-delimiters-depth-2-face) fontified t) 96 101 (fontified t) 101 102 (face (rainbow-delimiters-depth-2-face) fontified t) 102 103 (face (rainbow-delimiters-depth-1-face) fontified t) 103 104 (fontified t)) . -14376) (undo-tree-id492 . -73) (undo-tree-id493 . -39) (undo-tree-id494 . -39) (undo-tree-id495 . -39) (undo-tree-id496 . -39) (undo-tree-id497 . -39) (undo-tree-id498 . -39) (undo-tree-id499 . -39) (undo-tree-id500 . -39) (undo-tree-id501 . -39) (undo-tree-id502 . -39) (undo-tree-id503 . -39) (undo-tree-id504 . -39) (undo-tree-id505 . -39) (undo-tree-id506 . -39) (undo-tree-id507 . -39) (undo-tree-id508 . -39) (undo-tree-id509 . -39) (undo-tree-id510 . -40) (undo-tree-id511 . -40) (undo-tree-id512 . -40) (undo-tree-id513 . -40) (undo-tree-id514 . -40) (undo-tree-id515 . -40) (undo-tree-id516 . -40) (undo-tree-id517 . -40) (undo-tree-id518 . -40) (undo-tree-id519 . -40) (undo-tree-id520 . -40) (undo-tree-id521 . -40) (undo-tree-id522 . -40) (undo-tree-id523 . -40) (undo-tree-id524 . -40) (undo-tree-id525 . -40) (undo-tree-id526 . -40) (undo-tree-id527 . -40) (undo-tree-id528 . -40) (undo-tree-id529 . -40) (undo-tree-id530 . -40) (undo-tree-id531 . -40) (undo-tree-id532 . -40) (undo-tree-id533 . -40) (undo-tree-id534 . -104) (undo-tree-id535 . -104) (undo-tree-id536 . -40) (undo-tree-id537 . -104) (undo-tree-id538 . -104) (undo-tree-id539 . -104) (undo-tree-id540 . -104) (undo-tree-id541 . -104) (undo-tree-id542 . -104) (undo-tree-id543 . -104) (undo-tree-id544 . -104) (undo-tree-id545 . -104) (undo-tree-id546 . -104) (undo-tree-id547 . -104) (undo-tree-id548 . -104) (undo-tree-id549 . -104) (undo-tree-id550 . -104) (undo-tree-id551 . -104) (undo-tree-id552 . -104) (undo-tree-id553 . -104) (undo-tree-id554 . -104) (undo-tree-id555 . -104) (undo-tree-id556 . -104) (undo-tree-id557 . -104) (undo-tree-id558 . -104) (undo-tree-id559 . -104) (undo-tree-id560 . -104) (undo-tree-id561 . -104) (undo-tree-id562 . -104) (undo-tree-id563 . -104) (undo-tree-id564 . -104) (undo-tree-id565 . -104) (undo-tree-id566 . -104) 14480) nil (25934 14908 362988 397000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -14375) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) 14376) nil (25934 14908 362915 429000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -14375) (undo-tree-id338 . -12)) nil (25934 14908 362590 832000) 0 nil])
([nil nil ((#("        # self.ff_mean = torch.tensor(self.N_POP, dtype=self.FLOAT, device=self.device)
        # self.ff_cov = torch.eye(self.N_POP, dtype=self.FLOAT, device=self.device)
        
        # for i_pop in range(self.N_POP):
        #     self.ff_cov[i_pop][i_pop] = self.VAR_FF[i_pop]
        
        # self.ff_multi_normal = MultivariateNormal(ff_mean, ff_cov)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t) 15 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 42 (face font-lock-comment-face fontified t) 42 55 (face font-lock-comment-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 60 (face font-lock-comment-face fontified t) 60 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t) 75 79 (face font-lock-comment-face fontified t) 79 86 (face font-lock-comment-face fontified t) 86 87 (face font-lock-comment-face fontified t) 87 88 (face font-lock-comment-face fontified t) 88 96 (fontified t) 96 98 (face font-lock-comment-delimiter-face fontified t) 98 102 (face font-lock-comment-face fontified t) 102 103 (face font-lock-comment-face fontified t) 103 109 (face font-lock-comment-face fontified t) 109 110 (face font-lock-comment-face fontified t) 110 111 (face font-lock-comment-face fontified t) 111 121 (face font-lock-comment-face fontified t) 121 122 (face font-lock-comment-face fontified t) 122 126 (face font-lock-comment-face fontified t) 126 139 (face font-lock-comment-face fontified t) 139 140 (face font-lock-comment-face fontified t) 140 144 (face font-lock-comment-face fontified t) 144 158 (face font-lock-comment-face fontified t) 158 159 (face font-lock-comment-face fontified t) 159 163 (face font-lock-comment-face fontified t) 163 170 (face font-lock-comment-face fontified t) 170 171 (face font-lock-comment-face fontified t) 171 172 (face font-lock-comment-face fontified t) 172 189 (fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 194 (face font-lock-comment-face fontified t) 194 201 (face font-lock-comment-face fontified t) 201 203 (face font-lock-comment-face fontified t) 203 204 (face font-lock-comment-face fontified t) 204 209 (face font-lock-comment-face fontified t) 209 210 (face font-lock-comment-face fontified t) 210 214 (face font-lock-comment-face fontified t) 214 220 (face font-lock-comment-face fontified t) 220 221 (face font-lock-comment-face fontified t) 221 223 (face font-lock-comment-face fontified t) 223 231 (fontified t) 231 233 (face font-lock-comment-delimiter-face fontified t) 233 237 (face font-lock-comment-delimiter-face fontified t) 237 241 (face font-lock-comment-face fontified t) 241 248 (face font-lock-comment-face fontified t) 248 249 (face font-lock-comment-face fontified t) 249 254 (face font-lock-comment-face fontified t) 254 255 (face font-lock-comment-face fontified t) 255 256 (face font-lock-comment-face fontified t) 256 261 (face font-lock-comment-face fontified t) 261 262 (face font-lock-comment-face fontified t) 262 263 (face font-lock-comment-face fontified t) 263 264 (face font-lock-comment-face fontified t) 264 265 (face font-lock-comment-face fontified t) 265 269 (face font-lock-comment-face fontified t) 269 276 (face font-lock-comment-face fontified t) 276 277 (face font-lock-comment-face fontified t) 277 282 (face font-lock-comment-face fontified t) 282 283 (face font-lock-comment-face fontified t) 283 284 (face font-lock-comment-face fontified t) 284 301 (fontified t) 301 303 (face font-lock-comment-delimiter-face fontified t) 303 307 (face font-lock-comment-face fontified t) 307 308 (face font-lock-comment-face fontified t) 308 323 (face font-lock-comment-face fontified t) 323 324 (face font-lock-comment-face fontified t) 324 325 (face font-lock-comment-face fontified t) 325 344 (face font-lock-comment-face fontified t) 344 345 (face font-lock-comment-face fontified t) 345 360 (face font-lock-comment-face fontified t) 360 361 (face font-lock-comment-face fontified t) 361 362 (face font-lock-comment-face fontified t)) . -14376) (undo-tree-id574 . -362) (undo-tree-id575 . -88) (undo-tree-id576 . -362) 14738 (t 25934 14908 398853 334000)) nil (25934 14916 136008 914000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14375) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 14376) nil (25934 14916 136002 305000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -14375) (undo-tree-id807 . -8) (undo-tree-id808 . -8) (undo-tree-id809 . -8) (undo-tree-id810 . -8) (undo-tree-id811 . -8) (undo-tree-id812 . -8) (undo-tree-id813 . -8) (undo-tree-id814 . -8) (undo-tree-id815 . -8) (undo-tree-id816 . -8) (undo-tree-id817 . -8) (undo-tree-id818 . -8) (undo-tree-id819 . -8) (undo-tree-id820 . -8) (undo-tree-id821 . -8) (undo-tree-id822 . -8) (undo-tree-id823 . -8) (undo-tree-id824 . -8) (undo-tree-id825 . -8) (undo-tree-id826 . -8) (undo-tree-id827 . -8) (undo-tree-id828 . -8) (undo-tree-id829 . -8) (undo-tree-id830 . -8) (undo-tree-id831 . -8) (undo-tree-id832 . -8) (undo-tree-id833 . -8) (undo-tree-id834 . -8) (undo-tree-id835 . -8) (undo-tree-id836 . -8) (undo-tree-id837 . -8) (undo-tree-id838 . -8) (undo-tree-id839 . -8) (undo-tree-id840 . -8) (undo-tree-id841 . -8) (undo-tree-id842 . -8) (undo-tree-id843 . -8) (undo-tree-id844 . -8) (undo-tree-id845 . -8) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -8) (undo-tree-id850 . -8) (undo-tree-id851 . -8) (undo-tree-id852 . -8) (undo-tree-id853 . -8) (undo-tree-id854 . -8) (undo-tree-id855 . -8) (undo-tree-id856 . -8) (undo-tree-id857 . -8) 14367 (t 25934 14916 179561 414000)) nil (25934 14918 241791 471000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14371) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) 14375) nil (25934 14918 241686 944000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14367) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) 14371) nil (25934 14918 241495 251000) 0 nil])
([nil nil ((14367 . 14375)) nil (25934 14918 241378 435000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -14366) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) 14367 (t 25934 14918 283752 885000)) nil (25934 14923 712696 997000) 0 nil])
([nil nil ((3492 . 3505) (t 25934 14923 756250 825000)) nil (25934 14962 565559 462000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3501) (undo-tree-id892 . -4) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -4) (undo-tree-id903 . -4) (undo-tree-id904 . -4) (undo-tree-id905 . -4) (undo-tree-id906 . -4) (undo-tree-id907 . -4) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) (undo-tree-id918 . -4) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -4) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -4) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) 3505) nil (25934 14962 565551 422000) 0 nil])
([nil nil ((3461 . 3464) (t 25934 14962 620571 446000)) nil (25934 15009 89568 23000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3462) (undo-tree-id990 . -1) (#("e" 0 1 (fontified t)) . -3463) (undo-tree-id991 . -1) 3464) nil (25934 15009 89565 667000) 0 nil])
([nil nil ((3462 . 3466)) nil (25934 15009 89552 356000) 0 nil])
([nil nil ((3484 . 3489) (t 25934 15009 135967 757000)) nil (25934 15114 744581 502000) 0 nil])
([nil nil ((3551 . 3560) (t 25934 15120 235227 130000)) nil (25934 15132 595572 892000) 0 nil] [nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3499) (t 25934 15018 206721 862000)) ((3499 . 3500)) (25934 15114 12771 589000) 0 nil])
([nil nil ((3565 . 3567) (#("(" 0 1 (fontified nil)) . -3565) (3560 . 3566)) nil (25934 15132 595571 877000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3498) (undo-tree-id1040 . -1) 3499) ((3498 . 3499)) (25934 15113 829561 292000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3563) (undo-tree-id1041 . -1) (#("n" 0 1 (fontified t)) . -3564) (undo-tree-id1042 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3565) (undo-tree-id1043 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3566)) nil (25934 15132 595570 21000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -3483) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1023 . -1) (undo-tree-id1025 . -1) (undo-tree-id1027 . -1) (undo-tree-id1029 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) 3484) ((3483 . 3484) (t 25934 15108 51637 101000)) (25934 15107 982715 992000) 0 nil])
([nil nil ((3566 . 3581) (3565 . 3567) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3565) (3563 . 3566)) nil (25934 15184 231315 942000) 0 nil])
nil
([nil nil ((3582 . 3591)) nil (25934 15195 259278 804000) 0 nil] [nil nil ((3582 . 3591) (t 25934 15132 638908 336000)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 3582) (undo-tree-id1066 . -1)) (25934 15183 651251 376000) 0 nil])
([nil nil ((3559 . 3561) (#("(" 0 1 (fontified nil)) . -3559) (3551 . 3560)) nil (25934 15195 259276 264000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3498) (undo-tree-id1065 . -1) 3499) ((3498 . 3499)) (25934 15183 246332 947000) 0 nil] [nil nil ((#("        print(net_input.shape)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . 3552) (undo-tree-id1045 . -31) (undo-tree-id1046 . -29) (undo-tree-id1047 . -29) (undo-tree-id1048 . -29) (undo-tree-id1049 . -29) (undo-tree-id1050 . -29) (undo-tree-id1051 . -29) (undo-tree-id1052 . -29)) ((3552 . 3583)) (25934 15152 820791 521000) 0 nil])
([nil nil ((3560 . 3561)) nil (25934 15195 259265 953000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3498)) ((3498 . 3499)) (25934 15183 72879 849000) 0 nil])
([nil nil ((3551 . 3553) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3551) (3551 . 3552)) ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3551) (3551 . 3552) (#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3551) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1)) (25934 15152 803465 240000) 0 nil])
([nil nil ((#("        print(net_input.shape)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t)) . -3563) (undo-tree-id1067 . -30) (undo-tree-id1068 . -29) (undo-tree-id1069 . -29) (undo-tree-id1070 . -29) (undo-tree-id1071 . -29) (undo-tree-id1072 . -29) (undo-tree-id1073 . -30) (undo-tree-id1074 . -30) (undo-tree-id1075 . -30) (undo-tree-id1076 . -30) (undo-tree-id1077 . -30) (undo-tree-id1078 . -30) (undo-tree-id1079 . -30) (undo-tree-id1080 . -30) (undo-tree-id1081 . -30) (undo-tree-id1082 . -30) (undo-tree-id1083 . -30) (undo-tree-id1084 . -30) (undo-tree-id1085 . -30) (undo-tree-id1086 . -30) (undo-tree-id1087 . -30) (undo-tree-id1088 . -30) (undo-tree-id1089 . -30) (undo-tree-id1090 . -30) (undo-tree-id1091 . -30) (undo-tree-id1092 . -30) (undo-tree-id1093 . -30) (undo-tree-id1094 . -30) (undo-tree-id1095 . -30) (undo-tree-id1096 . -30) (undo-tree-id1097 . -30) (undo-tree-id1098 . -30) (undo-tree-id1099 . -30) (undo-tree-id1100 . -30) (undo-tree-id1101 . -30) (undo-tree-id1102 . -30) (undo-tree-id1103 . -30) (undo-tree-id1104 . -30) (undo-tree-id1105 . -30) (undo-tree-id1106 . -30) (undo-tree-id1107 . -30) (undo-tree-id1108 . -30) (undo-tree-id1109 . -30) (undo-tree-id1110 . -30) (undo-tree-id1111 . -30) (undo-tree-id1112 . -30) (undo-tree-id1113 . -30) (undo-tree-id1114 . -30) (undo-tree-id1115 . -30) (undo-tree-id1116 . -30) (undo-tree-id1117 . -30) (undo-tree-id1118 . -30) (undo-tree-id1119 . -30) (undo-tree-id1120 . -30) (undo-tree-id1121 . -30) (undo-tree-id1122 . -30) (undo-tree-id1123 . -30) (undo-tree-id1124 . -30) (undo-tree-id1125 . -30) (undo-tree-id1126 . -30) (undo-tree-id1127 . -30) (undo-tree-id1128 . -30) (undo-tree-id1129 . -30) (undo-tree-id1130 . -31) (undo-tree-id1131 . -31) (undo-tree-id1132 . -31) (undo-tree-id1133 . -31) (undo-tree-id1134 . -31) (undo-tree-id1135 . -31) (undo-tree-id1136 . -31) (undo-tree-id1137 . -31) (undo-tree-id1138 . -31) (undo-tree-id1139 . -31) (undo-tree-id1140 . -31) (undo-tree-id1141 . -31) (undo-tree-id1142 . -31) (undo-tree-id1143 . -31) (undo-tree-id1144 . -31) (undo-tree-id1145 . -31) (undo-tree-id1146 . -31) (undo-tree-id1147 . -31) (undo-tree-id1148 . -31) (undo-tree-id1149 . -31) (undo-tree-id1150 . -31) (undo-tree-id1151 . -31) (undo-tree-id1152 . -31) (undo-tree-id1153 . -31) (undo-tree-id1154 . -31) (undo-tree-id1155 . -31) (undo-tree-id1156 . -31) (undo-tree-id1157 . -31) (undo-tree-id1158 . -31) (undo-tree-id1159 . -31) (undo-tree-id1160 . -31) (undo-tree-id1161 . -31) (undo-tree-id1162 . -31) (undo-tree-id1163 . -31) (undo-tree-id1164 . -31) (undo-tree-id1165 . -31) (undo-tree-id1166 . -31) (undo-tree-id1167 . -31) (undo-tree-id1168 . -31) (undo-tree-id1169 . -31) (undo-tree-id1170 . -31) (undo-tree-id1171 . -31) (undo-tree-id1172 . -30) (undo-tree-id1173 . -31) (undo-tree-id1174 . -31) (undo-tree-id1175 . -31) (undo-tree-id1176 . -31) (undo-tree-id1177 . -31) (undo-tree-id1178 . -31) 3594 (t 25934 15195 342517 669000)) nil (25934 15204 944356 12000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3483)) ((3483 . 3484) (t 25934 15159 982512 692000)) (25934 15159 936526 756000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3551) (undo-tree-id1044 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3552)) ((3551 . 3553)) (25934 15152 802422 80000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3372) (undo-tree-id1215 . -4) 3376 (t 25934 15204 990602 529000)) nil (25934 15292 907884 812000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . -3367) (undo-tree-id1214 . -1) 3368) nil (25934 15292 907878 676000) 0 nil])
([nil nil ((3367 . 3375) (#("    " 0 4 (fontified t)) . 3367) (undo-tree-id1213 . -4) 3371) nil (25934 15292 907872 721000) 0 nil])
([nil nil ((#("        # for i_pop in range(self.N_POP):
        #     if self.VAR_FF[i_pop] > 0:
        #         net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = torch.normal(mean=0.0,
        #                                                                               std=self.VAR_FF[i_pop],
        #                                                                               size=(self.Na[i_pop],),
        #                                                                               dtype=self.FLOAT,
        #                                                                               device=self.device)
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 13 (face font-lock-comment-face fontified t) 13 20 (face font-lock-comment-face fontified t) 20 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t) 29 33 (face font-lock-comment-face fontified t) 33 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 42 (face font-lock-comment-face fontified t) 42 50 (fontified t) 50 52 (face font-lock-comment-delimiter-face fontified t) 52 56 (face font-lock-comment-delimiter-face fontified t) 56 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 63 (face font-lock-comment-face fontified t) 63 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 83 (face font-lock-comment-face fontified t) 83 91 (fontified t) 91 93 (face font-lock-comment-delimiter-face fontified t) 93 101 (face font-lock-comment-delimiter-face fontified t) 101 110 (face font-lock-comment-face fontified t) 110 111 (face font-lock-comment-face fontified t) 111 115 (face font-lock-comment-face fontified t) 115 122 (face font-lock-comment-face fontified t) 122 123 (face font-lock-comment-face fontified t) 123 128 (face font-lock-comment-face fontified t) 128 129 (face font-lock-comment-face fontified t) 129 132 (face font-lock-comment-face fontified t) 132 136 (face font-lock-comment-face fontified t) 136 143 (face font-lock-comment-face fontified t) 143 144 (face font-lock-comment-face fontified t) 144 150 (face font-lock-comment-face fontified t) 150 151 (face font-lock-comment-face fontified t) 151 153 (face font-lock-comment-face fontified t) 153 154 (face font-lock-comment-face fontified t) 154 155 (face font-lock-comment-face fontified t) 155 156 (face font-lock-comment-face fontified t) 156 157 (face font-lock-comment-face fontified t) 157 170 (face font-lock-comment-face fontified t) 170 171 (face font-lock-comment-face fontified t) 171 175 (face font-lock-comment-face fontified t) 175 176 (face font-lock-comment-face fontified t) 176 181 (face font-lock-comment-face fontified t) 181 189 (fontified t) 189 191 (face font-lock-comment-delimiter-face fontified t) 191 269 (face font-lock-comment-delimiter-face fontified t) 269 272 (face font-lock-comment-face fontified t) 272 273 (face font-lock-comment-face fontified t) 273 277 (face font-lock-comment-face fontified t) 277 284 (face font-lock-comment-face fontified t) 284 285 (face font-lock-comment-face fontified t) 285 290 (face font-lock-comment-face fontified t) 290 291 (face font-lock-comment-face fontified t) 291 293 (face font-lock-comment-face fontified t) 293 301 (fontified t) 301 303 (face font-lock-comment-delimiter-face fontified t) 303 381 (face font-lock-comment-delimiter-face fontified t) 381 385 (face font-lock-comment-face fontified t) 385 386 (face font-lock-comment-face fontified t) 386 387 (face font-lock-comment-face fontified t) 387 391 (face font-lock-comment-face fontified t) 391 394 (face font-lock-comment-face fontified t) 394 395 (face font-lock-comment-face fontified t) 395 400 (face font-lock-comment-face fontified t) 400 401 (face font-lock-comment-face fontified t) 401 402 (face font-lock-comment-face fontified t) 402 403 (face font-lock-comment-face fontified t) 403 405 (face font-lock-comment-face fontified t) 405 413 (fontified t) 413 415 (face font-lock-comment-delimiter-face fontified t) 415 493 (face font-lock-comment-delimiter-face fontified t) 493 498 (face font-lock-comment-face fontified t) 498 499 (face font-lock-comment-face fontified t) 499 503 (face font-lock-comment-face fontified t) 503 511 (face font-lock-comment-face fontified t) 511 519 (fontified t) 519 521 (face font-lock-comment-delimiter-face fontified t) 521 599 (face font-lock-comment-delimiter-face fontified t) 599 605 (face font-lock-comment-face fontified t) 605 606 (face font-lock-comment-face fontified t) 606 610 (face font-lock-comment-face fontified t) 610 617 (face font-lock-comment-face fontified t) 617 618 (face font-lock-comment-face fontified t) 618 619 (face font-lock-comment-face fontified t)) . -3571) (undo-tree-id1212 . -619) 4190) nil (25934 15292 907869 25000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3570) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) 3571) nil (25934 15292 907858 291000) 0 nil])
([nil nil ((3710 . 3714) (t 25934 15292 956556 845000)) nil (25934 15401 186520 989000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3710) (undo-tree-id1218 . -4) 3714) nil (25934 15401 186517 882000) 0 nil])
([nil nil ((3710 . 3714)) nil (25934 15401 186512 391000) 0 nil])
([nil nil ((#("            # for i_pop in range(self.N_POP):
            #     rates_old = rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] 
            #     rates_old = rates_old * self.EXP_DT_TAU[i_pop]
            #     inputs = Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])
            #     rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = rates_old + self.DT_TAU[i_pop] * inputs
" 0 12 (fontified t) 12 14 (face font-lock-comment-delimiter-face fontified t) 14 46 (face font-lock-comment-face fontified t) 46 58 (fontified t) 58 64 (face font-lock-comment-delimiter-face fontified t) 64 101 (face font-lock-comment-face fontified t) 101 102 (face font-lock-comment-face fontified t) 102 128 (face font-lock-comment-face fontified t) 128 140 (fontified t) 140 146 (face font-lock-comment-delimiter-face fontified t) 146 187 (face font-lock-comment-face fontified t) 187 193 (face font-lock-comment-face fontified t) 193 205 (fontified t) 205 211 (face font-lock-comment-delimiter-face fontified t) 211 289 (face font-lock-comment-face fontified t) 289 295 (fontified t) 295 301 (fontified t) 301 307 (face font-lock-comment-delimiter-face fontified t) 307 343 (face font-lock-comment-face fontified t) 343 380 (face font-lock-comment-face fontified t) 380 400 (face font-lock-comment-face fontified t)) . 3965) (undo-tree-id1216 . -400) (undo-tree-id1217 . -46)) nil (25934 15401 186506 990000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4031) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) 4035 (t 25934 15401 236727 199000)) nil (25934 15724 743355 387000) 0 nil])
([nil nil ((11363 . 11371) (t 25934 15724 791228 732000)) nil (25934 15816 389820 780000) 0 nil])
([nil nil ((apply -14 11309 11753 undo--wrap-and-run-primitive-undo 11309 11753 ((11656 . 11658) (11568 . 11570) (11499 . 11501) (11426 . 11428) (11384 . 11386) (11348 . 11350) (11317 . 11319) 11730))) nil (25934 15816 389818 591000) 0 nil])
([nil nil ((11745 . 11753) (#("        " 0 8 (fontified nil)) . 11744) (undo-tree-id1315 . -8) (11752 . 11753)) nil (25934 15816 389816 418000) 0 nil])
([nil nil ((11308 . 11321)) nil (25934 15816 389813 97000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11407 . 11408) (nil fontified nil 11407 . 11408) (nil fontified nil 11406 . 11407) (nil fontified nil 11399 . 11406) (nil fontified nil 11395 . 11399) (nil fontified nil 11394 . 11395) (nil fontified nil 11380 . 11394) (nil fontified nil 11376 . 11380) (nil fontified nil 11375 . 11376) (nil fontified nil 11368 . 11375) (nil fontified nil 11367 . 11368) (nil fontified nil 11358 . 11367) (nil fontified nil 11354 . 11358) (nil fontified nil 11346 . 11354) (nil fontified nil 11342 . 11346) (nil fontified nil 11341 . 11342) (nil fontified nil 11340 . 11341) (nil fontified nil 11328 . 11340) (nil fontified nil 11327 . 11328) (nil fontified nil 11326 . 11327) (nil fontified nil 11317 . 11326) (nil fontified nil 11309 . 11317) (11309 . 11408)) nil (25934 15816 389811 477000) 0 nil])
([nil nil ((11317 . 11321) 11309) nil (25934 15816 389801 219000) 0 nil])
([nil nil ((#("rec_input" 0 9 (face font-lock-variable-name-face fontified t)) . 11321)) nil (25934 15816 389799 20000) 0 nil])
([nil nil ((11321 . 11331)) nil (25934 15816 389797 510000) 0 nil])
([nil nil ((11331 . 11335)) nil (25934 15816 389795 903000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -11333) (undo-tree-id1313 . -1) (#("T" 0 1 (face font-lock-variable-name-face fontified t)) . -11334) (undo-tree-id1314 . -1) 11335) nil (25934 15816 389793 351000) 0 nil])
([nil nil ((11333 . 11336)) nil (25934 15816 389788 629000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11317) (undo-tree-id1312 . -4) 11321) nil (25934 15816 389784 957000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11348) (#("," 0 1 (fontified t)) . 11348) (#("P" 0 1 (fontified t)) . 11348) (#("O" 0 1 (fontified t)) . 11348) (#("P" 0 1 (fontified t)) . 11348) (#("_" 0 1 (fontified t)) . 11348) (#("N" 0 1 (fontified t)) . 11348) (#("." 0 1 (fontified t)) . 11348) (#("f" 0 1 (fontified t)) . 11348) (#("l" 0 1 (fontified t)) . 11348) (#("e" 0 1 (fontified t)) . 11348) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . 11348) (t 25934 15816 433216 123000)) nil (25934 15830 263759 814000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11347) (undo-tree-id1320 . -1) 11348) nil (25934 15830 263757 540000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11360) (undo-tree-id1319 . -1) 11361) nil (25934 15830 263755 609000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 11341) (undo-tree-id1316 . -1) (#("e" 0 1 (fontified t)) . 11341) (undo-tree-id1317 . -1) (#("z" 0 1 (fontified t)) . 11341) (undo-tree-id1318 . -1)) nil (25934 15830 263752 709000) 0 nil])
([nil nil ((11342 . 11344)) nil (25934 15830 263738 355000) 0 nil])
([nil nil ((nil fontified nil 11488 . 11489) (nil fontified nil 11487 . 11488) (nil fontified nil 11480 . 11487) (nil fontified nil 11476 . 11480) (nil fontified nil 11475 . 11476) (nil fontified nil 11469 . 11475) (nil fontified nil 11467 . 11469) (nil fontified nil 11462 . 11467) (nil fontified nil 11461 . 11462) (nil fontified nil 11457 . 11461) (nil fontified nil 11456 . 11457) (nil fontified nil 11449 . 11456) (nil fontified nil 11440 . 11449) (nil fontified nil 11436 . 11440) (nil fontified nil 11435 . 11436) (nil fontified nil 11424 . 11435) (nil fontified nil 11423 . 11424) (nil fontified nil 11422 . 11423) (nil fontified nil 11412 . 11422) (nil fontified nil 11411 . 11412) (nil fontified nil 11407 . 11411) (nil fontified nil 11399 . 11407) (11399 . 11489) (t 25934 15830 305575 509000)) nil (25934 15834 403830 383000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 11412) (#("P" 0 1 (face font-lock-variable-name-face fontified t)) . 11412) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . 11412) (#("E" 0 1 (face font-lock-variable-name-face fontified t)) . 11412)) nil (25934 15834 403822 202000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11493) (undo-tree-id1332 . -4) 11497 (t 25934 15834 445685 340000)) nil (25934 16050 257896 791000) 0 nil])
([nil nil ((11486 . 11494) (#("        " 0 8 (fontified nil)) . 11485) (undo-tree-id1331 . -8) (11493 . 11494)) nil (25934 16050 257894 815000) 0 nil])
([nil nil ((11494 . 11515)) nil (25934 16050 257893 223000) 0 nil])
([nil nil ((11515 . 11516)) nil (25934 16050 257892 715000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -11510) (undo-tree-id1325 . -1) (#("E" 0 1 (fontified t)) . -11511) (undo-tree-id1326 . -1) (#("U" 0 1 (fontified t)) . -11512) (undo-tree-id1327 . -1) (#("R" 0 1 (fontified t)) . -11513) (undo-tree-id1328 . -1) (#("O" 0 1 (fontified t)) . -11514) (undo-tree-id1329 . -1) (#("N" 0 1 (fontified t)) . -11515) (undo-tree-id1330 . -1) 11516) nil (25934 16050 257890 983000) 0 nil])
([nil nil ((11510 . 11513)) nil (25934 16050 257884 884000) 0 nil])
([nil nil ((11513 . 11522)) nil (25934 16050 257884 144000) 0 nil])
([nil nil ((11513 . 11515)) nil (25934 16050 257883 446000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -11513) (undo-tree-id1324 . -1) 11514) nil (25934 16050 257882 630000) 0 nil])
([nil nil ((11523 . 11527) 11515) nil (25934 16050 257880 368000) 0 nil])
([nil nil ((11527 . 11539)) nil (25934 16050 257879 376000) 0 nil])
([nil nil ((11539 . 11542)) nil (25934 16050 257878 232000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t)) . -11541) (undo-tree-id1323 . -1) 11542) nil (25934 16050 257876 948000) 0 nil])
([nil nil ((11542 . 11544) (#("[" 0 1 (fontified nil)) . -11542) (11541 . 11543)) nil (25934 16050 257874 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11585 . 11586) (nil fontified nil 11585 . 11586) (nil fontified nil 11583 . 11585) (nil fontified nil 11582 . 11583) (nil fontified nil 11576 . 11582) (nil fontified nil 11575 . 11576) (nil fontified nil 11568 . 11575) (nil fontified nil 11564 . 11568) (nil fontified nil 11561 . 11564) (nil fontified nil 11560 . 11561) (nil fontified nil 11555 . 11560) (nil fontified nil 11554 . 11555) (nil fontified nil 11547 . 11554) (nil fontified nil 11543 . 11547) (11543 . 11586)) nil (25934 16050 257872 559000) 0 nil])
([nil nil ((11587 . 11590)) nil (25934 16050 257869 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11623 . 11624) (nil fontified nil 11623 . 11624) (nil fontified nil 11622 . 11623) (nil fontified nil 11617 . 11622) (nil fontified nil 11616 . 11617) (nil fontified nil 11612 . 11616) (nil fontified nil 11608 . 11612) (nil fontified nil 11607 . 11608) (nil fontified nil 11606 . 11607) (nil fontified nil 11602 . 11606) (nil fontified nil 11598 . 11602) (nil fontified nil 11597 . 11598) (nil fontified nil 11596 . 11597) (nil fontified nil 11590 . 11596) (11590 . 11624)) nil (25934 16050 257868 211000) 0 nil])
([nil nil ((11624 . 11637)) nil (25934 16050 257865 338000) 0 nil])
([nil nil ((11485 . 11493)) nil (25934 16050 257864 772000) 0 nil])
([nil nil ((11203 . 11204)) nil (25934 16050 257864 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11280 . 11281) (nil fontified nil 11280 . 11281) (nil fontified nil 11279 . 11280) (nil fontified nil 11272 . 11279) (nil fontified nil 11268 . 11272) (nil fontified nil 11267 . 11268) (nil fontified nil 11259 . 11267) (nil fontified nil 11256 . 11259) (nil fontified nil 11250 . 11256) (nil fontified nil 11249 . 11250) (nil fontified nil 11239 . 11249) (nil fontified nil 11235 . 11239) (nil fontified nil 11234 . 11235) (nil fontified nil 11221 . 11234) (nil fontified nil 11220 . 11221) (nil fontified nil 11219 . 11220) (nil fontified nil 11217 . 11219) (nil fontified nil 11216 . 11217) (nil fontified nil 11212 . 11216) (nil fontified nil 11204 . 11212) (11204 . 11281)) nil (25934 16050 257863 49000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . 11217) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . 11217)) nil (25934 16050 257860 148000) 0 nil])
([nil nil ((11217 . 11220)) nil (25934 16050 257859 409000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 11242)) nil (25934 16050 257858 714000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -11241) (undo-tree-id1322 . -1) 11242) nil (25934 16050 257857 651000) 0 nil])
([nil nil ((11241 . 11244)) nil (25934 16050 257855 242000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 11252)) nil (25934 16050 257854 597000) 0 nil])
([nil nil ((11252 . 11262)) nil (25934 16050 257853 683000) 0 nil])
([nil nil ((#(".int" 0 1 (fontified t) 1 4 (face font-lock-builtin-face fontified t)) . 11262) (undo-tree-id1321 . -4)) nil (25934 16050 257849 607000) 0 nil])
([nil nil ((#("        self.TAU = torch.tensor(self.TAU, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 36 (face font-lock-keyword-face fontified t) 36 47 (fontified t) 47 48 (face font-lock-operator-face fontified t) 48 52 (face font-lock-keyword-face fontified t) 52 58 (fontified t) 58 66 (fontified t) 66 67 (face font-lock-operator-face fontified t) 67 71 (face font-lock-keyword-face fontified t) 71 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (rear-nonsticky t fontified t)) . 11204) (undo-tree-id1338 . -80) (t 25934 16050 304643 659000)) nil (25934 16062 348824 395000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -11203) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) 11204) nil (25934 16062 348817 237000) 0 nil])
([nil nil ((11308 . 11321)) nil (25934 16062 348800 394000) 0 nil])
([nil nil ((nil fontified nil 11388 . 11389) (nil fontified nil 11387 . 11388) (nil fontified nil 11380 . 11387) (nil fontified nil 11376 . 11380) (nil fontified nil 11375 . 11376) (nil fontified nil 11367 . 11375) (nil fontified nil 11361 . 11367) (nil fontified nil 11357 . 11361) (nil fontified nil 11356 . 11357) (nil fontified nil 11345 . 11356) (nil fontified nil 11341 . 11345) (nil fontified nil 11340 . 11341) (nil fontified nil 11327 . 11340) (nil fontified nil 11326 . 11327) (nil fontified nil 11325 . 11326) (nil fontified nil 11322 . 11325) (nil fontified nil 11321 . 11322) (nil fontified nil 11317 . 11321) (nil fontified nil 11309 . 11317) (11309 . 11389)) nil (25934 16062 348796 387000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -11691) (undo-tree-id1333 . -1) (#("p" 0 1 (fontified t)) . -11692) (undo-tree-id1334 . -1) 11693) nil (25934 16062 348779 143000) 0 nil])
([nil nil ((11691 . 11696)) nil (25934 16062 348741 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11841 . 11842) (nil fontified nil 11841 . 11842) (nil fontified nil 11840 . 11841) (nil fontified nil 11839 . 11840) (nil fontified nil 11834 . 11839) (nil fontified nil 11833 . 11834) (nil fontified nil 11829 . 11833) (nil fontified nil 11825 . 11829) (nil fontified nil 11824 . 11825) (nil fontified nil 11823 . 11824) (nil fontified nil 11819 . 11823) (nil fontified nil 11815 . 11819) (nil fontified nil 11814 . 11815) (nil fontified nil 11813 . 11814) (nil fontified nil 11809 . 11813) (nil fontified nil 11803 . 11809) (nil fontified nil 11802 . 11803) (nil fontified nil 11801 . 11802) (nil fontified nil 11800 . 11801) (nil fontified nil 11799 . 11800) (nil fontified nil 11797 . 11799) (nil fontified nil 11796 . 11797) (nil fontified nil 11790 . 11796) (nil fontified nil 11789 . 11790) (nil fontified nil 11782 . 11789) (nil fontified nil 11778 . 11782) (nil fontified nil 11775 . 11778) (nil fontified nil 11774 . 11775) (nil fontified nil 11769 . 11774) (nil fontified nil 11768 . 11769) (nil fontified nil 11761 . 11768) (nil fontified nil 11757 . 11761) (nil fontified nil 11756 . 11757) (nil fontified nil 11745 . 11756) (nil fontified nil 11741 . 11745) (nil fontified nil 11729 . 11741) (11729 . 11842) (t 25934 16062 421087 298000)) nil (25934 16078 805547 188000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -11804) (undo-tree-id1409 . -1) (#("o" 0 1 (fontified t)) . -11805) (undo-tree-id1410 . -1) (#("r" 0 1 (fontified t)) . -11806) (undo-tree-id1411 . -1) (#("c" 0 1 (fontified t)) . -11807) (undo-tree-id1412 . -1) (#("h" 0 1 (fontified t)) . -11808) (undo-tree-id1413 . -1) (#("." 0 1 (fontified t)) . -11809) (undo-tree-id1414 . -1) (#("e" 0 1 (fontified t)) . -11810) (undo-tree-id1415 . -1) (#("x" 0 1 (fontified t)) . -11811) (undo-tree-id1416 . -1) (#("p" 0 1 (fontified t)) . -11812) (undo-tree-id1417 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11813) (undo-tree-id1418 . -1) (#("-" 0 1 (face font-lock-operator-face fontified t)) . -11814) (undo-tree-id1419 . -1) 11815) nil (25934 16078 805539 547000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t rear-nonsticky t)) . -11829) (undo-tree-id1408 . -1) 11830) nil (25934 16078 805529 839000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 11749)) nil (25934 16078 805527 902000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -11746) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (#("X" 0 1 (fontified t)) . -11747) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("P" 0 1 (fontified t)) . -11748) (undo-tree-id1407 . -1) 11749) nil (25934 16078 805521 802000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11834) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) (undo-tree-id1475 . -4) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) (undo-tree-id1478 . -4) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -4) (undo-tree-id1485 . -4) (undo-tree-id1486 . -4) (undo-tree-id1487 . -4) (undo-tree-id1488 . -4) (undo-tree-id1489 . -4) (undo-tree-id1490 . -4) (undo-tree-id1491 . -4) (undo-tree-id1492 . -4) (undo-tree-id1493 . -4) (undo-tree-id1494 . -4) (undo-tree-id1495 . -4) (undo-tree-id1496 . -4) (undo-tree-id1497 . -4) (undo-tree-id1498 . -4) (undo-tree-id1499 . -4) (undo-tree-id1500 . -4) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -4) (undo-tree-id1510 . -4) (undo-tree-id1511 . -4) (undo-tree-id1512 . -4) (undo-tree-id1513 . -4) (undo-tree-id1514 . -4) (undo-tree-id1515 . -4) (undo-tree-id1516 . -4) (undo-tree-id1517 . -4) (undo-tree-id1518 . -4) (undo-tree-id1519 . -4) (undo-tree-id1520 . -4) (undo-tree-id1521 . -4) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (undo-tree-id1525 . -4) (undo-tree-id1526 . -4) (undo-tree-id1527 . -4) (undo-tree-id1528 . -4) (undo-tree-id1529 . -4) (undo-tree-id1530 . -4) (undo-tree-id1531 . -4) (undo-tree-id1532 . -4) (undo-tree-id1533 . -4) (undo-tree-id1534 . -4) (undo-tree-id1535 . -4) (undo-tree-id1536 . -4) (undo-tree-id1537 . -4) (undo-tree-id1538 . -4) (undo-tree-id1539 . -4) (undo-tree-id1540 . -4) (undo-tree-id1541 . -4) (undo-tree-id1542 . -4) (undo-tree-id1543 . -4) (undo-tree-id1544 . -4) (undo-tree-id1545 . -4) (undo-tree-id1546 . -4) (undo-tree-id1547 . -4) (undo-tree-id1548 . -4) (undo-tree-id1549 . -4) (undo-tree-id1550 . -4) 11838 (t 25934 16078 845695 83000)) nil (25934 16082 60720 469000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3918) (undo-tree-id1555 . -1) (#("0" 0 1 (fontified t)) . -3919) (undo-tree-id1556 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3920) (undo-tree-id1557 . -1) 3921 (t 25934 16082 129817 460000)) nil (25934 16097 632426 210000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3932) (undo-tree-id1552 . -1) (#("0" 0 1 (fontified t)) . -3933) (undo-tree-id1553 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3934) (undo-tree-id1554 . -1) 3935) nil (25934 16097 632420 617000) 0 nil])
([nil nil ((#("rates" 0 5 (fontified t)) . 3895) (undo-tree-id1551 . -5) 3900) nil (25934 16097 632408 708000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3895) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 3895) (#(" " 0 1 (fontified t)) . 3895)) nil (25934 16097 632397 522000) 0 nil])
([nil nil ((3911 . 3919)) nil (25934 16097 632391 80000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11391) (undo-tree-id1558 . -4) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -4) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) (undo-tree-id1573 . -4) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) (undo-tree-id1576 . -4) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) (undo-tree-id1581 . -4) (undo-tree-id1582 . -4) (undo-tree-id1583 . -4) (undo-tree-id1584 . -4) (undo-tree-id1585 . -4) (undo-tree-id1586 . -4) (undo-tree-id1587 . -4) (undo-tree-id1588 . -4) (undo-tree-id1589 . -4) (undo-tree-id1590 . -4) (undo-tree-id1591 . -4) (undo-tree-id1592 . -4) (undo-tree-id1593 . -4) (undo-tree-id1594 . -4) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (undo-tree-id1598 . -4) (undo-tree-id1599 . -4) (undo-tree-id1600 . -4) (undo-tree-id1601 . -4) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (undo-tree-id1604 . -4) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) (undo-tree-id1612 . -4) (undo-tree-id1613 . -4) (undo-tree-id1614 . -4) (undo-tree-id1615 . -4) 11395 (t 25934 16097 670400 210000)) nil (25934 16126 218871 706000) 0 nil])
([nil nil ((11590 . 11594) (t 25934 16126 267487 424000)) nil (25934 16156 577915 494000) 0 nil])
([nil nil ((11598 . 11603) (t 25934 16156 640661 308000)) nil (25934 16164 150782 202000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11601) (undo-tree-id1680 . -1) (#("g" 0 1 (fontified t)) . -11602) (undo-tree-id1681 . -1) 11603) nil (25934 16164 150780 980000) 0 nil])
([nil nil ((11603 . 11605) (#("(" 0 1 (fontified nil)) . -11603) (11601 . 11604)) nil (25934 16164 150777 807000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 11604)) nil (25934 16164 150776 325000) 0 nil])
([nil nil ((11615 . 11616)) nil (25934 16164 150775 377000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11615) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) 11616) nil (25934 16164 150772 415000) 0 nil])
([nil nil ((11614 . 11615)) nil (25934 16164 150707 440000) 0 nil])
([nil nil ((2592 . 2600) (t 25934 16164 192956 0)) nil (25934 16230 240862 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2863) (undo-tree-id1682 . -1) (#(" " 0 1 (fontified t)) . -2864) (undo-tree-id1683 . -1) (#(" " 0 1 (fontified t)) . -2865) (undo-tree-id1684 . -1) (#(" " 0 1 (fontified t)) . -2866) (undo-tree-id1685 . -1) (#(" " 0 1 (fontified t)) . -2867) (undo-tree-id1686 . -1) (#(" " 0 1 (fontified t)) . -2868) (undo-tree-id1687 . -1) (#(" " 0 1 (fontified t)) . -2869) (undo-tree-id1688 . -1) (#(" " 0 1 (fontified t)) . -2870) (undo-tree-id1689 . -1) (#(" " 0 1 (fontified t)) . -2871) (undo-tree-id1690 . -1) (#(" " 0 1 (fontified t)) . -2872) (undo-tree-id1691 . -1) (#(" " 0 1 (fontified t)) . -2873) (undo-tree-id1692 . -1) 2874 (t 25934 16230 307577 518000)) nil (25934 16244 111845 220000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2964) (t 25934 16244 164135 415000)) nil (25934 16323 525653 610000) 0 nil])
([nil nil ((2964 . 2965)) nil (25934 16323 525652 548000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2971)) nil (25934 16323 525650 543000) 0 nil])
([nil nil ((2971 . 2972)) nil (25934 16323 525644 837000) 0 nil])
([nil nil ((2917 . 2933) (#("                " 0 16 (fontified nil)) . 2916) (undo-tree-id1695 . -16) (2932 . 2933) (t 25934 16323 579378 873000)) nil (25934 16349 756805 188000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2940) (2939 . 2940) (2938 . 2940) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2938) (2933 . 2939)) nil (25934 16349 756802 51000) 0 nil])
([nil nil ((2939 . 2948)) nil (25934 16349 756800 717000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2947) (undo-tree-id1694 . -1) 2948) nil (25934 16349 756799 671000) 0 nil])
([nil nil ((2947 . 2951)) nil (25934 16349 756797 249000) 0 nil])
([nil nil ((apply 2 3006 3046 undo--wrap-and-run-primitive-undo 3006 3046 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3022) 3048))) nil (25934 16349 756796 604000) 0 nil])
([nil nil ((2952 . 2969)) nil (25934 16349 756795 226000) 0 nil])
([nil nil ((2939 . 2940)) nil (25934 16349 756794 96000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2939) (undo-tree-id1693 . -1) 2940) nil (25934 16349 756792 713000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 2941) (2940 . 2941) (2939 . 2941) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2939) (2939 . 2940)) nil (25934 16349 756780 409000) 0 nil])
([nil nil ((2940 . 2944)) nil (25934 16349 756778 546000) 0 nil])
([nil nil ((2945 . 2947)) nil (25934 16349 756771 508000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3009) (undo-tree-id1700 . -1) 3010 (t 25934 16349 808464 858000)) nil (25934 16362 529505 641000) 0 nil])
([nil nil ((3009 . 3010)) nil (25934 16362 529502 518000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3016) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1)) nil (25934 16362 529499 668000) 0 nil])
([nil nil ((3016 . 3017)) nil (25934 16362 529473 685000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2960) (undo-tree-id1701 . -1) 2961 (t 25934 16362 592996 453000)) nil (25934 16407 425414 4000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2960) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (#(" " 0 1 (fontified t)) . -2961) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (#(" " 0 1 (fontified t)) . -2962) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (#(" " 0 1 (fontified nil)) . -2963) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (#(" " 0 1 (fontified nil)) . -2964) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (#(" " 0 1 (fontified nil)) . -2965) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (#(" " 0 1 (fontified nil)) . -2966) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (#(" " 0 1 (fontified t)) . -2967) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (#(" " 0 1 (fontified t)) . -2968) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (#(" " 0 1 (fontified t)) . -2969) (undo-tree-id2013 . -1) (#(" " 0 1 (fontified t)) . -2970) (undo-tree-id2014 . -1) (#(" " 0 1 (fontified t)) . -2971) (undo-tree-id2015 . -1) (#(" " 0 1 (fontified t)) . -2972) (undo-tree-id2016 . -1) (#(" " 0 1 (fontified t)) . -2973) (undo-tree-id2017 . -1) (#(" " 0 1 (fontified t)) . -2974) (undo-tree-id2018 . -1) (#(" " 0 1 (fontified t)) . -2975) (undo-tree-id2019 . -1) 2976 (t 25934 16407 478873 409000)) nil (25934 16410 156411 56000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2992) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) 2993 (t 25934 16410 210988 145000)) nil (25934 16414 692901 826000) 0 nil])
([nil nil ((2992 . 2993)) nil (25934 16414 692856 723000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2999)) nil (25934 16414 692855 217000) 0 nil])
([nil nil ((2999 . 3000)) nil (25934 16414 692849 387000) 0 nil])
([nil nil ((2960 . 2977) (t 25934 16414 739178 423000)) nil (25934 16444 59083 35000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2984) (2983 . 2984) (2982 . 2984) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2982) (2977 . 2983)) nil (25934 16444 59082 49000) 0 nil])
([nil nil ((2983 . 2990)) nil (25934 16444 59080 743000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2989) (undo-tree-id2060 . -1) 2990) nil (25934 16444 59079 674000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2993) (2992 . 2993) (2991 . 2993) (#("[" 0 1 (fontified nil)) . -2991) (2989 . 2992)) nil (25934 16444 59077 619000) 0 nil])
([nil nil ((2992 . 2998)) nil (25934 16444 59076 668000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2997) (undo-tree-id2059 . -1) 2998) nil (25934 16444 59075 649000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 3000) (2999 . 3000) (2998 . 3000) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2998) (2998 . 2999)) nil (25934 16444 59073 742000) 0 nil])
([nil nil ((2999 . 3002)) nil (25934 16444 59072 690000) 0 nil])
([nil nil ((3002 . 3004)) nil (25934 16444 59072 198000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3045) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1)) nil (25934 16444 59071 114000) 0 nil])
([nil nil ((3045 . 3046)) nil (25934 16444 59055 265000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3038)) nil (25934 16444 59054 34000) 0 nil])
([nil nil ((3038 . 3039)) nil (25934 16444 59052 661000) 0 nil])
([nil nil ((3006 . 3023)) nil (25934 16444 59047 296000) 0 nil])
([nil nil ((2916 . 2932) (t 25934 16444 100415 544000)) nil (25934 16516 565392 571000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2863) (undo-tree-id2061 . -1) (#(" " 0 1 (fontified t)) . -2864) (undo-tree-id2062 . -1) (#(" " 0 1 (fontified t)) . -2865) (undo-tree-id2063 . -1) (#(" " 0 1 (fontified t)) . -2866) (undo-tree-id2064 . -1) (#(" " 0 1 (fontified t)) . -2867) (undo-tree-id2065 . -1) 2868 (t 25934 16516 613388 280000)) nil (25934 16596 413266 682000) 0 nil])
([nil nil ((apply 2 2864 2909 undo--wrap-and-run-primitive-undo 2864 2909 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2880) 2911))) nil (25934 16596 413252 588000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3001) (t 25934 16596 454434 749000)) nil (25934 16634 767636 226000) 0 nil])
([nil nil ((3001 . 3002)) nil (25934 16634 767635 300000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -3001) (undo-tree-id2069 . -1) 3002) nil (25934 16634 767634 159000) 0 nil])
([nil nil ((3001 . 3002)) nil (25934 16634 767632 274000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3001) (undo-tree-id2068 . -1) 3002) nil (25934 16634 767631 442000) 0 nil])
([nil nil ((3001 . 3002)) nil (25934 16634 767629 458000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3008)) nil (25934 16634 767628 625000) 0 nil])
([nil nil ((3008 . 3009)) nil (25934 16634 767627 965000) 0 nil])
([nil nil ((#("ç" 0 1 (fontified t)) . -3008) (undo-tree-id2067 . -1) 3009) nil (25934 16634 767626 942000) 0 nil])
([nil nil ((3008 . 3009)) nil (25934 16634 767622 252000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3071) (undo-tree-id2066 . -1) 3072) nil (25934 16634 767619 240000) 0 nil])
([nil nil ((3071 . 3072)) nil (25934 16634 767602 450000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3064)) nil (25934 16634 767600 654000) 0 nil])
([nil nil ((3064 . 3065)) nil (25934 16634 767594 146000) 0 nil])
([nil nil ((apply -2 2864 2928 undo--wrap-and-run-primitive-undo 2864 2928 ((2880 . 2882) 2909))) nil (25934 16651 771039 259000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1950) (undo-tree-id2070 . -1) 1951 (t 25934 16651 822218 105000)) nil (25934 16668 609756 35000) 0 nil])
([nil nil ((1950 . 1951)) nil (25934 16668 609742 370000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1957)) nil (25934 16668 609740 430000) 0 nil])
([nil nil ((1957 . 1958)) nil (25934 16668 609733 3000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1950) (undo-tree-id2077 . -1) 1951 (t 25934 16668 678990 326000)) nil (25934 16682 888328 854000) 0 nil])
([nil nil ((1950 . 1951)) nil (25934 16682 888322 363000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1957) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1)) nil (25934 16682 888317 778000) 0 nil])
([nil nil ((1957 . 1958)) nil (25934 16682 888270 768000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1957) (undo-tree-id2080 . -1) 1958 (t 25934 16682 972413 609000)) nil (25934 16699 552660 322000) 0 nil])
([nil nil ((1957 . 1958)) nil (25934 16699 552657 638000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1950) (undo-tree-id2079 . -1) 1951) nil (25934 16699 552656 612000) 0 nil])
([nil nil ((1950 . 1951)) nil (25934 16699 552654 319000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1777) (undo-tree-id2078 . -1) 1778) nil (25934 16699 552653 47000) 0 nil])
([nil nil ((1777 . 1778)) nil (25934 16699 552641 67000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1793)) nil (25934 16699 552639 344000) 0 nil])
([nil nil ((1793 . 1794)) nil (25934 16699 552632 313000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1911) (undo-tree-id2082 . -1) 1912 (t 25934 16699 613587 939000)) nil (25934 16706 447330 388000) 0 nil])
([nil nil ((1911 . 1912)) nil (25934 16706 447322 660000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1918) (undo-tree-id2081 . -1) 1919) nil (25934 16706 447318 664000) 0 nil])
([nil nil ((1918 . 1919)) nil (25934 16706 447295 451000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2880) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2880) (t 25934 16706 528466 215000)) nil (25934 16776 713800 963000) 0 nil])
([nil nil ((#("                r_pres = r_pres.unsqueeze(0)
" 0 16 (fontified t) 16 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (fontified t)) . -2864) (undo-tree-id2083 . -44) (undo-tree-id2084 . -44) (undo-tree-id2085 . -44) (undo-tree-id2086 . -44) (undo-tree-id2087 . -45) (undo-tree-id2088 . -45) (undo-tree-id2089 . -45) (undo-tree-id2090 . -45) (undo-tree-id2091 . -45) (undo-tree-id2092 . -45) (undo-tree-id2093 . -45) (undo-tree-id2094 . -45) (undo-tree-id2095 . -45) (undo-tree-id2096 . -45) (undo-tree-id2097 . -45) (undo-tree-id2098 . -45) (undo-tree-id2099 . -45) (undo-tree-id2100 . -45) (undo-tree-id2101 . -45) (undo-tree-id2102 . -45) (undo-tree-id2103 . -45) (undo-tree-id2104 . -45) (undo-tree-id2105 . -45) (undo-tree-id2106 . -45) (undo-tree-id2107 . -45) (undo-tree-id2108 . -45) (undo-tree-id2109 . -45) (undo-tree-id2110 . -45) (undo-tree-id2111 . -45) (undo-tree-id2112 . -45) (undo-tree-id2113 . -44) (undo-tree-id2114 . -45) (undo-tree-id2115 . -44) (undo-tree-id2116 . -44) (undo-tree-id2117 . -44) (undo-tree-id2118 . -44) (undo-tree-id2119 . -44) (undo-tree-id2120 . -44) (undo-tree-id2121 . -44) (undo-tree-id2122 . -44) (undo-tree-id2123 . -44) (undo-tree-id2124 . -44) (undo-tree-id2125 . -44) (undo-tree-id2126 . -44) (undo-tree-id2127 . -44) (undo-tree-id2128 . -44) (undo-tree-id2129 . -44) (undo-tree-id2130 . -44) (undo-tree-id2131 . -44) (undo-tree-id2132 . -44) (undo-tree-id2133 . -44) (undo-tree-id2134 . -44) (undo-tree-id2135 . -44) (undo-tree-id2136 . -44) (undo-tree-id2137 . -44) (undo-tree-id2138 . -44) (undo-tree-id2139 . -44) (undo-tree-id2140 . -44) (undo-tree-id2141 . -44) (undo-tree-id2142 . -44) (undo-tree-id2143 . -44) (undo-tree-id2144 . -44) (undo-tree-id2145 . -44) (undo-tree-id2146 . -16) (undo-tree-id2147 . -16) (undo-tree-id2148 . -16) (undo-tree-id2149 . -16) (undo-tree-id2150 . -16) (undo-tree-id2151 . -16) (undo-tree-id2152 . -16) (undo-tree-id2153 . -16) (undo-tree-id2154 . -16) (undo-tree-id2155 . -16) (undo-tree-id2156 . -16) (undo-tree-id2157 . -16) (undo-tree-id2158 . -16) (undo-tree-id2159 . -16) (undo-tree-id2160 . -16) (undo-tree-id2161 . -16) (undo-tree-id2162 . -16) (undo-tree-id2163 . -16) (undo-tree-id2164 . -16) (undo-tree-id2165 . -16) (undo-tree-id2166 . -16) (undo-tree-id2167 . -16) (undo-tree-id2168 . -16) (undo-tree-id2169 . -16) (undo-tree-id2170 . -16) (undo-tree-id2171 . -16) (undo-tree-id2172 . -16) (undo-tree-id2173 . -16) (undo-tree-id2174 . -16) (undo-tree-id2175 . -16) (undo-tree-id2176 . -16) (undo-tree-id2177 . -16) (undo-tree-id2178 . -16) (undo-tree-id2179 . -16) (undo-tree-id2180 . -16) (undo-tree-id2181 . -16) (undo-tree-id2182 . -16) (undo-tree-id2183 . -16) (undo-tree-id2184 . -16) (undo-tree-id2185 . -16) (undo-tree-id2186 . -16) (undo-tree-id2187 . -16) (undo-tree-id2188 . -16) (undo-tree-id2189 . -16) (undo-tree-id2190 . -16) (undo-tree-id2191 . -16) (undo-tree-id2192 . -16) (undo-tree-id2193 . -16) (undo-tree-id2194 . -16) (undo-tree-id2195 . -16) (undo-tree-id2196 . -16) (undo-tree-id2197 . -16) (undo-tree-id2198 . -16) (undo-tree-id2199 . -16) (undo-tree-id2200 . -16) (undo-tree-id2201 . -16) (undo-tree-id2202 . -16) (undo-tree-id2203 . -16) (undo-tree-id2204 . -16) (undo-tree-id2205 . -16) (undo-tree-id2206 . -16) (undo-tree-id2207 . -16) (undo-tree-id2208 . -16) (undo-tree-id2209 . -16) (undo-tree-id2210 . -16) (undo-tree-id2211 . -16) (undo-tree-id2212 . -16) (undo-tree-id2213 . -16) (undo-tree-id2214 . -16) (undo-tree-id2215 . -16) (undo-tree-id2216 . -16) (undo-tree-id2217 . -16) (undo-tree-id2218 . -16) (undo-tree-id2219 . -16) (undo-tree-id2220 . -16) (undo-tree-id2221 . -16) (undo-tree-id2222 . -16) (undo-tree-id2223 . -16) (undo-tree-id2224 . -16) (undo-tree-id2225 . -16) (undo-tree-id2226 . -45) (undo-tree-id2227 . -45) (undo-tree-id2228 . -45) (undo-tree-id2229 . -45) (undo-tree-id2230 . -45) (undo-tree-id2231 . -45) (undo-tree-id2232 . -45) (undo-tree-id2233 . -45) (undo-tree-id2234 . -45) (undo-tree-id2235 . -45) (undo-tree-id2236 . -45) (undo-tree-id2237 . -45) (undo-tree-id2238 . -45) (undo-tree-id2239 . -45) (undo-tree-id2240 . -45) (undo-tree-id2241 . -45) (undo-tree-id2242 . -45) (undo-tree-id2243 . -45) (undo-tree-id2244 . -45) (undo-tree-id2245 . -45) (undo-tree-id2246 . -45) (undo-tree-id2247 . -45) (undo-tree-id2248 . -45) (undo-tree-id2249 . -45) (undo-tree-id2250 . -45) (undo-tree-id2251 . -45) (undo-tree-id2252 . -45) (undo-tree-id2253 . -45) (undo-tree-id2254 . -45) (undo-tree-id2255 . -45) (undo-tree-id2256 . -45) (undo-tree-id2257 . -45) (undo-tree-id2258 . -45) (undo-tree-id2259 . -45) (undo-tree-id2260 . -45) (undo-tree-id2261 . -45) (undo-tree-id2262 . -45) (undo-tree-id2263 . -45) (undo-tree-id2264 . -45) (undo-tree-id2265 . -45) (undo-tree-id2266 . -45) 2909) nil (25934 16776 713787 998000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2852) (undo-tree-id2278 . -1) 2853 (t 25934 16776 766618 908000)) nil (25934 16799 8407 98000) 0 nil])
([nil nil ((2852 . 2853)) nil (25934 16799 8405 561000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2831) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) 2832) nil (25934 16799 8403 989000) 0 nil])
([nil nil ((2831 . 2832)) nil (25934 16799 8382 213000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2640) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (#(" " 0 1 (fontified t)) . -2641) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (#(" " 0 1 (fontified t)) . -2642) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (#(" " 0 1 (fontified t)) . -2643) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (#(" " 0 1 (fontified t)) . -2644) (undo-tree-id2511 . -1) (#(" " 0 1 (fontified t)) . -2645) (undo-tree-id2512 . -1) (#(" " 0 1 (fontified t)) . -2646) (undo-tree-id2513 . -1) (#(" " 0 1 (fontified t)) . -2647) (undo-tree-id2514 . -1) (#(" " 0 1 (fontified t)) . -2648) (undo-tree-id2515 . -1) (#(" " 0 1 (fontified t)) . -2649) (undo-tree-id2516 . -1) (#(" " 0 1 (fontified t)) . -2650) (undo-tree-id2517 . -1) (#(" " 0 1 (fontified nil)) . -2651) (undo-tree-id2518 . -1) (#(" " 0 1 (fontified t)) . -2652) (undo-tree-id2519 . -1) (#(" " 0 1 (fontified nil)) . -2653) (undo-tree-id2520 . -1) (#(" " 0 1 (fontified t)) . -2654) (undo-tree-id2521 . -1) (#(" " 0 1 (fontified t)) . -2655) (undo-tree-id2522 . -1) 2656 (t 25934 16799 56011 414000)) nil (25934 20424 380836 334000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2815) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) 2816 (t 25934 16880 196199 120000)) nil (25934 20545 936403 320000) 0 nil] [nil nil ((2600 . 2606) (t 25934 16880 196199 120000)) ((#("rrredb" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 2600) (undo-tree-id2529 . -6) (undo-tree-id2530 . -6) (undo-tree-id2531 . -6) (undo-tree-id2532 . -6) (undo-tree-id2533 . -6) (undo-tree-id2534 . -6) (undo-tree-id2535 . -6) (undo-tree-id2536 . -6) (undo-tree-id2537 . -6) (undo-tree-id2538 . -6) (undo-tree-id2539 . -6) (undo-tree-id2540 . -6) (undo-tree-id2541 . -6) (undo-tree-id2542 . -6) (undo-tree-id2543 . -6) (undo-tree-id2544 . -6) (undo-tree-id2545 . -6) (undo-tree-id2546 . -6) (undo-tree-id2547 . -6) (undo-tree-id2548 . -6) (undo-tree-id2549 . -6) (undo-tree-id2550 . -6) (undo-tree-id2551 . -6) (undo-tree-id2552 . -6) (undo-tree-id2553 . -6) (undo-tree-id2554 . -6) (undo-tree-id2555 . -6) (undo-tree-id2556 . -6) (undo-tree-id2557 . -6) (undo-tree-id2558 . -6) (undo-tree-id2559 . -6) (undo-tree-id2560 . -6) (undo-tree-id2561 . -6) (undo-tree-id2562 . -6) (undo-tree-id2563 . -6) (undo-tree-id2564 . -6) (undo-tree-id2565 . -6) (undo-tree-id2566 . -6) (undo-tree-id2567 . -6)) (25934 20423 776758 422000) 0 nil])
([nil nil ((2815 . 2816)) nil (25934 20545 936399 936000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2600) (undo-tree-id2523 . -1) (#("r" 0 1 (fontified t)) . -2601) (undo-tree-id2524 . -1) (#("r" 0 1 (fontified t)) . -2602) (undo-tree-id2525 . -1) (#("e" 0 1 (fontified t)) . -2603) (undo-tree-id2526 . -1) (#("d" 0 1 (fontified t)) . -2604) (undo-tree-id2527 . -1) (#("b" 0 1 (fontified t)) . -2605) (undo-tree-id2528 . -1) 2606) ((2600 . 2606)) (25934 20423 391021 855000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2815) (undo-tree-id2574 . -1) (#("_" 0 1 (fontified t)) . -2816) (undo-tree-id2575 . -1) 2817) nil (25934 20545 936398 953000) 0 nil])
([nil nil ((2649 . 2650) (2649 . 2650)) ((#("
" 0 1 (fontified nil)) . 2649) (#("
" 0 1 (fontified t)) . 2649)) (25934 20423 390301 824000) 0 nil])
([nil nil ((2815 . 2817)) nil (25934 20545 936396 853000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t)) . 2836)) nil (25934 20545 936396 282000) 0 nil])
([nil nil ((2836 . 2837)) nil (25934 20545 936395 831000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2940)) nil (25934 20545 936395 133000) 0 nil])
([nil nil ((2940 . 2941)) nil (25934 20545 936394 606000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2947)) nil (25934 20545 936393 876000) 0 nil])
([nil nil ((2947 . 2948)) nil (25934 20545 936393 249000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2947) (undo-tree-id2573 . -1) 2948) nil (25934 20545 936392 558000) 0 nil])
([nil nil ((2947 . 2948)) nil (25934 20545 936391 22000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3010) (undo-tree-id2572 . -1) 3011) nil (25934 20545 936390 271000) 0 nil])
([nil nil ((3010 . 3011)) nil (25934 20545 936388 817000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 3003) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1)) nil (25934 20545 936387 584000) 0 nil])
([nil nil ((3003 . 3004)) nil (25934 20545 936371 473000) 0 nil])
([nil nil ((1924 . 1941) (t 25934 20545 972935 682000)) nil (25934 20568 671881 30000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1948) (1947 . 1948) (1946 . 1948) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1946) (1941 . 1947)) nil (25934 20568 671879 95000) 0 nil])
([nil nil ((1947 . 1956)) nil (25934 20568 671874 165000) 0 nil])
([nil nil ((1950 . 1952) (t 25934 20568 712593 941000)) nil (25934 20593 285549 715000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1950) (undo-tree-id2606 . -1) (#("e" 0 1 (fontified t)) . -1951) (undo-tree-id2607 . -1) 1952) nil (25934 20593 285548 373000) 0 nil])
([nil nil ((1951 . 1952)) nil (25934 20593 285545 469000) 0 nil])
([nil nil ((1952 . 1961)) nil (25934 20593 285544 555000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1958) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (#("d" 0 1 (fontified t)) . -1959) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (#("a" 0 1 (fontified t)) . -1960) (undo-tree-id2605 . -1) 1961) nil (25934 20593 285542 112000) 0 nil])
([nil nil ((1958 . 1963)) nil (25934 20593 285507 658000) 0 nil])
([nil nil ((1645 . 1653) (#("        " 0 8 (fontified nil)) . 1644) (undo-tree-id2777 . -8) (1652 . 1653) (t 25934 20593 328234 396000)) nil (25934 20636 683775 490000) 0 nil])
([nil nil ((1653 . 1655)) nil (25934 20636 683774 241000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1653) (undo-tree-id2775 . -1) (#("n" 0 1 (fontified t)) . -1654) (undo-tree-id2776 . -1) 1655) nil (25934 20636 683773 538000) 0 nil])
([nil nil ((1653 . 1659)) nil (25934 20636 683771 750000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -1653) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (#("a" 0 1 (fontified t)) . -1654) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (#("b" 0 1 (fontified t)) . -1655) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (#(" " 0 1 (fontified t)) . -1656) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1657) (undo-tree-id2773 . -1) (#(" " 0 1 (fontified t)) . -1658) (undo-tree-id2774 . -1) 1659) nil (25934 20636 683767 378000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1644) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) 1645) nil (25934 20636 683675 826000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1962) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (#("s" 0 1 (fontified t)) . -1963) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (#("h" 0 1 (fontified t)) . -1964) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (#("a" 0 1 (fontified t)) . -1965) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (#("p" 0 1 (fontified t)) . -1966) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (#("e" 0 1 (fontified t)) . -1967) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) 1968 (t 25934 20636 723625 375000)) nil (25934 20644 470217 701000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1964) (1963 . 1964) (1962 . 1964) (#("[" 0 1 (fontified nil)) . -1962) (1962 . 1963)) nil (25934 20644 470183 257000) 0 nil])
([nil nil ((1963 . 1964)) nil (25934 20644 470182 204000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1967) (1966 . 1967) (1965 . 1967) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1965) (1965 . 1966)) nil (25934 20644 470180 760000) 0 nil])
([nil nil ((1966 . 1967)) nil (25934 20644 470176 139000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1962) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (#("0" 0 1 (fontified t)) . -1963) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1964) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1965) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (#("0" 0 1 (fontified t)) . -1966) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1967) (undo-tree-id2871 . -1) 1968 (t 25934 20644 507519 322000)) nil (25934 20700 829860 47000) 0 nil])
([nil nil ((apply -2 1578 1655 undo--wrap-and-run-primitive-undo 1578 1655 ((1586 . 1588) 1644))) nil (25934 20700 829805 984000) 0 nil])
([nil nil ((1647 . 1655) (#("        " 0 8 (fontified nil)) . 1646) (undo-tree-id2825 . -8) (undo-tree-id2826 . -8) (undo-tree-id2827 . -8) (undo-tree-id2828 . -8) (undo-tree-id2829 . -8) (undo-tree-id2830 . -8) (1654 . 1655)) nil (25934 20700 829804 205000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1651) (undo-tree-id2824 . -4) 1655) nil (25934 20700 829789 151000) 0 nil])
([nil nil ((1647 . 1655) (#("    " 0 4 (fontified t)) . 1647) (undo-tree-id2823 . -4) 1651) nil (25934 20700 829784 745000) 0 nil])
([nil nil ((1655 . 1659)) nil (25934 20700 829780 883000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1657) (undo-tree-id2821 . -1) (#("f" 0 1 (fontified t)) . -1658) (undo-tree-id2822 . -1) 1659) nil (25934 20700 829779 935000) 0 nil])
([nil nil ((1657 . 1663)) nil (25934 20700 829776 797000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1662) (undo-tree-id2820 . -1) 1663) nil (25934 20700 829775 921000) 0 nil])
([nil nil ((1662 . 1670)) nil (25934 20700 829772 976000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1669) (undo-tree-id2819 . -1) 1670) nil (25934 20700 829772 189000) 0 nil])
([nil nil ((1676 . 1679) (1675 . 1677) (#("(" 0 1 (fontified nil)) . -1675) (1669 . 1676)) nil (25934 20700 829770 146000) 0 nil])
([nil nil ((1679 . 1690)) nil (25934 20700 829768 107000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1689) (undo-tree-id2818 . -1) 1690) nil (25934 20700 829766 59000) 0 nil])
([nil nil ((1689 . 1704)) nil (25934 20700 829762 947000) 0 nil])
([nil nil ((1705 . 1714)) nil (25934 20700 829762 293000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1704) (undo-tree-id2817 . -1) 1705) nil (25934 20700 829761 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1740 . 1741) (nil fontified nil 1740 . 1741) (nil fontified nil 1733 . 1740) (nil fontified nil 1729 . 1733) (nil fontified nil 1728 . 1729) (nil fontified nil 1722 . 1728) (nil fontified nil 1714 . 1722) (nil fontified nil 1710 . 1714) (nil fontified nil 1709 . 1710) (nil fontified nil 1704 . 1709) (1704 . 1741)) nil (25934 20700 829759 409000) 0 nil])
([nil nil ((1704 . 1706)) nil (25934 20700 829757 481000) 0 nil])
([nil nil ((1706 . 1709)) nil (25934 20700 829755 978000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1708) (undo-tree-id2816 . -1) 1709) nil (25934 20700 829754 276000) 0 nil])
([nil nil ((1708 . 1711)) nil (25934 20700 829750 253000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1709) (undo-tree-id2814 . -1) (#(" " 0 1 (fontified t)) . -1710) (undo-tree-id2815 . -1) 1711) nil (25934 20700 829748 215000) 0 nil])
([nil nil ((1709 . 1710)) nil (25934 20700 829741 214000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -1709) (undo-tree-id2813 . -1) 1710) nil (25934 20700 829738 979000) 0 nil])
([nil nil ((1709 . 1713)) nil (25934 20700 829731 162000) 0 nil])
([nil nil ((1713 . 1715)) nil (25934 20700 829730 701000) 0 nil])
([nil nil ((1714 . 1715)) nil (25934 20700 829730 34000) 0 nil])
([nil nil ((1716 . 1717)) nil (25934 20700 829725 565000) 0 nil])
([nil nil ((apply -6 1764 2042 undo--wrap-and-run-primitive-undo 1764 2042 ((1860 . 1862) (1814 . 1816) (1772 . 1774) 1971))) nil (25934 20726 806454 345000) 0 nil])
([nil nil ((apply 4 1764 1848 undo--wrap-and-run-primitive-undo 1764 1848 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1812) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1772) 1764))) nil (25934 20726 806453 896000) 0 nil])
([nil nil ((1848 . 1864) (#("        " 0 8 (fontified t)) . 1848)) nil (25934 20726 806453 453000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1865)) nil (25934 20726 806451 593000) 0 nil])
([nil nil ((1935 . 1951) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 1934) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (1935 . 1936)) nil (25934 20726 806450 485000) 0 nil])
([nil nil ((1951 . 1953)) nil (25934 20726 806448 203000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2024) (2023 . 2024) (2022 . 2024) (#("[" 0 1 (face font-lock-variable-name-face fontified nil)) . -2022) (2022 . 2023)) nil (25934 20726 806447 167000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2044) (undo-tree-id2903 . -1) 2045) nil (25934 20726 806446 86000) 0 nil])
([nil nil ((2044 . 2045)) nil (25934 20726 806443 187000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2051) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) 2052) nil (25934 20726 806438 77000) 0 nil])
([nil nil ((2051 . 2052)) nil (25934 20726 806383 347000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2008) (undo-tree-id2911 . -1) (#("j" 0 1 (fontified t)) . -2009) (undo-tree-id2912 . -1) 2010 (t 25934 20726 842451 984000)) nil (25934 20775 192232 179000) 0 nil])
([nil nil ((2008 . 2010)) nil (25934 20775 192230 90000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -2009) (undo-tree-id2910 . -1) 2010) nil (25934 20775 192229 334000) 0 nil])
([nil nil ((2009 . 2010)) nil (25934 20775 192227 930000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2066 . 2067) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (nil fontified nil 2063 . 2065) (nil fontified nil 2062 . 2063) (nil fontified nil 2056 . 2062) (nil fontified nil 2055 . 2056) (nil fontified nil 2048 . 2055) (nil fontified nil 2044 . 2048) (nil fontified nil 2041 . 2044) (nil fontified nil 2040 . 2041) (nil fontified nil 2035 . 2040) (nil fontified nil 2034 . 2035) (nil fontified nil 2027 . 2034) (nil fontified nil 2023 . 2027) (nil fontified nil 2022 . 2023) (2022 . 2067)) nil (25934 20775 192227 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2111 . 2112) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2108 . 2110) (nil fontified nil 2107 . 2108) (nil fontified nil 2101 . 2107) (nil fontified nil 2100 . 2101) (nil fontified nil 2093 . 2100) (nil fontified nil 2089 . 2093) (nil fontified nil 2086 . 2089) (nil fontified nil 2085 . 2086) (nil fontified nil 2080 . 2085) (nil fontified nil 2079 . 2080) (nil fontified nil 2072 . 2079) (nil fontified nil 2068 . 2072) (nil fontified nil 2067 . 2068) (2067 . 2112)) nil (25934 20775 192225 458000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 2112) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2112) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1)) nil (25934 20775 192223 629000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2080) (undo-tree-id2906 . -1) 2081) nil (25934 20775 192220 66000) 0 nil])
([nil nil ((2080 . 2081)) nil (25934 20775 192211 478000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2101)) nil (25934 20775 192210 363000) 0 nil])
([nil nil ((2101 . 2102)) nil (25934 20775 192205 904000) 0 nil])
([nil nil ((apply -4 2146 2243 undo--wrap-and-run-primitive-undo 2146 2243 ((2203 . 2205) (2162 . 2164) 2230))) nil (25934 20777 628422 534000) 0 nil])
([nil nil ((2234 . 2250) (#("        " 0 8 (fontified t)) . 2234) (undo-tree-id2913 . -8) (t 25934 20777 665838 485000)) nil (25934 20778 535982 627000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2375) (undo-tree-id2916 . -1) (#("i" 0 1 (fontified t)) . -2376) (undo-tree-id2917 . -1) (#("_" 0 1 (fontified t)) . -2377) (undo-tree-id2918 . -1) (#("p" 0 1 (fontified t)) . -2378) (undo-tree-id2919 . -1) (#("o" 0 1 (fontified t)) . -2379) (undo-tree-id2920 . -1) (#("p" 0 1 (fontified t)) . -2380) (undo-tree-id2921 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2381) (undo-tree-id2922 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2382) (undo-tree-id2923 . -1) (#("i" 0 1 (fontified t)) . -2383) (undo-tree-id2924 . -1) (#("_" 0 1 (fontified t)) . -2384) (undo-tree-id2925 . -1) (#("p" 0 1 (fontified t)) . -2385) (undo-tree-id2926 . -1) (#("o" 0 1 (fontified t)) . -2386) (undo-tree-id2927 . -1) (#("p" 0 1 (fontified t)) . -2387) (undo-tree-id2928 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -2388) (undo-tree-id2929 . -1) 2389 (t 25934 20778 573827 813000)) nil (25934 20822 752195 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2429 . 2430) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2426 . 2428) (nil fontified nil 2425 . 2426) (nil fontified nil 2419 . 2425) (nil fontified nil 2418 . 2419) (nil fontified nil 2411 . 2418) (nil fontified nil 2407 . 2411) (nil fontified nil 2404 . 2407) (nil fontified nil 2403 . 2404) (nil fontified nil 2398 . 2403) (nil fontified nil 2397 . 2398) (nil fontified nil 2390 . 2397) (nil fontified nil 2386 . 2390) (nil fontified nil 2385 . 2386) (2385 . 2430)) nil (25934 20822 752184 461000) 0 nil])
([nil nil ((2314 . 2323)) nil (25934 20822 752182 832000) 0 nil])
([nil nil ((2329 . 2342) (2328 . 2330) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2328) (2323 . 2329)) nil (25934 20822 752182 110000) 0 nil])
([nil nil ((2342 . 2345)) nil (25934 20822 752181 307000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2343) (undo-tree-id2914 . -1) (#("d" 0 1 (fontified t)) . -2344) (undo-tree-id2915 . -1) 2345) nil (25934 20822 752179 543000) 0 nil])
([nil nil ((2343 . 2353)) nil (25934 20822 752167 399000) 0 nil])
([nil nil ((2007 . 2012) (t 25934 20822 789319 597000)) nil (25934 20840 68633 107000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1770) (1769 . 1770) (1768 . 1770) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1768) (1763 . 1769) (t 25934 20840 113126 371000)) nil (25934 20883 650175 991000) 0 nil])
([nil nil ((1769 . 1777)) nil (25934 20883 650175 104000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1776) (undo-tree-id3019 . -1) 1777) nil (25934 20883 650174 445000) 0 nil])
([nil nil ((1776 . 1778)) nil (25934 20883 650173 74000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1777) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) 1778) nil (25934 20883 650168 94000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2055) (t 25934 20883 684654 89000)) nil (25934 20930 963877 767000) 0 nil])
([nil nil ((2055 . 2056)) nil (25934 20930 963876 758000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2076)) nil (25934 20930 963875 962000) 0 nil])
([nil nil ((2076 . 2077)) nil (25934 20930 963875 245000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2100) (undo-tree-id3020 . -1) 2101) nil (25934 20930 963873 966000) 0 nil])
([nil nil ((2100 . 2101)) nil (25934 20930 963863 88000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2121)) nil (25934 20930 963861 630000) 0 nil])
([nil nil ((2121 . 2122)) nil (25934 20930 963855 353000) 0 nil])
([nil nil ((1778 . 1787) (t 25934 20931 20161 723000)) nil (25934 20987 39846 999000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1794) (1793 . 1794) (1792 . 1794) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -1792) (1787 . 1793)) nil (25934 20987 39846 2000) 0 nil])
([nil nil ((1793 . 1799)) nil (25934 20987 39845 292000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1798) (undo-tree-id3026 . -1) 1799) nil (25934 20987 39844 671000) 0 nil])
([nil nil ((1798 . 1805)) nil (25934 20987 39843 184000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -1802) (undo-tree-id3023 . -1) (#("e" 0 1 (fontified t)) . -1803) (undo-tree-id3024 . -1) (#("i" 0 1 (fontified t)) . -1804) (undo-tree-id3025 . -1) 1805) nil (25934 20987 39842 263000) 0 nil])
([nil nil ((1802 . 1808)) nil (25934 20987 39839 594000) 0 nil])
([nil nil ((1814 . 1816) (1813 . 1815) (#("[" 0 1 (fontified nil)) . -1813) (1808 . 1814)) nil (25934 20987 39838 880000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -1814) (undo-tree-id3021 . -1) (#(":" 0 1 (fontified t)) . -1815) (undo-tree-id3022 . -1) 1816) nil (25934 20987 39837 691000) 0 nil])
([nil nil ((1814 . 1818)) nil (25934 20987 39829 162000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1821) (1820 . 1821) (1819 . 1821) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -1819) (1819 . 1820)) nil (25934 20987 39827 783000) 0 nil])
([nil nil ((1820 . 1824)) nil (25934 20987 39823 167000) 0 nil])
([nil nil ((1826 . 1835) (t 25934 20987 83603 941000)) nil (25934 20988 941849 226000) 0 nil])
([nil nil ((2062 . 2079) (t 25934 20988 979585 527000)) nil (25934 21016 325544 516000) 0 nil])
([nil nil ((2079 . 2085)) nil (25934 21016 325543 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2114 . 2115) (nil fontified nil 2114 . 2115) (nil fontified nil 2103 . 2114) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2089 . 2101) (nil fontified nil 2085 . 2089) (2085 . 2115)) nil (25934 21016 325543 273000) 0 nil])
([nil nil ((2115 . 2132)) nil (25934 21016 325541 986000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2139) (2138 . 2139) (2137 . 2139) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2137) (2132 . 2138)) nil (25934 21016 325541 111000) 0 nil])
([nil nil ((2138 . 2141)) nil (25934 21016 325540 285000) 0 nil])
([nil nil ((2141 . 2145)) nil (25934 21016 325539 731000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2143) (undo-tree-id3027 . -1) (#("h" 0 1 (fontified t)) . -2144) (undo-tree-id3028 . -1) 2145) nil (25934 21016 325538 225000) 0 nil])
([nil nil ((2143 . 2147)) nil (25934 21016 325527 648000) 0 nil])
([nil nil ((2148 . 2165)) nil (25934 21016 325522 803000) 0 nil])
([nil nil ((apply -2 2166 2369 undo--wrap-and-run-primitive-undo 2166 2369 ((2182 . 2184) 2326))) nil (25934 21017 944201 429000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 2140) (2139 . 2140) (2138 . 2140) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2138) (2138 . 2139) (t 25934 21017 999307 139000)) nil (25934 21030 473004 314000) 0 nil])
([nil nil ((2139 . 2142)) nil (25934 21030 473002 999000) 0 nil])
([nil nil ((2143 . 2145)) nil (25934 21030 472999 137000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2301) (undo-tree-id3373 . -1) (#("=" 0 1 (face font-lock-comment-face fontified t)) . -2302) (undo-tree-id3374 . -1) 2303 (t 25934 21030 503189 135000)) nil (25934 21080 535382 116000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 2302) (2301 . 2302) (#("]" 0 1 (face font-lock-comment-face fontified nil rear-nonsticky t)) . 2300) (2301 . 2302)) nil (25934 21080 535380 378000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2300) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) 2301) nil (25934 21080 535379 468000) 0 nil])
([nil nil ((2301 . 2302)) nil (25934 21080 535376 608000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -2301) (undo-tree-id3368 . -1) 2302) nil (25934 21080 535376 63000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2307 . 2308) (nil fontified nil 2307 . 2308) (nil fontified nil 2301 . 2307) (2301 . 2308)) nil (25934 21080 535374 979000) 0 nil])
([nil nil ((2338 . 2339)) nil (25934 21080 535374 285000) 0 nil])
([nil nil ((apply 2 2156 2338 undo--wrap-and-run-primitive-undo 2156 2338 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2189) 2340))) nil (25934 21080 535373 526000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -2315) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (#("e" 0 1 (fontified t)) . -2316) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (#("i" 0 1 (fontified t)) . -2317) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (#("g" 0 1 (fontified t)) . -2318) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (#("h" 0 1 (fontified t)) . -2319) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (#("t" 0 1 (fontified t)) . -2320) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (#("s" 0 1 (fontified t)) . -2321) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -2322) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2323) (#("i" 0 1 (fontified nil)) . -2323) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (#("_" 0 1 (fontified nil)) . -2324) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (#("p" 0 1 (fontified nil)) . -2325) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (#("o" 0 1 (fontified nil)) . -2326) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (#("p" 0 1 (fontified nil)) . -2327) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (#("," 0 1 (fontified t)) . -2328) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (#(" " 0 1 (fontified t)) . -2329) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (#("j" 0 1 (fontified t)) . -2330) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (#("_" 0 1 (fontified t)) . -2331) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (#("p" 0 1 (fontified t)) . -2332) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (#("o" 0 1 (fontified t)) . -2333) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (#("p" 0 1 (fontified t)) . -2334) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2335) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) 2336) nil (25934 21080 535366 394000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2314) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) 2315) nil (25934 21080 535222 915000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2306) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (#("e" 0 1 (fontified t)) . -2307) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (#("l" 0 1 (fontified t)) . -2308) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -2309) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (#("." 0 1 (fontified t)) . -2310) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (#("i" 0 1 (fontified t)) . -2311) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -2312) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (#("i" 0 1 (fontified t)) . -2313) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) 2314) nil (25934 21080 535212 788000) 0 nil])
([nil nil ((2306 . 2310)) nil (25934 21080 535159 868000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2222)) nil (25934 21080 535159 416000) 0 nil])
([nil nil ((2222 . 2223)) nil (25934 21080 535159 55000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2243) (undo-tree-id3055 . -1) 2244) nil (25934 21080 535158 528000) 0 nil])
([nil nil ((2243 . 2244)) nil (25934 21080 535157 535000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2243) (undo-tree-id3054 . -1) 2244) nil (25934 21080 535157 52000) 0 nil])
([nil nil ((2243 . 2244)) nil (25934 21080 535155 965000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2267)) nil (25934 21080 535155 419000) 0 nil])
([nil nil ((2267 . 2268)) nil (25934 21080 535154 870000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2288) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) 2289) nil (25934 21080 535153 249000) 0 nil])
([nil nil ((2288 . 2289)) nil (25934 21080 535094 426000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2299) (undo-tree-id3411 . -1) (#("f" 0 1 (fontified t)) . -2300) (undo-tree-id3412 . -1) (#("i" 0 1 (fontified t)) . -2301) (undo-tree-id3413 . -1) (#("l" 0 1 (fontified t)) . -2302) (undo-tree-id3414 . -1) (#("l" 0 1 (fontified t)) . -2303) (undo-tree-id3415 . -1) (#("_" 0 1 (fontified t)) . -2304) (undo-tree-id3416 . -1) 2305 (t 25934 21080 574727 664000)) nil (25934 21105 327289 575000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 2299) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1)) nil (25934 21105 327284 465000) 0 nil])
([nil nil ((2299 . 2302)) nil (25934 21105 327275 450000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -2305) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) 2306) nil (25934 21105 327271 547000) 0 nil])
([nil nil ((2177 . 2179) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -2177) (2172 . 2178) (t 25934 21105 374505 303000)) nil (25934 21145 233598 920000) 0 nil])
([nil nil ((nil fontified nil 2287 . 2288) (nil fontified nil 2286 . 2287) (nil fontified nil 2284 . 2286) (nil fontified nil 2283 . 2284) (nil fontified nil 2278 . 2283) (nil fontified nil 2277 . 2278) (nil fontified nil 2276 . 2277) (nil fontified nil 2269 . 2276) (nil fontified nil 2265 . 2269) (nil fontified nil 2262 . 2265) (nil fontified nil 2261 . 2262) (nil fontified nil 2257 . 2261) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (nil fontified nil 2248 . 2255) (nil fontified nil 2244 . 2248) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2239 . 2241) (nil fontified nil 2238 . 2239) (nil fontified nil 2233 . 2238) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2224 . 2231) (nil fontified nil 2220 . 2224) (nil fontified nil 2217 . 2220) (nil fontified nil 2216 . 2217) (nil fontified nil 2212 . 2216) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2203 . 2210) (nil fontified nil 2199 . 2203) (nil fontified nil 2198 . 2199) (nil fontified nil 2194 . 2198) (nil fontified nil 2182 . 2194) (nil fontified nil 2178 . 2182) (2178 . 2288)) nil (25934 21145 233596 436000) 0 nil])
([nil nil ((2288 . 2294)) nil (25934 21145 233585 948000) 0 nil])
([nil nil ((2295 . 2312) (t 25934 21145 290155 406000)) nil (25934 21226 914616 273000) 0 nil])
([nil nil ((apply -2 2313 2489 undo--wrap-and-run-primitive-undo 2313 2489 ((2329 . 2331) 2446))) nil (25934 21369 719061 936000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . -2242) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2243) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) 2244) nil (25934 21374 689367 954000) 0 nil] [nil nil ((#("l" 0 1 (fontified t)) . -2267) (undo-tree-id3663 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -2268) (undo-tree-id3664 . -1) (#("." 0 1 (fontified nil)) . -2269) (undo-tree-id3665 . -1) (#("c" 0 1 (fontified nil)) . -2270) (undo-tree-id3666 . -1) (#("s" 0 1 (fontified nil)) . -2271) (undo-tree-id3667 . -1) (#("u" 0 1 (fontified t)) . -2272) (undo-tree-id3668 . -1) (#("m" 0 1 (fontified t)) . -2273) (undo-tree-id3669 . -1) (#("N" 0 1 (fontified t)) . -2274) (undo-tree-id3670 . -1) (#("a" 0 1 (fontified t)) . -2275) (undo-tree-id3671 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2276) (undo-tree-id3672 . -1) (#("j" 0 1 (fontified t)) . -2277) (undo-tree-id3673 . -1) (#("_" 0 1 (fontified t)) . -2278) (undo-tree-id3674 . -1) (#("p" 0 1 (fontified t)) . -2279) (undo-tree-id3675 . -1) (#("o" 0 1 (fontified t)) . -2280) (undo-tree-id3676 . -1) (#("p" 0 1 (fontified t)) . -2281) (undo-tree-id3677 . -1) (#(" " 0 1 (fontified t)) . -2282) (undo-tree-id3678 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -2283) (undo-tree-id3679 . -1) (#(" " 0 1 (fontified t)) . -2284) (undo-tree-id3680 . -1) (#("1" 0 1 (fontified t)) . -2285) (undo-tree-id3681 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2286) (undo-tree-id3682 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . -2287) (undo-tree-id3683 . -1) 2288 (t 25934 21226 957467 493000)) ((2267 . 2288)) (25934 21368 516476 587000) 0 nil])
([nil nil ((2242 . 2243)) nil (25934 21374 689247 139000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -2246) (undo-tree-id3563 . -1) (undo-tree-id3565 . -1) (undo-tree-id3567 . -1) (undo-tree-id3569 . -1) (undo-tree-id3571 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3576 . -1) (undo-tree-id3578 . -1) (undo-tree-id3580 . -1) (undo-tree-id3582 . -1) (undo-tree-id3584 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -2247) (undo-tree-id3587 . -1) (undo-tree-id3589 . -1) (undo-tree-id3591 . -1) (undo-tree-id3593 . -1) (undo-tree-id3595 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3600 . -1) (undo-tree-id3602 . -1) (undo-tree-id3604 . -1) (undo-tree-id3606 . -1) (#("." 0 1 (fontified nil)) . -2248) (undo-tree-id3609 . -1) (undo-tree-id3611 . -1) (undo-tree-id3613 . -1) (undo-tree-id3615 . -1) (undo-tree-id3617 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3622 . -1) (undo-tree-id3624 . -1) (undo-tree-id3626 . -1) (#("c" 0 1 (fontified t)) . -2249) (undo-tree-id3629 . -1) (undo-tree-id3631 . -1) (undo-tree-id3633 . -1) (undo-tree-id3635 . -1) (undo-tree-id3637 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3642 . -1) (undo-tree-id3644 . -1) (#("s" 0 1 (fontified t)) . -2250) (undo-tree-id3646 . -1) (#("u" 0 1 (fontified t)) . -2251) (undo-tree-id3647 . -1) (#("m" 0 1 (fontified t)) . -2252) (undo-tree-id3648 . -1) (#("N" 0 1 (fontified t)) . -2253) (undo-tree-id3649 . -1) (#("a" 0 1 (fontified t)) . -2254) (undo-tree-id3650 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2255) (undo-tree-id3651 . -1) (#("j" 0 1 (fontified t)) . -2256) (undo-tree-id3652 . -1) (#("_" 0 1 (fontified t)) . -2257) (undo-tree-id3653 . -1) (#("p" 0 1 (fontified t)) . -2258) (undo-tree-id3654 . -1) (#("o" 0 1 (fontified t)) . -2259) (undo-tree-id3655 . -1) (#("p" 0 1 (fontified t)) . -2260) (undo-tree-id3656 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2261) (undo-tree-id3657 . -1) (#(" " 0 1 (fontified t)) . -2262) (undo-tree-id3658 . -1) (#(":" 0 1 (fontified t)) . -2263) (undo-tree-id3659 . -1) (#(" " 0 1 (fontified t)) . -2264) (undo-tree-id3660 . -1) (#("s" 0 1 (fontified t)) . -2265) (undo-tree-id3661 . -1) (#("e" 0 1 (fontified t)) . -2266) (undo-tree-id3662 . -1) 2267) ((2246 . 2267)) (25934 21367 999525 311000) 0 nil])
([nil nil ((2243 . 2244) (t 25934 21374 736303 120000)) nil (25934 21375 464581 755000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2243) (undo-tree-id3418 . -1) (undo-tree-id3420 . -1) (undo-tree-id3422 . -1) (undo-tree-id3424 . -1) (undo-tree-id3426 . -1) (undo-tree-id3428 . -1) (undo-tree-id3430 . -1) (undo-tree-id3432 . -1) (undo-tree-id3434 . -1) (undo-tree-id3436 . -1) (undo-tree-id3438 . -1) (undo-tree-id3440 . -1) (undo-tree-id3442 . -1) (undo-tree-id3444 . -1) (undo-tree-id3446 . -1) (undo-tree-id3448 . -1) (undo-tree-id3450 . -1) (undo-tree-id3452 . -1) (undo-tree-id3454 . -1) (undo-tree-id3456 . -1) (undo-tree-id3458 . -1) (undo-tree-id3460 . -1) (undo-tree-id3462 . -1) (undo-tree-id3464 . -1) (undo-tree-id3466 . -1) (undo-tree-id3468 . -1) (undo-tree-id3470 . -1) (undo-tree-id3472 . -1) (undo-tree-id3474 . -1) (undo-tree-id3476 . -1) (undo-tree-id3478 . -1) (undo-tree-id3480 . -1) (undo-tree-id3482 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3487 . -1) (undo-tree-id3489 . -1) (undo-tree-id3491 . -1) (#("s" 0 1 (fontified t)) . -2244) (undo-tree-id3494 . -1) (undo-tree-id3496 . -1) (undo-tree-id3498 . -1) (undo-tree-id3500 . -1) (undo-tree-id3502 . -1) (undo-tree-id3504 . -1) (undo-tree-id3506 . -1) (undo-tree-id3508 . -1) (undo-tree-id3510 . -1) (undo-tree-id3512 . -1) (undo-tree-id3514 . -1) (undo-tree-id3516 . -1) (undo-tree-id3518 . -1) (undo-tree-id3520 . -1) (undo-tree-id3522 . -1) (undo-tree-id3524 . -1) (undo-tree-id3526 . -1) (undo-tree-id3528 . -1) (undo-tree-id3530 . -1) (undo-tree-id3532 . -1) (undo-tree-id3534 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -2245) (undo-tree-id3537 . -1) (undo-tree-id3539 . -1) (undo-tree-id3541 . -1) (undo-tree-id3543 . -1) (undo-tree-id3545 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3550 . -1) (undo-tree-id3552 . -1) (undo-tree-id3554 . -1) (undo-tree-id3556 . -1) (undo-tree-id3558 . -1) (undo-tree-id3560 . -1) 2246) ((2243 . 2246) (t 25934 21248 377292 738000)) (25934 21248 335414 931000) 0 nil])
([nil nil ((#("                print(self.Wab.weight.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1], self.csumNa[j_pop] : self.csumNa[j_pop + 1]].shape)
" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 26 (face font-lock-keyword-face fontified t) 26 38 (fontified t) 38 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 55 (face (rainbow-delimiters-depth-3-face) fontified t) 55 56 (fontified t) 56 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 64 (fontified t) 64 68 (face font-lock-keyword-face fontified t) 68 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-3-face) fontified t) 76 77 (fontified t) 77 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 85 (fontified t) 85 86 (face (rainbow-delimiters-depth-3-face) fontified t) 86 88 (fontified t) 88 89 (face font-lock-keyword-face fontified t) 89 90 (face font-lock-keyword-face fontified t) 90 91 (face font-lock-keyword-face fontified t) 91 92 (face font-lock-keyword-face fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-3-face) fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-3-face) fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (face font-lock-keyword-face fontified t) 110 111 (face font-lock-keyword-face fontified t) 111 112 (face font-lock-keyword-face fontified t) 112 113 (face font-lock-keyword-face fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (face (rainbow-delimiters-depth-3-face) fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (face font-lock-operator-face fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (face (rainbow-delimiters-depth-3-face) fontified t) 131 132 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 132 138 (fontified t) 138 139 (face (rainbow-delimiters-depth-1-face) fontified t) 139 140 (fontified t)) . -2156) (undo-tree-id3853 . -88) (undo-tree-id3854 . -16) (undo-tree-id3855 . -16) (undo-tree-id3856 . -16) (undo-tree-id3857 . -16) (undo-tree-id3858 . -16) (undo-tree-id3859 . -16) (undo-tree-id3860 . -16) (undo-tree-id3861 . -16) (undo-tree-id3862 . -16) (undo-tree-id3863 . -22) (undo-tree-id3864 . -138) (undo-tree-id3865 . -138) (undo-tree-id3866 . -138) (undo-tree-id3867 . -138) (undo-tree-id3868 . -86) (undo-tree-id3869 . -86) (undo-tree-id3870 . -86) (undo-tree-id3871 . -86) (undo-tree-id3872 . -88) (undo-tree-id3873 . -88) (undo-tree-id3874 . -88) (undo-tree-id3875 . -88) (undo-tree-id3876 . -88) (undo-tree-id3877 . -88) (undo-tree-id3878 . -140) 2296 (t 25934 21375 512297 241000)) nil (25934 21401 134595 962000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2155) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) 2156) nil (25934 21401 134576 471000) 0 nil])
([nil nil ((2155 . 2156)) nil (25934 21401 134552 31000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2189) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2189)) nil (25934 21401 134551 191000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 2253)) nil (25934 21401 134550 307000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2253)) nil (25934 21401 134549 622000) 0 nil])
([nil nil ((2253 . 2255)) nil (25934 21401 134548 864000) 0 nil])
([nil nil ((2255 . 2292) (#(" " 0 1 (fontified nil)) . 2254) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (2255 . 2256)) nil (25934 21547 922703 73000) 0 nil])
([nil nil ((nil fontified t 2417 . 2418) (t 25934 21551 303016 611000) (nil face font-lock-comment-face 2417 . 2418) (t 25934 21551 303016 611000) (nil fontified t 2416 . 2417) (t 25934 21551 303016 611000) (nil face font-lock-comment-face 2416 . 2417) (t 25934 21551 303016 611000) (#("][" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t)) . -2416) (t 25934 21551 303016 611000) (2418 . 2420) (t 25934 21551 303016 611000)) nil (25934 21579 460488 209000) 0 nil] [nil nil ((2342 . 2359) (t 25934 21401 176104 37000)) ((#("
                " 0 17 (fontified t)) . 2342)) (25934 21547 445412 517000) 0 nil])
([nil nil ((nil fontified t 3266 . 3267) (nil face (rainbow-delimiters-depth-1-face) 3266 . 3267) (nil fontified t 3265 . 3266) (nil face (rainbow-delimiters-depth-1-face) 3265 . 3266) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3265) (3267 . 3269)) nil (25934 21579 460485 560000) 0 nil])
([nil nil ((2064 . 2080) (#("                " 0 16 (fontified nil)) . 2063) (undo-tree-id3879 . -16) (2079 . 2080) (t 25934 21403 296088 182000)) ((#("
" 0 1 (fontified nil)) . 2079) (2063 . 2079) (#("                " 0 16 (fontified t)) . 2064)) (25934 21547 231642 23000) 0 nil])
([nil nil ((nil fontified t 3486 . 3487) (nil face (rainbow-delimiters-depth-2-face) 3486 . 3487) (nil fontified t 3485 . 3486) (nil face (rainbow-delimiters-depth-2-face) 3485 . 3486) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -3485) (3487 . 3489)) nil (25934 21579 460484 151000) 0 nil])
([nil nil ((2466 . 2482) (#("        " 0 8 (fontified t)) . 2466) (t 25934 21405 432072 223000)) ((2466 . 2474) (#("                " 0 8 (fontified t) 8 12 (fontified t) 12 16 (fontified t)) . 2466) (undo-tree-id5014 . -8) (undo-tree-id5015 . -8) (undo-tree-id5016 . -12) (undo-tree-id5017 . -12) (undo-tree-id5018 . -12) (undo-tree-id5019 . -12) (undo-tree-id5020 . -12) (undo-tree-id5021 . -12) (undo-tree-id5022 . -12) (undo-tree-id5023 . -12) (undo-tree-id5024 . -12) (undo-tree-id5025 . -12) (undo-tree-id5026 . -12) (undo-tree-id5027 . -12) (undo-tree-id5028 . -12) (undo-tree-id5029 . -12) (undo-tree-id5030 . -12) (undo-tree-id5031 . -12) (undo-tree-id5032 . -12) (undo-tree-id5033 . -12) (undo-tree-id5034 . -12) (undo-tree-id5035 . -12) (undo-tree-id5036 . -12) (undo-tree-id5037 . -12) (undo-tree-id5038 . -12) (undo-tree-id5039 . -12) (undo-tree-id5040 . -16) (undo-tree-id5041 . -16) (undo-tree-id5042 . -16) (undo-tree-id5043 . -16) (undo-tree-id5044 . -16) (undo-tree-id5045 . -16) (undo-tree-id5046 . -16) (undo-tree-id5047 . -16) (undo-tree-id5048 . -16) (undo-tree-id5049 . -16) (undo-tree-id5050 . -16) (undo-tree-id5051 . -16) (undo-tree-id5052 . -16) (undo-tree-id5053 . -16) (undo-tree-id5054 . -16) (undo-tree-id5055 . -16) (undo-tree-id5056 . -16) (undo-tree-id5057 . -16) (undo-tree-id5058 . -16) (undo-tree-id5059 . -16) (undo-tree-id5060 . -16) (undo-tree-id5061 . -16) (undo-tree-id5062 . -16) (undo-tree-id5063 . -16) (undo-tree-id5064 . -16) (undo-tree-id5065 . -16) (undo-tree-id5066 . -16) (undo-tree-id5067 . -16) (undo-tree-id5068 . -16) (undo-tree-id5069 . -16) (undo-tree-id5070 . -16) (undo-tree-id5071 . -16) (undo-tree-id5072 . -16)) (25934 21546 809839 727000) 0 nil])
([nil nil ((nil fontified t 3549 . 3550) (nil face (rainbow-delimiters-depth-1-face) 3549 . 3550) (nil fontified t 3548 . 3549) (nil face (rainbow-delimiters-depth-1-face) 3548 . 3549) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3548) (3550 . 3552)) nil (25934 21579 460482 826000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2478) (undo-tree-id3970 . -4) (undo-tree-id3972 . -4) (undo-tree-id3974 . -4) (undo-tree-id3976 . -4) (undo-tree-id3978 . -4) (undo-tree-id3980 . -4) (undo-tree-id3982 . -4) (undo-tree-id3984 . -4) (undo-tree-id3986 . -4) (undo-tree-id3988 . -4) (undo-tree-id3990 . -4) (undo-tree-id3992 . -4) (undo-tree-id3994 . -4) (undo-tree-id3996 . -4) (undo-tree-id3998 . -4) (undo-tree-id4000 . -4) (undo-tree-id4002 . -4) (undo-tree-id4004 . -4) (undo-tree-id4006 . -4) (undo-tree-id4008 . -4) (undo-tree-id4010 . -4) (undo-tree-id4012 . -4) (undo-tree-id4014 . -4) (undo-tree-id4016 . -4) (undo-tree-id4017 . -4) (undo-tree-id4019 . -4) (undo-tree-id4021 . -4) (undo-tree-id4023 . -4) 2482) ((2478 . 2482)) (25934 21546 627520 697000) 0 nil])
([nil nil ((nil fontified t 3654 . 3655) (nil face (rainbow-delimiters-depth-1-face) 3654 . 3655) (nil fontified t 3653 . 3654) (nil face (rainbow-delimiters-depth-1-face) 3653 . 3654) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3653) (3655 . 3657)) nil (25934 21579 460481 404000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2474) (undo-tree-id3881 . -4) (undo-tree-id3883 . -4) (undo-tree-id3885 . -4) (undo-tree-id3887 . -4) (undo-tree-id3889 . -4) (undo-tree-id3891 . -4) (undo-tree-id3893 . -4) (undo-tree-id3895 . -4) (undo-tree-id3897 . -4) (undo-tree-id3899 . -4) (undo-tree-id3901 . -4) (undo-tree-id3903 . -4) (undo-tree-id3905 . -4) (undo-tree-id3907 . -4) (undo-tree-id3909 . -4) (undo-tree-id3911 . -4) (undo-tree-id3913 . -4) (undo-tree-id3915 . -4) (undo-tree-id3917 . -4) (undo-tree-id3919 . -4) (undo-tree-id3921 . -4) (undo-tree-id3923 . -4) (undo-tree-id3925 . -4) (undo-tree-id3927 . -4) (undo-tree-id3929 . -4) (undo-tree-id3931 . -4) (undo-tree-id3933 . -4) (undo-tree-id3935 . -4) (undo-tree-id3937 . -4) (undo-tree-id3939 . -4) (undo-tree-id3941 . -4) (undo-tree-id3943 . -4) (undo-tree-id3945 . -4) (undo-tree-id3947 . -4) (undo-tree-id3949 . -4) (undo-tree-id3951 . -4) (undo-tree-id3953 . -4) (undo-tree-id3955 . -4) (undo-tree-id3957 . -4) (undo-tree-id3959 . -4) (undo-tree-id3961 . -4) (undo-tree-id3963 . -4) (undo-tree-id3965 . -4) (undo-tree-id3967 . -4) 2478) ((2474 . 2478)) (25934 21546 438242 642000) 0 nil])
([nil nil ((nil fontified t 8134 . 8135) (nil face (rainbow-delimiters-depth-1-face) 8134 . 8135) (nil fontified t 8133 . 8134) (nil face (rainbow-delimiters-depth-1-face) 8133 . 8134) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8133) (8135 . 8137)) nil (25934 21579 460480 103000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3283) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3283) (t 25934 21412 508019 468000)) ((3283 . 3284) (3283 . 3284)) (25934 21545 927554 908000) 0 nil])
([nil nil ((nil fontified t 8873 . 8874) (nil face (rainbow-delimiters-depth-1-face) 8873 . 8874) (nil fontified t 8872 . 8873) (nil face (rainbow-delimiters-depth-1-face) 8872 . 8873) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8872) (8874 . 8876)) nil (25934 21579 460478 559000) 0 nil])
([nil nil ((3283 . 3285)) ((#(", " 0 2 (fontified t)) . 3283) (undo-tree-id5013 . -2)) (25934 21545 594312 43000) 0 nil])
([nil nil ((nil fontified t 9181 . 9182) (nil face (rainbow-delimiters-depth-1-face) 9181 . 9182) (nil fontified t 9180 . 9181) (nil face (rainbow-delimiters-depth-1-face) 9180 . 9181) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9180) (9182 . 9184)) nil (25934 21579 460477 61000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 3503) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3503)) ((3503 . 3504) (3503 . 3504)) (25934 21545 380239 180000) 0 nil])
([nil nil ((nil fontified t 9665 . 9666) (nil face (rainbow-delimiters-depth-1-face) 9665 . 9666) (nil fontified t 9664 . 9665) (nil face (rainbow-delimiters-depth-1-face) 9664 . 9665) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9664) (9666 . 9668)) nil (25934 21579 460475 623000) 0 nil])
([nil nil ((3503 . 3505)) ((#("n " 0 1 (fontified t) 1 2 (fontified t)) . 3503) (undo-tree-id4973 . -2) (undo-tree-id4974 . -2) (undo-tree-id4975 . -2) (undo-tree-id4976 . -2) (undo-tree-id4977 . -2) (undo-tree-id4978 . -2) (undo-tree-id4979 . -2) (undo-tree-id4980 . -2) (undo-tree-id4981 . -2) (undo-tree-id4982 . -2) (undo-tree-id4983 . -2) (undo-tree-id4984 . -2) (undo-tree-id4985 . -2) (undo-tree-id4986 . -2) (undo-tree-id4987 . -2) (undo-tree-id4988 . -2) (undo-tree-id4989 . -2) (undo-tree-id4990 . -2) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) (undo-tree-id4995 . -2) (undo-tree-id4996 . -2) (undo-tree-id4997 . -2) (undo-tree-id4998 . -2) (undo-tree-id4999 . -2) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -2) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2)) (25934 21544 917978 277000) 0 nil])
([nil nil ((nil fontified t 9707 . 9708) (nil face (rainbow-delimiters-depth-1-face) 9707 . 9708) (nil fontified t 9706 . 9707) (nil face (rainbow-delimiters-depth-1-face) 9706 . 9707) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9706) (9708 . 9710)) nil (25934 21579 460474 298000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3503) (undo-tree-id4033 . -1) (#(" " 0 1 (fontified t)) . -3504) (undo-tree-id4034 . -1) 3505) ((3503 . 3505)) (25934 21544 488592 578000) 0 nil])
([nil nil ((nil fontified t 9734 . 9735) (nil face (rainbow-delimiters-depth-1-face) 9734 . 9735) (nil fontified t 9733 . 9734) (nil face (rainbow-delimiters-depth-1-face) 9733 . 9734) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9733) (9735 . 9737)) nil (25934 21579 460472 691000) 0 nil])
([nil nil ((3503 . 3505)) ((#(", " 0 2 (fontified t)) . 3503) (undo-tree-id4970 . -2) (undo-tree-id4971 . -2) (undo-tree-id4972 . -2)) (25934 21543 835790 683000) 0 nil])
([nil nil ((nil fontified t 9823 . 9824) (nil face (rainbow-delimiters-depth-1-face) 9823 . 9824) (nil fontified t 9822 . 9823) (nil face (rainbow-delimiters-depth-1-face) 9822 . 9823) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9822) (9824 . 9826)) nil (25934 21579 460470 906000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3566) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3566)) ((3566 . 3567) (3566 . 3567)) (25934 21543 629194 905000) 0 nil])
([nil nil ((nil fontified t 10039 . 10040) (nil face (rainbow-delimiters-depth-1-face) 10039 . 10040) (nil fontified t 10038 . 10039) (nil face (rainbow-delimiters-depth-1-face) 10038 . 10039) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10038) (10040 . 10042)) nil (25934 21579 460469 307000) 0 nil])
([nil nil ((3566 . 3567)) ((#("n" 0 1 (fontified t)) . 3566) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1)) (25934 21543 15598 972000) 0 nil])
([nil nil ((nil fontified t 10286 . 10287) (nil face (rainbow-delimiters-depth-1-face) 10286 . 10287) (nil fontified t 10285 . 10286) (nil face (rainbow-delimiters-depth-1-face) 10285 . 10286) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10285) (10287 . 10289)) nil (25934 21579 460466 787000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3566) (undo-tree-id4026 . -1) 3567) ((3566 . 3567)) (25934 21542 579597 623000) 0 nil])
([nil nil ((nil fontified t 10357 . 10358) (nil face (rainbow-delimiters-depth-1-face) 10357 . 10358) (nil fontified t 10356 . 10357) (nil face (rainbow-delimiters-depth-1-face) 10356 . 10357) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10356) (10358 . 10360)) nil (25934 21579 460465 236000) 0 nil])
([nil nil ((3566 . 3568)) ((#(", " 0 2 (fontified t)) . 3566) (undo-tree-id4911 . -2) (undo-tree-id4912 . -2) (undo-tree-id4913 . -2)) (25934 21542 385148 764000) 0 nil])
([nil nil ((nil fontified t 10477 . 10478) (nil face (rainbow-delimiters-depth-2-face) 10477 . 10478) (nil fontified t 10476 . 10477) (nil face (rainbow-delimiters-depth-2-face) 10476 . 10477) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10476) (10478 . 10480)) nil (25934 21579 460463 595000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 3671) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3671)) ((3671 . 3672) (3671 . 3672)) (25934 21542 363272 560000) 0 nil])
([nil nil ((nil fontified t 10558 . 10559) (nil face (rainbow-delimiters-depth-2-face) 10558 . 10559) (nil fontified t 10557 . 10558) (nil face (rainbow-delimiters-depth-2-face) 10557 . 10558) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10557) (10559 . 10561)) nil (25934 21579 460461 708000) 0 nil])
([nil nil ((3671 . 3673)) ((#(", " 0 2 (fontified t)) . 3671) (undo-tree-id4908 . -2) (undo-tree-id4909 . -2) (undo-tree-id4910 . -2)) (25934 21542 41234 404000) 0 nil])
([nil nil ((nil fontified t 10751 . 10752) (nil face (rainbow-delimiters-depth-1-face) 10751 . 10752) (nil fontified t 10750 . 10751) (nil face (rainbow-delimiters-depth-1-face) 10750 . 10751) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10750) (10752 . 10754)) nil (25934 21579 460459 871000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8151) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8151) (t 25934 21471 427586 641000)) ((8151 . 8152) (8151 . 8152)) (25934 21541 875797 33000) 0 nil])
([nil nil ((nil fontified t 10810 . 10811) (nil face (rainbow-delimiters-depth-1-face) 10810 . 10811) (nil fontified t 10809 . 10810) (nil face (rainbow-delimiters-depth-1-face) 10809 . 10810) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10809) (10811 . 10813)) nil (25934 21579 460458 290000) 0 nil])
([nil nil ((8151 . 8153)) ((#(", " 0 2 (fontified t)) . 8151) (undo-tree-id4905 . -2) (undo-tree-id4906 . -2) (undo-tree-id4907 . -2)) (25934 21541 711058 878000) 0 nil])
([nil nil ((nil fontified t 10905 . 10906) (nil face (rainbow-delimiters-depth-2-face) 10905 . 10906) (nil fontified t 10904 . 10905) (nil face (rainbow-delimiters-depth-2-face) 10904 . 10905) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10904) (10906 . 10908)) nil (25934 21579 460456 682000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8890) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8890) (t 25934 21477 299544 107000)) ((8890 . 8891) (8890 . 8891)) (25934 21541 544173 151000) 0 nil])
([nil nil ((nil fontified t 11041 . 11042) (nil face (rainbow-delimiters-depth-2-face) 11041 . 11042) (nil fontified t 11040 . 11041) (nil face (rainbow-delimiters-depth-2-face) 11040 . 11041) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11040) (11042 . 11044)) nil (25934 21579 460454 981000) 0 nil])
([nil nil ((8890 . 8892)) ((#(", " 0 2 (fontified t)) . 8890) (undo-tree-id4832 . -2) (undo-tree-id4833 . -2) (undo-tree-id4834 . -2) (undo-tree-id4835 . -2) (undo-tree-id4836 . -2) (undo-tree-id4837 . -2) (undo-tree-id4838 . -2) (undo-tree-id4839 . -2) (undo-tree-id4840 . -2) (undo-tree-id4841 . -2) (undo-tree-id4842 . -2) (undo-tree-id4843 . -2) (undo-tree-id4844 . -2) (undo-tree-id4845 . -2) (undo-tree-id4846 . -2) (undo-tree-id4847 . -2) (undo-tree-id4848 . -2) (undo-tree-id4849 . -2) (undo-tree-id4850 . -2) (undo-tree-id4851 . -2) (undo-tree-id4852 . -2) (undo-tree-id4853 . -2) (undo-tree-id4854 . -2) (undo-tree-id4855 . -2) (undo-tree-id4856 . -2) (undo-tree-id4857 . -2) (undo-tree-id4858 . -2) (undo-tree-id4859 . -2) (undo-tree-id4860 . -2) (undo-tree-id4861 . -2) (undo-tree-id4862 . -2) (undo-tree-id4863 . -2) (undo-tree-id4864 . -2) (undo-tree-id4865 . -2) (undo-tree-id4866 . -2) (undo-tree-id4867 . -2) (undo-tree-id4868 . -2) (undo-tree-id4869 . -2) (undo-tree-id4870 . -2) (undo-tree-id4871 . -2) (undo-tree-id4872 . -2) (undo-tree-id4873 . -2) (undo-tree-id4874 . -2) (undo-tree-id4875 . -2) (undo-tree-id4876 . -2) (undo-tree-id4877 . -2) (undo-tree-id4878 . -2) (undo-tree-id4879 . -2) (undo-tree-id4880 . -2) (undo-tree-id4881 . -2) (undo-tree-id4882 . -2) (undo-tree-id4883 . -2) (undo-tree-id4884 . -2) (undo-tree-id4885 . -2) (undo-tree-id4886 . -2) (undo-tree-id4887 . -2) (undo-tree-id4888 . -2) (undo-tree-id4889 . -2) (undo-tree-id4890 . -2) (undo-tree-id4891 . -2) (undo-tree-id4892 . -2) (undo-tree-id4893 . -2) (undo-tree-id4894 . -2) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) (undo-tree-id4897 . -2) (undo-tree-id4898 . -2) (undo-tree-id4899 . -2) (undo-tree-id4900 . -2) (undo-tree-id4901 . -2) (undo-tree-id4902 . -2) (undo-tree-id4903 . -2) (undo-tree-id4904 . -2)) (25934 21541 378201 319000) 0 nil])
([nil nil ((nil fontified t 11096 . 11097) (nil face (rainbow-delimiters-depth-1-face) 11096 . 11097) (nil fontified t 11095 . 11096) (nil face (rainbow-delimiters-depth-1-face) 11095 . 11096) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11095) (11097 . 11099)) nil (25934 21579 460453 515000) 0 nil])
([nil nil ((8893 . 8895) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8893) (undo-tree-id4214 . -1) (8892 . 8894) (t 25934 21482 475506 701000)) ((#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8892) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (8893 . 8894) (#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8893) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1)) (25934 21541 203158 973000) 0 nil])
([nil nil ((nil fontified t 11189 . 11190) (nil face (rainbow-delimiters-depth-2-face) 11189 . 11190) (nil fontified t 11188 . 11189) (nil face (rainbow-delimiters-depth-2-face) 11188 . 11189) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11188) (11190 . 11192)) nil (25934 21579 460452 7000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -8892) (undo-tree-id4036 . -1) (undo-tree-id4038 . -1) (undo-tree-id4040 . -1) (undo-tree-id4042 . -1) (undo-tree-id4044 . -1) (undo-tree-id4046 . -1) (undo-tree-id4048 . -1) (undo-tree-id4050 . -1) (undo-tree-id4052 . -1) (undo-tree-id4054 . -1) (undo-tree-id4056 . -1) (undo-tree-id4058 . -1) (undo-tree-id4060 . -1) (undo-tree-id4062 . -1) (undo-tree-id4064 . -1) (undo-tree-id4066 . -1) (undo-tree-id4068 . -1) (undo-tree-id4070 . -1) (undo-tree-id4072 . -1) (undo-tree-id4074 . -1) (undo-tree-id4076 . -1) (undo-tree-id4078 . -1) (undo-tree-id4080 . -1) (undo-tree-id4082 . -1) (undo-tree-id4084 . -1) (undo-tree-id4086 . -1) (undo-tree-id4088 . -1) (undo-tree-id4090 . -1) (undo-tree-id4092 . -1) (undo-tree-id4094 . -1) (undo-tree-id4096 . -1) (undo-tree-id4098 . -1) (undo-tree-id4100 . -1) (undo-tree-id4102 . -1) (undo-tree-id4104 . -1) (undo-tree-id4106 . -1) (undo-tree-id4108 . -1) (undo-tree-id4110 . -1) (undo-tree-id4112 . -1) (undo-tree-id4114 . -1) (undo-tree-id4116 . -1) (undo-tree-id4118 . -1) (undo-tree-id4120 . -1) (undo-tree-id4122 . -1) (undo-tree-id4124 . -1) (undo-tree-id4126 . -1) (undo-tree-id4128 . -1) (undo-tree-id4130 . -1) (undo-tree-id4132 . -1) (undo-tree-id4134 . -1) (undo-tree-id4136 . -1) (undo-tree-id4138 . -1) (undo-tree-id4140 . -1) (undo-tree-id4142 . -1) (undo-tree-id4144 . -1) (undo-tree-id4146 . -1) (undo-tree-id4148 . -1) (undo-tree-id4150 . -1) (undo-tree-id4152 . -1) (undo-tree-id4154 . -1) (undo-tree-id4156 . -1) (undo-tree-id4158 . -1) (undo-tree-id4160 . -1) (undo-tree-id4162 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8893) (undo-tree-id4164 . -1) (undo-tree-id4166 . -1) (undo-tree-id4168 . -1) (undo-tree-id4170 . -1) (undo-tree-id4172 . -1) (undo-tree-id4174 . -1) (undo-tree-id4176 . -1) (undo-tree-id4178 . -1) (undo-tree-id4180 . -1) (undo-tree-id4182 . -1) (undo-tree-id4184 . -1) (undo-tree-id4186 . -1) (undo-tree-id4188 . -1) (undo-tree-id4190 . -1) (undo-tree-id4192 . -1) (undo-tree-id4194 . -1) (undo-tree-id4196 . -1) (undo-tree-id4198 . -1) (undo-tree-id4200 . -1) (undo-tree-id4202 . -1) (undo-tree-id4204 . -1) (undo-tree-id4206 . -1) (undo-tree-id4208 . -1) (undo-tree-id4210 . -1) (undo-tree-id4212 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8894)) ((8892 . 8895)) (25934 21541 45119 631000) 0 nil])
([nil nil ((nil fontified t 14890 . 14891) (nil face (rainbow-delimiters-depth-1-face) 14890 . 14891) (nil fontified t 14889 . 14890) (nil face (rainbow-delimiters-depth-1-face) 14889 . 14890) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -14889) (14891 . 14893)) nil (25934 21579 460450 674000) 0 nil])
([nil nil ((8850 . 8866) (#("            " 0 12 (fontified t)) . 8850) 8892 (t 25934 21485 267486 557000)) ((8850 . 8862) (#("                " 0 4 (fontified t) 4 8 (fontified t) 8 12 (fontified t) 12 16 (fontified t)) . 8850) (undo-tree-id4682 . -4) (undo-tree-id4683 . -4) (undo-tree-id4684 . -4) (undo-tree-id4685 . -4) (undo-tree-id4686 . -4) (undo-tree-id4687 . -4) (undo-tree-id4688 . -4) (undo-tree-id4689 . -4) (undo-tree-id4690 . -4) (undo-tree-id4691 . -4) (undo-tree-id4692 . -4) (undo-tree-id4693 . -4) (undo-tree-id4694 . -4) (undo-tree-id4695 . -4) (undo-tree-id4696 . -4) (undo-tree-id4697 . -4) (undo-tree-id4698 . -4) (undo-tree-id4699 . -4) (undo-tree-id4700 . -4) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -4) (undo-tree-id4704 . -4) (undo-tree-id4705 . -4) (undo-tree-id4706 . -8) (undo-tree-id4707 . -8) (undo-tree-id4708 . -8) (undo-tree-id4709 . -8) (undo-tree-id4710 . -8) (undo-tree-id4711 . -8) (undo-tree-id4712 . -8) (undo-tree-id4713 . -8) (undo-tree-id4714 . -8) (undo-tree-id4715 . -8) (undo-tree-id4716 . -8) (undo-tree-id4717 . -8) (undo-tree-id4718 . -8) (undo-tree-id4719 . -8) (undo-tree-id4720 . -8) (undo-tree-id4721 . -8) (undo-tree-id4722 . -8) (undo-tree-id4723 . -8) (undo-tree-id4724 . -8) (undo-tree-id4725 . -8) (undo-tree-id4726 . -8) (undo-tree-id4727 . -8) (undo-tree-id4728 . -8) (undo-tree-id4729 . -8) (undo-tree-id4730 . -12) (undo-tree-id4731 . -12) (undo-tree-id4732 . -12) (undo-tree-id4733 . -12) (undo-tree-id4734 . -12) (undo-tree-id4735 . -12) (undo-tree-id4736 . -12) (undo-tree-id4737 . -12) (undo-tree-id4738 . -12) (undo-tree-id4739 . -12) (undo-tree-id4740 . -12) (undo-tree-id4741 . -12) (undo-tree-id4742 . -12) (undo-tree-id4743 . -12) (undo-tree-id4744 . -12) (undo-tree-id4745 . -12) (undo-tree-id4746 . -12) (undo-tree-id4747 . -12) (undo-tree-id4748 . -12) (undo-tree-id4749 . -12) (undo-tree-id4750 . -12) (undo-tree-id4751 . -12) (undo-tree-id4752 . -12) (undo-tree-id4753 . -12) (undo-tree-id4754 . -16) (undo-tree-id4755 . -16) (undo-tree-id4756 . -16) (undo-tree-id4757 . -16) (undo-tree-id4758 . -16) (undo-tree-id4759 . -16) (undo-tree-id4760 . -16) (undo-tree-id4761 . -16) (undo-tree-id4762 . -16) (undo-tree-id4763 . -16) (undo-tree-id4764 . -16) (undo-tree-id4765 . -16) (undo-tree-id4766 . -16) (undo-tree-id4767 . -16) (undo-tree-id4768 . -16) (undo-tree-id4769 . -16) (undo-tree-id4770 . -16) (undo-tree-id4771 . -16) (undo-tree-id4772 . -16) (undo-tree-id4773 . -16) (undo-tree-id4774 . -16) (undo-tree-id4775 . -16) (undo-tree-id4776 . -16) (undo-tree-id4777 . -16) (undo-tree-id4778 . -16) (undo-tree-id4779 . -16)) (25934 21540 869785 513000) 0 nil])
([nil nil ((nil fontified t 15001 . 15002) (nil face (rainbow-delimiters-depth-1-face) 15001 . 15002) (nil fontified t 15000 . 15001) (nil face (rainbow-delimiters-depth-1-face) 15000 . 15001) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15000) (15002 . 15004)) nil (25934 21579 460449 296000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8862) (undo-tree-id4593 . -4) 8866) ((8862 . 8866)) (25934 21540 696008 13000) 0 nil])
([nil nil ((nil fontified t 15214 . 15215) (nil face (rainbow-delimiters-depth-1-face) 15214 . 15215) (nil fontified t 15213 . 15214) (nil face (rainbow-delimiters-depth-1-face) 15213 . 15214) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15213) (15215 . 15217)) nil (25934 21579 460447 785000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8858) (undo-tree-id4529 . -4) (undo-tree-id4531 . -4) (undo-tree-id4533 . -4) (undo-tree-id4535 . -4) (undo-tree-id4537 . -4) (undo-tree-id4539 . -4) (undo-tree-id4541 . -4) (undo-tree-id4543 . -4) (undo-tree-id4545 . -4) (undo-tree-id4547 . -4) (undo-tree-id4549 . -4) (undo-tree-id4551 . -4) (undo-tree-id4553 . -4) (undo-tree-id4555 . -4) (undo-tree-id4557 . -4) (undo-tree-id4559 . -4) (undo-tree-id4561 . -4) (undo-tree-id4563 . -4) (undo-tree-id4565 . -4) (undo-tree-id4567 . -4) (undo-tree-id4569 . -4) (undo-tree-id4571 . -4) (undo-tree-id4573 . -4) (undo-tree-id4575 . -4) (undo-tree-id4577 . -4) (undo-tree-id4579 . -4) (undo-tree-id4581 . -4) (undo-tree-id4583 . -4) (undo-tree-id4585 . -4) (undo-tree-id4587 . -4) (undo-tree-id4589 . -4) (undo-tree-id4591 . -4) 8862) ((8858 . 8862)) (25934 21540 546215 972000) 0 nil])
([nil nil ((#("][" 0 2 (face font-lock-comment-face fontified t)) . -15457) (15459 . 15461)) nil (25934 21579 460446 271000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8854) (undo-tree-id4410 . -4) (undo-tree-id4412 . -4) (undo-tree-id4414 . -4) (undo-tree-id4416 . -4) (undo-tree-id4418 . -4) (undo-tree-id4420 . -4) (undo-tree-id4422 . -4) (undo-tree-id4424 . -4) (undo-tree-id4426 . -4) (undo-tree-id4428 . -4) (undo-tree-id4430 . -4) (undo-tree-id4432 . -4) (undo-tree-id4434 . -4) (undo-tree-id4436 . -4) (undo-tree-id4438 . -4) (undo-tree-id4440 . -4) (undo-tree-id4442 . -4) (undo-tree-id4444 . -4) (undo-tree-id4446 . -4) (undo-tree-id4448 . -4) (undo-tree-id4450 . -4) (undo-tree-id4452 . -4) (undo-tree-id4454 . -4) (undo-tree-id4456 . -4) (undo-tree-id4458 . -4) (undo-tree-id4460 . -4) (undo-tree-id4462 . -4) (undo-tree-id4464 . -4) (undo-tree-id4466 . -4) (undo-tree-id4468 . -4) (undo-tree-id4470 . -4) (undo-tree-id4472 . -4) (undo-tree-id4474 . -4) (undo-tree-id4476 . -4) (undo-tree-id4478 . -4) (undo-tree-id4480 . -4) (undo-tree-id4482 . -4) (undo-tree-id4484 . -4) (undo-tree-id4486 . -4) (undo-tree-id4488 . -4) (undo-tree-id4490 . -4) (undo-tree-id4492 . -4) (undo-tree-id4494 . -4) (undo-tree-id4496 . -4) (undo-tree-id4498 . -4) (undo-tree-id4500 . -4) (undo-tree-id4502 . -4) (undo-tree-id4504 . -4) (undo-tree-id4506 . -4) (undo-tree-id4508 . -4) (undo-tree-id4510 . -4) (undo-tree-id4512 . -4) (undo-tree-id4514 . -4) (undo-tree-id4516 . -4) (undo-tree-id4518 . -4) (undo-tree-id4520 . -4) (undo-tree-id4522 . -4) (undo-tree-id4524 . -4) (undo-tree-id4526 . -4) 8858) ((8854 . 8858)) (25934 21540 388078 457000) 0 nil])
([nil nil ((nil fontified t 15561 . 15562) (nil face (rainbow-delimiters-depth-1-face) 15561 . 15562) (nil fontified t 15560 . 15561) (nil face (rainbow-delimiters-depth-1-face) 15560 . 15561) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15560) (15562 . 15564)) nil (25934 21579 460444 903000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8850) (undo-tree-id4265 . -4) (undo-tree-id4267 . -4) (undo-tree-id4269 . -4) (undo-tree-id4271 . -4) (undo-tree-id4273 . -4) (undo-tree-id4275 . -4) (undo-tree-id4277 . -4) (undo-tree-id4279 . -4) (undo-tree-id4281 . -4) (undo-tree-id4283 . -4) (undo-tree-id4285 . -4) (undo-tree-id4287 . -4) (undo-tree-id4289 . -4) (undo-tree-id4291 . -4) (undo-tree-id4293 . -4) (undo-tree-id4295 . -4) (undo-tree-id4297 . -4) (undo-tree-id4299 . -4) (undo-tree-id4301 . -4) (undo-tree-id4303 . -4) (undo-tree-id4305 . -4) (undo-tree-id4307 . -4) (undo-tree-id4309 . -4) (undo-tree-id4311 . -4) (undo-tree-id4313 . -4) (undo-tree-id4315 . -4) (undo-tree-id4317 . -4) (undo-tree-id4319 . -4) (undo-tree-id4321 . -4) (undo-tree-id4323 . -4) (undo-tree-id4325 . -4) (undo-tree-id4327 . -4) (undo-tree-id4329 . -4) (undo-tree-id4331 . -4) (undo-tree-id4333 . -4) (undo-tree-id4335 . -4) (undo-tree-id4337 . -4) (undo-tree-id4339 . -4) (undo-tree-id4341 . -4) (undo-tree-id4343 . -4) (undo-tree-id4345 . -4) (undo-tree-id4347 . -4) (undo-tree-id4349 . -4) (undo-tree-id4351 . -4) (undo-tree-id4353 . -4) (undo-tree-id4355 . -4) (undo-tree-id4357 . -4) (undo-tree-id4359 . -4) (undo-tree-id4361 . -4) (undo-tree-id4363 . -4) (undo-tree-id4365 . -4) (undo-tree-id4367 . -4) (undo-tree-id4369 . -4) (undo-tree-id4371 . -4) (undo-tree-id4373 . -4) (undo-tree-id4375 . -4) (undo-tree-id4377 . -4) (undo-tree-id4379 . -4) (undo-tree-id4381 . -4) (undo-tree-id4383 . -4) (undo-tree-id4385 . -4) (undo-tree-id4387 . -4) (undo-tree-id4389 . -4) (undo-tree-id4391 . -4) (undo-tree-id4393 . -4) (undo-tree-id4395 . -4) (undo-tree-id4397 . -4) (undo-tree-id4399 . -4) (undo-tree-id4401 . -4) (undo-tree-id4403 . -4) (undo-tree-id4405 . -4) (undo-tree-id4407 . -4) 8854) ((8850 . 8854)) (25934 21540 234808 659000) 0 nil])
([nil nil ((nil fontified t 15691 . 15692) (nil face (rainbow-delimiters-depth-1-face) 15691 . 15692) (nil fontified t 15690 . 15691) (nil face (rainbow-delimiters-depth-1-face) 15690 . 15691) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15690) (15692 . 15694)) nil (25934 21579 460442 738000) 0 nil])
([nil nil ((8850 . 8866)) ((#("                " 0 12 (fontified t) 12 16 (fontified t)) . 8850) (undo-tree-id4650 . -16) (undo-tree-id4651 . -16) (undo-tree-id4652 . -16) (undo-tree-id4653 . -16) (undo-tree-id4654 . -16) (undo-tree-id4655 . -16) (undo-tree-id4656 . -16) (undo-tree-id4657 . -16) (undo-tree-id4658 . -16) (undo-tree-id4659 . -16) (undo-tree-id4660 . -16) (undo-tree-id4661 . -16) (undo-tree-id4662 . -16) (undo-tree-id4663 . -16) (undo-tree-id4664 . -16) (undo-tree-id4665 . -16) (undo-tree-id4666 . -16) (undo-tree-id4667 . -16) (undo-tree-id4668 . -16) (undo-tree-id4669 . -16) (undo-tree-id4670 . -16) (undo-tree-id4671 . -16) (undo-tree-id4672 . -16) (undo-tree-id4673 . -16) (undo-tree-id4674 . -16) (undo-tree-id4675 . -16) (undo-tree-id4676 . -16) (undo-tree-id4677 . -16) (undo-tree-id4678 . -16) (undo-tree-id4679 . -16) (undo-tree-id4680 . -16) (undo-tree-id4681 . -16)) (25934 21540 65018 825000) 0 nil])
([nil nil ((nil fontified t 15930 . 15931) (nil face (rainbow-delimiters-depth-1-face) 15930 . 15931) (nil fontified t 15929 . 15930) (nil face (rainbow-delimiters-depth-1-face) 15929 . 15930) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15929) (15931 . 15933)) nil (25934 21596 749160 574000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8862) (undo-tree-id4216 . -4) (undo-tree-id4218 . -4) (undo-tree-id4220 . -4) (undo-tree-id4222 . -4) (undo-tree-id4224 . -4) (undo-tree-id4226 . -4) (undo-tree-id4228 . -4) (undo-tree-id4230 . -4) (undo-tree-id4232 . -4) (undo-tree-id4234 . -4) (undo-tree-id4236 . -4) (undo-tree-id4238 . -4) (undo-tree-id4240 . -4) (undo-tree-id4242 . -4) (undo-tree-id4244 . -4) (undo-tree-id4246 . -4) (undo-tree-id4248 . -4) (undo-tree-id4250 . -4) (undo-tree-id4252 . -4) (undo-tree-id4254 . -4) (undo-tree-id4256 . -4) (undo-tree-id4258 . -4) (undo-tree-id4260 . -4) (undo-tree-id4262 . -4) 8866) ((8862 . 8866)) (25934 21539 898347 542000) 0 nil])
([nil nil ((apply 2 1578 1644 undo--wrap-and-run-primitive-undo 1578 1644 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1586) 1646))) nil (25934 21720 756044 623000) 0 nil] [nil nil ((298 . 299) (t 25934 21579 510819 433000)) ((#("n" 0 1 (fontified t)) . 298) (undo-tree-id5073 . -1)) (25934 21596 748414 62000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9198) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 9198) (t 25934 21491 423442 224000)) ((9198 . 9199) (9198 . 9199)) (25934 21539 740244 97000) 0 nil])
([nil nil ((apply -6 1645 1840 undo--wrap-and-run-primitive-undo 1645 1840 ((1789 . 1791) (1763 . 1765) (1653 . 1655) 1825))) nil (25934 21720 756044 195000) 0 nil])
nil
([nil nil ((9198 . 9200)) ((#(", " 0 2 (fontified t)) . 9198) (undo-tree-id4647 . -2) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2)) (25934 21539 582278 548000) 0 nil])
([nil nil ((#("        # print(self.Wab.weight.data[0:10][0:10])
" 0 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 15 (face font-lock-comment-face fontified t) 15 16 (face font-lock-comment-face fontified t) 16 20 (face font-lock-comment-face fontified t) 20 36 (face font-lock-comment-face fontified t) 36 37 (face font-lock-comment-face fontified t) 37 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t) 43 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 50 (face font-lock-comment-face fontified t)) . 1781) (undo-tree-id5105 . -50) (undo-tree-id5106 . -50)) nil (25934 21720 756043 600000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9682) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 9682) (t 25934 21496 751403 945000)) ((9682 . 9683) (9682 . 9683)) (25934 21539 424083 153000) 0 nil])
([nil nil ((apply 2 1874 1959 undo--wrap-and-run-primitive-undo 1874 1959 ((#("# " 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -1890) 1961))) nil (25934 21720 756041 123000) 0 nil])
([nil nil ((9682 . 9684)) ((#(", " 0 2 (fontified t)) . 9682) (undo-tree-id4646 . -2) (t 25934 21503 459355 867000)) (25934 21539 275869 1000) 0 nil])
([nil nil ((apply 2 1959 2013 undo--wrap-and-run-primitive-undo 1959 2013 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1975) 2015))) nil (25934 21720 756040 310000) 0 nil])
([nil nil ((nil fontified t 9724 . 9725) (t 25934 21503 459355 867000) (nil face (rainbow-delimiters-depth-1-face) 9724 . 9725) (t 25934 21503 459355 867000) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9724) (t 25934 21503 459355 867000) (9726 . 9727) (t 25934 21503 459355 867000)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9726) (t 25934 21503 459355 867000) (9724 . 9726) (t 25934 21503 459355 867000) (nil face nil 9724 . 9725) (t 25934 21503 459355 867000)) (25934 21539 126434 281000) 0 nil])
([nil nil ((1959 . 1991) (#("                " 0 16 (fontified t)) . 1959) (undo-tree-id5104 . -16) 1975) nil (25934 21720 756039 477000) 0 nil])
([nil nil ((nil fontified t 9750 . 9751) (nil face (rainbow-delimiters-depth-1-face) 9750 . 9751) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9750) (9752 . 9753)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9752) (9750 . 9752) (nil face nil 9750 . 9751)) (25934 21538 982820 158000) 0 nil])
([nil nil ((2028 . 2045)) nil (25934 21720 756037 586000) 0 nil])
([nil nil ((nil fontified t 9838 . 9839) (nil face (rainbow-delimiters-depth-1-face) 9838 . 9839) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -9838) (9840 . 9841)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 9840) (9838 . 9840) (nil face nil 9838 . 9839)) (25934 21538 831896 428000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2063) (undo-tree-id5102 . -1) (#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -2064) (undo-tree-id5103 . -1) 2065) nil (25934 21720 756036 711000) 0 nil])
([nil nil ((nil fontified t 10053 . 10054) (nil face (rainbow-delimiters-depth-1-face) 10053 . 10054) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10053) (10055 . 10056)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10055) (10053 . 10055) (nil face nil 10053 . 10054)) (25934 21538 683831 816000) 0 nil])
([nil nil ((2063 . 2064)) nil (25934 21720 756032 329000) 0 nil])
([nil nil ((nil fontified t 10299 . 10300) (nil face (rainbow-delimiters-depth-1-face) 10299 . 10300) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10299) (10301 . 10302)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10301) (10299 . 10301) (nil face nil 10299 . 10300)) (25934 21538 545358 672000) 0 nil])
([nil nil ((2064 . 2065)) nil (25934 21720 756031 76000) 0 nil])
([nil nil ((nil fontified t 10369 . 10370) (nil face (rainbow-delimiters-depth-1-face) 10369 . 10370) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10369) (10371 . 10372)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10371) (10369 . 10371) (nil face nil 10369 . 10370)) (25934 21538 391311 780000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-variable-name-face fontified t)) . -2064) (undo-tree-id5101 . -1) 2065) nil (25934 21720 756029 323000) 0 nil])
([nil nil ((nil fontified t 10488 . 10489) (nil face (rainbow-delimiters-depth-2-face) 10488 . 10489) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10488) (10490 . 10491)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 10490) (10488 . 10490) (nil face nil 10488 . 10489)) (25934 21538 250063 765000) 0 nil])
([nil nil ((#("                print('Wij', Wij.shape)
" 0 16 (fontified t) 16 21 (face font-lock-builtin-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 27 (face font-lock-string-face fontified t) 27 29 (fontified t) 29 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 40 (fontified t)) . 2098) (undo-tree-id5080 . -29) (undo-tree-id5081 . -29) (undo-tree-id5082 . -29) (undo-tree-id5083 . -39) (undo-tree-id5084 . -39) (undo-tree-id5085 . -39) (undo-tree-id5086 . -39) (undo-tree-id5087 . -39) (undo-tree-id5088 . -39) (undo-tree-id5089 . -39) (undo-tree-id5090 . -39) (undo-tree-id5091 . -39) (undo-tree-id5092 . -39) (undo-tree-id5093 . -39) (undo-tree-id5094 . -39) (undo-tree-id5095 . -39) (undo-tree-id5096 . -39) (undo-tree-id5097 . -39) (undo-tree-id5098 . -39) (undo-tree-id5099 . -39) (undo-tree-id5100 . -40) 2138) nil (25934 21720 756025 308000) 0 nil])
([nil nil ((nil fontified t 10568 . 10569) (nil face (rainbow-delimiters-depth-2-face) 10568 . 10569) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10568) (10570 . 10571)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 10570) (10568 . 10570) (nil face nil 10568 . 10569)) (25934 21538 101280 343000) 0 nil])
([nil nil ((apply -4 2115 2330 undo--wrap-and-run-primitive-undo 2115 2330 ((2215 . 2217) (2131 . 2133) 2285))) nil (25934 21720 755992 329000) 0 nil])
([nil nil ((nil fontified t 10760 . 10761) (nil face (rainbow-delimiters-depth-1-face) 10760 . 10761) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10760) (10762 . 10763)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10762) (10760 . 10762) (nil face nil 10760 . 10761)) (25934 21537 951877 678000) 0 nil])
([nil nil ((2030 . 2046) (#("                " 0 16 (fontified nil)) . 2029) (undo-tree-id5079 . -16) (2045 . 2046)) nil (25934 21720 755991 731000) 0 nil])
([nil nil ((nil fontified t 10818 . 10819) (nil face (rainbow-delimiters-depth-1-face) 10818 . 10819) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10818) (10820 . 10821)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 10820) (10818 . 10820) (nil face nil 10818 . 10819)) (25934 21537 805132 407000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2029) (undo-tree-id5078 . -1) 2030) nil (25934 21720 755990 196000) 0 nil])
([nil nil ((nil fontified t 10912 . 10913) (nil face (rainbow-delimiters-depth-2-face) 10912 . 10913) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -10912) (10914 . 10915)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 10914) (10912 . 10914) (nil face nil 10912 . 10913)) (25934 21537 659193 368000) 0 nil])
([nil nil ((2114 . 2121)) nil (25934 21720 755988 997000) 0 nil])
([nil nil ((nil fontified t 11047 . 11048) (nil face (rainbow-delimiters-depth-2-face) 11047 . 11048) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11047) (11049 . 11050)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 11049) (11047 . 11049) (nil face nil 11047 . 11048)) (25934 21537 499250 938000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -2118) (undo-tree-id5075 . -1) (#("a" 0 1 (fontified t)) . -2119) (undo-tree-id5076 . -1) (#("b" 0 1 (fontified t)) . -2120) (undo-tree-id5077 . -1) 2121) nil (25934 21720 755987 358000) 0 nil])
([nil nil ((nil fontified t 11101 . 11102) (nil face (rainbow-delimiters-depth-1-face) 11101 . 11102) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11101) (11103 . 11104)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11103) (11101 . 11103) (nil face nil 11101 . 11102)) (25934 21537 342665 554000) 0 nil])
([nil nil ((2118 . 2130)) nil (25934 21720 755983 401000) 0 nil])
([nil nil ((nil fontified t 11193 . 11194) (nil face (rainbow-delimiters-depth-2-face) 11193 . 11194) (#("][" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t)) . -11193) (11195 . 11196)) ((#("," 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 11195) (11193 . 11195) (nil face nil 11193 . 11194)) (25934 21537 175985 769000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2129) (undo-tree-id5074 . -1) 2130) nil (25934 21720 755982 178000) 0 nil])
([nil nil ((nil face (rainbow-delimiters-depth-1-face) 14893 . 14894) (#("][" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14893) (undo-tree-id4595 . -2) (undo-tree-id4597 . -2) (undo-tree-id4599 . -2) (undo-tree-id4601 . -2) (undo-tree-id4603 . -2) (undo-tree-id4605 . -2) (undo-tree-id4607 . -2) (undo-tree-id4609 . -2) (undo-tree-id4611 . -2) (undo-tree-id4613 . -2) (undo-tree-id4615 . -2) (undo-tree-id4617 . -2) (undo-tree-id4619 . -2) (undo-tree-id4621 . -2) (undo-tree-id4623 . -2) (undo-tree-id4625 . -2) (undo-tree-id4627 . -2) (undo-tree-id4629 . -2) (undo-tree-id4631 . -2) (undo-tree-id4633 . -2) (undo-tree-id4635 . -2) (undo-tree-id4637 . -2) (undo-tree-id4639 . -2) (undo-tree-id4640 . -2) (undo-tree-id4642 . -2) (undo-tree-id4644 . -2) (14895 . 14896)) ((#("," 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 14895) (14893 . 14895) (nil face nil 14893 . 14894)) (25934 21534 321356 289000) 0 nil])
([nil nil ((2129 . 2134)) nil (25934 21720 755972 840000) 0 nil])
nil
([nil nil ((2134 . 2151)) nil (25934 21720 755968 148000) 0 nil])
([nil nil ((1890 . 1894) (t 25934 21720 801859 397000)) nil (25934 21731 602025 972000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1890) (undo-tree-id5111 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1891) (undo-tree-id5112 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1892) (undo-tree-id5113 . -1) (#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -1893) (undo-tree-id5114 . -1) 1894) nil (25934 21731 602024 449000) 0 nil])
([nil nil ((#("                # self.Wab[j_pop, i_pop] = Wij
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-face fontified t) 22 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face fontified t) 42 47 (face font-lock-comment-face fontified t)) . 2367) (undo-tree-id5107 . -34) (undo-tree-id5108 . -34) (undo-tree-id5109 . -34) (undo-tree-id5110 . -47) 2414) nil (25934 21731 602020 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2181 . 2182) (nil fontified nil 2177 . 2182) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2170 . 2174) (nil fontified nil 2169 . 2170) (nil fontified nil 2167 . 2169) (nil fontified nil 2163 . 2167) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2157 . 2161) (nil fontified nil 2153 . 2157) (nil fontified nil 2151 . 2153) (nil fontified nil 2135 . 2151) (2135 . 2182)) nil (25934 21731 602008 175000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2151) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 2151)) nil (25934 21731 601997 932000) 0 nil])
([nil nil ((#("                # print(Wij.weight.data)
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t)) . -2371) (undo-tree-id5227 . -41) (undo-tree-id5228 . -41) (undo-tree-id5229 . -41) (undo-tree-id5230 . -39) (undo-tree-id5231 . -39) (undo-tree-id5232 . -39) (undo-tree-id5233 . -39) (undo-tree-id5234 . -39) (undo-tree-id5235 . -39) (undo-tree-id5236 . -39) (undo-tree-id5237 . -16) (undo-tree-id5238 . -16) (undo-tree-id5239 . -16) (undo-tree-id5240 . -41) (undo-tree-id5241 . -41) (undo-tree-id5242 . -41) (undo-tree-id5243 . -41) (undo-tree-id5244 . -41) (undo-tree-id5245 . -41) (undo-tree-id5246 . -41) (undo-tree-id5247 . -41) (undo-tree-id5248 . -41) (undo-tree-id5249 . -41) (undo-tree-id5250 . -41) (undo-tree-id5251 . -41) (undo-tree-id5252 . -41) (undo-tree-id5253 . -41) (undo-tree-id5254 . -41) (undo-tree-id5255 . -41) (undo-tree-id5256 . -41) (undo-tree-id5257 . -41) (undo-tree-id5258 . -41) (undo-tree-id5259 . -41) (undo-tree-id5260 . -41) (undo-tree-id5261 . -41) (undo-tree-id5262 . -41) (undo-tree-id5263 . -41) (undo-tree-id5264 . -41) (undo-tree-id5265 . -41) (undo-tree-id5266 . -41) (undo-tree-id5267 . -41) (undo-tree-id5268 . -41) (undo-tree-id5269 . -41) (undo-tree-id5270 . -41) (undo-tree-id5271 . -41) (undo-tree-id5272 . -41) (undo-tree-id5273 . -41) (undo-tree-id5274 . -41) (undo-tree-id5275 . -41) (undo-tree-id5276 . -41) (undo-tree-id5277 . -41) (undo-tree-id5278 . -41) (undo-tree-id5279 . -41) (undo-tree-id5280 . -41) (undo-tree-id5281 . -41) (undo-tree-id5282 . -41) (undo-tree-id5283 . -41) (undo-tree-id5284 . -41) (undo-tree-id5285 . -41) (undo-tree-id5286 . -41) (undo-tree-id5287 . -41) (undo-tree-id5288 . -41) 2412 (t 25934 21731 641787 431000)) nil (25934 21742 795901 979000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2383) (undo-tree-id5184 . -4) (undo-tree-id5185 . -4) (undo-tree-id5186 . -4) (undo-tree-id5187 . -4) (undo-tree-id5188 . -4) (undo-tree-id5189 . -4) (undo-tree-id5190 . -4) (undo-tree-id5191 . -4) (undo-tree-id5192 . -4) (undo-tree-id5193 . -4) (undo-tree-id5194 . -4) (undo-tree-id5195 . -4) (undo-tree-id5196 . -4) (undo-tree-id5197 . -4) (undo-tree-id5198 . -4) (undo-tree-id5199 . -4) (undo-tree-id5200 . -4) (undo-tree-id5201 . -4) (undo-tree-id5202 . -4) (undo-tree-id5203 . -4) (undo-tree-id5204 . -4) (undo-tree-id5205 . -4) (undo-tree-id5206 . -4) (undo-tree-id5207 . -4) (undo-tree-id5208 . -4) (undo-tree-id5209 . -4) (undo-tree-id5210 . -4) (undo-tree-id5211 . -4) (undo-tree-id5212 . -4) (undo-tree-id5213 . -4) (undo-tree-id5214 . -4) (undo-tree-id5215 . -4) (undo-tree-id5216 . -4) (undo-tree-id5217 . -4) (undo-tree-id5218 . -4) (undo-tree-id5219 . -4) (undo-tree-id5220 . -4) (undo-tree-id5221 . -4) (undo-tree-id5222 . -4) (undo-tree-id5223 . -4) (undo-tree-id5224 . -4) (undo-tree-id5225 . -4) (undo-tree-id5226 . -4) 2387) nil (25934 21742 795828 532000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2379) (undo-tree-id5115 . -4) (undo-tree-id5116 . -4) (undo-tree-id5117 . -4) (undo-tree-id5118 . -4) (undo-tree-id5119 . -4) (undo-tree-id5120 . -4) (undo-tree-id5121 . -4) (undo-tree-id5122 . -4) (undo-tree-id5123 . -4) (undo-tree-id5124 . -4) (undo-tree-id5125 . -4) (undo-tree-id5126 . -4) (undo-tree-id5127 . -4) (undo-tree-id5128 . -4) (undo-tree-id5129 . -4) (undo-tree-id5130 . -4) (undo-tree-id5131 . -4) (undo-tree-id5132 . -4) (undo-tree-id5133 . -4) (undo-tree-id5134 . -4) (undo-tree-id5135 . -4) (undo-tree-id5136 . -4) (undo-tree-id5137 . -4) (undo-tree-id5138 . -4) (undo-tree-id5139 . -4) (undo-tree-id5140 . -4) (undo-tree-id5141 . -4) (undo-tree-id5142 . -4) (undo-tree-id5143 . -4) (undo-tree-id5144 . -4) (undo-tree-id5145 . -4) (undo-tree-id5146 . -4) (undo-tree-id5147 . -4) (undo-tree-id5148 . -4) (undo-tree-id5149 . -4) (undo-tree-id5150 . -4) (undo-tree-id5151 . -4) (undo-tree-id5152 . -4) (undo-tree-id5153 . -4) (undo-tree-id5154 . -4) (undo-tree-id5155 . -4) (undo-tree-id5156 . -4) (undo-tree-id5157 . -4) (undo-tree-id5158 . -4) (undo-tree-id5159 . -4) (undo-tree-id5160 . -4) (undo-tree-id5161 . -4) (undo-tree-id5162 . -4) (undo-tree-id5163 . -4) (undo-tree-id5164 . -4) (undo-tree-id5165 . -4) (undo-tree-id5166 . -4) (undo-tree-id5167 . -4) (undo-tree-id5168 . -4) (undo-tree-id5169 . -4) (undo-tree-id5170 . -4) (undo-tree-id5171 . -4) (undo-tree-id5172 . -4) (undo-tree-id5173 . -4) (undo-tree-id5174 . -4) (undo-tree-id5175 . -4) (undo-tree-id5176 . -4) (undo-tree-id5177 . -4) (undo-tree-id5178 . -4) (undo-tree-id5179 . -4) (undo-tree-id5180 . -4) (undo-tree-id5181 . -4) (undo-tree-id5182 . -4) (undo-tree-id5183 . -4) 2383) nil (25934 21742 795798 713000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2622 . 2623) (nil fontified nil 2622 . 2623) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2615 . 2620) (nil fontified nil 2614 . 2615) (nil fontified nil 2610 . 2614) (nil fontified nil 2606 . 2610) (nil fontified nil 2605 . 2606) (nil fontified nil 2599 . 2605) (nil fontified nil 2598 . 2599) (nil fontified nil 2597 . 2598) (nil fontified nil 2595 . 2597) (nil fontified nil 2594 . 2595) (nil fontified nil 2588 . 2594) (nil fontified nil 2587 . 2588) (nil fontified nil 2580 . 2587) (nil fontified nil 2576 . 2580) (nil fontified nil 2573 . 2576) (nil fontified nil 2572 . 2573) (nil fontified nil 2567 . 2572) (nil fontified nil 2566 . 2567) (nil fontified nil 2559 . 2566) (nil fontified nil 2555 . 2559) (nil fontified nil 2554 . 2555) (nil fontified nil 2544 . 2554) (nil fontified nil 2540 . 2544) (nil fontified nil 2536 . 2540) (nil fontified nil 2524 . 2536) (2524 . 2623) (t 25934 21742 833713 355000)) nil (25934 21775 713220 707000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2593) (undo-tree-id5342 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -2594) (undo-tree-id5343 . -1) (#(" " 0 1 (fontified t)) . -2595) (undo-tree-id5344 . -1) (#("1" 0 1 (fontified t)) . -2596) (undo-tree-id5345 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2597) (undo-tree-id5346 . -1) 2598) nil (25934 21775 713217 525000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2588)) nil (25934 21775 713212 576000) 0 nil])
([nil nil ((2588 . 2589)) nil (25934 21775 713212 181000) 0 nil])
([nil nil ((2594 . 2595)) nil (25934 21775 713211 297000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2578) (undo-tree-id5334 . -1) (#("f" 0 1 (fontified t)) . -2579) (undo-tree-id5335 . -1) (#("." 0 1 (fontified t)) . -2580) (undo-tree-id5336 . -1) (#("c" 0 1 (fontified t)) . -2581) (undo-tree-id5337 . -1) (#("s" 0 1 (fontified t)) . -2582) (undo-tree-id5338 . -1) (#("u" 0 1 (fontified t)) . -2583) (undo-tree-id5339 . -1) (#("m" 0 1 (fontified t)) . -2584) (undo-tree-id5340 . -1) (#("N" 0 1 (fontified t)) . -2585) (undo-tree-id5341 . -1) 2586) nil (25934 21775 713209 557000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2578) (#("a" 0 1 (fontified t)) . 2578)) nil (25934 21775 713203 436000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2572) (undo-tree-id5328 . -1) (#(" " 0 1 (fontified t)) . -2573) (undo-tree-id5329 . -1) (#(":" 0 1 (fontified t)) . -2574) (undo-tree-id5330 . -1) (#(" " 0 1 (fontified t)) . -2575) (undo-tree-id5331 . -1) (#("s" 0 1 (fontified t)) . -2576) (undo-tree-id5332 . -1) (#("e" 0 1 (fontified t)) . -2577) (undo-tree-id5333 . -1) 2578) nil (25934 21775 713201 879000) 0 nil])
([nil nil ((2572 . 2574)) nil (25934 21775 713197 556000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2555) (undo-tree-id5316 . -1) (#("e" 0 1 (fontified t)) . -2556) (undo-tree-id5317 . -1) (#("l" 0 1 (fontified t)) . -2557) (undo-tree-id5318 . -1) (#("f" 0 1 (fontified t)) . -2558) (undo-tree-id5319 . -1) (#("." 0 1 (fontified t)) . -2559) (undo-tree-id5320 . -1) (#("c" 0 1 (fontified t)) . -2560) (undo-tree-id5321 . -1) (#("s" 0 1 (fontified t)) . -2561) (undo-tree-id5322 . -1) (#("u" 0 1 (fontified t)) . -2562) (undo-tree-id5323 . -1) (#("m" 0 1 (fontified t)) . -2563) (undo-tree-id5324 . -1) (#("N" 0 1 (fontified t)) . -2564) (undo-tree-id5325 . -1) (#("a" 0 1 (fontified t)) . -2565) (undo-tree-id5326 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2566) (undo-tree-id5327 . -1) 2567) nil (25934 21775 713194 976000) 0 nil])
([nil nil ((#("[i_pop, j_pop]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 8 (fontified t) 8 9 (fontified t) 9 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 2554) (undo-tree-id5315 . -14) 2568) nil (25934 21775 713183 960000) 0 nil])
([nil nil ((nil fontified nil 2562 . 2563) (nil fontified nil 2558 . 2562) (nil fontified nil 2557 . 2558) (nil fontified nil 2550 . 2557) (nil fontified nil 2549 . 2550) (2549 . 2563)) nil (25934 21775 713182 522000) 0 nil])
([nil nil ((apply -2 2593 2703 undo--wrap-and-run-primitive-undo 2593 2703 ((2605 . 2607) 2692))) nil (25934 21775 713181 311000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -2568) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) 2569) nil (25934 21775 713177 317000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2701) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) 2702 (t 25934 21775 753496 757000)) nil (25934 21780 566652 162000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2705) (undo-tree-id5427 . -4) (undo-tree-id5428 . -4) (undo-tree-id5429 . -4) (undo-tree-id5430 . -4) (undo-tree-id5431 . -4) (undo-tree-id5432 . -4) (undo-tree-id5433 . -4) (undo-tree-id5434 . -4) (undo-tree-id5435 . -4) (undo-tree-id5436 . -4) (undo-tree-id5437 . -4) (undo-tree-id5438 . -4) (undo-tree-id5439 . -4) (undo-tree-id5440 . -4) (undo-tree-id5441 . -4) (undo-tree-id5442 . -4) (undo-tree-id5443 . -4) (undo-tree-id5444 . -4) (undo-tree-id5445 . -4) (undo-tree-id5446 . -4) (undo-tree-id5447 . -4) (undo-tree-id5448 . -4) (undo-tree-id5449 . -4) (undo-tree-id5450 . -4) (undo-tree-id5451 . -4) (undo-tree-id5452 . -4) (undo-tree-id5453 . -4) (undo-tree-id5454 . -4) (undo-tree-id5455 . -4) (undo-tree-id5456 . -4) (undo-tree-id5457 . -4) (undo-tree-id5458 . -4) (undo-tree-id5459 . -4) (undo-tree-id5460 . -4) (undo-tree-id5461 . -4) (undo-tree-id5462 . -4) (undo-tree-id5463 . -4) (undo-tree-id5464 . -4) (undo-tree-id5465 . -4) (undo-tree-id5466 . -4) (undo-tree-id5467 . -4) (undo-tree-id5468 . -4) (undo-tree-id5469 . -4) (undo-tree-id5470 . -4) (undo-tree-id5471 . -4) 2701) nil (25934 21780 566624 943000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2701) (undo-tree-id5347 . -4) (undo-tree-id5348 . -4) (undo-tree-id5349 . -4) (undo-tree-id5350 . -4) (undo-tree-id5351 . -4) (undo-tree-id5352 . -4) (undo-tree-id5353 . -4) (undo-tree-id5354 . -4) (undo-tree-id5355 . -4) (undo-tree-id5356 . -4) (undo-tree-id5357 . -4) (undo-tree-id5358 . -4) (undo-tree-id5359 . -4) (undo-tree-id5360 . -4) (undo-tree-id5361 . -4) (undo-tree-id5362 . -4) (undo-tree-id5363 . -4) (undo-tree-id5364 . -4) (undo-tree-id5365 . -4) (undo-tree-id5366 . -4) (undo-tree-id5367 . -4) (undo-tree-id5368 . -4) (undo-tree-id5369 . -4) (undo-tree-id5370 . -4) (undo-tree-id5371 . -4) (undo-tree-id5372 . -4) (undo-tree-id5373 . -4) (undo-tree-id5374 . -4) (undo-tree-id5375 . -4) (undo-tree-id5376 . -4) (undo-tree-id5377 . -4) (undo-tree-id5378 . -4) (undo-tree-id5379 . -4) (undo-tree-id5380 . -4) (undo-tree-id5381 . -4) (undo-tree-id5382 . -4) (undo-tree-id5383 . -4) (undo-tree-id5384 . -4) (undo-tree-id5385 . -4) (undo-tree-id5386 . -4) (undo-tree-id5387 . -4) (undo-tree-id5388 . -4) (undo-tree-id5389 . -4) (undo-tree-id5390 . -4) (undo-tree-id5391 . -4) (undo-tree-id5392 . -4) (undo-tree-id5393 . -4) (undo-tree-id5394 . -4) (undo-tree-id5395 . -4) (undo-tree-id5396 . -4) (undo-tree-id5397 . -4) (undo-tree-id5398 . -4) (undo-tree-id5399 . -4) (undo-tree-id5400 . -4) (undo-tree-id5401 . -4) (undo-tree-id5402 . -4) (undo-tree-id5403 . -4) (undo-tree-id5404 . -4) (undo-tree-id5405 . -4) (undo-tree-id5406 . -4) (undo-tree-id5407 . -4) (undo-tree-id5408 . -4) (undo-tree-id5409 . -4) (undo-tree-id5410 . -4) (undo-tree-id5411 . -4) (undo-tree-id5412 . -4) (undo-tree-id5413 . -4) (undo-tree-id5414 . -4) (undo-tree-id5415 . -4) (undo-tree-id5416 . -4) (undo-tree-id5417 . -4) (undo-tree-id5418 . -4) (undo-tree-id5419 . -4) (undo-tree-id5420 . -4) (undo-tree-id5421 . -4) (undo-tree-id5422 . -4) (undo-tree-id5423 . -4) (undo-tree-id5424 . -4) (undo-tree-id5425 . -4) (undo-tree-id5426 . -4) 2705) nil (25934 21780 566496 961000) 0 nil])
([nil nil ((1644 . 1652) (t 25934 21780 613464 939000)) nil (25934 21796 406445 286000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -2168) (undo-tree-id5505 . -1) 2169 (t 25934 21796 453361 505000)) nil (25934 21815 684544 233000) 0 nil])
([nil nil ((2168 . 2169)) nil (25934 21815 684535 831000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . 2175)) nil (25934 21815 684534 462000) 0 nil])
([nil nil ((2175 . 2176)) nil (25934 21815 684529 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2571 . 2572) (nil fontified nil 2570 . 2572) (nil fontified nil 2569 . 2570) (nil fontified nil 2563 . 2569) (nil fontified nil 2559 . 2563) (nil fontified nil 2558 . 2559) (nil fontified nil 2553 . 2558) (nil fontified nil 2552 . 2553) (nil fontified nil 2550 . 2552) (nil fontified nil 2543 . 2550) (nil fontified nil 2540 . 2543) (nil fontified nil 2532 . 2540) (2532 . 2572) (t 25934 21815 721236 232000)) nil (25934 21827 230382 505000) 0 nil])
([nil nil ((2540 . 2544) 2532) nil (25934 21827 230380 655000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2548)) nil (25934 21827 230379 897000) 0 nil])
([nil nil ((2548 . 2549)) nil (25934 21827 230379 317000) 0 nil])
([nil nil ((2576 . 2592) (#("            " 0 12 (fontified t)) . 2576)) nil (25934 21827 230374 583000) 0 nil])
([nil nil ((2647 . 2664) (t 25934 21827 269161 430000)) nil (25934 21839 969017 950000) 0 nil])
([nil nil ((#("            for j_pop in range(self.N_POP):
" 0 12 (fontified t) 12 15 (face font-lock-keyword-face fontified t) 15 22 (fontified t) 22 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 30 (face font-lock-builtin-face fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t) 43 44 (rear-nonsticky t fontified t)) . 2532) (undo-tree-id5524 . -44)) nil (25934 21839 969015 960000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2544) 2532) nil (25934 21839 969012 209000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2599) (undo-tree-id5523 . -1) 2600) nil (25934 21839 969010 58000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2565) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1)) nil (25934 21839 969004 830000) 0 nil])
([nil nil ((2565 . 2566)) nil (25934 21839 968980 851000) 0 nil])
([nil nil ((1597 . 1603) (t 25934 21840 9079 143000)) nil (25934 21868 927377 88000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1596) (undo-tree-id5530 . -1) (#("t" 0 1 (fontified t)) . -1597) (undo-tree-id5531 . -1) (#("o" 0 1 (fontified t)) . -1598) (undo-tree-id5532 . -1) (#("r" 0 1 (fontified t)) . -1599) (undo-tree-id5533 . -1) (#("c" 0 1 (fontified t)) . -1600) (undo-tree-id5534 . -1) (#("h" 0 1 (fontified t)) . -1601) (undo-tree-id5535 . -1) (#("." 0 1 (fontified t)) . -1602) (undo-tree-id5536 . -1) 1603) nil (25934 21868 927375 672000) 0 nil])
([nil nil ((1596 . 1599)) nil (25934 21868 927369 798000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1597) (undo-tree-id5528 . -1) (#("o" 0 1 (fontified t)) . -1598) (undo-tree-id5529 . -1) 1599) nil (25934 21868 927368 954000) 0 nil])
([nil nil ((1597 . 1606)) nil (25934 21868 927367 5000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1605) (undo-tree-id5527 . -1) 1606) nil (25934 21868 927366 154000) 0 nil])
([nil nil ((1605 . 1606)) nil (25934 21868 927364 420000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1604) (undo-tree-id5525 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1605) (undo-tree-id5526 . -1) 1606) nil (25934 21868 927363 677000) 0 nil])
([nil nil ((1605 . 1607) (#("(" 0 1 (fontified nil)) . -1605) (1604 . 1606)) nil (25934 21868 927356 10000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1606)) nil (25934 21868 927354 759000) 0 nil])
([nil nil ((1652 . 1653)) nil (25934 21868 927350 253000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1597) (#("y" 0 1 (fontified t)) . 1597) (#("a" 0 1 (fontified t)) . 1597) (#("r" 0 1 (fontified t)) . 1597) (#("r" 0 1 (fontified t)) . 1597) (#("a" 0 1 (fontified t)) . 1597) (#("." 0 1 (fontified t)) . 1597) (#("p" 0 1 (fontified t)) . 1597) (#("n" 0 1 (fontified t)) . 1597) (t 25934 21868 968892 983000)) nil (25934 21889 117809 695000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -1643) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) 1644) nil (25934 21889 117804 663000) 0 nil])
([nil nil ((apply -2 2452 2534 undo--wrap-and-run-primitive-undo 2452 2534 ((2460 . 2462) 2492))) nil (25934 21901 173809 386000) 0 nil])
([nil nil ((1605 . 1607) (#("(" 0 1 (fontified nil)) . -1605) (1597 . 1606)) nil (25934 21901 173807 778000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1606)) nil (25934 21901 173805 534000) 0 nil])
([nil nil ((1652 . 1653)) nil (25934 21901 173800 86000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2611) (undo-tree-id5703 . -1) (#(" " 0 1 (fontified t)) . -2612) (undo-tree-id5704 . -1) (#(" " 0 1 (fontified t)) . -2613) (undo-tree-id5705 . -1) (#(" " 0 1 (fontified t)) . -2614) (undo-tree-id5706 . -1) (#(" " 0 1 (fontified t)) . -2615) (undo-tree-id5707 . -1) (#(" " 0 1 (fontified t)) . -2616) (undo-tree-id5708 . -1) (#(" " 0 1 (fontified t)) . -2617) (undo-tree-id5709 . -1) (#(" " 0 1 (fontified t)) . -2618) (undo-tree-id5710 . -1) 2619 (t 25934 21901 224687 16000)) nil (25934 21919 544599 587000) 0 nil])
([nil nil ((#("[i_pop, i_pop]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 9 (fontified t) 9 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t)) . 2569) (undo-tree-id5584 . -9) (undo-tree-id5585 . -9) (undo-tree-id5586 . -9) (undo-tree-id5587 . -9) (undo-tree-id5588 . -11) (undo-tree-id5589 . -10) (undo-tree-id5590 . -11) (undo-tree-id5591 . -11) (undo-tree-id5592 . -11) (undo-tree-id5593 . -11) (undo-tree-id5594 . -11) (undo-tree-id5595 . -11) (undo-tree-id5596 . -11) (undo-tree-id5597 . -11) (undo-tree-id5598 . -11) (undo-tree-id5599 . -11) (undo-tree-id5600 . -11) (undo-tree-id5601 . -11) (undo-tree-id5602 . -11) (undo-tree-id5603 . -11) (undo-tree-id5604 . -11) (undo-tree-id5605 . -11) (undo-tree-id5606 . -11) (undo-tree-id5607 . -11) (undo-tree-id5608 . -11) (undo-tree-id5609 . -11) (undo-tree-id5610 . -11) (undo-tree-id5611 . -11) (undo-tree-id5612 . -11) (undo-tree-id5613 . -11) (undo-tree-id5614 . -11) (undo-tree-id5615 . -11) (undo-tree-id5616 . -11) (undo-tree-id5617 . -11) (undo-tree-id5618 . -11) (undo-tree-id5619 . -11) (undo-tree-id5620 . -12) (undo-tree-id5621 . -11) (undo-tree-id5622 . -12) (undo-tree-id5623 . -12) (undo-tree-id5624 . -12) (undo-tree-id5625 . -12) (undo-tree-id5626 . -12) (undo-tree-id5627 . -12) (undo-tree-id5628 . -12) (undo-tree-id5629 . -12) (undo-tree-id5630 . -12) (undo-tree-id5631 . -12) (undo-tree-id5632 . -12) (undo-tree-id5633 . -12) (undo-tree-id5634 . -12) (undo-tree-id5635 . -12) (undo-tree-id5636 . -12) (undo-tree-id5637 . -12) (undo-tree-id5638 . -12) (undo-tree-id5639 . -12) (undo-tree-id5640 . -12) (undo-tree-id5641 . -12) (undo-tree-id5642 . -12) (undo-tree-id5643 . -12) (undo-tree-id5644 . -12) (undo-tree-id5645 . -13) (undo-tree-id5646 . -12) (undo-tree-id5647 . -13) (undo-tree-id5648 . -13) (undo-tree-id5649 . -13) (undo-tree-id5650 . -13) (undo-tree-id5651 . -13) (undo-tree-id5652 . -13) (undo-tree-id5653 . -13) (undo-tree-id5654 . -13) (undo-tree-id5655 . -13) (undo-tree-id5656 . -13) (undo-tree-id5657 . -13) (undo-tree-id5658 . -13) (undo-tree-id5659 . -13) (undo-tree-id5660 . -13) (undo-tree-id5661 . -13) (undo-tree-id5662 . -13) (undo-tree-id5663 . -13) (undo-tree-id5664 . -13) (undo-tree-id5665 . -13) (undo-tree-id5666 . -13) (undo-tree-id5667 . -13) (undo-tree-id5668 . -13) (undo-tree-id5669 . -13) (undo-tree-id5670 . -13) (undo-tree-id5671 . -13) (undo-tree-id5672 . -13) (undo-tree-id5673 . -13) (undo-tree-id5674 . -13) (undo-tree-id5675 . -13) (undo-tree-id5676 . -14) (undo-tree-id5677 . -13) (undo-tree-id5678 . -14) (undo-tree-id5679 . -14) (undo-tree-id5680 . -14) (undo-tree-id5681 . -14) (undo-tree-id5682 . -14) (undo-tree-id5683 . -14) (undo-tree-id5684 . -14) (undo-tree-id5685 . -14) (undo-tree-id5686 . -14) (undo-tree-id5687 . -14) (undo-tree-id5688 . -14) (undo-tree-id5689 . -14) (undo-tree-id5690 . -14) (undo-tree-id5691 . -14) (undo-tree-id5692 . -14) (undo-tree-id5693 . -14) (undo-tree-id5694 . -14) (undo-tree-id5695 . -14) (undo-tree-id5696 . -14) (undo-tree-id5697 . -14) (undo-tree-id5698 . -14) (undo-tree-id5699 . -14) (undo-tree-id5700 . -14) (undo-tree-id5701 . -14) (undo-tree-id5702 . -14) 2583) nil (25934 21919 544583 128000) 0 nil])
([nil nil ((nil fontified nil 2577 . 2578) (nil fontified nil 2573 . 2577) (nil fontified nil 2565 . 2573) (nil fontified nil 2564 . 2565) (2564 . 2578)) nil (25934 21919 544335 421000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -8930) (undo-tree-id5721 . -1) (#("T" 0 1 (fontified t)) . -8931) (undo-tree-id5722 . -1) 8932 (t 25934 21919 588570 377000)) nil (25934 21997 858465 871000) 0 nil])
([nil nil ((8916 . 8918) (#("(" 0 1 (fontified nil)) . -8916) (8905 . 8917)) nil (25934 21997 858463 105000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8917)) nil (25934 21997 858462 27000) 0 nil])
([nil nil ((8942 . 8943)) nil (25934 21997 858461 496000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8928) (undo-tree-id5719 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -8929) (undo-tree-id5720 . -1) 8930) nil (25934 21997 858460 818000) 0 nil])
([nil nil ((8928 . 8930)) nil (25934 21997 858458 315000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8929) (undo-tree-id5718 . -1) 8930) nil (25934 21997 858457 519000) 0 nil])
([nil nil ((8942 . 8943)) nil (25934 21997 858456 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8942) (undo-tree-id5717 . -1) 8943) nil (25934 21997 858455 695000) 0 nil])
([nil nil ((9008 . 9010) (#("(" 0 1 (fontified nil)) . -9008) (8997 . 9009)) nil (25934 21997 858454 244000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9009)) nil (25934 21997 858453 542000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -9034) (undo-tree-id5715 . -1) (#("T" 0 1 (fontified t)) . -9035) (undo-tree-id5716 . -1) 9036) nil (25934 21997 858452 883000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 9035) (9034 . 9035) (#(" " 0 1 (fontified nil)) . -9034) (9034 . 9035) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -9034) (9034 . 9035)) nil (25934 21997 858450 424000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -9034) (undo-tree-id5714 . -1) 9035) nil (25934 21997 858449 434000) 0 nil])
([nil nil ((9034 . 9036)) nil (25934 21997 858447 964000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -9021) (undo-tree-id5712 . -1) (#(" " 0 1 (fontified t)) . -9022) (undo-tree-id5713 . -1) 9023) nil (25934 21997 858447 143000) 0 nil])
([nil nil ((9021 . 9022)) nil (25934 21997 858444 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9020) (undo-tree-id5711 . -1) 9021) nil (25934 21997 858442 945000) 0 nil])
([nil nil ((9021 . 9022)) nil (25934 21997 858431 918000) 0 nil])
([nil nil ((8853 . 8869) (#("            " 0 12 (fontified t)) . 8853) (undo-tree-id5724 . -6) 8859 (t 25934 21997 908077 557000)) nil (25934 22007 351854 439000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8865) (undo-tree-id5723 . -4) 8869) nil (25934 22007 351849 546000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 1932) (t 25934 22007 392018 356000)) nil (25934 22080 846384 17000) 0 nil])
([nil nil ((1932 . 1933)) nil (25934 22080 846382 261000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1948)) nil (25934 22080 846379 982000) 0 nil])
([nil nil ((1948 . 1949)) nil (25934 22080 846373 315000) 0 nil])
([nil nil ((apply -2 3054 3164 undo--wrap-and-run-primitive-undo 3054 3164 ((3062 . 3064) 3153))) nil (25934 22123 148679 496000) 0 nil])
([nil nil ((#("                inputs = rec_input[j_pop, self.csumNa[i_pop] : self.csumNa[i_pop + 1]]
" 0 16 (fontified t) 16 22 (face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 40 (fontified t) 40 42 (fontified t) 42 46 (face font-lock-keyword-face fontified t) 46 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face) fontified t) 54 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-2-face) fontified t) 75 81 (fontified t) 81 82 (face font-lock-operator-face fontified t) 82 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t)) . -3248) (undo-tree-id5824 . -86) (undo-tree-id5825 . -86) (undo-tree-id5826 . -86) (undo-tree-id5827 . -40) (undo-tree-id5828 . -87) 3335 (t 25934 22123 203302 717000)) nil (25934 22149 75953 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3637) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (#("i" 0 1 (fontified t)) . -3638) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3639) (undo-tree-id5817 . -1) (#("p" 0 1 (fontified t)) . -3640) (undo-tree-id5818 . -1) (#("u" 0 1 (fontified t)) . -3641) (undo-tree-id5819 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -3642) (undo-tree-id5820 . -1) (#("s" 0 1 (fontified t)) . -3643) (undo-tree-id5821 . -1) (#(" " 0 1 (fontified t)) . -3644) (undo-tree-id5822 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -3645) (undo-tree-id5823 . -1) 3646) nil (25934 22149 75933 848000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3062) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3062) (t 25934 22149 131144 166000)) nil (25934 22175 20708 813000) 0 nil])
([nil nil ((3154 . 3162) (#("        " 0 8 (fontified nil)) . 3153) (undo-tree-id5869 . -8) (3161 . 3162) (t 25934 22175 66472 29000)) nil (25934 22283 491037 125000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3478) (undo-tree-id5868 . -1) 3479) nil (25934 22283 491035 28000) 0 nil])
([nil nil ((3478 . 3479)) nil (25934 22283 491032 485000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3485) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) 3486) nil (25934 22283 491028 809000) 0 nil])
([nil nil ((3485 . 3486)) nil (25934 22283 490957 506000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3422) (undo-tree-id5870 . -1) 3423 (t 25934 22283 575907 439000)) nil (25934 22294 238018 260000) 0 nil])
([nil nil ((3422 . 3423)) nil (25934 22294 238010 544000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3415)) nil (25934 22294 238009 56000) 0 nil])
([nil nil ((3415 . 3416)) nil (25934 22294 238004 799000) 0 nil])
([nil nil ((apply -16 3163 3674 undo--wrap-and-run-primitive-undo 3163 3674 ((3579 . 3581) (3520 . 3522) (3465 . 3467) (3400 . 3402) (3354 . 3356) (3259 . 3261) (3213 . 3215) (3171 . 3173) 3641))) nil (25934 22359 612920 647000) 0 nil])
([nil nil ((3162 . 3174)) nil (25934 22359 612919 901000) 0 nil])
([nil nil ((3183 . 3188) (3182 . 3184) (#("(" 0 1 (fontified nil)) . -3182) (3174 . 3183)) nil (25934 22359 612914 195000) 0 nil])
([nil nil ((3189 . 3198) (t 25934 22359 658411 175000)) nil (25934 22373 547960 920000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3205) (3204 . 3205) (3203 . 3205) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -3203) (3198 . 3204)) nil (25934 22373 547958 25000) 0 nil])
([nil nil ((3204 . 3207)) nil (25934 22373 547954 838000) 0 nil])
([nil nil ((3207 . 3219)) nil (25934 22373 547953 184000) 0 nil])
([nil nil ((3205 . 3214) (3204 . 3206) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3204) (3204 . 3205)) nil (25934 22373 547950 812000) 0 nil])
([nil nil ((3215 . 3217)) nil (25934 22373 547949 202000) 0 nil])
([nil nil ((3233 . 3242)) nil (25934 22373 547943 328000) 0 nil])
([nil nil ((apply -2 3054 3156 undo--wrap-and-run-primitive-undo 3054 3156 ((3062 . 3064) 3153))) nil (25934 22376 66920 692000) 0 nil])
([nil nil ((3155 . 3163)) nil (25934 22376 66915 400000) 0 nil])
([nil nil ((apply -2 1578 1665 undo--wrap-and-run-primitive-undo 1578 1665 ((1586 . 1588) 1654))) nil (25934 22409 879131 405000) 0 nil])
([nil nil ((apply 2 1665 1773 undo--wrap-and-run-primitive-undo 1665 1773 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1673) 1775))) nil (25934 22409 879125 361000) 0 nil])
([nil nil ((apply 2 1773 1797 undo--wrap-and-run-primitive-undo 1773 1797 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1781) 1799))) nil (25934 22413 45410 798000) 0 nil])
([nil nil ((apply -10 1890 2223 undo--wrap-and-run-primitive-undo 1890 2223 ((2175 . 2177) (2136 . 2138) (2082 . 2084) (1993 . 1995) (1906 . 1908) 2196))) nil (25934 22424 122425 539000) 0 nil])
([nil nil ((apply 4 2223 2393 undo--wrap-and-run-primitive-undo 2223 2393 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2321) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2239) 2397))) nil (25934 22424 122420 289000) 0 nil])
([nil nil ((apply -2 2548 2727 undo--wrap-and-run-primitive-undo 2548 2727 ((2560 . 2562) 2624))) nil (25934 22429 541435 533000) 0 nil])
([nil nil ((apply 2 2626 2725 undo--wrap-and-run-primitive-undo 2626 2725 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2638) 2727))) nil (25934 22429 541426 479000) 0 nil])
([nil nil ((apply -10 14835 15134 undo--wrap-and-run-primitive-undo 14835 15134 ((15046 . 15048) (14989 . 14991) (14931 . 14933) (14889 . 14891) (14847 . 14849) 15115))) nil (25934 22449 346002 479000) 0 nil])
([nil nil ((apply 10 14835 15115 undo--wrap-and-run-primitive-undo 14835 15115 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15038) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14983) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14927) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14887) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14847) 15125))) nil (25934 22449 346001 632000) 0 nil])
([nil nil ((apply -48 14812 16068 undo--wrap-and-run-primitive-undo 14812 16068 ((16013 . 16015) (15971 . 15973) (15934 . 15936) (15903 . 15905) (15842 . 15844) (15760 . 15762) (15736 . 15738) (15626 . 15628) (15599 . 15601) (15521 . 15523) (15479 . 15481) (15431 . 15433) (15400 . 15402) (15340 . 15342) (15265 . 15267) (15223 . 15225) (15181 . 15183) (15144 . 15146) (15044 . 15046) (14987 . 14989) (14929 . 14931) (14887 . 14889) (14845 . 14847) (14821 . 14823) 16019))) nil (25934 22449 345996 100000) 0 nil])
([nil nil ((16067 . 16075) (t 25934 22449 400772 198000)) nil (25934 22450 489345 529000) 0 nil])
([nil nil ((14812 . 14820) (t 25934 22450 550567 240000)) nil (25934 22459 723184 948000) 0 nil])
([nil nil ((14713 . 14721) (#("    " 0 4 (fontified t)) . 14713)) nil (25934 22459 723183 619000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -14717) (undo-tree-id5871 . -4) 14721) nil (25934 22459 723179 252000) 0 nil])
([nil nil ((apply 2 2159 2204 undo--wrap-and-run-primitive-undo 2159 2204 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2175) 2206))) nil (25934 22484 655053 597000) 0 nil])
([nil nil ((2159 . 2160)) nil (25934 22484 655052 149000) 0 nil])
([nil nil ((apply -2 2160 2224 undo--wrap-and-run-primitive-undo 2160 2224 ((2176 . 2178) 2205))) nil (25934 22484 655050 508000) 0 nil])
([nil nil ((apply 6 2066 2201 undo--wrap-and-run-primitive-undo 2066 2201 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2172) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2134) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2082) 2207))) nil (25934 22484 655049 227000) 0 nil])
([nil nil ((2155 . 2171)) nil (25934 22497 252123 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2154) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) 2155) nil (25934 22506 451614 689000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -2154) (undo-tree-id5872 . -1) (undo-tree-id5874 . -1) (undo-tree-id5876 . -1) (undo-tree-id5878 . -1) (undo-tree-id5880 . -1) (undo-tree-id5882 . -1) (undo-tree-id5884 . -1) (undo-tree-id5886 . -1) (undo-tree-id5888 . -1) (undo-tree-id5890 . -1) (undo-tree-id5892 . -1) (undo-tree-id5894 . -1) (undo-tree-id5896 . -1) (undo-tree-id5898 . -1) (undo-tree-id5900 . -1) (undo-tree-id5902 . -1) (undo-tree-id5904 . -1) (undo-tree-id5906 . -1) (undo-tree-id5908 . -1) (undo-tree-id5910 . -1) (undo-tree-id5912 . -1) (undo-tree-id5914 . -1) (undo-tree-id5916 . -1) (undo-tree-id5918 . -1) (undo-tree-id5920 . -1) (undo-tree-id5922 . -1) (undo-tree-id5924 . -1) (undo-tree-id5926 . -1) (undo-tree-id5928 . -1) (undo-tree-id5930 . -1) 2155) ((2154 . 2155) (t 25934 22484 777241 937000)) (25934 22496 979480 604000) 0 nil])
([nil nil ((#("                Wij.weight.data = W0                
                self.Wab[i_pop, j_pop] = Wij
" 0 16 (fontified t) 16 27 (fontified t) 27 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t) 32 33 (face font-lock-operator-face fontified t) 33 36 (fontified t) 36 52 (fontified t) 52 53 (fontified t) 53 69 (fontified t) 69 73 (face font-lock-keyword-face fontified t) 73 74 (fontified t) 74 77 (face font-lock-variable-name-face fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t) 78 79 (face font-lock-variable-name-face fontified t) 79 83 (face font-lock-variable-name-face fontified t) 83 85 (fontified t) 85 86 (face font-lock-variable-name-face fontified t) 86 90 (face font-lock-variable-name-face fontified t) 90 91 (face (rainbow-delimiters-depth-1-face) fontified t) 91 92 (fontified t) 92 93 (face font-lock-operator-face fontified t) 93 97 (fontified t) 97 98 (fontified t rear-nonsticky t)) . 2118) (undo-tree-id5943 . -8) (undo-tree-id5944 . -16) (undo-tree-id5945 . -36) (undo-tree-id5946 . -53) (undo-tree-id5947 . -53) (undo-tree-id5948 . -98) 2216) nil (25934 22506 451611 656000) 0 nil])
([nil nil ((#("                self.Wab[i_pop, j_pop] = Wij
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 21 (fontified t) 21 24 (face font-lock-variable-name-face fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 30 (face font-lock-variable-name-face fontified t) 30 32 (fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 37 (face font-lock-variable-name-face fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (face font-lock-operator-face fontified t) 40 44 (fontified t) 44 45 (fontified t rear-nonsticky t)) . 2171) (undo-tree-id5932 . -45) 2216 (t 25934 22484 777241 937000)) ((2171 . 2216)) (25934 22496 978425 274000) 0 nil])
([nil nil ((nil fontified nil 2215 . 2216) (nil fontified nil 2211 . 2215) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2204 . 2208) (nil fontified nil 2203 . 2204) (nil fontified nil 2201 . 2203) (nil fontified nil 2197 . 2201) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2192 . 2195) (nil fontified nil 2191 . 2192) (nil fontified nil 2187 . 2191) (nil fontified nil 2171 . 2187) (nil fontified nil 2170 . 2171) (nil fontified nil 2154 . 2170) (nil fontified nil 2151 . 2154) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2145 . 2149) (nil fontified nil 2134 . 2145) (nil fontified nil 2118 . 2134) (2118 . 2216)) nil (25934 22506 451604 256000) 0 nil])
nil
([nil nil ((apply -4 2118 2237 undo--wrap-and-run-primitive-undo 2118 2237 ((2189 . 2191) (2134 . 2136) 2216))) nil (25934 22506 451600 884000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2404) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (#("j" 0 1 (fontified t)) . -2405) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) 2406) nil (25934 22506 451598 938000) 0 nil])
([nil nil ((2404 . 2405)) nil (25934 22506 451574 560000) 0 nil])
([nil nil ((4142 . 4146) 4134 (t 25934 22506 503751 423000)) nil (25934 22545 327730 412000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4142) (undo-tree-id5951 . -4) (undo-tree-id5952 . -4) (undo-tree-id5953 . -4) (undo-tree-id5954 . -4) (undo-tree-id5955 . -4) (undo-tree-id5956 . -4) (undo-tree-id5957 . -4) (undo-tree-id5958 . -4) (undo-tree-id5959 . -4) (undo-tree-id5960 . -4) (undo-tree-id5961 . -4) (undo-tree-id5962 . -4) (undo-tree-id5963 . -4) (undo-tree-id5964 . -4) (undo-tree-id5965 . -4) (undo-tree-id5966 . -4) (undo-tree-id5967 . -4) (undo-tree-id5968 . -4) (undo-tree-id5969 . -4) (undo-tree-id5970 . -4) (undo-tree-id5971 . -4) (undo-tree-id5972 . -4) (undo-tree-id5973 . -4) (undo-tree-id5974 . -4) (undo-tree-id5975 . -4) (undo-tree-id5976 . -4) (undo-tree-id5977 . -4) (undo-tree-id5978 . -4) (undo-tree-id5979 . -4) (undo-tree-id5980 . -4) (undo-tree-id5981 . -4) (undo-tree-id5982 . -4) (undo-tree-id5983 . -4) (undo-tree-id5984 . -4) (undo-tree-id5985 . -4) (undo-tree-id5986 . -4) (undo-tree-id5987 . -4) (undo-tree-id5988 . -4) (undo-tree-id5989 . -4) (undo-tree-id5990 . -4) (undo-tree-id5991 . -4) (undo-tree-id5992 . -4) 4146) nil (25934 22545 327724 566000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -4193) (undo-tree-id5993 . -8) (undo-tree-id5994 . -8) (undo-tree-id5995 . -8) (undo-tree-id5996 . -8) (undo-tree-id5997 . -8) (undo-tree-id5998 . -8) (undo-tree-id5999 . -8) (undo-tree-id6000 . -8) (undo-tree-id6001 . -8) (undo-tree-id6002 . -8) (undo-tree-id6003 . -8) (undo-tree-id6004 . -8) (undo-tree-id6005 . -8) (undo-tree-id6006 . -8) (undo-tree-id6007 . -8) (undo-tree-id6008 . -8) (undo-tree-id6009 . -8) (undo-tree-id6010 . -8) (undo-tree-id6011 . -8) 4201 (t 25934 22545 386111 561000)) nil (25934 22558 669743 264000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4246 . 4247) (nil fontified nil 4246 . 4247) (nil fontified nil 4245 . 4246) (nil fontified nil 4240 . 4245) (nil fontified nil 4239 . 4240) (nil fontified nil 4229 . 4239) (nil fontified nil 4228 . 4229) (nil fontified nil 4217 . 4228) (nil fontified nil 4216 . 4217) (nil fontified nil 4215 . 4216) (nil fontified nil 4210 . 4215) (nil fontified nil 4206 . 4210) (nil fontified nil 4199 . 4206) (nil fontified nil 4197 . 4199) (nil fontified nil 4194 . 4197) (4194 . 4247) (t 25934 22558 761677 697000)) nil (25934 22733 450149 8000) 0 nil])
([nil nil ((apply -4 4247 4357 undo--wrap-and-run-primitive-undo 4247 4357 ((4297 . 4299) (4255 . 4257) 4340))) nil (25934 22733 450146 999000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4202) 4194) nil (25934 22733 450146 266000) 0 nil])
([nil nil ((apply -2 4194 4287 undo--wrap-and-run-primitive-undo 4194 4287 ((4202 . 4204) 4243))) nil (25934 22733 450145 689000) 0 nil])
([nil nil ((#("        # net_input = net_input + rec_input[i_pop]
" 0 3 (fontified t) 3 5 (fontified t) 5 8 (fontified t) 8 10 (face font-lock-comment-delimiter-face fontified t) 10 14 (face font-lock-comment-face fontified t) 14 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 32 (face font-lock-comment-face fontified t) 32 33 (face font-lock-comment-face fontified t) 33 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 49 (face font-lock-comment-face fontified t) 49 50 (face font-lock-comment-face fontified t) 50 51 (face font-lock-comment-face rear-nonsticky t fontified t)) . -4194) (undo-tree-id6016 . -51) (undo-tree-id6017 . -51) 4245) nil (25934 22733 450144 859000) 0 nil])
([nil nil ((4184 . 4196)) nil (25934 22733 450142 182000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -4194) (undo-tree-id6014 . -1) (#("t" 0 1 (fontified t)) . -4195) (undo-tree-id6015 . -1) 4196) nil (25934 22733 450141 114000) 0 nil])
([nil nil ((4194 . 4196)) nil (25934 22733 450138 88000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4194) (undo-tree-id6012 . -1) (#("t" 0 1 (fontified t)) . -4195) (undo-tree-id6013 . -1) 4196) nil (25934 22733 450136 343000) 0 nil])
([nil nil ((4194 . 4196)) nil (25934 22733 450120 769000) 0 nil])
([nil nil ((apply -2 3905 4001 undo--wrap-and-run-primitive-undo 3905 4001 ((3913 . 3915) 3905))) nil (25934 22736 593370 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4067 . 4068) (nil fontified nil 4067 . 4068) (nil fontified nil 4066 . 4067) (nil fontified nil 4065 . 4066) (nil fontified nil 4064 . 4065) (nil fontified nil 4063 . 4064) (nil fontified nil 4062 . 4063) (nil fontified nil 4057 . 4062) (nil fontified nil 4056 . 4057) (nil fontified nil 4054 . 4056) (nil fontified nil 4053 . 4054) (nil fontified nil 4049 . 4053) (nil fontified nil 4048 . 4049) (nil fontified nil 4047 . 4048) (nil fontified nil 4044 . 4047) (nil fontified nil 4031 . 4044) (nil fontified nil 4030 . 4031) (nil fontified nil 4026 . 4030) (nil fontified nil 4025 . 4026) (nil fontified nil 4019 . 4025) (nil fontified nil 4011 . 4019) (nil fontified nil 4008 . 4011) (nil fontified nil 4004 . 4008) (nil fontified nil 4002 . 4004) (nil fontified nil 4001 . 4002) (4001 . 4068) (t 25934 22736 689513 913000)) nil (25934 22804 494071 343000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t) 2 4 (fontified t)) . -4009) 4001) nil (25934 22804 494068 2000) 0 nil])
([nil nil ((4063 . 4072)) nil (25934 22804 494067 368000) 0 nil])
([nil nil ((apply -6 4073 4214 undo--wrap-and-run-primitive-undo 4073 4214 ((4144 . 4146) (4102 . 4104) (4081 . 4083) 4199))) nil (25934 22804 494066 891000) 0 nil])
([nil nil ((#(".append" 0 1 (fontified t) 1 7 (fontified t)) . 4014)) nil (25934 22804 494066 321000) 0 nil])
([nil nil ((4014 . 4015)) nil (25934 22804 494065 661000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4015)) nil (25934 22804 494064 815000) 0 nil])
([nil nil ((4015 . 4018)) nil (25934 22804 494064 79000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4015) (undo-tree-id6029 . -1) 4016) nil (25934 22804 494063 224000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -4057) (undo-tree-id6028 . -1) 4058) nil (25934 22804 494061 232000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4044) (undo-tree-id6018 . -1) (#("N" 0 1 (fontified t)) . -4045) (undo-tree-id6019 . -1) (#("a" 0 1 (fontified t)) . -4046) (undo-tree-id6020 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -4047) (undo-tree-id6021 . -1) (#("i" 0 1 (fontified nil)) . -4048) (undo-tree-id6022 . -1) (#("_" 0 1 (fontified t)) . -4049) (undo-tree-id6023 . -1) (#("p" 0 1 (fontified t)) . -4050) (undo-tree-id6024 . -1) (#("o" 0 1 (fontified t)) . -4051) (undo-tree-id6025 . -1) (#("p" 0 1 (fontified t)) . -4052) (undo-tree-id6026 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -4053) (undo-tree-id6027 . -1) 4054) nil (25934 22804 494056 723000) 0 nil])
([nil nil ((4044 . 4053)) nil (25934 22804 494034 544000) 0 nil])
([nil nil ((4056 . 4060) (t 25934 22804 543762 877000)) nil (25934 22819 376129 255000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 4066) (4065 . 4066) (4064 . 4066) (#("(" 0 1 (fontified nil)) . -4064) (4060 . 4065)) nil (25934 22819 376127 521000) 0 nil])
([nil nil ((4065 . 4066)) nil (25934 22819 376125 552000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4246) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (#("a" 0 1 (fontified t)) . -4247) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (#("c" 0 1 (fontified t)) . -4248) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (#("k" 0 1 (fontified t)) . -4249) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -4250) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (#("n" 0 1 (fontified t)) . -4251) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (#("o" 0 1 (fontified t)) . -4252) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (#("i" 0 1 (fontified t)) . -4253) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (#("s" 0 1 (fontified nil)) . -4254) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (#("e" 0 1 (fontified nil)) . -4255) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4256) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (#("." 0 1 (fontified nil)) . -4257) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (#("s" 0 1 (fontified nil)) . -4258) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (#("q" 0 1 (fontified nil)) . -4259) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (#("u" 0 1 (fontified t)) . -4260) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (#("e" 0 1 (fontified t)) . -4261) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (#("e" 0 1 (fontified t)) . -4262) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (#("z" 0 1 (fontified t)) . -4263) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (#("e" 0 1 (fontified t)) . -4264) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4265) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 4266) (#("0" 0 1 (fontified t)) . -4266) (undo-tree-id6178 . -1) 4267) nil (25934 22819 376114 548000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4238) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (#("o" 0 1 (fontified t)) . -4239) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (#("r" 0 1 (fontified t)) . -4240) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (#("c" 0 1 (fontified t)) . -4241) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (#("h" 0 1 (fontified t)) . -4242) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (#("." 0 1 (fontified t)) . -4243) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (#("v" 0 1 (fontified t)) . -4244) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (#("s" 0 1 (fontified t)) . -4245) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) 4246) nil (25934 22819 375979 207000) 0 nil])
([nil nil ((4238 . 4239)) nil (25934 22819 375887 590000) 0 nil])
([nil nil ((4239 . 4243)) nil (25934 22819 375879 641000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9255 . 9256) (nil fontified nil 9246 . 9256) (nil fontified nil 9242 . 9246) (nil fontified nil 9241 . 9242) (nil fontified nil 9239 . 9241) (nil fontified nil 9227 . 9239) (9227 . 9256) (t 25934 22819 467923 721000)) nil (25934 22843 648960 50000) 0 nil])
([nil nil ((9256 . 9272) (#("            " 0 12 (fontified t)) . 9256) (undo-tree-id6179 . -12) (undo-tree-id6180 . -12) (undo-tree-id6181 . -12)) nil (25934 22843 648952 849000) 0 nil])
([nil nil ((#("        print('rec_input', rec_input.shape)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 27 (fontified t) 27 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) fontified t) 43 44 (fontified t)) . -3217) (undo-tree-id6182 . -8) (undo-tree-id6183 . -8) (undo-tree-id6184 . -44) (undo-tree-id6185 . -44) (undo-tree-id6186 . -44) (undo-tree-id6187 . -44) (undo-tree-id6188 . -44) (undo-tree-id6189 . -44) (undo-tree-id6190 . -44) (undo-tree-id6191 . -44) (undo-tree-id6192 . -44) (undo-tree-id6193 . -44) (undo-tree-id6194 . -44) (undo-tree-id6195 . -44) (undo-tree-id6196 . -44) (undo-tree-id6197 . -44) (undo-tree-id6198 . -44) (undo-tree-id6199 . -44) (undo-tree-id6200 . -44) (undo-tree-id6201 . -44) (undo-tree-id6202 . -44) (undo-tree-id6203 . -44) (undo-tree-id6204 . -44) (undo-tree-id6205 . -44) (undo-tree-id6206 . -44) (undo-tree-id6207 . -44) (undo-tree-id6208 . -44) (undo-tree-id6209 . -44) (undo-tree-id6210 . -44) 3261 (t 25934 22843 728043 626000)) nil (25934 22867 875534 161000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8269) (#("." 0 1 (fontified t)) . 8269) (#("0" 0 1 (fontified t)) . 8269) (#(" " 0 1 (fontified nil)) . 8269) (#("," 0 1 (fontified nil)) . 8269) (#("0" 0 1 (fontified t)) . 8269) (#("." 0 1 (fontified nil)) . 8269) (#("0" 0 1 (fontified t)) . 8269) (#(" " 0 1 (fontified t)) . 8269) (#("," 0 1 (fontified t)) . 8269) (t 25934 22867 932229 264000)) nil (25934 23140 254976 573000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8416) (#("." 0 1 (fontified t)) . 8416) (#("0" 0 1 (fontified t)) . 8416) (#(" " 0 1 (fontified t)) . 8416) (#("," 0 1 (fontified t)) . 8416) (#("0" 0 1 (fontified t)) . 8416) (#("." 0 1 (fontified t)) . 8416) (#("0" 0 1 (fontified t)) . 8416)) nil (25934 23140 254972 31000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -8414) (undo-tree-id6592 . -1) (#(" " 0 1 (fontified t)) . -8415) (undo-tree-id6593 . -1) 8416) nil (25934 23140 254969 150000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8465) (#("." 0 1 (fontified t)) . 8465) (#("0" 0 1 (fontified t)) . 8465) (#(" " 0 1 (fontified t)) . 8465) (#("," 0 1 (fontified t)) . 8465) (#("0" 0 1 (fontified t)) . 8465) (#("." 0 1 (fontified t)) . 8465) (#("0" 0 1 (fontified t)) . 8465) (#(" " 0 1 (fontified t)) . 8465) (#("," 0 1 (fontified t)) . 8465)) nil (25934 23140 254963 735000) 0 nil])
([nil nil ((#("                                       [0.0, 0.0, 1.0, 0.0],
" 0 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) fontified t) 59 61 (fontified t)) . -8468) (undo-tree-id6591 . -61) 8529) nil (25934 23140 254960 771000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8507) (#(" " 0 1 (fontified t)) . 8507) (#("," 0 1 (fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("." 0 1 (fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 8507)) nil (25934 23140 254957 159000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 8507) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("." 0 1 (fontified t)) . 8507) (#("1" 0 1 (fontified t)) . 8507) (#(" " 0 1 (fontified t)) . 8507) (#("," 0 1 (fontified t)) . 8507) (#("0" 0 1 (fontified t)) . 8507) (#("." 0 1 (fontified nil)) . 8507) (#("0" 0 1 (fontified nil)) . 8507) (#(" " 0 1 (fontified nil)) . 8507) (#("," 0 1 (fontified nil)) . 8507) (#("0" 0 1 (fontified nil)) . 8507) (#("." 0 1 (fontified t)) . 8507)) nil (25934 23140 254952 950000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -8504) (undo-tree-id6590 . -3) 8507) nil (25934 23140 254949 645000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8500) (undo-tree-id6589 . -4) 8504) nil (25934 23140 254946 981000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8496) (undo-tree-id6588 . -4) 8500) nil (25934 23140 254944 378000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8492) (undo-tree-id6587 . -4) 8496) nil (25934 23140 254942 50000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8488) (undo-tree-id6586 . -4) 8492) nil (25934 23140 254939 782000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8484) (undo-tree-id6585 . -4) 8488) nil (25934 23140 254937 312000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8480) (undo-tree-id6571 . -4) (undo-tree-id6572 . -4) (undo-tree-id6573 . -4) (undo-tree-id6574 . -4) (undo-tree-id6575 . -4) (undo-tree-id6576 . -4) (undo-tree-id6577 . -4) (undo-tree-id6578 . -4) (undo-tree-id6579 . -4) (undo-tree-id6580 . -4) (undo-tree-id6581 . -4) (undo-tree-id6582 . -4) (undo-tree-id6583 . -4) (undo-tree-id6584 . -4) 8484) nil (25934 23140 254934 626000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8476) (undo-tree-id6526 . -4) (undo-tree-id6527 . -4) (undo-tree-id6528 . -4) (undo-tree-id6529 . -4) (undo-tree-id6530 . -4) (undo-tree-id6531 . -4) (undo-tree-id6532 . -4) (undo-tree-id6533 . -4) (undo-tree-id6534 . -4) (undo-tree-id6535 . -4) (undo-tree-id6536 . -4) (undo-tree-id6537 . -4) (undo-tree-id6538 . -4) (undo-tree-id6539 . -4) (undo-tree-id6540 . -4) (undo-tree-id6541 . -4) (undo-tree-id6542 . -4) (undo-tree-id6543 . -4) (undo-tree-id6544 . -4) (undo-tree-id6545 . -4) (undo-tree-id6546 . -4) (undo-tree-id6547 . -4) (undo-tree-id6548 . -4) (undo-tree-id6549 . -4) (undo-tree-id6550 . -4) (undo-tree-id6551 . -4) (undo-tree-id6552 . -4) (undo-tree-id6553 . -4) (undo-tree-id6554 . -4) (undo-tree-id6555 . -4) (undo-tree-id6556 . -4) (undo-tree-id6557 . -4) (undo-tree-id6558 . -4) (undo-tree-id6559 . -4) (undo-tree-id6560 . -4) (undo-tree-id6561 . -4) (undo-tree-id6562 . -4) (undo-tree-id6563 . -4) (undo-tree-id6564 . -4) (undo-tree-id6565 . -4) (undo-tree-id6566 . -4) (undo-tree-id6567 . -4) (undo-tree-id6568 . -4) (undo-tree-id6569 . -4) (undo-tree-id6570 . -4) 8480) nil (25934 23140 254916 836000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8472) (undo-tree-id6457 . -4) (undo-tree-id6458 . -4) (undo-tree-id6459 . -4) (undo-tree-id6460 . -4) (undo-tree-id6461 . -4) (undo-tree-id6462 . -4) (undo-tree-id6463 . -4) (undo-tree-id6464 . -4) (undo-tree-id6465 . -4) (undo-tree-id6466 . -4) (undo-tree-id6467 . -4) (undo-tree-id6468 . -4) (undo-tree-id6469 . -4) (undo-tree-id6470 . -4) (undo-tree-id6471 . -4) (undo-tree-id6472 . -4) (undo-tree-id6473 . -4) (undo-tree-id6474 . -4) (undo-tree-id6475 . -4) (undo-tree-id6476 . -4) (undo-tree-id6477 . -4) (undo-tree-id6478 . -4) (undo-tree-id6479 . -4) (undo-tree-id6480 . -4) (undo-tree-id6481 . -4) (undo-tree-id6482 . -4) (undo-tree-id6483 . -4) (undo-tree-id6484 . -4) (undo-tree-id6485 . -4) (undo-tree-id6486 . -4) (undo-tree-id6487 . -4) (undo-tree-id6488 . -4) (undo-tree-id6489 . -4) (undo-tree-id6490 . -4) (undo-tree-id6491 . -4) (undo-tree-id6492 . -4) (undo-tree-id6493 . -4) (undo-tree-id6494 . -4) (undo-tree-id6495 . -4) (undo-tree-id6496 . -4) (undo-tree-id6497 . -4) (undo-tree-id6498 . -4) (undo-tree-id6499 . -4) (undo-tree-id6500 . -4) (undo-tree-id6501 . -4) (undo-tree-id6502 . -4) (undo-tree-id6503 . -4) (undo-tree-id6504 . -4) (undo-tree-id6505 . -4) (undo-tree-id6506 . -4) (undo-tree-id6507 . -4) (undo-tree-id6508 . -4) (undo-tree-id6509 . -4) (undo-tree-id6510 . -4) (undo-tree-id6511 . -4) (undo-tree-id6512 . -4) (undo-tree-id6513 . -4) (undo-tree-id6514 . -4) (undo-tree-id6515 . -4) (undo-tree-id6516 . -4) (undo-tree-id6517 . -4) (undo-tree-id6518 . -4) (undo-tree-id6519 . -4) (undo-tree-id6520 . -4) (undo-tree-id6521 . -4) (undo-tree-id6522 . -4) (undo-tree-id6523 . -4) (undo-tree-id6524 . -4) (undo-tree-id6525 . -4) 8476) nil (25934 23140 254865 564000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8468) (undo-tree-id6350 . -4) (undo-tree-id6351 . -4) (undo-tree-id6352 . -4) (undo-tree-id6353 . -4) (undo-tree-id6354 . -4) (undo-tree-id6355 . -4) (undo-tree-id6356 . -4) (undo-tree-id6357 . -4) (undo-tree-id6358 . -4) (undo-tree-id6359 . -4) (undo-tree-id6360 . -4) (undo-tree-id6361 . -4) (undo-tree-id6362 . -4) (undo-tree-id6363 . -4) (undo-tree-id6364 . -4) (undo-tree-id6365 . -4) (undo-tree-id6366 . -4) (undo-tree-id6367 . -4) (undo-tree-id6368 . -4) (undo-tree-id6369 . -4) (undo-tree-id6370 . -4) (undo-tree-id6371 . -4) (undo-tree-id6372 . -4) (undo-tree-id6373 . -4) (undo-tree-id6374 . -4) (undo-tree-id6375 . -4) (undo-tree-id6376 . -4) (undo-tree-id6377 . -4) (undo-tree-id6378 . -4) (undo-tree-id6379 . -4) (undo-tree-id6380 . -4) (undo-tree-id6381 . -4) (undo-tree-id6382 . -4) (undo-tree-id6383 . -4) (undo-tree-id6384 . -4) (undo-tree-id6385 . -4) (undo-tree-id6386 . -4) (undo-tree-id6387 . -4) (undo-tree-id6388 . -4) (undo-tree-id6389 . -4) (undo-tree-id6390 . -4) (undo-tree-id6391 . -4) (undo-tree-id6392 . -4) (undo-tree-id6393 . -4) (undo-tree-id6394 . -4) (undo-tree-id6395 . -4) (undo-tree-id6396 . -4) (undo-tree-id6397 . -4) (undo-tree-id6398 . -4) (undo-tree-id6399 . -4) (undo-tree-id6400 . -4) (undo-tree-id6401 . -4) (undo-tree-id6402 . -4) (undo-tree-id6403 . -4) (undo-tree-id6404 . -4) (undo-tree-id6405 . -4) (undo-tree-id6406 . -4) (undo-tree-id6407 . -4) (undo-tree-id6408 . -4) (undo-tree-id6409 . -4) (undo-tree-id6410 . -4) (undo-tree-id6411 . -4) (undo-tree-id6412 . -4) (undo-tree-id6413 . -4) (undo-tree-id6414 . -4) (undo-tree-id6415 . -4) (undo-tree-id6416 . -4) (undo-tree-id6417 . -4) (undo-tree-id6418 . -4) (undo-tree-id6419 . -4) (undo-tree-id6420 . -4) (undo-tree-id6421 . -4) (undo-tree-id6422 . -4) (undo-tree-id6423 . -4) (undo-tree-id6424 . -4) (undo-tree-id6425 . -4) (undo-tree-id6426 . -4) (undo-tree-id6427 . -4) (undo-tree-id6428 . -4) (undo-tree-id6429 . -4) (undo-tree-id6430 . -4) (undo-tree-id6431 . -4) (undo-tree-id6432 . -4) (undo-tree-id6433 . -4) (undo-tree-id6434 . -4) (undo-tree-id6435 . -4) (undo-tree-id6436 . -4) (undo-tree-id6437 . -4) (undo-tree-id6438 . -4) (undo-tree-id6439 . -4) (undo-tree-id6440 . -4) (undo-tree-id6441 . -4) (undo-tree-id6442 . -4) (undo-tree-id6443 . -4) (undo-tree-id6444 . -4) (undo-tree-id6445 . -4) (undo-tree-id6446 . -4) (undo-tree-id6447 . -4) (undo-tree-id6448 . -4) (undo-tree-id6449 . -4) (undo-tree-id6450 . -4) (undo-tree-id6451 . -4) (undo-tree-id6452 . -4) (undo-tree-id6453 . -4) (undo-tree-id6454 . -4) (undo-tree-id6455 . -4) (undo-tree-id6456 . -4) 8472) nil (25934 23140 254774 2000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8467) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) 8468) nil (25934 23140 254540 217000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8411) (undo-tree-id6737 . -1) (#("." 0 1 (fontified t)) . -8412) (undo-tree-id6738 . -1) (#("0" 0 1 (fontified t)) . -8413) (undo-tree-id6739 . -1) 8414 (t 25934 23140 326561 763000)) nil (25934 23159 418840 497000) 0 nil])
([nil nil ((8411 . 8416)) nil (25934 23159 418834 878000) 0 nil])
([nil nil ((8416 . 8419)) nil (25934 23159 418834 34000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -8416) (undo-tree-id6734 . -1) (#("o" 0 1 (fontified t)) . -8417) (undo-tree-id6735 . -1) (#("v" 0 1 (fontified t)) . -8418) (undo-tree-id6736 . -1) 8419) nil (25934 23159 418832 34000) 0 nil])
([nil nil ((8416 . 8419)) nil (25934 23159 418826 122000) 0 nil])
([nil nil ((8416 . 8419)) nil (25934 23159 418825 80000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8465) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (#("." 0 1 (fontified t)) . -8466) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (#("0" 0 1 (fontified t)) . -8467) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) 8468) nil (25934 23159 418815 321000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8475 . 8476) (nil fontified nil 8469 . 8476) (nil fontified nil 8465 . 8469) (8465 . 8476)) nil (25934 23159 418472 994000) 0 nil])
([nil nil ((apply 8 15077 15256 undo--wrap-and-run-primitive-undo 15077 15256 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15200) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15160) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15120) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15085) 15264))) nil (25934 23544 263063 987000) 0 nil])
([nil nil ((apply 12 14754 15056 undo--wrap-and-run-primitive-undo 14754 15056 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14975) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14920) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14864) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14824) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14784) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -14762) 15068))) nil (25934 23548 735254 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14954 . 14955) (14856 . 14955)) ((#("            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
" 0 12 (fontified nil) 12 16 (face font-lock-keyword-face fontified nil) 16 20 (fontified nil) 20 30 (fontified nil) 30 31 (face (rainbow-delimiters-depth-1-face) fontified nil) 31 35 (face font-lock-keyword-face fontified nil) 35 42 (fontified nil) 42 43 (face (rainbow-delimiters-depth-2-face) fontified nil) 43 48 (fontified nil) 48 49 (face (rainbow-delimiters-depth-2-face) fontified nil) 49 52 (fontified nil) 52 56 (face font-lock-keyword-face fontified nil) 56 63 (fontified nil) 63 64 (face (rainbow-delimiters-depth-2-face) fontified nil) 64 70 (fontified nil) 70 71 (face font-lock-operator-face fontified nil) 71 73 (fontified nil) 73 74 (face (rainbow-delimiters-depth-2-face) fontified nil) 74 75 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t) 75 81 (fontified nil) 81 82 (face (rainbow-delimiters-depth-1-face) fontified nil) 82 86 (face font-lock-keyword-face fontified nil) 86 90 (fontified nil) 90 91 (face (rainbow-delimiters-depth-2-face) fontified nil) 91 96 (fontified nil) 96 97 (face (rainbow-delimiters-depth-2-face) fontified nil) 97 98 (face (rainbow-delimiters-depth-1-face) fontified nil) 98 99 (rear-nonsticky nil fontified nil)) . 14856) (nil rear-nonsticky t 14954 . 14955)) (25934 23549 716372 120000) 0 nil])
([nil nil ((#("            self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
" 0 12 (fontified t) 12 16 (face font-lock-keyword-face fontified t) 16 20 (fontified t) 20 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 70 (fontified t) 70 71 (face font-lock-operator-face fontified t) 71 73 (fontified t) 73 74 (face (rainbow-delimiters-depth-2-face) fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 75 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-1-face) fontified t) 82 86 (face font-lock-keyword-face fontified t) 86 90 (fontified t) 90 91 (face (rainbow-delimiters-depth-2-face) fontified t) 91 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-2-face) fontified t) 97 98 (face (rainbow-delimiters-depth-1-face) fontified t) 98 99 (rear-nonsticky t fontified t)) . 14856) (undo-tree-id6828 . -99) 14955) nil (25934 23575 789298 3000) 0 nil] [nil nil ((14856 . 14876) (#("            " 0 12 (fontified t)) . 14856)) ((14856 . 14868) (#("                    " 0 20 (fontified t)) . 14856)) (25934 23548 404578 74000) 0 nil])
([nil nil ((nil fontified nil 15010 . 15011) (nil fontified nil 15009 . 15010) (nil fontified nil 15008 . 15009) (nil fontified nil 15003 . 15008) (nil fontified nil 15002 . 15003) (nil fontified nil 14998 . 15002) (nil fontified nil 14994 . 14998) (nil fontified nil 14993 . 14994) (nil fontified nil 14987 . 14993) (nil fontified nil 14986 . 14987) (nil fontified nil 14985 . 14986) (nil fontified nil 14983 . 14985) (nil fontified nil 14982 . 14983) (nil fontified nil 14976 . 14982) (nil fontified nil 14975 . 14976) (nil fontified nil 14968 . 14975) (nil fontified nil 14964 . 14968) (nil fontified nil 14961 . 14964) (nil fontified nil 14960 . 14961) (nil fontified nil 14955 . 14960) (nil fontified nil 14954 . 14955) (nil fontified nil 14947 . 14954) (nil fontified nil 14943 . 14947) (nil fontified nil 14942 . 14943) (nil fontified nil 14932 . 14942) (nil fontified nil 14928 . 14932) (nil fontified nil 14924 . 14928) (nil fontified nil 14912 . 14924) (14912 . 15011)) nil (25934 23575 789294 514000) 0 nil])
([nil nil ((#("                    self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(self.Ja0[i_pop])
" 0 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 28 (fontified t) 28 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 43 (face font-lock-keyword-face fontified t) 43 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-2-face) fontified t) 57 60 (fontified t) 60 64 (face font-lock-keyword-face fontified t) 64 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 78 (fontified t) 78 79 (face font-lock-operator-face fontified t) 79 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 83 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 94 (face font-lock-keyword-face fontified t) 94 98 (fontified t) 98 99 (face (rainbow-delimiters-depth-2-face) fontified t) 99 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-2-face) fontified t) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t) 106 107 (rear-nonsticky t fontified t)) . 14856) (undo-tree-id6740 . -107)) ((14856 . 14963)) (25934 23548 388028 492000) 0 nil])
([nil nil ((14912 . 14932) (#("            " 0 12 (fontified t)) . 14912)) nil (25934 23575 789289 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14967 . 14968) (nil fontified nil 14967 . 14968) (nil fontified nil 14966 . 14967) (nil fontified nil 14963 . 14966) (nil fontified nil 14962 . 14963) (nil fontified nil 14946 . 14962) (nil fontified nil 14945 . 14946) (nil fontified nil 14944 . 14945) (nil fontified nil 14942 . 14944) (nil fontified nil 14941 . 14942) (nil fontified nil 14940 . 14941) (nil fontified nil 14936 . 14940) (nil fontified nil 14932 . 14936) (nil fontified nil 14924 . 14932) (nil fontified nil 14920 . 14924) (nil fontified nil 14912 . 14920) (14912 . 14968)) ((#("                    self.Wab[i, i].bias.data.fill_(0.0)
" 0 8 (fontified nil) 8 12 (fontified nil) 12 20 (fontified nil) 20 24 (face font-lock-keyword-face fontified nil) 24 28 (fontified nil) 28 29 (face (rainbow-delimiters-depth-1-face) fontified nil) 29 30 (fontified nil) 30 32 (fontified nil) 32 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-1-face) fontified nil) 34 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 54 (fontified nil) 54 55 (face (rainbow-delimiters-depth-1-face) fontified nil) 55 56 (rear-nonsticky nil fontified nil)) . 14912) (nil rear-nonsticky t 14967 . 14968)) (25934 23548 386902 716000) 0 nil] [nil nil ((14775 . 14788)) ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 14775) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1)) (25934 23544 332970 812000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15017) (undo-tree-id6827 . -1) 15018) nil (25934 23575 789287 949000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 14831 . 14832) (nil fontified nil 14831 . 14832) (nil fontified nil 14830 . 14831) (nil fontified nil 14827 . 14830) (nil fontified nil 14826 . 14827) (nil fontified nil 14810 . 14826) (nil fontified nil 14809 . 14810) (nil fontified nil 14808 . 14809) (nil fontified nil 14806 . 14808) (nil fontified nil 14805 . 14806) (nil fontified nil 14804 . 14805) (nil fontified nil 14800 . 14804) (nil fontified nil 14796 . 14800) (nil fontified nil 14788 . 14796) (nil fontified nil 14784 . 14788) (nil fontified nil 14776 . 14784) (14776 . 14832)) ((#("                    self.Wab[i, i].bias.data.fill_(0.0)
" 0 8 (fontified nil) 8 12 (fontified nil) 12 20 (fontified nil) 20 24 (face font-lock-keyword-face fontified nil) 24 28 (fontified nil) 28 29 (face (rainbow-delimiters-depth-1-face) fontified nil) 29 30 (fontified nil) 30 32 (fontified nil) 32 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-1-face) fontified nil) 34 50 (fontified nil) 50 51 (face (rainbow-delimiters-depth-1-face) fontified nil) 51 54 (fontified nil) 54 55 (face (rainbow-delimiters-depth-1-face) fontified nil) 55 56 (rear-nonsticky nil fontified nil)) . 14776) (undo-tree-id6741 . -55) (nil rear-nonsticky t 14831 . 14832)) (25934 23544 263748 789000) 0 nil])
([nil nil ((15017 . 15018)) nil (25934 23575 789285 253000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -14788) 14776) ((14788 . 14796)) (25934 23544 263026 817000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -15002) (undo-tree-id6812 . -1) (#("e" 0 1 (fontified t)) . -15003) (undo-tree-id6813 . -1) (#("l" 0 1 (fontified t)) . -15004) (undo-tree-id6814 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -15005) (undo-tree-id6815 . -1) (#("." 0 1 (fontified t)) . -15006) (undo-tree-id6816 . -1) (#("J" 0 1 (fontified t)) . -15007) (undo-tree-id6817 . -1) (#("a" 0 1 (fontified t)) . -15008) (undo-tree-id6818 . -1) (#("0" 0 1 (fontified t)) . -15009) (undo-tree-id6819 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15010) (undo-tree-id6820 . -1) (#("i" 0 1 (fontified t)) . -15011) (undo-tree-id6821 . -1) (#("_" 0 1 (fontified t)) . -15012) (undo-tree-id6822 . -1) (#("p" 0 1 (fontified t)) . -15013) (undo-tree-id6823 . -1) (#("o" 0 1 (fontified t)) . -15014) (undo-tree-id6824 . -1) (#("p" 0 1 (fontified t)) . -15015) (undo-tree-id6825 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15016) (undo-tree-id6826 . -1) 15017) nil (25934 23575 789279 876000) 0 nil])
nil
([nil nil ((15002 . 15005)) nil (25934 23575 789257 808000) 0 nil])
([nil nil ((nil fontified nil 15156 . 15157) (nil fontified nil 15155 . 15156) (nil fontified nil 15152 . 15155) (nil fontified nil 15151 . 15152) (nil fontified nil 15145 . 15151) (nil fontified nil 15144 . 15145) (nil fontified nil 15143 . 15144) (nil fontified nil 15141 . 15143) (nil fontified nil 15140 . 15141) (nil fontified nil 15134 . 15140) (nil fontified nil 15133 . 15134) (nil fontified nil 15126 . 15133) (nil fontified nil 15122 . 15126) (nil fontified nil 15119 . 15122) (nil fontified nil 15118 . 15119) (nil fontified nil 15113 . 15118) (nil fontified nil 15112 . 15113) (nil fontified nil 15105 . 15112) (nil fontified nil 15101 . 15105) (nil fontified nil 15100 . 15101) (nil fontified nil 15090 . 15100) (nil fontified nil 15086 . 15090) (nil fontified nil 15082 . 15086) (nil fontified nil 15062 . 15082) (15062 . 15157)) nil (25934 23575 789255 998000) 0 nil])
([nil nil ((#("                    self.Wab.bias.data[self.csumNa[i_pop] : self.csumNa[i_pop + 1]].fill_(0.0)
" 0 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 28 (fontified t) 28 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t) 39 43 (face font-lock-keyword-face fontified t) 43 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-2-face) fontified t) 57 60 (fontified t) 60 64 (face font-lock-keyword-face fontified t) 64 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 78 (fontified t) 78 79 (face font-lock-operator-face fontified t) 79 81 (fontified t) 81 82 (face (rainbow-delimiters-depth-2-face) fontified t) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 83 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t) 90 93 (fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t rear-nonsticky t)) . 15062) (undo-tree-id6811 . -95) 15157) nil (25934 23575 789249 977000) 0 nil])
([nil nil ((nil fontified nil 15245 . 15246) (nil fontified nil 15244 . 15245) (nil fontified nil 15241 . 15244) (nil fontified nil 15240 . 15241) (nil fontified nil 15234 . 15240) (nil fontified nil 15233 . 15234) (nil fontified nil 15232 . 15233) (nil fontified nil 15230 . 15232) (nil fontified nil 15229 . 15230) (nil fontified nil 15223 . 15229) (nil fontified nil 15222 . 15223) (nil fontified nil 15215 . 15222) (nil fontified nil 15211 . 15215) (nil fontified nil 15208 . 15211) (nil fontified nil 15207 . 15208) (nil fontified nil 15202 . 15207) (nil fontified nil 15201 . 15202) (nil fontified nil 15194 . 15201) (nil fontified nil 15190 . 15194) (nil fontified nil 15189 . 15190) (nil fontified nil 15179 . 15189) (nil fontified nil 15175 . 15179) (nil fontified nil 15171 . 15175) (nil fontified nil 15151 . 15171) (15151 . 15246)) nil (25934 23575 789246 625000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -15241) (undo-tree-id6808 . -1) (#("." 0 1 (fontified t)) . -15242) (undo-tree-id6809 . -1) (#("0" 0 1 (fontified t)) . -15243) (undo-tree-id6810 . -1) 15244) nil (25934 23575 789240 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15276 . 15277) (nil fontified nil 15276 . 15277) (nil fontified nil 15275 . 15276) (nil fontified nil 15274 . 15275) (nil fontified nil 15273 . 15274) (nil fontified nil 15270 . 15273) (nil fontified nil 15266 . 15270) (nil fontified nil 15265 . 15266) (nil fontified nil 15254 . 15265) (nil fontified nil 15253 . 15254) (nil fontified nil 15252 . 15253) (nil fontified nil 15251 . 15252) (nil fontified nil 15250 . 15251) (nil fontified nil 15249 . 15250) (nil fontified nil 15245 . 15249) (nil fontified nil 15241 . 15245) (15241 . 15277)) nil (25934 23575 789223 694000) 0 nil])
([nil nil ((apply -2 15062 15281 undo--wrap-and-run-primitive-undo 15062 15281 ((15082 . 15084) 15151))) nil (25934 23575 789219 898000) 0 nil])
([nil nil ((apply -2 14856 15009 undo--wrap-and-run-primitive-undo 14856 15009 ((14876 . 14878) 14912))) nil (25934 23575 789212 790000) 0 nil])
([nil nil ((nil fontified nil 15565 . 15566) (nil fontified nil 15564 . 15565) (nil fontified nil 15561 . 15564) (nil fontified nil 15560 . 15561) (nil fontified nil 15554 . 15560) (nil fontified nil 15553 . 15554) (nil fontified nil 15552 . 15553) (nil fontified nil 15550 . 15552) (nil fontified nil 15549 . 15550) (nil fontified nil 15543 . 15549) (nil fontified nil 15542 . 15543) (nil fontified nil 15535 . 15542) (nil fontified nil 15531 . 15535) (nil fontified nil 15528 . 15531) (nil fontified nil 15527 . 15528) (nil fontified nil 15522 . 15527) (nil fontified nil 15521 . 15522) (nil fontified nil 15514 . 15521) (nil fontified nil 15510 . 15514) (nil fontified nil 15509 . 15510) (nil fontified nil 15499 . 15509) (nil fontified nil 15495 . 15499) (nil fontified nil 15491 . 15495) (nil fontified nil 15471 . 15491) (15471 . 15566) (t 25934 23575 867659 830000)) nil (25934 23586 291540 704000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -15561) (undo-tree-id6829 . -1) (#("." 0 1 (fontified t)) . -15562) (undo-tree-id6830 . -1) (#("0" 0 1 (fontified t)) . -15563) (undo-tree-id6831 . -1) 15564) nil (25934 23586 291535 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15571 . 15572) (nil fontified nil 15571 . 15572) (nil fontified nil 15570 . 15571) (nil fontified nil 15569 . 15570) (nil fontified nil 15565 . 15569) (nil fontified nil 15561 . 15565) (15561 . 15572)) nil (25934 23586 291525 236000) 0 nil])
([nil nil ((apply -2 15407 15576 undo--wrap-and-run-primitive-undo 15407 15576 ((15427 . 15429) 15471))) nil (25934 23586 291519 84000) 0 nil])
([nil nil ((apply 18 15585 16048 undo--wrap-and-run-primitive-undo 15585 16048 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15997) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15975) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15867) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15842) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15766) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15726) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15680) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15651) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -15593) 16066))) nil (25934 23597 228620 236000) 0 nil])
([nil nil ((apply 10 16048 16292 undo--wrap-and-run-primitive-undo 16048 16292 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16240) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16200) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16165) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16136) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16077) 16302))) nil (25934 23597 228619 601000) 0 nil])
([nil nil ((16292 . 16308) (#("        " 0 8 (fontified t)) . 16292) (undo-tree-id6832 . -8) (undo-tree-id6833 . -8)) nil (25934 23597 228618 466000) 0 nil])
([nil nil ((nil fontified nil 16394 . 16395) (nil fontified nil 16393 . 16394) (nil fontified nil 16392 . 16393) (nil fontified nil 16391 . 16392) (nil fontified nil 16390 . 16391) (nil fontified nil 16386 . 16390) (nil fontified nil 16382 . 16386) (nil fontified nil 16381 . 16382) (nil fontified nil 16375 . 16381) (nil fontified nil 16374 . 16375) (nil fontified nil 16373 . 16374) (nil fontified nil 16371 . 16373) (nil fontified nil 16370 . 16371) (nil fontified nil 16364 . 16370) (nil fontified nil 16363 . 16364) (nil fontified nil 16356 . 16363) (nil fontified nil 16352 . 16356) (nil fontified nil 16349 . 16352) (nil fontified nil 16348 . 16349) (nil fontified nil 16343 . 16348) (nil fontified nil 16342 . 16343) (nil fontified nil 16335 . 16342) (nil fontified nil 16331 . 16335) (nil fontified nil 16330 . 16331) (nil fontified nil 16320 . 16330) (nil fontified nil 16316 . 16320) (nil fontified nil 16312 . 16316) (nil fontified nil 16292 . 16312) (16292 . 16395)) nil (25934 23597 228606 635000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16308) 16292) nil (25934 23597 228598 102000) 0 nil])
([nil nil ((apply -2 16232 16393 undo--wrap-and-run-primitive-undo 16232 16393 ((16248 . 16250) 16292))) nil (25934 23601 34144 347000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 16363) (t 25934 23601 94576 458000)) nil (25934 23648 487465 735000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16363)) nil (25934 23648 487464 109000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16364)) nil (25934 23648 487463 219000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 16342)) nil (25934 23648 487461 993000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15525)) nil (25934 23648 487460 980000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15542)) nil (25934 23648 487459 949000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15542)) nil (25934 23648 487458 977000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15543)) nil (25934 23648 487458 33000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15526)) nil (25934 23648 487456 949000) 0 nil])
([nil nil ((15527 . 15528)) nil (25934 23648 487456 155000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -15527) (undo-tree-id6853 . -1) 15528) nil (25934 23648 487454 713000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15527)) nil (25934 23648 487450 387000) 0 nil])
([nil nil ((nil fontified nil 16045 . 16046) (nil fontified nil 16044 . 16045) (nil fontified nil 16043 . 16044) (nil fontified nil 16042 . 16043) (nil fontified nil 16041 . 16042) (nil fontified nil 16037 . 16041) (nil fontified nil 16033 . 16037) (nil fontified nil 16032 . 16033) (nil fontified nil 16026 . 16032) (nil fontified nil 16025 . 16026) (nil fontified nil 16024 . 16025) (nil fontified nil 16023 . 16024) (nil fontified nil 16022 . 16023) (nil fontified nil 16021 . 16022) (nil fontified nil 16020 . 16021) (nil fontified nil 16013 . 16020) (nil fontified nil 16009 . 16013) (nil fontified nil 16008 . 16009) (nil fontified nil 16007 . 16008) (nil fontified nil 16006 . 16007) (nil fontified nil 16005 . 16006) (nil fontified nil 15998 . 16005) (nil fontified nil 15994 . 15998) (nil fontified nil 15993 . 15994) (nil fontified nil 15983 . 15993) (nil fontified nil 15979 . 15983) (nil fontified nil 15975 . 15979) (nil fontified nil 15955 . 15975) (15955 . 16046)) nil (25934 23648 487447 748000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16026) (undo-tree-id6834 . -1) (#("f" 0 1 (fontified t)) . -16027) (undo-tree-id6835 . -1) (#("i" 0 1 (fontified t)) . -16028) (undo-tree-id6836 . -1) (#("l" 0 1 (fontified t)) . -16029) (undo-tree-id6837 . -1) (#("l" 0 1 (fontified t)) . -16030) (undo-tree-id6838 . -1) (#("_" 0 1 (fontified t)) . -16031) (undo-tree-id6839 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16032) (undo-tree-id6840 . -1) (#("s" 0 1 (fontified t)) . -16033) (undo-tree-id6841 . -1) (#("e" 0 1 (fontified t)) . -16034) (undo-tree-id6842 . -1) (#("l" 0 1 (fontified t)) . -16035) (undo-tree-id6843 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16036) (undo-tree-id6844 . -1) (#("." 0 1 (fontified t)) . -16037) (undo-tree-id6845 . -1) (#("J" 0 1 (fontified t)) . -16038) (undo-tree-id6846 . -1) (#("a" 0 1 (fontified t)) . -16039) (undo-tree-id6847 . -1) (#("0" 0 1 (fontified t)) . -16040) (undo-tree-id6848 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -16041) (undo-tree-id6849 . -1) (#("i" 0 1 (fontified t)) . -16042) (undo-tree-id6850 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . -16043) (undo-tree-id6851 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16044) (undo-tree-id6852 . -1) 16045) nil (25934 23648 487435 142000) 0 nil])
([nil nil ((16026 . 16029)) nil (25934 23648 487389 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16088 . 16089) (nil fontified nil 16086 . 16089) (nil fontified nil 16085 . 16086) (nil fontified nil 16082 . 16085) (nil fontified nil 16081 . 16082) (nil fontified nil 16080 . 16081) (nil fontified nil 16079 . 16080) (nil fontified nil 16078 . 16079) (nil fontified nil 16077 . 16078) (nil fontified nil 16076 . 16077) (nil fontified nil 16075 . 16076) (nil fontified nil 16072 . 16075) (nil fontified nil 16068 . 16072) (nil fontified nil 16067 . 16068) (nil fontified nil 16056 . 16067) (nil fontified nil 16055 . 16056) (nil fontified nil 16054 . 16055) (nil fontified nil 16053 . 16054) (nil fontified nil 16052 . 16053) (nil fontified nil 16051 . 16052) (nil fontified nil 16047 . 16051) (nil fontified nil 16043 . 16047) (nil fontified nil 16042 . 16043) (nil fontified nil 16041 . 16042) (nil fontified nil 16040 . 16041) (nil fontified nil 16039 . 16040) (nil fontified nil 16038 . 16039) (nil fontified nil 16037 . 16038) (nil fontified nil 16033 . 16037) (nil fontified nil 16029 . 16033) (16029 . 16089)) nil (25934 23648 487386 149000) 0 nil])
([nil nil ((apply -2 15847 16092 undo--wrap-and-run-primitive-undo 15847 16092 ((15867 . 15869) 15847))) nil (25934 23648 487374 855000) 0 nil])
([nil nil ((apply -4 16092 16198 undo--wrap-and-run-primitive-undo 16092 16198 ((16132 . 16134) (16108 . 16110) 16173))) nil (25934 23669 620253 201000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16193) (undo-tree-id6854 . -4) 16177) nil (25934 23669 620242 28000) 0 nil])
([nil nil ((#("                if i==0:
" 0 8 (fontified t) 8 15 (fontified t) 15 16 (fontified t) 16 18 (face font-lock-keyword-face fontified t) 18 20 (fontified t) 20 22 (face font-lock-operator-face fontified t) 22 25 (fontified t)) . -15822) (undo-tree-id7038 . -25) 15847 (t 25934 23669 723985 6000)) nil (25934 23729 418111 218000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15838) 15822) nil (25934 23729 418107 490000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15944) (undo-tree-id7037 . -3)) nil (25934 23729 418105 873000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -15849) (undo-tree-id7036 . -1) 15850) nil (25934 23729 418102 592000) 0 nil])
([nil nil ((15849 . 15850)) nil (25934 23729 418098 302000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -15852) (undo-tree-id7035 . -1) 15853) nil (25934 23729 418096 623000) 0 nil])
([nil nil ((15852 . 15853)) nil (25934 23729 418093 498000) 0 nil])
([nil nil ((#("                # self.Wab[0, 0].bias.data = self.Ja0[i] + self.ksi[0] * torch.sqrt(self.Ka[0]) * self.M0
" 0 2 (fontified t) 2 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-face fontified t) 22 26 (face font-lock-comment-face fontified t) 26 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-face fontified t) 31 32 (face font-lock-comment-face fontified t) 32 41 (face font-lock-comment-face fontified t) 41 43 (face font-lock-comment-face fontified t) 43 44 (face font-lock-comment-face fontified t) 44 45 (face font-lock-comment-face fontified t) 45 49 (face font-lock-comment-face fontified t) 49 53 (face font-lock-comment-face fontified t) 53 54 (face font-lock-comment-face fontified t) 54 55 (face font-lock-comment-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 63 (face font-lock-comment-face fontified t) 63 67 (face font-lock-comment-face fontified t) 67 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 83 (face font-lock-comment-face fontified t) 83 84 (face font-lock-comment-face fontified t) 84 88 (face font-lock-comment-face fontified t) 88 91 (face font-lock-comment-face fontified t) 91 92 (face font-lock-comment-face fontified t) 92 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 96 (face font-lock-comment-face fontified t) 96 97 (face font-lock-comment-face fontified t) 97 98 (face font-lock-comment-face fontified t) 98 101 (face font-lock-comment-face fontified t) 101 102 (face font-lock-comment-face fontified t) 102 106 (face font-lock-comment-face fontified t)) . 15822) (undo-tree-id7033 . -106) (undo-tree-id7034 . -106) 15928) nil (25934 23729 418091 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15798 . 15799) (nil fontified nil 15795 . 15799) (nil fontified nil 15794 . 15795) (nil fontified nil 15791 . 15794) (nil fontified nil 15790 . 15791) (nil fontified nil 15789 . 15790) (nil fontified nil 15788 . 15789) (nil fontified nil 15787 . 15788) (nil fontified nil 15786 . 15787) (nil fontified nil 15785 . 15786) (nil fontified nil 15784 . 15785) (nil fontified nil 15781 . 15784) (nil fontified nil 15777 . 15781) (nil fontified nil 15776 . 15777) (nil fontified nil 15765 . 15776) (nil fontified nil 15764 . 15765) (nil fontified nil 15763 . 15764) (nil fontified nil 15762 . 15763) (nil fontified nil 15761 . 15762) (nil fontified nil 15760 . 15761) (nil fontified nil 15756 . 15760) (nil fontified nil 15752 . 15756) (nil fontified nil 15751 . 15752) (nil fontified nil 15750 . 15751) (nil fontified nil 15749 . 15750) (nil fontified nil 15748 . 15749) (nil fontified nil 15747 . 15748) (nil fontified nil 15746 . 15747) (nil fontified nil 15742 . 15746) (nil fontified nil 15738 . 15742) (nil fontified nil 15737 . 15738) (nil fontified nil 15736 . 15737) (nil fontified nil 15734 . 15736) (nil fontified nil 15725 . 15734) (nil fontified nil 15724 . 15725) (nil fontified nil 15721 . 15724) (nil fontified nil 15719 . 15721) (nil fontified nil 15715 . 15719) (nil fontified nil 15711 . 15715) (nil fontified nil 15709 . 15711) (nil fontified nil 15701 . 15709) (nil fontified nil 15695 . 15701) (nil fontified nil 15693 . 15695) (15693 . 15799)) nil (25934 23729 418083 153000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15705) (undo-tree-id7032 . -4) 15709) nil (25934 23729 418066 97000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 15705)) nil (25934 23729 418063 155000) 0 nil])
([nil nil ((15694 . 15710) (#(" " 0 1 (fontified nil)) . 15694) (#("            " 0 2 (fontified nil) 2 8 (fontified nil) 8 12 (fontified nil)) . 15693) (undo-tree-id7031 . -12) (15705 . 15706)) nil (25934 23729 418061 242000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15706) (undo-tree-id7030 . -4) 15710) nil (25934 23729 418057 410000) 0 nil])
([nil nil ((apply -2 15694 15809 undo--wrap-and-run-primitive-undo 15694 15809 ((15706 . 15708) 15794))) nil (25934 23729 418054 53000) 0 nil])
([nil nil ((#("                self.Wab.bias.data[self.csumNa[i]:self.csumNa[i+1]] = self.Ja0[i] + self.ksi[0] * torch.sqrt(self.Ka[0]) * self.M0
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (fontified t) 50 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 63 (fontified t) 63 64 (face font-lock-operator-face fontified t) 64 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-2-face) fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 67 68 (fontified t) 68 69 (face font-lock-operator-face fontified t) 69 70 (fontified t) 70 74 (face font-lock-keyword-face fontified t) 74 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 84 (fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 94 (fontified t) 94 95 (face (rainbow-delimiters-depth-1-face) fontified t) 95 96 (fontified t) 96 97 (face font-lock-operator-face fontified t) 97 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-1-face) fontified t) 109 113 (face font-lock-keyword-face fontified t) 113 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-2-face) fontified t) 117 118 (fontified t) 118 119 (face (rainbow-delimiters-depth-2-face) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (fontified t) 121 122 (face font-lock-operator-face fontified t) 122 123 (fontified t) 123 126 (face font-lock-keyword-face fontified t) 126 127 (face font-lock-keyword-face fontified t) 127 129 (fontified t) 129 130 (fontified t rear-nonsticky t) 130 131 (fontified t rear-nonsticky t)) . 15925) (undo-tree-id7026 . -70) (undo-tree-id7027 . -16) (undo-tree-id7028 . -131) (undo-tree-id7029 . -131) 16056) nil (25934 23729 418052 214000) 0 nil])
([nil nil ((nil fontified nil 15926 . 15927) (nil fontified nil 15925 . 15926) (nil fontified nil 15923 . 15925) (nil fontified nil 15922 . 15923) (nil fontified nil 15919 . 15922) (nil fontified nil 15918 . 15919) (nil fontified nil 15917 . 15918) (nil fontified nil 15916 . 15917) (nil fontified nil 15915 . 15916) (nil fontified nil 15914 . 15915) (nil fontified nil 15913 . 15914) (nil fontified nil 15912 . 15913) (nil fontified nil 15909 . 15912) (nil fontified nil 15905 . 15909) (nil fontified nil 15904 . 15905) (nil fontified nil 15893 . 15904) (nil fontified nil 15892 . 15893) (nil fontified nil 15891 . 15892) (nil fontified nil 15890 . 15891) (nil fontified nil 15889 . 15890) (nil fontified nil 15888 . 15889) (nil fontified nil 15884 . 15888) (nil fontified nil 15880 . 15884) (nil fontified nil 15879 . 15880) (nil fontified nil 15878 . 15879) (nil fontified nil 15877 . 15878) (nil fontified nil 15876 . 15877) (nil fontified nil 15875 . 15876) (nil fontified nil 15874 . 15875) (nil fontified nil 15870 . 15874) (nil fontified nil 15866 . 15870) (nil fontified nil 15865 . 15866) (nil fontified nil 15864 . 15865) (nil fontified nil 15863 . 15864) (nil fontified nil 15862 . 15863) (nil fontified nil 15861 . 15862) (nil fontified nil 15860 . 15861) (nil fontified nil 15859 . 15860) (nil fontified nil 15858 . 15859) (nil fontified nil 15857 . 15858) (nil fontified nil 15850 . 15857) (nil fontified nil 15846 . 15850) (nil fontified nil 15845 . 15846) (nil fontified nil 15844 . 15845) (nil fontified nil 15843 . 15844) (nil fontified nil 15842 . 15843) (nil fontified nil 15835 . 15842) (nil fontified nil 15831 . 15835) (nil fontified nil 15830 . 15831) (nil fontified nil 15820 . 15830) (nil fontified nil 15816 . 15820) (nil fontified nil 15812 . 15816) (nil fontified nil 15796 . 15812) (15796 . 15927)) nil (25934 23729 418035 985000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15808) 15796) nil (25934 23729 418013 635000) 0 nil])
([nil nil ((#("                #     self.Wab[i, i].bias.data = self.Ja0[i]
" 0 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-delimiter-face fontified t) 22 26 (face font-lock-comment-face fontified t) 26 30 (face font-lock-comment-face fontified t) 30 31 (face font-lock-comment-face fontified t) 31 32 (face font-lock-comment-face fontified t) 32 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 36 (face font-lock-comment-face fontified t) 36 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 49 (face font-lock-comment-face fontified t) 49 53 (face font-lock-comment-face fontified t) 53 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 60 (face font-lock-comment-face fontified t) 60 61 (face font-lock-comment-face fontified t)) . -16076) (undo-tree-id7025 . -61) 16137) nil (25934 23729 418012 646000) 0 nil])
([nil nil ((#("                # else:
" 0 8 (fontified t) 8 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 22 (face font-lock-comment-face fontified t) 22 24 (face font-lock-comment-face fontified t)) . -16052) (undo-tree-id7023 . -24) (undo-tree-id7024 . -24) 16076) nil (25934 23729 418010 632000) 0 nil])
([nil nil ((apply -2 15936 16054 undo--wrap-and-run-primitive-undo 15936 16054 ((15948 . 15950) 15976))) nil (25934 23729 418007 715000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15990) 15978) nil (25934 23729 418006 722000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15871) (undo-tree-id7022 . -1) 15872) nil (25934 23729 418005 738000) 0 nil])
([nil nil ((15871 . 15872)) nil (25934 23729 418003 822000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15854) (undo-tree-id7021 . -1) 15855) nil (25934 23729 418003 67000) 0 nil])
([nil nil ((15854 . 15855)) nil (25934 23729 417999 346000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -15839) (undo-tree-id7020 . -1) 15840) nil (25934 23729 417998 536000) 0 nil])
([nil nil ((15839 . 15840)) nil (25934 23729 417996 231000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 15856)) nil (25934 23729 417995 121000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -15854) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -15855) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) 15856) nil (25934 23729 417987 279000) 0 nil])
([nil nil ((15854 . 15855)) nil (25934 23729 417735 803000) 0 nil])
([nil nil ((nil fontified nil 16311 . 16312) (nil fontified nil 16310 . 16311) (nil fontified nil 16308 . 16310) (nil fontified nil 16307 . 16308) (nil fontified nil 16304 . 16307) (nil fontified nil 16303 . 16304) (nil fontified nil 16302 . 16303) (nil fontified nil 16301 . 16302) (nil fontified nil 16300 . 16301) (nil fontified nil 16299 . 16300) (nil fontified nil 16298 . 16299) (nil fontified nil 16297 . 16298) (nil fontified nil 16294 . 16297) (nil fontified nil 16290 . 16294) (nil fontified nil 16289 . 16290) (nil fontified nil 16278 . 16289) (nil fontified nil 16277 . 16278) (nil fontified nil 16276 . 16277) (nil fontified nil 16275 . 16276) (nil fontified nil 16274 . 16275) (nil fontified nil 16273 . 16274) (nil fontified nil 16269 . 16273) (nil fontified nil 16265 . 16269) (nil fontified nil 16264 . 16265) (nil fontified nil 16263 . 16264) (nil fontified nil 16262 . 16263) (nil fontified nil 16261 . 16262) (nil fontified nil 16260 . 16261) (nil fontified nil 16259 . 16260) (nil fontified nil 16255 . 16259) (nil fontified nil 16251 . 16255) (nil fontified nil 16250 . 16251) (nil fontified nil 16249 . 16250) (nil fontified nil 16248 . 16249) (nil fontified nil 16247 . 16248) (nil fontified nil 16246 . 16247) (nil fontified nil 16245 . 16246) (nil fontified nil 16244 . 16245) (nil fontified nil 16237 . 16244) (nil fontified nil 16233 . 16237) (nil fontified nil 16232 . 16233) (nil fontified nil 16231 . 16232) (nil fontified nil 16230 . 16231) (nil fontified nil 16229 . 16230) (nil fontified nil 16222 . 16229) (nil fontified nil 16218 . 16222) (nil fontified nil 16217 . 16218) (nil fontified nil 16213 . 16217) (nil fontified nil 16207 . 16213) (nil fontified nil 16203 . 16207) (nil fontified nil 16199 . 16203) (nil fontified nil 16187 . 16199) (16187 . 16312) (t 25934 23729 498075 672000)) nil (25934 23740 292085 418000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16290) (undo-tree-id8137 . -1) (#("e" 0 1 (fontified t)) . -16291) (undo-tree-id8138 . -1) (#("l" 0 1 (fontified t)) . -16292) (undo-tree-id8139 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16293) (undo-tree-id8140 . -1) (#("." 0 1 (fontified t)) . -16294) (undo-tree-id8141 . -1) (#("K" 0 1 (fontified t)) . -16295) (undo-tree-id8142 . -1) (#("a" 0 1 (fontified t)) . -16296) (undo-tree-id8143 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -16297) (undo-tree-id8144 . -1) (#("0" 0 1 (fontified nil)) . -16298) (undo-tree-id8145 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -16299) (undo-tree-id8146 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16300) (undo-tree-id8147 . -1) (#(" " 0 1 (fontified nil)) . -16301) (undo-tree-id8148 . -1) (#("*" 0 1 (face font-lock-operator-face fontified nil)) . -16302) (undo-tree-id8149 . -1) (#(" " 0 1 (fontified nil)) . -16303) (undo-tree-id8150 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified nil)) . -16304) (undo-tree-id8151 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -16305) (undo-tree-id8152 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified nil)) . -16306) (undo-tree-id8153 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -16307) (undo-tree-id8154 . -1) (#("." 0 1 (fontified t)) . -16308) (undo-tree-id8155 . -1) (#("M" 0 1 (fontified t)) . -16309) (undo-tree-id8156 . -1) (#("0" 0 1 (fontified t rear-nonsticky t)) . -16310) (undo-tree-id8157 . -1) 16311) nil (25934 23740 292073 225000) 0 nil])
([nil nil ((#("." 0 1 (fontified nil)) . -16269) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (#("k" 0 1 (fontified nil)) . -16270) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (#("s" 0 1 (fontified nil)) . -16271) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (#("i" 0 1 (fontified nil)) . -16272) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16273) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (#("0" 0 1 (fontified t)) . -16274) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16275) (undo-tree-id8122 . -1) (#(" " 0 1 (fontified t)) . -16276) (undo-tree-id8123 . -1) (#("*" 0 1 (face font-lock-operator-face fontified t)) . -16277) (undo-tree-id8124 . -1) (#(" " 0 1 (fontified t)) . -16278) (undo-tree-id8125 . -1) (#("t" 0 1 (fontified t)) . -16279) (undo-tree-id8126 . -1) (#("o" 0 1 (fontified t)) . -16280) (undo-tree-id8127 . -1) (#("r" 0 1 (fontified t)) . -16281) (undo-tree-id8128 . -1) (#("c" 0 1 (fontified t)) . -16282) (undo-tree-id8129 . -1) (#("h" 0 1 (fontified t)) . -16283) (undo-tree-id8130 . -1) (#("." 0 1 (fontified t)) . -16284) (undo-tree-id8131 . -1) (#("s" 0 1 (fontified t)) . -16285) (undo-tree-id8132 . -1) (#("q" 0 1 (fontified t)) . -16286) (undo-tree-id8133 . -1) (#("r" 0 1 (fontified t)) . -16287) (undo-tree-id8134 . -1) (#("t" 0 1 (fontified t)) . -16288) (undo-tree-id8135 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16289) (undo-tree-id8136 . -1) 16290) nil (25934 23740 292043 345000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16262) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (#("+" 0 1 (face font-lock-operator-face fontified t)) . -16263) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (#(" " 0 1 (fontified t)) . -16264) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (#("s" 0 1 (fontified t)) . -16265) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (#("e" 0 1 (fontified t)) . -16266) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (#("l" 0 1 (fontified t)) . -16267) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified nil)) . -16268) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) 16269) nil (25934 23756 347535 584000) 0 nil])
([nil nil ((#("                self.Wab.bias.data[self.csumNa[i] : self.csumNa[i+1]].fill_(self.Ja0[i])
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (fontified t) 65 66 (face font-lock-operator-face fontified t) 66 67 (fontified t) 67 68 (face (rainbow-delimiters-depth-2-face) fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 69 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-1-face) fontified t) 76 80 (face font-lock-keyword-face fontified t) 80 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 89 (fontified t rear-nonsticky t)) . 16366) (undo-tree-id8291 . -89) (undo-tree-id8292 . -89) (t 25934 23740 349757 900000)) nil (25934 23771 877562 916000) 0 nil] [nil nil ((#("                self.Wab.bias.data[self.csumNa[i] : self.csumNa[i+1]].fill_(self.Ja0[i])
" 0 16 (fontified t) 16 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 52 (fontified t) 52 56 (face font-lock-keyword-face fontified t) 56 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (fontified t) 65 66 (face font-lock-operator-face fontified t) 66 67 (fontified t) 67 68 (face (rainbow-delimiters-depth-2-face) fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 69 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-1-face) fontified t) 76 80 (face font-lock-keyword-face fontified t) 80 84 (fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 86 (fontified t) 86 87 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 89 (fontified t rear-nonsticky t)) . 16366) (undo-tree-id8161 . -89) (undo-tree-id8162 . -89) 16455 (t 25934 23740 349757 900000)) ((16366 . 16455)) (25934 23755 895898 557000) 0 nil])
([nil nil ((apply 2 16304 16364 undo--wrap-and-run-primitive-undo 16304 16364 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -16320) 16366))) nil (25934 23771 877550 781000) 0 nil])
([nil nil ((nil fontified nil 16351 . 16352) (nil fontified nil 16350 . 16351) (nil fontified nil 16349 . 16350) (nil fontified nil 16348 . 16349) (nil fontified nil 16347 . 16348) (nil fontified nil 16343 . 16347) (nil fontified nil 16339 . 16343) (nil fontified nil 16338 . 16339) (nil fontified nil 16332 . 16338) (nil fontified nil 16331 . 16332) (nil fontified nil 16330 . 16331) (nil fontified nil 16329 . 16330) (nil fontified nil 16328 . 16329) (nil fontified nil 16327 . 16328) (nil fontified nil 16326 . 16327) (nil fontified nil 16319 . 16326) (nil fontified nil 16315 . 16319) (nil fontified nil 16312 . 16315) (nil fontified nil 16311 . 16312) (nil fontified nil 16310 . 16311) (nil fontified nil 16309 . 16310) (nil fontified nil 16302 . 16309) (nil fontified nil 16298 . 16302) (nil fontified nil 16297 . 16298) (nil fontified nil 16287 . 16297) (nil fontified nil 16283 . 16287) (nil fontified nil 16279 . 16283) (nil fontified nil 16263 . 16279) (16263 . 16352)) ((#("                self.Wab.bias.data[self.csumNa[i] : self.csumNa[i+1]].fill_(self.Ja0[i])
" 0 4 (fontified nil) 4 8 (fontified nil) 8 12 (fontified nil) 12 16 (fontified nil) 16 20 (face font-lock-keyword-face fontified nil) 20 24 (fontified nil) 24 34 (fontified nil) 34 35 (face (rainbow-delimiters-depth-1-face) fontified nil) 35 39 (face font-lock-keyword-face fontified nil) 39 46 (fontified nil) 46 47 (face (rainbow-delimiters-depth-2-face) fontified nil) 47 48 (fontified nil) 48 49 (face (rainbow-delimiters-depth-2-face) fontified nil) 49 52 (fontified nil) 52 56 (face font-lock-keyword-face fontified nil) 56 63 (fontified nil) 63 64 (face (rainbow-delimiters-depth-2-face) fontified nil) 64 65 (fontified nil) 65 66 (face font-lock-operator-face fontified nil) 66 67 (fontified nil) 67 68 (face (rainbow-delimiters-depth-2-face) fontified nil) 68 69 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky t) 69 75 (fontified nil) 75 76 (face (rainbow-delimiters-depth-1-face) fontified nil) 76 80 (face font-lock-keyword-face fontified nil) 80 84 (fontified nil) 84 85 (face (rainbow-delimiters-depth-2-face) fontified nil) 85 86 (fontified nil) 86 87 (face (rainbow-delimiters-depth-2-face) fontified nil rear-nonsticky t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified nil) 88 89 (fontified nil rear-nonsticky t)) . 16263) (undo-tree-id8163 . -89) (undo-tree-id8164 . -89) (undo-tree-id8165 . -4) (undo-tree-id8166 . -4) (undo-tree-id8167 . -4) (undo-tree-id8168 . -4) (undo-tree-id8169 . -4) (undo-tree-id8170 . -4) (undo-tree-id8171 . -4) (undo-tree-id8172 . -4) (undo-tree-id8173 . -4) (undo-tree-id8174 . -4) (undo-tree-id8175 . -4) (undo-tree-id8176 . -4) (undo-tree-id8177 . -4) (undo-tree-id8178 . -4) (undo-tree-id8179 . -4) (undo-tree-id8180 . -4) (undo-tree-id8181 . -4) (undo-tree-id8182 . -4) (undo-tree-id8183 . -4) (undo-tree-id8184 . -4) (undo-tree-id8185 . -4) (undo-tree-id8186 . -4) (undo-tree-id8187 . -4) (undo-tree-id8188 . -4) (undo-tree-id8189 . -4) (undo-tree-id8190 . -4) (undo-tree-id8191 . -4) (undo-tree-id8192 . -4) (undo-tree-id8193 . -4) (undo-tree-id8194 . -4) (undo-tree-id8195 . -4) (undo-tree-id8196 . -4) (undo-tree-id8197 . -4) (undo-tree-id8198 . -4) (undo-tree-id8199 . -4) (undo-tree-id8200 . -4) (undo-tree-id8201 . -4) (undo-tree-id8202 . -4) (undo-tree-id8203 . -4) (undo-tree-id8204 . -4) (undo-tree-id8205 . -8) (undo-tree-id8206 . -8) (undo-tree-id8207 . -8) (undo-tree-id8208 . -8) (undo-tree-id8209 . -8) (undo-tree-id8210 . -8) (undo-tree-id8211 . -8) (undo-tree-id8212 . -8) (undo-tree-id8213 . -8) (undo-tree-id8214 . -8) (undo-tree-id8215 . -8) (undo-tree-id8216 . -8) (undo-tree-id8217 . -8) (undo-tree-id8218 . -8) (undo-tree-id8219 . -8) (undo-tree-id8220 . -8) (undo-tree-id8221 . -8) (undo-tree-id8222 . -8) (undo-tree-id8223 . -8) (undo-tree-id8224 . -8) (undo-tree-id8225 . -8) (undo-tree-id8226 . -8) (undo-tree-id8227 . -8) (undo-tree-id8228 . -8) (undo-tree-id8229 . -8) (undo-tree-id8230 . -8) (undo-tree-id8231 . -8) (undo-tree-id8232 . -8) (undo-tree-id8233 . -8) (undo-tree-id8234 . -8) (undo-tree-id8235 . -8) (undo-tree-id8236 . -12) (undo-tree-id8237 . -12) (undo-tree-id8238 . -12) (undo-tree-id8239 . -12) (undo-tree-id8240 . -12) (undo-tree-id8241 . -12) (undo-tree-id8242 . -12) (undo-tree-id8243 . -12) (undo-tree-id8244 . -12) (undo-tree-id8245 . -12) (undo-tree-id8246 . -12) (undo-tree-id8247 . -12) (undo-tree-id8248 . -12) (undo-tree-id8249 . -12) (undo-tree-id8250 . -12) (undo-tree-id8251 . -12) (undo-tree-id8252 . -12) (undo-tree-id8253 . -12) (undo-tree-id8254 . -12) (undo-tree-id8255 . -12) (undo-tree-id8256 . -12) (undo-tree-id8257 . -12) (undo-tree-id8258 . -12) (undo-tree-id8259 . -12) (undo-tree-id8260 . -12) (undo-tree-id8261 . -12) (undo-tree-id8262 . -12) (undo-tree-id8263 . -12) (undo-tree-id8264 . -12) (undo-tree-id8265 . -12) (undo-tree-id8266 . -12) (undo-tree-id8267 . -12) (undo-tree-id8268 . -12) (undo-tree-id8269 . -12) (undo-tree-id8270 . -12) (undo-tree-id8271 . -12) (undo-tree-id8272 . -12) (undo-tree-id8273 . -12) (undo-tree-id8274 . -12) (undo-tree-id8275 . -12) (undo-tree-id8276 . -12) (undo-tree-id8277 . -12) (undo-tree-id8278 . -12) (undo-tree-id8279 . -12) (undo-tree-id8280 . -12) (undo-tree-id8281 . -12) (undo-tree-id8282 . -12) (undo-tree-id8283 . -12) (undo-tree-id8284 . -12) (undo-tree-id8285 . -12) (undo-tree-id8286 . -12) (undo-tree-id8287 . -12) (undo-tree-id8288 . -12) (undo-tree-id8289 . -12) (undo-tree-id8290 . -12) (nil fontified t 16351 . 16352)) (25934 23755 446679 349000) 0 nil])
([nil nil ((apply -4 16264 16385 undo--wrap-and-run-primitive-undo 16264 16385 ((16318 . 16320) (16276 . 16278) 16364))) nil (25934 23771 877544 803000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16275) 16263) ((16275 . 16279)) (25934 23754 865143 412000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16380) 16368 (t 25934 23771 948876 722000)) nil (25934 23775 815285 715000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16271) (undo-tree-id8160 . -4) 16275) ((16271 . 16275)) (25934 23754 444839 432000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16376) (undo-tree-id8293 . -4) 16380) nil (25934 23775 815280 133000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16267) (undo-tree-id8159 . -4) 16271) ((16267 . 16271)) (25934 23754 199908 921000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 14966) (t 25934 23775 888771 194000)) nil (25934 23895 475857 124000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16263) (undo-tree-id8158 . -4) 16267) ((16263 . 16267)) (25934 23754 170278 996000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 14983)) nil (25934 23895 475855 698000) 0 nil])
([nil nil ((16263 . 16275)) ((#("            " 0 12 (fontified t)) . 16263)) (25934 23754 169476 50000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 14983)) nil (25934 23895 475854 281000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 14984)) nil (25934 23895 475853 75000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14969) (undo-tree-id8319 . -1) 14970) nil (25934 23895 475851 626000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14967) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) 14968) nil (25934 23895 475844 428000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15216) (t 25934 23895 537942 526000)) nil (25934 23902 249368 406000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15216)) nil (25934 23902 249366 84000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15217)) nil (25934 23902 249364 294000) 0 nil])
([nil nil ((#("_pop" 0 4 (fontified t)) . 15195) (undo-tree-id8320 . -1) (undo-tree-id8321 . -2) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -4)) nil (25934 23902 249359 494000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15196)) nil (25934 23902 249303 869000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15197)) nil (25934 23902 249297 171000) 0 nil])
([nil nil ((11314 . 11322) (t 25934 23902 309800 812000)) nil (25934 24292 964605 95000) 0 nil])
([nil nil ((11315 . 11323) (#("        " 0 8 (fontified nil)) . 11314) (undo-tree-id8392 . -8) (11322 . 11323)) nil (25934 24292 964603 898000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 11328) (11327 . 11328) (11326 . 11328) (#("'" 0 1 (fontified nil)) . -11326) (11323 . 11327)) nil (25934 24292 964601 198000) 0 nil])
([nil nil ((11327 . 11334)) nil (25934 24292 964598 932000) 0 nil])
([nil nil ((11335 . 11336)) nil (25934 24292 964598 37000) 0 nil])
([nil nil ((11336 . 11357)) nil (25934 24292 964597 343000) 0 nil])
([nil nil ((11357 . 11370)) nil (25934 24292 964596 707000) 0 nil])
([nil nil ((11370 . 11380)) nil (25934 24292 964595 752000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11378) (undo-tree-id8390 . -1) (#("1" 0 1 (fontified t)) . -11379) (undo-tree-id8391 . -1) 11380) nil (25934 24292 964594 432000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -11377) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) 11378) nil (25934 24292 964590 640000) 0 nil])
([nil nil ((11377 . 11380)) nil (25934 24292 964563 554000) 0 nil])
([nil nil ((11380 . 11392) (#(" " 0 1 (fontified nil)) . 11379) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (11380 . 11381)) nil (25934 24292 964554 717000) 0 nil])
([nil nil ((11378 . 11379)) nil (25934 24292 964456 171000) 0 nil])
([nil nil ((11380 . 11382) (t 25934 24293 23418 181000)) nil (25934 24295 959439 840000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11391) (undo-tree-id8393 . -4) (undo-tree-id8394 . -4) (undo-tree-id8395 . -4) (undo-tree-id8396 . -4) (undo-tree-id8397 . -4) (undo-tree-id8398 . -4) (undo-tree-id8399 . -4) (undo-tree-id8400 . -4) (undo-tree-id8401 . -4) (undo-tree-id8402 . -4) (undo-tree-id8403 . -4) (undo-tree-id8404 . -4) (undo-tree-id8405 . -4) (undo-tree-id8406 . -4) (undo-tree-id8407 . -4) (undo-tree-id8408 . -4) (undo-tree-id8409 . -4) (undo-tree-id8410 . -4) (undo-tree-id8411 . -4) (undo-tree-id8412 . -4) (undo-tree-id8413 . -4) (undo-tree-id8414 . -4) (undo-tree-id8415 . -4) (undo-tree-id8416 . -4) (undo-tree-id8417 . -4) (undo-tree-id8418 . -4) (undo-tree-id8419 . -4) (undo-tree-id8420 . -4) (undo-tree-id8421 . -4) (undo-tree-id8422 . -4) (undo-tree-id8423 . -4) (undo-tree-id8424 . -4) (undo-tree-id8425 . -4) (undo-tree-id8426 . -4) (undo-tree-id8427 . -4) (undo-tree-id8428 . -4) (undo-tree-id8429 . -4) (undo-tree-id8430 . -4) (undo-tree-id8431 . -4) (undo-tree-id8432 . -4) (undo-tree-id8433 . -4) (undo-tree-id8434 . -4) (undo-tree-id8435 . -4) (undo-tree-id8436 . -4) (undo-tree-id8437 . -4) (undo-tree-id8438 . -4) (undo-tree-id8439 . -4) (undo-tree-id8440 . -4) (undo-tree-id8441 . -4) (undo-tree-id8442 . -4) (undo-tree-id8443 . -4) (undo-tree-id8444 . -4) (undo-tree-id8445 . -4) (undo-tree-id8446 . -4) (undo-tree-id8447 . -4) (undo-tree-id8448 . -4) (undo-tree-id8449 . -4) (undo-tree-id8450 . -4) (undo-tree-id8451 . -4) (undo-tree-id8452 . -4) (undo-tree-id8453 . -4) (undo-tree-id8454 . -4) (undo-tree-id8455 . -4) (undo-tree-id8456 . -4) (undo-tree-id8457 . -4) (undo-tree-id8458 . -4) 11395 (t 25934 24296 15377 440000)) nil (25934 24297 360062 910000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -11379) (undo-tree-id8470 . -1) (#("." 0 1 (fontified t)) . -11380) (undo-tree-id8471 . -1) (#("0" 0 1 (fontified t)) . -11381) (undo-tree-id8472 . -1) 11382 (t 25934 24297 411358 456000)) nil (25934 24401 291008 188000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 11388) (11387 . 11388) (11386 . 11388) (#("(" 0 1 (fontified nil)) . -11386) (11379 . 11387)) nil (25934 24401 290997 896000) 0 nil])
([nil nil ((11387 . 11389)) nil (25934 24401 290995 886000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -11388) (undo-tree-id8469 . -1) 11389) nil (25934 24401 290994 81000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11381) (undo-tree-id8461 . -1) (#("s" 0 1 (fontified t)) . -11382) (undo-tree-id8462 . -1) (#("q" 0 1 (fontified t)) . -11383) (undo-tree-id8463 . -1) (#("r" 0 1 (fontified t)) . -11384) (undo-tree-id8464 . -1) (#("t" 0 1 (fontified t)) . -11385) (undo-tree-id8465 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11386) (undo-tree-id8466 . -1) (#("N" 0 1 (fontified t)) . -11387) (undo-tree-id8467 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -11388) (undo-tree-id8468 . -1) 11389) nil (25934 24401 290981 950000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -11379) (undo-tree-id8459 . -1) (#("p" 0 1 (fontified t)) . -11380) (undo-tree-id8460 . -1) 11381) nil (25934 24401 290953 321000) 0 nil])
([nil nil ((11379 . 11382)) nil (25934 24401 290933 343000) 0 nil])
([nil nil ((8756 . 8772) (#("            " 0 12 (fontified nil)) . 8755) (undo-tree-id8494 . -12) (8767 . 8768) (t 25934 24401 373981 302000)) nil (25934 24495 636727 519000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8754) (undo-tree-id8493 . -1) 8755) nil (25934 24495 636725 568000) 0 nil])
([nil nil ((8754 . 8771)) nil (25934 24495 636724 296000) 0 nil])
([nil nil ((8755 . 8756)) nil (25934 24495 636723 567000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8768) (undo-tree-id8492 . -4) 8772) nil (25934 24495 636722 642000) 0 nil])
([nil nil ((8768 . 8775)) nil (25934 24495 636721 244000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -8771) (undo-tree-id8488 . -1) (#("l" 0 1 (fontified t)) . -8772) (undo-tree-id8489 . -1) (#("l" 0 1 (face font-lock-builtin-face fontified t)) . -8773) (undo-tree-id8490 . -1) (#(" " 0 1 (fontified t)) . -8774) (undo-tree-id8491 . -1) 8775) nil (25934 24495 636719 920000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 8773) (8772 . 8773) (8771 . 8773) (#("'" 0 1 (fontified nil)) . -8771) (8771 . 8772)) nil (25934 24495 636715 275000) 0 nil])
([nil nil ((8772 . 8779)) nil (25934 24495 636714 66000) 0 nil])
([nil nil ((8780 . 8786)) nil (25934 24495 636713 288000) 0 nil])
([nil nil ((8786 . 8787)) nil (25934 24495 636712 598000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -8786) (undo-tree-id8487 . -1) 8787) nil (25934 24495 636711 927000) 0 nil])
([nil nil ((8786 . 8802)) nil (25934 24495 636710 426000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8842 . 8843) (nil fontified nil 8842 . 8843) (nil fontified nil 8837 . 8842) (nil fontified nil 8835 . 8837) (nil fontified nil 8830 . 8835) (nil fontified nil 8829 . 8830) (nil fontified nil 8823 . 8829) (nil fontified nil 8819 . 8823) (8819 . 8843)) nil (25934 24495 636709 555000) 0 nil])
([nil nil ((8843 . 8844)) nil (25934 24495 636708 310000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8843) (undo-tree-id8486 . -1) 8844) nil (25934 24495 636707 324000) 0 nil])
([nil nil ((8843 . 8844)) nil (25934 24495 636705 863000) 0 nil])
([nil nil ((8844 . 8846)) nil (25934 24495 636705 176000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8869 . 8870) (nil fontified nil 8869 . 8870) (nil fontified nil 8864 . 8869) (nil fontified nil 8862 . 8864) (nil fontified nil 8857 . 8862) (nil fontified nil 8856 . 8857) (nil fontified nil 8850 . 8856) (nil fontified nil 8846 . 8850) (8846 . 8870)) nil (25934 24495 636704 433000) 0 nil])
([nil nil ((8870 . 8873)) nil (25934 24495 636703 254000) 0 nil])
([nil nil ((8873 . 8889) (#(" " 0 1 (fontified nil)) . 8872) (undo-tree-id8485 . -1) (8873 . 8874)) nil (25934 24495 636702 378000) 0 nil])
([nil nil ((8872 . 8880)) nil (25934 24495 636700 764000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -8873) (undo-tree-id8483 . -1) (#("p" 0 1 (fontified t)) . -8874) (undo-tree-id8484 . -1) 8875) nil (25934 24495 636699 814000) 0 nil])
([nil nil ((8873 . 8878)) nil (25934 24495 636697 91000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8885) (8884 . 8885) (8883 . 8885) (#("(" 0 1 (fontified nil)) . -8883) (8883 . 8884)) nil (25934 24495 636696 196000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8888) (8887 . 8888) (8886 . 8888) (#("[" 0 1 (fontified nil)) . -8886) (8884 . 8887)) nil (25934 24495 636694 775000) 0 nil])
([nil nil ((8887 . 8888)) nil (25934 24495 636693 514000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8864) (undo-tree-id8478 . -1) (#("_" 0 1 (fontified t)) . -8865) (undo-tree-id8479 . -1) (#("p" 0 1 (fontified t)) . -8866) (undo-tree-id8480 . -1) (#("o" 0 1 (fontified t)) . -8867) (undo-tree-id8481 . -1) (#("p" 0 1 (fontified t)) . -8868) (undo-tree-id8482 . -1) 8869) nil (25934 24495 636691 848000) 0 nil])
([nil nil ((8864 . 8865)) nil (25934 24495 636686 953000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8857) (undo-tree-id8473 . -1) (#("_" 0 1 (fontified t)) . -8858) (undo-tree-id8474 . -1) (#("p" 0 1 (fontified t)) . -8859) (undo-tree-id8475 . -1) (#("o" 0 1 (fontified t)) . -8860) (undo-tree-id8476 . -1) (#("p" 0 1 (fontified t)) . -8861) (undo-tree-id8477 . -1) 8862) nil (25934 24495 636684 820000) 0 nil])
([nil nil ((8857 . 8858)) nil (25934 24495 636671 615000) 0 nil])
([nil nil ((#("i_pop" 0 5 (face font-lock-variable-name-face fontified t)) . 8830)) nil (25934 24495 636670 921000) 0 nil])
([nil nil ((8830 . 8831)) nil (25934 24495 636670 357000) 0 nil])
([nil nil ((#("j_pop" 0 5 (fontified t)) . 8833)) nil (25934 24495 636669 178000) 0 nil])
([nil nil ((8833 . 8834)) nil (25934 24495 636664 276000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8857) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (#("o" 0 1 (fontified t)) . -8858) (undo-tree-id8503 . -1) (#("r" 0 1 (fontified t)) . -8859) (undo-tree-id8504 . -1) (#("c" 0 1 (fontified t)) . -8860) (undo-tree-id8505 . -1) 8861 (t 25934 24495 686676 183000)) nil (25934 24527 761378 898000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 8857)) nil (25934 24527 761353 245000) 0 nil])
([nil nil ((8857 . 8859)) nil (25934 24527 761347 224000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 8857) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (#("n" 0 1 (fontified t)) . 8857) (t 25934 24527 825261 903000)) nil (25934 24559 201558 30000) 0 nil])
([nil nil ((8857 . 8861)) nil (25934 24559 201547 120000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8860) (undo-tree-id8780 . -1) 8861) nil (25934 24559 201545 804000) 0 nil])
([nil nil ((8860 . 8863)) nil (25934 24559 201542 224000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8862) (undo-tree-id8779 . -1) 8863) nil (25934 24559 201540 971000) 0 nil])
([nil nil ((#("torch.sqrt(Na[0])" 0 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-2-face) fontified t) 14 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8857) (undo-tree-id8772 . -17) (undo-tree-id8773 . -17) (undo-tree-id8774 . -17) (undo-tree-id8775 . -17) (undo-tree-id8776 . -17) (undo-tree-id8777 . -17) (undo-tree-id8778 . -17)) nil (25934 24559 201537 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8915 . 8916) (nil fontified nil 8915 . 8916) (nil fontified nil 8914 . 8915) (nil fontified nil 8913 . 8914) (nil fontified nil 8912 . 8913) (nil fontified nil 8910 . 8912) (nil fontified nil 8909 . 8910) (nil fontified nil 8899 . 8909) (8899 . 8916)) nil (25934 24559 201526 720000) 0 nil])
([nil nil ((8916 . 8919)) nil (25934 24559 201524 371000) 0 nil])
([nil nil ((8985 . 9057) (#("                                                    " 0 52 (fontified t)) . 8985) (undo-tree-id8754 . -44) (undo-tree-id8755 . -44) (undo-tree-id8756 . -44) (undo-tree-id8757 . -44) (undo-tree-id8758 . -44) (undo-tree-id8759 . -44) (undo-tree-id8760 . -44) (undo-tree-id8761 . -44) (undo-tree-id8762 . -44) (undo-tree-id8763 . -44) (undo-tree-id8764 . -44) (undo-tree-id8765 . -44) (undo-tree-id8766 . -44) (undo-tree-id8767 . -44) (undo-tree-id8768 . -44) (undo-tree-id8769 . -44) (undo-tree-id8770 . -44) (undo-tree-id8771 . -44) 9029) nil (25934 24559 201521 948000) 0 nil])
([nil nil ((#("            if 'all2all' in self.CONNECTIVITY:
                self.KAPPA[0, 0] = self.KAPPA[0, 0] * 
" 0 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 24 (face font-lock-string-face fontified t) 24 25 (fontified t) 25 27 (face font-lock-keyword-face fontified t) 27 28 (fontified t) 28 32 (face font-lock-keyword-face fontified t) 32 46 (fontified t) 46 47 (fontified t) 47 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 68 (fontified t) 68 73 (face font-lock-variable-name-face fontified t) 73 74 (face (rainbow-delimiters-depth-1-face) fontified t) 74 75 (fontified t) 75 78 (fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 79 80 (fontified t) 80 81 (face font-lock-operator-face fontified t) 81 82 (fontified t) 82 86 (face font-lock-keyword-face fontified t) 86 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-1-face) fontified t) 93 94 (fontified t) 94 97 (fontified t) 97 98 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 98 99 (fontified t) 99 100 (face font-lock-operator-face fontified t) 100 101 (fontified t) 101 102 (fontified t)) . 8756) (undo-tree-id8674 . -102) (undo-tree-id8675 . -101) (undo-tree-id8676 . -63) (undo-tree-id8677 . -82) (undo-tree-id8678 . -101) (undo-tree-id8679 . -101) (undo-tree-id8680 . -101) (undo-tree-id8681 . -101) (undo-tree-id8682 . -101) (undo-tree-id8683 . -101) (undo-tree-id8684 . -101) (undo-tree-id8685 . -101) (undo-tree-id8686 . -101) (undo-tree-id8687 . -101) (undo-tree-id8688 . -101) (undo-tree-id8689 . -101) (undo-tree-id8690 . -102) (undo-tree-id8691 . -102) (undo-tree-id8692 . -102) (undo-tree-id8693 . -102) (undo-tree-id8694 . -102) (undo-tree-id8695 . -102) (undo-tree-id8696 . -102) (undo-tree-id8697 . -102) (undo-tree-id8698 . -102) (undo-tree-id8699 . -102) (undo-tree-id8700 . -102) (undo-tree-id8701 . -102) (undo-tree-id8702 . -102) (undo-tree-id8703 . -102) (undo-tree-id8704 . -102) (undo-tree-id8705 . -102) (undo-tree-id8706 . -102) (undo-tree-id8707 . -102) (undo-tree-id8708 . -102) (undo-tree-id8709 . -102) (undo-tree-id8710 . -102) (undo-tree-id8711 . -102) (undo-tree-id8712 . -102) (undo-tree-id8713 . -102) (undo-tree-id8714 . -102) (undo-tree-id8715 . -102) (undo-tree-id8716 . -102) (undo-tree-id8717 . -102) (undo-tree-id8718 . -102) (undo-tree-id8719 . -102) (undo-tree-id8720 . -102) (undo-tree-id8721 . -102) (undo-tree-id8722 . -102) (undo-tree-id8723 . -102) (undo-tree-id8724 . -102) (undo-tree-id8725 . -102) (undo-tree-id8726 . -102) (undo-tree-id8727 . -47) (undo-tree-id8728 . -102) (undo-tree-id8729 . -47) (undo-tree-id8730 . -47) (undo-tree-id8731 . -47) (undo-tree-id8732 . -47) (undo-tree-id8733 . -47) (undo-tree-id8734 . -47) (undo-tree-id8735 . -47) (undo-tree-id8736 . -47) (undo-tree-id8737 . -47) (undo-tree-id8738 . -47) (undo-tree-id8739 . -47) (undo-tree-id8740 . -47) (undo-tree-id8741 . -47) (undo-tree-id8742 . -47) (undo-tree-id8743 . -47) (undo-tree-id8744 . -47) (undo-tree-id8745 . -47) (undo-tree-id8746 . -47) (undo-tree-id8747 . -47) (undo-tree-id8748 . -47) (undo-tree-id8749 . -47) (undo-tree-id8750 . -47) (undo-tree-id8751 . -47) (undo-tree-id8752 . -47) (undo-tree-id8753 . -101)) nil (25934 24559 201485 616000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8755) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) 8756) nil (25934 24559 201211 911000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8767) (undo-tree-id8788 . -4) (undo-tree-id8789 . -4) (undo-tree-id8790 . -4) (undo-tree-id8791 . -4) (undo-tree-id8792 . -4) (undo-tree-id8793 . -4) (undo-tree-id8794 . -4) (undo-tree-id8795 . -4) (undo-tree-id8796 . -4) (undo-tree-id8797 . -4) (undo-tree-id8798 . -4) (undo-tree-id8799 . -4) (undo-tree-id8800 . -4) (undo-tree-id8801 . -4) (undo-tree-id8802 . -4) (undo-tree-id8803 . -4) (undo-tree-id8804 . -4) (undo-tree-id8805 . -4) (undo-tree-id8806 . -4) (undo-tree-id8807 . -4) (undo-tree-id8808 . -4) (undo-tree-id8809 . -4) (undo-tree-id8810 . -4) (undo-tree-id8811 . -4) (undo-tree-id8812 . -4) (undo-tree-id8813 . -4) (undo-tree-id8814 . -4) (undo-tree-id8815 . -4) (undo-tree-id8816 . -4) (undo-tree-id8817 . -4) (undo-tree-id8818 . -4) (undo-tree-id8819 . -4) (undo-tree-id8820 . -4) (undo-tree-id8821 . -4) (undo-tree-id8822 . -4) (undo-tree-id8823 . -4) (undo-tree-id8824 . -4) (undo-tree-id8825 . -4) (undo-tree-id8826 . -4) (undo-tree-id8827 . -4) (undo-tree-id8828 . -4) (undo-tree-id8829 . -4) (undo-tree-id8830 . -4) (undo-tree-id8831 . -4) (undo-tree-id8832 . -4) (undo-tree-id8833 . -4) (undo-tree-id8834 . -4) (undo-tree-id8835 . -4) (undo-tree-id8836 . -4) (undo-tree-id8837 . -4) (undo-tree-id8838 . -4) (undo-tree-id8839 . -4) 8771 (t 25934 24559 295930 639000)) nil (25934 24560 252445 36000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8792) (#("*" 0 1 (face font-lock-operator-face fontified t)) . 8792) (#(" " 0 1 (fontified t)) . 8792) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t rear-nonsticky t)) . 8792) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 8792) (#("0" 0 1 (fontified t)) . 8792) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8792) (#("a" 0 1 (fontified t)) . 8792) (#("N" 0 1 (fontified t)) . 8792) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8792) (#("t" 0 1 (fontified t)) . 8792) (#("r" 0 1 (fontified t)) . 8792) (#("q" 0 1 (fontified t)) . 8792) (#("s" 0 1 (fontified t)) . 8792) (#("." 0 1 (fontified t)) . 8792) (#("h" 0 1 (fontified t)) . 8792) (#("c" 0 1 (fontified t)) . 8792) (#("r" 0 1 (fontified t)) . 8792) (#("o" 0 1 (fontified t)) . 8792) (#("t" 0 1 (fontified t)) . 8792) (t 25934 24560 355886 686000)) nil (25934 24580 101554 543000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . -8910) 8882) nil (25934 24580 101546 146000) 0 nil])
([nil nil ((apply -4 8980 9051 undo--wrap-and-run-primitive-undo 8980 9051 ((9021 . 9023) (8992 . 8994) 9034))) nil (25934 24633 894032 530000) 0 nil])
([nil nil ((15852 . 15865) (t 25934 24633 952966 533000)) nil (25934 24855 955670 553000) 0 nil])
([nil nil ((15865 . 15871)) nil (25934 24855 955668 861000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -15869) (undo-tree-id8868 . -1) (#("e" 0 1 (fontified t)) . -15870) (undo-tree-id8869 . -1) 15871) nil (25934 24855 955667 92000) 0 nil])
([nil nil ((15869 . 15876)) nil (25934 24855 955658 728000) 0 nil])
([nil nil ((15876 . 15877)) nil (25934 24855 955657 373000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -15876) (undo-tree-id8867 . -1) 15877) nil (25934 24855 955655 723000) 0 nil])
([nil nil ((15876 . 15883)) nil (25934 24855 955652 117000) 0 nil])
([nil nil ((15884 . 15900) (#("            " 0 12 (fontified t)) . 15884) (undo-tree-id8865 . -9) (undo-tree-id8866 . -9)) nil (25934 24855 955650 300000) 0 nil])
([nil nil ((nil fontified nil 16043 . 16044) (nil fontified nil 16040 . 16043) (nil fontified nil 16038 . 16040) (nil fontified nil 16032 . 16038) (nil fontified nil 16028 . 16032) (nil fontified nil 16027 . 16028) (nil fontified nil 16025 . 16027) (nil fontified nil 16013 . 16025) (16013 . 16044)) nil (25934 24855 955644 666000) 0 nil])
([nil nil ((16041 . 16043)) nil (25934 24855 955642 1000) 0 nil])
([nil nil ((nil fontified nil 16174 . 16175) (nil fontified nil 16173 . 16174) (nil fontified nil 16171 . 16173) (nil fontified nil 16170 . 16171) (nil fontified nil 16167 . 16170) (nil fontified nil 16166 . 16167) (nil fontified nil 16165 . 16166) (nil fontified nil 16164 . 16165) (nil fontified nil 16163 . 16164) (nil fontified nil 16162 . 16163) (nil fontified nil 16161 . 16162) (nil fontified nil 16160 . 16161) (nil fontified nil 16157 . 16160) (nil fontified nil 16153 . 16157) (nil fontified nil 16152 . 16153) (nil fontified nil 16141 . 16152) (nil fontified nil 16140 . 16141) (nil fontified nil 16139 . 16140) (nil fontified nil 16138 . 16139) (nil fontified nil 16137 . 16138) (nil fontified nil 16136 . 16137) (nil fontified nil 16132 . 16136) (nil fontified nil 16128 . 16132) (nil fontified nil 16127 . 16128) (nil fontified nil 16126 . 16127) (nil fontified nil 16125 . 16126) (nil fontified nil 16124 . 16125) (nil fontified nil 16123 . 16124) (nil fontified nil 16122 . 16123) (nil fontified nil 16118 . 16122) (nil fontified nil 16114 . 16118) (nil fontified nil 16113 . 16114) (nil fontified nil 16112 . 16113) (nil fontified nil 16111 . 16112) (nil fontified nil 16110 . 16111) (nil fontified nil 16109 . 16110) (nil fontified nil 16108 . 16109) (nil fontified nil 16107 . 16108) (nil fontified nil 16100 . 16107) (nil fontified nil 16096 . 16100) (nil fontified nil 16095 . 16096) (nil fontified nil 16094 . 16095) (nil fontified nil 16093 . 16094) (nil fontified nil 16092 . 16093) (nil fontified nil 16085 . 16092) (nil fontified nil 16081 . 16085) (nil fontified nil 16080 . 16081) (nil fontified nil 16076 . 16080) (nil fontified nil 16070 . 16076) (nil fontified nil 16066 . 16070) (nil fontified nil 16062 . 16066) (nil fontified nil 16046 . 16062) (16046 . 16175)) nil (25934 24855 955638 262000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -16137) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) 16138) nil (25934 24855 955623 312000) 0 nil])
([nil nil ((16137 . 16138)) nil (25934 24855 955487 396000) 0 nil])
([nil nil ((16174 . 16175) (t 25934 24856 57460 128000)) nil (25934 28132 864926 426000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -16174) (undo-tree-id8870 . -1) 16175) nil (25934 28132 864920 125000) 0 nil])
([nil nil ((16174 . 16178) (t 25934 28132 951843 910000)) nil (25934 28137 151933 823000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -16174) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (#("e" 0 1 (fontified t)) . -16175) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (#("d" 0 1 (fontified t)) . -16176) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (#("g" 0 1 (fontified t)) . -16177) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) 16178 (t 25934 28137 263768 819000)) nil (25934 28149 318134 838000) 0 nil])
([nil nil ((16174 . 16175) (t 25934 28149 391557 937000)) nil (25934 28183 337122 524000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -16174) (undo-tree-id8893 . -1) 16175) nil (25934 28183 337109 620000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14578) (undo-tree-id8894 . -1) (#(" " 0 1 (fontified t)) . -14579) (undo-tree-id8895 . -1) (#(" " 0 1 (fontified t)) . -14580) (undo-tree-id8896 . -1) (#(" " 0 1 (fontified t)) . -14581) (undo-tree-id8897 . -1) (#(" " 0 1 (fontified t)) . -14582) (undo-tree-id8898 . -1) (#(" " 0 1 (fontified t)) . -14583) (undo-tree-id8899 . -1) (#(" " 0 1 (fontified t)) . -14584) (undo-tree-id8900 . -1) (#(" " 0 1 (fontified t)) . -14585) (undo-tree-id8901 . -1) 14586 (t 25934 28183 522966 921000)) nil (25934 32706 169775 844000) 0 nil])
([nil nil ((8754 . 8771) (t 25934 32664 538105 732000)) nil (25934 32775 414512 435000) 0 nil] [nil nil ((14718 . 14719) (t 25934 32664 538105 732000)) ((#("
" 0 1 (fontified t)) . 14718)) (25934 32706 168799 806000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 8778) (8777 . 8778) (8776 . 8778) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -8776) (8771 . 8777)) nil (25934 32775 414510 933000) 0 nil])
nil
([nil nil ((8777 . 8778)) nil (25934 32775 414509 686000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -8777) (undo-tree-id8947 . -1) 8778) nil (25934 32775 414508 959000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 8779) (8778 . 8779) (8777 . 8779) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8777) (8777 . 8778)) nil (25934 32775 414506 588000) 0 nil])
([nil nil ((8778 . 8779)) nil (25934 32775 414505 511000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -8778) (undo-tree-id8946 . -1) 8779) nil (25934 32775 414504 719000) 0 nil])
([nil nil ((8778 . 8783)) nil (25934 32775 414503 245000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -8782) (undo-tree-id8945 . -1) 8783) nil (25934 32775 414502 376000) 0 nil])
([nil nil ((8782 . 8788)) nil (25934 32775 414500 633000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . -8787) (undo-tree-id8944 . -1) 8788) nil (25934 32775 414499 898000) 0 nil])
([nil nil ((8787 . 8788)) nil (25934 32775 414498 597000) 0 nil])
([nil nil ((8789 . 8791)) nil (25934 32775 414497 494000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8801) (8800 . 8801) (8799 . 8801) (#("[" 0 1 (fontified nil)) . -8799) (8791 . 8800)) nil (25934 32775 414496 635000) 0 nil])
([nil nil ((8800 . 8801)) nil (25934 32775 414495 623000) 0 nil])
([nil nil ((8802 . 8805)) nil (25934 32775 414494 963000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id8942 . -1) (#(" " 0 1 (fontified t)) . -8804) (undo-tree-id8943 . -1) 8805) nil (25934 32775 414493 741000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32775 414491 651000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id8941 . -1) 8804) nil (25934 32775 414490 825000) 0 nil])
([nil nil ((8803 . 8810)) nil (25934 32775 414489 282000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 8815) (8814 . 8815) (8813 . 8815) (#("[" 0 1 (fontified nil)) . -8813) (8810 . 8814)) nil (25934 32775 414488 293000) 0 nil])
([nil nil ((8814 . 8815)) nil (25934 32775 414487 158000) 0 nil])
([nil nil ((8816 . 8817)) nil (25934 32775 414486 423000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8816) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) 8817) nil (25934 32775 414481 993000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -8803) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) 8804 (t 25934 32775 466740 578000)) nil (25934 32802 451394 823000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32802 451341 746000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) 8804 (t 25934 32802 516670 917000)) nil (25934 32822 887301 365000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887293 465000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id9006 . -1) 8804) nil (25934 32822 887292 459000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887290 870000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id9005 . -1) 8804) nil (25934 32822 887290 56000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887288 362000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id9004 . -1) 8804) nil (25934 32822 887287 577000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887286 91000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id9003 . -1) 8804) nil (25934 32822 887285 210000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887283 480000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -8803) (undo-tree-id9002 . -1) 8804) nil (25934 32822 887282 442000) 0 nil])
([nil nil ((8803 . 8804)) nil (25934 32822 887280 766000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-operator-face fontified t)) . -8803) (undo-tree-id9001 . -1) 8804) nil (25934 32822 887279 621000) 0 nil])
([nil nil ((8803 . 8806)) nil (25934 32822 887277 854000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8802) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (#("→" 0 1 (fontified t)) . -8803) (undo-tree-id8998 . -1) (#("^" 0 1 (face font-lock-operator-face fontified t)) . -8804) (undo-tree-id8999 . -1) (#("^" 0 1 (face font-lock-operator-face fontified t)) . -8805) (undo-tree-id9000 . -1) 8806) nil (25934 32822 887275 57000) 0 nil])
([nil nil ((8802 . 8805)) nil (25934 32822 887261 48000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -8803) (undo-tree-id8988 . -1) (#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -8804) (undo-tree-id8989 . -1) 8805) nil (25934 32822 887259 165000) 0 nil])
([nil nil ((8803 . 8805)) nil (25934 32822 887254 930000) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-operator-face fontified t)) . -8804) (undo-tree-id8987 . -1) 8805) nil (25934 32822 887250 337000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8880 . 8881) (nil fontified nil 8880 . 8881) (nil fontified nil 8879 . 8880) (nil fontified nil 8878 . 8879) (nil fontified nil 8877 . 8878) (nil fontified nil 8876 . 8877) (nil fontified nil 8872 . 8876) (nil fontified nil 8868 . 8872) (nil fontified nil 8867 . 8868) (nil fontified nil 8865 . 8867) (nil fontified nil 8864 . 8865) (nil fontified nil 8863 . 8864) (nil fontified nil 8862 . 8863) (nil fontified nil 8858 . 8862) (nil fontified nil 8854 . 8858) (nil fontified nil 8852 . 8854) (nil fontified nil 8840 . 8852) (nil fontified nil 8839 . 8840) (nil fontified nil 8834 . 8839) (nil fontified nil 8818 . 8834) (8818 . 8881) (t 25934 32822 950088 52000)) nil (25934 32923 519826 208000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -8866) (undo-tree-id9018 . -1) 8867) nil (25934 32923 519819 289000) 0 nil])
([nil nil ((8854 . 8855)) nil (25934 32923 519811 825000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -8854) (undo-tree-id9017 . -1) 8855) nil (25934 32923 519806 953000) 0 nil])
([nil nil ((8863 . 8865) (#("(" 0 1 (fontified nil)) . -8863) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (8854 . 8864)) nil (25934 32923 519793 948000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 8864)) nil (25934 32923 519745 215000) 0 nil])
([nil nil ((8889 . 8890)) nil (25934 32923 519733 799000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8875) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (#(" " 0 1 (fontified t)) . -8876) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) 8877 (t 25934 32923 608600 561000)) nil (25934 32926 388125 658000) 0 nil])
([nil nil ((8875 . 8877)) nil (25934 32926 387870 905000) 0 nil])
([nil nil ((apply -2 8818 8906 undo--wrap-and-run-primitive-undo 8818 8906 ((8834 . 8836) 8891))) nil (25934 32935 475744 636000) 0 nil])
([nil nil ((8893 . 8909) (#("            " 0 12 (fontified t)) . 8893) (undo-tree-id9135 . -12) (undo-tree-id9136 . -12) (undo-tree-id9137 . -12) (undo-tree-id9138 . -12)) nil (25934 32935 475737 376000) 0 nil])
([nil nil ((#("                # print('ksi . ksi1', torch.dot(self.ksi[0], self.ksi[1]))
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 36 (face font-lock-comment-face fontified t) 36 47 (face font-lock-comment-face fontified t) 47 48 (face font-lock-comment-face fontified t) 48 52 (face font-lock-comment-face fontified t) 52 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 61 (face font-lock-comment-face fontified t) 61 65 (face font-lock-comment-face fontified t) 65 69 (face font-lock-comment-face fontified t) 69 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face rear-nonsticky t fontified t)) . -8818) (undo-tree-id9139 . -75) (undo-tree-id9140 . -75) (undo-tree-id9141 . -75) (undo-tree-id9142 . -61) (undo-tree-id9143 . -61) (undo-tree-id9144 . -61) (undo-tree-id9145 . -61) (undo-tree-id9146 . -61) (undo-tree-id9147 . -75) (undo-tree-id9148 . -75) (undo-tree-id9149 . -75) (undo-tree-id9150 . -75) (undo-tree-id9151 . -75) (undo-tree-id9152 . -75) (undo-tree-id9153 . -75) (undo-tree-id9154 . -75) (undo-tree-id9155 . -75) (undo-tree-id9156 . -75) (undo-tree-id9157 . -75) (undo-tree-id9158 . -75) (undo-tree-id9159 . -75) (undo-tree-id9160 . -75) (undo-tree-id9161 . -75) (undo-tree-id9162 . -75) (undo-tree-id9163 . -75) (undo-tree-id9164 . -75) (undo-tree-id9165 . -75) (undo-tree-id9166 . -75) (undo-tree-id9167 . -75) (undo-tree-id9168 . -75) (undo-tree-id9169 . -61) (undo-tree-id9170 . -75) (undo-tree-id9171 . -75) (undo-tree-id9172 . -75) (undo-tree-id9173 . -75) (undo-tree-id9174 . -75) (undo-tree-id9175 . -75) 8893 (t 25934 32935 581327 648000)) nil (25934 32937 899381 916000) 0 nil])
([nil nil ((8525 . 8537) (#("            " 0 12 (fontified nil)) . 8524) (undo-tree-id9179 . -12) (undo-tree-id9180 . -12) (undo-tree-id9181 . -12) (undo-tree-id9182 . -12) (undo-tree-id9183 . -12) (undo-tree-id9184 . -12) (undo-tree-id9185 . -12) (undo-tree-id9186 . -12) (undo-tree-id9187 . -12) (8536 . 8537) (t 25934 32937 953470 600000)) nil (25934 32984 476951 187000) 0 nil])
([nil nil ((8525 . 8526)) nil (25934 32984 476930 709000) 0 nil])
([nil nil ((8538 . 8544)) nil (25934 32984 476929 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8568 . 8569) (nil fontified nil 8568 . 8569) (nil fontified nil 8567 . 8568) (nil fontified nil 8566 . 8567) (nil fontified nil 8562 . 8566) (nil fontified nil 8558 . 8562) (nil fontified nil 8557 . 8558) (nil fontified nil 8555 . 8557) (nil fontified nil 8554 . 8555) (nil fontified nil 8553 . 8554) (nil fontified nil 8552 . 8553) (nil fontified nil 8548 . 8552) (nil fontified nil 8544 . 8548) (8544 . 8569)) nil (25934 32984 476925 997000) 0 nil])
([nil nil ((8569 . 8572)) nil (25934 32984 476920 429000) 0 nil])
([nil nil ((8571 . 8573)) nil (25934 32984 476919 529000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -8572) (undo-tree-id9178 . -1) 8573) nil (25934 32984 476918 580000) 0 nil])
([nil nil ((8572 . 8573)) nil (25934 32984 476916 297000) 0 nil])
([nil nil ((8574 . 8575)) nil (25934 32984 476915 537000) 0 nil])
([nil nil ((8575 . 8576)) nil (25934 32984 476914 764000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -8575) (undo-tree-id9177 . -1) 8576) nil (25934 32984 476913 563000) 0 nil])
([nil nil ((8575 . 8576)) nil (25934 32984 476909 672000) 0 nil])
([nil nil ((8577 . 8593) (#("            " 0 12 (fontified t)) . 8577)) nil (25934 32984 476908 317000) 0 nil])
([nil nil ((8665 . 8681) (#("            " 0 12 (fontified t)) . 8665)) nil (25934 32984 476906 158000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8651) (undo-tree-id9176 . -1) 8652) nil (25934 32984 476903 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8675 . 8676) (nil fontified nil 8673 . 8676) (nil fontified nil 8672 . 8673) (nil fontified nil 8671 . 8672) (nil fontified nil 8668 . 8671) (nil fontified nil 8667 . 8668) (nil fontified nil 8666 . 8667) (nil fontified nil 8639 . 8666) (nil fontified nil 8638 . 8639) (nil fontified nil 8637 . 8638) (nil fontified nil 8634 . 8637) (nil fontified nil 8633 . 8634) (nil fontified nil 8629 . 8633) (nil fontified nil 8613 . 8629) (nil fontified nil 8600 . 8613) (nil fontified nil 8599 . 8600) (nil fontified nil 8583 . 8599) (nil fontified nil 8582 . 8583) (nil fontified nil 8563 . 8582) (nil fontified nil 8562 . 8563) (nil fontified nil 8561 . 8562) (nil fontified nil 8542 . 8561) (nil fontified nil 8526 . 8542) (8526 . 8676)) nil (25934 32984 476887 526000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8538) 8526) nil (25934 32984 476877 87000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8621)) nil (25934 32984 476874 143000) 0 nil])
([nil nil ((8667 . 8680)) nil (25934 32984 476867 937000) 0 nil])
([nil nil ((8699 . 8702) (t 25934 32984 548206 756000)) nil (25934 33003 450124 860000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -8700) (undo-tree-id9188 . -1) (#("o" 0 1 (fontified t)) . -8701) (undo-tree-id9189 . -1) 8702) nil (25934 33003 450121 784000) 0 nil])
([nil nil ((8708 . 8710) (#("(" 0 1 (fontified nil)) . -8708) (8700 . 8709)) nil (25934 33003 450098 801000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8709)) nil (25934 33003 450095 212000) 0 nil])
([nil nil ((8734 . 8735)) nil (25934 33003 450084 989000) 0 nil])
([nil nil ((#("." 0 1 (fontified nil)) . 8740) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (8739 . 8740) (#("1" 0 1 (fontified nil)) . 8738) (8739 . 8740) (t 25934 33003 549285 105000)) nil (25934 33037 363072 89000) 0 nil])
([nil nil ((8668 . 8669) (t 25934 60819 320927 366000)) nil (25934 61482 652762 797000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8668) (undo-tree-id0 . -1) 8669) nil (25934 61482 652760 614000) 0 nil])
([nil nil ((apply -6 8681 8900 undo--wrap-and-run-primitive-undo 8681 8900 ((8846 . 8848) (8757 . 8759) (8693 . 8695) 8893))) nil (25934 61482 652739 814000) 0 nil])
([nil nil ((8899 . 8911)) nil (25934 61482 652735 414000) 0 nil])
([nil nil ((12109 . 12109) (12109 . 12110) (12105 . 12105) (12105 . 12109) (t 25934 61482 800948 479000)) nil (25934 61918 259811 922000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -12109) (undo-tree-id13 . -1) 12110) nil (25934 61918 259810 1000) 0 nil])
([nil nil ((12121 . 12121) (12121 . 12122) (12120 . 12120) (12120 . 12121) (12119 . 12119) (12119 . 12120) (12118 . 12118) (12118 . 12119) (12117 . 12117) (12117 . 12118) (12116 . 12116) (12116 . 12117) (12115 . 12115) (12115 . 12116) (12113 . 12113) (12113 . 12115) (12111 . 12111) (12111 . 12113) (12110 . 12110) (12110 . 12111) (12109 . 12109) (12109 . 12110)) nil (25934 61918 259807 117000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -12121) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 12122) nil (25934 61918 259800 14000) 0 nil])
([nil nil ((12123 . 12123) (12123 . 12125) (12122 . 12122) (12122 . 12123) (12121 . 12121) (12121 . 12122)) nil (25934 61918 259774 90000) 0 nil])
([nil nil ((8422 . 8422) (8422 . 8423) (8421 . 8421) (8421 . 8422) (8420 . 8420) (8420 . 8421) (8419 . 8419) (8419 . 8420) (8418 . 8418) (8418 . 8419) (8417 . 8417) (8417 . 8418) (8416 . 8416) (8416 . 8417) (8415 . 8415) (8415 . 8416) (8413 . 8413) (8413 . 8415) (8409 . 8409) (8409 . 8413) (t 25934 61918 324962 339000)) nil (25934 62020 136568 540000) 0 nil])
([nil nil ((8495 . 8497)) nil (25934 62020 136562 622000) 0 nil])
([nil nil ((8508 . 8508) (8508 . 8509) (8506 . 8506) (8506 . 8508) (8505 . 8505) (8505 . 8506) (8504 . 8504) (8504 . 8505) (8503 . 8503) (8503 . 8504) (8502 . 8502) (8502 . 8503) (8501 . 8501) (8501 . 8502) (8499 . 8499) (8499 . 8501) (8497 . 8497) (8497 . 8499)) nil (25934 62020 136557 483000) 0 nil])
([nil nil ((#("V" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8409) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8409) (#("C" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8409) (#("_" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8409) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 8409) (#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 8409) (#("." 0 1 (fontified nil)) . 8409) (undo-tree-id0 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 8409) (#(" " 0 1 (fontified nil)) . 8409) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 8409) (#(" " 0 1 (fontified t)) . 8409) (t 25934 62020 200965 581000)) nil (25940 12879 939758 37000) 0 nil])
([nil nil ((#("V" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("C" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("_" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8481) (#("R" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . 8481) (#("L" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8481) (#("." 0 1 (fontified t)) . 8481) (#("f" 0 1 (fontified t)) . 8481) (#("l" 0 1 (face tree-sitter-hl-face:number fontified t)) . 8481) (#("e" 0 1 (fontified t)) . 8481) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 8481) (#(" " 0 1 (fontified t)) . 8481) (#("-" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 8481) (#(" " 0 1 (fontified t)) . 8481)) nil (25940 12879 939729 977000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8596) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t)) . -8597) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -8598) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -8599) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -8600) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -8601) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -8602) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t)) . -8603) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -8604) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t)) . -8605) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -8606) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t)) . -8607) (undo-tree-id12 . -1) 8608 (t 25940 12880 3914 831000)) nil (25940 13127 599497 773000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9079 . 9080) (nil fontified nil 9078 . 9080) (nil fontified nil 9066 . 9078) (nil fontified nil 9065 . 9066) (nil fontified nil 9061 . 9065) (nil fontified nil 9060 . 9061) (nil fontified nil 9058 . 9060) (nil fontified nil 9057 . 9058) (nil fontified nil 9056 . 9057) (nil fontified nil 9049 . 9056) (nil fontified nil 9048 . 9049) (nil fontified nil 9047 . 9048) (nil fontified nil 9045 . 9047) (nil fontified nil 9037 . 9045) (9037 . 9080) (t 25940 13127 663922 712000)) nil (25940 13193 113091 827000) 0 nil])
([nil nil ((9038 . 9054) (#("        " 0 8 (fontified nil)) . 9038) (9037 . 9038)) nil (25940 13193 113087 136000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9050) (undo-tree-id13 . -4) 9054) nil (25940 13193 113082 852000) 0 nil])
([nil nil ((#("            if 'all2all' in self.CONNECTIVITY:
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:string fontified t) 16 23 (face tree-sitter-hl-face:string fontified t) 23 24 (face tree-sitter-hl-face:string fontified t) 24 25 (fontified t) 25 27 (face tree-sitter-hl-face:operator fontified t) 27 28 (fontified t) 28 32 (face tree-sitter-hl-face:keyword fontified t) 32 33 (fontified t) 33 45 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 45 46 (fontified t) 46 47 (rear-nonsticky t fontified t)) . -9038) (undo-tree-id130 . -23) (undo-tree-id131 . -23) (undo-tree-id132 . -23) (undo-tree-id133 . -23) (undo-tree-id134 . -23) (undo-tree-id135 . -23) (undo-tree-id136 . -23) (undo-tree-id137 . -23) (undo-tree-id138 . -23) (undo-tree-id139 . -23) (undo-tree-id140 . -23) (undo-tree-id141 . -23) (undo-tree-id142 . -23) (undo-tree-id143 . -23) (undo-tree-id144 . -23) (undo-tree-id145 . -23) (undo-tree-id146 . -23) (undo-tree-id147 . -23) (undo-tree-id148 . -23) (undo-tree-id149 . -23) (undo-tree-id150 . -23) (undo-tree-id151 . -23) (undo-tree-id152 . -23) (undo-tree-id153 . -23) (undo-tree-id154 . -47) (undo-tree-id155 . -47) (undo-tree-id156 . -47) (undo-tree-id157 . -47) (undo-tree-id158 . -47) (undo-tree-id159 . -47) (undo-tree-id160 . -47) (undo-tree-id161 . -47) (undo-tree-id162 . -47) (undo-tree-id163 . -47) (undo-tree-id164 . -47) (undo-tree-id165 . -47) (undo-tree-id166 . -47) 9085 (t 25940 13193 175924 797000)) nil (25940 13215 846831 949000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9037) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 9038) nil (25940 13215 846788 954000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9049) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) 9053) nil (25940 13215 846566 142000) 0 nil])
([nil nil ((8525 . 8537) (t 25940 13215 911925 520000)) nil (25940 13398 654349 983000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16448) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16448) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16448) (#("a" 0 1 (fontified t)) . 16448) (#("K" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . 16448) (#("." 0 1 (fontified t)) . 16448) (#("f" 0 1 (fontified t)) . 16448) (#("l" 0 1 (fontified t)) . 16448) (#("e" 0 1 (fontified t)) . 16448) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 16448) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16448) (#("t" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("q" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("s" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 16448) (#("." 0 1 (fontified t)) . 16448) (#("h" 0 1 (fontified t)) . 16448) (#("c" 0 1 (fontified t)) . 16448) (#("r" 0 1 (fontified t)) . 16448) (#("o" 0 1 (fontified t)) . 16448) (#("t" 0 1 (fontified t)) . 16448) (t 25940 13398 719931 338000)) nil (25940 13435 75825 610000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16448) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16448)) nil (25940 13435 75819 385000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16446) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t)) . -16447) (undo-tree-id168 . -1) 16448) nil (25940 13435 75817 383000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16284) (#("a" 0 1 (fontified t)) . 16284) (#("K" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . 16284) (#("." 0 1 (fontified t)) . 16284) (#("f" 0 1 (fontified t)) . 16284) (#("l" 0 1 (fontified t)) . 16284) (#("e" 0 1 (fontified t)) . 16284) (#("s" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 16284) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16284) (#("t" 0 1 (fontified t)) . 16284) (#("r" 0 1 (fontified t)) . 16284) (#("q" 0 1 (fontified t)) . 16284) (#("s" 0 1 (fontified t)) . 16284) (#("." 0 1 (fontified t)) . 16284) (#("h" 0 1 (fontified t)) . 16284) (#("c" 0 1 (fontified t)) . 16284) (#("r" 0 1 (fontified t)) . 16284) (#("o" 0 1 (fontified t)) . 16284) (#("t" 0 1 (fontified t)) . 16284) (#(" " 0 1 (fontified t)) . 16284) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 16284)) nil (25940 13435 75801 726000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16284) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16284) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16284) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16284)) nil (25940 13435 75791 298000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16295) (16294 . 16295) (16293 . 16295) (#("[" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -16293) (16285 . 16294) (t 25940 13435 147932 497000)) nil (25940 13455 281685 815000) 0 nil])
([nil nil ((16294 . 16295)) nil (25940 13455 281682 701000) 0 nil])
([nil nil ((16296 . 16297)) nil (25940 13455 281681 765000) 0 nil])
([nil nil ((16296 . 16297)) nil (25940 13455 281680 671000) 0 nil])
([nil nil ((16436 . 16442)) nil (25940 13455 281679 657000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16445) (16444 . 16445) (16443 . 16445) (#("[" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -16443) (16442 . 16444)) nil (25940 13455 281677 163000) 0 nil])
([nil nil ((16444 . 16445)) nil (25940 13455 281673 938000) 0 nil])
([nil nil ((16446 . 16449)) nil (25940 13455 281668 752000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11808) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 11808) (t 25940 13455 347933 140000)) nil (25940 13720 653248 369000) 0 nil])
([nil nil ((11863 . 11865)) nil (25940 13720 653243 978000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 11834) (#("s" 0 1 (fontified t)) . 11834) (#("n" 0 1 (fontified t)) . 11834) (t 25940 13720 719941 584000)) nil (25940 13730 510808 147000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -11832) (undo-tree-id180 . -1) (#("o" 0 1 (fontified t)) . -11833) (undo-tree-id181 . -1) 11834) nil (25940 13730 510805 892000) 0 nil])
([nil nil ((11832 . 11836)) nil (25940 13730 510802 183000) 0 nil])
([nil nil ((11836 . 11837)) nil (25940 13730 510800 654000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -11836) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 11837) nil (25940 13730 510796 229000) 0 nil])
([nil nil ((1358 . 1362) (t 25940 13730 575941 898000)) nil (25940 14703 916538 307000) 0 nil])
([nil nil ((8673 . 8685) (#("            " 0 12 (fontified nil)) . 8672) (undo-tree-id211 . -12) (8684 . 8685) (t 25940 14703 979972 874000)) nil (25940 14726 848319 216000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8672) (undo-tree-id210 . -1) 8673) nil (25940 14726 848316 438000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8957) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) 8961) nil (25940 14726 848313 27000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8998) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4)) nil (25940 14726 848286 491000) 0 nil])
([nil nil ((8928 . 8930)) nil (25940 14726 848268 876000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8928) (undo-tree-id217 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8929) (undo-tree-id218 . -1) 8930 (t 25940 14726 911973 604000)) nil (25940 14731 938551 56000) 0 nil])
([nil nil ((8945 . 8961) (#("            " 0 12 (fontified t)) . 8945) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) 8957) nil (25940 14731 938546 159000) 0 nil])
([nil nil ((8990 . 9006) (#("            " 0 12 (fontified t)) . 8990) (undo-tree-id212 . -12)) nil (25940 14955 568943 970000) 0 nil])
([nil nil ((9026 . 9035) (t 25940 14732 3973 766000)) nil (25940 14961 922674 576000) 0 nil] [nil nil ((#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8711) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("b" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8712) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -8713) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 8714 (t 25940 14732 3973 766000)) ((8711 . 8714)) (25940 14955 567851 906000) 0 nil])
([nil nil ((9035 . 9037) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -9035) (9035 . 9036) (t 25940 14961 987981 84000)) nil (25940 14990 878630 419000) 0 nil])
nil
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 9036)) nil (25940 14990 878628 352000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9043) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -9044) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -9045) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified nil)) . -9046) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#(" " 0 1 (fontified t)) . -9047) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("@" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -9048) (undo-tree-id423 . -1) (#(" " 0 1 (fontified t)) . -9049) (undo-tree-id424 . -1) (#("s" 0 1 (fontified t)) . -9050) (undo-tree-id425 . -1) (#("e" 0 1 (fontified t)) . -9051) (undo-tree-id426 . -1) (#("l" 0 1 (fontified t)) . -9052) (undo-tree-id427 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -9053) (undo-tree-id428 . -1) (#("." 0 1 (fontified t)) . -9054) (undo-tree-id429 . -1) (#("k" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9055) (undo-tree-id430 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9056) (undo-tree-id431 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -9057) (undo-tree-id432 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -9058) (undo-tree-id433 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -9059) (undo-tree-id434 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -9060) (undo-tree-id435 . -1) 9061) nil (25940 14990 878618 225000) 0 nil])
([nil nil ((9043 . 9044)) nil (25940 14990 878145 216000) 0 nil])
([nil nil ((9045 . 9046) (t 25940 14990 943982 6000)) nil (25940 14993 190028 531000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 8697) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 8697) (t 25940 14993 255982 79000)) nil (25940 20466 483592 611000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 8759)) nil (25940 20466 483590 903000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8763) 8759) nil (25940 20466 483589 744000) 0 nil])
([nil nil ((8834 . 8850) (#("            " 0 12 (fontified t)) . 8834) (undo-tree-id3 . -12)) nil (25940 20466 483587 763000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 8850)) nil (25940 20466 483584 622000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -8850) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -5)) nil (25940 20466 483579 978000) 0 nil])
([nil nil ((800 . 801) (t 25940 20466 552156 252000)) nil (25956 41423 788335 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1166 . 1167) (nil fontified nil 1159 . 1167) (nil fontified nil 1153 . 1159) (nil fontified nil 1147 . 1153) (nil fontified nil 1146 . 1147) (nil fontified nil 1142 . 1146) (nil fontified nil 1141 . 1142) (nil fontified nil 1140 . 1141) (nil fontified nil 1138 . 1140) (nil fontified nil 1132 . 1138) (nil fontified nil 1128 . 1132) (nil fontified nil 1127 . 1128) (nil fontified nil 1126 . 1127) (nil fontified nil 1124 . 1126) (nil fontified nil 1118 . 1124) (nil fontified nil 1117 . 1118) (nil fontified nil 1069 . 1117) (nil fontified nil 1063 . 1069) (nil fontified nil 1062 . 1063) (nil fontified nil 1060 . 1062) (nil fontified nil 1059 . 1060) (nil fontified nil 1058 . 1059) (nil fontified nil 1048 . 1058) (nil fontified nil 1046 . 1048) (nil fontified nil 1045 . 1046) (nil fontified nil 1044 . 1045) (nil fontified nil 1034 . 1044) (nil fontified nil 1032 . 1034) (nil fontified nil 1028 . 1032) (nil fontified nil 1022 . 1028) (nil fontified nil 1019 . 1022) (nil fontified nil 1018 . 1019) (nil fontified nil 1017 . 1018) (nil fontified nil 1016 . 1017) (nil fontified nil 1012 . 1016) (nil fontified nil 1011 . 1012) (nil fontified nil 1008 . 1011) (nil fontified nil 1004 . 1008) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 1001 . 1002) (nil fontified nil 997 . 1001) (nil fontified nil 996 . 997) (nil fontified nil 993 . 996) (nil fontified nil 989 . 993) (nil fontified nil 988 . 989) (nil fontified nil 985 . 988) (nil fontified nil 984 . 985) (nil fontified nil 983 . 984) (nil fontified nil 982 . 983) (nil fontified nil 972 . 982) (nil fontified nil 969 . 972) (nil fontified nil 968 . 969) (nil fontified nil 967 . 968) (nil fontified nil 966 . 967) (nil fontified nil 956 . 966) (nil fontified nil 954 . 956) (nil fontified nil 952 . 954) (nil fontified nil 951 . 952) (nil fontified nil 949 . 951) (nil fontified nil 943 . 949) (nil fontified nil 942 . 943) (nil fontified nil 934 . 942) (nil fontified nil 932 . 934) (nil fontified nil 931 . 932) (nil fontified nil 930 . 931) (nil fontified nil 929 . 930) (nil fontified nil 928 . 929) (nil fontified nil 924 . 928) (nil fontified nil 923 . 924) (nil fontified nil 917 . 923) (nil fontified nil 913 . 917) (nil fontified nil 912 . 913) (nil fontified nil 909 . 912) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 906 . 907) (nil fontified nil 898 . 906) (nil fontified nil 896 . 898) (nil fontified nil 895 . 896) (nil fontified nil 894 . 895) (nil fontified nil 893 . 894) (nil fontified nil 892 . 893) (nil fontified nil 888 . 892) (nil fontified nil 887 . 888) (nil fontified nil 881 . 887) (nil fontified nil 877 . 881) (nil fontified nil 876 . 877) (nil fontified nil 873 . 876) (nil fontified nil 872 . 873) (nil fontified nil 871 . 872) (nil fontified nil 870 . 871) (nil fontified nil 862 . 870) (nil fontified nil 860 . 862) (nil fontified nil 858 . 860) (nil fontified nil 851 . 858) (nil fontified nil 850 . 851) (nil fontified nil 848 . 850) (nil fontified nil 844 . 848) (nil fontified nil 842 . 844) (nil fontified nil 841 . 842) (nil fontified nil 839 . 841) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 829 . 836) (nil fontified nil 827 . 829) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 823 . 825) (nil fontified nil 821 . 823) (nil fontified nil 820 . 821) (nil fontified nil 818 . 820) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 807 . 816) (nil fontified nil 806 . 807) (nil fontified nil 803 . 806) (nil fontified nil 801 . 803) (801 . 1167)) nil (25956 41423 788326 188000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -801) (t 25956 41423 858191 158000)) nil (25956 41436 166178 924000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t)) . -844) 840) nil (25956 41436 166177 667000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t)) . -864) 860) nil (25956 41436 166176 502000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t)) . -898)) nil (25956 41436 166175 415000) 0 nil])
([nil nil ((935 . 943) (#("      " 0 6 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 935)) nil (25956 41436 166174 229000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -939) (undo-tree-id4 . -4) 943) nil (25956 41436 166172 939000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -954) 950) nil (25956 41436 166170 754000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -968)) nil (25956 41436 166169 576000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1012) 1008) nil (25956 41436 166168 561000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1026) 1022) nil (25956 41436 166167 396000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1038)) nil (25956 41436 166165 449000) 0 nil])
([nil nil ((1043 . 1051) (#("      " 0 6 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1043)) nil (25956 41436 166164 162000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1047) (undo-tree-id3 . -4) 1051) nil (25956 41436 166162 751000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1100) (undo-tree-id2 . -2)) nil (25956 41436 166159 948000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1112) (undo-tree-id1 . -2)) nil (25956 41436 166157 88000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1125) (undo-tree-id0 . -2)) nil (25956 41436 166150 986000) 0 nil])
([nil nil ((6826 . 6834) (t 25956 41436 234191 552000)) nil (25956 41454 385918 184000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 6841) (6840 . 6841) (6839 . 6841) (#("(" 0 1 (fontified nil)) . -6839) (6834 . 6840)) nil (25956 41454 385916 610000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 6842) (6841 . 6842) (6840 . 6842) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -6840) (6840 . 6841)) nil (25956 41454 385913 733000) 0 nil])
([nil nil ((6841 . 6853)) nil (25956 41454 385910 906000) 0 nil])
([nil nil ((6855 . 6864)) nil (25956 41454 385905 770000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . -6853) (undo-tree-id6 . -1) 6854 (t 25956 41454 454192 132000)) nil (25956 41461 391098 763000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t)) . -6840) (undo-tree-id5 . -1) 6841) nil (25956 41461 391095 528000) 0 nil])
([nil nil ((#("'" 0 1 (syntax-table (15) face tree-sitter-hl-face:string fontified nil)) . 6842) (6841 . 6842) (6840 . 6842) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -6840) (6840 . 6841)) nil (25956 41461 391083 333000) 0 nil])
([nil nil ((6841 . 6847)) nil (25956 41461 391080 818000) 0 nil])
([nil nil ((6848 . 6850)) nil (25956 41461 391075 945000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6863) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 6864 (t 25956 41461 458192 355000)) nil (25956 41462 756257 968000) 0 nil])
([nil nil ((6863 . 6864) (t 25956 41462 826192 398000)) nil (25956 41567 245176 178000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6903 . 6904) (nil fontified nil 6903 . 6904) (nil fontified nil 6902 . 6903) (nil fontified nil 6901 . 6902) (nil fontified nil 6894 . 6901) (nil fontified nil 6892 . 6894) (nil fontified nil 6891 . 6892) (nil fontified nil 6890 . 6891) (nil fontified nil 6888 . 6890) (nil fontified nil 6886 . 6888) (nil fontified nil 6885 . 6886) (nil fontified nil 6883 . 6885) (nil fontified nil 6882 . 6883) (nil fontified nil 6881 . 6882) (nil fontified nil 6872 . 6881) (6872 . 6904)) nil (25956 41567 245174 405000) 0 nil])
([nil nil ((6904 . 6913)) nil (25956 41567 245170 258000) 0 nil])
([nil nil ((6865 . 6873) (#("        " 0 8 (fontified nil)) . 6864) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (6872 . 6873)) nil (25956 41567 245168 876000) 0 nil])
([nil nil ((6873 . 6880)) nil (25956 41567 245163 175000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6879) (undo-tree-id19 . -1) 6880) nil (25956 41567 245162 98000) 0 nil])
([nil nil ((6879 . 6881)) nil (25956 41567 245152 975000) 0 nil])
([nil nil ((6913 . 6922)) nil (25956 41567 245151 669000) 0 nil])
([nil nil ((6873 . 6878)) nil (25956 41567 245150 663000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 6934) (6933 . 6934) (6932 . 6934) (#("(" 0 1 (fontified nil)) . -6932) (6927 . 6933)) nil (25956 41567 245148 806000) 0 nil])
([nil nil ((6933 . 6943)) nil (25956 41567 245146 147000) 0 nil])
([nil nil ((6943 . 6949)) nil (25956 41567 245141 976000) 0 nil])
([nil nil ((6944 . 6947) (t 25956 41567 314195 723000)) nil (25956 41576 444350 636000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6946) (undo-tree-id29 . -1) 6947) nil (25956 41576 444349 179000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6949) (6948 . 6949) (6947 . 6949) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6947) (6946 . 6948)) nil (25956 41576 444346 170000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6944) (undo-tree-id24 . -1) (#("p" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6945) (undo-tree-id25 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -6946) (undo-tree-id26 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -6947) (undo-tree-id27 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -6948) (undo-tree-id28 . -1) 6949) nil (25956 41576 444340 324000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6896) (undo-tree-id38 . -1) 6897 (t 25956 41576 510196 16000)) nil (25956 41618 66986 876000) 0 nil])
([nil nil ((6896 . 6898)) nil (25956 41618 66984 645000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6897) (undo-tree-id37 . -1) 6898) nil (25956 41618 66983 704000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6906) (6905 . 6906) (6904 . 6906) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6904) (6897 . 6905)) nil (25956 41618 66981 314000) 0 nil])
([nil nil ((6905 . 6906)) nil (25956 41618 66979 620000) 0 nil])
([nil nil ((#("à" 0 1 (fontified t)) . -6905) (undo-tree-id36 . -1) 6906) nil (25956 41618 66978 611000) 0 nil])
([nil nil ((6905 . 6906)) nil (25956 41618 66976 600000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6909) (undo-tree-id35 . -1) 6910) nil (25956 41618 66975 577000) 0 nil])
([nil nil ((6909 . 6918)) nil (25956 41618 66973 641000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:property fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6917) (undo-tree-id34 . -1) 6918) nil (25956 41618 66972 622000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6919) (6918 . 6919) (6917 . 6919) (#("[" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6917) (6917 . 6918)) nil (25956 41618 66970 285000) 0 nil])
([nil nil ((6918 . 6919)) nil (25956 41618 66968 545000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6925) (undo-tree-id33 . -1) 6926) nil (25956 41618 66967 311000) 0 nil])
([nil nil ((6925 . 6926)) nil (25956 41618 66964 951000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -6936) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 6937) nil (25956 41618 66962 578000) 0 nil])
([nil nil ((6936 . 6937)) nil (25956 41618 66944 992000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6913) (6912 . 6913) (6911 . 6913) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6911) (6907 . 6912) (t 25956 41618 134197 340000)) nil (25956 41667 951147 204000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6932) (6931 . 6932) (6930 . 6932) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6930) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (6926 . 6931)) nil (25956 41667 951141 853000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1132) (undo-tree-id54 . -1) (#("1" 0 1 (fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1133) (undo-tree-id55 . -1) (#("," 0 1 (fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1134) (undo-tree-id56 . -1) (#(" " 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1135) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1136) (undo-tree-id58 . -1) (#("2" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1137) (undo-tree-id59 . -1) 1138 (t 25956 41668 18198 928000)) nil (25956 41733 28756 350000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1144) (1143 . 1144) (1142 . 1144) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1142) (1132 . 1143)) nil (25956 41733 28747 724000) 0 nil])
([nil nil ((1143 . 1144)) nil (25956 41733 28746 68000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -1142) (undo-tree-id52 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1143) (#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -1143) (undo-tree-id53 . -1) 1144) nil (25956 41733 28744 798000) 0 nil])
([nil nil ((1142 . 1143)) nil (25956 41733 28741 498000) 0 nil])
([nil nil ((#("'" 0 1 (face tree-sitter-hl-face:string fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1142) (undo-tree-id51 . -1) 1143) nil (25956 41733 28740 444000) 0 nil])
([nil nil ((1143 . 1149) (1142 . 1144) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1142) (1142 . 1143)) nil (25956 41733 28738 224000) 0 nil])
([nil nil ((#("é" 0 1 (fontified t)) . -1147) (undo-tree-id49 . -1) (#("1" 0 1 (fontified t)) . -1148) (undo-tree-id50 . -1) 1149) nil (25956 41733 28736 416000) 0 nil])
([nil nil ((1147 . 1148)) nil (25956 41733 28733 380000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . -1147) (undo-tree-id48 . -1) 1148) nil (25956 41733 28732 249000) 0 nil])
([nil nil ((1147 . 1149)) nil (25956 41733 28730 169000) 0 nil])
([nil nil ((apply -4 1096 1125 undo--wrap-and-run-primitive-undo 1096 1125 ((1114 . 1116) (1100 . 1102) 1120))) nil (25956 41733 28729 374000) 0 nil])
([nil nil ((1124 . 1128)) nil (25956 41733 28728 406000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1151) (undo-tree-id46 . -1) (#("2" 0 1 (fontified t)) . -1152) (undo-tree-id47 . -1) 1153) nil (25956 41733 28727 55000) 0 nil])
([nil nil ((1151 . 1152)) nil (25956 41733 28723 850000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . 1154) (#("e" 0 1 (fontified t)) . 1154)) nil (25956 41733 28722 766000) 0 nil])
([nil nil ((1154 . 1155)) nil (25956 41733 28721 444000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1151) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 1152) nil (25956 41733 28718 988000) 0 nil])
([nil nil ((1151 . 1152)) nil (25956 41733 28698 726000) 0 nil])
([nil nil ((#("    # Normalize the vectors (make them unit vectors)
    # e1 = u 
    # e2 = v 
" 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 4 52 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 52 53 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 53 57 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 57 59 (face tree-sitter-hl-face:comment fontified t) 59 61 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 61 62 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 62 63 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 63 66 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 66 67 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 67 71 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 71 73 (face tree-sitter-hl-face:comment fontified t) 73 75 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 75 76 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 76 77 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 77 80 (face tree-sitter-hl-face:comment fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 80 81 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1043) (undo-tree-id97 . -81) (undo-tree-id98 . -81) (undo-tree-id99 . -53) (undo-tree-id100 . -81) (undo-tree-id101 . -81) (undo-tree-id102 . -81) (undo-tree-id103 . -81) (undo-tree-id104 . -67) (undo-tree-id105 . -81) (undo-tree-id106 . -67) (undo-tree-id107 . -67) (undo-tree-id108 . -67) (undo-tree-id109 . -67) (undo-tree-id110 . -67) (undo-tree-id111 . -67) (undo-tree-id112 . -67) (undo-tree-id113 . -67) (undo-tree-id114 . -67) (undo-tree-id115 . -53) (undo-tree-id116 . -67) (undo-tree-id117 . -53) (t 25956 41733 98200 999000)) nil (25956 41736 115834 273000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1042) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 1043) nil (25956 41736 115809 727000) 0 nil])
([nil nil ((1042 . 1050) (#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1042) (t 25956 41736 186201 97000)) nil (25956 41737 221601 893000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1046) (undo-tree-id118 . -4) 1050) nil (25956 41737 221596 980000) 0 nil])
([nil nil ((6920 . 6928) (#("        " 0 8 (fontified nil)) . 6919) (undo-tree-id125 . -8) (6927 . 6928) (t 25956 41737 290201 132000)) nil (25956 41803 949294 5000) 0 nil])
([nil nil ((6919 . 6927)) nil (25956 41803 949291 610000) 0 nil])
([nil nil ((6920 . 6928) (#("        " 0 8 (fontified nil)) . 6919) (undo-tree-id124 . -8) (6927 . 6928)) nil (25956 41803 949290 615000) 0 nil])
([nil nil ((6928 . 6936)) nil (25956 41803 949288 203000) 0 nil])
([nil nil ((6934 . 6935)) nil (25956 41803 949287 315000) 0 nil])
([nil nil ((6943 . 6945) (#("(" 0 1 (fontified nil)) . -6943) (6937 . 6944)) nil (25956 41803 949286 232000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -6943) (undo-tree-id123 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 6944)) nil (25956 41803 949284 557000) 0 nil])
([nil nil ((6944 . 6952) (6943 . 6945) (#("[" 0 1 (fontified nil)) . -6943) (6943 . 6944)) nil (25956 41803 949282 167000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -6950) (undo-tree-id121 . -1) (#("t" 0 1 (fontified t)) . -6951) (undo-tree-id122 . -1) 6952) nil (25956 41803 949279 532000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 6962) (6961 . 6962) (6960 . 6962) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -6960) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (6950 . 6961)) nil (25956 41803 949271 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7001 . 7002) (nil fontified nil 7001 . 7002) (nil fontified nil 7000 . 7001) (nil fontified nil 6995 . 7000) (nil fontified nil 6988 . 6995) (nil fontified nil 6986 . 6988) (nil fontified nil 6985 . 6986) (nil fontified nil 6979 . 6985) (nil fontified nil 6978 . 6979) (nil fontified nil 6977 . 6978) (nil fontified nil 6972 . 6977) (nil fontified nil 6964 . 6972) (6964 . 7002) (t 25956 41804 22203 256000)) nil (25956 41819 104584 397000) 0 nil])
([nil nil ((6946 . 6947) (t 25956 41819 174203 738000)) nil (25956 41849 560264 342000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6946) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 6947) nil (25956 41849 560261 242000) 0 nil])
([nil nil ((6947 . 6952)) nil (25956 41849 560237 224000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:variable fontified t src-block t font-lock-fontified t)) . 898) (t 25956 41849 630204 707000)) nil (25956 42453 36027 107000) 0 nil])
([nil nil ((898 . 899)) nil (25956 42453 36022 557000) 0 nil])
([nil nil ((1043 . 1051) (#("    " 0 4 (fontified nil src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 1043) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (1042 . 1043) (t 25956 42453 102223 911000)) nil (25956 42471 46009 393000) 0 nil])
([nil nil ((nil fontified nil 1126 . 1127) (nil fontified nil 1125 . 1126) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1119 . 1123) (nil fontified nil 1118 . 1119) (nil fontified nil 1112 . 1118) (nil fontified nil 1108 . 1112) (nil fontified nil 1107 . 1108) (nil fontified nil 1104 . 1107) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1095 . 1101) (nil fontified nil 1093 . 1095) (nil fontified nil 1092 . 1093) (nil fontified nil 1091 . 1092) (nil fontified nil 1090 . 1091) (nil fontified nil 1089 . 1090) (nil fontified nil 1085 . 1089) (nil fontified nil 1084 . 1085) (nil fontified nil 1078 . 1084) (nil fontified nil 1074 . 1078) (nil fontified nil 1073 . 1074) (nil fontified nil 1070 . 1073) (nil fontified nil 1069 . 1070) (nil fontified nil 1068 . 1069) (nil fontified nil 1067 . 1068) (nil fontified nil 1061 . 1067) (nil fontified nil 1059 . 1061) (nil fontified nil 1057 . 1059) (nil fontified nil 1050 . 1057) (nil fontified nil 1049 . 1050) (nil fontified nil 1047 . 1049) (nil fontified nil 1045 . 1047) (nil fontified nil 1043 . 1045) (1043 . 1127)) nil (25956 42471 45999 774000) 0 nil])
([nil nil ((#("        u = a / np.linalg.norm(a)
" 0 2 (fontified t src-block t font-lock-fontified t) 2 8 (fontified t src-block t font-lock-fontified t) 8 9 (face tree-sitter-hl-face:variable fontified t src-block t font-lock-fontified t) 9 10 (fontified t src-block t font-lock-fontified t) 10 11 (face tree-sitter-hl-face:operator fontified t src-block t font-lock-fontified t) 11 14 (fontified t src-block t font-lock-fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t src-block t font-lock-fontified t) 15 19 (fontified t src-block t font-lock-fontified t) 19 25 (face tree-sitter-hl-face:property fontified t src-block t font-lock-fontified t) 25 26 (fontified t src-block t font-lock-fontified t) 26 30 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t src-block t font-lock-fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t) 31 32 (fontified t src-block t font-lock-fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t src-block t font-lock-fontified t) 33 34 (fontified t src-block t font-lock-fontified t)) . -1059) (undo-tree-id137 . -34) (undo-tree-id138 . -34) (undo-tree-id139 . -34) (undo-tree-id140 . -34) (undo-tree-id141 . -34) (undo-tree-id142 . -34) (undo-tree-id143 . -34) (undo-tree-id144 . -34) (undo-tree-id145 . -34) (undo-tree-id146 . -34) (undo-tree-id147 . -34) (undo-tree-id148 . -34) (undo-tree-id149 . -34) (undo-tree-id150 . -34) (undo-tree-id151 . -34) 1093) nil (25956 42471 45986 61000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -1097) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) 1101 (t 25956 42471 118224 484000)) nil (25956 42475 247659 315000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3630 . 3631) (nil fontified nil 3630 . 3631) (nil fontified nil 3629 . 3630) (nil fontified nil 3620 . 3629) (nil fontified nil 3619 . 3620) (nil fontified nil 3618 . 3619) (nil fontified nil 3617 . 3618) (nil fontified nil 3607 . 3617) (nil fontified nil 3606 . 3607) (nil fontified nil 3605 . 3606) (nil fontified nil 3604 . 3605) (nil fontified nil 3598 . 3604) (nil fontified nil 3597 . 3598) (nil fontified nil 3593 . 3597) (nil fontified nil 3592 . 3593) (nil fontified nil 3591 . 3592) (nil fontified nil 3584 . 3591) (nil fontified nil 3583 . 3584) (nil fontified nil 3582 . 3583) (nil fontified nil 3572 . 3582) (nil fontified nil 3571 . 3572) (nil fontified nil 3567 . 3571) (nil fontified nil 3566 . 3567) (nil fontified nil 3565 . 3566) (nil fontified nil 3564 . 3565) (nil fontified nil 3559 . 3564) (nil fontified nil 3547 . 3559) (3547 . 3631) (t 25956 42475 314224 618000)) nil (25956 44331 31408 131000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3555) 3547) nil (25956 44331 31400 402000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3555) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3555) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3555)) nil (25956 44331 31398 824000) 0 nil])
([nil nil ((3555 . 3565)) nil (25956 44331 31397 383000) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:variable fontified nil)) . 3565) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3565)) nil (25956 44331 31396 150000) 0 nil])
([nil nil ((3555 . 3557)) nil (25956 44331 31395 116000) 0 nil])
([nil nil ((#("        # net_input = torch.zeros(self.N_NEURON, dtype=self.FLOAT, device=self.device)
" 0 8 (fontified t) 8 86 (face tree-sitter-hl-face:comment fontified t) 86 87 (fontified t)) . -4278) (undo-tree-id235 . -87) 4365) nil (25956 44331 31393 946000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4277) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 4278) nil (25956 44331 31391 535000) 0 nil])
([nil nil ((#("        # noise = []
        # for i_pop in range(self.N_POP):
        #     noise.append(self.ff_normal.sample((self.Na[i_pop],)))
" 0 8 (fontified t) 8 20 (face tree-sitter-hl-face:comment fontified t) 20 29 (fontified t) 29 62 (face tree-sitter-hl-face:comment fontified t) 62 71 (fontified t) 71 131 (face tree-sitter-hl-face:comment fontified t) 131 132 (fontified t)) . -4362) (undo-tree-id232 . -132) 4494) nil (25956 44331 31388 509000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4361) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 4362) nil (25956 44331 31386 103000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4352) (undo-tree-id229 . -1) 4353) nil (25956 44331 31383 91000) 0 nil])
([nil nil ((#("        # for i_pop in range(self.N_POP):
        #     net_input = net_input + rec_input[i_pop]
" 0 8 (fontified t) 8 41 (face tree-sitter-hl-face:comment fontified t) 41 50 (fontified t) 50 96 (face tree-sitter-hl-face:comment fontified t) 96 97 (fontified t)) . -4416) (undo-tree-id228 . -97) 4513) nil (25956 44331 31380 864000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4415) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 4416) nil (25956 44331 31378 586000) 0 nil])
([nil nil ((#("        # for j_pop in range(self.N_POP):
        #     for i_pop in range(self.N_POP):
        #         r_pres = rates[self.csumNa[j_pop] : self.csumNa[j_pop + 1]]
                
        #         print('rate', r_pres.shape)
        #         print(self.Wab[j_pop, i_pop])
                
        #         Wij = self.Wab[j_pop, i_pop](r_pres)
        #         print('Wij', Wij.shape)
                
        #         rec_input[j_pop, self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = Wij
" 0 8 (fontified t) 8 41 (face tree-sitter-hl-face:comment fontified t) 41 50 (fontified t) 50 87 (face tree-sitter-hl-face:comment fontified t) 87 96 (fontified t) 96 165 (face tree-sitter-hl-face:comment fontified t) 165 191 (fontified t) 191 228 (face tree-sitter-hl-face:comment fontified t) 228 237 (fontified t) 237 276 (face tree-sitter-hl-face:comment fontified t) 276 302 (fontified t) 302 348 (face tree-sitter-hl-face:comment fontified t) 348 357 (fontified t) 357 390 (face tree-sitter-hl-face:comment fontified t) 390 416 (fontified t) 416 493 (face tree-sitter-hl-face:comment fontified t) 493 494 (fontified t)) . -3643) (undo-tree-id208 . -8) (undo-tree-id209 . -8) (undo-tree-id210 . -8) (undo-tree-id211 . -494) (undo-tree-id212 . -277) (undo-tree-id213 . -229) (undo-tree-id214 . -294) (undo-tree-id215 . -277) (undo-tree-id216 . -349) (undo-tree-id217 . -294) (undo-tree-id218 . -391) (undo-tree-id219 . -349) (undo-tree-id220 . -408) (undo-tree-id221 . -391) (undo-tree-id222 . -494) (undo-tree-id223 . -494) (undo-tree-id224 . -408) (undo-tree-id225 . -494) 4137) nil (25956 44331 31373 801000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3642) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 3643) nil (25956 44331 31262 554000) 0 nil])
([nil nil ((8591 . 8592) (t 25956 44331 102283 673000)) nil (25956 46858 20997 257000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8591) (undo-tree-id256 . -1) 8592) nil (25956 46858 20995 838000) 0 nil])
([nil nil ((8591 . 8604)) nil (25956 46858 20993 54000) 0 nil])
([nil nil ((8604 . 8605)) nil (25956 46858 20992 129000) 0 nil])
([nil nil ((8608 . 8610)) nil (25956 46858 20990 615000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8611) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 8612) nil (25956 46858 20985 897000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8589) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (t 25956 46858 90364 87000)) nil (25956 46874 567018 971000) 0 nil])
([nil nil ((8603 . 8604)) nil (25956 46874 566994 617000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -8609) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 8610 (t 25956 46874 638364 614000)) nil (25956 47227 277546 399000) 0 nil])
([nil nil ((apply -6 8536 8781 undo--wrap-and-run-primitive-undo 8536 8781 ((8715 . 8717) (8626 . 8628) (8548 . 8550) 8762))) nil (25956 47435 912888 247000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16293) (t 25956 47435 986382 477000)) nil (25956 48091 47819 978000) 0 nil])
([nil nil ((16293 . 16294)) nil (25956 48091 47817 898000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16282) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 16283) nil (25956 48091 47814 977000) 0 nil])
([nil nil ((16282 . 16283)) nil (25956 48091 47786 205000) 0 nil])
([nil nil ((16320 . 16336) (#("            " 0 12 (fontified nil)) . 16320) (16319 . 16320) (t 25956 48091 118403 325000)) nil (25956 48107 456153 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16617 . 16618) (nil fontified nil 16617 . 16618) (nil fontified nil 16615 . 16617) (nil fontified nil 16614 . 16615) (nil fontified nil 16610 . 16614) (nil fontified nil 16609 . 16610) (nil fontified nil 16608 . 16609) (nil fontified nil 16607 . 16608) (nil fontified nil 16606 . 16607) (nil fontified nil 16605 . 16606) (nil fontified nil 16604 . 16605) (nil fontified nil 16602 . 16604) (nil fontified nil 16601 . 16602) (nil fontified nil 16597 . 16601) (nil fontified nil 16596 . 16597) (nil fontified nil 16595 . 16596) (nil fontified nil 16594 . 16595) (nil fontified nil 16593 . 16594) (nil fontified nil 16592 . 16593) (nil fontified nil 16591 . 16592) (nil fontified nil 16588 . 16591) (nil fontified nil 16587 . 16588) (nil fontified nil 16583 . 16587) (nil fontified nil 16582 . 16583) (nil fontified nil 16581 . 16582) (nil fontified nil 16580 . 16581) (nil fontified nil 16579 . 16580) (nil fontified nil 16578 . 16579) (nil fontified nil 16577 . 16578) (nil fontified nil 16574 . 16577) (nil fontified nil 16573 . 16574) (nil fontified nil 16569 . 16573) (nil fontified nil 16568 . 16569) (nil fontified nil 16567 . 16568) (nil fontified nil 16566 . 16567) (nil fontified nil 16565 . 16566) (nil fontified nil 16564 . 16565) (nil fontified nil 16563 . 16564) (nil fontified nil 16562 . 16563) (nil fontified nil 16556 . 16562) (nil fontified nil 16555 . 16556) (nil fontified nil 16551 . 16555) (nil fontified nil 16550 . 16551) (nil fontified nil 16549 . 16550) (nil fontified nil 16548 . 16549) (nil fontified nil 16547 . 16548) (nil fontified nil 16541 . 16547) (nil fontified nil 16540 . 16541) (nil fontified nil 16536 . 16540) (nil fontified nil 16535 . 16536) (nil fontified nil 16531 . 16535) (nil fontified nil 16530 . 16531) (nil fontified nil 16526 . 16530) (nil fontified nil 16525 . 16526) (nil fontified nil 16522 . 16525) (nil fontified nil 16521 . 16522) (nil fontified nil 16517 . 16521) (nil fontified nil 16501 . 16517) (nil fontified nil 16499 . 16501) (nil fontified nil 16496 . 16499) (nil fontified nil 16495 . 16496) (nil fontified nil 16493 . 16495) (nil fontified nil 16492 . 16493) (nil fontified nil 16488 . 16492) (nil fontified nil 16487 . 16488) (nil fontified nil 16483 . 16487) (nil fontified nil 16482 . 16483) (nil fontified nil 16480 . 16482) (nil fontified nil 16467 . 16480) (nil fontified nil 16465 . 16467) (nil fontified nil 16464 . 16465) (nil fontified nil 16460 . 16464) (nil fontified nil 16459 . 16460) (nil fontified nil 16458 . 16459) (nil fontified nil 16457 . 16458) (nil fontified nil 16456 . 16457) (nil fontified nil 16455 . 16456) (nil fontified nil 16454 . 16455) (nil fontified nil 16452 . 16454) (nil fontified nil 16451 . 16452) (nil fontified nil 16447 . 16451) (nil fontified nil 16446 . 16447) (nil fontified nil 16445 . 16446) (nil fontified nil 16444 . 16445) (nil fontified nil 16443 . 16444) (nil fontified nil 16442 . 16443) (nil fontified nil 16441 . 16442) (nil fontified nil 16438 . 16441) (nil fontified nil 16437 . 16438) (nil fontified nil 16433 . 16437) (nil fontified nil 16432 . 16433) (nil fontified nil 16431 . 16432) (nil fontified nil 16430 . 16431) (nil fontified nil 16429 . 16430) (nil fontified nil 16428 . 16429) (nil fontified nil 16427 . 16428) (nil fontified nil 16424 . 16427) (nil fontified nil 16423 . 16424) (nil fontified nil 16419 . 16423) (nil fontified nil 16418 . 16419) (nil fontified nil 16417 . 16418) (nil fontified nil 16416 . 16417) (nil fontified nil 16415 . 16416) (nil fontified nil 16414 . 16415) (nil fontified nil 16413 . 16414) (nil fontified nil 16412 . 16413) (nil fontified nil 16406 . 16412) (nil fontified nil 16405 . 16406) (nil fontified nil 16401 . 16405) (nil fontified nil 16400 . 16401) (nil fontified nil 16399 . 16400) (nil fontified nil 16398 . 16399) (nil fontified nil 16397 . 16398) (nil fontified nil 16391 . 16397) (nil fontified nil 16390 . 16391) (nil fontified nil 16386 . 16390) (nil fontified nil 16385 . 16386) (nil fontified nil 16381 . 16385) (nil fontified nil 16380 . 16381) (nil fontified nil 16376 . 16380) (nil fontified nil 16375 . 16376) (nil fontified nil 16372 . 16375) (nil fontified nil 16371 . 16372) (nil fontified nil 16367 . 16371) (nil fontified nil 16349 . 16367) (nil fontified nil 16348 . 16349) (nil fontified nil 16347 . 16348) (nil fontified nil 16345 . 16347) (nil fontified nil 16344 . 16345) (nil fontified nil 16340 . 16344) (nil fontified nil 16339 . 16340) (nil fontified nil 16335 . 16339) (nil fontified nil 16334 . 16335) (nil fontified nil 16332 . 16334) (nil fontified nil 16320 . 16332) (16320 . 16618)) nil (25956 48107 456146 794000) 0 nil])
([nil nil ((16348 . 16349)) nil (25956 48107 456117 375000) 0 nil])
([nil nil ((#("8" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16498)) nil (25956 48107 456116 207000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16497) (undo-tree-id289 . -1) 16498) nil (25956 48107 456113 137000) 0 nil])
([nil nil ((16497 . 16499)) nil (25956 48107 456090 468000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16593) (undo-tree-id301 . -1) 16594 (t 25956 48107 526403 847000)) nil (25956 48111 88546 71000) 0 nil])
([nil nil ((16593 . 16594)) nil (25956 48111 88542 426000) 0 nil])
([nil nil ((16444 . 16445)) nil (25956 48111 88540 706000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16444) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 16445) nil (25956 48111 88535 684000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16443) (undo-tree-id302 . -1) 16444 (t 25956 48111 158403 963000)) nil (25956 48112 621991 947000) 0 nil])
([nil nil ((16443 . 16444)) nil (25956 48112 621976 34000) 0 nil])
([nil nil ((16319 . 16335) (t 25956 48112 690404 12000)) nil (25956 48115 629616 358000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16331) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) 16335) nil (25956 48115 629610 595000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16643) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) 16647 (t 25956 48115 702404 107000)) nil (25956 48120 664528 617000) 0 nil])
([nil nil ((apply -8 6124 6347 undo--wrap-and-run-primitive-undo 6124 6347 ((6306 . 6308) (6255 . 6257) (6220 . 6222) (6132 . 6134) 6330))) nil (25956 48617 756775 354000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16128) (undo-tree-id338 . -1) (#("e" 0 1 (fontified t)) . -16129) (undo-tree-id339 . -1) (#("l" 0 1 (fontified t)) . -16130) (undo-tree-id340 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -16131) (undo-tree-id341 . -1) (#("." 0 1 (fontified nil)) . -16132) (undo-tree-id342 . -1) (#("J" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -16133) (undo-tree-id343 . -1) (#("a" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -16134) (undo-tree-id344 . -1) (#("0" 0 1 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -16135) (undo-tree-id345 . -1) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16136) (undo-tree-id346 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16137) (undo-tree-id347 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16138) (undo-tree-id348 . -1) (#(" " 0 1 (fontified t)) . -16139) (undo-tree-id349 . -1) 16140 (t 25956 48617 826420 86000)) nil (25956 49439 116991 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16128) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 16128)) nil (25956 49439 116975 655000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 16264)) nil (25956 49439 116974 532000) 0 nil])
([nil nil ((#(".Ja0" 0 1 (fontified t) 1 4 (face tree-sitter-hl-face:constructor fontified t)) . 16264)) nil (25956 49439 116973 787000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16264) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16264) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . 16264) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16264)) nil (25956 49439 116972 668000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 16414)) nil (25956 49439 116971 123000) 0 nil])
([nil nil ((#(".Ja0" 0 1 (fontified t) 1 4 (face tree-sitter-hl-face:constructor fontified t)) . 16414)) nil (25956 49439 116970 204000) 0 nil])
([nil nil ((#("[0" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face tree-sitter-hl-face:number fontified t)) . 16414)) nil (25956 49439 116969 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16414) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16414)) nil (25956 49439 116968 321000) 0 nil])
([nil nil ((#("self" 0 4 (face tree-sitter-hl-face:keyword fontified t)) . 16552) (undo-tree-id337 . -4)) nil (25956 49439 116967 101000) 0 nil])
([nil nil ((#(".Ja0" 0 1 (fontified t) 1 4 (face tree-sitter-hl-face:constructor fontified t)) . 16552) (undo-tree-id336 . -4)) nil (25956 49439 116964 774000) 0 nil])
([nil nil ((#("[0" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face tree-sitter-hl-face:number fontified t)) . 16552) (undo-tree-id335 . -2)) nil (25956 49439 117464 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16552) (#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 16552)) nil (25956 49440 691859 960000) 0 nil] [nil nil ((#("] - self" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t) 1 2 (fontified t) 2 3 (face tree-sitter-hl-face:operator fontified t) 3 4 (fontified t) 4 8 (face tree-sitter-hl-face:keyword fontified t)) . 16552) (undo-tree-id334 . -8)) ((16552 . 16560)) (25956 49439 116955 691000) 0 nil])
([nil nil ((9115 . 9117) (t 25956 49440 762446 274000)) nil (25956 50377 460549 157000) 0 nil])
nil
([nil nil ((#("?" 0 1 (fontified t)) . -9115) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 9116) nil (25956 50377 460545 850000) 0 nil])
([nil nil ((9115 . 9116)) nil (25956 50377 460509 758000) 0 nil])
([nil nil ((apply 4 9147 9201 undo--wrap-and-run-primitive-undo 9147 9201 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -9186) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -9159) 9205))) nil (25956 50385 817818 455000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16136 . 16137) (nil fontified nil 16126 . 16137) (16126 . 16137) (t 25956 50385 890476 350000)) nil (25956 50448 221724 523000) 0 nil])
([nil nil ((16141 . 16143) (16140 . 16142) (#("(" 0 1 (fontified nil)) . -16140) (16137 . 16141)) nil (25956 50448 221722 418000) 0 nil])
([nil nil ((16142 . 16144)) nil (25956 50448 221720 352000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 16144) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 16144)) nil (25956 50448 221718 623000) 0 nil])
([nil nil ((16144 . 16147)) nil (25956 50448 221716 523000) 0 nil])
([nil nil ((16181 . 16182)) nil (25956 50448 221712 129000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16135) (undo-tree-id371 . -1) 16136 (t 25956 50448 290478 335000)) nil (25956 50457 491286 977000) 0 nil])
([nil nil ((16135 . 16136)) nil (25956 50457 491270 927000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16340 . 16341) (nil fontified nil 16340 . 16341) (nil fontified nil 16339 . 16340) (nil fontified nil 16337 . 16339) (nil fontified nil 16336 . 16337) (nil fontified nil 16332 . 16336) (nil fontified nil 16331 . 16332) (nil fontified nil 16330 . 16331) (nil fontified nil 16329 . 16330) (nil fontified nil 16328 . 16329) (nil fontified nil 16327 . 16328) (nil fontified nil 16326 . 16327) (nil fontified nil 16324 . 16326) (nil fontified nil 16323 . 16324) (nil fontified nil 16319 . 16323) (nil fontified nil 16318 . 16319) (nil fontified nil 16317 . 16318) (nil fontified nil 16316 . 16317) (nil fontified nil 16315 . 16316) (nil fontified nil 16314 . 16315) (nil fontified nil 16313 . 16314) (nil fontified nil 16310 . 16313) (nil fontified nil 16309 . 16310) (nil fontified nil 16305 . 16309) (nil fontified nil 16304 . 16305) (nil fontified nil 16303 . 16304) (nil fontified nil 16302 . 16303) (nil fontified nil 16299 . 16302) (nil fontified nil 16298 . 16299) (nil fontified nil 16297 . 16298) (nil fontified nil 16296 . 16297) (nil fontified nil 16295 . 16296) (nil fontified nil 16294 . 16295) (nil fontified nil 16293 . 16294) (nil fontified nil 16292 . 16293) (nil fontified nil 16289 . 16292) (nil fontified nil 16288 . 16289) (nil fontified nil 16284 . 16288) (nil fontified nil 16283 . 16284) (nil fontified nil 16282 . 16283) (nil fontified nil 16281 . 16282) (nil fontified nil 16280 . 16281) (nil fontified nil 16279 . 16280) (nil fontified nil 16278 . 16279) (nil fontified nil 16277 . 16278) (nil fontified nil 16271 . 16277) (nil fontified nil 16270 . 16271) (nil fontified nil 16266 . 16270) (nil fontified nil 16265 . 16266) (nil fontified nil 16264 . 16265) (nil fontified nil 16263 . 16264) (nil fontified nil 16262 . 16263) (nil fontified nil 16256 . 16262) (nil fontified nil 16255 . 16256) (nil fontified nil 16251 . 16255) (nil fontified nil 16250 . 16251) (nil fontified nil 16246 . 16250) (nil fontified nil 16245 . 16246) (nil fontified nil 16241 . 16245) (nil fontified nil 16240 . 16241) (nil fontified nil 16237 . 16240) (nil fontified nil 16236 . 16237) (nil fontified nil 16232 . 16236) (nil fontified nil 16216 . 16232) (16216 . 16341) (t 25956 50457 562478 631000)) nil (25956 50473 659255 835000) 0 nil])
([nil nil ((#("                self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = - self.ksi[0] * self.I0[0] * self.M0
" 0 16 (fontified t) 16 20 (face tree-sitter-hl-face:keyword fontified t) 20 21 (fontified t) 21 24 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 24 25 (fontified t) 25 29 (face tree-sitter-hl-face:property fontified t) 29 30 (fontified t) 30 34 (face tree-sitter-hl-face:property fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 39 (face tree-sitter-hl-face:keyword fontified t) 39 40 (fontified t) 40 46 (face tree-sitter-hl-face:property fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (face tree-sitter-hl-face:number fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (fontified t) 50 54 (face tree-sitter-hl-face:keyword fontified t) 54 55 (fontified t) 55 61 (face tree-sitter-hl-face:property fontified t) 61 62 (face (rainbow-delimiters-depth-2-face) fontified t) 62 63 (face tree-sitter-hl-face:number fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (face (rainbow-delimiters-depth-1-face) fontified t) 65 66 (fontified t) 66 67 (face tree-sitter-hl-face:operator fontified t) 67 68 (fontified t) 68 69 (face tree-sitter-hl-face:operator fontified t) 69 70 (fontified t) 70 74 (face tree-sitter-hl-face:keyword fontified t) 74 75 (fontified t) 75 78 (face tree-sitter-hl-face:property fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (face tree-sitter-hl-face:number fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (fontified t) 82 83 (face tree-sitter-hl-face:operator fontified t) 83 84 (fontified t) 84 88 (face tree-sitter-hl-face:keyword fontified t) 88 89 (fontified t) 89 91 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 91 92 (face (rainbow-delimiters-depth-1-face) fontified t) 92 93 (face tree-sitter-hl-face:number fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t) 95 96 (face tree-sitter-hl-face:operator fontified t) 96 97 (fontified t) 97 101 (face tree-sitter-hl-face:keyword fontified t) 101 102 (fontified t) 102 104 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 104 105 (fontified t)) . -16341) (undo-tree-id374 . -75) (undo-tree-id375 . -105) 16446) nil (25956 50473 659241 377000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16303) (undo-tree-id373 . -1) 16304) nil (25956 50473 659237 798000) 0 nil])
([nil nil ((16303 . 16304)) nil (25956 50473 659234 887000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -16303) (undo-tree-id372 . -1) 16304) nil (25956 50473 659232 652000) 0 nil])
([nil nil ((16303 . 16304)) nil (25956 50473 659218 732000) 0 nil])
([nil nil ((16342 . 16358) (#("            " 0 12 (fontified nil)) . 16342) (16341 . 16342) (t 25956 50473 730479 145000)) nil (25956 50496 996926 343000) 0 nil])
([nil nil ((nil fontified nil 16655 . 16656) (nil fontified nil 16654 . 16655) (nil fontified nil 16652 . 16654) (nil fontified nil 16651 . 16652) (nil fontified nil 16647 . 16651) (nil fontified nil 16646 . 16647) (nil fontified nil 16645 . 16646) (nil fontified nil 16644 . 16645) (nil fontified nil 16643 . 16644) (nil fontified nil 16642 . 16643) (nil fontified nil 16641 . 16642) (nil fontified nil 16639 . 16641) (nil fontified nil 16638 . 16639) (nil fontified nil 16634 . 16638) (nil fontified nil 16633 . 16634) (nil fontified nil 16632 . 16633) (nil fontified nil 16631 . 16632) (nil fontified nil 16630 . 16631) (nil fontified nil 16629 . 16630) (nil fontified nil 16628 . 16629) (nil fontified nil 16625 . 16628) (nil fontified nil 16624 . 16625) (nil fontified nil 16620 . 16624) (nil fontified nil 16619 . 16620) (nil fontified nil 16618 . 16619) (nil fontified nil 16617 . 16618) (nil fontified nil 16614 . 16617) (nil fontified nil 16613 . 16614) (nil fontified nil 16612 . 16613) (nil fontified nil 16611 . 16612) (nil fontified nil 16610 . 16611) (nil fontified nil 16609 . 16610) (nil fontified nil 16608 . 16609) (nil fontified nil 16607 . 16608) (nil fontified nil 16604 . 16607) (nil fontified nil 16603 . 16604) (nil fontified nil 16599 . 16603) (nil fontified nil 16598 . 16599) (nil fontified nil 16597 . 16598) (nil fontified nil 16596 . 16597) (nil fontified nil 16595 . 16596) (nil fontified nil 16594 . 16595) (nil fontified nil 16593 . 16594) (nil fontified nil 16592 . 16593) (nil fontified nil 16586 . 16592) (nil fontified nil 16585 . 16586) (nil fontified nil 16581 . 16585) (nil fontified nil 16580 . 16581) (nil fontified nil 16579 . 16580) (nil fontified nil 16578 . 16579) (nil fontified nil 16577 . 16578) (nil fontified nil 16571 . 16577) (nil fontified nil 16570 . 16571) (nil fontified nil 16566 . 16570) (nil fontified nil 16565 . 16566) (nil fontified nil 16561 . 16565) (nil fontified nil 16560 . 16561) (nil fontified nil 16556 . 16560) (nil fontified nil 16555 . 16556) (nil fontified nil 16552 . 16555) (nil fontified nil 16551 . 16552) (nil fontified nil 16547 . 16551) (nil fontified nil 16531 . 16547) (nil fontified nil 16529 . 16531) (nil fontified nil 16526 . 16529) (nil fontified nil 16525 . 16526) (nil fontified nil 16523 . 16525) (nil fontified nil 16522 . 16523) (nil fontified nil 16518 . 16522) (nil fontified nil 16517 . 16518) (nil fontified nil 16513 . 16517) (nil fontified nil 16512 . 16513) (nil fontified nil 16510 . 16512) (nil fontified nil 16498 . 16510) (nil fontified nil 16497 . 16498) (nil fontified nil 16496 . 16497) (nil fontified nil 16494 . 16496) (nil fontified nil 16493 . 16494) (nil fontified nil 16489 . 16493) (nil fontified nil 16488 . 16489) (nil fontified nil 16487 . 16488) (nil fontified nil 16486 . 16487) (nil fontified nil 16485 . 16486) (nil fontified nil 16484 . 16485) (nil fontified nil 16483 . 16484) (nil fontified nil 16481 . 16483) (nil fontified nil 16480 . 16481) (nil fontified nil 16476 . 16480) (nil fontified nil 16475 . 16476) (nil fontified nil 16474 . 16475) (nil fontified nil 16473 . 16474) (nil fontified nil 16472 . 16473) (nil fontified nil 16471 . 16472) (nil fontified nil 16470 . 16471) (nil fontified nil 16467 . 16470) (nil fontified nil 16466 . 16467) (nil fontified nil 16462 . 16466) (nil fontified nil 16461 . 16462) (nil fontified nil 16460 . 16461) (nil fontified nil 16459 . 16460) (nil fontified nil 16456 . 16459) (nil fontified nil 16455 . 16456) (nil fontified nil 16454 . 16455) (nil fontified nil 16453 . 16454) (nil fontified nil 16452 . 16453) (nil fontified nil 16451 . 16452) (nil fontified nil 16450 . 16451) (nil fontified nil 16449 . 16450) (nil fontified nil 16446 . 16449) (nil fontified nil 16445 . 16446) (nil fontified nil 16441 . 16445) (nil fontified nil 16440 . 16441) (nil fontified nil 16439 . 16440) (nil fontified nil 16438 . 16439) (nil fontified nil 16437 . 16438) (nil fontified nil 16436 . 16437) (nil fontified nil 16435 . 16436) (nil fontified nil 16434 . 16435) (nil fontified nil 16428 . 16434) (nil fontified nil 16427 . 16428) (nil fontified nil 16423 . 16427) (nil fontified nil 16422 . 16423) (nil fontified nil 16421 . 16422) (nil fontified nil 16420 . 16421) (nil fontified nil 16419 . 16420) (nil fontified nil 16413 . 16419) (nil fontified nil 16412 . 16413) (nil fontified nil 16408 . 16412) (nil fontified nil 16407 . 16408) (nil fontified nil 16403 . 16407) (nil fontified nil 16402 . 16403) (nil fontified nil 16398 . 16402) (nil fontified nil 16397 . 16398) (nil fontified nil 16394 . 16397) (nil fontified nil 16393 . 16394) (nil fontified nil 16389 . 16393) (nil fontified nil 16373 . 16389) (nil fontified nil 16371 . 16373) (nil fontified nil 16370 . 16371) (nil fontified nil 16369 . 16370) (nil fontified nil 16367 . 16369) (nil fontified nil 16366 . 16367) (nil fontified nil 16362 . 16366) (nil fontified nil 16361 . 16362) (nil fontified nil 16357 . 16361) (nil fontified nil 16356 . 16357) (nil fontified nil 16354 . 16356) (nil fontified nil 16342 . 16354) (16342 . 16656)) nil (25956 50496 996919 494000) 0 nil])
([nil nil ((#("            if self.PHI0 == 90:
                self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = + self.ksi[1] * self.I0[0] * self.M0
            if self.PHI0 == 270:
                self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = - self.ksi[1] * self.I0[0] * self.M0
" 0 12 (fontified t) 12 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (fontified t) 15 19 (face tree-sitter-hl-face:keyword fontified t) 19 20 (fontified t) 20 24 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 24 25 (fontified t) 25 27 (face tree-sitter-hl-face:operator fontified t) 27 28 (fontified t) 28 29 (face tree-sitter-hl-face:number fontified t) 29 30 (face tree-sitter-hl-face:number fontified t) 30 32 (fontified t) 32 48 (fontified t) 48 52 (face tree-sitter-hl-face:keyword fontified t) 52 53 (fontified t) 53 56 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 56 57 (fontified t) 57 61 (face tree-sitter-hl-face:property fontified t) 61 62 (fontified t) 62 66 (face tree-sitter-hl-face:property fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 71 (face tree-sitter-hl-face:keyword fontified t) 71 72 (fontified t) 72 78 (face tree-sitter-hl-face:property fontified t) 78 79 (face (rainbow-delimiters-depth-2-face) fontified t) 79 80 (face tree-sitter-hl-face:number fontified t) 80 81 (face (rainbow-delimiters-depth-2-face) fontified t) 81 82 (fontified t) 82 86 (face tree-sitter-hl-face:keyword fontified t) 86 87 (fontified t) 87 93 (face tree-sitter-hl-face:property fontified t) 93 94 (face (rainbow-delimiters-depth-2-face) fontified t) 94 95 (face tree-sitter-hl-face:number fontified t) 95 96 (face (rainbow-delimiters-depth-2-face) fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 98 (fontified t) 98 99 (face tree-sitter-hl-face:operator fontified t) 99 100 (fontified t) 100 101 (face tree-sitter-hl-face:operator fontified t) 101 102 (fontified t) 102 106 (face tree-sitter-hl-face:keyword fontified t) 106 107 (fontified t) 107 110 (face tree-sitter-hl-face:property fontified t) 110 111 (face (rainbow-delimiters-depth-1-face) fontified t) 111 112 (face tree-sitter-hl-face:number fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 114 (fontified t) 114 115 (face tree-sitter-hl-face:operator fontified t) 115 116 (fontified t) 116 120 (face tree-sitter-hl-face:keyword fontified t) 120 121 (fontified t) 121 123 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t) 124 125 (face tree-sitter-hl-face:number fontified t) 125 126 (face (rainbow-delimiters-depth-1-face) fontified t) 126 127 (fontified t) 127 128 (face tree-sitter-hl-face:operator fontified t) 128 129 (fontified t) 129 133 (face tree-sitter-hl-face:keyword fontified t) 133 134 (fontified t) 134 136 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 136 137 (fontified t) 137 149 (fontified t) 149 151 (face tree-sitter-hl-face:keyword fontified t) 151 152 (fontified t) 152 156 (face tree-sitter-hl-face:keyword fontified t) 156 157 (fontified t) 157 161 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 161 162 (fontified t) 162 163 (face tree-sitter-hl-face:operator fontified t) 163 164 (face tree-sitter-hl-face:operator fontified t) 164 165 (fontified t) 165 166 (face tree-sitter-hl-face:number fontified t) 166 167 (face tree-sitter-hl-face:number fontified t) 167 168 (face tree-sitter-hl-face:number fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 172 (fontified t) 172 186 (fontified t) 186 190 (face tree-sitter-hl-face:keyword fontified t) 190 191 (fontified t) 191 194 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 194 195 (fontified t) 195 199 (face tree-sitter-hl-face:property fontified t) 199 200 (fontified t) 200 204 (face tree-sitter-hl-face:property fontified t) 204 205 (face (rainbow-delimiters-depth-1-face) fontified t) 205 209 (face tree-sitter-hl-face:keyword fontified t) 209 210 (fontified t) 210 216 (face tree-sitter-hl-face:property fontified t) 216 217 (face (rainbow-delimiters-depth-2-face) fontified t) 217 218 (face tree-sitter-hl-face:number fontified t) 218 219 (face (rainbow-delimiters-depth-2-face) fontified t) 219 220 (fontified t) 220 224 (face tree-sitter-hl-face:keyword fontified t) 224 225 (fontified t) 225 231 (face tree-sitter-hl-face:property fontified t) 231 232 (face (rainbow-delimiters-depth-2-face) fontified t) 232 233 (face tree-sitter-hl-face:number fontified t) 233 234 (face (rainbow-delimiters-depth-2-face) fontified t) 234 235 (face (rainbow-delimiters-depth-1-face) fontified t) 235 236 (fontified t) 236 237 (face tree-sitter-hl-face:operator fontified t) 237 238 (fontified t) 238 239 (face tree-sitter-hl-face:operator fontified t) 239 240 (fontified t) 240 244 (face tree-sitter-hl-face:keyword fontified t) 244 245 (fontified t) 245 248 (face tree-sitter-hl-face:property fontified t) 248 249 (face (rainbow-delimiters-depth-1-face) fontified t) 249 250 (face tree-sitter-hl-face:number fontified t) 250 251 (face (rainbow-delimiters-depth-1-face) fontified t) 251 252 (fontified t) 252 253 (face tree-sitter-hl-face:operator fontified t) 253 254 (fontified t) 254 258 (face tree-sitter-hl-face:keyword fontified t) 258 259 (fontified t) 259 261 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 261 262 (face (rainbow-delimiters-depth-1-face) fontified t) 262 263 (face tree-sitter-hl-face:number fontified t) 263 264 (face (rainbow-delimiters-depth-1-face) fontified t) 264 265 (fontified t) 265 266 (face tree-sitter-hl-face:operator fontified t) 266 267 (fontified t) 267 271 (face tree-sitter-hl-face:keyword fontified t) 271 272 (fontified t) 272 274 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 274 275 (fontified t rear-nonsticky t)) . -16673) (undo-tree-id406 . -22) (undo-tree-id407 . -22) (undo-tree-id408 . -275) 16948) nil (25956 50496 996886 714000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16672) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) 16673) nil (25956 50496 996882 503000) 0 nil])
([nil nil ((#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16526) (undo-tree-id399 . -1) (#("8" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16527) (undo-tree-id400 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16528) (undo-tree-id401 . -1) 16529) nil (25956 50496 996877 301000) 0 nil])
([nil nil ((16526 . 16529)) nil (25956 50496 996873 11000) 0 nil])
([nil nil ((#("9" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16528) (undo-tree-id398 . -1) 16529) nil (25956 50496 996871 915000) 0 nil])
([nil nil ((16528 . 16529)) nil (25956 50496 996869 914000) 0 nil])
([nil nil ((16370 . 16371)) nil (25956 50496 996868 963000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16472) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) 16473) nil (25956 50496 996867 209000) 0 nil])
([nil nil ((16472 . 16473)) nil (25956 50496 996855 867000) 0 nil])
([nil nil ((#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -16630) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 16631) nil (25956 50496 996853 311000) 0 nil])
([nil nil ((16630 . 16631)) nil (25956 50496 996827 206000) 0 nil])
([nil nil ((16341 . 16357) (t 25956 50497 66479 888000)) nil (25956 50503 194846 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16353) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) 16357) nil (25956 50503 194841 171000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -9115) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -9116) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) 9117 (t 25956 50503 266480 85000)) nil (25956 50621 903505 851000) 0 nil])
([nil nil ((apply -4 9145 9216 undo--wrap-and-run-primitive-undo 9145 9216 ((9186 . 9188) (9157 . 9159) 9199))) nil (25956 50676 566790 396000) 0 nil])
([nil nil ((2736 . 2752) (#("        " 0 8 (fontified t)) . 2736) (undo-tree-id18 . -8) 2744 (t 25956 50676 638485 602000)) nil (25966 60958 710213 872000) 0 nil])
([nil nil ((2447 . 2449)) nil (25966 60958 710210 699000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2618) (undo-tree-id17 . -1) 2619) nil (25966 60958 710209 295000) 0 nil])
([nil nil ((2618 . 2619)) nil (25966 60958 710206 792000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2639) (undo-tree-id16 . -1) 2640) nil (25966 60958 710205 604000) 0 nil])
([nil nil ((2639 . 2640)) nil (25966 60958 710203 169000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2721) (undo-tree-id15 . -1) 2722) nil (25966 60958 710201 894000) 0 nil])
([nil nil ((2721 . 2722)) nil (25966 60958 710199 296000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2700) (undo-tree-id14 . -1) 2701) nil (25966 60958 710197 868000) 0 nil])
([nil nil ((2700 . 2701)) nil (25966 60958 710195 83000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2447) (undo-tree-id12 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2448) (undo-tree-id13 . -1) 2449) nil (25966 60958 710193 426000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2441) (undo-tree-id11 . -1) 2442) nil (25966 60958 710188 921000) 0 nil])
([nil nil ((2441 . 2442)) nil (25966 60958 710185 891000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2434) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 2435) nil (25966 60958 710182 400000) 0 nil])
([nil nil ((2434 . 2435)) nil (25966 60958 710146 667000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2487) (undo-tree-id32 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2488) (undo-tree-id33 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2489) (undo-tree-id34 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2490) (undo-tree-id35 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2491) (undo-tree-id36 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2492) (undo-tree-id37 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2493) (undo-tree-id38 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2494) (undo-tree-id39 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2495) (undo-tree-id40 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2496) (undo-tree-id41 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2497) (undo-tree-id42 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2498) (undo-tree-id43 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2499) (undo-tree-id44 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2500) (undo-tree-id45 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2501) (undo-tree-id46 . -1) 2502 (t 25966 61016 747669 646000)) nil (25966 60964 883003 807000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2486) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 2487) nil (25966 60964 882971 845000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2182 . 2183) (nil fontified nil 2135 . 2183) (2135 . 2183) (t 25966 61022 871669 841000)) nil (25966 61014 299816 68000) 0 nil])
([nil nil ((#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . 2135)) nil (25966 61014 299814 764000) 0 nil])
([nil nil ((#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -2180) (undo-tree-id65 . -1) 2181) nil (25966 61014 299814 20000) 0 nil])
([nil nil ((apply -2 2127 2184 undo--wrap-and-run-primitive-undo 2127 2184 ((2135 . 2137) 2181))) nil (25966 61014 299812 316000) 0 nil])
([nil nil ((2126 . 2135)) nil (25966 61014 299811 702000) 0 nil])
([nil nil ((2192 . 2200)) nil (25966 61014 299811 100000) 0 nil])
([nil nil ((#("A" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2178) (undo-tree-id64 . -1) 2179) nil (25966 61014 299810 163000) 0 nil])
([nil nil ((2178 . 2179)) nil (25966 61014 299808 479000) 0 nil])
([nil nil ((2128 . 2136) (#("        " 0 8 (fontified nil)) . 2127) (undo-tree-id63 . -8) (2135 . 2136)) nil (25966 61014 299807 475000) 0 nil])
([nil nil ((2136 . 2137)) nil (25966 61014 299805 678000) 0 nil])
([nil nil ((2137 . 2148)) nil (25966 61014 299804 977000) 0 nil])
([nil nil ((#("h" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2146) (undo-tree-id61 . -1) (#("c" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2147) (undo-tree-id62 . -1) 2148) nil (25966 61014 299803 897000) 0 nil])
([nil nil ((2146 . 2148)) nil (25966 61014 299801 224000) 0 nil])
([nil nil ((2213 . 2222)) nil (25966 61014 299800 555000) 0 nil])
([nil nil ((2222 . 2239)) nil (25966 61014 299799 966000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2237) (undo-tree-id59 . -1) (#("y" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2238) (undo-tree-id60 . -1) 2239) nil (25966 61014 299798 963000) 0 nil])
([nil nil ((2237 . 2240)) nil (25966 61014 299795 941000) 0 nil])
([nil nil ((#("y" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2239) (undo-tree-id58 . -1) 2240) nil (25966 61014 299794 995000) 0 nil])
([nil nil ((2239 . 2244)) nil (25966 61014 299793 68000) 0 nil])
([nil nil ((2244 . 2259)) nil (25966 61014 299792 110000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2258) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 2259) nil (25966 61014 299790 320000) 0 nil])
([nil nil ((2258 . 2260)) nil (25966 61014 299770 896000) 0 nil])
([nil nil ((2260 . 2269)) nil (25966 61014 299767 535000) 0 nil])
([nil nil ((7982 . 7990) (t 25966 61072 259671 413000)) nil (25966 61047 825062 321000) 0 nil])
([nil nil ((2581 . 2587) (t 25966 61105 795672 480000)) nil (25966 61098 915800 708000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2585) (undo-tree-id68 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2586) (undo-tree-id69 . -1) 2587) nil (25966 61098 915799 316000) 0 nil])
([nil nil ((2585 . 2594)) nil (25966 61098 915796 160000) 0 nil])
([nil nil ((2584 . 2586) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2584) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (2584 . 2585)) nil (25966 61098 915794 158000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2585)) nil (25966 61098 915778 758000) 0 nil])
([nil nil ((#("                # Wij = nn.Linear(self.Na[i_pop], self.Na[j_pop], bias=(i_pop==j_pop),
                #                 dtype=self.FLOAT, device=self.device)
" 0 16 (fontified t) 16 86 (face tree-sitter-hl-face:comment fontified t) 86 103 (fontified t) 103 158 (face tree-sitter-hl-face:comment fontified t) 158 159 (fontified t)) . -2354) (undo-tree-id88 . -159) 2513 (t 25966 61156 875674 106000)) nil (25966 61105 12444 804000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2353) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 2354) nil (25966 61105 12440 495000) 0 nil])
([nil nil ((#("                # Wij.weight.data = W0
                # self.Wab[i_pop, j_pop] = Wij
" 0 16 (fontified t) 16 38 (face tree-sitter-hl-face:comment fontified t) 38 39 (fontified t) 39 55 (fontified t) 55 85 (face tree-sitter-hl-face:comment fontified t) 85 86 (fontified t)) . -2436) (undo-tree-id70 . -38) (undo-tree-id71 . -39) (undo-tree-id72 . -39) (undo-tree-id73 . -39) (undo-tree-id74 . -39) (undo-tree-id75 . -39) (undo-tree-id76 . -39) (undo-tree-id77 . -39) (undo-tree-id78 . -86) (undo-tree-id79 . -39) (undo-tree-id80 . -39) (undo-tree-id81 . -39) (undo-tree-id82 . -86) (undo-tree-id83 . -86) (undo-tree-id84 . -39) (undo-tree-id85 . -86) 2522) nil (25966 61105 12431 771000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2634) (undo-tree-id92 . -4) 2638 (t 25966 61162 971674 300000)) nil (25966 61173 402939 735000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2630) (undo-tree-id91 . -4) 2634) nil (25966 61173 402934 921000) 0 nil])
([nil nil ((2686 . 2688)) nil (25966 61173 402930 156000) 0 nil])
([nil nil ((#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2686) (undo-tree-id89 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2687) (undo-tree-id90 . -1) 2688) nil (25966 61173 402923 567000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3806) (undo-tree-id93 . -12) 3818 (t 25966 61231 371676 476000)) nil (25966 61220 604081 359000) 0 nil])
([nil nil ((7529 . 7541) (t 25966 61278 571677 978000)) nil (25966 61406 8859 721000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7537) (undo-tree-id95 . -4) 7541) nil (25966 61406 8857 589000) 0 nil])
([nil nil ((7586 . 7594)) nil (25966 61406 8852 818000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7590) (undo-tree-id94 . -4) 7594) nil (25966 61406 8847 722000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2848) (undo-tree-id97 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2849) (undo-tree-id98 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2850) (undo-tree-id99 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2851) (undo-tree-id100 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2852) (undo-tree-id101 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2853) (undo-tree-id102 . -1) 2854 (t 25966 61463 979683 878000)) nil (25966 61481 888703 22000) 0 nil])
([nil nil ((#("            # self.Wab[i_pop, i_pop].bias.data.fill_(self.Ja0[i_pop])  
" 0 12 (fontified t) 12 71 (face tree-sitter-hl-face:comment fontified t) 71 72 (fontified t)) . -2777) (undo-tree-id96 . -72) 2849) nil (25966 61481 888683 158000) 0 nil])
([nil nil ((#("        # Create recurrent layer with nn.Linear
        # self.Wab = np.array([[None]*self.N_POP for _ in range(self.N_POP)])
" 0 8 (fontified t) 8 47 (face tree-sitter-hl-face:comment fontified t) 47 56 (fontified t) 56 125 (face tree-sitter-hl-face:comment fontified t) 125 126 (fontified t)) . -1860) (undo-tree-id107 . -48) (undo-tree-id108 . -48) (undo-tree-id109 . -126) 1986 (t 25966 61539 867686 293000)) nil (25966 61495 61336 723000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1859) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 1860) nil (25966 61495 61324 969000) 0 nil])
([nil nil ((3964 . 3968) (t 25966 61553 43686 713000)) nil (25966 61563 82441 272000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3964) (undo-tree-id110 . -4) 3968) nil (25966 61563 82439 9000) 0 nil])
([nil nil ((3964 . 3968)) nil (25966 61563 82423 566000) 0 nil])
([nil nil ((2995 . 2999) 2987 (t 25966 61621 51688 877000)) nil (25966 61689 757482 413000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2995) (undo-tree-id176 . -4) 2999) nil (25966 61689 757481 123000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2991) (undo-tree-id175 . -4) 2995) nil (25966 61689 757479 185000) 0 nil])
([nil nil ((219 . 224)) nil (25966 61689 757477 545000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -223) (undo-tree-id174 . -1) 224) nil (25966 61689 757476 604000) 0 nil])
([nil nil ((223 . 224)) nil (25966 61689 757474 712000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 223) (undo-tree-id173 . -1) (224 . 225)) nil (25966 61689 757473 291000) 0 nil])
([nil nil ((223 . 241)) nil (25966 61689 757471 458000) 0 nil])
([nil nil ((241 . 250)) nil (25966 61689 757470 561000) 0 nil])
([nil nil ((#("ç" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -249) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 250) nil (25966 61689 757468 968000) 0 nil])
([nil nil ((249 . 255)) nil (25966 61689 757451 702000) 0 nil])
([nil nil ((#("A" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -253) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -254) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 255) nil (25966 61689 757448 326000) 0 nil])
([nil nil ((253 . 255)) nil (25966 61689 757355 358000) 0 nil])
([nil nil ((#("L" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -254) (undo-tree-id185 . -1) 255 (t 25966 61747 727692 908000)) nil (25966 61699 805243 331000) 0 nil])
([nil nil ((#("O" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -251) (undo-tree-id182 . -1) (#("D" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -252) (undo-tree-id183 . -1) (#("E" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -253) (undo-tree-id184 . -1) 254) nil (25966 61699 805239 485000) 0 nil])
([nil nil ((251 . 255)) nil (25966 61699 805233 202000) 0 nil])
([nil nil ((#("d" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -252) (undo-tree-id179 . -1) (#("e" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -253) (undo-tree-id180 . -1) (#("l" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -254) (undo-tree-id181 . -1) 255) nil (25966 61699 805231 19000) 0 nil])
([nil nil ((252 . 253)) nil (25966 61699 805224 12000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -251) (undo-tree-id177 . -1) (#("o" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -252) (undo-tree-id178 . -1) 253) nil (25966 61699 805219 975000) 0 nil])
([nil nil ((251 . 255)) nil (25966 61699 805197 314000) 0 nil])
([nil nil ((3024 . 3036) (#("    " 0 4 (fontified t)) . 3024) (t 25966 61757 779693 228000)) nil (25966 61737 768294 744000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3032) (undo-tree-id186 . -4) 3036) nil (25966 61737 768286 196000) 0 nil])
([nil nil ((2787 . 2799) (#("        " 0 8 (fontified nil)) . 2786) (undo-tree-id188 . -8) (2794 . 2795) (t 25966 61795 755694 436000)) nil (25966 61744 77884 785000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2795) (undo-tree-id187 . -4) 2799) nil (25966 61744 77877 616000) 0 nil])
([nil nil ((2795 . 2812)) nil (25966 61744 77858 970000) 0 nil])
([nil nil ((#("        # fixing the seed
        new_seed = int(time.time())
        torch.manual_seed(new_seed)
        
        if torch.cuda.is_available():
            torch.cuda.manual_seed(new_seed)
            torch.cuda.manual_seed_all(new_seed)  # For all GPUs
" 0 8 (fontified t) 8 25 (face tree-sitter-hl-face:comment fontified t) 25 26 (fontified t) 26 34 (fontified t) 34 42 (face tree-sitter-hl-face:variable fontified t) 42 43 (fontified t) 43 44 (face tree-sitter-hl-face:operator fontified t) 44 45 (fontified t) 45 48 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 54 (fontified t) 54 58 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 58 59 (face (rainbow-delimiters-depth-2-face) fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t) 61 76 (fontified t) 76 87 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 96 (fontified t) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t) 97 115 (fontified t) 115 117 (face tree-sitter-hl-face:keyword fontified t) 117 124 (fontified t) 124 128 (face tree-sitter-hl-face:property fontified t) 128 129 (fontified t) 129 141 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 141 142 (face (rainbow-delimiters-depth-1-face) fontified t) 142 143 (face (rainbow-delimiters-depth-1-face) fontified t) 143 163 (fontified t) 163 167 (face tree-sitter-hl-face:property fontified t) 167 168 (fontified t) 168 179 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 179 180 (face (rainbow-delimiters-depth-1-face) fontified t) 180 188 (fontified t) 188 189 (face (rainbow-delimiters-depth-1-face) fontified t) 189 208 (fontified t) 208 212 (face tree-sitter-hl-face:property fontified t) 212 213 (fontified t) 213 228 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 228 229 (face (rainbow-delimiters-depth-1-face) fontified t) 229 237 (fontified t) 237 238 (face (rainbow-delimiters-depth-1-face) fontified t) 238 240 (fontified t) 240 254 (face tree-sitter-hl-face:comment fontified t) 254 255 (fontified t)) . 2787) (undo-tree-id189 . -255) (undo-tree-id190 . -144) (undo-tree-id191 . -255) (undo-tree-id192 . -26) (t 25966 61802 55694 637000)) nil (25966 61772 464490 867000) 0 nil])
([nil nil ((837 . 838)) nil (25966 61772 464473 963000) 0 nil])
([nil nil ((852 . 853) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 852) (851 . 852) (850 . 852) (#("(" 0 1 (fontified nil)) . -850) (838 . 851)) nil (25966 61772 464472 842000) 0 nil])
([nil nil ((853 . 858)) nil (25966 61772 464471 84000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1112 . 1113) (nil fontified nil 1112 . 1113) (nil fontified nil 1098 . 1112) (nil fontified nil 1096 . 1098) (nil fontified nil 1095 . 1096) (nil fontified nil 1087 . 1095) (nil fontified nil 1086 . 1087) (nil fontified nil 1071 . 1086) (nil fontified nil 1070 . 1071) (nil fontified nil 1066 . 1070) (nil fontified nil 1047 . 1066) (nil fontified nil 1046 . 1047) (nil fontified nil 1038 . 1046) (nil fontified nil 1037 . 1038) (nil fontified nil 1026 . 1037) (nil fontified nil 1025 . 1026) (nil fontified nil 1021 . 1025) (nil fontified nil 1001 . 1021) (nil fontified nil 1000 . 1001) (nil fontified nil 999 . 1000) (nil fontified nil 987 . 999) (nil fontified nil 986 . 987) (nil fontified nil 982 . 986) (nil fontified nil 975 . 982) (nil fontified nil 973 . 975) (nil fontified nil 955 . 973) (nil fontified nil 954 . 955) (nil fontified nil 946 . 954) (nil fontified nil 945 . 946) (nil fontified nil 934 . 945) (nil fontified nil 919 . 934) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 912 . 916) (nil fontified nil 907 . 912) (nil fontified nil 906 . 907) (nil fontified nil 903 . 906) (nil fontified nil 902 . 903) (nil fontified nil 901 . 902) (nil fontified nil 900 . 901) (nil fontified nil 892 . 900) (nil fontified nil 884 . 892) (nil fontified nil 883 . 884) (nil fontified nil 866 . 883) (nil fontified nil 858 . 866) (858 . 1113)) nil (25966 61772 464468 804000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -858) 854) nil (25966 61772 464459 421000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -880)) nil (25966 61772 464458 390000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -912)) nil (25966 61772 464457 655000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -944)) nil (25966 61772 464456 777000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -949)) nil (25966 61772 464455 822000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -987) 983) nil (25966 61772 464454 43000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1028)) nil (25966 61772 464449 517000) 0 nil])
([nil nil ((#("    # fixing the seed
" 0 4 (fontified t) 4 21 (face tree-sitter-hl-face:comment fontified t) 21 22 (fontified t)) . -854) (undo-tree-id193 . -4) (undo-tree-id194 . -22) 876 (t 25966 61830 443695 540000)) nil (25966 61776 457432 384000) 0 nil])
([nil nil ((842 . 844)) nil (25966 61776 457410 633000) 0 nil])
([nil nil ((1061 . 1069) (t 25966 61834 439695 667000)) nil (25966 61791 411325 711000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1065) (undo-tree-id265 . -4) 1069) nil (25966 61791 411324 712000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1061) (undo-tree-id264 . -4) 1065) nil (25966 61791 411322 762000) 0 nil])
([nil nil ((1061 . 1070)) nil (25966 61791 411320 965000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1066) (undo-tree-id263 . -4) 1070) nil (25966 61791 411319 874000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1061) (undo-tree-id262 . -1) 1062) nil (25966 61791 411318 33000) 0 nil])
([nil nil ((3014 . 3027)) nil (25966 61791 411316 256000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3023) (undo-tree-id261 . -4) 3027) nil (25966 61791 411315 105000) 0 nil])
([nil nil ((3023 . 3030)) nil (25966 61791 411312 971000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3029) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 3030) nil (25966 61791 411311 739000) 0 nil])
([nil nil ((3034 . 3036) (#("(" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -3034) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (3029 . 3035)) nil (25966 61791 411307 705000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -3033) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("(" 0 1 (face (rainbow-delimiters-unmatched-face) fontified nil)) . -3034) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . 3035)) nil (25966 61791 411292 990000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3035) (3034 . 3035) (3033 . 3035) (#("(" 0 1 (fontified nil)) . -3033) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (3033 . 3034)) nil (25966 61791 411236 920000) 0 nil])
([nil nil ((3014 . 3026) (t 25966 61849 387696 143000)) nil (25966 61794 497587 136000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3022) (undo-tree-id266 . -4) 3026) nil (25966 61794 497579 933000) 0 nil])
([nil nil ((#("        if self.SEED !=0 :
            torch.manual_seed(self.SEED)
            
            if torch.cuda.is_available():
                torch.cuda.manual_seed(self.SEED)
                torch.cuda.manual_seed_all(self.SEED)  # For all GPUs
" 0 8 (fontified t) 8 10 (face tree-sitter-hl-face:keyword fontified t) 10 11 (fontified t) 11 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (fontified t) 16 20 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 20 21 (fontified t) 21 23 (face tree-sitter-hl-face:operator fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 45 (fontified t) 45 56 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t) 57 61 (face tree-sitter-hl-face:keyword fontified t) 61 62 (fontified t) 62 66 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t) 67 93 (fontified t) 93 95 (face tree-sitter-hl-face:keyword fontified t) 95 102 (fontified t) 102 106 (face tree-sitter-hl-face:property fontified t) 106 107 (fontified t) 107 111 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 111 119 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (face (rainbow-delimiters-depth-1-face) fontified t) 121 135 (fontified t) 135 145 (fontified t) 145 149 (face tree-sitter-hl-face:property fontified t) 149 150 (fontified t) 150 161 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 166 (face tree-sitter-hl-face:keyword fontified t) 166 167 (fontified t) 167 171 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 171 172 (face (rainbow-delimiters-depth-1-face) fontified t) 172 195 (fontified t) 195 199 (face tree-sitter-hl-face:property fontified t) 199 200 (fontified t) 200 215 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 215 216 (face (rainbow-delimiters-depth-1-face) fontified t) 216 220 (face tree-sitter-hl-face:keyword fontified t) 220 221 (fontified t) 221 225 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 225 226 (face (rainbow-delimiters-depth-1-face) fontified t) 226 228 (fontified t) 228 242 (face tree-sitter-hl-face:comment fontified t) 242 243 (fontified t)) . 1873) (undo-tree-id268 . -243) 2116 (t 25966 61852 483696 241000)) nil (25966 61825 915038 50000) 0 nil])
([nil nil ((837 . 838)) nil (25966 61825 915035 97000) 0 nil])
([nil nil ((838 . 839)) nil (25966 61825 915033 917000) 0 nil])
([nil nil ((852 . 853) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 852) (851 . 852) (850 . 852) (#("(" 0 1 (fontified nil)) . -850) (838 . 851)) nil (25966 61825 915032 535000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -852) (undo-tree-id267 . -1) 853) nil (25966 61825 915029 897000) 0 nil])
([nil nil ((852 . 853)) nil (25966 61825 915018 600000) 0 nil])
([nil nil ((853 . 858)) nil (25966 61825 915017 499000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1100 . 1101) (nil fontified nil 1100 . 1101) (nil fontified nil 1086 . 1100) (nil fontified nil 1084 . 1086) (nil fontified nil 1083 . 1084) (nil fontified nil 1079 . 1083) (nil fontified nil 1078 . 1079) (nil fontified nil 1074 . 1078) (nil fontified nil 1073 . 1074) (nil fontified nil 1058 . 1073) (nil fontified nil 1057 . 1058) (nil fontified nil 1053 . 1057) (nil fontified nil 1030 . 1053) (nil fontified nil 1029 . 1030) (nil fontified nil 1025 . 1029) (nil fontified nil 1024 . 1025) (nil fontified nil 1020 . 1024) (nil fontified nil 1019 . 1020) (nil fontified nil 1008 . 1019) (nil fontified nil 1007 . 1008) (nil fontified nil 1003 . 1007) (nil fontified nil 993 . 1003) (nil fontified nil 979 . 993) (nil fontified nil 978 . 979) (nil fontified nil 977 . 978) (nil fontified nil 969 . 977) (nil fontified nil 965 . 969) (nil fontified nil 964 . 965) (nil fontified nil 960 . 964) (nil fontified nil 953 . 960) (nil fontified nil 951 . 953) (nil fontified nil 925 . 951) (nil fontified nil 924 . 925) (nil fontified nil 920 . 924) (nil fontified nil 919 . 920) (nil fontified nil 915 . 919) (nil fontified nil 914 . 915) (nil fontified nil 903 . 914) (nil fontified nil 882 . 903) (nil fontified nil 881 . 882) (nil fontified nil 879 . 881) (nil fontified nil 878 . 879) (nil fontified nil 874 . 878) (nil fontified nil 873 . 874) (nil fontified nil 869 . 873) (nil fontified nil 868 . 869) (nil fontified nil 866 . 868) (nil fontified nil 858 . 866) (858 . 1101)) nil (25966 61825 915014 399000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -858) 854) nil (25966 61825 915002 942000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -885) 881) nil (25966 61825 915001 469000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -922)) nil (25966 61825 915000 33000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -931)) nil (25966 61825 914998 856000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -973) 969) nil (25966 61825 914997 426000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1019)) nil (25966 61825 914995 847000) 0 nil])
([nil nil ((nil fontified t 1031 . 1035) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 1031 . 1035) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -1031) (1040 . 1044) (nil fontified t 986 . 990) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 986 . 990) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -986) (995 . 999) (nil fontified t 898 . 902) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 898 . 902) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -898) (907 . 911) (nil fontified t 861 . 865) (nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) 861 . 865) (#("self.SEED" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (fontified t) 5 9 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -861) (870 . 874)) nil (25966 61825 914992 809000) 0 nil])
([nil nil ((851 . 855)) nil (25966 61825 914984 775000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2093) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 2094 (t 25966 61883 891697 241000)) nil (25966 61836 767629 640000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2129 . 2130) (nil fontified nil 2129 . 2130) (nil fontified nil 2128 . 2129) (nil fontified nil 2127 . 2128) (nil fontified nil 2123 . 2127) (nil fontified nil 2122 . 2123) (nil fontified nil 2114 . 2122) (nil fontified nil 2113 . 2114) (nil fontified nil 2110 . 2113) (2110 . 2130)) nil (25966 61836 767621 669000) 0 nil])
([nil nil ((2110 . 2118)) nil (25966 61836 767617 739000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2118) (#("f" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2118) (#("e" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2118) (#("d" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . 2118)) nil (25966 61836 767615 126000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2132) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 2133) nil (25966 61836 767608 842000) 0 nil])
([nil nil ((2132 . 2141) (t 25966 61894 747697 586000)) nil (25966 61839 612702 745000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . 2093) (undo-tree-id284 . -8) (2101 . 2102) (t 25966 61897 587697 677000)) nil (25966 61846 595720 788000) 0 nil])
([nil nil ((2102 . 2123)) nil (25966 61846 595708 103000) 0 nil])
([nil nil ((2123 . 2129)) nil (25966 61846 595704 246000) 0 nil])
([nil nil ((2154 . 2162) (#("        " 0 8 (fontified nil)) . 2153) (undo-tree-id451 . -8) (2161 . 2162) (t 25966 61904 571697 899000)) nil (25966 61873 666919 710000) 0 nil])
([nil nil ((2162 . 2169)) nil (25966 61873 666917 730000) 0 nil])
([nil nil ((#("d" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2164) (undo-tree-id446 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2165) (undo-tree-id447 . -1) (#("f" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2166) (undo-tree-id448 . -1) (#("i" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2167) (undo-tree-id449 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2168) (undo-tree-id450 . -1) 2169) nil (25966 61873 666916 403000) 0 nil])
([nil nil ((2164 . 2175)) nil (25966 61873 666910 488000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2174) (undo-tree-id445 . -1) 2175) nil (25966 61873 666909 637000) 0 nil])
([nil nil ((2174 . 2188)) nil (25966 61873 666907 960000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2187) (undo-tree-id444 . -1) 2188) nil (25966 61873 666907 34000) 0 nil])
([nil nil ((2187 . 2190)) nil (25966 61873 666905 334000) 0 nil])
([nil nil ((#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2188) (undo-tree-id442 . -1) (#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2189) (undo-tree-id443 . -1) 2190) nil (25966 61873 666904 266000) 0 nil])
([nil nil ((2321 . 2329)) nil (25966 61873 666901 80000) 0 nil])
([nil nil ((#("        # In pytorch
        # y_j = \\sum/{i=1}^{N} (x_i \\cdot W/{ij}) + b_j
        # so Wij means i presynaptic and j postsynaptic
" 0 8 (fontified t) 8 20 (face tree-sitter-hl-face:comment fontified t) 20 21 (fontified t) 21 29 (fontified t) 29 31 (face tree-sitter-hl-face:comment fontified t) 31 34 (face tree-sitter-hl-face:comment fontified t) 34 35 (face tree-sitter-hl-face:comment fontified t) 35 36 (face tree-sitter-hl-face:comment fontified t) 36 41 (face tree-sitter-hl-face:comment fontified t) 41 42 (face tree-sitter-hl-face:comment fontified t) 42 43 (face tree-sitter-hl-face:comment fontified t) 43 44 (face tree-sitter-hl-face:comment fontified t) 44 45 (face tree-sitter-hl-face:comment fontified t) 45 46 (face tree-sitter-hl-face:comment fontified t) 46 47 (face tree-sitter-hl-face:comment fontified t) 47 48 (face tree-sitter-hl-face:comment fontified t) 48 49 (face tree-sitter-hl-face:comment fontified t) 49 50 (face tree-sitter-hl-face:comment fontified t) 50 51 (face tree-sitter-hl-face:comment fontified t) 51 52 (face tree-sitter-hl-face:comment fontified t) 52 53 (face tree-sitter-hl-face:comment fontified t) 53 64 (face tree-sitter-hl-face:comment fontified t) 64 65 (face tree-sitter-hl-face:comment fontified t) 65 66 (face tree-sitter-hl-face:comment fontified t) 66 68 (face tree-sitter-hl-face:comment fontified t) 68 69 (face tree-sitter-hl-face:comment fontified t) 69 70 (face tree-sitter-hl-face:comment fontified t) 70 71 (face tree-sitter-hl-face:comment fontified t) 71 72 (face tree-sitter-hl-face:comment fontified t) 72 76 (face tree-sitter-hl-face:comment fontified t) 76 77 (fontified t rear-nonsticky t) 77 85 (fontified t) 85 132 (face tree-sitter-hl-face:comment fontified t) 132 133 (fontified t)) . 2330) (undo-tree-id439 . -29) (undo-tree-id440 . -21) (undo-tree-id441 . -133) 2463) nil (25966 61873 666899 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2321 . 2322) (nil fontified nil 2321 . 2322) (nil fontified nil 2274 . 2321) (nil fontified nil 2266 . 2274) (nil fontified nil 2265 . 2266) (nil fontified nil 2261 . 2265) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2255 . 2257) (nil fontified nil 2254 . 2255) (nil fontified nil 2253 . 2254) (nil fontified nil 2242 . 2253) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2225 . 2230) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2220 . 2223) (nil fontified nil 2218 . 2220) (nil fontified nil 2210 . 2218) (nil fontified nil 2209 . 2210) (nil fontified nil 2197 . 2209) (nil fontified nil 2189 . 2197) (2189 . 2322)) nil (25966 61873 668426 395000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2209) (#("
" 0 1 (fontified t)) . 2209)) nil (25966 61878 384292 382000) 0 nil] [nil nil ((#("I" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2199) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2200) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2201) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("p" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2202) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("y" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2203) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2204) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2205) (undo-tree-id435 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2206) (undo-tree-id436 . -1) (#("c" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2207) (undo-tree-id437 . -1) (#("h" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2208) (undo-tree-id438 . -1) 2209) ((2199 . 2209)) (25966 61873 666879 647000) 0 nil])
([nil nil ((2311 . 2320)) nil (25966 61878 384281 528000) 0 nil])
nil
([nil nil ((2164 . 2167) (t 25966 61936 371698 911000)) nil (25966 61892 648215 991000) 0 nil])
([nil nil ((2173 . 2177)) nil (25966 61892 648214 596000) 0 nil])
([nil nil ((2195 . 2209)) nil (25966 61892 648213 292000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2206) (undo-tree-id509 . -1) (#("n" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2207) (undo-tree-id510 . -1) (#("a" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2208) (undo-tree-id511 . -1) 2209) nil (25966 61892 648211 541000) 0 nil])
([nil nil ((2206 . 2211)) nil (25966 61892 648205 911000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2209) (undo-tree-id507 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2210) (undo-tree-id508 . -1) 2211) nil (25966 61892 648204 46000) 0 nil])
([nil nil ((2211 . 2213) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2211) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (2209 . 2212)) nil (25966 61892 648198 802000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2210) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2211) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2212)) nil (25966 61892 648189 582000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . 2212) (2211 . 2212) (2210 . 2212) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2210) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (2210 . 2211)) nil (25966 61892 648117 570000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2485) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 2486 (t 25966 61950 631699 365000)) nil (25966 61910 639308 811000) 0 nil])
([nil nil ((2233 . 2234)) nil (25966 61910 639292 331000) 0 nil])
([nil nil ((#("        # print(self.Wab.bias.data.shape)
" 0 8 (fontified t) 8 41 (face tree-sitter-hl-face:comment fontified t) 41 42 (fontified t)) . -2920) (undo-tree-id517 . -41) (undo-tree-id518 . -42) (undo-tree-id519 . -42) (undo-tree-id520 . -42) (undo-tree-id521 . -42) (undo-tree-id522 . -42) (undo-tree-id523 . -42) (undo-tree-id524 . -42) (undo-tree-id525 . -42) (undo-tree-id526 . -42) (undo-tree-id527 . -42) (undo-tree-id528 . -42) (undo-tree-id529 . -42) (undo-tree-id530 . -42) 2962 (t 25966 61968 619699 937000)) nil (25966 61919 132877 932000) 0 nil])
([nil nil ((3286 . 3294) (#("        " 0 8 (fontified nil)) . 3285) (undo-tree-id537 . -8) (3293 . 3294) (t 25966 61977 119700 208000)) nil (25966 61939 871101 245000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3338 . 3339) (nil fontified nil 3335 . 3339) (nil fontified nil 3334 . 3335) (nil fontified nil 3333 . 3334) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3329 . 3331) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3316 . 3327) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3311 . 3312) (nil fontified nil 3310 . 3311) (nil fontified nil 3309 . 3310) (nil fontified nil 3308 . 3309) (nil fontified nil 3307 . 3308) (nil fontified nil 3306 . 3307) (nil fontified nil 3305 . 3306) (nil fontified nil 3304 . 3305) (nil fontified nil 3299 . 3304) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3294 . 3297) (3294 . 3339)) nil (25966 61939 871096 678000) 0 nil])
([nil nil ((3294 . 3296) (#("{" 0 1 (fontified nil)) . -3294) (3294 . 3295)) nil (25966 61939 871088 206000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3294) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3295)) nil (25966 61939 871084 317000) 0 nil])
([nil nil ((3294 . 3296)) nil (25966 62108 229483 343000) 0 nil])
([nil nil ((3377 . 3386)) ((#("
        " 0 9 (fontified t)) . 3377)) (25966 62109 21906 623000) 0 nil])
([nil nil ((#("                " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 2578) (undo-tree-id844 . -16) (undo-tree-id845 . -16) (undo-tree-id846 . -16) (undo-tree-id847 . -16) (undo-tree-id848 . -16) (undo-tree-id849 . -16) (undo-tree-id850 . -16) (undo-tree-id851 . -16) (undo-tree-id852 . -16) (undo-tree-id853 . -16)) ((2578 . 2594)) (25966 62109 339161 921000) 0 nil])
([nil nil ((2630 . 2632)) ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2630) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2)) (25966 62109 872177 319000) 0 nil])
([nil nil ((#(".T" 0 1 (fontified t) 1 2 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . 2630) (undo-tree-id854 . -2)) ((2630 . 2632)) (25966 62110 374163 738000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2617) (undo-tree-id855 . -1)) ((2617 . 2618)) (25966 62110 803737 734000) 0 nil])
([nil nil ((2617 . 2618)) ((#("i" 0 1 (fontified t)) . 2617)) (25966 62111 544773 868000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2624)) ((2624 . 2625)) (25966 62114 198990 129000) 0 nil])
([nil nil ((2624 . 2625)) ((#("j" 0 1 (fontified t)) . 2624)) (25966 62115 3408 1000) 0 nil])
([nil nil ((2630 . 2632)) nil (25966 62121 266303 635000) 0 nil] [nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face))) . 7713)) ((7713 . 7714)) (25966 62112 675489 360000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -2630) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -2631) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 2632) nil (25966 62121 266299 708000) 0 nil])
([nil nil ((7713 . 7715) (#("[" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . -7713) (7713 . 7714)) ((#("[" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified nil)) . 7713) (7713 . 7714) (#("[]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7713) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2)) (25966 62104 524489 945000) 0 nil])
([nil nil ((2630 . 2632)) nil (25966 62121 266261 9000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7714) (undo-tree-id584 . -1) 7715) ((7714 . 7715)) (25966 62104 374748 231000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2637) (undo-tree-id875 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2638) (undo-tree-id876 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2639) (undo-tree-id877 . -1) 2640 (t 25966 62179 251706 640000)) nil (25966 62134 289192 990000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -7714) (undo-tree-id583 . -1) 7715) ((7714 . 7715)) (25966 62104 219217 482000) 0 nil])
([nil nil ((2637 . 2639)) nil (25966 62134 289186 930000) 0 nil])
([nil nil ((7714 . 7715)) ((#("j" 0 1 (fontified t)) . 7714)) (25966 62104 59897 626000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2642) (undo-tree-id873 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2643) (undo-tree-id874 . -1) 2644) nil (25966 62134 289185 265000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7742) (undo-tree-id582 . -1) 7743) ((7742 . 7743)) (25966 62103 902035 737000) 0 nil])
([nil nil ((2642 . 2645)) nil (25966 62134 289170 881000) 0 nil])
([nil nil ((7742 . 7743)) ((#("i" 0 1 (fontified t)) . 7742)) (25966 62103 736108 166000) 0 nil])
([nil nil ((2646 . 2648)) nil (25966 62134 289169 632000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7770) (undo-tree-id579 . -1) (undo-tree-id581 . -1) 7771) ((7770 . 7771)) (25966 62103 570582 634000) 0 nil])
([nil nil ((#(")" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . 2654) (2653 . 2654) (2652 . 2654) (#("(" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2652) (2648 . 2653)) nil (25966 62134 289166 503000) 0 nil])
([nil nil ((7770 . 7771)) ((#("o" 0 1 (fontified t)) . 7770) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1)) (25966 62103 396945 74000) 0 nil])
([nil nil ((2653 . 2662)) nil (25966 62134 289160 357000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -7770) (undo-tree-id569 . -1) (undo-tree-id571 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id576 . -1) (undo-tree-id578 . -1) 7771) ((7770 . 7771)) (25966 62103 237959 836000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2637) (undo-tree-id913 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2638) (undo-tree-id914 . -1) 2639 (t 25966 62192 275707 54000)) nil (25966 62145 474233 529000) 0 nil])
([nil nil ((7770 . 7771)) ((#("i" 0 1 (fontified t)) . 7770)) (25966 62103 72993 300000) 0 nil])
([nil nil ((2637 . 2640)) nil (25966 62145 474230 108000) 0 nil])
([nil nil ((7722 . 7723) (7721 . 7723) (#("{" 0 1 (fontified nil)) . -7721) (7720 . 7722) (t 25966 62048 895702 492000)) ((#(" {" 0 1 (fontified nil) 1 2 (fontified nil)) . 7720) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (7721 . 7722) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 7721) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#(" " 0 1 (fontified t)) . 7722) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1)) (25966 62102 914300 651000) 0 nil])
([nil nil ((#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2643) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2643) (#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2643)) nil (25966 62145 474228 757000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7721) (undo-tree-id588 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7722) (#(" " 0 1 (fontified t)) . -7722) (undo-tree-id589 . -1) 7723) ((7722 . 7723) (7721 . 7723)) (25966 62102 749333 255000) 0 nil])
([nil nil ((2643 . 2645)) nil (25966 62145 474227 460000) 0 nil])
([nil nil ((7721 . 7727)) ((#("# post" 0 6 (face tree-sitter-hl-face:comment fontified t)) . 7721)) (25966 62102 598462 246000) 0 nil])
([nil nil ((#("o" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2654) (undo-tree-id910 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2655) (undo-tree-id911 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2656) (undo-tree-id912 . -1) 2657) nil (25966 62145 474225 986000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -7754) (undo-tree-id587 . -1) 7755) ((7754 . 7755)) (25966 62102 445689 206000) 0 nil])
([nil nil ((2654 . 2656)) nil (25966 62145 474220 532000) 0 nil])
([nil nil ((7756 . 7758) (#("{" 0 1 (fontified nil)) . -7756) (7754 . 7757)) ((#("] {" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 7754) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -2) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (7756 . 7757) (#("{}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7756) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1)) (25966 62102 284566 554000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2659) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2660) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) 2661) nil (25966 62145 474217 207000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -7756) (undo-tree-id586 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7757)) ((7756 . 7758)) (25966 62102 125374 572000) 0 nil])
([nil nil ((2659 . 2662)) nil (25966 62145 474167 922000) 0 nil])
([nil nil ((7756 . 7761)) ((#("# pre" 0 5 (face tree-sitter-hl-face:comment fontified t)) . 7756) (undo-tree-id694 . -5) (undo-tree-id695 . -5) (undo-tree-id696 . -5) (undo-tree-id697 . -5) (undo-tree-id698 . -5) (undo-tree-id699 . -5) (undo-tree-id700 . -5) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -5) (undo-tree-id704 . -5) (undo-tree-id705 . -5) (undo-tree-id706 . -5) (undo-tree-id707 . -5) (undo-tree-id708 . -5) (undo-tree-id709 . -5) (undo-tree-id710 . -5) (undo-tree-id711 . -5) (undo-tree-id712 . -5) (undo-tree-id713 . -5) (undo-tree-id714 . -5) (undo-tree-id715 . -5) (undo-tree-id716 . -5)) (25966 62101 974970 372000) 0 nil])
([nil nil ((2153 . 2161) (t 25966 62203 459707 410000)) nil (25966 62154 826730 56000) 0 nil])
([nil nil ((7761 . 7763) (t 25966 62059 307702 823000)) ((#("si" 0 1 (face tree-sitter-hl-face:comment fontified t) 1 2 (face tree-sitter-hl-face:comment fontified t)) . 7761) (undo-tree-id681 . -1) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2)) (25966 62101 818164 779000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2147) (undo-tree-id915 . -1) (#("e" 0 1 (fontified t)) . -2148) (undo-tree-id916 . -1) (#("e" 0 1 (fontified t)) . -2149) (undo-tree-id917 . -1) (#("d" 0 1 (fontified t)) . -2150) (undo-tree-id918 . -1) 2151 (t 25966 62212 819707 708000)) nil (25966 62159 68849 577000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -7762) (undo-tree-id591 . -1) 7763) ((7762 . 7763)) (25966 62101 659603 256000) 0 nil])
([nil nil ((2147 . 2156)) nil (25966 62159 68828 163000) 0 nil])
([nil nil ((7762 . 7769)) ((#("ynaptic" 0 7 (face tree-sitter-hl-face:comment fontified t)) . 7762)) (25966 62101 501568 84000) 0 nil])
([nil nil ((14532 . 14540) (t 25966 62217 55707 843000)) nil (25966 62203 246913 366000) 0 nil])
([nil nil ((7727 . 7728)) ((#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 7727) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1)) (25966 62101 394586 235000) 0 nil])
([nil nil ((17330 . 17331) (t 25966 62261 243709 249000)) nil (25966 62237 941208 298000) 0 nil])
([nil nil ((7728 . 7729)) ((#("u" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 7728) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1)) (25966 62101 198012 331000) 0 nil])
([nil nil ((#("<" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -17330) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) 17331) nil (25966 62237 941200 525000) 0 nil])
([nil nil ((#("u" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -7728) (undo-tree-id590 . -1) 7729) ((7728 . 7729)) (25966 62101 48707 671000) 0 nil])
([nil nil ((17330 . 17334) (t 25966 62295 939710 353000)) nil (25966 62241 882163 122000) 0 nil])
([nil nil ((7728 . 7735)) ((#("ynaptic" 0 7 (face tree-sitter-hl-face:comment fontified t)) . 7728)) (25966 62100 886615 316000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -17330) (undo-tree-id939 . -4) 17334) nil (25966 62241 882156 461000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -8833) (undo-tree-id613 . -1) 8834 (t 25966 62069 839703 158000)) ((8833 . 8834)) (25966 62100 835518 897000) 0 nil])
([nil nil ((#("# class Activation(torch.nn.Module):
#     def __init__(self, func_name='erf'):
#         super().__init__()
#         self.func_name = func_name
        
#     def forward(self, x, THRESH=15):
#         if self.func_name == 'erf':
#             return THRESH * 0.5 / (1.0 + torch.erf(x / np.sqrt(2.0)))
#         elif self.func_name == 'relu':
#             return nn.ReLU()(x - THRESH)
#         else:
#             raise ValueError('Invalid function name')
" 0 36 (face tree-sitter-hl-face:comment fontified t) 36 37 (fontified t) 37 79 (face tree-sitter-hl-face:comment fontified t) 79 80 (fontified t) 80 108 (face tree-sitter-hl-face:comment fontified t) 108 109 (fontified t) 109 145 (face tree-sitter-hl-face:comment fontified t) 145 155 (fontified t) 155 193 (face tree-sitter-hl-face:comment fontified t) 193 194 (fontified t) 194 231 (face tree-sitter-hl-face:comment fontified t) 231 232 (fontified t) 232 303 (face tree-sitter-hl-face:comment fontified t) 303 304 (fontified t) 304 344 (face tree-sitter-hl-face:comment fontified t) 344 345 (fontified t) 345 387 (face tree-sitter-hl-face:comment fontified t) 387 388 (fontified t) 388 403 (face tree-sitter-hl-face:comment fontified t) 403 404 (fontified t) 404 459 (face tree-sitter-hl-face:comment fontified t) 459 460 (fontified t)) . -377) (undo-tree-id967 . -460) (undo-tree-id968 . -460) (undo-tree-id969 . -460) (undo-tree-id970 . -404) (undo-tree-id971 . -460) (undo-tree-id972 . -460) (undo-tree-id973 . -460) (undo-tree-id974 . -460) (undo-tree-id975 . -460) (undo-tree-id976 . -460) (undo-tree-id977 . -460) (undo-tree-id978 . -460) (undo-tree-id979 . -460) (undo-tree-id980 . -460) (undo-tree-id981 . -460) 837 (t 25966 62299 875710 478000)) nil (25966 62256 236203 766000) 0 nil])
([nil nil ((8833 . 8834)) ((#("j" 0 1 (fontified t)) . 8833)) (25966 62100 584639 788000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -376) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) 377) nil (25966 62256 236175 30000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 8840)) ((8840 . 8841)) (25966 62100 429684 53000) 0 nil])
([nil nil ((2217 . 2233) (#("                " 0 5 (fontified nil) 5 6 (fontified nil) 6 16 (fontified nil)) . 2216) (undo-tree-id993 . -16) (2232 . 2233) (t 25966 62314 231710 935000)) nil (25966 62416 60314 106000) 0 nil])
([nil nil ((8840 . 8841)) ((#("i" 0 1 (fontified t)) . 8840)) (25966 62100 275857 874000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 2240) (2239 . 2240) (2238 . 2240) (#("(" 0 1 (fontified nil)) . -2238) (2233 . 2239)) nil (25966 62416 60309 705000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9002) (undo-tree-id593 . -1) (undo-tree-id595 . -1) (undo-tree-id597 . -1) (undo-tree-id599 . -1) (undo-tree-id601 . -1) (undo-tree-id603 . -1) (undo-tree-id605 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id610 . -1) (undo-tree-id612 . -1) 9003) ((9002 . 9003)) (25966 62100 113631 57000) 0 nil])
([nil nil ((2239 . 2245)) nil (25966 62416 60307 192000) 0 nil])
([nil nil ((9002 . 9003)) ((#("i" 0 1 (fontified t)) . 9002)) (25966 62099 971580 458000) 0 nil])
([nil nil ((#("j" 0 1 (face tree-sitter-hl-face:property fontified t)) . -2244) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) 2245) nil (25966 62416 60303 563000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9198) (undo-tree-id619 . -1) 9199 (t 25966 62084 555703 626000)) ((9198 . 9199)) (25966 62099 836216 773000) 0 nil])
([nil nil ((2244 . 2247)) nil (25966 62416 60251 911000) 0 nil])
([nil nil ((9198 . 9199)) ((#("j" 0 1 (fontified t)) . 9198)) (25966 62099 672700 85000) 0 nil])
([nil nil ((2248 . 2265) (t 25966 62474 75716 22000)) nil (25966 62418 25482 464000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9205) (undo-tree-id618 . -1) 9206) ((9205 . 9206)) (25966 62099 530833 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2215 . 2216) (nil fontified nil 2215 . 2216) (nil fontified nil 2204 . 2215) (nil fontified nil 2192 . 2204) (nil fontified nil 2188 . 2192) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2177 . 2181) (nil fontified nil 2176 . 2177) (nil fontified nil 2170 . 2176) (nil fontified nil 2169 . 2170) (nil fontified nil 2168 . 2169) (nil fontified nil 2157 . 2168) (nil fontified nil 2156 . 2157) (nil fontified nil 2152 . 2156) (nil fontified nil 2151 . 2152) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2147 . 2149) (nil fontified nil 2131 . 2147) (2131 . 2216) (t 25966 62476 39716 84000)) nil (25966 62515 923780 458000) 0 nil])
([nil nil ((9205 . 9206)) ((#("i" 0 1 (fontified t)) . 9205)) (25966 62099 393291 90000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2182) (undo-tree-id994 . -1) (#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -2183) (undo-tree-id995 . -1) 2184) nil (25966 62515 923762 985000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9682) (undo-tree-id617 . -1) 9683) ((9682 . 9683)) (25966 62099 229924 59000) 0 nil])
([nil nil ((2230 . 2232) (t 25966 62574 15719 202000)) nil (25966 62523 613208 705000) 0 nil])
([nil nil ((9682 . 9683)) ((#("j" 0 1 (fontified t)) . 9682)) (25966 62099 189297 438000) 0 nil])
([nil nil ((2301 . 2317) (t 25966 62581 743719 448000)) nil (25966 62526 739887 228000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9689) (undo-tree-id616 . -1) 9690) ((9689 . 9690)) (25966 62098 938480 204000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2300) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) 2301) nil (25966 62526 739878 765000) 0 nil])
([nil nil ((9689 . 9690)) ((#("i" 0 1 (fontified t)) . 9689)) (25966 62098 797447 117000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2169) (undo-tree-id1000 . -1) 2170 (t 25966 62584 867719 547000)) nil (25966 62562 51735 66000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9751) (undo-tree-id615 . -1) 9752) ((9751 . 9752)) (25966 62098 655553 226000) 0 nil])
([nil nil ((2169 . 2170)) nil (25966 62562 51719 667000) 0 nil])
([nil nil ((9751 . 9752)) ((#("j" 0 1 (fontified t)) . 9751)) (25966 62098 528480 807000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 2176)) nil (25966 62562 51716 491000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9758) (undo-tree-id614 . -1) 9759) ((9758 . 9759)) (25966 62098 363515 269000) 0 nil])
([nil nil ((2176 . 2177)) nil (25966 62562 51710 148000) 0 nil])
([nil nil ((9758 . 9759)) ((#("i" 0 1 (fontified t)) . 9758)) (25966 62098 243123 580000) 0 nil])
([nil nil ((#("                # W0 = self.initWeights(i_pop, j_pop).T # (post, pre).T -> (pre, post)                
" 0 16 (fontified t) 16 18 (face tree-sitter-hl-face:comment fontified t) 18 20 (face tree-sitter-hl-face:comment fontified t) 20 21 (face tree-sitter-hl-face:comment fontified t) 21 22 (face tree-sitter-hl-face:comment fontified t) 22 23 (face tree-sitter-hl-face:comment fontified t) 23 27 (face tree-sitter-hl-face:comment fontified t) 27 28 (face tree-sitter-hl-face:comment fontified t) 28 39 (face tree-sitter-hl-face:comment fontified t) 39 40 (face tree-sitter-hl-face:comment fontified t) 40 41 (face tree-sitter-hl-face:comment fontified t) 41 47 (face tree-sitter-hl-face:comment fontified t) 47 48 (face tree-sitter-hl-face:comment fontified t) 48 52 (face tree-sitter-hl-face:comment fontified t) 52 53 (face tree-sitter-hl-face:comment fontified t) 53 54 (face tree-sitter-hl-face:comment fontified t) 54 55 (face tree-sitter-hl-face:comment fontified t) 55 56 (face tree-sitter-hl-face:comment fontified t) 56 57 (face tree-sitter-hl-face:comment fontified t) 57 58 (face tree-sitter-hl-face:comment fontified t) 58 59 (face tree-sitter-hl-face:comment fontified t) 59 63 (face tree-sitter-hl-face:comment fontified t) 63 75 (face tree-sitter-hl-face:comment fontified t) 75 86 (face tree-sitter-hl-face:comment fontified t) 86 102 (face tree-sitter-hl-face:comment fontified t) 102 103 (fontified t)) . -2214) (undo-tree-id1018 . -42) (undo-tree-id1019 . -103) 2317 (t 25966 62620 47720 667000)) nil (25966 62611 761523 63000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9840) (undo-tree-id620 . -1) 9841 (t 25966 62105 143704 282000)) ((9840 . 9841)) (25966 62098 79610 742000) 0 nil])
([nil nil ((#("(" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2185) (undo-tree-id1001 . -1) (#("p" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2186) (undo-tree-id1002 . -1) (#("o" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2187) (undo-tree-id1003 . -1) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2188) (undo-tree-id1004 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2189) (undo-tree-id1005 . -1) (#("," 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2190) (undo-tree-id1006 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2191) (undo-tree-id1007 . -1) (#("p" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2192) (undo-tree-id1008 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2193) (undo-tree-id1009 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2194) (undo-tree-id1010 . -1) (#(")" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2195) (undo-tree-id1011 . -1) (#("." 0 1 (face tree-sitter-hl-face:comment fontified nil)) . -2196) (undo-tree-id1012 . -1) (#("T" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2197) (undo-tree-id1013 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2198) (undo-tree-id1014 . -1) (#("-" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2199) (undo-tree-id1015 . -1) (#(">" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2200) (undo-tree-id1016 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -2201) (undo-tree-id1017 . -1) 2202) nil (25966 62611 761474 639000) 0 nil])
([nil nil ((9840 . 9841)) ((#("j" 0 1 (fontified t)) . 9840)) (25966 62097 946094 769000) 0 nil])
([nil nil ((#("                print(W0.shape)
" 0 16 (fontified t) 16 21 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 24 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 24 25 (fontified t) 25 30 (face tree-sitter-hl-face:property fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 32 (fontified t)) . -2197) (undo-tree-id1020 . -31) (undo-tree-id1021 . -31) (undo-tree-id1022 . -31) (undo-tree-id1023 . -31) (undo-tree-id1024 . -31) (undo-tree-id1025 . -31) (undo-tree-id1026 . -31) (undo-tree-id1027 . -32) 2229 (t 25966 62669 923722 254000)) nil (25966 62615 305658 681000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 9847)) ((9847 . 9848)) (25966 62097 791211 543000) 0 nil])
([nil nil ((1232 . 1234) (t 25966 62673 507722 368000)) nil (25966 64613 810251 486000) 0 nil])
([nil nil ((9847 . 9848)) ((#("i" 0 1 (fontified t)) . 9847)) (25966 62097 637939 891000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -1262) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -1263) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 1264) nil (25966 64613 810244 12000) 0 nil])
([nil nil ((9891 . 9903) (t 25966 62110 243704 444000)) ((#("            " 0 8 (fontified t) 8 12 (fontified t)) . 9891) (undo-tree-id627 . -12) (undo-tree-id628 . -12) (undo-tree-id629 . -12) (undo-tree-id630 . -12) (undo-tree-id631 . -12) (undo-tree-id632 . -12) (undo-tree-id633 . -12) (undo-tree-id634 . -12) (undo-tree-id635 . -12) (undo-tree-id636 . -12) (undo-tree-id637 . -12)) (25966 62097 478200 769000) 0 nil])
([nil nil ((#("            # self.Wab[0, 0].bias.data = self.Ja0[i] + self.ksi[0] * torch.sqrt(self.Ka[0]) * self.M0
" 0 12 (fontified t) 12 101 (face tree-sitter-hl-face:comment fontified t) 101 102 (fontified t)) . -15323) (undo-tree-id1044 . -102) 15425 (t 25966 64671 851785 960000)) nil (25966 64648 328597 368000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9899) (undo-tree-id622 . -4) 9903) ((9899 . 9903)) (25966 62097 362935 616000) 0 nil])
([nil nil ((apply -16 15323 16010 undo--wrap-and-run-primitive-undo 15323 16010 ((15866 . 15868) (15831 . 15833) (15704 . 15706) (15670 . 15672) (15530 . 15532) (15495 . 15497) (15368 . 15370) (15335 . 15337) 15965))) nil (25966 64648 328582 724000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10311) (undo-tree-id621 . -1) 10312) ((10311 . 10312)) (25966 62097 362567 23000) 0 nil])
([nil nil ((apply 4 16010 16120 undo--wrap-and-run-primitive-undo 16010 16120 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16062) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -16022) 16124))) nil (25966 64648 328580 981000) 0 nil])
([nil nil ((10311 . 10312)) ((#("j" 0 1 (fontified t)) . 10311)) (25966 62097 264704 107000) 0 nil])
([nil nil ((16050 . 16066) (#("            " 0 12 (fontified t)) . 16050)) nil (25966 64648 328575 850000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10318)) ((10318 . 10319)) (25966 62097 233641 971000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16074) (undo-tree-id1048 . -1) (#("i" 0 1 (fontified t)) . -16075) (undo-tree-id1049 . -1) (#("," 0 1 (fontified t)) . -16076) (undo-tree-id1050 . -1) (#(" " 0 1 (fontified t)) . -16077) (undo-tree-id1051 . -1) (#("i" 0 1 (fontified t)) . -16078) (undo-tree-id1052 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16079) (undo-tree-id1053 . -1) (#("." 0 1 (fontified t)) . -16080) (undo-tree-id1054 . -1) 16081 (t 25966 64706 363787 58000)) nil (25966 64680 629451 169000) 0 nil])
([nil nil ((10318 . 10319)) ((#("i" 0 1 (fontified t)) . 10318)) (25966 62097 203507 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16113 . 16114) (nil fontified nil 16113 . 16114) (nil fontified nil 16112 . 16113) (nil fontified nil 16111 . 16112) (nil fontified nil 16110 . 16111) (nil fontified nil 16104 . 16110) (nil fontified nil 16103 . 16104) (nil fontified nil 16099 . 16103) (nil fontified nil 16098 . 16099) (nil fontified nil 16097 . 16098) (nil fontified nil 16096 . 16097) (nil fontified nil 16095 . 16096) (nil fontified nil 16089 . 16095) (nil fontified nil 16088 . 16089) (nil fontified nil 16084 . 16088) (nil fontified nil 16083 . 16084) (16083 . 16114)) nil (25966 64680 629441 184000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -10071) (undo-tree-id624 . -1) 10072 (t 25966 62119 819704 749000)) ((10071 . 10072)) (25966 62097 173108 570000) 0 nil])
([nil nil ((#("            for i in range(self.N_POP):
" 0 12 (fontified t) 12 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (fontified t) 16 17 (face tree-sitter-hl-face:variable fontified t) 17 18 (fontified t) 18 20 (face tree-sitter-hl-face:operator fontified t) 20 21 (fontified t) 21 26 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 37 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 39 (fontified t) 39 40 (fontified t)) . 16010) (undo-tree-id1047 . -40)) nil (25966 64680 629436 921000) 0 nil])
([nil nil ((10071 . 10072)) ((#("i" 0 1 (fontified t)) . 10071)) (25966 62097 143461 553000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16022) 16010) nil (25966 64680 629434 501000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10064) (undo-tree-id623 . -1) 10065) ((10064 . 10065)) (25966 62097 113498 66000) 0 nil])
([nil nil ((16030 . 16031)) nil (25966 64680 629433 479000) 0 nil])
([nil nil ((10064 . 10065)) ((#("j" 0 1 (fontified t)) . 10064)) (25966 62097 83969 346000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16083) (undo-tree-id1046 . -1) 16084) nil (25966 64680 629432 489000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10382) (undo-tree-id626 . -1) 10383 (t 25966 62125 307704 923000)) ((10382 . 10383)) (25966 62097 53463 742000) 0 nil])
([nil nil ((16083 . 16084)) nil (25966 64680 629429 322000) 0 nil])
([nil nil ((10382 . 10383)) ((#("j" 0 1 (fontified t)) . 10382)) (25966 62097 24342 508000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16102) (undo-tree-id1045 . -1) 16103) nil (25966 64680 629427 120000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10389)) ((10389 . 10390)) (25966 62096 535334 237000) 0 nil])
([nil nil ((16102 . 16103)) nil (25966 64680 629409 707000) 0 nil])
([nil nil ((10389 . 10390)) ((#("i" 0 1 (fontified t)) . 10389)) (25966 62096 373245 861000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16117) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) 16121 (t 25966 64738 667788 86000)) nil (25966 64682 433357 557000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10502)) ((10502 . 10503)) (25966 62096 247536 696000) 0 nil])
([nil nil ((#("            self.Wab.bias.data[self.csumNa[0]:self.csumNa[1]] = self.Ja0[0] + self.stimFunc(0)
" 0 12 (fontified t) 12 16 (face tree-sitter-hl-face:keyword fontified t) 16 17 (fontified t) 17 20 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 20 21 (fontified t) 21 25 (face tree-sitter-hl-face:property fontified t) 25 26 (fontified t) 26 30 (face tree-sitter-hl-face:property fontified t) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t) 31 35 (face tree-sitter-hl-face:keyword fontified t) 35 36 (fontified t) 36 42 (face tree-sitter-hl-face:property fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face tree-sitter-hl-face:number fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 46 (fontified t) 46 50 (face tree-sitter-hl-face:keyword fontified t) 50 51 (fontified t) 51 57 (face tree-sitter-hl-face:property fontified t) 57 58 (face (rainbow-delimiters-depth-2-face) fontified t) 58 59 (face tree-sitter-hl-face:number fontified t) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 61 62 (fontified t) 62 63 (face tree-sitter-hl-face:operator fontified t) 63 64 (fontified t) 64 68 (face tree-sitter-hl-face:keyword fontified t) 68 69 (fontified t) 69 72 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 72 73 (face (rainbow-delimiters-depth-1-face) fontified t) 73 74 (face tree-sitter-hl-face:number fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 76 (fontified t) 76 77 (face tree-sitter-hl-face:operator fontified t) 77 78 (fontified t) 78 82 (face tree-sitter-hl-face:keyword fontified t) 82 83 (fontified t) 83 91 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 91 92 (face (rainbow-delimiters-depth-1-face) fontified t) 92 93 (face tree-sitter-hl-face:number fontified t) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t) 94 95 (fontified t)) . 16010) (undo-tree-id1060 . -30) (undo-tree-id1061 . -95) 16105 (t 25966 64740 475788 144000)) nil (25966 64691 185406 100000) 0 nil])
([nil nil ((10502 . 10503)) ((#("j" 0 1 (fontified t)) . 10502)) (25966 62096 89086 897000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15416 . 15417) (nil fontified nil 15416 . 15417) (nil fontified nil 15415 . 15416) (nil fontified nil 15414 . 15415) (nil fontified nil 15413 . 15414) (nil fontified nil 15405 . 15413) (nil fontified nil 15404 . 15405) (nil fontified nil 15400 . 15404) (nil fontified nil 15399 . 15400) (nil fontified nil 15398 . 15399) (nil fontified nil 15397 . 15398) (nil fontified nil 15396 . 15397) (nil fontified nil 15395 . 15396) (nil fontified nil 15394 . 15395) (nil fontified nil 15391 . 15394) (nil fontified nil 15390 . 15391) (nil fontified nil 15386 . 15390) (nil fontified nil 15385 . 15386) (nil fontified nil 15384 . 15385) (nil fontified nil 15383 . 15384) (nil fontified nil 15382 . 15383) (nil fontified nil 15381 . 15382) (nil fontified nil 15380 . 15381) (nil fontified nil 15379 . 15380) (nil fontified nil 15373 . 15379) (nil fontified nil 15372 . 15373) (nil fontified nil 15368 . 15372) (nil fontified nil 15367 . 15368) (nil fontified nil 15366 . 15367) (nil fontified nil 15365 . 15366) (nil fontified nil 15364 . 15365) (nil fontified nil 15358 . 15364) (nil fontified nil 15357 . 15358) (nil fontified nil 15353 . 15357) (nil fontified nil 15352 . 15353) (nil fontified nil 15348 . 15352) (nil fontified nil 15347 . 15348) (nil fontified nil 15343 . 15347) (nil fontified nil 15342 . 15343) (nil fontified nil 15339 . 15342) (nil fontified nil 15338 . 15339) (nil fontified nil 15334 . 15338) (nil fontified nil 15322 . 15334) (15322 . 15417)) nil (25966 64691 185380 6000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10509)) ((10509 . 10510)) (25966 62095 940485 182000) 0 nil])
([nil nil ((15321 . 15338)) nil (25966 64691 185361 40000) 0 nil])
([nil nil ((10509 . 10510)) ((#("i" 0 1 (fontified t)) . 10509)) (25966 62095 812837 605000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15334) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) 15338 (t 25966 64749 231788 422000)) nil (25966 64692 608857 65000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -10583) (undo-tree-id625 . -1) 10584) ((10583 . 10584)) (25966 62095 655525 987000) 0 nil])
([nil nil ((16733 . 16735) (t 25966 64750 643788 467000)) nil (25966 64749 255927 535000) 0 nil])
([nil nil ((10583 . 10584)) ((#("j" 0 1 (fontified t)) . 10583)) (25966 62095 501321 936000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -16733) (undo-tree-id1068 . -1) (#("p" 0 1 (fontified t)) . -16734) (undo-tree-id1069 . -1) 16735) nil (25966 64749 255926 135000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . 10590)) ((10590 . 10591)) (25966 62095 365823 196000) 0 nil])
([nil nil ((16740 . 16742) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -16740) (16733 . 16741)) nil (25966 64749 255921 777000) 0 nil])
([nil nil ((10590 . 10591)) ((#("i" 0 1 (fontified t)) . 10590) (t 25966 62143 455705 501000)) (25966 62085 469777 470000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -16741) (undo-tree-id1067 . -1) 16742) nil (25966 64749 255919 354000) 0 nil])
nil
([nil nil ((16751 . 16752)) nil (25966 64749 255900 574000) 0 nil])
([nil nil ((5328 . 5352) (#("                " 0 16 (fontified t)) . 5328) (undo-tree-id1071 . -16) 5344 (t 25966 64807 295790 270000)) nil (25967 260 474207 687000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5348) (undo-tree-id1070 . -4) 5352) nil (25967 260 474196 417000) 0 nil])
([nil nil ((5495 . 5503) (t 25967 318 539823 596000)) nil (25967 264 131477 887000) 0 nil])
([nil nil ((5057 . 5066) (t 25967 322 187823 712000)) nil (25967 272 358315 458000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t)) . -5065) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) 5066) nil (25967 272 358311 505000) 0 nil])
([nil nil ((5065 . 5066)) nil (25967 272 358279 296000) 0 nil])
([nil nil ((5194 . 5196) (t 25967 330 419823 974000)) nil (25967 293 577880 240000) 0 nil])
([nil nil ((#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -5194) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("1" 0 1 (face tree-sitter-hl-face:number fontified t)) . -5195) (undo-tree-id1087 . -1) 5196 (t 25967 351 639824 649000)) nil (25967 296 22319 47000) 0 nil])
([nil nil ((5057 . 5058) (t 25967 354 83824 727000)) nil (25967 312 829974 815000) 0 nil])
([nil nil ((5059 . 5065)) nil (25967 312 829967 183000) 0 nil])
([nil nil ((5334 . 5344) (t 25967 370 899825 262000)) nil (25967 324 452482 518000) 0 nil])
([nil nil ((5344 . 5351)) nil (25967 324 452481 226000) 0 nil])
([nil nil ((#("T" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -5349) (undo-tree-id1088 . -1) (#("Y" 0 1 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t)) . -5350) (undo-tree-id1089 . -1) 5351) nil (25967 324 452478 701000) 0 nil])
([nil nil ((5349 . 5350)) nil (25967 324 452461 378000) 0 nil])
([nil nil ((5360 . 5384) (#("                    " 0 20 (fontified t)) . 5360) (undo-tree-id1090 . -20) 5380 (t 25967 382 515825 631000)) nil (25967 325 908330 634000) 0 nil])
([nil nil ((5201 . 5203) (t 25967 383 967825 678000)) nil (25967 389 111172 968000) 0 nil])
([nil nil ((5187 . 5188)) nil (25967 389 111165 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15447) (undo-tree-id13 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -15448) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t)) . -15449) (undo-tree-id15 . -1) 15450 (t 25967 447 179827 689000)) nil (25967 4585 776898 210000) 0 nil])
([nil nil ((15447 . 15453)) nil (25967 4585 776890 20000) 0 nil])
([nil nil ((#("ç" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15452) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 15453) nil (25967 4585 776887 390000) 0 nil])
([nil nil ((15453 . 15455) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15453) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (15452 . 15454)) nil (25967 4585 776866 587000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 15454)) nil (25967 4585 776830 249000) 0 nil])
([nil nil ((15484 . 15485)) nil (25967 4585 776823 874000) 0 nil])
([nil nil ((15386 . 15402) (#("            " 0 12 (fontified t)) . 15386) (undo-tree-id30 . -12) (t 25967 4585 915959 393000)) nil (25967 4621 458330 60000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15398) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) 15402) nil (25967 4621 458320 585000) 0 nil])
([nil nil ((16785 . 16803) (t 25967 4621 599960 528000)) nil (25967 4640 389501 1000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16801) (undo-tree-id64 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16802) (undo-tree-id65 . -1) 16803) nil (25967 4640 389498 96000) 0 nil])
([nil nil ((16801 . 16805)) nil (25967 4640 389492 395000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16803) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16804) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 16805) nil (25967 4640 389486 208000) 0 nil])
([nil nil ((16803 . 16805)) nil (25967 4640 389413 104000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -16785) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(" " 0 1 (fontified t)) . -16786) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("d" 0 1 (fontified nil)) . -16787) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("e" 0 1 (fontified nil)) . -16788) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("v" 0 1 (fontified nil)) . -16789) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("i" 0 1 (fontified nil)) . -16790) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("c" 0 1 (fontified t)) . -16791) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t)) . -16792) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -16793) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("s" 0 1 (fontified t)) . -16794) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t)) . -16795) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("l" 0 1 (fontified t)) . -16796) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -16797) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("." 0 1 (fontified t)) . -16798) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16799) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16800) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16801) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16802) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16803) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -16804) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) 16805 (t 25967 4640 531961 131000)) nil (25967 4646 476623 454000) 0 nil])
([nil nil ((15486 . 15498) (t 25967 4646 619961 325000)) nil (25967 4745 597656 699000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15484) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) 15485 (t 25967 4747 207964 526000)) nil (25967 4775 42522 141000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -15465) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id355 . -1) (undo-tree-id357 . -1) (undo-tree-id359 . -1) (undo-tree-id361 . -1) (undo-tree-id363 . -1) (undo-tree-id365 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id371 . -1) (undo-tree-id373 . -1) (undo-tree-id375 . -1) (undo-tree-id377 . -1) (undo-tree-id379 . -1) (undo-tree-id381 . -1) (undo-tree-id383 . -1) (undo-tree-id385 . -1) (undo-tree-id387 . -1) (undo-tree-id389 . -1) (undo-tree-id391 . -1) (undo-tree-id393 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (undo-tree-id399 . -1) (undo-tree-id401 . -1) (undo-tree-id403 . -1) (undo-tree-id405 . -1) (undo-tree-id407 . -1) (undo-tree-id409 . -1) (undo-tree-id411 . -1) (undo-tree-id413 . -1) (undo-tree-id415 . -1) (undo-tree-id417 . -1) (undo-tree-id419 . -1) (undo-tree-id421 . -1) (undo-tree-id423 . -1) (undo-tree-id425 . -1) (undo-tree-id427 . -1) (undo-tree-id429 . -1) (undo-tree-id431 . -1) (undo-tree-id433 . -1) (undo-tree-id435 . -1) (undo-tree-id437 . -1) (undo-tree-id439 . -1) (undo-tree-id441 . -1) (undo-tree-id443 . -1) (undo-tree-id445 . -1) (undo-tree-id447 . -1) (undo-tree-id449 . -1) (undo-tree-id451 . -1) (undo-tree-id453 . -1) (undo-tree-id455 . -1) (undo-tree-id457 . -1) (undo-tree-id459 . -1) (undo-tree-id461 . -1) (undo-tree-id463 . -1) (#("+" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -15466) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id470 . -1) (undo-tree-id472 . -1) (undo-tree-id474 . -1) (undo-tree-id476 . -1) (undo-tree-id478 . -1) (undo-tree-id480 . -1) (undo-tree-id482 . -1) (undo-tree-id484 . -1) (undo-tree-id486 . -1) (undo-tree-id488 . -1) (undo-tree-id490 . -1) (undo-tree-id492 . -1) (undo-tree-id494 . -1) (undo-tree-id496 . -1) (undo-tree-id498 . -1) (undo-tree-id500 . -1) (undo-tree-id502 . -1) (undo-tree-id504 . -1) (undo-tree-id506 . -1) (undo-tree-id508 . -1) (undo-tree-id510 . -1) (undo-tree-id512 . -1) (undo-tree-id514 . -1) (undo-tree-id516 . -1) (undo-tree-id518 . -1) (undo-tree-id520 . -1) (undo-tree-id522 . -1) (undo-tree-id524 . -1) (undo-tree-id526 . -1) (undo-tree-id528 . -1) (undo-tree-id530 . -1) (undo-tree-id532 . -1) (undo-tree-id534 . -1) (undo-tree-id536 . -1) (undo-tree-id538 . -1) (undo-tree-id540 . -1) (undo-tree-id542 . -1) (undo-tree-id544 . -1) (undo-tree-id546 . -1) (undo-tree-id548 . -1) (undo-tree-id550 . -1) (undo-tree-id552 . -1) (undo-tree-id554 . -1) (undo-tree-id556 . -1) (undo-tree-id558 . -1) (undo-tree-id560 . -1) (undo-tree-id562 . -1) (undo-tree-id564 . -1) (undo-tree-id566 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -15467) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id575 . -1) (undo-tree-id577 . -1) (undo-tree-id579 . -1) (undo-tree-id581 . -1) (undo-tree-id583 . -1) (undo-tree-id585 . -1) (undo-tree-id587 . -1) (undo-tree-id589 . -1) (undo-tree-id591 . -1) (undo-tree-id593 . -1) (undo-tree-id595 . -1) (undo-tree-id597 . -1) (undo-tree-id599 . -1) (undo-tree-id601 . -1) (undo-tree-id603 . -1) (undo-tree-id605 . -1) (undo-tree-id607 . -1) (undo-tree-id609 . -1) (undo-tree-id611 . -1) (undo-tree-id613 . -1) (undo-tree-id615 . -1) (undo-tree-id617 . -1) (undo-tree-id619 . -1) (undo-tree-id621 . -1) (undo-tree-id623 . -1) (undo-tree-id625 . -1) (undo-tree-id627 . -1) (undo-tree-id629 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -1) (undo-tree-id635 . -1) (undo-tree-id637 . -1) (undo-tree-id639 . -1) (undo-tree-id641 . -1) (undo-tree-id643 . -1) (undo-tree-id645 . -1) (undo-tree-id647 . -1) (undo-tree-id649 . -1) (undo-tree-id651 . -1) (undo-tree-id653 . -1) (undo-tree-id655 . -1) (undo-tree-id657 . -1) (undo-tree-id659 . -1) (undo-tree-id661 . -1) (undo-tree-id663 . -1) (#("s" 0 1 (fontified t)) . -15468) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id670 . -1) (undo-tree-id672 . -1) (undo-tree-id674 . -1) (undo-tree-id676 . -1) (undo-tree-id678 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id688 . -1) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (undo-tree-id700 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) (undo-tree-id732 . -1) (undo-tree-id734 . -1) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (#("e" 0 1 (fontified t)) . -15469) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id755 . -1) (undo-tree-id757 . -1) (undo-tree-id759 . -1) (undo-tree-id761 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (undo-tree-id767 . -1) (undo-tree-id769 . -1) (undo-tree-id771 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) (undo-tree-id783 . -1) (undo-tree-id785 . -1) (undo-tree-id787 . -1) (undo-tree-id789 . -1) (undo-tree-id791 . -1) (undo-tree-id793 . -1) (undo-tree-id795 . -1) (undo-tree-id797 . -1) (undo-tree-id799 . -1) (undo-tree-id801 . -1) (undo-tree-id803 . -1) (undo-tree-id805 . -1) (undo-tree-id807 . -1) (undo-tree-id809 . -1) (undo-tree-id811 . -1) (undo-tree-id813 . -1) (undo-tree-id815 . -1) (undo-tree-id817 . -1) (undo-tree-id819 . -1) (undo-tree-id821 . -1) (undo-tree-id823 . -1) (#("l" 0 1 (fontified t)) . -15470) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id830 . -1) (undo-tree-id832 . -1) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (undo-tree-id854 . -1) (undo-tree-id856 . -1) (undo-tree-id858 . -1) (undo-tree-id860 . -1) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -15471) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id895 . -1) (undo-tree-id897 . -1) (undo-tree-id899 . -1) (undo-tree-id901 . -1) (undo-tree-id903 . -1) (undo-tree-id905 . -1) (undo-tree-id907 . -1) (undo-tree-id909 . -1) (undo-tree-id911 . -1) (undo-tree-id913 . -1) (undo-tree-id915 . -1) (undo-tree-id917 . -1) (undo-tree-id919 . -1) (undo-tree-id921 . -1) (undo-tree-id923 . -1) (undo-tree-id925 . -1) (undo-tree-id927 . -1) (undo-tree-id929 . -1) (undo-tree-id931 . -1) (undo-tree-id933 . -1) (undo-tree-id935 . -1) (undo-tree-id937 . -1) (undo-tree-id939 . -1) (undo-tree-id941 . -1) (undo-tree-id943 . -1) (#("." 0 1 (fontified t)) . -15472) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id982 . -1) (undo-tree-id984 . -1) (undo-tree-id986 . -1) (undo-tree-id988 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15473) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1023 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15474) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15475) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1055 . -1) (undo-tree-id1057 . -1) (undo-tree-id1059 . -1) (undo-tree-id1061 . -1) (undo-tree-id1063 . -1) (undo-tree-id1065 . -1) (undo-tree-id1067 . -1) (undo-tree-id1069 . -1) (undo-tree-id1071 . -1) (#("m" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15476) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) (undo-tree-id1084 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (undo-tree-id1090 . -1) (undo-tree-id1092 . -1) (#("F" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15477) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1099 . -1) (undo-tree-id1101 . -1) (undo-tree-id1103 . -1) (undo-tree-id1105 . -1) (undo-tree-id1107 . -1) (undo-tree-id1109 . -1) (undo-tree-id1111 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15478) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1118 . -1) (undo-tree-id1120 . -1) (undo-tree-id1122 . -1) (undo-tree-id1124 . -1) (undo-tree-id1126 . -1) (undo-tree-id1128 . -1) (#("n" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15479) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15480) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -15481) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 15482) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -15482) (undo-tree-id1152 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15483) (undo-tree-id1153 . -1) 15484 (t 25967 4649 703961 423000)) ((15482 . 15484) (15465 . 15483)) (25967 4745 164628 871000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15448) (undo-tree-id1182 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15449) (undo-tree-id1183 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15450) (undo-tree-id1184 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15451) (undo-tree-id1185 . -1) (#("_" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15452) (undo-tree-id1186 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15453) (undo-tree-id1187 . -1) 15454) nil (25967 4775 42493 405000) 0 nil])
([nil nil ((15465 . 15466)) ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 15465) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (t 25967 4732 75964 44000)) (25967 4731 930096 838000) 0 nil])
([nil nil ((15448 . 15450)) nil (25967 4775 42479 52000) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t)) . -15447) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 15448) nil (25967 4775 42475 15000) 0 nil])
([nil nil ((15449 . 15450)) nil (25967 4775 42433 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15447) (undo-tree-id1202 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -15448) (undo-tree-id1203 . -1) (#(" " 0 1 (fontified t)) . -15449) (undo-tree-id1204 . -1) 15450 (t 25967 4775 183965 416000)) nil (25967 4846 239998 259000) 0 nil])
([nil nil ((15453 . 15455) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15453) (15447 . 15454)) nil (25967 4846 239987 710000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15454) (undo-tree-id1201 . -1) 15455) nil (25967 4846 239983 262000) 0 nil])
([nil nil ((15484 . 15485)) nil (25967 4846 239962 461000) 0 nil])
([nil nil ((15484 . 15487) (t 25967 4846 383967 682000)) nil (25967 4850 966837 559000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15484) (undo-tree-id1205 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15485) (undo-tree-id1206 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15486) (undo-tree-id1207 . -1) 15487) nil (25967 4850 966830 428000) 0 nil])
([nil nil ((15484 . 15487) (t 25967 4851 107967 832000)) nil (25967 4873 813357 428000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 15489) (15488 . 15489) (15487 . 15489) (#("(" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15487) (15487 . 15488) (t 25967 4873 955968 559000)) nil (25967 4887 603474 275000) 0 nil])
([nil nil ((15488 . 15496)) nil (25967 4887 603470 110000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15495) (undo-tree-id1208 . -1) 15496) nil (25967 4887 603466 942000) 0 nil])
([nil nil ((15495 . 15499)) nil (25967 4887 603439 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15480 . 15481) (nil fontified nil 15480 . 15481) (nil fontified nil 15474 . 15480) (nil fontified nil 15473 . 15474) (nil fontified nil 15469 . 15473) (nil fontified nil 15468 . 15469) (nil fontified nil 15466 . 15468) (nil fontified nil 15465 . 15466) (15465 . 15481)) nil (25967 4887 603431 692000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -16833) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("p" 0 1 (fontified t)) . -16834) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) 16835 (t 25967 4887 747968 998000)) nil (25967 4902 372857 22000) 0 nil])
([nil nil ((16833 . 16838)) nil (25967 4902 372804 714000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15500) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15501) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15502) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -15503) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 15504) (#("s" 0 1 (fontified t)) . -15504) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (#("e" 0 1 (fontified t)) . -15505) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (#("l" 0 1 (fontified t)) . -15506) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -15507) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (#("." 0 1 (fontified nil)) . -15508) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -15509) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15510) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15511) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15512) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15513) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15514) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15515) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) 15516 (t 25967 4902 459969 466000)) nil (25967 4909 938737 622000) 0 nil])
([nil nil ((15500 . 15501)) nil (25967 4909 938660 733000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15465) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (#("t" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15466) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("o" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15467) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -15468) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (#("s" 0 1 (fontified t)) . -15469) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("e" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -15470) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (#("l" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . -15471) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -15472) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (#("." 0 1 (fontified t)) . -15473) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15474) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15475) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15476) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15477) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15478) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15479) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) rear-nonsticky t fontified t)) . -15480) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (#(" " 0 1 (fontified t)) . -15481) (undo-tree-id1615 . -1) 15482) nil (25967 4909 938641 939000) 0 nil])
([nil nil ((15465 . 15466)) nil (25967 4909 938093 868000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15448) (undo-tree-id1702 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15449) (undo-tree-id1703 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15450) (undo-tree-id1704 . -1) (#("l" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15451) (undo-tree-id1705 . -1) (#("_" 0 1 (face tree-sitter-hl-face:property fontified t)) . -15452) (undo-tree-id1706 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -15453) (undo-tree-id1707 . -1) 15454 (t 25967 4910 15969 706000)) nil (25967 4923 519764 426000) 0 nil])
([nil nil ((15448 . 15449)) nil (25967 4923 519753 960000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15448) (undo-tree-id1701 . -1) 15449) nil (25967 4923 519752 65000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -15447) (undo-tree-id1700 . -1) 15448) nil (25967 4923 519748 596000) 0 nil])
([nil nil ((15447 . 15450)) nil (25967 4923 519745 200000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -15480) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 15481) nil (25967 4923 519740 215000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -3018) (undo-tree-id1708 . -16) (undo-tree-id1709 . -16) (undo-tree-id1710 . -16) (undo-tree-id1711 . -16) (undo-tree-id1712 . -16) (undo-tree-id1713 . -16) (undo-tree-id1714 . -16) (undo-tree-id1715 . -16) (undo-tree-id1716 . -16) (undo-tree-id1717 . -16) (undo-tree-id1718 . -16) (undo-tree-id1719 . -16) (undo-tree-id1720 . -16) 3034 (t 25967 4923 599970 139000)) nil (25967 5508 504212 462000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3217) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (#(" " 0 1 (fontified t)) . -3218) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (#(" " 0 1 (fontified t)) . -3219) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (#(" " 0 1 (fontified t)) . -3220) (undo-tree-id1763 . -1) (#(" " 0 1 (fontified t)) . -3221) (undo-tree-id1764 . -1) (#(" " 0 1 (fontified t)) . -3222) (undo-tree-id1765 . -1) (#(" " 0 1 (fontified t)) . -3223) (undo-tree-id1766 . -1) (#(" " 0 1 (fontified t)) . -3224) (undo-tree-id1767 . -1) (#(" " 0 1 (fontified t)) . -3225) (undo-tree-id1768 . -1) (#(" " 0 1 (fontified t)) . -3226) (undo-tree-id1769 . -1) (#(" " 0 1 (fontified t)) . -3227) (undo-tree-id1770 . -1) (#(" " 0 1 (fontified t)) . -3228) (undo-tree-id1771 . -1) (#(" " 0 1 (fontified t)) . -3229) (undo-tree-id1772 . -1) (#(" " 0 1 (fontified t)) . -3230) (undo-tree-id1773 . -1) (#(" " 0 1 (fontified t)) . -3231) (undo-tree-id1774 . -1) (#(" " 0 1 (fontified t)) . -3232) (undo-tree-id1775 . -1) 3233 (t 25967 5508 583988 754000)) nil (25967 10480 402646 716000) 0 nil])
([nil nil ((2612 . 2616) 2604 (t 25967 10480 504146 972000)) nil (25967 10703 501388 613000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2612) (undo-tree-id1776 . -4) (undo-tree-id1777 . -4) (undo-tree-id1778 . -4) (undo-tree-id1779 . -4) (undo-tree-id1780 . -4) (undo-tree-id1781 . -4) (undo-tree-id1782 . -4) (undo-tree-id1783 . -4) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) 2616) nil (25967 10703 501382 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2829 . 2830) (nil fontified nil 2829 . 2830) (nil fontified nil 2815 . 2829) (nil fontified nil 2813 . 2815) (nil fontified nil 2812 . 2813) (nil fontified nil 2804 . 2812) (nil fontified nil 2803 . 2804) (nil fontified nil 2788 . 2803) (nil fontified nil 2787 . 2788) (nil fontified nil 2783 . 2787) (nil fontified nil 2768 . 2783) (nil fontified nil 2767 . 2768) (nil fontified nil 2759 . 2767) (nil fontified nil 2758 . 2759) (nil fontified nil 2747 . 2758) (nil fontified nil 2746 . 2747) (nil fontified nil 2742 . 2746) (nil fontified nil 2726 . 2742) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (nil fontified nil 2712 . 2724) (nil fontified nil 2711 . 2712) (nil fontified nil 2707 . 2711) (nil fontified nil 2700 . 2707) (nil fontified nil 2698 . 2700) (nil fontified nil 2688 . 2698) (nil fontified nil 2687 . 2688) (nil fontified nil 2679 . 2687) (nil fontified nil 2678 . 2679) (nil fontified nil 2667 . 2678) (nil fontified nil 2656 . 2667) (nil fontified nil 2655 . 2656) (nil fontified nil 2654 . 2655) (nil fontified nil 2653 . 2654) (nil fontified nil 2649 . 2653) (nil fontified nil 2644 . 2649) (nil fontified nil 2643 . 2644) (nil fontified nil 2640 . 2643) (nil fontified nil 2639 . 2640) (nil fontified nil 2638 . 2639) (nil fontified nil 2637 . 2638) (nil fontified nil 2629 . 2637) (nil fontified nil 2625 . 2629) (2625 . 2830) (t 25967 10703 580154 70000)) nil (25967 11001 643570 210000) 0 nil])
([nil nil ((2625 . 2633) (#("    " 0 4 (fontified t)) . 2625)) nil (25967 11001 643558 872000) 0 nil])
([nil nil ((2661 . 2669) (#("    " 0 4 (fontified t)) . 2661) (undo-tree-id1791 . -4)) nil (25967 11001 643557 265000) 0 nil])
([nil nil ((2702 . 2710) (#("    " 0 4 (fontified t)) . 2702) (undo-tree-id1790 . -4)) nil (25967 11001 643553 883000) 0 nil])
([nil nil ((2748 . 2752) 2740) nil (25967 11001 643540 714000) 0 nil])
([nil nil ((2793 . 2797) 2785) nil (25967 11001 643538 210000) 0 nil])
([nil nil ((2849 . 2862)) nil (25967 11001 643532 738000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2858) (undo-tree-id1795 . -4) 2862 (t 25967 11001 724163 558000)) nil (25967 11005 967005 359000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2854) (undo-tree-id1794 . -4) 2858) nil (25967 11005 967002 476000) 0 nil])
([nil nil ((2850 . 2862) (#("    " 0 4 (fontified t)) . 2850) (undo-tree-id1793 . -4) 2854) nil (25967 11005 966999 5000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2858) (undo-tree-id1792 . -4) 2862) nil (25967 11005 966993 975000) 0 nil])
([nil nil ((2612 . 2614)) nil (25967 11005 966978 441000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1895 . 1896) (nil fontified nil 1895 . 1896) (nil fontified nil 1881 . 1895) (nil fontified nil 1879 . 1881) (nil fontified nil 1878 . 1879) (nil fontified nil 1874 . 1878) (nil fontified nil 1873 . 1874) (nil fontified nil 1858 . 1873) (nil fontified nil 1857 . 1858) (nil fontified nil 1853 . 1857) (nil fontified nil 1834 . 1853) (nil fontified nil 1833 . 1834) (nil fontified nil 1829 . 1833) (nil fontified nil 1828 . 1829) (nil fontified nil 1817 . 1828) (nil fontified nil 1816 . 1817) (nil fontified nil 1812 . 1816) (nil fontified nil 1792 . 1812) (nil fontified nil 1791 . 1792) (nil fontified nil 1790 . 1791) (nil fontified nil 1778 . 1790) (nil fontified nil 1777 . 1778) (nil fontified nil 1773 . 1777) (nil fontified nil 1766 . 1773) (nil fontified nil 1764 . 1766) (nil fontified nil 1746 . 1764) (nil fontified nil 1745 . 1746) (nil fontified nil 1741 . 1745) (nil fontified nil 1740 . 1741) (nil fontified nil 1729 . 1740) (nil fontified nil 1712 . 1729) (nil fontified nil 1711 . 1712) (nil fontified nil 1709 . 1711) (nil fontified nil 1703 . 1709) (nil fontified nil 1701 . 1703) (nil fontified nil 1697 . 1701) (1697 . 1896) (t 25967 11006 44163 696000)) nil (25967 11044 669994 797000) 0 nil])
([nil nil ((1697 . 1705) (#("    " 0 4 (fontified t)) . 1697)) nil (25967 11044 669986 145000) 0 nil])
([nil nil ((1727 . 1731)) nil (25967 11044 669984 819000) 0 nil])
([nil nil ((1763 . 1767) 1755) nil (25967 11044 669983 818000) 0 nil])
([nil nil ((1776 . 1780) 1768) nil (25967 11044 669982 763000) 0 nil])
([nil nil ((1810 . 1826) (#("            " 0 12 (fontified t)) . 1810)) nil (25967 11044 669981 415000) 0 nil])
([nil nil ((1855 . 1871) (#("            " 0 12 (fontified t)) . 1855)) nil (25967 11044 669980 258000) 0 nil])
([nil nil ((1712 . 1713)) nil (25967 11044 669978 865000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1712) (undo-tree-id1796 . -1) 1713) nil (25967 11044 669977 29000) 0 nil])
([nil nil ((nil fontified nil 1933 . 1937) (#("seed" 0 4 (fontified nil)) . -1928) (1932 . 1941) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1914) (1918 . 1927) (nil fontified nil 1874 . 1878) (#("seed" 0 4 (fontified nil)) . -1869) (1873 . 1882) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1859) (1863 . 1872) (nil fontified nil 1764 . 1768) (#("seed" 0 4 (fontified nil)) . -1759) (1763 . 1772) (#("seed" 0 4 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . -1749) (1753 . 1762) (#("seed" 0 4 (fontified t)) . -1708) (1712 . 1721)) nil (25967 11044 669960 939000) 0 nil])
([nil nil ((2957 . 2965) (#("    " 0 4 (fontified t)) . 2957) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) 2961 (t 25967 11044 744164 927000)) nil (25967 11051 686460 318000) 0 nil])
([nil nil ((1677 . 1679) (t 25967 11051 764165 150000)) nil (25967 11055 646937 390000) 0 nil])
([nil nil ((14807 . 14810) (t 25967 11055 724165 276000)) nil (25967 11403 298571 606000) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -14807) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#("*" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -14808) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (#("2" 0 1 (face tree-sitter-hl-face:number fontified t)) . -14809) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) 14810 (t 25967 11403 376176 340000)) nil (25967 11424 661459 294000) 0 nil])
([nil nil ((14807 . 14824) (t 25967 11424 736177 19000)) nil (25967 11694 311834 206000) 0 nil])
([nil nil ((#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14823) (undo-tree-id1905 . -1) 14824) nil (25967 11694 311832 547000) 0 nil])
([nil nil ((14823 . 14826)) nil (25967 11694 311829 17000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14825) (undo-tree-id1904 . -1) 14826) nil (25967 11694 311826 742000) 0 nil])
([nil nil ((14825 . 14827)) nil (25967 11694 311811 137000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14826) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) 14827 (t 25967 11694 388185 600000)) nil (25967 11700 593475 432000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -14807) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#(" " 0 1 (fontified t)) . -14808) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (#("d" 0 1 (fontified t)) . -14809) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (#("e" 0 1 (fontified t)) . -14810) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (#("v" 0 1 (fontified t)) . -14811) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (#("i" 0 1 (fontified t)) . -14812) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (#("c" 0 1 (fontified t)) . -14813) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (#("e" 0 1 (face tree-sitter-hl-face:label fontified nil)) . -14814) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (#("=" 0 1 (face tree-sitter-hl-face:operator fontified nil)) . -14815) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (#("s" 0 1 (fontified nil)) . -14816) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (#("e" 0 1 (fontified t)) . -14817) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (#("l" 0 1 (fontified t)) . -14818) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (#("f" 0 1 (face tree-sitter-hl-face:keyword fontified t)) . -14819) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (#("." 0 1 (fontified t)) . -14820) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (#("d" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14821) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14822) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (#("v" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14823) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (#("i" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14824) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (#("c" 0 1 (face tree-sitter-hl-face:property fontified t)) . -14825) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) 14826) nil (25967 11700 593438 448000) 0 nil])
([nil nil ((apply -10 1699 1976 undo--wrap-and-run-primitive-undo 1699 1976 ((1898 . 1900) (1841 . 1843) (1797 . 1799) (1736 . 1738) (1707 . 1709) 1957))) nil (25967 11813 732453 288000) 0 nil])
([nil nil ((#("        # if self.SEED !=0 :
        #     torch.manual_self.SEED(self.SEED)
            
        #     if torch.cuda.is_available():
        #         torch.cuda.manual_self.SEED(self.SEED)
        #         torch.cuda.manual_self.SEED_all(self.SEED)  # For all GPUs
" 0 8 (fontified t) 8 10 (face tree-sitter-hl-face:comment fontified t) 10 12 (face tree-sitter-hl-face:comment fontified t) 12 13 (face tree-sitter-hl-face:comment fontified t) 13 17 (face tree-sitter-hl-face:comment fontified t) 17 18 (face tree-sitter-hl-face:comment fontified t) 18 22 (face tree-sitter-hl-face:comment fontified t) 22 23 (face tree-sitter-hl-face:comment fontified t) 23 25 (face tree-sitter-hl-face:comment fontified t) 25 26 (face tree-sitter-hl-face:comment fontified t) 26 28 (face tree-sitter-hl-face:comment fontified t) 28 29 (fontified t) 29 37 (fontified t) 37 39 (face tree-sitter-hl-face:comment fontified t) 39 49 (face tree-sitter-hl-face:comment fontified t) 49 56 (face tree-sitter-hl-face:comment fontified t) 56 60 (face tree-sitter-hl-face:comment fontified t) 60 61 (face tree-sitter-hl-face:comment fontified t) 61 65 (face tree-sitter-hl-face:comment fontified t) 65 66 (face tree-sitter-hl-face:comment fontified t) 66 70 (face tree-sitter-hl-face:comment fontified t) 70 71 (face tree-sitter-hl-face:comment fontified t) 71 75 (face tree-sitter-hl-face:comment fontified t) 75 76 (face tree-sitter-hl-face:comment fontified t) 76 77 (fontified t) 77 90 (fontified t) 90 98 (fontified t) 98 100 (face tree-sitter-hl-face:comment fontified t) 100 104 (face tree-sitter-hl-face:comment fontified t) 104 106 (face tree-sitter-hl-face:comment fontified t) 106 113 (face tree-sitter-hl-face:comment fontified t) 113 117 (face tree-sitter-hl-face:comment fontified t) 117 118 (face tree-sitter-hl-face:comment fontified t) 118 130 (face tree-sitter-hl-face:comment fontified t) 130 131 (face tree-sitter-hl-face:comment fontified t) 131 132 (face tree-sitter-hl-face:comment fontified t) 132 133 (face tree-sitter-hl-face:comment fontified t) 133 134 (fontified t) 134 142 (fontified t) 142 144 (face tree-sitter-hl-face:comment fontified t) 144 152 (face tree-sitter-hl-face:comment fontified t) 152 158 (face tree-sitter-hl-face:comment fontified t) 158 162 (face tree-sitter-hl-face:comment fontified t) 162 163 (face tree-sitter-hl-face:comment fontified t) 163 170 (face tree-sitter-hl-face:comment fontified t) 170 174 (face tree-sitter-hl-face:comment fontified t) 174 175 (face tree-sitter-hl-face:comment fontified t) 175 179 (face tree-sitter-hl-face:comment fontified t) 179 180 (face tree-sitter-hl-face:comment fontified t) 180 184 (face tree-sitter-hl-face:comment fontified t) 184 185 (face tree-sitter-hl-face:comment fontified t) 185 189 (face tree-sitter-hl-face:comment fontified t) 189 190 (face tree-sitter-hl-face:comment fontified t) 190 191 (fontified t) 191 199 (fontified t) 199 201 (face tree-sitter-hl-face:comment fontified t) 201 209 (face tree-sitter-hl-face:comment fontified t) 209 215 (face tree-sitter-hl-face:comment fontified t) 215 219 (face tree-sitter-hl-face:comment fontified t) 219 220 (face tree-sitter-hl-face:comment fontified t) 220 227 (face tree-sitter-hl-face:comment fontified t) 227 231 (face tree-sitter-hl-face:comment fontified t) 231 232 (face tree-sitter-hl-face:comment fontified t) 232 236 (face tree-sitter-hl-face:comment fontified t) 236 240 (face tree-sitter-hl-face:comment fontified t) 240 241 (face tree-sitter-hl-face:comment fontified t) 241 245 (face tree-sitter-hl-face:comment fontified t) 245 246 (face tree-sitter-hl-face:comment fontified t) 246 250 (face tree-sitter-hl-face:comment fontified t) 250 251 (face tree-sitter-hl-face:comment fontified t) 251 253 (face tree-sitter-hl-face:comment fontified t) 253 267 (face tree-sitter-hl-face:comment fontified t) 267 268 (rear-nonsticky t fontified t)) . 1699) (undo-tree-id2504 . -268) (undo-tree-id2505 . -268) (undo-tree-id2506 . -191) (undo-tree-id2507 . -29) (undo-tree-id2508 . -18) (undo-tree-id2509 . -18)) nil (25967 11813 732451 892000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1677) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 1677)) nil (25967 11813 732443 153000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2612) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . 2612)) nil (25967 11813 732441 59000) 0 nil])
([nil nil ((#("        new_seed = int(time.time())
        torch.manual_seed(new_seed)
        
        if torch.cuda.is_available():
            torch.cuda.manual_seed(new_seed)
            torch.cuda.manual_seed_all(new_seed)  # For all GPUs
" 0 8 (fontified t) 8 16 (face tree-sitter-hl-face:variable fontified t) 16 17 (fontified t) 17 18 (face tree-sitter-hl-face:operator fontified t) 18 19 (fontified t) 19 22 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 28 (fontified t) 28 32 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 44 (fontified t) 44 50 (fontified t) 50 61 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t) 62 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t) 72 80 (fontified t) 80 81 (fontified t) 81 89 (fontified t) 89 91 (face tree-sitter-hl-face:keyword fontified t) 91 98 (fontified t) 98 102 (face tree-sitter-hl-face:property fontified t) 102 103 (fontified t) 103 115 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 115 116 (face (rainbow-delimiters-depth-1-face) fontified t) 116 117 (face (rainbow-delimiters-depth-1-face) fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 137 (fontified t) 137 141 (face tree-sitter-hl-face:property fontified t) 141 142 (fontified t) 142 153 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 153 154 (face (rainbow-delimiters-depth-1-face) fontified t) 154 162 (fontified t) 162 163 (face (rainbow-delimiters-depth-1-face) fontified t) 163 164 (fontified t) 164 182 (fontified t) 182 186 (face tree-sitter-hl-face:property fontified t) 186 187 (fontified t) 187 202 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 202 203 (face (rainbow-delimiters-depth-1-face) fontified t) 203 211 (fontified t) 211 212 (face (rainbow-delimiters-depth-1-face) fontified t) 212 214 (fontified t) 214 228 (face tree-sitter-hl-face:comment fontified t) 228 229 (fontified t)) . -2625) (undo-tree-id2499 . -229) (undo-tree-id2500 . -229) (undo-tree-id2501 . -229) (undo-tree-id2502 . -164) (undo-tree-id2503 . -229) 2854) nil (25967 11813 732435 704000) 0 nil])
([nil nil ((1320 . 1324) (t 25967 11813 812189 400000)) nil (25967 11861 17657 565000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1320) (undo-tree-id2510 . -4) (undo-tree-id2511 . -4) (undo-tree-id2512 . -4) (undo-tree-id2513 . -4) (undo-tree-id2514 . -4) (undo-tree-id2515 . -4) (undo-tree-id2516 . -4) (undo-tree-id2517 . -4) (undo-tree-id2518 . -4) (undo-tree-id2519 . -4) (undo-tree-id2520 . -4) (undo-tree-id2521 . -4) (undo-tree-id2522 . -4) (undo-tree-id2523 . -4) (undo-tree-id2524 . -4) (undo-tree-id2525 . -4) (undo-tree-id2526 . -4) (undo-tree-id2527 . -4) (undo-tree-id2528 . -4) (undo-tree-id2529 . -4) (undo-tree-id2530 . -4) (undo-tree-id2531 . -4) (undo-tree-id2532 . -4) 1324) nil (25967 11861 17651 921000) 0 nil])
([nil nil ((15363 . 15379) (#("            " 0 12 (fontified t)) . 15363) (undo-tree-id2547 . -12) (t 25967 11861 100190 905000)) nil (25967 12043 608328 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15375) (undo-tree-id2533 . -4) (undo-tree-id2534 . -4) (undo-tree-id2535 . -4) (undo-tree-id2536 . -4) (undo-tree-id2537 . -4) (undo-tree-id2538 . -4) (undo-tree-id2539 . -4) (undo-tree-id2540 . -4) (undo-tree-id2541 . -4) (undo-tree-id2542 . -4) (undo-tree-id2543 . -4) (undo-tree-id2544 . -4) (undo-tree-id2545 . -4) (undo-tree-id2546 . -4) 15379) nil (25967 12043 608321 704000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3215) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (#("s" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3216) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (#("q" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3217) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (#("u" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -3218) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified nil)) . -3219) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3220) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (#("z" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3221) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (#("e" 0 1 (face tree-sitter-hl-face:property fontified t)) . -3222) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3223) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (#("0" 0 1 (face tree-sitter-hl-face:number fontified t)) . -3224) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3225) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) 3226 (t 25967 12043 688196 716000)) nil (25967 12134 19065 301000) 0 nil])
([nil nil ((9181 . 9193) (t 25967 12134 100199 593000)) nil (25975 4465 525466 606000) 0 nil])
([nil nil ((#("def set_seed(seed):
    if seed !=0 :
        torch.manual_seed(seed)
        
        if torch.cuda.is_available():
            torch.cuda.manual_seed(seed)
            torch.cuda.manual_seed_all(seed)  # For all GPUs
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 12 (face tree-sitter-hl-face:function fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t) 13 17 (face tree-sitter-hl-face:variable.parameter fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 24 (fontified t) 24 26 (face tree-sitter-hl-face:keyword fontified t) 26 32 (fontified t) 32 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (face tree-sitter-hl-face:number fontified t) 35 52 (fontified t) 52 63 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 68 (fontified t) 68 69 (face (rainbow-delimiters-depth-1-face) fontified t) 69 87 (fontified t) 87 89 (face tree-sitter-hl-face:keyword fontified t) 89 96 (fontified t) 96 100 (face tree-sitter-hl-face:property fontified t) 100 101 (fontified t) 101 113 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 113 114 (face (rainbow-delimiters-depth-1-face) fontified t) 114 115 (face (rainbow-delimiters-depth-1-face) fontified t) 115 135 (fontified t) 135 139 (face tree-sitter-hl-face:property fontified t) 139 140 (fontified t) 140 151 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 176 (fontified t) 176 180 (face tree-sitter-hl-face:property fontified t) 180 181 (fontified t) 181 196 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t) 202 204 (fontified t) 204 218 (face tree-sitter-hl-face:comment fontified t) 218 219 (fontified t)) . 377) (undo-tree-id0 . -20) (undo-tree-id1 . -20) (undo-tree-id2 . -20) (undo-tree-id3 . -20) (undo-tree-id4 . -20) (undo-tree-id5 . -20) (undo-tree-id6 . -219) (undo-tree-id7 . -20) (undo-tree-id8 . -20) (undo-tree-id9 . -38) (undo-tree-id10 . -20) (undo-tree-id11 . -70) (undo-tree-id12 . -38) (undo-tree-id13 . -79) (undo-tree-id14 . -70) (undo-tree-id15 . -117) (undo-tree-id16 . -79) (undo-tree-id17 . -158) (undo-tree-id18 . -117) (undo-tree-id19 . -219) (undo-tree-id20 . -158) (undo-tree-id21 . -219) (undo-tree-id22 . -219) (undo-tree-id23 . -219) (undo-tree-id24 . -219) (undo-tree-id25 . -219) 596 (t 25975 4465 658732 125000)) nil (25975 4493 115546 41000) 0 nil])
([nil nil ((#("def reset_seed():
    new_seed = int(time.time())
    torch.manual_seed(new_seed)
    
    if torch.cuda.is_available():
        torch.cuda.manual_seed(new_seed)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 14 (face tree-sitter-hl-face:function fontified t) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 22 (fontified t) 22 30 (face tree-sitter-hl-face:variable fontified t) 30 31 (fontified t) 31 32 (face tree-sitter-hl-face:operator fontified t) 32 33 (fontified t) 33 36 (face (tree-sitter-hl-face:function.builtin tree-sitter-hl-face:function.call) fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 42 (fontified t) 42 46 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 46 47 (face (rainbow-delimiters-depth-2-face) fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t) 49 60 (fontified t) 60 71 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 91 (fontified t) 91 93 (face tree-sitter-hl-face:keyword fontified t) 93 100 (fontified t) 100 104 (face tree-sitter-hl-face:property fontified t) 104 105 (fontified t) 105 117 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 117 118 (face (rainbow-delimiters-depth-1-face) fontified t) 118 119 (face (rainbow-delimiters-depth-1-face) fontified t) 119 135 (fontified t) 135 139 (face tree-sitter-hl-face:property fontified t) 139 140 (fontified t) 140 151 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t) 161 162 (fontified t)) . -379) (undo-tree-id82 . -18) (undo-tree-id83 . -50) (undo-tree-id84 . -50) (undo-tree-id85 . -50) (undo-tree-id86 . -50) (undo-tree-id87 . -18) (undo-tree-id88 . -50) (undo-tree-id89 . -162) 541 (t 25975 4493 198733 2000)) nil (25975 4539 514540 319000) 0 nil])
([nil nil ((#("        torch.cuda.manual_seed_all(new_seed)  # For all GPUs
" 0 14 (fontified t) 14 18 (face tree-sitter-hl-face:property fontified t) 18 19 (fontified t) 19 34 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) fontified t) 35 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 46 (fontified t) 46 60 (face tree-sitter-hl-face:comment fontified t) 60 61 (fontified t)) . -379) (undo-tree-id81 . -61) 440) nil (25975 4539 514531 978000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -376) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("
" 0 1 (fontified t)) . -377) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("
" 0 1 (fontified t)) . -378) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 379) nil (25975 4539 514527 588000) 0 nil])
([nil nil ((219 . 220)) nil (25975 4539 514485 172000) 0 nil])
([nil nil ((#("from torch.distributions import Normal, MultivariateNormal
" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 25 (fontified t) 25 31 (face tree-sitter-hl-face:keyword fontified t) 31 32 (fontified t) 32 38 (face tree-sitter-hl-face:constructor fontified t) 38 40 (fontified t) 40 58 (face tree-sitter-hl-face:constructor fontified t) 58 59 (fontified t)) . 160) (undo-tree-id31 . -59) 219) nil (25975 4539 514484 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 144 . 145) (nil fontified nil 144 . 145) (nil fontified nil 126 . 144) (nil fontified nil 124 . 126) (nil fontified nil 118 . 124) (nil fontified nil 117 . 118) (nil fontified nil 111 . 117) (nil fontified nil 90 . 111) (nil fontified nil 86 . 90) (86 . 145)) nil (25975 4539 514482 6000) 0 nil])
([nil nil ((145 . 146)) nil (25975 4539 514479 375000) 0 nil])
([nil nil ((#("import torch
from torch import nn
from torch.distributions import Normal, MultivariateNormal
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 13 (fontified t) 13 17 (face tree-sitter-hl-face:keyword fontified t) 17 24 (fontified t) 24 30 (face tree-sitter-hl-face:keyword fontified t) 30 34 (fontified t) 34 38 (face tree-sitter-hl-face:keyword fontified t) 38 59 (fontified t) 59 65 (face tree-sitter-hl-face:keyword fontified t) 65 66 (fontified t) 66 72 (face tree-sitter-hl-face:constructor fontified t) 72 74 (fontified t) 74 92 (face tree-sitter-hl-face:constructor fontified t) 92 93 (rear-nonsticky t fontified t)) . 52) (undo-tree-id27 . -34) (undo-tree-id28 . -34) (undo-tree-id29 . -34) (undo-tree-id30 . -93) 145) nil (25975 4539 514478 75000) 0 nil])
([nil nil ((126 . 127)) nil (25975 4539 514471 713000) 0 nil])
([nil nil ((nil fontified nil 219 . 220) (nil fontified nil 201 . 219) (nil fontified nil 199 . 201) (nil fontified nil 193 . 199) (nil fontified nil 192 . 193) (nil fontified nil 186 . 192) (nil fontified nil 165 . 186) (nil fontified nil 161 . 165) (nil fontified nil 157 . 161) (nil fontified nil 151 . 157) (nil fontified nil 144 . 151) (nil fontified nil 140 . 144) (nil fontified nil 133 . 140) (nil fontified nil 127 . 133) (127 . 220)) nil (25975 4539 514470 232000) 0 nil])
([nil nil ((221 . 234)) nil (25975 4539 514466 184000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -233) (undo-tree-id26 . -1) 234) nil (25975 4539 514463 513000) 0 nil])
([nil nil ((233 . 251)) nil (25975 4539 514445 660000) 0 nil])
([nil nil ((#("class Activation(torch.nn.Module):
    def forward(self, x, THRESH=15):
        # return nn.ReLU()(x)
        return THRESH * 0.5 * (1.0 + torch.erf(x / np.sqrt(2.0)))
" 0 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (fontified t) 6 16 (face tree-sitter-hl-face:constructor fontified t) 16 17 (face (rainbow-delimiters-depth-1-face) fontified t) 17 23 (fontified t) 23 25 (face tree-sitter-hl-face:property fontified t) 25 26 (fontified t) 26 32 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 39 (fontified t) 39 42 (face tree-sitter-hl-face:keyword fontified t) 42 43 (fontified t) 43 50 (face (tree-sitter-hl-face:method tree-sitter-hl-face:function) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t) 51 55 (face (tree-sitter-hl-face:keyword tree-sitter-hl-face:variable.parameter) fontified t) 55 57 (fontified t) 57 58 (face tree-sitter-hl-face:variable.parameter fontified t) 58 60 (fontified t) 60 66 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 66 67 (face tree-sitter-hl-face:operator fontified t) 67 69 (face tree-sitter-hl-face:number fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t) 70 80 (fontified t) 80 101 (face tree-sitter-hl-face:comment fontified t) 101 110 (fontified t) 110 116 (face tree-sitter-hl-face:keyword fontified t) 116 117 (fontified t) 117 123 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 123 124 (fontified t) 124 125 (face tree-sitter-hl-face:operator fontified t) 125 126 (fontified t) 126 129 (face tree-sitter-hl-face:number fontified t) 129 130 (fontified t) 130 131 (face tree-sitter-hl-face:operator fontified t) 131 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-1-face) fontified t) 133 136 (face tree-sitter-hl-face:number fontified t) 136 137 (fontified t) 137 138 (face tree-sitter-hl-face:operator fontified t) 138 145 (fontified t) 145 148 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 148 149 (face (rainbow-delimiters-depth-2-face) fontified t) 149 151 (fontified t) 151 152 (face tree-sitter-hl-face:operator fontified t) 152 156 (fontified t) 156 160 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 160 161 (face (rainbow-delimiters-depth-3-face) fontified t) 161 164 (face tree-sitter-hl-face:number fontified t) 164 165 (face (rainbow-delimiters-depth-3-face) fontified t) 165 166 (face (rainbow-delimiters-depth-2-face) fontified t) 166 167 (face (rainbow-delimiters-depth-1-face) fontified t) 167 168 (fontified t)) . -740) (undo-tree-id93 . -168) 908 (t 25975 4539 594734 478000)) nil (25975 4555 816718 173000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -739) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 740) nil (25975 4555 816714 520000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . 2032)) nil (25975 4555 816708 770000) 0 nil])
([nil nil ((#("r" 0 1 (face tree-sitter-hl-face:function.call fontified t)) . -2031) (undo-tree-id90 . -1) 2032) nil (25975 4555 816705 768000) 0 nil])
([nil nil ((2040 . 2041)) nil (25975 4555 816684 995000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -2040) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 2041 (t 25975 4555 958734 999000)) nil (25975 4556 907169 347000) 0 nil])
([nil nil ((2040 . 2041)) nil (25975 4556 907133 608000) 0 nil])
([nil nil ((220 . 221) (t 25975 4557 54735 34000)) nil (25975 4582 474060 46000) 0 nil])
([nil nil ((221 . 222)) nil (25975 4582 474058 168000) 0 nil])
([nil nil ((222 . 243)) nil (25975 4582 474055 988000) 0 nil])
([nil nil ((243 . 258)) nil (25975 4582 474050 866000) 0 nil])
([nil nil ((#("import time
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 12 (fontified t)) . 21) (undo-tree-id106 . -11) (t 25975 4582 618735 847000)) nil (25975 4685 601358 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4449 . 4450) (nil fontified nil 4420 . 4450) (4420 . 4450) (t 25975 4685 734739 129000)) nil (25975 4699 730474 637000) 0 nil])
([nil nil ((4420 . 4421)) nil (25975 4699 730472 186000) 0 nil])
([nil nil ((4468 . 4472) 4460) nil (25975 4699 730470 283000) 0 nil])
([nil nil ((4521 . 4537) (#("            " 0 12 (fontified t)) . 4521) (undo-tree-id125 . -12) 4533) nil (25975 4699 730467 870000) 0 nil])
([nil nil ((4560 . 4576) (#("            " 0 12 (fontified t)) . 4560)) nil (25975 4699 730463 699000) 0 nil])
([nil nil ((4619 . 4635) (#("            " 0 12 (fontified t)) . 4619) (undo-tree-id124 . -12)) nil (25975 4699 730461 498000) 0 nil])
([nil nil ((4679 . 4683)) nil (25975 4699 730457 969000) 0 nil])
([nil nil ((4713 . 4737) (#("                    " 0 20 (fontified t)) . 4713) (undo-tree-id122 . -20) (undo-tree-id123 . -20)) nil (25975 4699 730455 803000) 0 nil])
([nil nil ((4778 . 4782) 4754) nil (25975 4699 730450 876000) 0 nil])
([nil nil ((4857 . 4885) (#("                    " 0 20 (fontified t)) . 4857) (undo-tree-id121 . -20)) nil (25975 4699 730447 899000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4881) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) 4885) nil (25975 4699 730439 566000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4925) (undo-tree-id126 . -1) 4926 (t 25975 4699 866739 578000)) nil (25975 4701 361104 935000) 0 nil])
([nil nil ((4926 . 4950) (#("        " 0 8 (fontified nil)) . 4926) (undo-tree-id127 . -8) (4925 . 4926) (t 25975 4701 490739 630000)) nil (25975 4703 298796 658000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4946) (undo-tree-id206 . -4) 4950 (t 25975 4703 434739 692000)) nil (25975 4705 213091 85000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4942) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) 4946) nil (25975 4705 213086 385000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4938) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) 4942) nil (25975 4705 213061 883000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4934) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) 4938) nil (25975 4705 213017 243000) 0 nil])
([nil nil ((#("# torch.backends.cudnn.deterministic = True
# torch.backends.cudnn.benchmark = False
" 0 43 (face tree-sitter-hl-face:comment fontified t) 43 44 (fontified t) 44 84 (face tree-sitter-hl-face:comment fontified t) 84 85 (fontified t)) . 350) (undo-tree-id207 . -85) (undo-tree-id208 . -85) (undo-tree-id209 . -85) (undo-tree-id210 . -85) (undo-tree-id211 . -85) (undo-tree-id212 . -85) (undo-tree-id213 . -85) (undo-tree-id214 . -85) (undo-tree-id215 . -85) (undo-tree-id216 . -85) (undo-tree-id217 . -85) (undo-tree-id218 . -85) (undo-tree-id219 . -85) (undo-tree-id220 . -85) (undo-tree-id221 . -85) (undo-tree-id222 . -44) (undo-tree-id223 . -44) (undo-tree-id224 . -44) (undo-tree-id225 . -44) (undo-tree-id226 . -44) (undo-tree-id227 . -44) (undo-tree-id228 . -44) (undo-tree-id229 . -44) (undo-tree-id230 . -44) (undo-tree-id231 . -44) (undo-tree-id232 . -44) (undo-tree-id233 . -44) (undo-tree-id234 . -44) (undo-tree-id235 . -44) (undo-tree-id236 . -44) (undo-tree-id237 . -44) (undo-tree-id238 . -44) (undo-tree-id239 . -44) (undo-tree-id240 . -44) (undo-tree-id241 . -44) (undo-tree-id242 . -44) (undo-tree-id243 . -85) (undo-tree-id244 . -85) (undo-tree-id245 . -44) (undo-tree-id246 . -85) (undo-tree-id247 . -85) (undo-tree-id248 . -85) (undo-tree-id249 . -85) (undo-tree-id250 . -85) (undo-tree-id251 . -85) (undo-tree-id252 . -85) (undo-tree-id253 . -85) (undo-tree-id254 . -85) (undo-tree-id255 . -85) (undo-tree-id256 . -85) (undo-tree-id257 . -85) 435 (t 25975 4705 346739 753000)) nil (25975 4711 283804 585000) 0 nil])
([nil nil ((#("import warnings
" 0 6 (face tree-sitter-hl-face:keyword fontified t) 6 16 (fontified t)) . 98) (undo-tree-id258 . -16) (undo-tree-id259 . -16) (undo-tree-id260 . -16) (undo-tree-id261 . -16) (undo-tree-id262 . -16) (undo-tree-id263 . -16) (undo-tree-id264 . -16) (undo-tree-id265 . -16) (undo-tree-id266 . -16) (undo-tree-id267 . -15) (undo-tree-id268 . -16) (undo-tree-id269 . -15) (undo-tree-id270 . -15) (undo-tree-id271 . -15) (undo-tree-id272 . -15) (undo-tree-id273 . -15) (undo-tree-id274 . -15) (undo-tree-id275 . -15) (undo-tree-id276 . -15) (undo-tree-id277 . -15) (undo-tree-id278 . -16) (undo-tree-id279 . -16) (undo-tree-id280 . -16) (undo-tree-id281 . -16) (undo-tree-id282 . -16) (undo-tree-id283 . -16) (undo-tree-id284 . -16) (undo-tree-id285 . -16) (undo-tree-id286 . -16) (undo-tree-id287 . -16) (undo-tree-id288 . -16) (undo-tree-id289 . -16) (undo-tree-id290 . -16) (undo-tree-id291 . -16) 114 (t 25975 4711 434739 946000)) nil (25975 4726 819652 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 315 . 316) (nil fontified nil 306 . 316) (nil fontified nil 300 . 306) (300 . 316)) nil (25975 4726 819578 638000) 0 nil])
([nil nil ((#("from yaml import safe_load
from time import perf_counter
" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 10 (fontified t) 10 16 (face tree-sitter-hl-face:keyword fontified t) 16 27 (fontified t) 27 31 (face tree-sitter-hl-face:keyword fontified t) 31 37 (fontified t) 37 43 (face tree-sitter-hl-face:keyword fontified t) 43 57 (fontified t)) . 41) (undo-tree-id295 . -57) (undo-tree-id296 . -57) 98 (t 25975 4726 958740 440000)) nil (25975 4738 169364 432000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -40) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 41) nil (25975 4738 169358 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 96 . 97) (nil fontified nil 83 . 97) (nil fontified nil 77 . 83) (nil fontified nil 71 . 77) (nil fontified nil 67 . 71) (nil fontified nil 56 . 67) (nil fontified nil 50 . 56) (nil fontified nil 44 . 50) (nil fontified nil 40 . 44) (40 . 97)) nil (25975 4738 169338 353000) 0 nil])
([nil nil ((40 . 41)) nil (25975 4767 779355 951000) 0 nil])
([nil nil ((#("def get_theta(a, b, GM=0, IF_NORM=0):

    if IF_NORM:
        u = a / np.linalg.norm(a)
        v = b / np.linalg.norm(b)
          
    if GM:
        u = a
        v = b - np.dot(b, u) / np.dot(u, u) * u
    else:
        u=a
        v=b

    if IF_NORM:
        v = b / np.linalg.norm(b)
    
    return np.arctan2(v, u)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 13 (face tree-sitter-hl-face:function fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (face tree-sitter-hl-face:variable.parameter fontified t) 15 17 (fontified t) 17 18 (face tree-sitter-hl-face:variable.parameter fontified t) 18 20 (fontified t) 20 22 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 22 23 (face tree-sitter-hl-face:operator fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 26 (fontified t) 26 33 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 33 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (face tree-sitter-hl-face:number fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 43 (fontified t) 43 45 (face tree-sitter-hl-face:keyword fontified t) 45 46 (fontified t) 46 53 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 53 63 (fontified t) 63 64 (face tree-sitter-hl-face:variable fontified t) 64 65 (fontified t) 65 66 (face tree-sitter-hl-face:operator fontified t) 66 69 (fontified t) 69 70 (face tree-sitter-hl-face:operator fontified t) 70 74 (fontified t) 74 80 (face tree-sitter-hl-face:property fontified t) 80 81 (fontified t) 81 85 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 97 (fontified t) 97 98 (face tree-sitter-hl-face:variable fontified t) 98 99 (fontified t) 99 100 (face tree-sitter-hl-face:operator fontified t) 100 103 (fontified t) 103 104 (face tree-sitter-hl-face:operator fontified t) 104 108 (fontified t) 108 114 (face tree-sitter-hl-face:property fontified t) 114 115 (fontified t) 115 119 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-1-face) fontified t) 122 138 (fontified t) 138 140 (face tree-sitter-hl-face:keyword fontified t) 140 141 (fontified t) 141 143 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 143 153 (fontified t) 153 154 (face tree-sitter-hl-face:variable fontified t) 154 155 (fontified t) 155 156 (face tree-sitter-hl-face:operator fontified t) 156 167 (fontified t) 167 168 (face tree-sitter-hl-face:variable fontified t) 168 169 (fontified t) 169 170 (face tree-sitter-hl-face:operator fontified t) 170 173 (fontified t) 173 174 (face tree-sitter-hl-face:operator fontified t) 174 178 (fontified t) 178 181 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-1-face) fontified t) 187 188 (fontified t) 188 189 (face tree-sitter-hl-face:operator fontified t) 189 193 (fontified t) 193 196 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t) 202 203 (fontified t) 203 204 (face tree-sitter-hl-face:operator fontified t) 204 211 (fontified t) 211 215 (face tree-sitter-hl-face:keyword fontified t) 215 225 (fontified t) 225 226 (face tree-sitter-hl-face:variable fontified t) 226 227 (face tree-sitter-hl-face:operator fontified t) 227 237 (fontified t) 237 238 (face tree-sitter-hl-face:variable fontified t) 238 239 (face tree-sitter-hl-face:operator fontified t) 239 246 (fontified t) 246 248 (face tree-sitter-hl-face:keyword fontified t) 248 249 (fontified t) 249 256 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 256 266 (fontified t) 266 267 (face tree-sitter-hl-face:variable fontified t) 267 268 (fontified t) 268 269 (face tree-sitter-hl-face:operator fontified t) 269 272 (fontified t) 272 273 (face tree-sitter-hl-face:operator fontified t) 273 277 (fontified t) 277 283 (face tree-sitter-hl-face:property fontified t) 283 284 (fontified t) 284 288 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 288 289 (face (rainbow-delimiters-depth-1-face) fontified t) 289 290 (fontified t) 290 291 (face (rainbow-delimiters-depth-1-face) fontified t) 291 301 (fontified t) 301 307 (face tree-sitter-hl-face:keyword fontified t) 307 311 (fontified t) 311 318 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 318 319 (face (rainbow-delimiters-depth-1-face) fontified t) 319 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-1-face) fontified t) 324 325 (fontified t)) . 355) (undo-tree-id358 . -325) (undo-tree-id359 . -325) (undo-tree-id360 . -325) (undo-tree-id361 . -325) (undo-tree-id362 . -325) (undo-tree-id363 . -325) (undo-tree-id364 . -325) (undo-tree-id365 . -325) (undo-tree-id366 . -325) (undo-tree-id367 . -325) (undo-tree-id368 . -325) (undo-tree-id369 . -325) (undo-tree-id370 . -325) (undo-tree-id371 . -325) (undo-tree-id372 . -325) (undo-tree-id373 . -325) (undo-tree-id374 . -325) (undo-tree-id375 . -325) (undo-tree-id376 . -325) (undo-tree-id377 . -325) (undo-tree-id378 . -297) (undo-tree-id379 . -325) (undo-tree-id380 . -297) (undo-tree-id381 . -297) (undo-tree-id382 . -297) (undo-tree-id383 . -297) (undo-tree-id384 . -297) (undo-tree-id385 . -297) (undo-tree-id386 . -297) (undo-tree-id387 . -297) (undo-tree-id388 . -297) (undo-tree-id389 . -292) (undo-tree-id390 . -297) (undo-tree-id391 . -258) (undo-tree-id392 . -292) (undo-tree-id393 . -242) (undo-tree-id394 . -258) (undo-tree-id395 . -241) (undo-tree-id396 . -242) (undo-tree-id397 . -229) (undo-tree-id398 . -242) (undo-tree-id399 . -217) (undo-tree-id400 . -229) (undo-tree-id401 . -207) (undo-tree-id402 . -229) (undo-tree-id403 . -159) (undo-tree-id404 . -229) (undo-tree-id405 . -145) (undo-tree-id406 . -159) (undo-tree-id407 . -134) (undo-tree-id408 . -159) (undo-tree-id409 . -123) (undo-tree-id410 . -159) (undo-tree-id411 . -89) (undo-tree-id412 . -159) (undo-tree-id413 . -55) (undo-tree-id414 . -159) (undo-tree-id415 . -39) (undo-tree-id416 . -159) (undo-tree-id417 . -38) (undo-tree-id418 . -159) (undo-tree-id419 . -159) (undo-tree-id420 . -159) (undo-tree-id421 . -159) (undo-tree-id422 . -159)) nil (25975 4771 300462 2000) 0 nil] [nil nil ((#("def get_theta(a, b, GM=0, IF_NORM=0):

    if IF_NORM:
        u = a / np.linalg.norm(a)
        v = b / np.linalg.norm(b)
          
    if GM:
        u = a
        v = b - np.dot(b, u) / np.dot(u, u) * u
    else:
        u=a
        v=b

    if IF_NORM:
        v = b / np.linalg.norm(b)
    
    return np.arctan2(v, u)
" 0 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (fontified t) 4 13 (face tree-sitter-hl-face:function fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 15 (face tree-sitter-hl-face:variable.parameter fontified t) 15 17 (fontified t) 17 18 (face tree-sitter-hl-face:variable.parameter fontified t) 18 20 (fontified t) 20 22 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 22 23 (face tree-sitter-hl-face:operator fontified t) 23 24 (face tree-sitter-hl-face:number fontified t) 24 26 (fontified t) 26 33 (face (tree-sitter-hl-face:variable.parameter tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 33 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (face tree-sitter-hl-face:number fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 43 (fontified t) 43 45 (face tree-sitter-hl-face:keyword fontified t) 45 46 (fontified t) 46 53 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 53 63 (fontified t) 63 64 (face tree-sitter-hl-face:variable fontified t) 64 65 (fontified t) 65 66 (face tree-sitter-hl-face:operator fontified t) 66 69 (fontified t) 69 70 (face tree-sitter-hl-face:operator fontified t) 70 74 (fontified t) 74 80 (face tree-sitter-hl-face:property fontified t) 80 81 (fontified t) 81 85 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 85 86 (face (rainbow-delimiters-depth-1-face) fontified t) 86 87 (fontified t) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t) 88 97 (fontified t) 97 98 (face tree-sitter-hl-face:variable fontified t) 98 99 (fontified t) 99 100 (face tree-sitter-hl-face:operator fontified t) 100 103 (fontified t) 103 104 (face tree-sitter-hl-face:operator fontified t) 104 108 (fontified t) 108 114 (face tree-sitter-hl-face:property fontified t) 114 115 (fontified t) 115 119 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 121 (fontified t) 121 122 (face (rainbow-delimiters-depth-1-face) fontified t) 122 138 (fontified t) 138 140 (face tree-sitter-hl-face:keyword fontified t) 140 141 (fontified t) 141 143 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 143 153 (fontified t) 153 154 (face tree-sitter-hl-face:variable fontified t) 154 155 (fontified t) 155 156 (face tree-sitter-hl-face:operator fontified t) 156 167 (fontified t) 167 168 (face tree-sitter-hl-face:variable fontified t) 168 169 (fontified t) 169 170 (face tree-sitter-hl-face:operator fontified t) 170 173 (fontified t) 173 174 (face tree-sitter-hl-face:operator fontified t) 174 178 (fontified t) 178 181 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 186 (fontified t) 186 187 (face (rainbow-delimiters-depth-1-face) fontified t) 187 188 (fontified t) 188 189 (face tree-sitter-hl-face:operator fontified t) 189 193 (fontified t) 193 196 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-1-face) fontified t) 202 203 (fontified t) 203 204 (face tree-sitter-hl-face:operator fontified t) 204 211 (fontified t) 211 215 (face tree-sitter-hl-face:keyword fontified t) 215 225 (fontified t) 225 226 (face tree-sitter-hl-face:variable fontified t) 226 227 (face tree-sitter-hl-face:operator fontified t) 227 237 (fontified t) 237 238 (face tree-sitter-hl-face:variable fontified t) 238 239 (face tree-sitter-hl-face:operator fontified t) 239 246 (fontified t) 246 248 (face tree-sitter-hl-face:keyword fontified t) 248 249 (fontified t) 249 256 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 256 266 (fontified t) 266 267 (face tree-sitter-hl-face:variable fontified t) 267 268 (fontified t) 268 269 (face tree-sitter-hl-face:operator fontified t) 269 272 (fontified t) 272 273 (face tree-sitter-hl-face:operator fontified t) 273 277 (fontified t) 277 283 (face tree-sitter-hl-face:property fontified t) 283 284 (fontified t) 284 288 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 288 289 (face (rainbow-delimiters-depth-1-face) fontified t) 289 290 (fontified t) 290 291 (face (rainbow-delimiters-depth-1-face) fontified t) 291 301 (fontified t) 301 307 (face tree-sitter-hl-face:keyword fontified t) 307 311 (fontified t) 311 318 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 318 319 (face (rainbow-delimiters-depth-1-face) fontified t) 319 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-1-face) fontified t) 324 325 (fontified t)) . 355) (undo-tree-id298 . -207) (undo-tree-id300 . -38) (undo-tree-id302 . -38) (undo-tree-id304 . -38) (undo-tree-id306 . -38) (undo-tree-id308 . -38) (undo-tree-id310 . -38) (undo-tree-id311 . -325) (undo-tree-id313 . -38) (undo-tree-id315 . -38) (undo-tree-id317 . -38) (undo-tree-id319 . -325) (undo-tree-id321 . -38) (undo-tree-id323 . -39) (undo-tree-id325 . -55) (undo-tree-id327 . -89) (undo-tree-id329 . -123) (undo-tree-id331 . -134) (undo-tree-id333 . -145) (undo-tree-id335 . -159) (undo-tree-id337 . -207) (undo-tree-id339 . -217) (undo-tree-id341 . -229) (undo-tree-id343 . -241) (undo-tree-id345 . -242) (undo-tree-id347 . -258) (undo-tree-id349 . -292) (undo-tree-id351 . -297) (undo-tree-id353 . -325) (undo-tree-id355 . -297) (undo-tree-id357 . -325) 680 (t 25975 4738 306740 802000)) ((355 . 680) (t 25975 4753 974741 300000)) (25975 4753 823599 880000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -354) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 355 (t 25975 4771 438741 856000)) nil (25975 4782 591028 261000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified nil)) . 350) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (354 . 355)) nil (25975 4782 590826 712000) 0 nil])
([nil nil ((230 . 236) (t 25975 4782 726742 215000)) nil (25975 4792 719791 935000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -235) (undo-tree-id531 . -1) 236) nil (25975 4792 719789 953000) 0 nil])
([nil nil ((235 . 238)) nil (25975 4792 719785 349000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -235) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) 236) nil (25975 4792 719781 229000) 0 nil])
([nil nil ((237 . 241)) nil (25975 4792 719730 319000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -230) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (#(" " 0 1 (fontified t)) . -231) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("g" 0 1 (fontified t)) . -232) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("e" 0 1 (fontified t)) . -233) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("t" 0 1 (fontified nil)) . -234) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("_" 0 1 (fontified nil)) . -235) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#("t" 0 1 (fontified nil)) . -236) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("h" 0 1 (fontified nil)) . -237) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#("e" 0 1 (fontified t)) . -238) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#("t" 0 1 (fontified t)) . -239) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("a" 0 1 (fontified t)) . -240) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) 241 (t 25975 4792 862742 538000)) nil (25975 4799 1763 941000) 0 nil])
([nil nil ((261 . 268)) nil (25975 4799 1709 11000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -267) (undo-tree-id532 . -1) 268) nil (25975 4799 1704 714000) 0 nil])
([nil nil ((267 . 272)) nil (25975 4799 1671 24000) 0 nil])
([nil nil ((#("from src.utils import set_seed, get_theta
" 0 4 (face tree-sitter-hl-face:keyword fontified t) 4 8 (fontified t) 8 15 (fontified t) 15 21 (face tree-sitter-hl-face:keyword fontified t) 21 41 (fontified t) 41 42 (fontified t)) . 231) (undo-tree-id566 . -30) (undo-tree-id567 . -42) 273 (t 25975 4799 138742 737000)) nil (25975 4801 721214 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 234 . 235) (nil fontified nil 234 . 235) (nil fontified nil 214 . 234) (nil fontified nil 208 . 214) (nil fontified nil 201 . 208) (nil fontified nil 197 . 201) (nil fontified nil 193 . 197) (193 . 235)) nil (25975 4802 790885 873000) 0 nil] [nil nil ((#("f" 0 1 (face tree-sitter-hl-face:keyword fontified nil)) . 194) (193 . 194) (#("
" 0 1 (fontified t)) . 192) (193 . 194)) ((#("f" 0 1 (fontified nil)) . 193) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (192 . 193) (#("
" 0 1 (fontified t)) . 193) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (194 . 195)) (25975 4801 720023 576000) 0 nil])
([nil nil ((1425 . 1441) (#("        " 0 8 (fontified t)) . 1425) (undo-tree-id579 . -8) (t 25975 4802 922742 858000)) nil (25975 4810 724317 685000) 0 nil])
nil
([nil nil ((7468 . 7470) (#("(" 0 1 (fontified nil)) . -7468) (7468 . 7469) (t 25975 4810 862743 110000)) nil (25975 4882 603620 764000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 7469)) nil (25975 4882 603618 326000) 0 nil])
([nil nil ((7662 . 7663)) nil (25975 4882 603617 73000) 0 nil])
([nil nil ((7500 . 7519) (#(" " 0 1 (fontified nil)) . 7499) (undo-tree-id583 . -1) (7500 . 7501)) nil (25975 4882 603615 480000) 0 nil])
([nil nil ((#("                              " 0 30 (fontified t)) . -7582) 7560) nil (25975 4882 603611 396000) 0 nil])
([nil nil ((7623 . 7642) (#(" " 0 1 (fontified nil)) . 7622) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (7623 . 7624)) nil (25975 4882 603607 982000) 0 nil])
([nil nil ((7671 . 7684)) nil (25975 4882 603586 277000) 0 nil])
([nil nil ((7968 . 8001) (#(" " 0 1 (fontified nil)) . 7967) (undo-tree-id589 . -1) (7968 . 7969) (t 25975 4882 738745 398000)) nil (25975 4907 708232 857000) 0 nil])
([nil nil ((8117 . 8148) (#(" " 0 1 (fontified nil)) . 8116) (undo-tree-id588 . -1) (8117 . 8118)) nil (25975 4907 708228 323000) 0 nil])
([nil nil ((8038 . 8051)) nil (25975 4907 708224 703000) 0 nil])
([nil nil ((8284 . 8318) (#(" " 0 1 (fontified nil)) . 8283) (undo-tree-id587 . -1) (8284 . 8285)) nil (25975 4907 708222 219000) 0 nil])
([nil nil ((8356 . 8390) (#(" " 0 1 (fontified nil)) . 8355) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (8356 . 8357)) nil (25975 4907 708215 3000) 0 nil])
([nil nil ((8649 . 8651) (#("(" 0 1 (fontified nil)) . -8649) (8649 . 8650) (t 25975 4907 842746 197000)) nil (25975 4925 693187 340000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8650)) nil (25975 4925 693185 7000) 0 nil])
([nil nil ((8723 . 8724)) nil (25975 4925 693183 734000) 0 nil])
([nil nil ((8687 . 8706) (#(" " 0 1 (fontified nil)) . 8686) (undo-tree-id591 . -1) (8687 . 8688)) nil (25975 4925 693182 70000) 0 nil])
([nil nil ((8900 . 8902) (#("(" 0 1 (fontified nil)) . -8900) (8900 . 8901)) nil (25975 4925 693177 170000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 8901)) nil (25975 4925 693174 774000) 0 nil])
([nil nil ((8989 . 8990)) nil (25975 4925 693172 705000) 0 nil])
([nil nil ((8924 . 8943) (#(" " 0 1 (fontified nil)) . 8923) (undo-tree-id590 . -1) (8924 . 8925)) nil (25975 4925 693167 594000) 0 nil])
([nil nil ((9464 . 9499) (#(" " 0 1 (fontified nil)) . 9463) (undo-tree-id594 . -1) (9464 . 9465) (t 25975 4925 826746 769000)) nil (25975 4940 857201 808000) 0 nil])
([nil nil ((9514 . 9549) (#(" " 0 1 (fontified nil)) . 9513) (undo-tree-id593 . -1) (9514 . 9515)) nil (25975 4940 857197 400000) 0 nil])
([nil nil ((9567 . 9602) (#(" " 0 1 (fontified nil)) . 9566) (undo-tree-id592 . -1) (9567 . 9568)) nil (25975 4940 857191 691000) 0 nil])
([nil current ((9621 . 9638)) nil (25975 4940 857173 582000) 0 nil])
nil
