(undo-tree-save-format-version . 1)
"9d5ae67f63f2950d363e6a7cdccd42628b7fbee9"
[nil nil nil nil (25891 56799 970327 356000) 0 nil]
([nil nil ((654 . 662) (#("        " 0 8 (fontified nil)) . 653) (undo-tree-id3 . -8) (661 . 662) (t 25891 55941 926403 245000)) nil (25891 56799 970325 828000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 669) (668 . 669) (667 . 669) (#("(" 0 1 (fontified nil)) . -667) (667 . 668) (666 . 666) (666 . 667) (665 . 665) (665 . 666) (663 . 663) (663 . 665) (662 . 662) (662 . 663)) nil (25891 56799 970322 786000) 0 nil])
([nil nil ((672 . 673) (671 . 671) (671 . 672) (670 . 670) (670 . 671) (669 . 669) (669 . 670) (668 . 668) (668 . 669)) nil (25891 56799 970319 493000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -672) (undo-tree-id2 . -1) 673) nil (25891 56799 970317 3000) 0 nil])
([nil nil ((674 . 674) (674 . 675) (673 . 673) (673 . 674) (672 . 672) (672 . 673)) nil (25891 56799 970314 642000) 0 nil])
([nil nil ((#("        print(self.Na)
" 0 8 (fontified t) 8 13 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 18 (fontified t face tree-sitter-hl-face:keyword) 18 19 (fontified t) 19 21 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t)) . -654) (undo-tree-id0 . -23) (undo-tree-id1 . -23) 677) nil (25891 56843 434263 567000) 0 nil])
([nil nil ((2618 . 2631) (t 25891 56844 697281 568000)) nil (25891 56880 502108 971000) 0 nil] [nil nil ((apply 10 6231 6380 undo--wrap-and-run-primitive-undo 6231 6380 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -6358) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -6328) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -6298) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -6264) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -6239) 6390))) ((apply -10 6231 6390 undo--wrap-and-run-primitive-undo 6231 6390 ((6239 . 6241) (6264 . 6266) (6298 . 6300) (6328 . 6330) (6358 . 6360) 5905))) (25891 56843 247517 559000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 2638) (2637 . 2638) (2636 . 2638) (#("(" 0 1 (fontified nil)) . -2636) (2636 . 2637) (2635 . 2635) (2635 . 2636) (2633 . 2633) (2633 . 2635) (2631 . 2631) (2631 . 2633)) nil (25891 56880 502106 767000) 0 nil])
([nil nil ((apply 8 5724 5897 undo--wrap-and-run-primitive-undo 5724 5897 ((#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -5833) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -5808) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -5757) (#("# " 0 2 (face tree-sitter-hl-face:comment fontified t)) . -5732) 5905))) ((apply -8 5724 5905 undo--wrap-and-run-primitive-undo 5724 5905 ((5732 . 5734) (5757 . 5759) (5808 . 5810) (5833 . 5835) 5474))) (25891 56843 74379 319000) 0 nil])
([nil nil ((2639 . 2639) (2639 . 2641) (2638 . 2638) (2638 . 2639) (2637 . 2637) (2637 . 2638)) nil (25891 56880 502103 131000) 0 nil])
([nil nil ((apply 4 5374 5470 undo--wrap-and-run-primitive-undo 5374 5470 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -5407) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -5382) 5474))) ((apply -4 5374 5474 undo--wrap-and-run-primitive-undo 5374 5474 ((5382 . 5384) (5407 . 5409) 6243)) (t 25891 56799 965499 834000)) (25891 56799 970287 158000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2638) (undo-tree-id5 . -1) (#("s" 0 1 (fontified t)) . -2639) (undo-tree-id6 . -1) (#("s" 0 1 (fontified t)) . -2640) (undo-tree-id7 . -1) 2641) nil (25891 56880 502100 893000) 0 nil])
nil
([nil nil ((2650 . 2652) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2650) (2650 . 2651) (2649 . 2649) (2649 . 2650) (2648 . 2648) (2648 . 2649) (2647 . 2647) (2647 . 2648) (2646 . 2646) (2646 . 2647) (2645 . 2645) (2645 . 2646) (2644 . 2644) (2644 . 2645) (2643 . 2643) (2643 . 2644) (2641 . 2641) (2641 . 2643) (2639 . 2639) (2639 . 2641) (2638 . 2638) (2638 . 2639)) nil (25891 56880 502094 911000) 0 nil])
([nil nil ((2657 . 2657) (2657 . 2658) (2656 . 2656) (2656 . 2657) (2655 . 2655) (2655 . 2656) (2654 . 2654) (2654 . 2655) (2653 . 2653) (2653 . 2654) (2652 . 2652) (2652 . 2653)) nil (25891 56880 502089 238000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2657) (undo-tree-id4 . -1) 2658) nil (25891 56880 502085 546000) 0 nil])
([nil nil ((2657 . 2657) (2657 . 2658)) nil (25891 56880 502075 313000) 0 nil])
([nil nil ((2665 . 2665) (2665 . 2666) (2664 . 2664) (2664 . 2665) (2663 . 2663) (2663 . 2664) (2662 . 2662) (2662 . 2663) (2661 . 2661) (2661 . 2662) (2660 . 2660) (2660 . 2661) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 2660) (2659 . 2660) (2658 . 2660) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2658) (2658 . 2659)) nil (25891 56880 502068 428000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -2776) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2777) (undo-tree-id29 . -1) (undo-tree-id30 . 1) (undo-tree-id31 . -1) (#("-" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -2778) (undo-tree-id32 . -1) (#("1" 0 1 (fontified t face tree-sitter-hl-face:number)) . -2779) (undo-tree-id33 . -1) (#("," 0 1 (fontified t)) . -2780) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -2781) (undo-tree-id35 . -1) (#("s" 0 1 (fontified t)) . -2782) (undo-tree-id36 . -1) (#("e" 0 1 (fontified nil)) . -2783) (undo-tree-id37 . -1) (#("l" 0 1 (fontified t)) . -2784) (undo-tree-id38 . -1) (#("f" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -2785) (undo-tree-id39 . -1) (#("." 0 1 (fontified t)) . -2786) (undo-tree-id40 . -1) (#("N" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2787) (undo-tree-id41 . -1) (#("_" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2788) (undo-tree-id42 . -1) (#("N" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2789) (undo-tree-id43 . -1) (#("E" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2790) (undo-tree-id44 . -1) (#("U" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2791) (undo-tree-id45 . -1) (#("R" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2792) (undo-tree-id46 . -1) (#("O" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2793) (undo-tree-id47 . -1) (#("N" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -2794) (undo-tree-id48 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2795) (undo-tree-id49 . 1) (undo-tree-id50 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -2796) (undo-tree-id51 . 1) (undo-tree-id52 . -1) 2797 (t 25891 56880 497108 243000)) nil (25891 56919 771087 368000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2768) (#("r" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2769) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2770) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2771) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("h" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2772) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2773) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2774) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2775) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 2776) nil (25891 56919 771036 731000) 0 nil])
([nil nil ((#("            print(hidden.detach().numpy().shape)
" 0 12 (fontified t) 12 17 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 17 18 (fontified t face (rainbow-delimiters-depth-1-face)) 18 25 (fontified t) 25 31 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 31 32 (fontified t face (rainbow-delimiters-depth-2-face)) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 34 (fontified t) 34 39 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 39 40 (fontified t face (rainbow-delimiters-depth-2-face)) 40 41 (fontified t face (rainbow-delimiters-depth-2-face)) 41 42 (fontified t) 42 47 (fontified t face tree-sitter-hl-face:property) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t)) . 2619) (undo-tree-id9 . -48) (undo-tree-id10 . -48) (undo-tree-id11 . -48) (undo-tree-id12 . -49) 2668) nil (25891 56919 771011 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2768 . 2769) (nil fontified nil 2768 . 2769) (nil fontified nil 2767 . 2768) (nil fontified nil 2762 . 2767) (nil fontified nil 2761 . 2762) (nil fontified nil 2760 . 2761) (nil fontified nil 2759 . 2760) (nil fontified nil 2754 . 2759) (nil fontified nil 2753 . 2754) (nil fontified nil 2752 . 2753) (nil fontified nil 2751 . 2752) (nil fontified nil 2745 . 2751) (nil fontified nil 2738 . 2745) (nil fontified nil 2737 . 2738) (nil fontified nil 2732 . 2737) (nil fontified nil 2720 . 2732) (2720 . 2769)) nil (25891 56919 771002 131000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2728) 2720) nil (25891 56919 770995 236000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2742) (#("t" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2743) (#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2744) (#("c" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2745) (#("h" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2746) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2747) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2748) (#("." 0 1 (fontified nil)) . -2749) (#("n" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2750) (#("u" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2751) (#("m" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2752) (#("p" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2753) (#("y" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2754) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -2755) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 2756) (undo-tree-id8 . 1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2756) (#("." 0 1 (fontified t)) . -2757) (#("s" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2758) (#("h" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2759) (#("a" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2760) (#("p" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2761) (#("e" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2762) 2763) nil (25891 56919 770988 895000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -2734) (#("i" 0 1 (fontified t)) . -2735) (#("d" 0 1 (fontified nil)) . -2736) (#("d" 0 1 (fontified t)) . -2737) (#("e" 0 1 (fontified t)) . -2738) (#("n" 0 1 (fontified t)) . -2739) (#("." 0 1 (fontified t)) . -2740) (#("d" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2741) 2742) nil (25891 56919 770963 540000) 0 nil])
([nil nil ((2741 . 2742) (2740 . 2740) (2740 . 2741) (2739 . 2739) (2739 . 2740) (2738 . 2738) (2738 . 2739) (2737 . 2737) (2737 . 2738) (2736 . 2736) (2736 . 2737) (2734 . 2734) (2734 . 2736)) nil (25891 56919 770957 216000) 0 nil])
([nil nil ((2746 . 2747) (2745 . 2745) (2745 . 2746) (2743 . 2743) (2743 . 2745) (2742 . 2742) (2742 . 2743)) nil (25891 56919 770945 740000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2668) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("0" 0 1 (fontified t face tree-sitter-hl-face:number)) . -2669) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -2670) (undo-tree-id189 . 1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 2671 (t 25891 56919 772919 356000)) nil (25891 56951 248097 947000) 0 nil])
([nil nil ((2373 . 2377) (t 25891 56951 248768 865000)) nil (25891 57258 277087 214000) 0 nil])
([nil nil ((2374 . 2378) (#("    " 0 4 (fontified nil)) . 2373) (undo-tree-id205 . -4) (2377 . 2378)) nil (25891 57258 277085 970000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2888 . 2889) (nil fontified nil 2888 . 2889) (nil fontified nil 2887 . 2888) (nil fontified nil 2855 . 2887) (nil fontified nil 2854 . 2855) (nil fontified nil 2844 . 2854) (nil fontified nil 2843 . 2844) (nil fontified nil 2829 . 2843) (nil fontified nil 2828 . 2829) (nil fontified nil 2827 . 2828) (nil fontified nil 2820 . 2827) (nil fontified nil 2819 . 2820) (nil fontified nil 2814 . 2819) (nil fontified nil 2797 . 2814) (nil fontified nil 2796 . 2797) (nil fontified nil 2787 . 2796) (nil fontified nil 2786 . 2787) (nil fontified nil 2773 . 2786) (nil fontified nil 2772 . 2773) (nil fontified nil 2767 . 2772) (nil fontified nil 2745 . 2767) (nil fontified nil 2744 . 2745) (nil fontified nil 2743 . 2744) (nil fontified nil 2742 . 2743) (nil fontified nil 2740 . 2742) (nil fontified nil 2739 . 2740) (nil fontified nil 2738 . 2739) (nil fontified nil 2737 . 2738) (nil fontified nil 2736 . 2737) (nil fontified nil 2735 . 2736) (nil fontified nil 2734 . 2735) (nil fontified nil 2728 . 2734) (nil fontified nil 2727 . 2728) (nil fontified nil 2723 . 2727) (nil fontified nil 2722 . 2723) (nil fontified nil 2717 . 2722) (nil fontified nil 2716 . 2717) (nil fontified nil 2712 . 2716) (nil fontified nil 2711 . 2712) (nil fontified nil 2707 . 2711) (nil fontified nil 2704 . 2707) (nil fontified nil 2703 . 2704) (nil fontified nil 2698 . 2703) (nil fontified nil 2695 . 2698) (nil fontified nil 2694 . 2695) (nil fontified nil 2688 . 2694) (nil fontified nil 2665 . 2688) (nil fontified nil 2664 . 2665) (nil fontified nil 2663 . 2664) (nil fontified nil 2662 . 2663) (nil fontified nil 2661 . 2662) (nil fontified nil 2656 . 2661) (nil fontified nil 2655 . 2656) (nil fontified nil 2651 . 2655) (nil fontified nil 2650 . 2651) (nil fontified nil 2648 . 2650) (nil fontified nil 2638 . 2648) (nil fontified nil 2637 . 2638) (nil fontified nil 2636 . 2637) (nil fontified nil 2635 . 2636) (nil fontified nil 2633 . 2635) (nil fontified nil 2632 . 2633) (nil fontified nil 2631 . 2632) (nil fontified nil 2630 . 2631) (nil fontified nil 2629 . 2630) (nil fontified nil 2628 . 2629) (nil fontified nil 2622 . 2628) (nil fontified nil 2621 . 2622) (nil fontified nil 2617 . 2621) (nil fontified nil 2616 . 2617) (nil fontified nil 2615 . 2616) (nil fontified nil 2614 . 2615) (nil fontified nil 2613 . 2614) (nil fontified nil 2607 . 2613) (nil fontified nil 2606 . 2607) (nil fontified nil 2602 . 2606) (nil fontified nil 2601 . 2602) (nil fontified nil 2596 . 2601) (nil fontified nil 2595 . 2596) (nil fontified nil 2591 . 2595) (nil fontified nil 2590 . 2591) (nil fontified nil 2586 . 2590) (nil fontified nil 2583 . 2586) (nil fontified nil 2582 . 2583) (nil fontified nil 2577 . 2582) (nil fontified nil 2574 . 2577) (nil fontified nil 2573 . 2574) (nil fontified nil 2567 . 2573) (nil fontified nil 2544 . 2567) (nil fontified nil 2543 . 2544) (nil fontified nil 2542 . 2543) (nil fontified nil 2541 . 2542) (nil fontified nil 2540 . 2541) (nil fontified nil 2535 . 2540) (nil fontified nil 2534 . 2535) (nil fontified nil 2530 . 2534) (nil fontified nil 2529 . 2530) (nil fontified nil 2527 . 2529) (nil fontified nil 2517 . 2527) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2512 . 2514) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2501 . 2507) (nil fontified nil 2500 . 2501) (nil fontified nil 2496 . 2500) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2489 . 2494) (nil fontified nil 2488 . 2489) (nil fontified nil 2484 . 2488) (nil fontified nil 2483 . 2484) (nil fontified nil 2479 . 2483) (nil fontified nil 2476 . 2479) (nil fontified nil 2475 . 2476) (nil fontified nil 2470 . 2475) (nil fontified nil 2467 . 2470) (nil fontified nil 2466 . 2467) (nil fontified nil 2460 . 2466) (nil fontified nil 2441 . 2460) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2428 . 2436) (nil fontified nil 2409 . 2428) (nil fontified nil 2408 . 2409) (nil fontified nil 2403 . 2408) (nil fontified nil 2401 . 2403) (nil fontified nil 2397 . 2401) (nil fontified nil 2396 . 2397) (nil fontified nil 2382 . 2396) (nil fontified nil 2381 . 2382) (nil fontified nil 2378 . 2381) (nil fontified nil 2374 . 2378) (2374 . 2889)) nil (25891 57258 277078 261000) 0 nil])
([nil nil ((2889 . 2897) (#("    " 0 4 (fontified t)) . 2889)) nil (25891 57258 277054 722000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2403) (undo-tree-id201 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2404) (undo-tree-id202 . -1) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2405) (undo-tree-id203 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2406) (undo-tree-id204 . -1) 2407) nil (25891 57258 277051 692000) 0 nil])
([nil nil ((2406 . 2406) (2406 . 2407) (2404 . 2404) (2404 . 2406)) nil (25891 57258 277035 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2499 . 2500) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2495 . 2497) (nil fontified nil 2487 . 2495) (nil fontified nil 2486 . 2487) (nil fontified nil 2482 . 2486) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2472 . 2479) (nil fontified nil 2471 . 2472) (nil fontified nil 2467 . 2471) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2455 . 2463) (nil fontified nil 2454 . 2455) (nil fontified nil 2450 . 2454) (nil fontified nil 2449 . 2450) (nil fontified nil 2444 . 2449) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2437 . 2442) (nil fontified nil 2433 . 2437) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2426 . 2431) (nil fontified nil 2410 . 2426) (2410 . 2500) (t 25891 57258 275333 466000)) nil (25891 57287 927370 868000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -2419) (2410 . 2411)) nil (25891 57287 927364 28000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2401) (undo-tree-id206 . -1) (#(" " 0 1 (fontified t)) . -2402) (undo-tree-id207 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2403) (undo-tree-id208 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2404) (undo-tree-id209 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2405) (undo-tree-id210 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -2406) (undo-tree-id211 . -1) 2407) nil (25891 57287 927360 361000) 0 nil])
([nil nil ((2404 . 2412)) nil (25891 57287 927337 379000) 0 nil])
([nil nil ((3226 . 3239) (t 25891 57287 927197 296000)) nil (25891 57332 579360 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3628 . 3629) (nil fontified nil 3628 . 3629) (nil fontified nil 3627 . 3628) (nil fontified nil 3626 . 3627) (nil fontified nil 3614 . 3626) (nil fontified nil 3613 . 3614) (nil fontified nil 3609 . 3613) (nil fontified nil 3570 . 3609) (nil fontified nil 3561 . 3570) (nil fontified nil 3560 . 3561) (nil fontified nil 3556 . 3560) (nil fontified nil 3555 . 3556) (nil fontified nil 3553 . 3555) (nil fontified nil 3552 . 3553) (nil fontified nil 3551 . 3552) (nil fontified nil 3548 . 3551) (nil fontified nil 3547 . 3548) (nil fontified nil 3546 . 3547) (nil fontified nil 3544 . 3546) (nil fontified nil 3519 . 3544) (nil fontified nil 3518 . 3519) (nil fontified nil 3513 . 3518) (nil fontified nil 3512 . 3513) (nil fontified nil 3498 . 3512) (nil fontified nil 3497 . 3498) (nil fontified nil 3493 . 3497) (nil fontified nil 3467 . 3493) (nil fontified nil 3460 . 3467) (nil fontified nil 3459 . 3460) (nil fontified nil 3455 . 3459) (nil fontified nil 3454 . 3455) (nil fontified nil 3452 . 3454) (nil fontified nil 3390 . 3452) (nil fontified nil 3389 . 3390) (nil fontified nil 3379 . 3389) (nil fontified nil 3378 . 3379) (nil fontified nil 3372 . 3378) (nil fontified nil 3346 . 3372) (nil fontified nil 3345 . 3346) (nil fontified nil 3332 . 3345) (nil fontified nil 3331 . 3332) (nil fontified nil 3319 . 3331) (nil fontified nil 3318 . 3319) (nil fontified nil 3314 . 3318) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3311 . 3312) (nil fontified nil 3301 . 3311) (nil fontified nil 3279 . 3301) (nil fontified nil 3278 . 3279) (nil fontified nil 3277 . 3278) (nil fontified nil 3275 . 3277) (nil fontified nil 3274 . 3275) (nil fontified nil 3266 . 3274) (nil fontified nil 3265 . 3266) (nil fontified nil 3261 . 3265) (nil fontified nil 3260 . 3261) (nil fontified nil 3259 . 3260) (nil fontified nil 3245 . 3259) (nil fontified nil 3243 . 3245) (nil fontified nil 3227 . 3243) (3227 . 3629)) nil (25891 57332 579356 454000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -3240) (3227 . 3228)) nil (25891 57332 579345 140000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3294) 3290) nil (25891 57332 579343 883000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant))) . -3158) (undo-tree-id267 . -1) 3159) nil (25891 57332 579342 81000) 0 nil])
([nil nil ((3162 . 3162) (3162 . 3163) (3161 . 3161) (3161 . 3162) (3160 . 3160) (3160 . 3161) (3158 . 3158) (3158 . 3160)) nil (25891 57332 579339 831000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3162) (undo-tree-id266 . -1) 3163) nil (25891 57332 579337 55000) 0 nil])
([nil nil ((3168 . 3168) (3168 . 3170) (3167 . 3167) (3167 . 3168) (3165 . 3165) (3165 . 3167) (3164 . 3164) (3164 . 3165) (3163 . 3163) (3163 . 3164) (3162 . 3162) (3162 . 3163)) nil (25891 57332 579334 630000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3367) 3351) nil (25891 57332 579332 41000) 0 nil])
([nil nil ((#("                data_stack = self.stack_arrays(time_vec, stp)
                data.append(data_stack)
" 0 16 (fontified t) 16 26 (fontified t face tree-sitter-hl-face:variable) 26 27 (fontified t) 27 28 (fontified t face tree-sitter-hl-face:operator) 28 29 (fontified t) 29 33 (fontified t face tree-sitter-hl-face:keyword) 33 34 (fontified t) 34 46 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-1-face)) 61 62 (fontified t) 62 83 (fontified t) 83 89 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 89 90 (fontified t face (rainbow-delimiters-depth-1-face)) 90 100 (fontified t) 100 101 (fontified t face (rainbow-delimiters-depth-1-face)) 101 102 (fontified t)) . -3289) (undo-tree-id264 . -102) (undo-tree-id265 . -102) 3391) nil (25891 57332 579330 728000) 0 nil])
([nil nil ((#("                    if self.VERBOSE:
" 0 20 (fontified t) 20 22 (fontified t face tree-sitter-hl-face:keyword) 22 23 (fontified t) 23 27 (fontified t face tree-sitter-hl-face:keyword) 27 28 (fontified t) 28 35 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 35 37 (fontified t)) . -3330) (undo-tree-id262 . -37) (undo-tree-id263 . -37) 3367) nil (25891 57332 579328 76000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3346) 3330) nil (25891 57332 579325 274000) 0 nil])
([nil nil ((#("                        " 0 24 (fontified t)) . -3305)) nil (25891 57332 579324 225000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3365) 3349) nil (25891 57332 579323 147000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3422) 3418) nil (25891 57332 579321 936000) 0 nil])
([nil nil ((#("                if 'cos' in self.STRUCTURE:         
                    self.print_tuning()
" 0 16 (fontified t) 16 18 (fontified t face tree-sitter-hl-face:keyword) 18 19 (fontified t) 19 20 (fontified t face tree-sitter-hl-face:string) 20 23 (fontified t face tree-sitter-hl-face:string) 23 24 (fontified t face tree-sitter-hl-face:string) 24 25 (fontified t) 25 27 (fontified t face tree-sitter-hl-face:operator) 27 28 (fontified t) 28 32 (fontified t face tree-sitter-hl-face:keyword) 32 33 (fontified t) 33 42 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 42 53 (fontified t) 53 73 (fontified t) 73 77 (fontified t face tree-sitter-hl-face:keyword) 77 78 (fontified t) 78 90 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 90 91 (fontified t face (rainbow-delimiters-depth-1-face)) 91 92 (fontified t face (rainbow-delimiters-depth-1-face)) 92 93 (rear-nonsticky t fontified t)) . -3349) (undo-tree-id258 . -93) (undo-tree-id259 . -36) (undo-tree-id260 . -41) (undo-tree-id261 . -93) 3442) nil (25891 57332 579320 392000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3288) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 3289) nil (25891 57332 579315 216000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3341) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("i" 0 1 (fontified t)) . -3342) (undo-tree-id252 . -1) (#("m" 0 1 (fontified t)) . -3343) (undo-tree-id253 . -1) (#("e" 0 1 (fontified t)) . -3344) (undo-tree-id254 . -1) (#("s" 0 1 (fontified t)) . -3345) (undo-tree-id255 . -1) 3346) nil (25891 57332 579306 499000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3242 . 3243) (nil fontified nil 3242 . 3243) (nil fontified nil 3241 . 3242) (nil fontified nil 3239 . 3241) (nil fontified nil 3238 . 3239) (nil fontified nil 3234 . 3238) (nil fontified nil 3233 . 3234) (nil fontified nil 3232 . 3233) (nil fontified nil 3231 . 3232) (nil fontified nil 3223 . 3231) (nil fontified nil 3222 . 3223) (nil fontified nil 3218 . 3222) (nil fontified nil 3217 . 3218) (nil fontified nil 3214 . 3217) (nil fontified nil 3213 . 3214) (nil fontified nil 3212 . 3213) (nil fontified nil 3211 . 3212) (nil fontified nil 3203 . 3211) (nil fontified nil 3202 . 3203) (nil fontified nil 3198 . 3202) (nil fontified nil 3189 . 3198) (nil fontified nil 3188 . 3189) (nil fontified nil 3186 . 3188) (nil fontified nil 3185 . 3186) (nil fontified nil 3181 . 3185) (nil fontified nil 3180 . 3181) (nil fontified nil 3179 . 3180) (nil fontified nil 3178 . 3179) (nil fontified nil 3170 . 3178) (nil fontified nil 3169 . 3170) (nil fontified nil 3165 . 3169) (nil fontified nil 3164 . 3165) (nil fontified nil 3161 . 3164) (nil fontified nil 3160 . 3161) (nil fontified nil 3159 . 3160) (nil fontified nil 3158 . 3159) (nil fontified nil 3150 . 3158) (nil fontified nil 3149 . 3150) (nil fontified nil 3145 . 3149) (nil fontified nil 3137 . 3145) (3137 . 3243) (t 25891 57332 578992 890000)) nil (25891 57359 686190 229000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3264) (undo-tree-id268 . -1) (#("u" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -3265) (undo-tree-id269 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3266) (undo-tree-id270 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3267) (undo-tree-id271 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3268) (undo-tree-id272 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3269) (undo-tree-id273 . -1) (#("g" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3270) (undo-tree-id274 . -1) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -3271) (undo-tree-id275 . -1) 3272 (t 25891 57359 682869 158000)) nil (25891 57403 26874 16000) 0 nil])
([nil nil ((3442 . 3442) (3442 . 3443) (3441 . 3441) (3441 . 3442) (3440 . 3440) (3440 . 3441) (3439 . 3439) (3439 . 3440)) nil (25891 57403 26850 919000) 0 nil])
([nil nil ((2406 . 2406) (2406 . 2407) (2405 . 2405) (2405 . 2406) (2404 . 2404) (2404 . 2405) (2401 . 2401) (2401 . 2404) (t 25891 57403 26671 798000)) nil (25891 57410 586307 370000) 0 nil])
([nil nil ((#("running_step" 0 12 (fontified t)) . 3358) (t 25891 57410 586637 437000)) nil (25891 57426 175850 587000) 0 nil])
([nil nil ((3361 . 3361) (3361 . 3362) (3360 . 3360) (3360 . 3361) (3359 . 3359) (3359 . 3360) (3358 . 3358) (3358 . 3359)) nil (25891 57426 175848 994000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -3361) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) 3362) nil (25891 57426 175842 485000) 0 nil])
([nil nil ((3361 . 3361) (3361 . 3362)) nil (25891 57426 175764 511000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3384) (undo-tree-id354 . -1) (#(" " 0 1 (fontified t)) . -3385) (undo-tree-id355 . -1) (#(" " 0 1 (fontified t)) . -3386) (undo-tree-id356 . -1) (#(" " 0 1 (fontified t)) . -3387) (undo-tree-id357 . -1) (#(" " 0 1 (fontified t)) . -3388) (undo-tree-id358 . -1) (#(" " 0 1 (fontified t)) . -3389) (undo-tree-id359 . -1) (#(" " 0 1 (fontified t)) . -3390) (undo-tree-id360 . -1) (#(" " 0 1 (fontified t)) . -3391) (undo-tree-id361 . -1) (#(" " 0 1 (fontified nil)) . -3392) (undo-tree-id362 . -1) (#(" " 0 1 (fontified t)) . -3393) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -3394) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -3395) (undo-tree-id365 . -1) (#(" " 0 1 (fontified t)) . -3396) (undo-tree-id366 . -1) (#(" " 0 1 (fontified t)) . -3397) (undo-tree-id367 . -1) (#(" " 0 1 (fontified t)) . -3398) (undo-tree-id368 . -1) (#(" " 0 1 (fontified t)) . -3399) (undo-tree-id369 . -1) 3400 (t 25891 57426 174566 641000)) nil (25891 57467 285799 515000) 0 nil])
([nil nil ((3431 . 3431) (3431 . 3432) (3429 . 3429) (3429 . 3431) (3428 . 3428) (3428 . 3429) (3425 . 3425) (3425 . 3428)) nil (25891 57467 285775 77000) 0 nil])
([nil nil ((2413 . 2413) (2413 . 2414) (2411 . 2411) (2411 . 2413) (2410 . 2410) (2410 . 2411) (2408 . 2408) (2408 . 2410) (2407 . 2407) (2407 . 2408)) nil (25891 57467 285772 32000) 0 nil])
([nil nil ((nil fontified t 2799 . 2804) (nil face tree-sitter-hl-face:property 2799 . 2804) (#("self.rates" 0 4 (fontified t face tree-sitter-hl-face:keyword) 4 5 (fontified t) 5 10 (fontified t face tree-sitter-hl-face:property)) . -2799) (2809 . 2814) (nil fontified t 2683 . 2688) (nil face tree-sitter-hl-face:property 2683 . 2688) (#("self.rates" 0 4 (fontified t face tree-sitter-hl-face:keyword) 4 5 (fontified t) 5 10 (fontified t face tree-sitter-hl-face:property)) . -2683) (2693 . 2698) (nil fontified t 2581 . 2586) (nil face tree-sitter-hl-face:property 2581 . 2586) (#("self.rates" 0 4 (fontified t face tree-sitter-hl-face:keyword) 4 5 (fontified t) 5 10 (fontified t face tree-sitter-hl-face:property)) . -2581) (2591 . 2596)) nil (25891 57467 285764 257000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3419) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("a" 0 1 (fontified t)) . -3420) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("t" 0 1 (fontified t)) . -3421) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("e" 0 1 (fontified t)) . -3422) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("s" 0 1 (fontified t)) . -3423) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 3424 (t 25891 57467 282380 282000)) nil (25891 57481 120580 989000) 0 nil])
([nil nil ((3421 . 3421) (3421 . 3425) (3420 . 3420) (3420 . 3421) (3419 . 3419) (3419 . 3420)) nil (25891 57481 120555 94000) 0 nil])
([nil nil ((#("np." 0 3 (fontified t)) . -2914) (2917 . 2923) (nil fontified nil 2812 . 2815) (#("np." 0 3 (fontified nil)) . -2809) (2812 . 2818) (nil fontified t 2800 . 2803) (#("np." 0 3 (fontified t)) . -2797) (2800 . 2806) (nil fontified nil 2690 . 2693) (#("np." 0 3 (fontified nil)) . -2687) (2690 . 2696) (nil fontified t 2678 . 2681) (#("np." 0 3 (fontified t)) . -2675) (2678 . 2684) (nil fontified nil 2582 . 2585) (#("np." 0 3 (fontified nil)) . -2579) (2582 . 2588) (nil fontified t 2570 . 2573) (#("np." 0 3 (fontified t)) . -2567) (2570 . 2576) (#("np." 0 3 (fontified t)) . -2442) (t 25891 57481 118317 663000) (2445 . 2451) (t 25891 57481 118317 663000)) nil (25891 62127 942636 641000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 2442) (t 25891 62127 943659 820000)) nil (25891 62158 860975 331000) 0 nil])
([nil nil ((2442 . 2442) (2442 . 2444)) nil (25891 62158 860974 284000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 2564)) nil (25891 62158 860973 314000) 0 nil])
([nil nil ((2564 . 2564) (2564 . 2566)) nil (25891 62158 860972 378000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 2669)) nil (25891 62158 860971 372000) 0 nil])
([nil nil ((2669 . 2669) (2669 . 2671)) nil (25891 62158 860970 429000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 2788)) nil (25891 62158 860969 344000) 0 nil])
([nil nil ((2788 . 2788) (2788 . 2790)) nil (25891 62158 860968 479000) 0 nil])
([nil nil ((#("n" 0 1 (fontified nil)) . 2790) (2789 . 2790) (#("p" 0 1 (fontified nil)) . 2788) (2789 . 2790)) nil (25891 62158 860967 136000) 0 nil])
([nil nil ((#("torch" 0 5 (fontified t)) . 2902) (undo-tree-id380 . -2) (undo-tree-id381 . -3) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -1) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -5)) nil (25891 62158 860963 704000) 0 nil])
([nil nil ((2903 . 2903) (2903 . 2904) (2902 . 2902) (2902 . 2903)) nil (25891 62158 860937 371000) 0 nil])
([nil nil ((2838 . 2840) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2838) (2838 . 2839) (2837 . 2837) (2837 . 2838) (2836 . 2836) (2836 . 2837) (2835 . 2835) (2835 . 2836) (2834 . 2834) (2834 . 2835) (2833 . 2833) (2833 . 2834) (2832 . 2832) (2832 . 2833) (2831 . 2831) (2831 . 2832) (t 25891 62158 859418 604000)) nil (25891 62191 111316 896000) 0 nil])
([nil nil ((2733 . 2735) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2733) (2733 . 2734) (2732 . 2732) (2732 . 2733) (2731 . 2731) (2731 . 2732) (2730 . 2730) (2730 . 2731) (2729 . 2729) (2729 . 2730) (2728 . 2728) (2728 . 2729) (2727 . 2727) (2727 . 2728) (2726 . 2726) (2726 . 2727)) nil (25891 62191 111307 831000) 0 nil])
([nil nil ((2613 . 2621) (t 25891 62191 111172 890000)) nil (25891 62197 150904 191000) 0 nil])
([nil nil ((2614 . 2616) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2614) (2614 . 2615) (2613 . 2613) (2613 . 2614) (2612 . 2612) (2612 . 2613) (2611 . 2611) (2611 . 2612) (2610 . 2610) (2610 . 2611) (2609 . 2609) (2609 . 2610) (2608 . 2608) (2608 . 2609) (2607 . 2607) (2607 . 2608)) nil (25891 62197 150902 57000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face tree-sitter-hl-face:property)) . -2613) (undo-tree-id394 . -1) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -2614) (undo-tree-id395 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 2615)) nil (25891 62197 150897 287000) 0 nil])
([nil nil ((2614 . 2616) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2614) (2614 . 2615) (2613 . 2613) (2613 . 2614)) nil (25891 62197 150881 141000) 0 nil])
([nil nil ((2622 . 2622) (2622 . 2623) (2621 . 2621) (2621 . 2622) (2620 . 2620) (2620 . 2621) (2619 . 2619) (2619 . 2620) (2618 . 2618) (2618 . 2619) (2617 . 2617) (2617 . 2618) (2616 . 2616) (2616 . 2617) (t 25891 62197 151127 518000)) nil (25891 62221 142224 166000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -2622) (undo-tree-id396 . -1) 2623) nil (25891 62221 142219 987000) 0 nil])
([nil nil ((2622 . 2624) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2622) (2622 . 2623)) nil (25891 62221 142208 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2767 . 2768) (nil fontified nil 2767 . 2768) (nil fontified nil 2766 . 2767) (nil fontified nil 2761 . 2766) (nil fontified nil 2760 . 2761) (2760 . 2768)) nil (25891 62221 142206 486000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2889 . 2890) (nil fontified nil 2889 . 2890) (nil fontified nil 2888 . 2889) (nil fontified nil 2883 . 2888) (nil fontified nil 2882 . 2883) (2882 . 2890)) nil (25891 62221 142200 70000) 0 nil])
([nil nil ((3143 . 3151) (#("        " 0 8 (fontified nil)) . 3142) (undo-tree-id404 . -8) (3150 . 3151) (t 25891 62221 142949 219000)) nil (25891 62282 308611 692000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3144) (3143 . 3144) (#("
" 0 1 (fontified t)) . 3142) (3143 . 3144)) nil (25891 62282 308607 225000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3284 . 3285) (nil fontified nil 3284 . 3285) (nil fontified nil 3283 . 3284) (nil fontified nil 3282 . 3283) (nil fontified nil 3281 . 3282) (nil fontified nil 3275 . 3281) (nil fontified nil 3274 . 3275) (nil fontified nil 3270 . 3274) (nil fontified nil 3269 . 3270) (nil fontified nil 3268 . 3269) (nil fontified nil 3262 . 3268) (nil fontified nil 3261 . 3262) (nil fontified nil 3260 . 3261) (nil fontified nil 3228 . 3260) (nil fontified nil 3227 . 3228) (nil fontified nil 3226 . 3227) (nil fontified nil 3221 . 3226) (nil fontified nil 3211 . 3221) (nil fontified nil 3210 . 3211) (nil fontified nil 3209 . 3210) (nil fontified nil 3197 . 3209) (nil fontified nil 3196 . 3197) (nil fontified nil 3195 . 3196) (nil fontified nil 3194 . 3195) (nil fontified nil 3191 . 3194) (nil fontified nil 3186 . 3191) (nil fontified nil 3185 . 3186) (nil fontified nil 3184 . 3185) (nil fontified nil 3181 . 3184) (nil fontified nil 3170 . 3181) (nil fontified nil 3169 . 3170) (nil fontified nil 3168 . 3169) (nil fontified nil 3156 . 3168) (nil fontified nil 3155 . 3156) (nil fontified nil 3154 . 3155) (nil fontified nil 3153 . 3154) (nil fontified nil 3148 . 3153) (nil fontified nil 3144 . 3148) (3144 . 3285)) nil (25891 62282 308601 532000) 0 nil])
([nil nil ((3144 . 3152) (#("    " 0 4 (fontified t)) . 3144)) nil (25891 62282 308587 602000) 0 nil])
([nil nil ((#("    model.run()
" 0 10 (fontified t) 10 13 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 16 (fontified t)) . -3175) (undo-tree-id402 . -16) (undo-tree-id403 . -16) 3191) nil (25891 62282 308585 334000) 0 nil])
([nil nil ((#("    end = perf_counter()
    
    print(\"Elapsed (with compilation) = {}s\".format((end - start)))
" 0 4 (fontified t) 4 7 (fontified t face tree-sitter-hl-face:variable) 7 8 (fontified t) 8 9 (fontified t face tree-sitter-hl-face:operator) 9 10 (fontified t) 10 22 (fontified t face tree-sitter-hl-face:function\.call) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 25 (fontified t) 25 34 (fontified t) 34 39 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 41 (fontified t face tree-sitter-hl-face:string) 41 73 (fontified t face tree-sitter-hl-face:string) 73 74 (fontified t face tree-sitter-hl-face:string) 74 75 (fontified t) 75 81 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 81 82 (fontified t face (rainbow-delimiters-depth-2-face)) 82 83 (fontified t face (rainbow-delimiters-depth-3-face)) 83 87 (fontified t) 87 88 (fontified t face tree-sitter-hl-face:operator) 88 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-3-face)) 95 96 (fontified t face (rainbow-delimiters-depth-2-face)) 96 97 (fontified t face (rainbow-delimiters-depth-1-face)) 97 98 (rear-nonsticky t fontified t)) . 3175) (undo-tree-id400 . -98) (undo-tree-id401 . -98) 3273) nil (25891 62282 308580 171000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3174) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 3175) nil (25891 62282 308574 418000) 0 nil])
([nil nil ((3175 . 3183) (#("       " 0 7 (fontified nil)) . 3175) (3174 . 3175)) nil (25891 62282 308557 350000) 0 nil])
([nil nil ((3667 . 3676)) nil (25891 62282 308554 964000) 0 nil])
([nil nil ((nil fontified nil 3765 . 3766) (nil fontified nil 3764 . 3765) (nil fontified nil 3763 . 3764) (nil fontified nil 3762 . 3763) (nil fontified nil 3756 . 3762) (nil fontified nil 3755 . 3756) (nil fontified nil 3751 . 3755) (nil fontified nil 3750 . 3751) (nil fontified nil 3749 . 3750) (nil fontified nil 3743 . 3749) (nil fontified nil 3742 . 3743) (nil fontified nil 3741 . 3742) (nil fontified nil 3709 . 3741) (nil fontified nil 3708 . 3709) (nil fontified nil 3707 . 3708) (nil fontified nil 3702 . 3707) (nil fontified nil 3693 . 3702) (nil fontified nil 3692 . 3693) (nil fontified nil 3691 . 3692) (nil fontified nil 3690 . 3691) (nil fontified nil 3678 . 3690) (nil fontified nil 3677 . 3678) (nil fontified nil 3676 . 3677) (nil fontified nil 3675 . 3676) (nil fontified nil 3672 . 3675) (nil fontified nil 3668 . 3672) (3668 . 3766)) nil (25891 62282 308551 184000) 0 nil])
([nil nil ((3668 . 3676) (#("    " 0 4 (fontified t)) . 3668)) nil (25891 62282 308538 683000) 0 nil])
([nil nil ((3702 . 3710) (#("    " 0 4 (fontified t)) . 3702)) nil (25891 62282 308535 150000) 0 nil])
([nil nil ((3667 . 3675)) nil (25891 62282 308528 854000) 0 nil])
([nil nil ((#("        print(result.shape)
" 0 8 (fontified t) 8 13 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 21 (fontified t) 21 26 (fontified t face tree-sitter-hl-face:property) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (rear-nonsticky t fontified t)) . 3639) (undo-tree-id405 . -28) (undo-tree-id406 . -27) (undo-tree-id407 . -27) (undo-tree-id408 . -27) (undo-tree-id409 . -28) (undo-tree-id410 . -28) (undo-tree-id411 . -28) (undo-tree-id412 . -28) (undo-tree-id413 . -28) (undo-tree-id414 . -28) (undo-tree-id415 . -28) (undo-tree-id416 . -28) (undo-tree-id417 . -28) (undo-tree-id418 . -28) (undo-tree-id419 . -28) (undo-tree-id420 . -28) (undo-tree-id421 . -28) (undo-tree-id422 . -28) (undo-tree-id423 . -28) (undo-tree-id424 . -28) (undo-tree-id425 . -28) (undo-tree-id426 . -28) (undo-tree-id427 . -28) (undo-tree-id428 . -28) (undo-tree-id429 . -28) (undo-tree-id430 . -28) (undo-tree-id431 . -28) (undo-tree-id432 . -28) (undo-tree-id433 . -28) (t 25891 62282 310507 782000)) nil (25891 62286 791688 121000) 0 nil])
([nil nil ((nil rear-nonsticky nil 120 . 121) (nil fontified nil 107 . 121) (nil fontified nil 101 . 107) (nil fontified nil 95 . 101) (nil fontified nil 91 . 95) (91 . 121) (t 25891 62286 790476 149000)) nil (25891 62297 735496 236000) 0 nil])
([nil nil ((5249 . 5261) (#("            " 0 1 (fontified nil) 1 12 (fontified nil)) . 5248) (undo-tree-id440 . -12) (5260 . 5261) (t 25891 62297 734399 255000)) nil (25891 63449 479581 716000) 0 nil])
([nil nil ((5268 . 5268) (5268 . 5269) (5267 . 5267) (5267 . 5268) (5266 . 5266) (5266 . 5267) (5265 . 5265) (5265 . 5266) (5264 . 5266) (#("'" 0 1 (fontified nil)) . -5264) (5263 . 5265) (5262 . 5262) (5262 . 5263) (5261 . 5261) (5261 . 5262)) nil (25891 63449 479578 548000) 0 nil])
([nil nil ((5273 . 5273) (5273 . 5274) (5272 . 5272) (5272 . 5273) (5270 . 5270) (5270 . 5272)) nil (25891 63449 479574 441000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5273) (undo-tree-id439 . -1) 5274) nil (25891 63449 479572 273000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5300 . 5301) (nil fontified nil 5300 . 5301) (nil fontified nil 5296 . 5300) (nil fontified nil 5295 . 5296) (nil fontified nil 5294 . 5295) (nil fontified nil 5293 . 5294) (nil fontified nil 5292 . 5293) (nil fontified nil 5291 . 5292) (nil fontified nil 5288 . 5291) (nil fontified nil 5287 . 5288) (nil fontified nil 5278 . 5287) (nil fontified nil 5277 . 5278) (nil fontified nil 5273 . 5277) (5273 . 5301)) nil (25891 63449 479569 371000) 0 nil])
([nil nil ((5273 . 5274)) nil (25891 63449 479565 493000) 0 nil])
([nil nil ((5302 . 5302) (5302 . 5303)) nil (25891 63449 479564 417000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -5302) (undo-tree-id438 . -1) 5303) nil (25891 63449 479562 667000) 0 nil])
([nil nil ((5302 . 5302) (5302 . 5303)) nil (25891 63449 479559 923000) 0 nil])
([nil nil ((5303 . 5320)) nil (25891 63449 479558 269000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5343 . 5344) (nil fontified nil 5343 . 5344) (nil fontified nil 5338 . 5343) (nil fontified nil 5337 . 5338) (nil fontified nil 5336 . 5337) (nil fontified nil 5331 . 5336) (nil fontified nil 5330 . 5331) (nil fontified nil 5325 . 5330) (nil fontified nil 5324 . 5325) (nil fontified nil 5320 . 5324) (5320 . 5344)) nil (25891 63449 479557 50000) 0 nil])
([nil nil ((5346 . 5347) (5344 . 5344) (5344 . 5346)) nil (25891 63449 479554 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5370 . 5371) (nil fontified nil 5370 . 5371) (nil fontified nil 5365 . 5370) (nil fontified nil 5364 . 5365) (nil fontified nil 5363 . 5364) (nil fontified nil 5358 . 5363) (nil fontified nil 5357 . 5358) (nil fontified nil 5352 . 5357) (nil fontified nil 5351 . 5352) (nil fontified nil 5347 . 5351) (5347 . 5371)) nil (25891 63449 479552 349000) 0 nil])
([nil nil ((5381 . 5383) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -5381) (5381 . 5382) (5380 . 5380) (5380 . 5381) (5379 . 5379) (5379 . 5380) (5378 . 5378) (5378 . 5379) (5377 . 5377) (5377 . 5378) (5376 . 5376) (5376 . 5377) (5373 . 5373) (5373 . 5376) (5371 . 5371) (5371 . 5373)) nil (25891 63449 479549 97000) 0 nil])
([nil nil ((5383 . 5400)) nil (25891 63449 479545 86000) 0 nil])
([nil nil ((5382 . 5382) (5382 . 5383)) nil (25891 63449 479544 55000) 0 nil])
([nil nil ((#("J" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -5382) (undo-tree-id437 . -1) 5383) nil (25891 63449 479542 907000) 0 nil])
([nil nil ((5383 . 5384) (5382 . 5382) (5382 . 5383)) nil (25891 63449 479540 795000) 0 nil])
([nil nil ((5386 . 5386) (5386 . 5387) (5384 . 5384) (5384 . 5386)) nil (25891 63449 479539 454000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -5385) (undo-tree-id435 . -1) (#("f" 0 1 (fontified t)) . -5386) (undo-tree-id436 . -1) 5387) nil (25891 63449 479537 215000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 5391) (5390 . 5391) (5389 . 5391) (#("[" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -5389) (5389 . 5390) (5388 . 5388) (5388 . 5389) (5387 . 5387) (5387 . 5388) (5386 . 5386) (5386 . 5387) (5385 . 5385) (5385 . 5386)) nil (25891 63449 479531 591000) 0 nil])
([nil nil ((5390 . 5390) (5390 . 5391)) nil (25891 63449 479528 275000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face tree-sitter-hl-face:number)) . -5390) (undo-tree-id434 . -1) 5391) nil (25891 63449 479525 800000) 0 nil])
([nil nil ((5394 . 5394) (5394 . 5395) (5393 . 5393) (5393 . 5394) (5392 . 5392) (5392 . 5393) (5391 . 5391) (5391 . 5392) (5390 . 5390) (5390 . 5391)) nil (25891 63449 479506 451000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5410) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) 5414 (t 25891 63449 479912 413000)) nil (25891 63451 351754 987000) 0 nil])
([nil nil ((5916 . 5920) (5907 . 5908) (t 25891 63451 351903 114000)) nil (25891 63677 983272 317000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5916) (undo-tree-id570 . -4) 5920) nil (25891 63677 983270 823000) 0 nil])
([nil nil ((5924 . 5925) (5923 . 5923) (5923 . 5924) (5921 . 5921) (5921 . 5923) (5920 . 5920) (5920 . 5921) (5919 . 5921) (#("\"" 0 1 (fontified nil)) . -5919) (5917 . 5920) (5916 . 5916) (5916 . 5917)) nil (25891 63677 983268 356000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face tree-sitter-hl-face:string)) . -5924) (undo-tree-id569 . -1) 5925) nil (25891 63677 983265 427000) 0 nil])
([nil nil ((5925 . 5925) (5925 . 5930)) nil (25891 63677 983263 603000) 0 nil])
([nil nil ((5932 . 5932) (5932 . 5933) (5930 . 5930) (5930 . 5932)) nil (25891 63677 983262 233000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -5932) (undo-tree-id568 . -1) 5933) nil (25891 63677 983260 615000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 5945) (5944 . 5945) (5943 . 5945) (#("[" 0 1 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -5943) (5943 . 5944) (5941 . 5941) (5941 . 5943) (5940 . 5940) (5940 . 5941) (5939 . 5939) (5939 . 5940) (5938 . 5938) (5938 . 5939) (5937 . 5937) (5937 . 5938) (5936 . 5936) (5936 . 5937) (5935 . 5935) (5935 . 5936) (5934 . 5934) (5934 . 5935) (5933 . 5933) (5933 . 5934) (5932 . 5932) (5932 . 5933)) nil (25891 63677 983257 434000) 0 nil])
([nil nil ((5948 . 5948) (5948 . 5949) (5947 . 5947) (5947 . 5948) (5946 . 5946) (5946 . 5947) (5945 . 5945) (5945 . 5946) (5944 . 5944) (5944 . 5945)) nil (25891 63677 983251 844000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 5952) (5951 . 5952) (5950 . 5952) (#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -5950) (5950 . 5951)) nil (25891 63677 983248 688000) 0 nil])
([nil nil ((5954 . 5954) (5954 . 5956) (5953 . 5953) (5953 . 5954) (5952 . 5952) (5952 . 5953) (5951 . 5951) (5951 . 5952)) nil (25891 63677 983246 730000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -5955) (undo-tree-id567 . -1) 5956) nil (25891 63677 983244 80000) 0 nil])
([nil nil ((5955 . 5955) (5955 . 5956)) nil (25891 63677 983242 342000) 0 nil])
([nil nil ((5957 . 5957) (5957 . 5958)) nil (25891 63677 983241 424000) 0 nil])
([nil nil ((5967 . 5971) 5959) nil (25891 63677 983240 396000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5967) (undo-tree-id566 . -4) 5971) nil (25891 63677 983238 805000) 0 nil])
([nil nil ((5967 . 5967) (5967 . 5969)) nil (25891 63677 983236 663000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6041 . 6042) (nil fontified nil 6041 . 6042) (nil fontified nil 6040 . 6041) (nil fontified nil 6039 . 6040) (nil fontified nil 6011 . 6039) (nil fontified nil 6010 . 6011) (nil fontified nil 6009 . 6010) (nil fontified nil 6004 . 6009) (nil fontified nil 5986 . 6004) (nil fontified nil 5979 . 5986) (nil fontified nil 5978 . 5979) (nil fontified nil 5974 . 5978) (nil fontified nil 5973 . 5974) (nil fontified nil 5971 . 5973) (nil fontified nil 5959 . 5971) (5959 . 6042)) nil (25891 63677 983742 768000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6016) (undo-tree-id573 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6017) (undo-tree-id574 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6018) (undo-tree-id575 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6019) (undo-tree-id576 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6020) (undo-tree-id577 . -1) (#("g" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6021) (undo-tree-id578 . -1) 6022) nil (25891 63686 803349 877000) 0 nil] [nil nil ((#("            if self.VERBOSE:
                print('with strong cosine structure')
" 0 12 (fontified t) 12 14 (fontified t face tree-sitter-hl-face:keyword) 14 15 (fontified t) 15 19 (fontified t face tree-sitter-hl-face:keyword) 19 20 (fontified t) 20 27 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 27 45 (fontified t) 45 50 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 50 51 (fontified t face (rainbow-delimiters-depth-1-face)) 51 52 (fontified t face tree-sitter-hl-face:string) 52 80 (fontified t face tree-sitter-hl-face:string) 80 81 (fontified t face tree-sitter-hl-face:string) 81 82 (fontified t face (rainbow-delimiters-depth-1-face)) 82 83 (fontified t rear-nonsticky t)) . 5959) (undo-tree-id534 . -83) (undo-tree-id535 . -29) (undo-tree-id536 . -29) (undo-tree-id537 . -83) (undo-tree-id538 . -29) (undo-tree-id539 . -29) (undo-tree-id540 . -29) (undo-tree-id541 . -29) (undo-tree-id542 . -29) (undo-tree-id543 . -29) (undo-tree-id544 . -29) (undo-tree-id545 . -29) (undo-tree-id546 . -29) (undo-tree-id547 . -83) (undo-tree-id548 . -83) (undo-tree-id549 . -29) (undo-tree-id550 . -83) (undo-tree-id551 . -83) (undo-tree-id552 . -83) (undo-tree-id553 . -83) (undo-tree-id554 . -83) (undo-tree-id555 . -83) (undo-tree-id556 . -83) (undo-tree-id557 . -83) (undo-tree-id558 . -83) (undo-tree-id559 . -83) (undo-tree-id560 . -83) (undo-tree-id561 . -83) (undo-tree-id562 . -83) (undo-tree-id563 . -83) (undo-tree-id564 . -83) (undo-tree-id565 . -83) 6042) ((5959 . 6042)) (25891 63677 983225 285000) 0 nil])
([nil nil ((6019 . 6019) (6019 . 6020) (6018 . 6018) (6018 . 6019) (6016 . 6016) (6016 . 6018)) nil (25891 63686 803342 6000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t face tree-sitter-hl-face:string)) . -6019) (undo-tree-id572 . -1) 6020) nil (25891 63686 803339 698000) 0 nil])
([nil nil ((6019 . 6019) (6019 . 6020)) nil (25891 63686 803336 550000) 0 nil])
([nil nil ((6039 . 6056)) nil (25891 63686 803334 615000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6039) (undo-tree-id571 . -1) 6040) nil (25891 63686 803328 798000) 0 nil])
([nil nil ((6064 . 6068) 6056 (t 25891 63686 802744 729000)) nil (25891 63704 859169 265000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6064) (undo-tree-id591 . -4) 6068) nil (25891 63704 859167 264000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 6064) (#("e" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 6064)) nil (25891 63704 859164 930000) 0 nil])
([nil nil ((#("        if \"spec\" in self.STRUCTURE[i_pop][j_pop]:
" 0 8 (fontified t) 8 10 (fontified t face tree-sitter-hl-face:keyword) 10 11 (fontified t) 11 12 (fontified t face tree-sitter-hl-face:string) 12 16 (fontified t face tree-sitter-hl-face:string) 16 17 (fontified t face tree-sitter-hl-face:string) 17 18 (fontified t) 18 20 (fontified t face tree-sitter-hl-face:operator) 20 21 (fontified t) 21 25 (fontified t face tree-sitter-hl-face:keyword) 25 26 (fontified t) 26 35 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-1-face)) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-1-face)) 49 50 (fontified t) 50 51 (fontified t)) . 5908) (undo-tree-id586 . -45) (undo-tree-id587 . -51) (undo-tree-id588 . -51) (undo-tree-id589 . -51) (undo-tree-id590 . -51) 5959) nil (25891 63704 859163 441000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5987 . 5988) (nil fontified nil 5987 . 5988) (nil fontified nil 5986 . 5987) (nil fontified nil 5985 . 5986) (nil fontified nil 5980 . 5985) (nil fontified nil 5979 . 5980) (nil fontified nil 5978 . 5979) (nil fontified nil 5973 . 5978) (nil fontified nil 5972 . 5973) (nil fontified nil 5963 . 5972) (nil fontified nil 5962 . 5963) (nil fontified nil 5958 . 5962) (nil fontified nil 5957 . 5958) (nil fontified nil 5955 . 5957) (nil fontified nil 5954 . 5955) (nil fontified nil 5953 . 5954) (nil fontified nil 5949 . 5953) (nil fontified nil 5948 . 5949) (nil fontified nil 5947 . 5948) (nil fontified nil 5945 . 5947) (nil fontified nil 5937 . 5945) (5937 . 5988)) nil (25891 63704 859157 513000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5916) (undo-tree-id585 . -4) 5920) nil (25891 63704 859152 162000) 0 nil])
([nil nil ((5941 . 5945)) nil (25891 63704 859150 47000) 0 nil])
([nil nil ((#("            if \"spec\" in self.STRUCTURE[i_pop][j_pop]:
                print('with weak cosine structure')                
" 0 12 (fontified t) 12 14 (fontified t face tree-sitter-hl-face:keyword) 14 15 (fontified t) 15 16 (fontified t face tree-sitter-hl-face:string) 16 20 (fontified t face tree-sitter-hl-face:string) 20 21 (fontified t face tree-sitter-hl-face:string) 21 22 (fontified t) 22 24 (fontified t face tree-sitter-hl-face:operator) 24 25 (fontified t) 25 29 (fontified t face tree-sitter-hl-face:keyword) 29 30 (fontified t) 30 39 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-1-face)) 53 54 (fontified t) 54 55 (fontified t rear-nonsticky t) 55 71 (fontified t) 71 76 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 76 77 (fontified t face (rainbow-delimiters-depth-1-face)) 77 78 (fontified t face tree-sitter-hl-face:string) 78 104 (fontified t face tree-sitter-hl-face:string) 104 105 (fontified t face tree-sitter-hl-face:string) 105 106 (fontified t face (rainbow-delimiters-depth-1-face)) 106 122 (fontified t) 122 123 (fontified t rear-nonsticky t)) . 5933) (undo-tree-id582 . -123) (undo-tree-id583 . -123) (undo-tree-id584 . -123) 6056) nil (25891 63704 859148 774000) 0 nil])
([nil nil ((nil fontified nil 6105 . 6106) (nil fontified nil 6089 . 6105) (nil fontified nil 6088 . 6089) (nil fontified nil 6087 . 6088) (nil fontified nil 6061 . 6087) (nil fontified nil 6060 . 6061) (nil fontified nil 6059 . 6060) (nil fontified nil 6054 . 6059) (nil fontified nil 6038 . 6054) (nil fontified nil 6037 . 6038) (nil fontified nil 6036 . 6037) (nil fontified nil 6035 . 6036) (nil fontified nil 6030 . 6035) (nil fontified nil 6029 . 6030) (nil fontified nil 6028 . 6029) (nil fontified nil 6023 . 6028) (nil fontified nil 6022 . 6023) (nil fontified nil 6013 . 6022) (nil fontified nil 6012 . 6013) (nil fontified nil 6008 . 6012) (nil fontified nil 6007 . 6008) (nil fontified nil 6005 . 6007) (nil fontified nil 6004 . 6005) (nil fontified nil 6003 . 6004) (nil fontified nil 5999 . 6003) (nil fontified nil 5998 . 5999) (nil fontified nil 5997 . 5998) (nil fontified nil 5995 . 5997) (nil fontified nil 5983 . 5995) (5983 . 6106)) nil (25891 63704 859143 210000) 0 nil])
([nil nil ((#("            if self.VERBOSE:
" 0 12 (fontified t) 12 14 (fontified t face tree-sitter-hl-face:keyword) 14 15 (fontified t) 15 19 (fontified t face tree-sitter-hl-face:keyword) 19 20 (fontified t) 20 27 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 27 29 (fontified t)) . -6106) (undo-tree-id580 . -29) (undo-tree-id581 . -29) 6135) nil (25891 63704 859137 137000) 0 nil])
([nil nil ((6090 . 6106) (#("                " 0 16 (fontified nil)) . 6089) (undo-tree-id579 . -16) (6105 . 6106)) nil (25891 63704 859132 500000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -6102) (6110 . 6111) (6107 . 6107) (6107 . 6110) (6106 . 6106) (6106 . 6107)) nil (25891 63704 859121 537000) 0 nil])
([nil nil ((5941 . 5945) 5933 (t 25891 63704 858656 670000)) nil (25891 63709 920649 932000) 0 nil])
([nil nil ((5987 . 6003) (#("            " 0 12 (fontified t)) . 5987) (undo-tree-id592 . -12) 5999) nil (25891 63709 920647 683000) 0 nil])
([nil nil ((6062 . 6066) 6046) nil (25891 63709 920637 39000) 0 nil])
([nil nil ((6102 . 6118) (#("            " 0 12 (fontified t)) . 6102)) nil (25891 63709 920634 383000) 0 nil])
([nil nil ((6140 . 6144) 6124) nil (25891 63709 920628 516000) 0 nil])
([nil nil ((190 . 190) (190 . 191) (189 . 189) (189 . 190) (188 . 188) (188 . 189) (187 . 187) (187 . 188) (186 . 186) (186 . 187) (185 . 185) (185 . 186) (184 . 184) (184 . 185) (183 . 183) (183 . 184) (181 . 181) (181 . 183) (180 . 180) (180 . 181) (t 25891 63709 918632 6000)) nil (25891 64060 520515 527000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t face tree-sitter-hl-face:number)) . -190) (undo-tree-id595 . -1) 191) nil (25891 64060 520509 793000) 0 nil])
([nil nil ((190 . 190) (190 . 191)) nil (25891 64060 520507 514000) 0 nil])
([nil nil ((210 . 210) (210 . 211) (209 . 209) (209 . 210)) nil (25891 64060 520505 986000) 0 nil])
([nil nil ((#("Y" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -209) (undo-tree-id593 . -1) (#("H" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -210) (undo-tree-id594 . -1) 211) nil (25891 64060 520503 65000) 0 nil])
([nil nil ((215 . 216) (214 . 214) (214 . 215) (213 . 213) (213 . 214) (212 . 212) (212 . 213) (211 . 211) (211 . 212) (209 . 209) (209 . 211)) nil (25891 64060 520487 396000) 0 nil])
([nil nil ((217 . 218) (216 . 216) (216 . 217)) nil (25891 64210 678723 746000) 0 nil])
([nil nil ((#("U" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 2330) (undo-tree-id726 . 1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id729 . 1) (undo-tree-id730 . 1) (undo-tree-id731 . 1) (#("L" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 2330) (undo-tree-id732 . 1) (undo-tree-id733 . 1) (undo-tree-id734 . 1) (undo-tree-id735 . 1) (#("e" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 2330) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (#("R" 0 1 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 2330)) ((2330 . 2331) (2330 . 2331) (2330 . 2331) (2330 . 2331)) (25891 64211 250211 66000) 0 nil])
([nil nil ((#("nn." 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2327) (undo-tree-id738 . -3) (undo-tree-id739 . -1) (undo-tree-id740 . -2) (undo-tree-id741 . -3) (undo-tree-id742 . -3) (undo-tree-id743 . -3) (undo-tree-id744 . -3) (undo-tree-id745 . -3) (undo-tree-id746 . -3) (undo-tree-id747 . -3) (undo-tree-id748 . -3) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -3) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (undo-tree-id760 . -3) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -3) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -3) (undo-tree-id782 . -3) (undo-tree-id783 . -3) (undo-tree-id784 . -3) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) (undo-tree-id789 . -3) (undo-tree-id790 . -3) (undo-tree-id791 . -3) (undo-tree-id792 . -3) (undo-tree-id793 . -3) (undo-tree-id794 . -3) (undo-tree-id795 . -3) (undo-tree-id796 . -3) (undo-tree-id797 . -3) (undo-tree-id798 . -3) (undo-tree-id799 . -3) (undo-tree-id800 . -3) (undo-tree-id801 . -3) (undo-tree-id802 . -3) (undo-tree-id803 . -3) (undo-tree-id804 . -3) (undo-tree-id805 . -3) (undo-tree-id806 . -3) (undo-tree-id807 . -3) (undo-tree-id808 . -3) (undo-tree-id809 . -3) (undo-tree-id810 . -3) (undo-tree-id811 . -3) (undo-tree-id812 . -3) (undo-tree-id813 . -3) (undo-tree-id814 . -3) (undo-tree-id815 . -3) (undo-tree-id816 . -3) (undo-tree-id817 . -3) (undo-tree-id818 . -3) (undo-tree-id819 . -3) (undo-tree-id820 . -3) (undo-tree-id821 . -3) (undo-tree-id822 . -3) (undo-tree-id823 . -3) (undo-tree-id824 . -3) (undo-tree-id825 . -3) (undo-tree-id826 . -3) (undo-tree-id827 . -3) (undo-tree-id828 . -3) (undo-tree-id829 . -3) (undo-tree-id830 . -3) (undo-tree-id831 . -3) (undo-tree-id832 . -3) (undo-tree-id833 . -3) (undo-tree-id834 . -3) (undo-tree-id835 . -3) (undo-tree-id836 . -3) (undo-tree-id837 . -3) (undo-tree-id838 . -3) (undo-tree-id839 . -3) (undo-tree-id840 . -3) (undo-tree-id841 . -3) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -3) (undo-tree-id848 . -3)) ((2327 . 2330)) (25891 64211 412459 694000) 0 nil])
([nil nil ((2327 . 2328)) ((#("a" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 2327) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1)) (25891 64211 579724 225000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 2327) (undo-tree-id849 . -1) (undo-tree-id850 . -1)) ((2327 . 2328)) (25891 64213 43025 40000) 0 nil])
([nil nil ((2327 . 2337)) ((#("A" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2327) (undo-tree-id683 . -1) (undo-tree-id685 . -1) (undo-tree-id687 . -1) (#("c" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2328) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (#("t" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2329) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (#("i" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2330) (undo-tree-id701 . -1) (undo-tree-id703 . -1) (#("v" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2331) (undo-tree-id705 . -1) (#("a" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2332) (undo-tree-id708 . -1) (#("t" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2333) (#("ion" 0 3 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call))) . 2334)) (25891 64213 240817 904000) 0 nil])
([nil nil ((apply 2 1511 1559 undo--wrap-and-run-primitive-undo 1511 1559 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1519) 1561))) nil (25891 64221 352980 22000) 0 nil] [nil nil ((2426 . 2430) (t 25891 64080 99113 43000)) ((#("    " 0 4 (fontified t)) . 2426) (undo-tree-id681 . -1)) (25891 64208 313319 188000) 0 nil])
([nil nil ((apply 6 1568 1740 undo--wrap-and-run-primitive-undo 1568 1740 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1686) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1619) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1576) 1746))) nil (25891 64221 352978 389000) 0 nil])
([nil nil ((#("        # net_input = net_input + self.Wab(rates)
" 0 8 (fontified t) 8 10 (fontified t face tree-sitter-hl-face:comment) 10 32 (fontified t face tree-sitter-hl-face:comment) 32 40 (fontified t face tree-sitter-hl-face:comment) 40 49 (fontified t face tree-sitter-hl-face:comment) 49 50 (fontified t)) . -1511) (undo-tree-id604 . -50) (undo-tree-id605 . -50) 1561) ((1511 . 1561)) (25891 64207 947553 691000) 0 nil])
([nil nil ((apply -12 1740 2409 undo--wrap-and-run-primitive-undo 1740 2409 ((2198 . 2200) (2055 . 2057) (2013 . 2015) (1845 . 1847) (1799 . 1801) (1757 . 1759) 2388))) nil (25891 64221 352970 889000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1927) (undo-tree-id603 . -1) 1928) ((1927 . 1928)) (25891 64207 724565 160000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1555) (1554 . 1555) (1553 . 1555) (#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1553) (1553 . 1554) (#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1553) (1552 . 1553) (1551 . 1553) (#("[" 0 1 (fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . -1551) (1551 . 1552) (t 25891 64221 355197 890000)) nil (25891 64240 626327 70000) 0 nil])
([nil nil ((1927 . 1928)) ((#("i" 0 1 (fontified t)) . 1927)) (25891 64207 625405 811000) 0 nil])
([nil nil ((1554 . 1554) (1554 . 1555)) nil (25891 64240 626323 527000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1927)) ((1927 . 1928)) (25891 64207 384514 604000) 0 nil])
([nil nil ((1552 . 1552) (1552 . 1553)) nil (25891 64240 626315 768000) 0 nil])
([nil nil ((1927 . 1927) (1927 . 1928)) ((#("h" 0 1 (fontified t)) . 1927) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1)) (25891 64207 218475 484000) 0 nil])
([nil nil ((5237 . 5238) (5236 . 5236) (5236 . 5237) (t 25891 64240 631197 345000)) nil (25891 64465 960122 253000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1927) (undo-tree-id601 . -1) (undo-tree-id602 . -1) 1928) ((1927 . 1928)) (25891 64207 67803 625000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5249 . 5250) (nil fontified nil 5237 . 5250) (5237 . 5250) 5238 (t 25891 64467 839019 975000)) nil (25891 64467 982398 616000) 0 nil] [nil nil ((nil rear-nonsticky nil 5262 . 5263) (nil fontified nil 5262 . 5263) (nil fontified nil 5261 . 5262) (nil fontified nil 5260 . 5261) (nil fontified nil 5259 . 5260) (nil fontified nil 5258 . 5259) (nil fontified nil 5257 . 5258) (nil fontified nil 5256 . 5257) (nil fontified nil 5255 . 5256) (nil fontified nil 5252 . 5255) (nil fontified nil 5246 . 5252) (nil fontified nil 5245 . 5246) (nil fontified nil 5240 . 5245) (nil fontified nil 5238 . 5240) (5238 . 5263)) ((#("  print(model.Wab[0][0])
" 0 2 (font-lock-fontified t src-block t fontified nil) 2 7 (font-lock-fontified t src-block t fontified nil face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 7 8 (font-lock-fontified t src-block t fontified nil face (rainbow-delimiters-depth-2-face)) 8 14 (font-lock-fontified t src-block t fontified nil) 14 17 (font-lock-fontified t src-block t fontified nil face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 17 18 (font-lock-fontified t src-block t fontified nil face (rainbow-delimiters-depth-3-face)) 18 19 (font-lock-fontified t src-block t fontified nil face tree-sitter-hl-face:number) 19 20 (font-lock-fontified t src-block t fontified nil face (rainbow-delimiters-depth-3-face)) 20 21 (font-lock-fontified t src-block t fontified nil face (rainbow-delimiters-depth-3-face)) 21 22 (font-lock-fontified t src-block t fontified nil face tree-sitter-hl-face:number) 22 23 (font-lock-fontified t src-block t fontified nil face (rainbow-delimiters-depth-3-face)) 23 24 (font-lock-fontified t src-block t fontified nil face (rainbow-delimiters-depth-2-face)) 24 25 (font-lock-fontified t src-block t fontified nil rear-nonsticky nil)) . 5238) (undo-tree-id851 . -25) (undo-tree-id852 . -25) (undo-tree-id853 . -25) (undo-tree-id854 . -25) (undo-tree-id855 . -24) (nil rear-nonsticky t 5262 . 5263)) (25891 64465 959336 583000) 0 nil])
([nil nil ((1927 . 1927) (1927 . 1928)) ((#("j" 0 1 (fontified t)) . 1927)) (25891 64206 911613 840000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5250) (undo-tree-id864 . -1) (t 25891 64467 983019 779000)) nil (25891 64489 297349 258000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -1952) (undo-tree-id654 . -4) 1956 (t 25891 64181 103190 255000)) ((1952 . 1956)) (25891 64206 753755 579000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -5246) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (#("o" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -5247) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -5248) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (#("e" 0 1 (fontified t rear-nonsticky t face tree-sitter-hl-face:constant\.builtin)) . -5249) (undo-tree-id862 . -1) (undo-tree-id863 . -1) 5250) nil (25891 64489 297341 999000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1948) (undo-tree-id606 . -4) (undo-tree-id608 . -4) (undo-tree-id610 . -4) (undo-tree-id612 . -4) (undo-tree-id614 . -4) (undo-tree-id616 . -4) (undo-tree-id618 . -4) (undo-tree-id620 . -4) (undo-tree-id622 . -4) (undo-tree-id624 . -4) (undo-tree-id626 . -4) (undo-tree-id628 . -4) (undo-tree-id630 . -4) (undo-tree-id632 . -4) (undo-tree-id634 . -4) (undo-tree-id636 . -4) (undo-tree-id638 . -4) (undo-tree-id640 . -4) (undo-tree-id642 . -4) (undo-tree-id644 . -4) (undo-tree-id646 . -4) (undo-tree-id648 . -4) (undo-tree-id650 . -4) (undo-tree-id652 . -4) 1952) ((1948 . 1952) (t 25891 64184 659191 424000)) (25891 64206 598105 991000) 0 nil])
([nil nil ((5247 . 5247) (5247 . 5249) (5246 . 5248) (#("\"" 0 1 (fontified nil face tree-sitter-hl-face:operator)) . -5246) (5246 . 5247)) nil (25891 64600 944226 105000) 0 nil])
([nil nil ((apply 6 1520 1692 undo--wrap-and-run-primitive-undo 1520 1692 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1638) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1571) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1528) 1520)) (t 25891 64184 659191 424000)) ((apply -6 1520 1698 undo--wrap-and-run-primitive-undo 1520 1698 ((1528 . 1530) (1571 . 1573) (1638 . 1640) 2332))) (25891 64206 447812 69000) 0 nil])
([nil nil ((apply -6 1574 1761 undo--wrap-and-run-primitive-undo 1574 1761 ((1696 . 1698) (1627 . 1629) (1582 . 1584) 1746)) (t 25891 64606 726790 179000)) nil (25891 64616 981787 833000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -242) (undo-tree-id865 . -1) (#("/" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -243) (undo-tree-id866 . -1) (#(" " 0 1 (fontified t)) . -244) (undo-tree-id867 . -1) (#("n" 0 1 (fontified t)) . -245) (undo-tree-id868 . -1) (#("p" 0 1 (fontified t)) . -246) (undo-tree-id869 . -1) (#("." 0 1 (fontified t)) . -247) (undo-tree-id870 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:property)) . -248) (undo-tree-id871 . -1) (#("q" 0 1 (fontified t face tree-sitter-hl-face:property)) . -249) (undo-tree-id872 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:property)) . -250) (undo-tree-id873 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:property)) . -251) (undo-tree-id874 . -1) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -252) (undo-tree-id875 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 253) (#("2" 0 1 (fontified t face tree-sitter-hl-face:number)) . -253) (undo-tree-id876 . -1) (#("." 0 1 (fontified t face tree-sitter-hl-face:number)) . -254) (undo-tree-id877 . -1) (#("0" 0 1 (fontified t face tree-sitter-hl-face:number)) . -255) (undo-tree-id878 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -256) (undo-tree-id879 . -1) (undo-tree-id880 . 1) (undo-tree-id881 . -1) 257 (t 25891 64489 302989 531000)) ((253 . 257) (242 . 254)) (25891 64600 534770 900000) 0 nil])
([nil nil ((apply -12 1701 2353 undo--wrap-and-run-primitive-undo 1701 2353 ((2142 . 2144) (1999 . 2001) (1957 . 1959) (1797 . 1799) (1751 . 1753) (1709 . 1711) 2332))) ((apply 12 1701 2341 undo--wrap-and-run-primitive-undo 1701 2341 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 1709) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 1751) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 1797) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 1957) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 1999) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 2142) 1630))) (25891 64206 293554 161000) 0 nil])
([nil nil ((apply 6 1574 1746 undo--wrap-and-run-primitive-undo 1574 1746 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1692) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1625) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1582) 1574))) nil (25891 64616 981785 622000) 0 nil])
([nil nil ((243 . 244)) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 243) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . 1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (t 25891 64569 746858 555000)) (25891 64569 744756 287000) 0 nil])
([nil nil ((apply 2 1563 1628 undo--wrap-and-run-primitive-undo 1563 1628 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1571) 1630))) ((apply -2 1563 1630 undo--wrap-and-run-primitive-undo 1563 1630 ((1571 . 1573) 1690))) (25891 64206 210615 292000) 0 nil])
([nil nil ((apply 2 1617 1682 undo--wrap-and-run-primitive-undo 1617 1682 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1625) 1684))) nil (25891 64616 981783 645000) 0 nil])
nil
([nil nil ((apply -2 1628 1701 undo--wrap-and-run-primitive-undo 1628 1701 ((1636 . 1638) 1690))) ((apply 2 1628 1699 undo--wrap-and-run-primitive-undo 1628 1699 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 1636) 1742))) (25891 64206 210047 570000) 0 nil])
([nil nil ((apply -2 1682 1755 undo--wrap-and-run-primitive-undo 1682 1755 ((1690 . 1692) 1744))) nil (25891 64616 981777 561000) 0 nil])
nil
([nil nil ((apply -6 1511 1752 undo--wrap-and-run-primitive-undo 1511 1752 ((1629 . 1631) (1584 . 1586) (1519 . 1521) 1682)) (t 25891 64616 982770 377000)) nil (25891 64674 52854 674000) 0 nil])
([nil nil ((apply 12 1761 2400 undo--wrap-and-run-primitive-undo 1761 2400 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -2200) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -2059) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -2019) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1853) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1809) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -1769) 2412))) nil (25891 64674 52852 725000) 0 nil])
([nil nil ((2408 . 2412) 2400) nil (25891 64674 52847 219000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1861) (#("t" 0 1 (fontified t)) . 1861) (#("e" 0 1 (fontified t)) . 1861) (#("n" 0 1 (fontified t)) . 1861) (t 25891 64674 54653 980000)) nil (25891 64817 766683 338000) 0 nil])
([nil nil ((1753 . 1761) (#("        " 0 8 (fontified nil)) . 1752) (undo-tree-id981 . -8) (undo-tree-id982 . -1) (1760 . 1761)) nil (25891 64817 766677 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1801 . 1802) (nil fontified nil 1801 . 1802) (nil fontified nil 1761 . 1801) (nil fontified nil 1753 . 1761) (1753 . 1802) (t 25891 64817 766320 123000)) nil (25891 64871 777198 508000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1761) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1761) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1761) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1761) (#(" " 0 1 (fontified t)) . 1761) (#("#" 0 1 (fontified t face tree-sitter-hl-face:comment)) . 1761)) nil (25891 64871 777195 877000) 0 nil])
([nil nil ((1764 . 1764) (1764 . 1765) (1763 . 1763) (1763 . 1764) (1761 . 1761) (1761 . 1763)) nil (25891 64871 777193 993000) 0 nil])
([nil nil ((1789 . 1789) (1789 . 1790) (1788 . 1788) (1788 . 1789) (1787 . 1787) (1787 . 1788) (1786 . 1786) (1786 . 1787) (1785 . 1785) (1785 . 1786)) nil (25891 64871 777191 431000) 0 nil])
([nil nil ((1785 . 1787) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1785) (1785 . 1786)) nil (25891 64871 777188 492000) 0 nil])
([nil nil ((1806 . 1807)) nil (25891 64871 777186 533000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1786) (undo-tree-id983 . -1) (undo-tree-id984 . 1) (undo-tree-id985 . -1) 1787) nil (25891 64871 777183 763000) 0 nil])
([nil nil ((1797 . 1798) (1796 . 1796) (1796 . 1797) (1795 . 1795) (1795 . 1796) (1794 . 1794) (1794 . 1795) (1793 . 1793) (1793 . 1794) (1792 . 1792) (1792 . 1793) (1791 . 1791) (1791 . 1792)) nil (25891 64871 777162 16000) 0 nil])
([nil nil ((#("p" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . 1923) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1923) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 1923) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1923) (#("a" 0 1 (fontified t)) . 1923) (#("N" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . 1923) (#("m" 0 1 (fontified t)) . 1923) (#("u" 0 1 (fontified t)) . 1923) (#("s" 0 1 (fontified t)) . 1923) (#("c" 0 1 (fontified t)) . 1923) (#("." 0 1 (fontified t)) . 1923) (#("f" 0 1 (fontified t)) . 1923) (#("l" 0 1 (fontified t)) . 1923) (#("e" 0 1 (fontified t)) . 1923) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1923) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1923) (#("t" 0 1 (fontified t)) . 1923) (#("u" 0 1 (fontified t)) . 1923) (#("p" 0 1 (fontified t)) . 1923) (#("n" 0 1 (fontified t)) . 1923) (#("i" 0 1 (fontified t)) . 1923) (t 25891 64871 778181 875000)) nil (25891 64891 811455 743000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 1923) (#("_" 0 1 (fontified t)) . 1923) (#("i" 0 1 (fontified t)) . 1923) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1923) (#("a" 0 1 (fontified t)) . 1923) (#("N" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . 1923) (#("m" 0 1 (fontified t)) . 1923) (#("u" 0 1 (fontified t)) . 1923) (#("s" 0 1 (fontified t)) . 1923) (#("c" 0 1 (fontified t)) . 1923) (#("." 0 1 (fontified t)) . 1923) (#("f" 0 1 (fontified t)) . 1923) (#("l" 0 1 (fontified t)) . 1923) (#("e" 0 1 (fontified t)) . 1923) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1923) (#(" " 0 1 (fontified t)) . 1923) (#(":" 0 1 (fontified t)) . 1923) (#(" " 0 1 (fontified t)) . 1923) (#("]" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 1923) (#("p" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . 1923) (#("o" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . 1923)) nil (25891 64891 811449 343000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 1923) (#("]" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 1923) (#("1" 0 1 (fontified t face tree-sitter-hl-face:number)) . 1923) (#(" " 0 1 (fontified t)) . 1923) (#("+" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 1923) (#(" " 0 1 (fontified t)) . 1923) (#("p" 0 1 (fontified t)) . 1923) (#("o" 0 1 (fontified t)) . 1923)) nil (25891 64891 811444 105000) 0 nil])
([nil nil ((1931 . 1931) (1931 . 1932) (1930 . 1930) (1930 . 1931) (1929 . 1929) (1929 . 1930) (1928 . 1928) (1928 . 1929) (1927 . 1927) (1927 . 1928) (1925 . 1925) (1925 . 1927) (1924 . 1924) (1924 . 1925) (1923 . 1923) (1923 . 1924)) nil (25891 64891 811440 858000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1930) (undo-tree-id989 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1931) (undo-tree-id990 . -1) 1932) nil (25891 64891 811436 766000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1933) (1932 . 1933) (1931 . 1933) (#("[" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . -1931) (1931 . 1932) (1930 . 1930) (1930 . 1931)) nil (25891 64891 811432 748000) 0 nil])
([nil nil ((1930 . 1930) (1930 . 1931)) nil (25891 64891 811430 553000) 0 nil])
([nil nil ((1933 . 1933) (1933 . 1934)) nil (25891 64891 811429 83000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1933) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) 1934) nil (25891 64891 811426 591000) 0 nil])
([nil nil ((1937 . 1937) (1937 . 1938) (1936 . 1936) (1936 . 1937) (1935 . 1935) (1935 . 1936) (1934 . 1934) (1934 . 1935) (1933 . 1933) (1933 . 1934)) nil (25891 64891 811407 317000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -1940) (undo-tree-id991 . -1) 1941 (t 25891 64891 810129 65000)) nil (25891 64900 186848 455000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1957 . 1958) (nil fontified nil 1957 . 1958) (nil fontified nil 1952 . 1957) (nil fontified nil 1951 . 1952) (nil fontified nil 1942 . 1951) (1942 . 1958)) nil (25891 64900 186834 240000) 0 nil])
([nil nil ((1960 . 1961) (1958 . 1958) (1958 . 1960)) nil (25891 64900 186826 132000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2048) (undo-tree-id1000 . -4) 2052 (t 25891 64900 186106 750000)) nil (25891 64914 696044 873000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2044) (undo-tree-id999 . -4) 2048) nil (25891 64914 696041 699000) 0 nil])
([nil nil ((2037 . 2053) (#("        " 0 8 (fontified nil)) . 2036) (undo-tree-id998 . -8) (2044 . 2045)) nil (25891 64914 696039 498000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2127 . 2128) (nil fontified nil 2127 . 2128) (nil fontified nil 2126 . 2127) (nil fontified nil 2125 . 2126) (nil fontified nil 2124 . 2125) (nil fontified nil 2118 . 2124) (nil fontified nil 2117 . 2118) (nil fontified nil 2113 . 2117) (nil fontified nil 2112 . 2113) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2109 . 2110) (nil fontified nil 2104 . 2109) (nil fontified nil 2103 . 2104) (nil fontified nil 2099 . 2103) (nil fontified nil 2098 . 2099) (nil fontified nil 2093 . 2098) (nil fontified nil 2091 . 2093) (nil fontified nil 2090 . 2091) (nil fontified nil 2088 . 2090) (nil fontified nil 2080 . 2088) (nil fontified nil 2079 . 2080) (nil fontified nil 2075 . 2079) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2069 . 2073) (nil fontified nil 2068 . 2069) (nil fontified nil 2063 . 2068) (nil fontified nil 2056 . 2063) (nil fontified nil 2055 . 2056) (nil fontified nil 2054 . 2055) (nil fontified nil 2045 . 2054) (nil fontified nil 2037 . 2045) (2037 . 2128)) nil (25891 64914 696035 489000) 0 nil])
([nil nil ((2113 . 2113) (2113 . 2116)) nil (25891 64914 696029 163000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2114) (undo-tree-id996 . -1) (#("p" 0 1 (fontified t)) . -2115) (undo-tree-id997 . -1) 2116) nil (25891 64914 696027 705000) 0 nil])
([nil nil ((2114 . 2114) (2114 . 2115)) nil (25891 64914 696023 577000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2114) (undo-tree-id995 . -1) 2115) nil (25891 64914 696022 385000) 0 nil])
([nil nil ((2116 . 2116) (2116 . 2117) (2115 . 2115) (2115 . 2116) (2114 . 2114) (2114 . 2115)) nil (25891 64914 696019 853000) 0 nil])
([nil nil ((2120 . 2122) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2120) (2120 . 2121) (2119 . 2119) (2119 . 2120) (2118 . 2118) (2118 . 2119) (2117 . 2117) (2117 . 2118)) nil (25891 64914 696017 525000) 0 nil])
([nil nil ((2136 . 2137)) nil (25891 64914 696014 462000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -2121) (undo-tree-id992 . -1) (undo-tree-id993 . 1) (undo-tree-id994 . -1) 2122) nil (25891 64914 696009 955000) 0 nil])
([nil nil ((2036 . 2052) (t 25891 64914 698067 771000)) nil (25891 64928 247370 347000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2048) (undo-tree-id1004 . -4) 2052) nil (25891 64928 247369 95000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2044) (undo-tree-id1003 . -4) 2048) nil (25891 64928 247366 997000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2184 . 2185) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2177 . 2182) (nil fontified nil 2176 . 2177) (nil fontified nil 2172 . 2176) (nil fontified nil 2171 . 2172) (nil fontified nil 2166 . 2171) (nil fontified nil 2165 . 2166) (nil fontified nil 2163 . 2165) (nil fontified nil 2162 . 2163) (nil fontified nil 2159 . 2162) (nil fontified nil 2157 . 2159) (nil fontified nil 2156 . 2157) (nil fontified nil 2153 . 2156) (nil fontified nil 2150 . 2153) (nil fontified nil 2148 . 2150) (nil fontified nil 2147 . 2148) (nil fontified nil 2145 . 2147) (2145 . 2185)) nil (25891 64928 247364 155000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2197) 2185) nil (25891 64928 247359 980000) 0 nil])
([nil nil ((2197 . 2197) (2197 . 2198)) nil (25891 64928 247358 720000) 0 nil])
([nil nil ((2206 . 2208) (#("[" 0 1 (fontified nil)) . -2206) (2206 . 2207) (2204 . 2204) (2204 . 2206) (2203 . 2203) (2203 . 2204) (2202 . 2202) (2202 . 2203) (2201 . 2201) (2201 . 2202) (2200 . 2200) (2200 . 2201) (2199 . 2199) (2199 . 2200) (2198 . 2198) (2198 . 2199)) nil (25891 64928 247356 382000) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -2206) (undo-tree-id1002 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 2207)) nil (25891 64928 247352 84000) 0 nil])
([nil nil ((2208 . 2209) (2206 . 2206) (2206 . 2208)) nil (25891 64928 247348 364000) 0 nil])
([nil nil ((2209 . 2221) (#(" " 0 1 (fontified nil)) . 2208) (undo-tree-id1001 . -1) (2209 . 2210)) nil (25891 64928 247342 495000) 0 nil])
([nil nil ((2216 . 2218) (2213 . 2216) (2211 . 2211) (2211 . 2213) (2210 . 2210) (2210 . 2211) (2208 . 2208) (2208 . 2210) (t 25891 64928 246031 29000)) nil (25891 64983 223447 907000) 0 nil])
([nil nil ((2229 . 2229) (2229 . 2230) (2228 . 2228) (2228 . 2229) (2227 . 2227) (2227 . 2228) (2226 . 2226) (2226 . 2227) (2225 . 2225) (2225 . 2226) (2224 . 2224) (2224 . 2225) (2223 . 2223) (2223 . 2224) (2220 . 2220) (2220 . 2223) (2218 . 2218) (2218 . 2220)) nil (25891 64983 223444 866000) 0 nil])
([nil nil ((2230 . 2232) (#("(" 0 1 (fontified nil)) . -2230) (2230 . 2231)) nil (25891 64983 223441 250000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -2230) (undo-tree-id1005 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 2231)) nil (25891 64983 223439 708000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 2232) (2231 . 2232) (2230 . 2232) (#("[" 0 1 (fontified nil)) . -2230) (2230 . 2231)) nil (25891 64983 223427 260000) 0 nil])
([nil nil ((2235 . 2235) (2235 . 2236) (2234 . 2234) (2234 . 2235) (2233 . 2233) (2233 . 2234) (2232 . 2232) (2232 . 2233) (2231 . 2231) (2231 . 2232)) nil (25891 64983 223424 492000) 0 nil])
([nil nil ((2144 . 2153)) nil (25891 64983 223417 104000) 0 nil])
([nil nil ((2036 . 2052) (#("        " 0 8 (fontified t)) . 2036) (undo-tree-id1131 . -8) (undo-tree-id1132 . -1) (undo-tree-id1133 . -8) (undo-tree-id1134 . -8) (undo-tree-id1135 . -8) (undo-tree-id1136 . -8) (undo-tree-id1137 . -8) (undo-tree-id1138 . -8) (undo-tree-id1139 . -8) (undo-tree-id1140 . -8) (undo-tree-id1141 . -8) (undo-tree-id1142 . -8) (undo-tree-id1143 . -8) (undo-tree-id1144 . -8) (undo-tree-id1145 . -8) (undo-tree-id1146 . -8) (undo-tree-id1147 . -8) (undo-tree-id1148 . -8) (undo-tree-id1149 . -8) (undo-tree-id1150 . -8) (undo-tree-id1151 . -8) (undo-tree-id1152 . -8) 2044 (t 25891 64983 225878 597000)) nil (25891 65059 888294 702000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2048) (undo-tree-id1082 . -4) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (undo-tree-id1100 . -4) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) (undo-tree-id1105 . -4) (undo-tree-id1106 . -4) (undo-tree-id1107 . -4) (undo-tree-id1108 . -4) (undo-tree-id1109 . -4) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) 2052) nil (25891 65059 888273 254000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2044) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -4) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) 2048) nil (25891 65059 888203 584000) 0 nil])
([nil nil ((#("        # net_input = net_input + self.Wab[0][0](rates)
        
        # rates = rates * self.EXP_DT_TAU[0]
        # rates = rates + self.DT_TAU[0] * Activation()(net_input)
        # rates = rates + self.DT_TAU[0] * nn.ReLU()(net_input)
" 0 8 (fontified t) 8 10 (fontified t face tree-sitter-hl-face:comment) 10 19 (fontified t face tree-sitter-hl-face:comment) 19 20 (fontified t face tree-sitter-hl-face:comment) 20 21 (fontified t face tree-sitter-hl-face:comment) 21 32 (fontified t face tree-sitter-hl-face:comment) 32 33 (fontified t face tree-sitter-hl-face:comment) 33 34 (fontified t face tree-sitter-hl-face:comment) 34 38 (fontified t face tree-sitter-hl-face:comment) 38 39 (fontified t face tree-sitter-hl-face:comment) 39 40 (fontified t face tree-sitter-hl-face:comment) 40 42 (fontified t face tree-sitter-hl-face:comment) 42 43 (fontified t face tree-sitter-hl-face:comment) 43 44 (fontified t face tree-sitter-hl-face:comment) 44 45 (fontified t face tree-sitter-hl-face:comment) 45 46 (fontified t face tree-sitter-hl-face:comment) 46 47 (fontified t face tree-sitter-hl-face:comment) 47 48 (fontified t face tree-sitter-hl-face:comment) 48 49 (fontified t face tree-sitter-hl-face:comment) 49 54 (fontified t face tree-sitter-hl-face:comment) 54 55 (fontified t face tree-sitter-hl-face:comment) 55 56 (fontified t) 56 65 (fontified t) 65 73 (fontified t) 73 75 (fontified t face tree-sitter-hl-face:comment) 75 80 (fontified t face tree-sitter-hl-face:comment) 80 81 (fontified t face tree-sitter-hl-face:comment) 81 82 (fontified t face tree-sitter-hl-face:comment) 82 89 (fontified t face tree-sitter-hl-face:comment) 89 90 (fontified t face tree-sitter-hl-face:comment) 90 91 (fontified t face tree-sitter-hl-face:comment) 91 95 (fontified t face tree-sitter-hl-face:comment) 95 96 (fontified t face tree-sitter-hl-face:comment) 96 106 (fontified t face tree-sitter-hl-face:comment) 106 107 (fontified t face tree-sitter-hl-face:comment) 107 108 (fontified t face tree-sitter-hl-face:comment) 108 109 (fontified t face tree-sitter-hl-face:comment) 109 110 (fontified t) 110 118 (fontified t) 118 120 (fontified t face tree-sitter-hl-face:comment) 120 125 (fontified t face tree-sitter-hl-face:comment) 125 126 (fontified t face tree-sitter-hl-face:comment) 126 127 (fontified t face tree-sitter-hl-face:comment) 127 134 (fontified t face tree-sitter-hl-face:comment) 134 135 (fontified t face tree-sitter-hl-face:comment) 135 136 (fontified t face tree-sitter-hl-face:comment) 136 140 (fontified t face tree-sitter-hl-face:comment) 140 141 (fontified t face tree-sitter-hl-face:comment) 141 147 (fontified t face tree-sitter-hl-face:comment) 147 148 (fontified t face tree-sitter-hl-face:comment) 148 149 (fontified t face tree-sitter-hl-face:comment) 149 150 (fontified t face tree-sitter-hl-face:comment) 150 151 (fontified t face tree-sitter-hl-face:comment) 151 152 (fontified t face tree-sitter-hl-face:comment) 152 153 (fontified t face tree-sitter-hl-face:comment) 153 163 (fontified t face tree-sitter-hl-face:comment) 163 164 (fontified t face tree-sitter-hl-face:comment) 164 165 (fontified t face tree-sitter-hl-face:comment) 165 166 (fontified t face tree-sitter-hl-face:comment) 166 175 (fontified t face tree-sitter-hl-face:comment) 175 176 (fontified t face tree-sitter-hl-face:comment) 176 177 (fontified t) 177 185 (fontified t) 185 187 (fontified t face tree-sitter-hl-face:comment) 187 189 (fontified t face tree-sitter-hl-face:comment) 189 190 (fontified t face tree-sitter-hl-face:comment) 190 192 (fontified t face tree-sitter-hl-face:comment) 192 193 (fontified t face tree-sitter-hl-face:comment) 193 194 (fontified t face tree-sitter-hl-face:comment) 194 195 (fontified t face tree-sitter-hl-face:comment) 195 199 (fontified t face tree-sitter-hl-face:comment) 199 200 (fontified t face tree-sitter-hl-face:comment) 200 201 (fontified t face tree-sitter-hl-face:comment) 201 202 (fontified t face tree-sitter-hl-face:comment) 202 203 (fontified t face tree-sitter-hl-face:comment) 203 204 (fontified t face tree-sitter-hl-face:comment) 204 205 (fontified t face tree-sitter-hl-face:comment) 205 207 (fontified t face tree-sitter-hl-face:comment) 207 208 (fontified t face tree-sitter-hl-face:comment) 208 214 (fontified t face tree-sitter-hl-face:comment) 214 215 (fontified t face tree-sitter-hl-face:comment) 215 216 (fontified t face tree-sitter-hl-face:comment) 216 217 (fontified t face tree-sitter-hl-face:comment) 217 218 (fontified t face tree-sitter-hl-face:comment) 218 219 (fontified t face tree-sitter-hl-face:comment) 219 223 (fontified t face tree-sitter-hl-face:comment) 223 227 (fontified t face tree-sitter-hl-face:comment) 227 228 (fontified t face tree-sitter-hl-face:comment) 228 229 (fontified t face tree-sitter-hl-face:comment) 229 230 (fontified t face tree-sitter-hl-face:comment) 230 239 (fontified t face tree-sitter-hl-face:comment) 239 240 (fontified t face tree-sitter-hl-face:comment) 240 241 (fontified t)) . 1511) (undo-tree-id1248 . -241) (undo-tree-id1249 . -241) (undo-tree-id1250 . -44) (undo-tree-id1251 . -55) (undo-tree-id1252 . -55) (undo-tree-id1253 . -55) (undo-tree-id1254 . -55) (undo-tree-id1255 . -65) (undo-tree-id1256 . -110) (undo-tree-id1257 . -65) (undo-tree-id1258 . -110) (undo-tree-id1259 . -177) (undo-tree-id1260 . -187) (undo-tree-id1261 . -241) (t 25891 65059 889657 932000)) nil (25891 65303 53316 281000) 0 nil])
([nil nil ((#("        # self.Wab = nn.Linear(self.Na[0], self.Na[0], bias=True, dtype=self.FLOAT)
        # self.Wab.weight.data = self.initWeights(0, 0)
        # self.Wab.bias.data.fill_(self.Ja0[0])
" 0 8 (fontified t) 8 83 (fontified t face tree-sitter-hl-face:comment) 83 92 (fontified t) 92 139 (fontified t face tree-sitter-hl-face:comment) 139 148 (fontified t) 148 187 (fontified t face tree-sitter-hl-face:comment) 187 188 (fontified t)) . -1135) (undo-tree-id1245 . -36) (undo-tree-id1246 . -188) (undo-tree-id1247 . -188) 1323) nil (25891 65303 53304 114000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1125) (undo-tree-id1244 . -1) 1126) nil (25891 65303 53300 704000) 0 nil])
([nil nil ((1174 . 1182) (#("        " 0 8 (fontified nil)) . 1173) (undo-tree-id1243 . -8) (1181 . 1182)) nil (25891 65303 53298 541000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1173) (undo-tree-id1242 . -1) 1174) nil (25891 65303 53295 570000) 0 nil])
([nil nil ((1181 . 1181) (1181 . 1183)) nil (25891 65303 53293 138000) 0 nil])
([nil nil ((1172 . 1181)) nil (25891 65303 53292 18000) 0 nil])
([nil nil ((1195 . 1195) (1195 . 1196) (1194 . 1194) (1194 . 1195) (1192 . 1192) (1192 . 1194)) nil (25891 65303 53290 444000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -1193) (undo-tree-id1239 . -1) (#("A" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -1194) (undo-tree-id1240 . -1) (#("E" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -1195) (undo-tree-id1241 . -1) 1196) nil (25891 65303 53287 670000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1206) (1205 . 1206) (1204 . 1206) (#("[" 0 1 (fontified nil face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property))) . -1204) (1204 . 1205) (1203 . 1203) (1203 . 1204) (1202 . 1202) (1202 . 1203) (1201 . 1201) (1201 . 1202) (1200 . 1200) (1200 . 1201) (1199 . 1199) (1199 . 1200) (1198 . 1198) (1198 . 1199) (1197 . 1197) (1197 . 1198) (1196 . 1196) (1196 . 1197) (1195 . 1195) (1195 . 1196) (1194 . 1194) (1194 . 1195) (1193 . 1193) (1193 . 1194)) nil (25891 65303 53282 686000) 0 nil])
([nil nil ((1205 . 1205) (1205 . 1206)) nil (25891 65303 53277 501000) 0 nil])
([nil nil ((1207 . 1208)) nil (25891 65303 53276 532000) 0 nil])
([nil nil ((1209 . 1209) (1209 . 1210) (1208 . 1208) (1208 . 1209)) nil (25891 65303 53275 185000) 0 nil])
([nil nil ((#("°" 0 1 (fontified t)) . -1209) (undo-tree-id1238 . -1) 1210) nil (25891 65303 53273 581000) 0 nil])
([nil nil ((1210 . 1210) (1210 . 1211) (1209 . 1209) (1209 . 1210)) nil (25891 65303 53271 801000) 0 nil])
([nil nil ((1209 . 1210)) nil (25891 65303 53270 441000) 0 nil])
([nil nil ((#("        # net_input = torch.zeros(self.N_NEURON)
" 0 8 (fontified t) 8 48 (fontified t face tree-sitter-hl-face:comment) 48 49 (fontified t)) . 1213) (undo-tree-id1232 . -49) (undo-tree-id1233 . -49) (undo-tree-id1234 . -49) (undo-tree-id1235 . -49) (undo-tree-id1236 . -49) (undo-tree-id1237 . -49) 1262) nil (25891 65303 53269 87000) 0 nil])
([nil nil ((1221 . 1225) 1213) nil (25891 65303 53263 572000) 0 nil])
([nil nil ((1309 . 1309) (1309 . 1310) (1308 . 1308) (1308 . 1309)) nil (25891 65303 53262 385000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1308) (undo-tree-id1230 . -1) (#("l" 0 1 (fontified t)) . -1309) (undo-tree-id1231 . -1) 1310) nil (25891 65303 53260 497000) 0 nil])
([nil nil ((1311 . 1311) (1311 . 1313) (1309 . 1309) (1309 . 1311) (1308 . 1308) (1308 . 1309)) nil (25891 65303 53257 552000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1312) (undo-tree-id1229 . -1) 1313) nil (25891 65303 53255 563000) 0 nil])
([nil nil ((1308 . 1308) (1308 . 1316) (1312 . 1313)) nil (25891 65303 53253 763000) 0 nil])
([nil nil ((1321 . 1334)) nil (25891 65303 53252 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1370 . 1371) (nil fontified nil 1370 . 1371) (nil fontified nil 1330 . 1370) (nil fontified nil 1322 . 1330) (1322 . 1371)) nil (25891 65303 53251 656000) 0 nil])
([nil nil ((1330 . 1334) 1322) nil (25891 65303 53250 145000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1334) (#("#" 0 1 (fontified t face tree-sitter-hl-face:comment)) . 1334)) nil (25891 65303 53248 940000) 0 nil])
([nil nil ((#("        net_input = torch.randn(size=(self.N_NEURON, ), dtype=self.FLOAT) * np.sqrt(self.VAR_FF[0])
" 0 8 (fontified t) 8 17 (fontified t face tree-sitter-hl-face:variable) 17 18 (fontified t) 18 19 (fontified t face tree-sitter-hl-face:operator) 19 26 (fontified t) 26 31 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 36 (fontified t face tree-sitter-hl-face:label) 36 37 (fontified t face tree-sitter-hl-face:operator) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 42 (fontified t face tree-sitter-hl-face:keyword) 42 43 (fontified t) 43 51 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 51 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-2-face)) 54 56 (fontified t) 56 61 (fontified t face tree-sitter-hl-face:label) 61 62 (fontified t face tree-sitter-hl-face:operator) 62 66 (fontified t face tree-sitter-hl-face:keyword) 66 67 (fontified t) 67 72 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 72 73 (fontified t face (rainbow-delimiters-depth-1-face)) 73 74 (fontified t) 74 75 (fontified t face tree-sitter-hl-face:operator) 75 79 (fontified t) 79 83 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 83 84 (fontified t face (rainbow-delimiters-depth-1-face)) 84 88 (fontified t face tree-sitter-hl-face:keyword) 88 89 (fontified t) 89 95 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 95 96 (fontified t face (rainbow-delimiters-depth-2-face)) 96 97 (fontified t face tree-sitter-hl-face:number) 97 98 (fontified t face (rainbow-delimiters-depth-2-face)) 98 99 (fontified t face (rainbow-delimiters-depth-1-face)) 99 100 (fontified t)) . 1678) (undo-tree-id1227 . -100) (undo-tree-id1228 . -100) 1778) nil (25891 65303 53247 514000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1312 . 1313) (nil fontified nil 1312 . 1313) (nil fontified nil 1311 . 1312) (nil fontified nil 1310 . 1311) (nil fontified nil 1309 . 1310) (nil fontified nil 1308 . 1309) (nil fontified nil 1302 . 1308) (nil fontified nil 1301 . 1302) (nil fontified nil 1297 . 1301) (nil fontified nil 1296 . 1297) (nil fontified nil 1292 . 1296) (nil fontified nil 1288 . 1292) (nil fontified nil 1287 . 1288) (nil fontified nil 1286 . 1287) (nil fontified nil 1285 . 1286) (nil fontified nil 1280 . 1285) (nil fontified nil 1279 . 1280) (nil fontified nil 1275 . 1279) (nil fontified nil 1274 . 1275) (nil fontified nil 1269 . 1274) (nil fontified nil 1267 . 1269) (nil fontified nil 1266 . 1267) (nil fontified nil 1264 . 1266) (nil fontified nil 1256 . 1264) (nil fontified nil 1255 . 1256) (nil fontified nil 1251 . 1255) (nil fontified nil 1250 . 1251) (nil fontified nil 1249 . 1250) (nil fontified nil 1245 . 1249) (nil fontified nil 1244 . 1245) (nil fontified nil 1239 . 1244) (nil fontified nil 1232 . 1239) (nil fontified nil 1231 . 1232) (nil fontified nil 1230 . 1231) (nil fontified nil 1221 . 1230) (nil fontified nil 1213 . 1221) (1213 . 1313)) nil (25891 65303 53243 293000) 0 nil])
([nil nil ((#("            net_input = torch.randn(size=(self.N_NEURON, ), dtype=self.FLOAT) * self.VAR_FF[0]
" 0 12 (fontified t) 12 21 (fontified t face tree-sitter-hl-face:variable) 21 22 (fontified t) 22 23 (fontified t face tree-sitter-hl-face:operator) 23 30 (fontified t) 30 35 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 40 (fontified t face tree-sitter-hl-face:label) 40 41 (fontified t face tree-sitter-hl-face:operator) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 46 (fontified t face tree-sitter-hl-face:keyword) 46 47 (fontified t) 47 55 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 55 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-2-face)) 58 60 (fontified t) 60 65 (fontified t face tree-sitter-hl-face:label) 65 66 (fontified t face tree-sitter-hl-face:operator) 66 70 (fontified t face tree-sitter-hl-face:keyword) 70 71 (fontified t) 71 76 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 76 77 (fontified t face (rainbow-delimiters-depth-1-face)) 77 78 (fontified t) 78 79 (fontified t face tree-sitter-hl-face:operator) 79 80 (fontified t) 80 84 (fontified t face tree-sitter-hl-face:keyword) 84 85 (fontified t) 85 91 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 91 92 (fontified t face (rainbow-delimiters-depth-1-face)) 92 93 (fontified t face tree-sitter-hl-face:number) 93 94 (fontified t face (rainbow-delimiters-depth-1-face)) 94 95 (fontified t)) . -1313) (undo-tree-id1211 . -95) (undo-tree-id1212 . -95) (undo-tree-id1213 . -95) (undo-tree-id1214 . -95) (undo-tree-id1215 . -95) (undo-tree-id1216 . -95) (undo-tree-id1217 . -95) (undo-tree-id1218 . -95) (undo-tree-id1219 . -95) (undo-tree-id1220 . -95) (undo-tree-id1221 . -95) (undo-tree-id1222 . -95) (undo-tree-id1223 . -95) (undo-tree-id1224 . -95) (undo-tree-id1225 . -95) (undo-tree-id1226 . -95) 1408) nil (25891 65303 53234 163000) 0 nil])
([nil nil ((1221 . 1225) 1213) nil (25891 65303 53219 627000) 0 nil])
([nil nil ((#("        if self.VAR_FF[0] > 0:
            net_input = torch.randn(size=(self.N_NEURON, ), dtype=self.FLOAT) * np.sqrt(self.VAR_FF[0])
        else:
            net_input = torch.zeros(self.N_NEURON)
" 0 8 (fontified t) 8 10 (fontified t face tree-sitter-hl-face:keyword) 10 11 (fontified t) 11 15 (fontified t face tree-sitter-hl-face:keyword) 15 16 (fontified t) 16 22 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face tree-sitter-hl-face:number) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t) 26 27 (fontified t face tree-sitter-hl-face:operator) 27 28 (fontified t) 28 29 (fontified t face tree-sitter-hl-face:number) 29 30 (fontified t) 30 31 (fontified t) 31 43 (fontified t) 43 52 (fontified t face tree-sitter-hl-face:variable) 52 53 (fontified t) 53 54 (fontified t face tree-sitter-hl-face:operator) 54 61 (fontified t) 61 66 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 66 67 (fontified t face (rainbow-delimiters-depth-1-face)) 67 71 (fontified t face tree-sitter-hl-face:label) 71 72 (fontified t face tree-sitter-hl-face:operator) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 77 (fontified t face tree-sitter-hl-face:keyword) 77 78 (fontified t) 78 86 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 86 88 (fontified t) 88 89 (fontified t face (rainbow-delimiters-depth-2-face)) 89 91 (fontified t) 91 96 (fontified t face tree-sitter-hl-face:label) 96 97 (fontified t face tree-sitter-hl-face:operator) 97 101 (fontified t face tree-sitter-hl-face:keyword) 101 102 (fontified t) 102 107 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 109 (fontified t) 109 110 (fontified t face tree-sitter-hl-face:operator) 110 114 (fontified t) 114 118 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 118 119 (fontified t face (rainbow-delimiters-depth-1-face)) 119 123 (fontified t face tree-sitter-hl-face:keyword) 123 124 (fontified t) 124 130 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 130 131 (fontified t face (rainbow-delimiters-depth-2-face)) 131 132 (fontified t face tree-sitter-hl-face:number) 132 133 (fontified t face (rainbow-delimiters-depth-2-face)) 133 134 (fontified t face (rainbow-delimiters-depth-1-face)) 134 135 (fontified t rear-nonsticky t) 135 143 (fontified t) 143 147 (fontified t face tree-sitter-hl-face:keyword) 147 148 (fontified t) 148 149 (fontified t) 149 161 (fontified t) 161 170 (fontified t face tree-sitter-hl-face:variable) 170 171 (fontified t) 171 172 (fontified t face tree-sitter-hl-face:operator) 172 179 (fontified t) 179 184 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 184 185 (fontified t face (rainbow-delimiters-depth-1-face)) 185 189 (fontified t face tree-sitter-hl-face:keyword) 189 190 (fontified t) 190 198 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 198 199 (fontified t face (rainbow-delimiters-depth-1-face)) 199 200 (rear-nonsticky t fontified t)) . 1182) (undo-tree-id1185 . -31) (undo-tree-id1186 . -31) (undo-tree-id1187 . -31) (undo-tree-id1188 . -31) (undo-tree-id1189 . -135) (undo-tree-id1190 . -135) (undo-tree-id1191 . -135) (undo-tree-id1192 . -135) (undo-tree-id1193 . -135) (undo-tree-id1194 . -135) (undo-tree-id1195 . -135) (undo-tree-id1196 . -135) (undo-tree-id1197 . -31) (undo-tree-id1198 . -135) (undo-tree-id1199 . -135) (undo-tree-id1200 . -135) (undo-tree-id1201 . -135) (undo-tree-id1202 . -200) (undo-tree-id1203 . -135) (undo-tree-id1204 . -135) (undo-tree-id1205 . -31) (undo-tree-id1206 . -31) (undo-tree-id1207 . -149) (undo-tree-id1208 . -31) (undo-tree-id1209 . -135) (undo-tree-id1210 . -200) 1382) nil (25891 65303 53216 453000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1181) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) 1182) nil (25891 65303 53191 829000) 0 nil])
([nil nil ((nil fontified nil 1685 . 1686) (nil fontified nil 1684 . 1685) (nil fontified nil 1676 . 1684) (nil fontified nil 1675 . 1676) (nil fontified nil 1671 . 1675) (nil fontified nil 1670 . 1671) (nil fontified nil 1665 . 1670) (nil fontified nil 1658 . 1665) (nil fontified nil 1657 . 1658) (nil fontified nil 1656 . 1657) (nil fontified nil 1647 . 1656) (nil fontified nil 1635 . 1647) (nil fontified nil 1634 . 1635) (nil fontified nil 1633 . 1634) (nil fontified nil 1629 . 1633) (nil fontified nil 1621 . 1629) (nil fontified nil 1620 . 1621) (nil fontified nil 1619 . 1620) (nil fontified nil 1618 . 1619) (nil fontified nil 1617 . 1618) (nil fontified nil 1616 . 1617) (nil fontified nil 1610 . 1616) (nil fontified nil 1609 . 1610) (nil fontified nil 1605 . 1609) (nil fontified nil 1604 . 1605) (nil fontified nil 1600 . 1604) (nil fontified nil 1596 . 1600) (nil fontified nil 1595 . 1596) (nil fontified nil 1594 . 1595) (nil fontified nil 1593 . 1594) (nil fontified nil 1588 . 1593) (nil fontified nil 1587 . 1588) (nil fontified nil 1583 . 1587) (nil fontified nil 1582 . 1583) (nil fontified nil 1577 . 1582) (nil fontified nil 1575 . 1577) (nil fontified nil 1574 . 1575) (nil fontified nil 1572 . 1574) (nil fontified nil 1564 . 1572) (nil fontified nil 1563 . 1564) (nil fontified nil 1559 . 1563) (nil fontified nil 1558 . 1559) (nil fontified nil 1557 . 1558) (nil fontified nil 1553 . 1557) (nil fontified nil 1552 . 1553) (nil fontified nil 1547 . 1552) (nil fontified nil 1540 . 1547) (nil fontified nil 1539 . 1540) (nil fontified nil 1538 . 1539) (nil fontified nil 1529 . 1538) (nil fontified nil 1517 . 1529) (nil fontified nil 1516 . 1517) (nil fontified nil 1515 . 1516) (nil fontified nil 1514 . 1515) (nil fontified nil 1513 . 1514) (nil fontified nil 1512 . 1513) (nil fontified nil 1511 . 1512) (nil fontified nil 1510 . 1511) (nil fontified nil 1509 . 1510) (nil fontified nil 1508 . 1509) (nil fontified nil 1502 . 1508) (nil fontified nil 1501 . 1502) (nil fontified nil 1497 . 1501) (nil fontified nil 1496 . 1497) (nil fontified nil 1494 . 1496) (nil fontified nil 1486 . 1494) (1486 . 1686)) nil (25891 65303 53158 750000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1796) (undo-tree-id1153 . -4) 1800) nil (25891 65303 53141 203000) 0 nil])
([nil nil ((1135 . 1147) (#("        " 0 8 (fontified nil)) . 1134) (undo-tree-id1277 . -8) (1142 . 1143) (t 25891 65303 60908 706000)) nil (25891 65338 498006 405000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1143) (undo-tree-id1276 . -4) 1147) nil (25891 65338 498003 981000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1139) (undo-tree-id1275 . -4) 1143) nil (25891 65338 498001 449000) 0 nil])
([nil nil ((1159 . 1161) (#("(" 0 1 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function))) . -1159) (1159 . 1160) (1158 . 1158) (1158 . 1159) (1157 . 1157) (1157 . 1158) (1156 . 1156) (1156 . 1157) (1155 . 1155) (1155 . 1156) (1154 . 1154) (1154 . 1155) (1153 . 1153) (1153 . 1154) (1152 . 1152) (1152 . 1153) (1151 . 1151) (1151 . 1152) (1150 . 1150) (1150 . 1151) (1148 . 1148) (1148 . 1150) (1147 . 1147) (1147 . 1148) (1145 . 1145) (1145 . 1147) (1144 . 1144) (1144 . 1145) (1142 . 1142) (1142 . 1144) (1141 . 1141) (1141 . 1142) (1139 . 1139) (1139 . 1141)) nil (25891 65338 497997 566000) 0 nil])
([nil nil ((1161 . 1161) (1161 . 1162)) nil (25891 65338 497990 75000) 0 nil])
([nil nil ((1163 . 1163) (1163 . 1164) (1160 . 1160) (1160 . 1163)) nil (25891 65338 497988 827000) 0 nil])
([nil nil ((1166 . 1175)) nil (25891 65338 497987 343000) 0 nil])
([nil nil ((1170 . 1170) (1170 . 1171) (1168 . 1168) (1168 . 1170) (1167 . 1167) (1167 . 1168) (1165 . 1165) (1165 . 1167) (1164 . 1164) (1164 . 1165)) nil (25891 65338 498515 979000) 0 nil])
([nil nil ((#("        rec_input = torch.zeros((self.N_POP, self.N_NEURON))
        
        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                rec_input[i_pop] = rec_input[i_pop] + self.Wab[i_pop][j_pop](rates[self.csumNa[j_pop] : self.csumNa[j_pop + 1]])
" 0 8 (fontified t) 8 12 (fontified t face tree-sitter-hl-face:variable) 12 17 (fontified t face tree-sitter-hl-face:variable) 17 18 (fontified t) 18 19 (fontified t face tree-sitter-hl-face:operator) 19 26 (fontified t) 26 31 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 37 (fontified t face tree-sitter-hl-face:keyword) 37 38 (fontified t) 38 43 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 43 45 (fontified t) 45 49 (fontified t face tree-sitter-hl-face:keyword) 49 50 (fontified t) 50 58 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 58 59 (fontified t face (rainbow-delimiters-depth-2-face)) 59 60 (fontified t face (rainbow-delimiters-depth-1-face)) 60 61 (rear-nonsticky t fontified t) 61 70 (fontified t) 70 72 (fontified t) 72 73 (fontified t) 73 75 (fontified t) 75 78 (fontified t) 78 81 (fontified t face tree-sitter-hl-face:keyword) 81 82 (fontified t) 82 84 (fontified t face tree-sitter-hl-face:variable) 84 87 (fontified t face tree-sitter-hl-face:variable) 87 88 (fontified t) 88 90 (fontified t face tree-sitter-hl-face:operator) 90 91 (fontified t) 91 96 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 96 97 (fontified t face (rainbow-delimiters-depth-1-face)) 97 101 (fontified t face tree-sitter-hl-face:keyword) 101 102 (fontified t) 102 107 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 109 (fontified t) 109 110 (fontified t) 110 118 (fontified t) 118 122 (fontified t) 122 125 (fontified t face tree-sitter-hl-face:keyword) 125 126 (fontified t) 126 131 (fontified t face tree-sitter-hl-face:variable) 131 132 (fontified t) 132 134 (fontified t face tree-sitter-hl-face:operator) 134 135 (fontified t) 135 140 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 140 141 (fontified t face (rainbow-delimiters-depth-1-face)) 141 145 (fontified t face tree-sitter-hl-face:keyword) 145 146 (fontified t) 146 151 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 151 152 (fontified t face (rainbow-delimiters-depth-1-face)) 152 153 (fontified t) 153 154 (fontified t) 154 162 (fontified t) 162 170 (fontified t) 170 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-1-face)) 180 185 (fontified t face tree-sitter-hl-face:variable) 185 186 (fontified t face (rainbow-delimiters-depth-1-face)) 186 187 (fontified t) 187 188 (fontified t face tree-sitter-hl-face:operator) 188 189 (fontified t) 189 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-1-face)) 199 204 (fontified t) 204 205 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 205 206 (fontified t) 206 207 (fontified t face tree-sitter-hl-face:operator) 207 208 (fontified t) 208 212 (fontified t face tree-sitter-hl-face:keyword) 212 213 (fontified t) 213 216 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 222 (fontified t) 222 223 (fontified t face (rainbow-delimiters-depth-1-face)) 223 224 (fontified t face (rainbow-delimiters-depth-1-face)) 224 229 (fontified t) 229 230 (fontified t face (rainbow-delimiters-depth-1-face)) 230 231 (fontified t face (rainbow-delimiters-depth-1-face)) 231 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-2-face)) 237 241 (fontified t face tree-sitter-hl-face:keyword) 241 242 (fontified t) 242 248 (fontified t face tree-sitter-hl-face:property) 248 249 (fontified t face (rainbow-delimiters-depth-3-face)) 249 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-3-face)) 255 258 (fontified t) 258 262 (fontified t face tree-sitter-hl-face:keyword) 262 263 (fontified t) 263 269 (fontified t face tree-sitter-hl-face:property) 269 270 (fontified t face (rainbow-delimiters-depth-3-face)) 270 271 (fontified t) 271 276 (fontified t) 276 277 (fontified t face tree-sitter-hl-face:operator) 277 278 (fontified t) 278 279 (fontified t face tree-sitter-hl-face:number) 279 280 (fontified t face (rainbow-delimiters-depth-3-face)) 280 281 (fontified t face (rainbow-delimiters-depth-2-face)) 281 282 (fontified t face (rainbow-delimiters-depth-1-face)) 282 283 (fontified t)) . 1234) (undo-tree-id1278 . -283) (undo-tree-id1279 . -154) (undo-tree-id1280 . -154) (undo-tree-id1281 . -154) (undo-tree-id1282 . -154) (undo-tree-id1283 . -154) (undo-tree-id1284 . -154) (undo-tree-id1285 . -110) (undo-tree-id1286 . -110) (undo-tree-id1287 . -110) (undo-tree-id1288 . -110) (undo-tree-id1289 . -69) (undo-tree-id1290 . -69) (undo-tree-id1291 . -69) (undo-tree-id1292 . -69) (undo-tree-id1293 . -69) (undo-tree-id1294 . -69) (undo-tree-id1295 . -69) (undo-tree-id1296 . -69) (undo-tree-id1297 . -69) (undo-tree-id1298 . -69) (undo-tree-id1299 . -69) (undo-tree-id1300 . -154) (undo-tree-id1301 . -110) (undo-tree-id1302 . -110) (undo-tree-id1303 . -154) (undo-tree-id1304 . -154) (undo-tree-id1305 . -242) (undo-tree-id1306 . -257) (undo-tree-id1307 . -70) (undo-tree-id1308 . -283)) nil (25891 65342 288166 392000) 0 nil] [nil nil ((#("        for i_pop in range(self.N_POP):
            for j_pop in range(self.N_POP):
                rec_input[i_pop] = rec_input[i_pop] + self.Wab[i_pop][j_pop](rates[self.csumNa[j_pop] : self.csumNa[j_pop + 1]])
" 0 2 (fontified t) 2 3 (fontified t) 3 5 (fontified t) 5 8 (fontified t) 8 11 (fontified t face tree-sitter-hl-face:keyword) 11 12 (fontified t) 12 14 (fontified t face tree-sitter-hl-face:variable) 14 17 (fontified t face tree-sitter-hl-face:variable) 17 18 (fontified t) 18 20 (fontified t face tree-sitter-hl-face:operator) 20 21 (fontified t) 21 26 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 31 (fontified t face tree-sitter-hl-face:keyword) 31 32 (fontified t) 32 37 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 39 (fontified t) 39 40 (fontified t) 40 48 (fontified t) 48 52 (fontified t) 52 55 (fontified t face tree-sitter-hl-face:keyword) 55 56 (fontified t) 56 61 (fontified t face tree-sitter-hl-face:variable) 61 62 (fontified t) 62 64 (fontified t face tree-sitter-hl-face:operator) 64 65 (fontified t) 65 70 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 70 71 (fontified t face (rainbow-delimiters-depth-1-face)) 71 75 (fontified t face tree-sitter-hl-face:keyword) 75 76 (fontified t) 76 81 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 81 82 (fontified t face (rainbow-delimiters-depth-1-face)) 82 83 (fontified t) 83 84 (fontified t) 84 92 (fontified t) 92 100 (fontified t) 100 109 (fontified t) 109 110 (fontified t face (rainbow-delimiters-depth-1-face)) 110 115 (fontified t face tree-sitter-hl-face:variable) 115 116 (fontified t face (rainbow-delimiters-depth-1-face)) 116 117 (fontified t) 117 118 (fontified t face tree-sitter-hl-face:operator) 118 119 (fontified t) 119 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-1-face)) 129 134 (fontified t) 134 135 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 135 136 (fontified t) 136 137 (fontified t face tree-sitter-hl-face:operator) 137 138 (fontified t) 138 142 (fontified t face tree-sitter-hl-face:keyword) 142 143 (fontified t) 143 146 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 146 147 (fontified t face (rainbow-delimiters-depth-1-face)) 147 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-1-face)) 153 154 (fontified t face (rainbow-delimiters-depth-1-face)) 154 159 (fontified t) 159 160 (fontified t face (rainbow-delimiters-depth-1-face)) 160 161 (fontified t face (rainbow-delimiters-depth-1-face)) 161 166 (fontified t) 166 167 (fontified t face (rainbow-delimiters-depth-2-face)) 167 171 (fontified t face tree-sitter-hl-face:keyword) 171 172 (fontified t) 172 178 (fontified t face tree-sitter-hl-face:property) 178 179 (fontified t face (rainbow-delimiters-depth-3-face)) 179 184 (fontified t) 184 185 (fontified t face (rainbow-delimiters-depth-3-face)) 185 188 (fontified t) 188 192 (fontified t face tree-sitter-hl-face:keyword) 192 193 (fontified t) 193 199 (fontified t face tree-sitter-hl-face:property) 199 200 (fontified t face (rainbow-delimiters-depth-3-face)) 200 201 (fontified t) 201 206 (fontified t) 206 207 (fontified t face tree-sitter-hl-face:operator) 207 208 (fontified t) 208 209 (fontified t face tree-sitter-hl-face:number) 209 210 (fontified t face (rainbow-delimiters-depth-3-face)) 210 211 (fontified t face (rainbow-delimiters-depth-2-face)) 211 212 (fontified t face (rainbow-delimiters-depth-1-face)) 212 213 (fontified t)) . 1304) (undo-tree-id1262 . -84) (undo-tree-id1263 . -84) (undo-tree-id1264 . -84) (undo-tree-id1265 . -84) (undo-tree-id1266 . -84) (undo-tree-id1267 . -84) (undo-tree-id1268 . -40) (undo-tree-id1269 . -40) (undo-tree-id1270 . -40) (undo-tree-id1271 . -40) (undo-tree-id1272 . -213) (undo-tree-id1273 . -84) (undo-tree-id1274 . -213) 1517) ((1304 . 1517)) (25891 65338 497978 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1456 . 1457) (nil fontified nil 1456 . 1457) (nil fontified nil 1455 . 1456) (nil fontified nil 1454 . 1455) (nil fontified nil 1453 . 1454) (nil fontified nil 1452 . 1453) (nil fontified nil 1451 . 1452) (nil fontified nil 1450 . 1451) (nil fontified nil 1445 . 1450) (nil fontified nil 1444 . 1445) (nil fontified nil 1443 . 1444) (nil fontified nil 1437 . 1443) (nil fontified nil 1436 . 1437) (nil fontified nil 1432 . 1436) (nil fontified nil 1429 . 1432) (nil fontified nil 1428 . 1429) (nil fontified nil 1423 . 1428) (nil fontified nil 1422 . 1423) (nil fontified nil 1416 . 1422) (nil fontified nil 1415 . 1416) (nil fontified nil 1411 . 1415) (nil fontified nil 1410 . 1411) (nil fontified nil 1405 . 1410) (nil fontified nil 1404 . 1405) (nil fontified nil 1403 . 1404) (nil fontified nil 1398 . 1403) (nil fontified nil 1397 . 1398) (nil fontified nil 1396 . 1397) (nil fontified nil 1391 . 1396) (nil fontified nil 1390 . 1391) (nil fontified nil 1387 . 1390) (nil fontified nil 1386 . 1387) (nil fontified nil 1382 . 1386) (nil fontified nil 1381 . 1382) (nil fontified nil 1380 . 1381) (nil fontified nil 1379 . 1380) (nil fontified nil 1378 . 1379) (nil fontified nil 1373 . 1378) (nil fontified nil 1372 . 1373) (nil fontified nil 1363 . 1372) (nil fontified nil 1362 . 1363) (nil fontified nil 1361 . 1362) (nil fontified nil 1360 . 1361) (nil fontified nil 1359 . 1360) (nil fontified nil 1354 . 1359) (nil fontified nil 1353 . 1354) (nil fontified nil 1344 . 1353) (nil fontified nil 1336 . 1344) (nil fontified nil 1328 . 1336) (nil fontified nil 1327 . 1328) (nil fontified nil 1326 . 1327) (nil fontified nil 1325 . 1326) (nil fontified nil 1320 . 1325) (nil fontified nil 1319 . 1320) (nil fontified nil 1315 . 1319) (nil fontified nil 1314 . 1315) (nil fontified nil 1309 . 1314) (nil fontified nil 1308 . 1309) (nil fontified nil 1306 . 1308) (nil fontified nil 1305 . 1306) (nil fontified nil 1300 . 1305) (nil fontified nil 1299 . 1300) (nil fontified nil 1296 . 1299) (nil fontified nil 1292 . 1296) (nil fontified nil 1284 . 1292) (nil fontified nil 1283 . 1284) (nil fontified nil 1282 . 1283) (nil fontified nil 1281 . 1282) (nil fontified nil 1276 . 1281) (nil fontified nil 1275 . 1276) (nil fontified nil 1271 . 1275) (nil fontified nil 1270 . 1271) (nil fontified nil 1265 . 1270) (nil fontified nil 1264 . 1265) (nil fontified nil 1262 . 1264) (nil fontified nil 1261 . 1262) (nil fontified nil 1258 . 1261) (nil fontified nil 1256 . 1258) (nil fontified nil 1255 . 1256) (nil fontified nil 1252 . 1255) (nil fontified nil 1249 . 1252) (nil fontified nil 1247 . 1249) (nil fontified nil 1246 . 1247) (nil fontified nil 1244 . 1246) (nil fontified nil 1235 . 1244) (nil fontified nil 1234 . 1235) (nil fontified nil 1233 . 1234) (nil fontified nil 1232 . 1233) (nil fontified nil 1224 . 1232) (nil fontified nil 1223 . 1224) (nil fontified nil 1219 . 1223) (nil fontified nil 1217 . 1219) (nil fontified nil 1212 . 1217) (nil fontified nil 1211 . 1212) (nil fontified nil 1207 . 1211) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1200 . 1205) (nil fontified nil 1193 . 1200) (nil fontified nil 1192 . 1193) (nil fontified nil 1191 . 1192) (nil fontified nil 1186 . 1191) (nil fontified nil 1182 . 1186) (nil fontified nil 1174 . 1182) (1174 . 1457)) nil (25891 65342 288104 462000) 0 nil])
nil
([nil nil ((1530 . 1530) (1530 . 1531) (1529 . 1529) (1529 . 1530) (1528 . 1528) (1528 . 1529) (1527 . 1527) (1527 . 1528) (1526 . 1526) (1526 . 1527) (1525 . 1525) (1525 . 1526) (t 25891 65342 296782 265000)) nil (25891 65372 916455 938000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1530) (undo-tree-id1316 . -1) 1531) nil (25891 65372 916452 443000) 0 nil])
([nil nil ((1541 . 1542) (1540 . 1540) (1540 . 1541) (1539 . 1539) (1539 . 1540) (1538 . 1538) (1538 . 1539) (1537 . 1537) (1537 . 1538) (1536 . 1536) (1536 . 1537) (1535 . 1535) (1535 . 1536) (1534 . 1534) (1534 . 1535) (1533 . 1533) (1533 . 1534) (1532 . 1532) (1532 . 1533) (1531 . 1531) (1531 . 1532) (1530 . 1530) (1530 . 1531)) nil (25891 65372 916449 169000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1541) (undo-tree-id1315 . -1) 1542) nil (25891 65372 916444 95000) 0 nil])
([nil nil ((1543 . 1543) (1543 . 1544) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1543) (1542 . 1543) (1541 . 1543) (#("(" 0 1 (fontified nil)) . -1541) (1541 . 1542)) nil (25891 65372 916441 641000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1543) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) 1544) nil (25891 65372 916439 484000) 0 nil])
([nil nil ((1546 . 1546) (1546 . 1547) (1545 . 1545) (1545 . 1546) (1544 . 1544) (1544 . 1545) (1542 . 1542) (1542 . 1544)) nil (25891 65372 916436 1000) 0 nil])
([nil nil ((1548 . 1557)) nil (25891 65372 916433 772000) 0 nil])
([nil nil ((1458 . 1474) (#("        " 0 8 (fontified nil)) . 1457) (undo-tree-id1312 . -8) (1465 . 1466)) nil (25891 65372 916432 674000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1470) (undo-tree-id1311 . -4) 1474) nil (25891 65372 916430 229000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1466) (undo-tree-id1310 . -4) 1470) nil (25891 65372 916428 7000) 0 nil])
([nil nil ((1475 . 1475) (1475 . 1476) (1472 . 1472) (1472 . 1475) (1471 . 1471) (1471 . 1472) (1469 . 1469) (1469 . 1471) (1468 . 1468) (1468 . 1469) (1466 . 1466) (1466 . 1468)) nil (25891 65372 916424 581000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1475) (undo-tree-id1309 . -1) 1476) nil (25891 65372 916421 17000) 0 nil])
([nil nil ((1481 . 1481) (1481 . 1482) (1480 . 1480) (1480 . 1481) (1479 . 1479) (1479 . 1480) (1478 . 1478) (1478 . 1479) (1477 . 1477) (1477 . 1478) (1476 . 1476) (1476 . 1477) (1475 . 1475) (1475 . 1476)) nil (25891 65372 916410 233000) 0 nil])
([nil nil ((1482 . 1487)) nil (25891 65372 916406 632000) 0 nil])
([nil nil ((1550 . 1550) (1550 . 1551) (1549 . 1549) (1549 . 1550) (1547 . 1547) (1547 . 1549)) nil (25891 65372 916404 419000) 0 nil])
([nil nil ((1556 . 1559) (1555 . 1555) (1555 . 1556) (1554 . 1554) (1554 . 1555) (1553 . 1553) (1553 . 1554) (1552 . 1552) (1552 . 1553) (1551 . 1551) (1551 . 1552)) nil (25891 65372 916396 565000) 0 nil])
([nil nil ((1484 . 1488) (#("    " 0 4 (fontified nil)) . 1483) (undo-tree-id1362 . -4) (1487 . 1488) (t 25891 65372 924682 697000)) nil (25891 65470 634064 146000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1484) (undo-tree-id1361 . -4) 1488) nil (25891 65470 634061 767000) 0 nil])
([nil nil ((1484 . 1488)) nil (25891 65470 634060 44000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1484) (undo-tree-id1360 . -4) 1488) nil (25891 65470 634059 101000) 0 nil])
([nil nil ((1484 . 1488)) nil (25891 65470 634057 371000) 0 nil])
([nil nil ((1493 . 1494) (1491 . 1491) (1491 . 1493) (1490 . 1490) (1490 . 1491) (1488 . 1488) (1488 . 1490)) nil (25891 65470 634056 455000) 0 nil])
([nil nil ((1508 . 1510) (#("(" 0 1 (fontified nil face (tree-sitter-hl-face:method tree-sitter-hl-face:function))) . -1508) (1508 . 1509) (1507 . 1507) (1507 . 1508) (1506 . 1506) (1506 . 1507) (1505 . 1505) (1505 . 1506) (1504 . 1504) (1504 . 1505) (1503 . 1503) (1503 . 1504) (1502 . 1502) (1502 . 1503) (1501 . 1501) (1501 . 1502) (1500 . 1500) (1500 . 1501) (1499 . 1499) (1499 . 1500) (1498 . 1498) (1498 . 1499) (1497 . 1497) (1497 . 1498) (1496 . 1496) (1496 . 1497) (1495 . 1495) (1495 . 1496) (1494 . 1494) (1494 . 1495)) nil (25891 65470 634053 188000) 0 nil])
([nil nil ((1510 . 1511)) nil (25891 65470 634045 507000) 0 nil])
([nil nil ((1514 . 1515) (1513 . 1513) (1513 . 1514) (1512 . 1512) (1512 . 1513) (1510 . 1510) (1510 . 1512) (1509 . 1509) (1509 . 1510)) nil (25891 65470 634044 381000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1513) (undo-tree-id1358 . -1) (#(" " 0 1 (fontified t)) . -1514) (undo-tree-id1359 . -1) 1515) nil (25891 65470 634041 816000) 0 nil])
([nil nil ((1514 . 1514) (1514 . 1517) (1513 . 1513) (1513 . 1514)) nil (25891 65470 634038 879000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1515) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1516) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) 1517) nil (25891 65470 634037 88000) 0 nil])
([nil nil ((1517 . 1517) (1517 . 1519) (1516 . 1516) (1516 . 1517) (1515 . 1515) (1515 . 1516)) nil (25891 65470 634032 797000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1518) (undo-tree-id1353 . -1) 1519) nil (25891 65470 634031 8000) 0 nil])
([nil nil ((1518 . 1518) (1518 . 1520)) nil (25891 65470 634029 285000) 0 nil])
([nil nil ((#("ç" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1518) (undo-tree-id1351 . -1) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1519) (undo-tree-id1352 . -1) 1520) nil (25891 65470 634027 999000) 0 nil])
([nil nil ((1523 . 1524) (1522 . 1522) (1522 . 1523) (1521 . 1521) (1521 . 1522) (1520 . 1520) (1520 . 1521) (1519 . 1519) (1519 . 1520) (1518 . 1518) (1518 . 1519)) nil (25891 65470 634024 656000) 0 nil])
([nil nil ((1526 . 1535)) nil (25891 65470 634021 999000) 0 nil])
([nil nil ((#("        if self.VAR_FF[0] > 0:
            net_input = torch.randn(size=(self.N_NEURON, ), dtype=self.FLOAT) * np.sqrt(self.VAR_FF[0])
        else:
            net_input = torch.zeros(self.N_NEURON)
        
        for i_pop in range(self.N_POP):
            net_input = net_input + rec_input[i_pop]
" 0 8 (fontified t) 8 10 (fontified t face tree-sitter-hl-face:keyword) 10 11 (fontified t) 11 15 (fontified t face tree-sitter-hl-face:keyword) 15 16 (fontified t) 16 22 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face tree-sitter-hl-face:number) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t) 26 27 (fontified t face tree-sitter-hl-face:operator) 27 28 (fontified t) 28 29 (fontified t face tree-sitter-hl-face:number) 29 30 (fontified t) 30 31 (fontified t) 31 43 (fontified t) 43 52 (fontified t face tree-sitter-hl-face:variable) 52 53 (fontified t) 53 54 (fontified t face tree-sitter-hl-face:operator) 54 61 (fontified t) 61 66 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 66 67 (fontified t face (rainbow-delimiters-depth-1-face)) 67 71 (fontified t face tree-sitter-hl-face:label) 71 72 (fontified t face tree-sitter-hl-face:operator) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 77 (fontified t face tree-sitter-hl-face:keyword) 77 78 (fontified t) 78 86 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 86 88 (fontified t) 88 89 (fontified t face (rainbow-delimiters-depth-2-face)) 89 91 (fontified t) 91 96 (fontified t face tree-sitter-hl-face:label) 96 97 (fontified t face tree-sitter-hl-face:operator) 97 101 (fontified t face tree-sitter-hl-face:keyword) 101 102 (fontified t) 102 107 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 109 (fontified t) 109 110 (fontified t face tree-sitter-hl-face:operator) 110 114 (fontified t) 114 118 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 118 119 (fontified t face (rainbow-delimiters-depth-1-face)) 119 123 (fontified t face tree-sitter-hl-face:keyword) 123 124 (fontified t) 124 130 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 130 131 (fontified t face (rainbow-delimiters-depth-2-face)) 131 132 (fontified t face tree-sitter-hl-face:number) 132 133 (fontified t face (rainbow-delimiters-depth-2-face)) 133 134 (fontified t face (rainbow-delimiters-depth-1-face)) 134 135 (rear-nonsticky t fontified t) 135 143 (fontified t) 143 147 (fontified t face tree-sitter-hl-face:keyword) 147 148 (fontified t) 148 149 (fontified t) 149 161 (fontified t) 161 170 (fontified t face tree-sitter-hl-face:variable) 170 171 (fontified t) 171 172 (fontified t face tree-sitter-hl-face:operator) 172 179 (fontified t) 179 184 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 184 185 (fontified t face (rainbow-delimiters-depth-1-face)) 185 189 (fontified t face tree-sitter-hl-face:keyword) 189 190 (fontified t) 190 198 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 198 199 (fontified t face (rainbow-delimiters-depth-1-face)) 199 200 (rear-nonsticky t fontified t) 200 208 (fontified t) 208 209 (rear-nonsticky t fontified t) 209 211 (fontified t) 211 212 (fontified t) 212 214 (fontified t) 214 217 (fontified t) 217 220 (fontified t face tree-sitter-hl-face:keyword) 220 221 (fontified t) 221 223 (fontified t face tree-sitter-hl-face:variable) 223 226 (fontified t face tree-sitter-hl-face:variable) 226 227 (fontified t) 227 229 (fontified t face tree-sitter-hl-face:operator) 229 230 (fontified t) 230 235 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 235 236 (fontified t face (rainbow-delimiters-depth-1-face)) 236 240 (fontified t face tree-sitter-hl-face:keyword) 240 241 (fontified t) 241 246 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 248 (fontified t) 248 249 (rear-nonsticky t fontified t) 249 261 (fontified t) 261 270 (fontified t face tree-sitter-hl-face:variable) 270 271 (fontified t) 271 272 (fontified t face tree-sitter-hl-face:operator) 272 283 (fontified t) 283 284 (fontified t face tree-sitter-hl-face:operator) 284 285 (fontified t) 285 294 (fontified t) 294 295 (fontified t face (rainbow-delimiters-depth-1-face)) 295 300 (fontified t) 300 301 (fontified t face (rainbow-delimiters-depth-1-face)) 301 302 (fontified t)) . 1640) (undo-tree-id1338 . -261) (undo-tree-id1339 . -261) (undo-tree-id1340 . -261) (undo-tree-id1341 . -261) (undo-tree-id1342 . -261) (undo-tree-id1343 . -261) (undo-tree-id1344 . -272) (undo-tree-id1345 . -272) (undo-tree-id1346 . -272) (undo-tree-id1347 . -272) (undo-tree-id1348 . -302) (undo-tree-id1349 . -149) (undo-tree-id1350 . -302) 1942) nil (25891 65470 634020 213000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1828 . 1829) (nil fontified nil 1828 . 1829) (nil fontified nil 1827 . 1828) (nil fontified nil 1822 . 1827) (nil fontified nil 1821 . 1822) (nil fontified nil 1812 . 1821) (nil fontified nil 1811 . 1812) (nil fontified nil 1810 . 1811) (nil fontified nil 1799 . 1810) (nil fontified nil 1798 . 1799) (nil fontified nil 1797 . 1798) (nil fontified nil 1788 . 1797) (nil fontified nil 1776 . 1788) (nil fontified nil 1775 . 1776) (nil fontified nil 1774 . 1775) (nil fontified nil 1773 . 1774) (nil fontified nil 1768 . 1773) (nil fontified nil 1767 . 1768) (nil fontified nil 1763 . 1767) (nil fontified nil 1762 . 1763) (nil fontified nil 1757 . 1762) (nil fontified nil 1756 . 1757) (nil fontified nil 1754 . 1756) (nil fontified nil 1753 . 1754) (nil fontified nil 1750 . 1753) (nil fontified nil 1748 . 1750) (nil fontified nil 1747 . 1748) (nil fontified nil 1744 . 1747) (nil fontified nil 1741 . 1744) (nil fontified nil 1739 . 1741) (nil fontified nil 1738 . 1739) (nil fontified nil 1736 . 1738) (nil fontified nil 1735 . 1736) (nil fontified nil 1727 . 1735) (nil fontified nil 1726 . 1727) (nil fontified nil 1725 . 1726) (nil fontified nil 1717 . 1725) (nil fontified nil 1716 . 1717) (nil fontified nil 1712 . 1716) (nil fontified nil 1711 . 1712) (nil fontified nil 1706 . 1711) (nil fontified nil 1699 . 1706) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1688 . 1697) (nil fontified nil 1676 . 1688) (nil fontified nil 1675 . 1676) (nil fontified nil 1674 . 1675) (nil fontified nil 1670 . 1674) (nil fontified nil 1662 . 1670) (nil fontified nil 1661 . 1662) (nil fontified nil 1660 . 1661) (nil fontified nil 1659 . 1660) (nil fontified nil 1658 . 1659) (nil fontified nil 1657 . 1658) (nil fontified nil 1651 . 1657) (nil fontified nil 1650 . 1651) (nil fontified nil 1646 . 1650) (nil fontified nil 1645 . 1646) (nil fontified nil 1641 . 1645) (nil fontified nil 1637 . 1641) (nil fontified nil 1636 . 1637) (nil fontified nil 1635 . 1636) (nil fontified nil 1634 . 1635) (nil fontified nil 1629 . 1634) (nil fontified nil 1628 . 1629) (nil fontified nil 1624 . 1628) (nil fontified nil 1623 . 1624) (nil fontified nil 1618 . 1623) (nil fontified nil 1616 . 1618) (nil fontified nil 1615 . 1616) (nil fontified nil 1613 . 1615) (nil fontified nil 1605 . 1613) (nil fontified nil 1604 . 1605) (nil fontified nil 1600 . 1604) (nil fontified nil 1599 . 1600) (nil fontified nil 1598 . 1599) (nil fontified nil 1594 . 1598) (nil fontified nil 1593 . 1594) (nil fontified nil 1588 . 1593) (nil fontified nil 1581 . 1588) (nil fontified nil 1580 . 1581) (nil fontified nil 1579 . 1580) (nil fontified nil 1570 . 1579) (nil fontified nil 1558 . 1570) (nil fontified nil 1557 . 1558) (nil fontified nil 1556 . 1557) (nil fontified nil 1555 . 1556) (nil fontified nil 1554 . 1555) (nil fontified nil 1553 . 1554) (nil fontified nil 1552 . 1553) (nil fontified nil 1551 . 1552) (nil fontified nil 1550 . 1551) (nil fontified nil 1549 . 1550) (nil fontified nil 1543 . 1549) (nil fontified nil 1542 . 1543) (nil fontified nil 1538 . 1542) (nil fontified nil 1537 . 1538) (nil fontified nil 1535 . 1537) (nil fontified nil 1527 . 1535) (1527 . 1829)) nil (25891 65470 634003 53000) 0 nil])
([nil nil ((1946 . 1946) (1946 . 1947) (1945 . 1945) (1945 . 1946) (1943 . 1943) (1943 . 1945) (1942 . 1942) (1942 . 1943) (1941 . 1941) (1941 . 1942)) nil (25891 65470 633983 374000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1946) (undo-tree-id1337 . -1) 1947) nil (25891 65470 633980 985000) 0 nil])
([nil nil ((1966 . 1966) (1966 . 1967) (1965 . 1965) (1965 . 1966) (1964 . 1964) (1964 . 1965) (1963 . 1963) (1963 . 1964) (1962 . 1962) (1962 . 1963) (1961 . 1961) (1961 . 1962) (1960 . 1960) (1960 . 1961) (1959 . 1959) (1959 . 1960) (1957 . 1957) (1957 . 1959) (1956 . 1956) (1956 . 1957) (1955 . 1955) (1955 . 1956) (1954 . 1954) (1954 . 1955) (1952 . 1952) (1952 . 1954) (1950 . 1950) (1950 . 1952) (1949 . 1949) (1949 . 1950) (1948 . 1948) (1948 . 1949) (1947 . 1947) (1947 . 1948) (1946 . 1946) (1946 . 1947)) nil (25891 65470 633977 373000) 0 nil])
([nil nil ((1967 . 1967) (1967 . 1969)) nil (25891 65470 633970 356000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1967) (undo-tree-id1335 . -1) (#("u" 0 1 (fontified t)) . -1968) (undo-tree-id1336 . -1) 1969) nil (25891 65470 633968 830000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 1971) (1970 . 1971) (1969 . 1971) (#("(" 0 1 (fontified nil)) . -1969) (1969 . 1970) (1968 . 1968) (1968 . 1969) (1967 . 1967) (1967 . 1968)) nil (25891 65470 633965 388000) 0 nil])
([nil nil ((1974 . 1974) (1974 . 1975) (1972 . 1972) (1972 . 1974) (1970 . 1970) (1970 . 1972)) nil (25891 65470 633962 998000) 0 nil])
([nil nil ((#("        for i_pop in range(self.N_POP):
            rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] * self.EXP_DT_TAU[i_pop]
            rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] = rates[self.csumNa[i_pop] : self.csumNa[i_pop + 1]] + self.DT_TAU[i_pop] * Activation()(net_input[self.csumNa[i_pop] : self.csumNa[i_pop + 1]])
" 0 8 (fontified t) 8 11 (fontified t face tree-sitter-hl-face:keyword) 11 12 (fontified t) 12 17 (fontified t face tree-sitter-hl-face:variable) 17 18 (fontified t) 18 20 (fontified t face tree-sitter-hl-face:operator) 20 21 (fontified t) 21 26 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function\.call)) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 31 (fontified t face tree-sitter-hl-face:keyword) 31 32 (fontified t) 32 37 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 39 (fontified t) 39 48 (fontified t) 48 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-1-face)) 58 62 (fontified t face tree-sitter-hl-face:keyword) 62 63 (fontified t) 63 69 (fontified t face tree-sitter-hl-face:property) 69 70 (fontified t face (rainbow-delimiters-depth-2-face)) 70 75 (fontified t) 75 76 (fontified t face (rainbow-delimiters-depth-2-face)) 76 79 (fontified t) 79 83 (fontified t face tree-sitter-hl-face:keyword) 83 84 (fontified t) 84 90 (fontified t face tree-sitter-hl-face:property) 90 91 (fontified t face (rainbow-delimiters-depth-2-face)) 91 97 (fontified t) 97 98 (fontified t face tree-sitter-hl-face:operator) 98 99 (fontified t) 99 100 (fontified t face tree-sitter-hl-face:number) 100 101 (fontified t face (rainbow-delimiters-depth-2-face)) 101 102 (fontified t face (rainbow-delimiters-depth-1-face)) 102 103 (fontified t) 103 104 (fontified t face tree-sitter-hl-face:operator) 104 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-1-face)) 111 115 (fontified t face tree-sitter-hl-face:keyword) 115 116 (fontified t) 116 122 (fontified t face tree-sitter-hl-face:property) 122 123 (fontified t face (rainbow-delimiters-depth-2-face)) 123 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-2-face)) 129 132 (fontified t) 132 136 (fontified t face tree-sitter-hl-face:keyword) 136 137 (fontified t) 137 143 (fontified t face tree-sitter-hl-face:property) 143 144 (fontified t face (rainbow-delimiters-depth-2-face)) 144 150 (fontified t) 150 151 (fontified t face tree-sitter-hl-face:operator) 151 152 (fontified t) 152 153 (fontified t face tree-sitter-hl-face:number) 153 154 (fontified t face (rainbow-delimiters-depth-2-face)) 154 155 (fontified t face (rainbow-delimiters-depth-1-face)) 155 156 (fontified t) 156 157 (fontified t face tree-sitter-hl-face:operator) 157 158 (fontified t) 158 162 (fontified t face tree-sitter-hl-face:keyword) 162 163 (fontified t) 163 173 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 173 174 (fontified t face (rainbow-delimiters-depth-1-face)) 174 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-1-face)) 180 181 (fontified t) 181 189 (fontified t) 189 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-1-face)) 199 203 (fontified t face tree-sitter-hl-face:keyword) 203 204 (fontified t) 204 210 (fontified t face tree-sitter-hl-face:property) 210 211 (fontified t face (rainbow-delimiters-depth-2-face)) 211 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-2-face)) 217 220 (fontified t) 220 224 (fontified t face tree-sitter-hl-face:keyword) 224 225 (fontified t) 225 231 (fontified t face tree-sitter-hl-face:property) 231 232 (fontified t face (rainbow-delimiters-depth-2-face)) 232 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t face tree-sitter-hl-face:operator) 239 240 (fontified t) 240 241 (fontified t face tree-sitter-hl-face:number) 241 242 (fontified t face (rainbow-delimiters-depth-2-face)) 242 243 (fontified t face (rainbow-delimiters-depth-1-face)) 243 244 (fontified t) 244 245 (fontified t face tree-sitter-hl-face:operator) 245 251 (fontified t) 251 252 (fontified t face (rainbow-delimiters-depth-1-face)) 252 256 (fontified t face tree-sitter-hl-face:keyword) 256 257 (fontified t) 257 263 (fontified t face tree-sitter-hl-face:property) 263 264 (fontified t face (rainbow-delimiters-depth-2-face)) 264 269 (fontified t) 269 270 (fontified t face (rainbow-delimiters-depth-2-face)) 270 273 (fontified t) 273 277 (fontified t face tree-sitter-hl-face:keyword) 277 278 (fontified t) 278 284 (fontified t face tree-sitter-hl-face:property) 284 285 (fontified t face (rainbow-delimiters-depth-2-face)) 285 291 (fontified t) 291 292 (fontified t face tree-sitter-hl-face:operator) 292 293 (fontified t) 293 294 (fontified t face tree-sitter-hl-face:number) 294 295 (fontified t face (rainbow-delimiters-depth-2-face)) 295 296 (fontified t face (rainbow-delimiters-depth-1-face)) 296 297 (fontified t) 297 298 (fontified t face tree-sitter-hl-face:operator) 298 299 (fontified t) 299 303 (fontified t face tree-sitter-hl-face:keyword) 303 304 (fontified t) 304 307 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 307 310 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:property)) 310 311 (fontified t face (rainbow-delimiters-depth-1-face)) 311 316 (fontified t) 316 317 (fontified t face (rainbow-delimiters-depth-1-face)) 317 318 (fontified t) 318 319 (fontified t face tree-sitter-hl-face:operator) 319 320 (fontified t) 320 321 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 321 322 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 322 323 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 323 324 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 324 325 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 325 326 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 326 327 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 327 329 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 329 330 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 330 331 (fontified t face (rainbow-delimiters-depth-1-face)) 331 332 (fontified t face (rainbow-delimiters-depth-1-face)) 332 333 (fontified t face (rainbow-delimiters-depth-1-face)) 333 342 (fontified t) 342 343 (fontified t face (rainbow-delimiters-depth-2-face)) 343 347 (fontified t face tree-sitter-hl-face:keyword) 347 348 (fontified t) 348 354 (fontified t face tree-sitter-hl-face:property) 354 355 (fontified t face (rainbow-delimiters-depth-3-face)) 355 360 (fontified t) 360 361 (fontified t face (rainbow-delimiters-depth-3-face)) 361 364 (fontified t) 364 368 (fontified t face tree-sitter-hl-face:keyword) 368 369 (fontified t) 369 375 (fontified t face tree-sitter-hl-face:property) 375 376 (fontified t face (rainbow-delimiters-depth-3-face)) 376 382 (fontified t) 382 383 (fontified t face tree-sitter-hl-face:operator) 383 384 (fontified t) 384 385 (fontified t face tree-sitter-hl-face:number) 385 386 (fontified t face (rainbow-delimiters-depth-3-face)) 386 387 (fontified t face (rainbow-delimiters-depth-2-face)) 387 388 (fontified t face (rainbow-delimiters-depth-1-face)) 388 389 (fontified t)) . 1986) (undo-tree-id1330 . -389) (undo-tree-id1331 . -389) (undo-tree-id1332 . -39) (undo-tree-id1333 . -389) (undo-tree-id1334 . -389) 2375) nil (25891 65470 633960 861000) 0 nil])
([nil nil ((1838 . 1842) (1829 . 1830)) nil (25891 65470 633955 730000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1838) (undo-tree-id1329 . -4) 1842) nil (25891 65470 633954 559000) 0 nil])
([nil nil ((1838 . 1838) (1838 . 1839)) nil (25891 65470 633952 567000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1838) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) 1839) nil (25891 65470 633951 391000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1834) (undo-tree-id1325 . -4) (undo-tree-id1326 . -4) 1838) nil (25891 65470 633947 996000) 0 nil])
([nil nil ((1836 . 1836) (1836 . 1837) (1834 . 1834) (1834 . 1836)) nil (25891 65470 633944 881000) 0 nil])
([nil nil ((1837 . 1838)) nil (25891 65470 633943 608000) 0 nil])
([nil nil ((1838 . 1842) (#(" " 0 1 (fontified nil)) . 1837) (undo-tree-id1324 . -1) (1838 . 1839)) nil (25891 65470 633942 459000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2226 . 2227) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2214 . 2220) (nil fontified nil 2213 . 2214) (nil fontified nil 2207 . 2213) (nil fontified nil 2206 . 2207) (nil fontified nil 2202 . 2206) (nil fontified nil 2199 . 2202) (nil fontified nil 2198 . 2199) (nil fontified nil 2193 . 2198) (nil fontified nil 2192 . 2193) (nil fontified nil 2186 . 2192) (nil fontified nil 2185 . 2186) (nil fontified nil 2181 . 2185) (nil fontified nil 2180 . 2181) (nil fontified nil 2171 . 2180) (nil fontified nil 2170 . 2171) (nil fontified nil 2169 . 2170) (nil fontified nil 2168 . 2169) (nil fontified nil 2167 . 2168) (nil fontified nil 2165 . 2167) (nil fontified nil 2164 . 2165) (nil fontified nil 2163 . 2164) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2160 . 2161) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2155 . 2156) (nil fontified nil 2154 . 2155) (nil fontified nil 2149 . 2154) (nil fontified nil 2148 . 2149) (nil fontified nil 2145 . 2148) (nil fontified nil 2142 . 2145) (nil fontified nil 2141 . 2142) (nil fontified nil 2137 . 2141) (nil fontified nil 2136 . 2137) (nil fontified nil 2135 . 2136) (nil fontified nil 2134 . 2135) (nil fontified nil 2133 . 2134) (nil fontified nil 2132 . 2133) (nil fontified nil 2131 . 2132) (nil fontified nil 2130 . 2131) (nil fontified nil 2129 . 2130) (nil fontified nil 2123 . 2129) (nil fontified nil 2122 . 2123) (nil fontified nil 2116 . 2122) (nil fontified nil 2115 . 2116) (nil fontified nil 2111 . 2115) (nil fontified nil 2108 . 2111) (nil fontified nil 2107 . 2108) (nil fontified nil 2102 . 2107) (nil fontified nil 2101 . 2102) (nil fontified nil 2095 . 2101) (nil fontified nil 2094 . 2095) (nil fontified nil 2090 . 2094) (nil fontified nil 2089 . 2090) (nil fontified nil 2083 . 2089) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2070 . 2075) (nil fontified nil 2069 . 2070) (nil fontified nil 2063 . 2069) (nil fontified nil 2062 . 2063) (nil fontified nil 2058 . 2062) (nil fontified nil 2055 . 2058) (nil fontified nil 2054 . 2055) (nil fontified nil 2049 . 2054) (nil fontified nil 2048 . 2049) (nil fontified nil 2042 . 2048) (nil fontified nil 2041 . 2042) (nil fontified nil 2037 . 2041) (nil fontified nil 2036 . 2037) (nil fontified nil 2027 . 2036) (nil fontified nil 2019 . 2027) (nil fontified nil 2018 . 2019) (nil fontified nil 2017 . 2018) (nil fontified nil 2012 . 2017) (nil fontified nil 2011 . 2012) (nil fontified nil 2001 . 2011) (nil fontified nil 2000 . 2001) (nil fontified nil 1996 . 2000) (nil fontified nil 1995 . 1996) (nil fontified nil 1994 . 1995) (nil fontified nil 1993 . 1994) (nil fontified nil 1992 . 1993) (nil fontified nil 1991 . 1992) (nil fontified nil 1990 . 1991) (nil fontified nil 1989 . 1990) (nil fontified nil 1988 . 1989) (nil fontified nil 1982 . 1988) (nil fontified nil 1981 . 1982) (nil fontified nil 1975 . 1981) (nil fontified nil 1974 . 1975) (nil fontified nil 1970 . 1974) (nil fontified nil 1967 . 1970) (nil fontified nil 1966 . 1967) (nil fontified nil 1961 . 1966) (nil fontified nil 1960 . 1961) (nil fontified nil 1954 . 1960) (nil fontified nil 1953 . 1954) (nil fontified nil 1949 . 1953) (nil fontified nil 1948 . 1949) (nil fontified nil 1942 . 1948) (nil fontified nil 1941 . 1942) (nil fontified nil 1940 . 1941) (nil fontified nil 1939 . 1940) (nil fontified nil 1938 . 1939) (nil fontified nil 1937 . 1938) (nil fontified nil 1936 . 1937) (nil fontified nil 1935 . 1936) (nil fontified nil 1929 . 1935) (nil fontified nil 1928 . 1929) (nil fontified nil 1922 . 1928) (nil fontified nil 1921 . 1922) (nil fontified nil 1917 . 1921) (nil fontified nil 1914 . 1917) (nil fontified nil 1913 . 1914) (nil fontified nil 1908 . 1913) (nil fontified nil 1907 . 1908) (nil fontified nil 1901 . 1907) (nil fontified nil 1900 . 1901) (nil fontified nil 1896 . 1900) (nil fontified nil 1895 . 1896) (nil fontified nil 1886 . 1895) (nil fontified nil 1877 . 1886) (nil fontified nil 1876 . 1877) (nil fontified nil 1875 . 1876) (nil fontified nil 1870 . 1875) (nil fontified nil 1869 . 1870) (nil fontified nil 1865 . 1869) (nil fontified nil 1864 . 1865) (nil fontified nil 1859 . 1864) (nil fontified nil 1858 . 1859) (nil fontified nil 1856 . 1858) (nil fontified nil 1855 . 1856) (nil fontified nil 1850 . 1855) (nil fontified nil 1849 . 1850) (nil fontified nil 1846 . 1849) (nil fontified nil 1838 . 1846) (1838 . 2227)) nil (25891 65470 633934 222000) 0 nil])
([nil nil ((1840 . 1840) (1840 . 1841) (1839 . 1839) (1839 . 1840) (1837 . 1837) (1837 . 1839)) nil (25891 65470 633905 164000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1839) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#("a" 0 1 (fontified t)) . -1840) (undo-tree-id1323 . -1) 1841) nil (25891 65470 633902 996000) 0 nil])
([nil nil ((1854 . 1854) (1854 . 1855) (1853 . 1853) (1853 . 1854) (1852 . 1852) (1852 . 1853) (1851 . 1851) (1851 . 1852) (1850 . 1852) (#("(" 0 1 (fontified nil)) . -1850) (1850 . 1851) (1849 . 1849) (1849 . 1850) (1848 . 1848) (1848 . 1849) (1847 . 1847) (1847 . 1848) (1846 . 1846) (1846 . 1847) (1845 . 1845) (1845 . 1846) (1844 . 1844) (1844 . 1845) (1843 . 1843) (1843 . 1844) (1842 . 1842) (1842 . 1843) (1841 . 1841) (1841 . 1842) (1840 . 1840) (1840 . 1841) (1839 . 1839) (1839 . 1840)) nil (25891 65470 633896 830000) 0 nil])
([nil nil ((1856 . 1856) (1856 . 1857)) nil (25891 65470 633889 941000) 0 nil])
([nil nil ((1574 . 1574) (1574 . 1575) (1573 . 1573) (1573 . 1574) (1572 . 1572) (1572 . 1573) (1571 . 1571) (1571 . 1572) (1570 . 1570) (1570 . 1571)) nil (25891 65470 633888 231000) 0 nil])
([nil nil ((1697 . 1697) (1697 . 1698) (1696 . 1696) (1696 . 1697) (1695 . 1695) (1695 . 1696) (1694 . 1694) (1694 . 1695) (1693 . 1693) (1693 . 1694)) nil (25891 65470 633884 956000) 0 nil])
([nil nil ((1801 . 1801) (1801 . 1803) (1800 . 1800) (1800 . 1801) (1799 . 1799) (1799 . 1800) (1798 . 1798) (1798 . 1799)) nil (25891 65470 633882 200000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1799) (undo-tree-id1317 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1800) (undo-tree-id1318 . -1) (#(";" 0 1 (fontified t)) . -1801) (undo-tree-id1319 . -1) (#("f" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -1802) (undo-tree-id1320 . -1) 1803) nil (25891 65470 633878 298000) 0 nil])
([nil nil ((1802 . 1802) (1802 . 1803) (1801 . 1801) (1801 . 1802) (1800 . 1800) (1800 . 1801) (1799 . 1799) (1799 . 1800)) nil (25891 65470 633863 58000) 0 nil])
([nil nil ((1815 . 1815) (1815 . 1817)) nil (25891 65470 633860 517000) 0 nil])
([nil nil ((1819 . 1819) (1819 . 1820) (1818 . 1818) (1818 . 1819) (1817 . 1817) (1817 . 1818)) nil (25891 65470 633858 558000) 0 nil])
([nil nil ((1836 . 1836) (1836 . 1837) (1835 . 1835) (1835 . 1836) (1834 . 1834) (1834 . 1835) (1832 . 1832) (1832 . 1834)) nil (25891 65470 633851 389000) 0 nil])
([nil nil ((1186 . 1186) (1186 . 1187) (1185 . 1185) (1185 . 1186) (1184 . 1184) (1184 . 1185) (1183 . 1183) (1183 . 1184) (1182 . 1182) (1182 . 1183) (t 25891 65470 640360 462000)) nil (25891 65503 93447 837000) 0 nil])
([nil nil ((1353 . 1353) (1353 . 1354) (1352 . 1352) (1352 . 1353) (1351 . 1351) (1351 . 1352) (1350 . 1350) (1350 . 1351) (1349 . 1349) (1349 . 1350)) nil (25891 65503 93444 833000) 0 nil])
([nil nil ((1377 . 1377) (1377 . 1378) (1376 . 1376) (1376 . 1377) (1373 . 1373) (1373 . 1376)) nil (25891 65503 93442 127000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1169) (undo-tree-id1392 . -1) (#("s" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1170) (undo-tree-id1393 . -1) 1171) nil (25891 65503 93439 886000) 0 nil])
([nil nil ((1170 . 1170) (1170 . 1171) (1169 . 1169) (1169 . 1170)) nil (25891 65503 93437 111000) 0 nil])
([nil nil ((#("        return rec_input
" 0 8 (fontified t) 8 14 (fontified t face tree-sitter-hl-face:keyword) 14 24 (fontified t) 24 25 (fontified t)) . -1473) (undo-tree-id1388 . -25) (undo-tree-id1389 . -15) (undo-tree-id1390 . -24) (undo-tree-id1391 . -25) 1498) nil (25891 65503 93435 477000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1472) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) 1473) nil (25891 65503 93430 897000) 0 nil])
([nil nil ((1843 . 1855)) nil (25891 65503 93427 160000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1851) (undo-tree-id1384 . -4) 1855) nil (25891 65503 93425 262000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1847) (undo-tree-id1363 . -4) (undo-tree-id1364 . -4) (undo-tree-id1365 . -4) (undo-tree-id1366 . -4) (undo-tree-id1367 . -4) (undo-tree-id1368 . -4) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -4) (undo-tree-id1377 . -4) (undo-tree-id1378 . -4) (undo-tree-id1379 . -4) (undo-tree-id1380 . -4) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -4) 1851) nil (25891 65503 93418 683000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -2308) (undo-tree-id1400 . -12) 2320 (t 25891 65503 100252 34000)) nil (25891 65535 119704 619000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2317) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 2317) (#(" " 0 1 (fontified t)) . 2317) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("p" 0 1 (fontified nil face tree-sitter-hl-face:variable)) . 2317) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2317)) nil (25891 65535 119701 223000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349)) nil (25891 65535 119697 785000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2349) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 2349) (#(" " 0 1 (fontified t)) . 2349) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 2349)) nil (25891 65535 119694 953000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2366) (undo-tree-id1395 . -1) (#("a" 0 1 (fontified t)) . -2367) (undo-tree-id1396 . -1) (#("t" 0 1 (fontified t)) . -2368) (undo-tree-id1397 . -1) (#("e" 0 1 (fontified t)) . -2369) (undo-tree-id1398 . -1) (#("s" 0 1 (fontified t)) . -2370) (undo-tree-id1399 . -1) 2371) nil (25891 65535 119692 316000) 0 nil])
([nil nil ((#("rates" 0 5 (fontified t)) . 2334)) nil (25891 65535 119685 589000) 0 nil])
([nil nil ((2338 . 2338) (2338 . 2339) (2337 . 2337) (2337 . 2338) (2336 . 2336) (2336 . 2337) (2334 . 2334) (2334 . 2336)) nil (25891 65535 119684 287000) 0 nil])
([nil nil ((2321 . 2321) (2321 . 2322) (2320 . 2320) (2320 . 2321) (2319 . 2319) (2319 . 2320) (2318 . 2318) (2318 . 2319) (2317 . 2317) (2317 . 2318)) nil (25891 65535 119681 590000) 0 nil])
([nil nil ((2358 . 2358) (2358 . 2359) (2357 . 2357) (2357 . 2358) (2355 . 2355) (2355 . 2357) (2354 . 2354) (2354 . 2355)) nil (25891 65535 119678 218000) 0 nil])
([nil nil ((2379 . 2387) (#("        " 0 8 (fontified nil)) . 2378) (undo-tree-id1394 . -8) (2386 . 2387)) nil (25891 65535 119675 433000) 0 nil])
([nil nil ((2378 . 2386)) nil (25891 65535 119663 903000) 0 nil])
([nil nil ((2395 . 2403) (2391 . 2395) (2390 . 2390) (2390 . 2391) (2389 . 2389) (2389 . 2390) (2387 . 2387) (2387 . 2389) (2386 . 2386) (2386 . 2387)) nil (25891 65535 119661 688000) 0 nil])
([nil nil ((2403 . 2405) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -2403) (2403 . 2404)) nil (25891 65535 119653 37000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2414) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) 2415 (t 25891 65535 128144 441000)) nil (25892 28 619617 811000) 0 nil])
([nil nil ((2265 . 2277) (#("    " 0 4 (fontified t)) . 2265) (undo-tree-id1402 . -4) 2269) nil (25892 28 619607 630000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2273) (undo-tree-id1401 . -4) 2277) nil (25892 28 619600 897000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -2418) (undo-tree-id1412 . -8) (undo-tree-id1413 . -8) (undo-tree-id1414 . -8) (undo-tree-id1415 . -8) (undo-tree-id1416 . -8) (undo-tree-id1417 . -12) (undo-tree-id1418 . -12) (undo-tree-id1419 . -12) 2430 (t 25892 28 624044 851000)) nil (25892 53 353366 197000) 0 nil])
([nil nil ((1878 . 1878) (1878 . 1879) (1877 . 1877) (1877 . 1878) (1876 . 1876) (1876 . 1877) (1874 . 1874) (1874 . 1876) (1873 . 1873) (1873 . 1874) (t 25892 32 708031 24000)) nil (25892 94 624908 365000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -1503) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (#("r" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1504) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1505) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (#("c" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1506) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1507) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (#("i" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1508) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1509) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1510) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (#("u" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1511) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1512) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) 1513 (t 25892 32 708031 24000)) ((1503 . 1513)) (25892 53 351662 245000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable\.parameter)) . -1878) (undo-tree-id1745 . -1) 1879) nil (25892 94 624905 506000) 0 nil])
nil
([nil nil ((1879 . 1879) (1879 . 1881) (1878 . 1878) (1878 . 1879)) nil (25892 94 624903 488000) 0 nil])
([nil nil ((1883 . 1883) (1883 . 1884) (1882 . 1882) (1882 . 1883) (1881 . 1881) (1881 . 1882)) nil (25892 94 624902 71000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1559) (#("f" 0 1 (fontified t)) . 1559) (#("l" 0 1 (fontified t)) . 1559) (#("e" 0 1 (fontified t)) . 1559) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1559)) nil (25892 94 624899 770000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1677) (#("f" 0 1 (fontified t)) . 1677) (#("l" 0 1 (fontified t)) . 1677) (#("e" 0 1 (fontified t)) . 1677) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1677)) nil (25892 94 624897 743000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1777) (#("f" 0 1 (fontified t)) . 1777) (#("l" 0 1 (fontified t)) . 1777) (#("e" 0 1 (fontified t)) . 1777) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1777)) nil (25892 94 624895 796000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1806) (#("f" 0 1 (fontified t)) . 1806) (#("l" 0 1 (fontified t)) . 1806) (#("e" 0 1 (fontified t)) . 1806) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1806)) nil (25892 94 624893 882000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1789) (#("f" 0 1 (fontified t)) . 1789) (#("l" 0 1 (fontified t)) . 1789) (#("e" 0 1 (fontified t)) . 1789) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1789)) nil (25892 94 624891 821000) 0 nil])
([nil nil ((1819 . 1831) (#("    " 0 4 (fontified nil)) . 1818) (undo-tree-id1744 . -4) (1822 . 1823)) nil (25892 94 624889 996000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1827) (undo-tree-id1743 . -4) 1831) nil (25892 94 624887 550000) 0 nil])
([nil nil ((1842 . 1842) (1842 . 1843) (1841 . 1841) (1841 . 1842) (1840 . 1840) (1840 . 1841) (1839 . 1839) (1839 . 1840) (1838 . 1838) (1838 . 1839) (1837 . 1837) (1837 . 1838) (1835 . 1835) (1835 . 1837) (1833 . 1833) (1833 . 1835) (1831 . 1831) (1831 . 1833) (1829 . 1829) (1829 . 1831) (1828 . 1828) (1828 . 1829) (1827 . 1827) (1827 . 1828)) nil (25892 94 624884 424000) 0 nil])
([nil nil ((1843 . 1848)) nil (25892 94 624879 347000) 0 nil])
([nil nil ((1472 . 1489)) nil (25892 94 624878 478000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1485) (undo-tree-id1742 . -4) 1489) nil (25892 94 624877 306000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1481) (undo-tree-id1741 . -4) 1485) nil (25892 94 624875 53000) 0 nil])
([nil nil ((1492 . 1492) (1492 . 1493) (1491 . 1491) (1491 . 1492) (1490 . 1490) (1490 . 1491) (1487 . 1487) (1487 . 1490) (1485 . 1485) (1485 . 1487) (1484 . 1484) (1484 . 1485) (1483 . 1483) (1483 . 1484) (1482 . 1482) (1482 . 1483) (1481 . 1481) (1481 . 1482)) nil (25892 94 624872 99000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -1491) (undo-tree-id1739 . -1) (#("_" 0 1 (fontified t)) . -1492) (undo-tree-id1740 . -1) 1493) nil (25892 94 624867 959000) 0 nil])
([nil nil ((1496 . 1496) (1496 . 1497) (1495 . 1495) (1495 . 1496) (1494 . 1494) (1494 . 1495) (1493 . 1493) (1493 . 1494) (1492 . 1492) (1492 . 1493) (1491 . 1491) (1491 . 1492)) nil (25892 94 624864 361000) 0 nil])
([nil nil ((1497 . 1502)) nil (25892 94 624861 480000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1349) (#("f" 0 1 (fontified t)) . 1349) (#("l" 0 1 (fontified t)) . 1349) (#("e" 0 1 (fontified t)) . 1349) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1349)) nil (25892 94 624860 26000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1182) (#("f" 0 1 (fontified t)) . 1182) (#("l" 0 1 (fontified t)) . 1182) (#("e" 0 1 (fontified t)) . 1182) (#("s" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 1182)) nil (25892 94 624857 753000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1363) (undo-tree-id1735 . -1) (#("e" 0 1 (fontified t)) . -1364) (undo-tree-id1736 . -1) (#("l" 0 1 (fontified t)) . -1365) (undo-tree-id1737 . -1) (#("f" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -1366) (undo-tree-id1738 . -1) 1367) nil (25892 94 624853 699000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1363)) nil (25892 94 624830 362000) 0 nil])
([nil nil ((1457 . 1473) (t 25892 94 631820 372000)) nil (25892 96 717548 732000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1469) (undo-tree-id1773 . -4) 1473) nil (25892 96 717546 549000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1465) (undo-tree-id1746 . -4) (undo-tree-id1747 . -4) (undo-tree-id1748 . -4) (undo-tree-id1749 . -4) (undo-tree-id1750 . -4) (undo-tree-id1751 . -4) (undo-tree-id1752 . -4) (undo-tree-id1753 . -4) (undo-tree-id1754 . -4) (undo-tree-id1755 . -4) (undo-tree-id1756 . -4) (undo-tree-id1757 . -4) (undo-tree-id1758 . -4) (undo-tree-id1759 . -4) (undo-tree-id1760 . -4) (undo-tree-id1761 . -4) (undo-tree-id1762 . -4) (undo-tree-id1763 . -4) (undo-tree-id1764 . -4) (undo-tree-id1765 . -4) (undo-tree-id1766 . -4) (undo-tree-id1767 . -4) (undo-tree-id1768 . -4) (undo-tree-id1769 . -4) (undo-tree-id1770 . -4) (undo-tree-id1771 . -4) (undo-tree-id1772 . -4) 1469) nil (25892 96 717538 967000) 0 nil])
([nil nil ((2358 . 2359) (2357 . 2357) (2357 . 2358) (2356 . 2356) (2356 . 2357) (t 25892 96 723813 223000)) nil (25892 130 670407 671000) 0 nil])
([nil nil ((2365 . 2368) (2364 . 2364) (2364 . 2365) (2363 . 2363) (2363 . 2364) (2362 . 2362) (2362 . 2363) (2361 . 2361) (2361 . 2362) (2360 . 2360) (2360 . 2361) (2359 . 2359) (2359 . 2360)) nil (25892 130 670405 471000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2365) (undo-tree-id1780 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -2366) (undo-tree-id1781 . -1) (#(" " 0 1 (fontified t)) . -2367) (undo-tree-id1782 . -1) 2368) nil (25892 130 670402 11000) 0 nil])
([nil nil ((2366 . 2367) (2365 . 2365) (2365 . 2366)) nil (25892 130 670398 27000) 0 nil])
([nil nil ((2365 . 2366)) nil (25892 130 670396 984000) 0 nil])
([nil nil ((2407 . 2407) (2407 . 2408) (2406 . 2406) (2406 . 2407) (2405 . 2405) (2405 . 2406)) nil (25892 130 670396 13000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2407) (undo-tree-id1779 . -1) 2408) nil (25892 130 670394 369000) 0 nil])
([nil nil ((2414 . 2417) (2413 . 2413) (2413 . 2414) (2412 . 2412) (2412 . 2413) (2411 . 2411) (2411 . 2412) (2410 . 2410) (2410 . 2411) (2409 . 2409) (2409 . 2410) (2408 . 2408) (2408 . 2409) (2407 . 2407) (2407 . 2408)) nil (25892 130 670392 39000) 0 nil])
([nil nil ((2439 . 2439) (2439 . 2441)) nil (25892 130 670388 893000) 0 nil])
([nil nil ((2442 . 2442) (2442 . 2443) (2441 . 2441) (2441 . 2442)) nil (25892 130 670387 484000) 0 nil])
([nil nil ((#("è" 0 1 (fontified t)) . -2442) (undo-tree-id1778 . -1) 2443) nil (25892 130 670386 30000) 0 nil])
([nil nil ((2446 . 2446) (2446 . 2448) (2445 . 2445) (2445 . 2446) (2444 . 2444) (2444 . 2445) (2443 . 2443) (2443 . 2444) (2442 . 2442) (2442 . 2443)) nil (25892 130 670383 784000) 0 nil])
([nil nil ((2483 . 2483) (2483 . 2484) (2482 . 2482) (2482 . 2483) (2481 . 2481) (2481 . 2482) (2480 . 2480) (2480 . 2481) (2479 . 2479) (2479 . 2480) (2478 . 2478) (2478 . 2479) (2477 . 2477) (2477 . 2478) (2476 . 2476) (2476 . 2477)) nil (25892 130 670380 960000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2483) (undo-tree-id1777 . -1) 2484) nil (25892 130 670377 425000) 0 nil])
([nil nil ((2484 . 2484) (2484 . 2485) (2483 . 2483) (2483 . 2484)) nil (25892 130 670375 549000) 0 nil])
([nil nil ((2313 . 2313) (2313 . 2314) (2312 . 2312) (2312 . 2313) (2311 . 2311) (2311 . 2312) (2310 . 2310) (2310 . 2311) (2308 . 2308) (2308 . 2310)) nil (25892 130 670373 768000) 0 nil])
([nil nil ((2314 . 2319)) nil (25892 130 670371 318000) 0 nil])
([nil nil ((2301 . 2313) (#("    " 0 4 (fontified nil)) . 2301) (undo-tree-id1775 . -4) (#("    " 0 4 (fontified nil)) . 2300) (undo-tree-id1776 . -4) (2304 . 2305)) nil (25892 130 670369 933000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2309) (undo-tree-id1774 . -4) 2313) nil (25892 130 670365 367000) 0 nil])
([nil nil ((2320 . 2321) (2319 . 2319) (2319 . 2320) (2318 . 2318) (2318 . 2319) (2315 . 2315) (2315 . 2318)) nil (25892 130 670352 415000) 0 nil])
([nil nil ((2481 . 2484) (2480 . 2480) (2480 . 2481) (2478 . 2478) (2478 . 2480) (2477 . 2477) (2477 . 2478) (2476 . 2476) (2476 . 2477)) nil (25892 130 670344 936000) 0 nil])
([nil nil ((#("net_input" 0 9 (fontified t face tree-sitter-hl-face:variable\.parameter)) . 1899) (undo-tree-id1783 . -9) (t 25892 130 675696 934000)) nil (25892 147 999308 862000) 0 nil])
([nil nil ((1903 . 1903) (1903 . 1904) (1901 . 1901) (1901 . 1903) (1900 . 1900) (1900 . 1901) (1899 . 1899) (1899 . 1900)) nil (25892 147 999291 24000) 0 nil])
([nil nil ((1914 . 1914) (1914 . 1915) (1913 . 1913) (1913 . 1914) (1912 . 1912) (1912 . 1913) (1911 . 1911) (1911 . 1912) (1910 . 1910) (1910 . 1911) (1909 . 1909) (1909 . 1910) (1907 . 1907) (1907 . 1909) (1904 . 1904) (1904 . 1907) (t 25892 148 7637 377000)) nil (25892 158 542398 106000) 0 nil])
([nil nil ((2514 . 2514) (2514 . 2515) (2513 . 2513) (2513 . 2514) (2512 . 2512) (2512 . 2513) (2511 . 2511) (2511 . 2512) (2509 . 2509) (2509 . 2511)) nil (25892 158 542393 887000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2513) (undo-tree-id1784 . -1) (#("s" 0 1 (fontified t)) . -2514) (undo-tree-id1785 . -1) 2515) nil (25892 158 542389 662000) 0 nil])
([nil nil ((2515 . 2516) (2514 . 2514) (2514 . 2515) (2513 . 2513) (2513 . 2514)) nil (25892 158 542370 427000) 0 nil])
([nil nil ((2642 . 2643) (t 25892 158 547601 97000)) nil (25892 231 886436 731000) 0 nil])
([nil current ((#("    " 0 4 (fontified t)) . -8050) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -4) (undo-tree-id1796 . -4) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) 8054 (t 25892 231 895347 434000)) nil (25892 236 935264 781000) 0 nil])
nil
